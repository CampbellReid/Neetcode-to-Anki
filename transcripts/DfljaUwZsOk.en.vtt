WEBVTT
Kind: captions
Language: en

00:00:00.160 --> 00:00:01.670 align:start position:0%
 
everyone<00:00:00.560><c> welcome</c><00:00:00.960><c> back</c><00:00:01.199><c> and</c><00:00:01.280><c> let's</c><00:00:01.520><c> write</c>

00:00:01.670 --> 00:00:01.680 align:start position:0%
everyone welcome back and let's write
 

00:00:01.680 --> 00:00:03.669 align:start position:0%
everyone welcome back and let's write
some<00:00:01.839><c> more</c><00:00:02.000><c> neat</c><00:00:02.240><c> code</c><00:00:02.560><c> today</c><00:00:02.879><c> let's</c><00:00:03.199><c> look</c><00:00:03.520><c> at</c>

00:00:03.669 --> 00:00:03.679 align:start position:0%
some more neat code today let's look at
 

00:00:03.679 --> 00:00:05.910 align:start position:0%
some more neat code today let's look at
a<00:00:03.840><c> sliding</c><00:00:04.240><c> window</c><00:00:04.640><c> problem</c><00:00:05.040><c> a</c><00:00:05.200><c> hard</c><00:00:05.600><c> sliding</c>

00:00:05.910 --> 00:00:05.920 align:start position:0%
a sliding window problem a hard sliding
 

00:00:05.920 --> 00:00:06.789 align:start position:0%
a sliding window problem a hard sliding
window<00:00:06.319><c> problem</c>

00:00:06.789 --> 00:00:06.799 align:start position:0%
window problem
 

00:00:06.799 --> 00:00:09.509 align:start position:0%
window problem
sliding<00:00:07.279><c> window</c><00:00:07.839><c> maximum</c><00:00:08.559><c> the</c><00:00:08.800><c> statement</c><00:00:09.360><c> is</c>

00:00:09.509 --> 00:00:09.519 align:start position:0%
sliding window maximum the statement is
 

00:00:09.519 --> 00:00:09.910 align:start position:0%
sliding window maximum the statement is
pretty

00:00:09.910 --> 00:00:09.920 align:start position:0%
pretty
 

00:00:09.920 --> 00:00:11.990 align:start position:0%
pretty
straightforward<00:00:10.719><c> actually</c><00:00:11.200><c> so</c><00:00:11.360><c> we're</c><00:00:11.599><c> given</c>

00:00:11.990 --> 00:00:12.000 align:start position:0%
straightforward actually so we're given
 

00:00:12.000 --> 00:00:13.830 align:start position:0%
straightforward actually so we're given
an<00:00:12.240><c> array</c><00:00:12.880><c> of</c><00:00:13.200><c> numbers</c>

00:00:13.830 --> 00:00:13.840 align:start position:0%
an array of numbers
 

00:00:13.840 --> 00:00:16.870 align:start position:0%
an array of numbers
and<00:00:14.240><c> we</c><00:00:14.559><c> also</c><00:00:14.960><c> are</c><00:00:15.120><c> given</c><00:00:15.599><c> a</c><00:00:15.679><c> number</c><00:00:16.240><c> k</c><00:00:16.640><c> which</c>

00:00:16.870 --> 00:00:16.880 align:start position:0%
and we also are given a number k which
 

00:00:16.880 --> 00:00:19.109 align:start position:0%
and we also are given a number k which
is<00:00:16.960><c> going</c><00:00:17.119><c> to</c><00:00:17.199><c> represent</c><00:00:17.760><c> the</c><00:00:18.080><c> size</c><00:00:18.640><c> of</c><00:00:18.880><c> our</c>

00:00:19.109 --> 00:00:19.119 align:start position:0%
is going to represent the size of our
 

00:00:19.119 --> 00:00:21.590 align:start position:0%
is going to represent the size of our
sliding<00:00:19.680><c> window</c><00:00:20.240><c> it</c><00:00:20.480><c> starts</c><00:00:20.880><c> at</c><00:00:21.039><c> the</c><00:00:21.199><c> very</c>

00:00:21.590 --> 00:00:21.600 align:start position:0%
sliding window it starts at the very
 

00:00:21.600 --> 00:00:22.070 align:start position:0%
sliding window it starts at the very
left

00:00:22.070 --> 00:00:22.080 align:start position:0%
left
 

00:00:22.080 --> 00:00:25.349 align:start position:0%
left
and<00:00:22.240><c> then</c><00:00:22.960><c> works</c><00:00:23.279><c> its</c><00:00:23.519><c> way</c><00:00:23.680><c> to</c><00:00:23.840><c> the</c><00:00:24.080><c> right</c><00:00:24.640><c> and</c>

00:00:25.349 --> 00:00:25.359 align:start position:0%
and then works its way to the right and
 

00:00:25.359 --> 00:00:28.070 align:start position:0%
and then works its way to the right and
so<00:00:25.840><c> since</c><00:00:26.240><c> it</c><00:00:26.400><c> has</c><00:00:26.720><c> and</c><00:00:26.880><c> so</c><00:00:27.119><c> since</c><00:00:27.359><c> it's</c><00:00:27.519><c> size</c><00:00:27.840><c> k</c>

00:00:28.070 --> 00:00:28.080 align:start position:0%
so since it has and so since it's size k
 

00:00:28.080 --> 00:00:29.349 align:start position:0%
so since it has and so since it's size k
there's<00:00:28.240><c> only</c><00:00:28.400><c> going</c><00:00:28.480><c> to</c><00:00:28.560><c> be</c><00:00:28.720><c> k</c><00:00:28.960><c> numbers</c>

00:00:29.349 --> 00:00:29.359 align:start position:0%
there's only going to be k numbers
 

00:00:29.359 --> 00:00:29.990 align:start position:0%
there's only going to be k numbers
inside<00:00:29.760><c> the</c>

00:00:29.990 --> 00:00:30.000 align:start position:0%
inside the
 

00:00:30.000 --> 00:00:32.549 align:start position:0%
inside the
window<00:00:30.400><c> and</c><00:00:30.880><c> for</c><00:00:31.119><c> each</c><00:00:31.519><c> position</c><00:00:32.160><c> that</c><00:00:32.320><c> the</c>

00:00:32.549 --> 00:00:32.559 align:start position:0%
window and for each position that the
 

00:00:32.559 --> 00:00:33.670 align:start position:0%
window and for each position that the
window<00:00:32.960><c> is</c><00:00:33.200><c> in</c>

00:00:33.670 --> 00:00:33.680 align:start position:0%
window is in
 

00:00:33.680 --> 00:00:37.110 align:start position:0%
window is in
we<00:00:33.920><c> want</c><00:00:34.079><c> to</c><00:00:34.239><c> return</c><00:00:35.200><c> the</c><00:00:35.520><c> max</c><00:00:36.239><c> value</c><00:00:36.800><c> so</c><00:00:36.960><c> you</c>

00:00:37.110 --> 00:00:37.120 align:start position:0%
we want to return the max value so you
 

00:00:37.120 --> 00:00:38.150 align:start position:0%
we want to return the max value so you
can<00:00:37.280><c> see</c><00:00:37.440><c> that</c><00:00:37.680><c> this</c>

00:00:38.150 --> 00:00:38.160 align:start position:0%
can see that this
 

00:00:38.160 --> 00:00:41.430 align:start position:0%
can see that this
is<00:00:38.320><c> our</c><00:00:38.559><c> input</c><00:00:38.960><c> array</c><00:00:39.680><c> and</c><00:00:40.160><c> our</c><00:00:40.719><c> our</c><00:00:40.879><c> window</c><00:00:41.280><c> is</c>

00:00:41.430 --> 00:00:41.440 align:start position:0%
is our input array and our our window is
 

00:00:41.440 --> 00:00:42.229 align:start position:0%
is our input array and our our window is
going<00:00:41.520><c> to</c><00:00:41.600><c> be</c><00:00:41.840><c> size</c>

00:00:42.229 --> 00:00:42.239 align:start position:0%
going to be size
 

00:00:42.239 --> 00:00:45.430 align:start position:0%
going to be size
3<00:00:42.719><c> so</c><00:00:43.120><c> this</c><00:00:43.600><c> is</c><00:00:43.760><c> our</c><00:00:44.079><c> first</c><00:00:44.480><c> window</c>

00:00:45.430 --> 00:00:45.440 align:start position:0%
3 so this is our first window
 

00:00:45.440 --> 00:00:48.950 align:start position:0%
3 so this is our first window
and<00:00:45.680><c> the</c><00:00:45.840><c> maximum</c><00:00:46.399><c> value</c><00:00:47.039><c> is</c><00:00:47.760><c> 3</c>

00:00:48.950 --> 00:00:48.960 align:start position:0%
and the maximum value is 3
 

00:00:48.960 --> 00:00:52.069 align:start position:0%
and the maximum value is 3
so<00:00:49.200><c> then</c><00:00:50.000><c> we</c><00:00:50.239><c> see</c><00:00:50.559><c> and</c><00:00:50.640><c> then</c><00:00:50.800><c> we</c><00:00:51.039><c> add</c><00:00:51.280><c> a</c><00:00:51.520><c> 3</c><00:00:51.840><c> to</c>

00:00:52.069 --> 00:00:52.079 align:start position:0%
so then we see and then we add a 3 to
 

00:00:52.079 --> 00:00:52.310 align:start position:0%
so then we see and then we add a 3 to
our

00:00:52.310 --> 00:00:52.320 align:start position:0%
our
 

00:00:52.320 --> 00:00:54.549 align:start position:0%
our
output<00:00:52.960><c> array</c><00:00:53.520><c> so</c><00:00:53.680><c> the</c><00:00:53.840><c> output</c><00:00:54.239><c> is</c><00:00:54.320><c> going</c><00:00:54.480><c> to</c>

00:00:54.549 --> 00:00:54.559 align:start position:0%
output array so the output is going to
 

00:00:54.559 --> 00:00:55.590 align:start position:0%
output array so the output is going to
be<00:00:54.719><c> an</c><00:00:54.879><c> array</c>

00:00:55.590 --> 00:00:55.600 align:start position:0%
be an array
 

00:00:55.600 --> 00:00:58.389 align:start position:0%
be an array
next<00:00:56.160><c> next</c><00:00:56.559><c> we</c><00:00:56.800><c> see</c><00:00:57.199><c> that</c><00:00:57.520><c> this</c><00:00:57.760><c> is</c><00:00:57.920><c> the</c><00:00:58.079><c> next</c>

00:00:58.389 --> 00:00:58.399 align:start position:0%
next next we see that this is the next
 

00:00:58.399 --> 00:00:59.029 align:start position:0%
next next we see that this is the next
position

00:00:59.029 --> 00:00:59.039 align:start position:0%
position
 

00:00:59.039 --> 00:01:01.590 align:start position:0%
position
of<00:00:59.120><c> the</c><00:00:59.280><c> sliding</c><00:00:59.760><c> window</c><00:01:00.640><c> and</c><00:01:00.879><c> the</c><00:01:01.039><c> maximum</c>

00:01:01.590 --> 00:01:01.600 align:start position:0%
of the sliding window and the maximum
 

00:01:01.600 --> 00:01:02.709 align:start position:0%
of the sliding window and the maximum
value<00:01:02.079><c> in</c><00:01:02.160><c> this</c><00:01:02.320><c> case</c>

00:01:02.709 --> 00:01:02.719 align:start position:0%
value in this case
 

00:01:02.719 --> 00:01:06.149 align:start position:0%
value in this case
is<00:01:02.960><c> still</c><00:01:03.520><c> three</c><00:01:04.080><c> so</c><00:01:04.320><c> we</c><00:01:04.479><c> put</c><00:01:04.720><c> a</c><00:01:04.960><c> three</c><00:01:05.680><c> in</c><00:01:05.840><c> our</c>

00:01:06.149 --> 00:01:06.159 align:start position:0%
is still three so we put a three in our
 

00:01:06.159 --> 00:01:08.870 align:start position:0%
is still three so we put a three in our
output<00:01:06.960><c> and</c><00:01:07.200><c> the</c><00:01:07.360><c> next</c><00:01:07.600><c> position</c><00:01:08.080><c> we</c><00:01:08.320><c> see</c><00:01:08.720><c> that</c>

00:01:08.870 --> 00:01:08.880 align:start position:0%
output and the next position we see that
 

00:01:08.880 --> 00:01:11.350 align:start position:0%
output and the next position we see that
this<00:01:09.119><c> is</c><00:01:09.200><c> our</c><00:01:09.360><c> window</c><00:01:09.680><c> the</c><00:01:09.840><c> maximum</c><00:01:10.400><c> value</c><00:01:10.880><c> is</c>

00:01:11.350 --> 00:01:11.360 align:start position:0%
this is our window the maximum value is
 

00:01:11.360 --> 00:01:14.710 align:start position:0%
this is our window the maximum value is
five<00:01:12.000><c> so</c><00:01:12.159><c> we</c><00:01:12.320><c> put</c><00:01:12.560><c> a</c><00:01:12.720><c> five</c><00:01:13.119><c> in</c><00:01:13.200><c> the</c><00:01:13.360><c> output</c><00:01:14.080><c> now</c>

00:01:14.710 --> 00:01:14.720 align:start position:0%
five so we put a five in the output now
 

00:01:14.720 --> 00:01:17.190 align:start position:0%
five so we put a five in the output now
you<00:01:14.880><c> might</c><00:01:15.200><c> recognize</c><00:01:16.240><c> one</c><00:01:16.479><c> solution</c><00:01:16.880><c> to</c><00:01:17.040><c> this</c>

00:01:17.190 --> 00:01:17.200 align:start position:0%
you might recognize one solution to this
 

00:01:17.200 --> 00:01:17.749 align:start position:0%
you might recognize one solution to this
problem

00:01:17.749 --> 00:01:17.759 align:start position:0%
problem
 

00:01:17.759 --> 00:01:21.190 align:start position:0%
problem
immediately<00:01:18.640><c> for</c><00:01:19.040><c> each</c><00:01:19.439><c> of</c><00:01:19.600><c> these</c><00:01:20.159><c> windows</c>

00:01:21.190 --> 00:01:21.200 align:start position:0%
immediately for each of these windows
 

00:01:21.200 --> 00:01:23.910 align:start position:0%
immediately for each of these windows
why<00:01:21.439><c> don't</c><00:01:21.680><c> we</c><00:01:21.840><c> just</c><00:01:22.159><c> scan</c><00:01:22.880><c> through</c><00:01:23.200><c> the</c><00:01:23.360><c> array</c>

00:01:23.910 --> 00:01:23.920 align:start position:0%
why don't we just scan through the array
 

00:01:23.920 --> 00:01:24.789 align:start position:0%
why don't we just scan through the array
right<00:01:24.240><c> like</c>

00:01:24.789 --> 00:01:24.799 align:start position:0%
right like
 

00:01:24.799 --> 00:01:27.190 align:start position:0%
right like
it's<00:01:25.040><c> pretty</c><00:01:25.520><c> easy</c><00:01:25.840><c> to</c><00:01:26.000><c> find</c><00:01:26.240><c> the</c><00:01:26.479><c> maximum</c><00:01:27.040><c> in</c>

00:01:27.190 --> 00:01:27.200 align:start position:0%
it's pretty easy to find the maximum in
 

00:01:27.200 --> 00:01:29.109 align:start position:0%
it's pretty easy to find the maximum in
an<00:01:27.360><c> array</c><00:01:27.759><c> right</c><00:01:28.000><c> like</c><00:01:28.240><c> if</c><00:01:28.320><c> we</c><00:01:28.479><c> had</c><00:01:28.640><c> one</c><00:01:28.880><c> two</c>

00:01:29.109 --> 00:01:29.119 align:start position:0%
an array right like if we had one two
 

00:01:29.119 --> 00:01:29.830 align:start position:0%
an array right like if we had one two
three

00:01:29.830 --> 00:01:29.840 align:start position:0%
three
 

00:01:29.840 --> 00:01:32.789 align:start position:0%
three
we<00:01:30.000><c> just</c><00:01:30.240><c> check</c><00:01:30.640><c> every</c><00:01:30.960><c> value</c><00:01:31.840><c> and</c><00:01:32.079><c> see</c><00:01:32.479><c> okay</c>

00:01:32.789 --> 00:01:32.799 align:start position:0%
we just check every value and see okay
 

00:01:32.799 --> 00:01:33.830 align:start position:0%
we just check every value and see okay
this<00:01:32.960><c> is</c><00:01:33.040><c> the</c><00:01:33.200><c> maximum</c>

00:01:33.830 --> 00:01:33.840 align:start position:0%
this is the maximum
 

00:01:33.840 --> 00:01:37.350 align:start position:0%
this is the maximum
and<00:01:33.920><c> then</c><00:01:34.159><c> we</c><00:01:34.320><c> just</c><00:01:34.560><c> shift</c><00:01:34.960><c> our</c><00:01:35.200><c> window</c><00:01:36.159><c> by</c><00:01:36.479><c> one</c>

00:01:37.350 --> 00:01:37.360 align:start position:0%
and then we just shift our window by one
 

00:01:37.360 --> 00:01:39.190 align:start position:0%
and then we just shift our window by one
into<00:01:37.680><c> the</c><00:01:37.759><c> next</c><00:01:38.000><c> position</c><00:01:38.479><c> right</c><00:01:38.720><c> and</c><00:01:38.799><c> we</c><00:01:38.960><c> keep</c>

00:01:39.190 --> 00:01:39.200 align:start position:0%
into the next position right and we keep
 

00:01:39.200 --> 00:01:40.710 align:start position:0%
into the next position right and we keep
doing<00:01:39.360><c> that</c><00:01:39.520><c> until</c><00:01:39.840><c> we're</c><00:01:40.000><c> done</c><00:01:40.240><c> well</c><00:01:40.479><c> the</c>

00:01:40.710 --> 00:01:40.720 align:start position:0%
doing that until we're done well the
 

00:01:40.720 --> 00:01:42.550 align:start position:0%
doing that until we're done well the
time<00:01:41.040><c> complexity</c><00:01:41.759><c> of</c><00:01:41.920><c> this</c>

00:01:42.550 --> 00:01:42.560 align:start position:0%
time complexity of this
 

00:01:42.560 --> 00:01:45.109 align:start position:0%
time complexity of this
is<00:01:42.799><c> going</c><00:01:42.960><c> to</c><00:01:43.119><c> be</c><00:01:43.520><c> roughly</c><00:01:44.320><c> since</c><00:01:44.560><c> the</c><00:01:44.799><c> size</c>

00:01:45.109 --> 00:01:45.119 align:start position:0%
is going to be roughly since the size
 

00:01:45.119 --> 00:01:45.910 align:start position:0%
is going to be roughly since the size
for<00:01:45.200><c> our</c><00:01:45.280><c> window</c><00:01:45.600><c> is</c>

00:01:45.910 --> 00:01:45.920 align:start position:0%
for our window is
 

00:01:45.920 --> 00:01:48.630 align:start position:0%
for our window is
k<00:01:47.040><c> how</c><00:01:47.280><c> many</c><00:01:47.520><c> windows</c><00:01:47.920><c> are</c><00:01:48.000><c> we</c><00:01:48.159><c> actually</c><00:01:48.479><c> going</c>

00:01:48.630 --> 00:01:48.640 align:start position:0%
k how many windows are we actually going
 

00:01:48.640 --> 00:01:50.069 align:start position:0%
k how many windows are we actually going
to<00:01:48.720><c> have</c><00:01:49.040><c> let's</c><00:01:49.280><c> say</c><00:01:49.520><c> the</c>

00:01:50.069 --> 00:01:50.079 align:start position:0%
to have let's say the
 

00:01:50.079 --> 00:01:53.109 align:start position:0%
to have let's say the
entire<00:01:50.960><c> input</c><00:01:51.520><c> is</c><00:01:51.759><c> length</c><00:01:52.320><c> n</c>

00:01:53.109 --> 00:01:53.119 align:start position:0%
entire input is length n
 

00:01:53.119 --> 00:01:54.950 align:start position:0%
entire input is length n
in<00:01:53.280><c> that</c><00:01:53.600><c> case</c><00:01:53.920><c> we're</c><00:01:54.079><c> going</c><00:01:54.159><c> to</c><00:01:54.240><c> have</c><00:01:54.399><c> roughly</c>

00:01:54.950 --> 00:01:54.960 align:start position:0%
in that case we're going to have roughly
 

00:01:54.960 --> 00:01:56.230 align:start position:0%
in that case we're going to have roughly
k<00:01:55.520><c> times</c>

00:01:56.230 --> 00:01:56.240 align:start position:0%
k times
 

00:01:56.240 --> 00:02:00.149 align:start position:0%
k times
n<00:01:57.200><c> minus</c><00:01:57.920><c> k</c><00:01:58.799><c> that's</c><00:01:59.040><c> how</c><00:01:59.200><c> many</c><00:01:59.520><c> windows</c><00:02:00.000><c> we're</c>

00:02:00.149 --> 00:02:00.159 align:start position:0%
n minus k that's how many windows we're
 

00:02:00.159 --> 00:02:01.270 align:start position:0%
n minus k that's how many windows we're
going<00:02:00.320><c> to</c><00:02:00.399><c> have</c><00:02:00.719><c> right</c>

00:02:01.270 --> 00:02:01.280 align:start position:0%
going to have right
 

00:02:01.280 --> 00:02:04.550 align:start position:0%
going to have right
and<00:02:01.439><c> so</c><00:02:02.320><c> this</c><00:02:02.719><c> is</c><00:02:02.960><c> going</c><00:02:03.119><c> to</c><00:02:03.280><c> be</c><00:02:03.680><c> our</c><00:02:04.240><c> time</c>

00:02:04.550 --> 00:02:04.560 align:start position:0%
and so this is going to be our time
 

00:02:04.560 --> 00:02:05.590 align:start position:0%
and so this is going to be our time
complexity<00:02:05.200><c> but</c>

00:02:05.590 --> 00:02:05.600 align:start position:0%
complexity but
 

00:02:05.600 --> 00:02:08.150 align:start position:0%
complexity but
i'm<00:02:06.000><c> asking</c><00:02:06.640><c> is</c><00:02:06.799><c> there</c><00:02:07.119><c> a</c><00:02:07.280><c> better</c><00:02:07.600><c> solution</c>

00:02:08.150 --> 00:02:08.160 align:start position:0%
i'm asking is there a better solution
 

00:02:08.160 --> 00:02:08.790 align:start position:0%
i'm asking is there a better solution
can<00:02:08.399><c> we</c>

00:02:08.790 --> 00:02:08.800 align:start position:0%
can we
 

00:02:08.800 --> 00:02:11.670 align:start position:0%
can we
actually<00:02:09.599><c> make</c><00:02:10.080><c> a</c><00:02:10.399><c> linear</c><00:02:10.879><c> time</c><00:02:11.200><c> solution</c>

00:02:11.670 --> 00:02:11.680 align:start position:0%
actually make a linear time solution
 

00:02:11.680 --> 00:02:11.990 align:start position:0%
actually make a linear time solution
where

00:02:11.990 --> 00:02:12.000 align:start position:0%
where
 

00:02:12.000 --> 00:02:14.869 align:start position:0%
where
n<00:02:12.319><c> is</c><00:02:12.480><c> the</c><00:02:12.720><c> size</c><00:02:13.200><c> of</c><00:02:13.440><c> the</c><00:02:13.680><c> input</c><00:02:14.080><c> array</c><00:02:14.560><c> and</c><00:02:14.720><c> the</c>

00:02:14.869 --> 00:02:14.879 align:start position:0%
n is the size of the input array and the
 

00:02:14.879 --> 00:02:16.070 align:start position:0%
n is the size of the input array and the
answer<00:02:15.360><c> is</c>

00:02:16.070 --> 00:02:16.080 align:start position:0%
answer is
 

00:02:16.080 --> 00:02:18.390 align:start position:0%
answer is
yes<00:02:16.959><c> and</c><00:02:17.120><c> i'm</c><00:02:17.280><c> going</c><00:02:17.360><c> to</c><00:02:17.520><c> show</c><00:02:17.680><c> you</c><00:02:17.920><c> how</c><00:02:18.080><c> to</c><00:02:18.160><c> do</c>

00:02:18.390 --> 00:02:18.400 align:start position:0%
yes and i'm going to show you how to do
 

00:02:18.400 --> 00:02:19.430 align:start position:0%
yes and i'm going to show you how to do
that<00:02:18.720><c> right</c><00:02:18.959><c> now</c>

00:02:19.430 --> 00:02:19.440 align:start position:0%
that right now
 

00:02:19.440 --> 00:02:21.030 align:start position:0%
that right now
so<00:02:19.680><c> i'm</c><00:02:19.840><c> going</c><00:02:19.920><c> to</c><00:02:20.080><c> show</c><00:02:20.239><c> you</c><00:02:20.480><c> the</c><00:02:20.800><c> best</c>

00:02:21.030 --> 00:02:21.040 align:start position:0%
so i'm going to show you the best
 

00:02:21.040 --> 00:02:22.790 align:start position:0%
so i'm going to show you the best
solution<00:02:21.599><c> but</c><00:02:21.920><c> one</c><00:02:22.160><c> thing</c><00:02:22.319><c> you</c><00:02:22.480><c> have</c><00:02:22.560><c> to</c>

00:02:22.790 --> 00:02:22.800 align:start position:0%
solution but one thing you have to
 

00:02:22.800 --> 00:02:23.510 align:start position:0%
solution but one thing you have to
notice

00:02:23.510 --> 00:02:23.520 align:start position:0%
notice
 

00:02:23.520 --> 00:02:26.630 align:start position:0%
notice
first<00:02:24.080><c> is</c><00:02:24.400><c> this</c><00:02:25.120><c> so</c><00:02:25.360><c> let's</c><00:02:25.599><c> say</c><00:02:26.000><c> this</c><00:02:26.319><c> is</c><00:02:26.480><c> our</c>

00:02:26.630 --> 00:02:26.640 align:start position:0%
first is this so let's say this is our
 

00:02:26.640 --> 00:02:28.710 align:start position:0%
first is this so let's say this is our
input<00:02:26.959><c> array</c><00:02:27.280><c> we</c><00:02:27.440><c> have</c><00:02:27.680><c> four</c><00:02:28.000><c> numbers</c><00:02:28.400><c> and</c><00:02:28.560><c> our</c>

00:02:28.710 --> 00:02:28.720 align:start position:0%
input array we have four numbers and our
 

00:02:28.720 --> 00:02:30.070 align:start position:0%
input array we have four numbers and our
window<00:02:29.120><c> size</c><00:02:29.440><c> is</c><00:02:29.520><c> going</c><00:02:29.680><c> to</c><00:02:29.760><c> be</c>

00:02:30.070 --> 00:02:30.080 align:start position:0%
window size is going to be
 

00:02:30.080 --> 00:02:33.030 align:start position:0%
window size is going to be
three<00:02:30.400><c> so</c><00:02:30.640><c> k</c><00:02:30.800><c> equals</c><00:02:31.280><c> three</c><00:02:32.000><c> notice</c><00:02:32.400><c> how</c><00:02:32.720><c> these</c>

00:02:33.030 --> 00:02:33.040 align:start position:0%
three so k equals three notice how these
 

00:02:33.040 --> 00:02:33.910 align:start position:0%
three so k equals three notice how these
values<00:02:33.599><c> are</c>

00:02:33.910 --> 00:02:33.920 align:start position:0%
values are
 

00:02:33.920 --> 00:02:36.949 align:start position:0%
values are
in<00:02:34.319><c> increasing</c><00:02:35.200><c> order</c><00:02:35.680><c> right</c><00:02:36.000><c> one</c><00:02:36.319><c> two</c><00:02:36.640><c> three</c>

00:02:36.949 --> 00:02:36.959 align:start position:0%
in increasing order right one two three
 

00:02:36.959 --> 00:02:40.229 align:start position:0%
in increasing order right one two three
four<00:02:37.599><c> okay</c><00:02:38.239><c> so</c><00:02:38.400><c> we</c><00:02:38.560><c> notice</c><00:02:38.959><c> that</c><00:02:39.360><c> now</c><00:02:39.920><c> look</c><00:02:40.160><c> at</c>

00:02:40.229 --> 00:02:40.239 align:start position:0%
four okay so we notice that now look at
 

00:02:40.239 --> 00:02:41.670 align:start position:0%
four okay so we notice that now look at
our<00:02:40.480><c> first</c><00:02:40.879><c> window</c>

00:02:41.670 --> 00:02:41.680 align:start position:0%
our first window
 

00:02:41.680 --> 00:02:44.869 align:start position:0%
our first window
we<00:02:41.920><c> have</c><00:02:42.160><c> one</c><00:02:42.480><c> two</c><00:02:42.879><c> three</c><00:02:43.519><c> we</c><00:02:43.680><c> see</c><00:02:43.920><c> that</c><00:02:44.319><c> two</c><00:02:44.640><c> is</c>

00:02:44.869 --> 00:02:44.879 align:start position:0%
we have one two three we see that two is
 

00:02:44.879 --> 00:02:45.830 align:start position:0%
we have one two three we see that two is
greater<00:02:45.280><c> than</c>

00:02:45.830 --> 00:02:45.840 align:start position:0%
greater than
 

00:02:45.840 --> 00:02:48.630 align:start position:0%
greater than
one<00:02:46.400><c> we</c><00:02:46.640><c> see</c><00:02:47.040><c> three</c><00:02:47.519><c> is</c><00:02:47.680><c> greater</c><00:02:48.000><c> than</c><00:02:48.239><c> two</c><00:02:48.480><c> now</c>

00:02:48.630 --> 00:02:48.640 align:start position:0%
one we see three is greater than two now
 

00:02:48.640 --> 00:02:49.270 align:start position:0%
one we see three is greater than two now
that's

00:02:49.270 --> 00:02:49.280 align:start position:0%
that's
 

00:02:49.280 --> 00:02:52.150 align:start position:0%
that's
good<00:02:50.160><c> and</c><00:02:50.720><c> so</c><00:02:50.879><c> we</c><00:02:51.120><c> scan</c><00:02:51.599><c> through</c><00:02:51.840><c> every</c>

00:02:52.150 --> 00:02:52.160 align:start position:0%
good and so we scan through every
 

00:02:52.160 --> 00:02:52.949 align:start position:0%
good and so we scan through every
element

00:02:52.949 --> 00:02:52.959 align:start position:0%
element
 

00:02:52.959 --> 00:02:55.190 align:start position:0%
element
one's<00:02:53.360><c> not</c><00:02:53.599><c> the</c><00:02:53.760><c> max</c><00:02:54.080><c> two</c><00:02:54.319><c> is</c><00:02:54.400><c> not</c><00:02:54.560><c> the</c><00:02:54.720><c> max</c>

00:02:55.190 --> 00:02:55.200 align:start position:0%
one's not the max two is not the max
 

00:02:55.200 --> 00:02:56.790 align:start position:0%
one's not the max two is not the max
three<00:02:55.840><c> is</c><00:02:56.000><c> the</c><00:02:56.239><c> max</c>

00:02:56.790 --> 00:02:56.800 align:start position:0%
three is the max
 

00:02:56.800 --> 00:02:59.830 align:start position:0%
three is the max
so<00:02:57.040><c> then</c><00:02:57.519><c> in</c><00:02:57.680><c> our</c><00:02:58.000><c> output</c><00:02:58.959><c> for</c><00:02:59.120><c> the</c><00:02:59.440><c> first</c>

00:02:59.830 --> 00:02:59.840 align:start position:0%
so then in our output for the first
 

00:02:59.840 --> 00:03:01.910 align:start position:0%
so then in our output for the first
value<00:03:00.319><c> we're</c><00:03:00.480><c> gonna</c><00:03:00.720><c> put</c><00:03:00.959><c> a</c><00:03:01.200><c> three</c>

00:03:01.910 --> 00:03:01.920 align:start position:0%
value we're gonna put a three
 

00:03:01.920 --> 00:03:04.229 align:start position:0%
value we're gonna put a three
okay<00:03:02.159><c> and</c><00:03:02.400><c> that's</c><00:03:02.640><c> great</c><00:03:02.959><c> now</c><00:03:03.200><c> we</c><00:03:03.440><c> shift</c><00:03:04.000><c> our</c>

00:03:04.229 --> 00:03:04.239 align:start position:0%
okay and that's great now we shift our
 

00:03:04.239 --> 00:03:05.110 align:start position:0%
okay and that's great now we shift our
window

00:03:05.110 --> 00:03:05.120 align:start position:0%
window
 

00:03:05.120 --> 00:03:08.309 align:start position:0%
window
to<00:03:05.440><c> the</c><00:03:06.159><c> next</c><00:03:06.720><c> position</c><00:03:07.440><c> so</c><00:03:07.680><c> now</c><00:03:07.920><c> i'm</c>

00:03:08.309 --> 00:03:08.319 align:start position:0%
to the next position so now i'm
 

00:03:08.319 --> 00:03:09.990 align:start position:0%
to the next position so now i'm
i'm<00:03:08.480><c> literally</c><00:03:08.879><c> just</c><00:03:09.040><c> gonna</c><00:03:09.280><c> repeat</c><00:03:09.760><c> that</c>

00:03:09.990 --> 00:03:10.000 align:start position:0%
i'm literally just gonna repeat that
 

00:03:10.000 --> 00:03:11.589 align:start position:0%
i'm literally just gonna repeat that
process<00:03:10.480><c> the</c><00:03:10.640><c> brute</c><00:03:10.879><c> force</c><00:03:11.200><c> way</c><00:03:11.360><c> now</c><00:03:11.519><c> i'm</c>

00:03:11.589 --> 00:03:11.599 align:start position:0%
process the brute force way now i'm
 

00:03:11.599 --> 00:03:12.550 align:start position:0%
process the brute force way now i'm
gonna<00:03:11.760><c> check</c><00:03:12.080><c> two</c>

00:03:12.550 --> 00:03:12.560 align:start position:0%
gonna check two
 

00:03:12.560 --> 00:03:14.790 align:start position:0%
gonna check two
okay<00:03:13.280><c> now</c><00:03:13.440><c> i'm</c><00:03:13.519><c> gonna</c><00:03:13.680><c> check</c><00:03:14.000><c> three</c><00:03:14.400><c> three</c><00:03:14.640><c> is</c>

00:03:14.790 --> 00:03:14.800 align:start position:0%
okay now i'm gonna check three three is
 

00:03:14.800 --> 00:03:16.149 align:start position:0%
okay now i'm gonna check three three is
greater<00:03:15.360><c> now</c><00:03:15.519><c> i'm</c><00:03:15.599><c> gonna</c><00:03:15.760><c> check</c>

00:03:16.149 --> 00:03:16.159 align:start position:0%
greater now i'm gonna check
 

00:03:16.159 --> 00:03:19.270 align:start position:0%
greater now i'm gonna check
for<00:03:16.480><c> four</c><00:03:16.800><c> is</c><00:03:16.879><c> the</c><00:03:17.120><c> greatest</c><00:03:17.760><c> so</c><00:03:18.000><c> we</c><00:03:18.239><c> add</c><00:03:18.720><c> 4</c><00:03:19.040><c> to</c>

00:03:19.270 --> 00:03:19.280 align:start position:0%
for four is the greatest so we add 4 to
 

00:03:19.280 --> 00:03:20.229 align:start position:0%
for four is the greatest so we add 4 to
our<00:03:19.519><c> output</c>

00:03:20.229 --> 00:03:20.239 align:start position:0%
our output
 

00:03:20.239 --> 00:03:21.589 align:start position:0%
our output
and<00:03:20.319><c> so</c><00:03:20.560><c> then</c><00:03:20.720><c> we're</c><00:03:20.959><c> done</c><00:03:21.200><c> we</c><00:03:21.280><c> have</c><00:03:21.519><c> our</c>

00:03:21.589 --> 00:03:21.599 align:start position:0%
and so then we're done we have our
 

00:03:21.599 --> 00:03:23.270 align:start position:0%
and so then we're done we have our
output<00:03:21.920><c> but</c><00:03:22.080><c> we</c><00:03:22.239><c> just</c><00:03:22.480><c> did</c><00:03:22.640><c> it</c><00:03:22.720><c> the</c><00:03:22.879><c> brute</c>

00:03:23.270 --> 00:03:23.280 align:start position:0%
output but we just did it the brute
 

00:03:23.280 --> 00:03:25.430 align:start position:0%
output but we just did it the brute
force<00:03:23.599><c> way</c><00:03:23.840><c> but</c><00:03:24.000><c> do</c><00:03:24.080><c> you</c><00:03:24.319><c> see</c><00:03:24.560><c> the</c><00:03:24.720><c> repeated</c>

00:03:25.430 --> 00:03:25.440 align:start position:0%
force way but do you see the repeated
 

00:03:25.440 --> 00:03:27.030 align:start position:0%
force way but do you see the repeated
work<00:03:25.760><c> that</c><00:03:25.920><c> we</c><00:03:26.080><c> just</c><00:03:26.400><c> did</c>

00:03:27.030 --> 00:03:27.040 align:start position:0%
work that we just did
 

00:03:27.040 --> 00:03:30.470 align:start position:0%
work that we just did
as<00:03:27.440><c> soon</c><00:03:28.080><c> in</c><00:03:28.239><c> our</c><00:03:28.560><c> first</c><00:03:29.040><c> window</c><00:03:29.920><c> we</c>

00:03:30.470 --> 00:03:30.480 align:start position:0%
as soon in our first window we
 

00:03:30.480 --> 00:03:33.509 align:start position:0%
as soon in our first window we
saw<00:03:30.799><c> one</c><00:03:31.120><c> two</c><00:03:31.440><c> three</c><00:03:32.000><c> we</c><00:03:32.319><c> know</c><00:03:32.879><c> three</c>

00:03:33.509 --> 00:03:33.519 align:start position:0%
saw one two three we know three
 

00:03:33.519 --> 00:03:36.949 align:start position:0%
saw one two three we know three
is<00:03:33.760><c> greater</c><00:03:34.560><c> so</c><00:03:35.120><c> so</c><00:03:35.280><c> we</c><00:03:35.519><c> basically</c><00:03:36.159><c> eliminate</c>

00:03:36.949 --> 00:03:36.959 align:start position:0%
is greater so so we basically eliminate
 

00:03:36.959 --> 00:03:39.670 align:start position:0%
is greater so so we basically eliminate
two<00:03:37.280><c> and</c><00:03:37.440><c> three</c><00:03:38.080><c> and</c><00:03:38.400><c> then</c><00:03:38.640><c> when</c><00:03:38.879><c> our</c><00:03:39.120><c> window</c>

00:03:39.670 --> 00:03:39.680 align:start position:0%
two and three and then when our window
 

00:03:39.680 --> 00:03:41.509 align:start position:0%
two and three and then when our window
is<00:03:39.920><c> at</c><00:03:40.080><c> the</c><00:03:40.400><c> next</c><00:03:40.799><c> position</c>

00:03:41.509 --> 00:03:41.519 align:start position:0%
is at the next position
 

00:03:41.519 --> 00:03:45.350 align:start position:0%
is at the next position
it's<00:03:41.760><c> over</c><00:03:42.080><c> here</c><00:03:42.879><c> right</c><00:03:43.920><c> one</c><00:03:44.319><c> is</c><00:03:44.560><c> no</c><00:03:44.879><c> longer</c><00:03:45.280><c> a</c>

00:03:45.350 --> 00:03:45.360 align:start position:0%
it's over here right one is no longer a
 

00:03:45.360 --> 00:03:46.869 align:start position:0%
it's over here right one is no longer a
part<00:03:45.599><c> of</c><00:03:45.680><c> our</c><00:03:45.840><c> window</c><00:03:46.159><c> so</c><00:03:46.400><c> we</c><00:03:46.480><c> don't</c><00:03:46.640><c> need</c><00:03:46.799><c> to</c>

00:03:46.869 --> 00:03:46.879 align:start position:0%
part of our window so we don't need to
 

00:03:46.879 --> 00:03:48.070 align:start position:0%
part of our window so we don't need to
worry<00:03:47.200><c> about</c><00:03:47.519><c> one</c>

00:03:48.070 --> 00:03:48.080 align:start position:0%
worry about one
 

00:03:48.080 --> 00:03:51.270 align:start position:0%
worry about one
what<00:03:48.319><c> about</c><00:03:48.959><c> two</c><00:03:49.599><c> well</c><00:03:50.080><c> two</c><00:03:50.640><c> is</c>

00:03:51.270 --> 00:03:51.280 align:start position:0%
what about two well two is
 

00:03:51.280 --> 00:03:53.350 align:start position:0%
what about two well two is
inside<00:03:51.840><c> of</c><00:03:52.000><c> our</c><00:03:52.159><c> window</c><00:03:52.640><c> right</c><00:03:52.799><c> it's</c><00:03:53.040><c> at</c><00:03:53.120><c> the</c>

00:03:53.350 --> 00:03:53.360 align:start position:0%
inside of our window right it's at the
 

00:03:53.360 --> 00:03:54.949 align:start position:0%
inside of our window right it's at the
leftmost<00:03:54.080><c> position</c>

00:03:54.949 --> 00:03:54.959 align:start position:0%
leftmost position
 

00:03:54.959 --> 00:03:58.149 align:start position:0%
leftmost position
but<00:03:55.360><c> since</c><00:03:55.760><c> we</c><00:03:56.239><c> know</c><00:03:56.560><c> that</c><00:03:56.879><c> this</c><00:03:57.439><c> three</c>

00:03:58.149 --> 00:03:58.159 align:start position:0%
but since we know that this three
 

00:03:58.159 --> 00:04:01.270 align:start position:0%
but since we know that this three
is<00:03:58.480><c> greater</c><00:03:58.959><c> than</c><00:03:59.200><c> the</c><00:03:59.360><c> 2</c><00:03:59.840><c> anyway</c><00:04:00.720><c> why</c><00:04:01.040><c> would</c>

00:04:01.270 --> 00:04:01.280 align:start position:0%
is greater than the 2 anyway why would
 

00:04:01.280 --> 00:04:01.830 align:start position:0%
is greater than the 2 anyway why would
we

00:04:01.830 --> 00:04:01.840 align:start position:0%
we
 

00:04:01.840 --> 00:04:05.670 align:start position:0%
we
ever<00:04:02.480><c> need</c><00:04:03.040><c> to</c><00:04:03.360><c> look</c><00:04:03.599><c> at</c><00:04:03.680><c> the</c><00:04:04.000><c> 2</c><00:04:04.720><c> ever</c><00:04:05.200><c> again</c>

00:04:05.670 --> 00:04:05.680 align:start position:0%
ever need to look at the 2 ever again
 

00:04:05.680 --> 00:04:09.110 align:start position:0%
ever need to look at the 2 ever again
it's<00:04:06.319><c> never</c><00:04:06.879><c> going</c><00:04:07.200><c> to</c><00:04:07.439><c> be</c><00:04:08.000><c> the</c><00:04:08.239><c> maximum</c>

00:04:09.110 --> 00:04:09.120 align:start position:0%
it's never going to be the maximum
 

00:04:09.120 --> 00:04:10.949 align:start position:0%
it's never going to be the maximum
and<00:04:09.280><c> let</c><00:04:09.439><c> me</c><00:04:09.599><c> just</c><00:04:09.840><c> make</c><00:04:10.000><c> it</c><00:04:10.239><c> even</c><00:04:10.640><c> more</c>

00:04:10.949 --> 00:04:10.959 align:start position:0%
and let me just make it even more
 

00:04:10.959 --> 00:04:13.030 align:start position:0%
and let me just make it even more
obvious<00:04:11.439><c> let's</c><00:04:11.599><c> say</c><00:04:11.760><c> our</c><00:04:11.920><c> window</c><00:04:12.319><c> size</c><00:04:12.720><c> is</c>

00:04:13.030 --> 00:04:13.040 align:start position:0%
obvious let's say our window size is
 

00:04:13.040 --> 00:04:16.229 align:start position:0%
obvious let's say our window size is
six<00:04:13.680><c> and</c><00:04:13.920><c> this</c><00:04:14.239><c> is</c><00:04:14.319><c> our</c><00:04:14.560><c> input</c><00:04:14.959><c> array</c><00:04:15.680><c> okay</c><00:04:16.000><c> so</c>

00:04:16.229 --> 00:04:16.239 align:start position:0%
six and this is our input array okay so
 

00:04:16.239 --> 00:04:16.550 align:start position:0%
six and this is our input array okay so
our

00:04:16.550 --> 00:04:16.560 align:start position:0%
our
 

00:04:16.560 --> 00:04:19.030 align:start position:0%
our
so<00:04:16.720><c> for</c><00:04:16.880><c> our</c><00:04:17.199><c> first</c><00:04:17.600><c> window</c><00:04:17.919><c> we</c><00:04:18.079><c> have</c><00:04:18.160><c> to</c><00:04:18.400><c> check</c>

00:04:19.030 --> 00:04:19.040 align:start position:0%
so for our first window we have to check
 

00:04:19.040 --> 00:04:20.150 align:start position:0%
so for our first window we have to check
okay<00:04:19.280><c> the</c><00:04:19.519><c> one</c>

00:04:20.150 --> 00:04:20.160 align:start position:0%
okay the one
 

00:04:20.160 --> 00:04:22.469 align:start position:0%
okay the one
another<00:04:20.560><c> one</c><00:04:20.959><c> another</c><00:04:21.359><c> one</c><00:04:21.680><c> another</c><00:04:22.160><c> one</c>

00:04:22.469 --> 00:04:22.479 align:start position:0%
another one another one another one
 

00:04:22.479 --> 00:04:24.550 align:start position:0%
another one another one another one
another<00:04:22.800><c> one</c><00:04:22.960><c> and</c><00:04:23.120><c> then</c><00:04:23.280><c> a</c><00:04:23.440><c> four</c><00:04:23.759><c> so</c><00:04:23.919><c> the</c><00:04:24.160><c> four</c>

00:04:24.550 --> 00:04:24.560 align:start position:0%
another one and then a four so the four
 

00:04:24.560 --> 00:04:27.350 align:start position:0%
another one and then a four so the four
is<00:04:24.720><c> our</c><00:04:24.960><c> max</c><00:04:25.759><c> that's</c><00:04:26.000><c> great</c><00:04:26.240><c> so</c><00:04:26.400><c> we</c><00:04:26.800><c> can</c><00:04:27.040><c> save</c>

00:04:27.350 --> 00:04:27.360 align:start position:0%
is our max that's great so we can save
 

00:04:27.360 --> 00:04:27.990 align:start position:0%
is our max that's great so we can save
that

00:04:27.990 --> 00:04:28.000 align:start position:0%
that
 

00:04:28.000 --> 00:04:30.469 align:start position:0%
that
and<00:04:28.160><c> then</c><00:04:28.400><c> we</c><00:04:28.720><c> shift</c><00:04:29.040><c> our</c><00:04:29.199><c> window</c><00:04:29.600><c> to</c><00:04:29.759><c> the</c><00:04:30.000><c> next</c>

00:04:30.469 --> 00:04:30.479 align:start position:0%
and then we shift our window to the next
 

00:04:30.479 --> 00:04:31.350 align:start position:0%
and then we shift our window to the next
position

00:04:31.350 --> 00:04:31.360 align:start position:0%
position
 

00:04:31.360 --> 00:04:33.990 align:start position:0%
position
and<00:04:31.680><c> see</c><00:04:31.919><c> we're</c><00:04:32.160><c> repeating</c><00:04:33.040><c> all</c><00:04:33.360><c> that</c><00:04:33.680><c> work</c>

00:04:33.990 --> 00:04:34.000 align:start position:0%
and see we're repeating all that work
 

00:04:34.000 --> 00:04:35.110 align:start position:0%
and see we're repeating all that work
over<00:04:34.240><c> again</c><00:04:34.560><c> the</c><00:04:34.720><c> one</c>

00:04:35.110 --> 00:04:35.120 align:start position:0%
over again the one
 

00:04:35.120 --> 00:04:38.550 align:start position:0%
over again the one
one<00:04:35.520><c> one</c><00:04:36.479><c> as</c><00:04:36.880><c> soon</c><00:04:37.280><c> as</c><00:04:37.440><c> we</c><00:04:37.759><c> see</c><00:04:38.080><c> this</c>

00:04:38.550 --> 00:04:38.560 align:start position:0%
one one as soon as we see this
 

00:04:38.560 --> 00:04:41.749 align:start position:0%
one one as soon as we see this
four<00:04:39.199><c> we</c><00:04:39.520><c> know</c><00:04:39.759><c> that</c><00:04:40.080><c> these</c><00:04:40.479><c> elements</c><00:04:41.280><c> as</c><00:04:41.520><c> far</c>

00:04:41.749 --> 00:04:41.759 align:start position:0%
four we know that these elements as far
 

00:04:41.759 --> 00:04:43.110 align:start position:0%
four we know that these elements as far
as<00:04:41.919><c> we're</c><00:04:42.160><c> concerned</c><00:04:42.800><c> are</c>

00:04:43.110 --> 00:04:43.120 align:start position:0%
as we're concerned are
 

00:04:43.120 --> 00:04:45.830 align:start position:0%
as we're concerned are
useless<00:04:43.759><c> to</c><00:04:44.000><c> us</c><00:04:44.240><c> we</c><00:04:44.720><c> never</c><00:04:45.120><c> have</c><00:04:45.280><c> to</c><00:04:45.520><c> look</c><00:04:45.759><c> at</c>

00:04:45.830 --> 00:04:45.840 align:start position:0%
useless to us we never have to look at
 

00:04:45.840 --> 00:04:47.189 align:start position:0%
useless to us we never have to look at
them<00:04:46.080><c> again</c><00:04:46.400><c> they</c><00:04:46.639><c> will</c>

00:04:47.189 --> 00:04:47.199 align:start position:0%
them again they will
 

00:04:47.199 --> 00:04:50.070 align:start position:0%
them again they will
never<00:04:47.759><c> be</c><00:04:48.000><c> the</c><00:04:48.240><c> maximum</c><00:04:49.280><c> inside</c><00:04:49.759><c> of</c><00:04:49.919><c> our</c>

00:04:50.070 --> 00:04:50.080 align:start position:0%
never be the maximum inside of our
 

00:04:50.080 --> 00:04:50.870 align:start position:0%
never be the maximum inside of our
window

00:04:50.870 --> 00:04:50.880 align:start position:0%
window
 

00:04:50.880 --> 00:04:52.950 align:start position:0%
window
because<00:04:51.440><c> our</c><00:04:51.680><c> window</c><00:04:52.000><c> is</c><00:04:52.080><c> going</c><00:04:52.240><c> to</c><00:04:52.320><c> continue</c>

00:04:52.950 --> 00:04:52.960 align:start position:0%
because our window is going to continue
 

00:04:52.960 --> 00:04:53.909 align:start position:0%
because our window is going to continue
being<00:04:53.360><c> shift</c>

00:04:53.909 --> 00:04:53.919 align:start position:0%
being shift
 

00:04:53.919 --> 00:04:57.270 align:start position:0%
being shift
to<00:04:54.080><c> the</c><00:04:54.320><c> right</c><00:04:54.720><c> position</c><00:04:55.440><c> and</c><00:04:55.600><c> the</c><00:04:56.000><c> 4</c><00:04:56.639><c> is</c><00:04:56.880><c> still</c>

00:04:57.270 --> 00:04:57.280 align:start position:0%
to the right position and the 4 is still
 

00:04:57.280 --> 00:04:58.790 align:start position:0%
to the right position and the 4 is still
going<00:04:57.520><c> to</c><00:04:57.680><c> be</c><00:04:57.919><c> in</c><00:04:58.080><c> the</c><00:04:58.240><c> window</c>

00:04:58.790 --> 00:04:58.800 align:start position:0%
going to be in the window
 

00:04:58.800 --> 00:05:01.510 align:start position:0%
going to be in the window
even<00:04:59.280><c> after</c><00:05:00.160><c> these</c><00:05:00.560><c> elements</c><00:05:01.039><c> have</c><00:05:01.199><c> been</c>

00:05:01.510 --> 00:05:01.520 align:start position:0%
even after these elements have been
 

00:05:01.520 --> 00:05:02.550 align:start position:0%
even after these elements have been
eliminated

00:05:02.550 --> 00:05:02.560 align:start position:0%
eliminated
 

00:05:02.560 --> 00:05:04.469 align:start position:0%
eliminated
and<00:05:02.800><c> so</c><00:05:02.960><c> the</c><00:05:03.199><c> data</c><00:05:03.600><c> structure</c><00:05:04.080><c> we're</c><00:05:04.240><c> going</c><00:05:04.320><c> to</c>

00:05:04.469 --> 00:05:04.479 align:start position:0%
and so the data structure we're going to
 

00:05:04.479 --> 00:05:06.950 align:start position:0%
and so the data structure we're going to
use<00:05:05.199><c> to</c><00:05:05.440><c> eliminate</c><00:05:06.000><c> these</c><00:05:06.240><c> values</c>

00:05:06.950 --> 00:05:06.960 align:start position:0%
use to eliminate these values
 

00:05:06.960 --> 00:05:09.749 align:start position:0%
use to eliminate these values
is<00:05:07.360><c> a</c><00:05:07.680><c> deck</c><00:05:08.080><c> or</c><00:05:08.240><c> a</c><00:05:08.400><c> dq</c><00:05:09.199><c> and</c><00:05:09.360><c> i'm</c><00:05:09.440><c> going</c><00:05:09.520><c> to</c><00:05:09.600><c> show</c>

00:05:09.749 --> 00:05:09.759 align:start position:0%
is a deck or a dq and i'm going to show
 

00:05:09.759 --> 00:05:09.990 align:start position:0%
is a deck or a dq and i'm going to show
you

00:05:09.990 --> 00:05:10.000 align:start position:0%
you
 

00:05:10.000 --> 00:05:12.390 align:start position:0%
you
the<00:05:10.160><c> algorithm</c><00:05:10.960><c> and</c><00:05:11.120><c> just</c><00:05:11.360><c> to</c><00:05:11.520><c> repeat</c><00:05:11.919><c> myself</c>

00:05:12.390 --> 00:05:12.400 align:start position:0%
the algorithm and just to repeat myself
 

00:05:12.400 --> 00:05:14.310 align:start position:0%
the algorithm and just to repeat myself
basically<00:05:12.960><c> what</c><00:05:13.120><c> i'm</c><00:05:13.360><c> saying</c><00:05:13.759><c> is</c>

00:05:14.310 --> 00:05:14.320 align:start position:0%
basically what i'm saying is
 

00:05:14.320 --> 00:05:17.670 align:start position:0%
basically what i'm saying is
if<00:05:14.560><c> we</c><00:05:14.720><c> have</c><00:05:14.960><c> a</c><00:05:15.120><c> window</c><00:05:15.919><c> and</c><00:05:16.080><c> we</c><00:05:16.320><c> see</c><00:05:16.639><c> a</c><00:05:17.120><c> a</c><00:05:17.360><c> value</c>

00:05:17.670 --> 00:05:17.680 align:start position:0%
if we have a window and we see a a value
 

00:05:17.680 --> 00:05:18.070 align:start position:0%
if we have a window and we see a a value
that's

00:05:18.070 --> 00:05:18.080 align:start position:0%
that's
 

00:05:18.080 --> 00:05:20.629 align:start position:0%
that's
greater<00:05:18.560><c> than</c><00:05:18.880><c> values</c><00:05:19.199><c> that</c><00:05:19.360><c> are</c><00:05:19.600><c> previously</c>

00:05:20.629 --> 00:05:20.639 align:start position:0%
greater than values that are previously
 

00:05:20.639 --> 00:05:21.430 align:start position:0%
greater than values that are previously
in<00:05:20.800><c> our</c><00:05:20.960><c> window</c>

00:05:21.430 --> 00:05:21.440 align:start position:0%
in our window
 

00:05:21.440 --> 00:05:24.550 align:start position:0%
in our window
then<00:05:21.680><c> we</c><00:05:21.919><c> can</c><00:05:22.320><c> eliminate</c><00:05:23.039><c> those</c><00:05:23.280><c> values</c><00:05:24.080><c> from</c>

00:05:24.550 --> 00:05:24.560 align:start position:0%
then we can eliminate those values from
 

00:05:24.560 --> 00:05:26.629 align:start position:0%
then we can eliminate those values from
our<00:05:24.880><c> window</c><00:05:25.680><c> and</c><00:05:25.840><c> what</c><00:05:26.000><c> you're</c><00:05:26.320><c> so</c><00:05:26.479><c> i'm</c><00:05:26.560><c> going</c>

00:05:26.629 --> 00:05:26.639 align:start position:0%
our window and what you're so i'm going
 

00:05:26.639 --> 00:05:27.990 align:start position:0%
our window and what you're so i'm going
to<00:05:26.720><c> show</c><00:05:26.880><c> you</c><00:05:27.039><c> the</c><00:05:27.199><c> algorithm</c><00:05:27.759><c> and</c><00:05:27.840><c> what</c>

00:05:27.990 --> 00:05:28.000 align:start position:0%
to show you the algorithm and what
 

00:05:28.000 --> 00:05:29.029 align:start position:0%
to show you the algorithm and what
you're<00:05:28.160><c> going</c><00:05:28.240><c> to</c><00:05:28.479><c> notice</c>

00:05:29.029 --> 00:05:29.039 align:start position:0%
you're going to notice
 

00:05:29.039 --> 00:05:31.749 align:start position:0%
you're going to notice
is<00:05:29.120><c> that</c><00:05:29.360><c> the</c><00:05:29.680><c> values</c><00:05:30.400><c> in</c><00:05:30.560><c> our</c><00:05:30.960><c> deck</c><00:05:31.360><c> are</c>

00:05:31.749 --> 00:05:31.759 align:start position:0%
is that the values in our deck are
 

00:05:31.759 --> 00:05:32.870 align:start position:0%
is that the values in our deck are
always<00:05:32.320><c> going</c><00:05:32.400><c> to</c><00:05:32.560><c> be</c>

00:05:32.870 --> 00:05:32.880 align:start position:0%
always going to be
 

00:05:32.880 --> 00:05:36.150 align:start position:0%
always going to be
decreasing<00:05:34.080><c> order</c><00:05:34.880><c> so</c><00:05:35.039><c> this</c><00:05:35.199><c> says</c><00:05:35.440><c> decreasing</c>

00:05:36.150 --> 00:05:36.160 align:start position:0%
decreasing order so this says decreasing
 

00:05:36.160 --> 00:05:38.710 align:start position:0%
decreasing order so this says decreasing
so<00:05:36.320><c> we</c><00:05:36.560><c> know</c><00:05:36.880><c> our</c><00:05:37.120><c> window</c><00:05:37.600><c> our</c><00:05:37.840><c> sliding</c><00:05:38.240><c> window</c>

00:05:38.710 --> 00:05:38.720 align:start position:0%
so we know our window our sliding window
 

00:05:38.720 --> 00:05:39.110 align:start position:0%
so we know our window our sliding window
is

00:05:39.110 --> 00:05:39.120 align:start position:0%
is
 

00:05:39.120 --> 00:05:41.830 align:start position:0%
is
initially<00:05:39.759><c> size</c><00:05:40.160><c> six</c><00:05:40.479><c> right</c><00:05:40.720><c> k</c><00:05:40.960><c> equals</c><00:05:41.280><c> six</c><00:05:41.680><c> so</c>

00:05:41.830 --> 00:05:41.840 align:start position:0%
initially size six right k equals six so
 

00:05:41.840 --> 00:05:43.670 align:start position:0%
initially size six right k equals six so
we're<00:05:42.000><c> gonna</c><00:05:42.240><c> take</c><00:05:42.479><c> the</c><00:05:42.720><c> first</c><00:05:43.120><c> one</c>

00:05:43.670 --> 00:05:43.680 align:start position:0%
we're gonna take the first one
 

00:05:43.680 --> 00:05:45.909 align:start position:0%
we're gonna take the first one
put<00:05:43.840><c> it</c><00:05:44.000><c> in</c><00:05:44.160><c> our</c><00:05:44.320><c> window</c><00:05:44.960><c> the</c><00:05:45.199><c> second</c><00:05:45.520><c> one</c><00:05:45.759><c> put</c>

00:05:45.909 --> 00:05:45.919 align:start position:0%
put it in our window the second one put
 

00:05:45.919 --> 00:05:47.029 align:start position:0%
put it in our window the second one put
it<00:05:46.080><c> in</c><00:05:46.240><c> our</c><00:05:46.400><c> window</c>

00:05:47.029 --> 00:05:47.039 align:start position:0%
it in our window
 

00:05:47.039 --> 00:05:49.510 align:start position:0%
it in our window
and<00:05:47.120><c> then</c><00:05:47.280><c> just</c><00:05:47.440><c> repeat</c><00:05:47.919><c> that</c><00:05:48.160><c> right</c><00:05:48.800><c> we</c><00:05:48.960><c> have</c>

00:05:49.510 --> 00:05:49.520 align:start position:0%
and then just repeat that right we have
 

00:05:49.520 --> 00:05:52.230 align:start position:0%
and then just repeat that right we have
five<00:05:49.919><c> ones</c><00:05:50.320><c> we're</c><00:05:50.479><c> gonna</c><00:05:50.639><c> add</c><00:05:50.960><c> all</c><00:05:51.120><c> of</c><00:05:51.280><c> them</c>

00:05:52.230 --> 00:05:52.240 align:start position:0%
five ones we're gonna add all of them
 

00:05:52.240 --> 00:05:55.670 align:start position:0%
five ones we're gonna add all of them
and<00:05:52.400><c> then</c><00:05:52.720><c> we</c><00:05:52.880><c> get</c><00:05:53.199><c> a</c><00:05:53.680><c> 4</c><00:05:54.560><c> so</c><00:05:55.039><c> since</c>

00:05:55.670 --> 00:05:55.680 align:start position:0%
and then we get a 4 so since
 

00:05:55.680 --> 00:05:58.710 align:start position:0%
and then we get a 4 so since
4<00:05:56.720><c> is</c><00:05:57.600><c> greater</c>

00:05:58.710 --> 00:05:58.720 align:start position:0%
4 is greater
 

00:05:58.720 --> 00:06:02.309 align:start position:0%
4 is greater
than<00:05:59.520><c> the</c><00:05:59.759><c> value</c><00:06:00.240><c> at</c><00:06:00.479><c> the</c><00:06:01.039><c> top</c><00:06:01.440><c> of</c><00:06:01.600><c> our</c><00:06:01.840><c> deck</c><00:06:02.160><c> or</c>

00:06:02.309 --> 00:06:02.319 align:start position:0%
than the value at the top of our deck or
 

00:06:02.319 --> 00:06:04.550 align:start position:0%
than the value at the top of our deck or
at<00:06:02.400><c> the</c><00:06:02.639><c> rightmost</c><00:06:03.280><c> position</c><00:06:03.840><c> of</c><00:06:04.000><c> our</c><00:06:04.160><c> deck</c>

00:06:04.550 --> 00:06:04.560 align:start position:0%
at the rightmost position of our deck
 

00:06:04.560 --> 00:06:06.870 align:start position:0%
at the rightmost position of our deck
what<00:06:04.800><c> we're</c><00:06:05.039><c> going</c><00:06:05.280><c> to</c><00:06:05.520><c> do</c><00:06:05.840><c> is</c><00:06:06.000><c> we're</c><00:06:06.240><c> going</c><00:06:06.479><c> to</c>

00:06:06.870 --> 00:06:06.880 align:start position:0%
what we're going to do is we're going to
 

00:06:06.880 --> 00:06:09.270 align:start position:0%
what we're going to do is we're going to
pop<00:06:07.520><c> this</c><00:06:07.840><c> value</c><00:06:08.479><c> off</c>

00:06:09.270 --> 00:06:09.280 align:start position:0%
pop this value off
 

00:06:09.280 --> 00:06:11.990 align:start position:0%
pop this value off
what<00:06:09.440><c> we're</c><00:06:09.600><c> going</c><00:06:09.680><c> to</c><00:06:09.759><c> do</c><00:06:10.000><c> is</c><00:06:10.319><c> pop</c><00:06:10.800><c> the</c><00:06:11.039><c> top</c><00:06:11.520><c> of</c>

00:06:11.990 --> 00:06:12.000 align:start position:0%
what we're going to do is pop the top of
 

00:06:12.000 --> 00:06:12.629 align:start position:0%
what we're going to do is pop the top of
the<00:06:12.160><c> deck</c>

00:06:12.629 --> 00:06:12.639 align:start position:0%
the deck
 

00:06:12.639 --> 00:06:13.990 align:start position:0%
the deck
right<00:06:13.039><c> and</c><00:06:13.120><c> now</c><00:06:13.360><c> we're</c><00:06:13.520><c> going</c><00:06:13.600><c> to</c><00:06:13.680><c> make</c><00:06:13.840><c> the</c>

00:06:13.990 --> 00:06:14.000 align:start position:0%
right and now we're going to make the
 

00:06:14.000 --> 00:06:16.469 align:start position:0%
right and now we're going to make the
comparison<00:06:14.639><c> again</c><00:06:15.280><c> we</c><00:06:15.520><c> see</c><00:06:15.680><c> there's</c><00:06:16.080><c> still</c>

00:06:16.469 --> 00:06:16.479 align:start position:0%
comparison again we see there's still
 

00:06:16.479 --> 00:06:19.590 align:start position:0%
comparison again we see there's still
a<00:06:16.639><c> 1</c><00:06:17.120><c> so</c><00:06:17.600><c> 4</c><00:06:18.000><c> is</c><00:06:18.240><c> still</c><00:06:18.639><c> greater</c><00:06:19.039><c> than</c><00:06:19.199><c> the</c><00:06:19.360><c> top</c>

00:06:19.590 --> 00:06:19.600 align:start position:0%
a 1 so 4 is still greater than the top
 

00:06:19.600 --> 00:06:21.029 align:start position:0%
a 1 so 4 is still greater than the top
of<00:06:19.680><c> our</c><00:06:19.840><c> deck</c><00:06:20.080><c> so</c><00:06:20.240><c> we're</c><00:06:20.400><c> gonna</c>

00:06:21.029 --> 00:06:21.039 align:start position:0%
of our deck so we're gonna
 

00:06:21.039 --> 00:06:23.510 align:start position:0%
of our deck so we're gonna
pop<00:06:21.759><c> we're</c><00:06:21.919><c> gonna</c><00:06:22.160><c> pop</c><00:06:22.479><c> this</c><00:06:22.800><c> we're</c><00:06:22.960><c> gonna</c><00:06:23.199><c> pop</c>

00:06:23.510 --> 00:06:23.520 align:start position:0%
pop we're gonna pop this we're gonna pop
 

00:06:23.520 --> 00:06:24.870 align:start position:0%
pop we're gonna pop this we're gonna pop
that<00:06:24.000><c> we're</c><00:06:24.160><c> gonna</c><00:06:24.400><c> pop</c>

00:06:24.870 --> 00:06:24.880 align:start position:0%
that we're gonna pop
 

00:06:24.880 --> 00:06:27.909 align:start position:0%
that we're gonna pop
all<00:06:25.120><c> of</c><00:06:25.280><c> them</c><00:06:25.919><c> and</c><00:06:26.880><c> after</c><00:06:27.360><c> that</c>

00:06:27.909 --> 00:06:27.919 align:start position:0%
all of them and after that
 

00:06:27.919 --> 00:06:31.270 align:start position:0%
all of them and after that
we're<00:06:28.080><c> gonna</c><00:06:28.479><c> add</c><00:06:28.800><c> the</c><00:06:29.039><c> new</c><00:06:29.360><c> value</c><00:06:30.319><c> for</c>

00:06:31.270 --> 00:06:31.280 align:start position:0%
we're gonna add the new value for
 

00:06:31.280 --> 00:06:33.990 align:start position:0%
we're gonna add the new value for
and<00:06:31.520><c> so</c><00:06:32.240><c> what</c><00:06:32.479><c> are</c><00:06:32.639><c> we</c><00:06:32.800><c> gonna</c><00:06:33.199><c> add</c><00:06:33.520><c> to</c><00:06:33.680><c> the</c>

00:06:33.990 --> 00:06:34.000 align:start position:0%
and so what are we gonna add to the
 

00:06:34.000 --> 00:06:35.189 align:start position:0%
and so what are we gonna add to the
output<00:06:34.400><c> so</c><00:06:34.560><c> we</c><00:06:34.720><c> have</c><00:06:34.960><c> an</c>

00:06:35.189 --> 00:06:35.199 align:start position:0%
output so we have an
 

00:06:35.199 --> 00:06:37.189 align:start position:0%
output so we have an
output<00:06:35.600><c> array</c><00:06:36.000><c> what</c><00:06:36.240><c> value</c><00:06:36.720><c> are</c><00:06:36.800><c> we</c><00:06:36.960><c> going</c><00:06:37.039><c> to</c>

00:06:37.189 --> 00:06:37.199 align:start position:0%
output array what value are we going to
 

00:06:37.199 --> 00:06:38.550 align:start position:0%
output array what value are we going to
add<00:06:37.440><c> to</c><00:06:37.600><c> it</c><00:06:37.840><c> well</c><00:06:38.080><c> the</c>

00:06:38.550 --> 00:06:38.560 align:start position:0%
add to it well the
 

00:06:38.560 --> 00:06:42.070 align:start position:0%
add to it well the
leftmost<00:06:39.520><c> value</c><00:06:40.080><c> in</c><00:06:40.240><c> this</c><00:06:40.400><c> case</c><00:06:40.639><c> we</c><00:06:41.039><c> only</c><00:06:41.520><c> have</c>

00:06:42.070 --> 00:06:42.080 align:start position:0%
leftmost value in this case we only have
 

00:06:42.080 --> 00:06:45.430 align:start position:0%
leftmost value in this case we only have
one<00:06:42.400><c> value</c><00:06:43.360><c> is</c><00:06:43.600><c> going</c><00:06:43.919><c> to</c><00:06:44.160><c> be</c><00:06:44.400><c> what</c><00:06:44.560><c> we</c><00:06:44.800><c> add</c>

00:06:45.430 --> 00:06:45.440 align:start position:0%
one value is going to be what we add
 

00:06:45.440 --> 00:06:48.629 align:start position:0%
one value is going to be what we add
to<00:06:46.160><c> the</c><00:06:46.400><c> output</c><00:06:46.800><c> so</c><00:06:47.039><c> a</c><00:06:47.280><c> four</c><00:06:48.080><c> and</c><00:06:48.240><c> so</c><00:06:48.479><c> we're</c>

00:06:48.629 --> 00:06:48.639 align:start position:0%
to the output so a four and so we're
 

00:06:48.639 --> 00:06:50.150 align:start position:0%
to the output so a four and so we're
done<00:06:48.880><c> with</c><00:06:49.120><c> this</c><00:06:49.360><c> comparison</c>

00:06:50.150 --> 00:06:50.160 align:start position:0%
done with this comparison
 

00:06:50.160 --> 00:06:52.390 align:start position:0%
done with this comparison
we<00:06:50.319><c> don't</c><00:06:50.479><c> have</c><00:06:50.560><c> to</c><00:06:50.639><c> look</c><00:06:50.800><c> at</c><00:06:50.960><c> it</c><00:06:51.120><c> again</c><00:06:51.840><c> and</c><00:06:52.160><c> we</c>

00:06:52.390 --> 00:06:52.400 align:start position:0%
we don't have to look at it again and we
 

00:06:52.400 --> 00:06:53.830 align:start position:0%
we don't have to look at it again and we
don't<00:06:52.560><c> even</c><00:06:52.800><c> have</c><00:06:52.880><c> to</c><00:06:53.039><c> consider</c>

00:06:53.830 --> 00:06:53.840 align:start position:0%
don't even have to consider
 

00:06:53.840 --> 00:06:56.870 align:start position:0%
don't even have to consider
these<00:06:54.160><c> elements</c><00:06:54.720><c> anymore</c><00:06:55.520><c> and</c><00:06:55.919><c> now</c><00:06:56.479><c> we</c>

00:06:56.870 --> 00:06:56.880 align:start position:0%
these elements anymore and now we
 

00:06:56.880 --> 00:06:59.990 align:start position:0%
these elements anymore and now we
shift<00:06:57.360><c> our</c><00:06:57.599><c> window</c><00:06:58.080><c> by</c><00:06:58.400><c> one</c><00:06:58.720><c> position</c><00:06:59.759><c> so</c>

00:06:59.990 --> 00:07:00.000 align:start position:0%
shift our window by one position so
 

00:07:00.000 --> 00:07:02.309 align:start position:0%
shift our window by one position so
we're<00:07:00.319><c> introducing</c><00:07:00.960><c> a</c><00:07:01.120><c> new</c><00:07:01.440><c> element</c>

00:07:02.309 --> 00:07:02.319 align:start position:0%
we're introducing a new element
 

00:07:02.319 --> 00:07:05.430 align:start position:0%
we're introducing a new element
five<00:07:02.960><c> so</c><00:07:03.280><c> before</c><00:07:03.840><c> we</c><00:07:04.160><c> add</c><00:07:04.560><c> the</c><00:07:04.800><c> five</c>

00:07:05.430 --> 00:07:05.440 align:start position:0%
five so before we add the five
 

00:07:05.440 --> 00:07:07.510 align:start position:0%
five so before we add the five
to<00:07:05.599><c> our</c><00:07:05.840><c> deck</c><00:07:06.319><c> what</c><00:07:06.479><c> do</c><00:07:06.639><c> we</c><00:07:06.800><c> have</c><00:07:06.960><c> to</c><00:07:07.039><c> do</c><00:07:07.280><c> we</c>

00:07:07.510 --> 00:07:07.520 align:start position:0%
to our deck what do we have to do we
 

00:07:07.520 --> 00:07:08.629 align:start position:0%
to our deck what do we have to do we
have<00:07:07.680><c> to</c><00:07:07.919><c> check</c>

00:07:08.629 --> 00:07:08.639 align:start position:0%
have to check
 

00:07:08.639 --> 00:07:11.589 align:start position:0%
have to check
is<00:07:09.120><c> five</c><00:07:09.599><c> greater</c><00:07:10.400><c> than</c><00:07:10.560><c> the</c><00:07:10.720><c> value</c><00:07:11.280><c> at</c><00:07:11.440><c> the</c>

00:07:11.589 --> 00:07:11.599 align:start position:0%
is five greater than the value at the
 

00:07:11.599 --> 00:07:11.990 align:start position:0%
is five greater than the value at the
top

00:07:11.990 --> 00:07:12.000 align:start position:0%
top
 

00:07:12.000 --> 00:07:15.029 align:start position:0%
top
of<00:07:12.240><c> our</c><00:07:12.400><c> deck</c><00:07:13.199><c> it</c><00:07:13.520><c> is</c><00:07:13.840><c> because</c><00:07:14.160><c> the</c><00:07:14.319><c> top</c><00:07:14.639><c> value</c>

00:07:15.029 --> 00:07:15.039 align:start position:0%
of our deck it is because the top value
 

00:07:15.039 --> 00:07:16.390 align:start position:0%
of our deck it is because the top value
is<00:07:15.199><c> a</c><00:07:15.440><c> 4.</c>

00:07:16.390 --> 00:07:16.400 align:start position:0%
is a 4.
 

00:07:16.400 --> 00:07:19.510 align:start position:0%
is a 4.
so<00:07:16.880><c> why</c><00:07:17.120><c> would</c><00:07:17.360><c> we</c><00:07:17.759><c> ever</c><00:07:18.080><c> consider</c><00:07:18.800><c> the</c><00:07:19.039><c> 4</c>

00:07:19.510 --> 00:07:19.520 align:start position:0%
so why would we ever consider the 4
 

00:07:19.520 --> 00:07:21.990 align:start position:0%
so why would we ever consider the 4
as<00:07:19.680><c> the</c><00:07:19.840><c> maximum</c><00:07:20.479><c> value</c><00:07:20.960><c> ever</c><00:07:21.199><c> again</c><00:07:21.440><c> when</c><00:07:21.680><c> we</c>

00:07:21.990 --> 00:07:22.000 align:start position:0%
as the maximum value ever again when we
 

00:07:22.000 --> 00:07:23.430 align:start position:0%
as the maximum value ever again when we
know<00:07:22.240><c> there's</c><00:07:22.479><c> a</c><00:07:22.720><c> 5</c>

00:07:23.430 --> 00:07:23.440 align:start position:0%
know there's a 5
 

00:07:23.440 --> 00:07:25.909 align:start position:0%
know there's a 5
right<00:07:23.759><c> next</c><00:07:24.000><c> to</c><00:07:24.160><c> it</c><00:07:24.560><c> the</c><00:07:24.720><c> answer</c><00:07:25.039><c> is</c><00:07:25.199><c> we</c><00:07:25.520><c> don't</c>

00:07:25.909 --> 00:07:25.919 align:start position:0%
right next to it the answer is we don't
 

00:07:25.919 --> 00:07:27.589 align:start position:0%
right next to it the answer is we don't
have<00:07:26.160><c> to</c><00:07:26.400><c> so</c><00:07:26.560><c> we</c><00:07:26.720><c> remove</c>

00:07:27.589 --> 00:07:27.599 align:start position:0%
have to so we remove
 

00:07:27.599 --> 00:07:30.469 align:start position:0%
have to so we remove
the<00:07:27.840><c> 4</c><00:07:28.160><c> from</c><00:07:28.400><c> our</c><00:07:28.560><c> deck</c><00:07:29.360><c> and</c><00:07:29.520><c> then</c><00:07:29.759><c> we</c><00:07:29.919><c> can</c><00:07:30.240><c> add</c>

00:07:30.469 --> 00:07:30.479 align:start position:0%
the 4 from our deck and then we can add
 

00:07:30.479 --> 00:07:31.350 align:start position:0%
the 4 from our deck and then we can add
the<00:07:30.800><c> 5</c>

00:07:31.350 --> 00:07:31.360 align:start position:0%
the 5
 

00:07:31.360 --> 00:07:33.830 align:start position:0%
the 5
to<00:07:31.520><c> the</c><00:07:31.680><c> top</c><00:07:32.319><c> and</c><00:07:32.479><c> then</c><00:07:33.039><c> we</c><00:07:33.280><c> know</c><00:07:33.520><c> that</c><00:07:33.599><c> there's</c>

00:07:33.830 --> 00:07:33.840 align:start position:0%
to the top and then we know that there's
 

00:07:33.840 --> 00:07:35.350 align:start position:0%
to the top and then we know that there's
only<00:07:34.160><c> one</c><00:07:34.479><c> value</c>

00:07:35.350 --> 00:07:35.360 align:start position:0%
only one value
 

00:07:35.360 --> 00:07:37.830 align:start position:0%
only one value
in<00:07:35.520><c> our</c><00:07:35.680><c> deck</c><00:07:36.080><c> and</c><00:07:36.240><c> it's</c><00:07:36.639><c> also</c><00:07:36.960><c> the</c><00:07:37.199><c> leftmost</c>

00:07:37.830 --> 00:07:37.840 align:start position:0%
in our deck and it's also the leftmost
 

00:07:37.840 --> 00:07:38.950 align:start position:0%
in our deck and it's also the leftmost
position

00:07:38.950 --> 00:07:38.960 align:start position:0%
position
 

00:07:38.960 --> 00:07:41.189 align:start position:0%
position
we<00:07:39.120><c> are</c><00:07:39.280><c> going</c><00:07:39.360><c> to</c><00:07:39.520><c> add</c><00:07:39.759><c> that</c><00:07:40.000><c> to</c><00:07:40.160><c> our</c><00:07:40.400><c> output</c>

00:07:41.189 --> 00:07:41.199 align:start position:0%
we are going to add that to our output
 

00:07:41.199 --> 00:07:42.950 align:start position:0%
we are going to add that to our output
and<00:07:41.440><c> now</c><00:07:41.599><c> we're</c><00:07:41.840><c> done</c><00:07:42.160><c> this</c><00:07:42.479><c> is</c><00:07:42.720><c> our</c>

00:07:42.950 --> 00:07:42.960 align:start position:0%
and now we're done this is our
 

00:07:42.960 --> 00:07:45.990 align:start position:0%
and now we're done this is our
output<00:07:43.840><c> but</c><00:07:44.240><c> what's</c><00:07:44.560><c> the</c><00:07:44.800><c> time</c><00:07:45.120><c> complexity</c><00:07:45.840><c> of</c>

00:07:45.990 --> 00:07:46.000 align:start position:0%
output but what's the time complexity of
 

00:07:46.000 --> 00:07:47.110 align:start position:0%
output but what's the time complexity of
this<00:07:46.319><c> algorithm</c>

00:07:47.110 --> 00:07:47.120 align:start position:0%
this algorithm
 

00:07:47.120 --> 00:07:50.550 align:start position:0%
this algorithm
first<00:07:47.520><c> we</c><00:07:47.840><c> took</c><00:07:48.319><c> each</c><00:07:48.960><c> one</c><00:07:49.599><c> added</c><00:07:50.000><c> it</c><00:07:50.160><c> to</c><00:07:50.319><c> our</c>

00:07:50.550 --> 00:07:50.560 align:start position:0%
first we took each one added it to our
 

00:07:50.560 --> 00:07:51.110 align:start position:0%
first we took each one added it to our
deck

00:07:51.110 --> 00:07:51.120 align:start position:0%
deck
 

00:07:51.120 --> 00:07:53.670 align:start position:0%
deck
right<00:07:51.360><c> we</c><00:07:51.599><c> we</c><00:07:51.759><c> did</c><00:07:51.919><c> that</c><00:07:52.080><c> for</c><00:07:52.479><c> every</c><00:07:53.120><c> single</c>

00:07:53.670 --> 00:07:53.680 align:start position:0%
right we we did that for every single
 

00:07:53.680 --> 00:07:55.110 align:start position:0%
right we we did that for every single
value<00:07:54.160><c> that</c><00:07:54.400><c> was</c>

00:07:55.110 --> 00:07:55.120 align:start position:0%
value that was
 

00:07:55.120 --> 00:07:58.550 align:start position:0%
value that was
expensive<00:07:56.000><c> and</c><00:07:56.160><c> then</c><00:07:56.400><c> we</c><00:07:56.720><c> also</c><00:07:57.599><c> then</c><00:07:57.840><c> we</c><00:07:58.080><c> also</c>

00:07:58.550 --> 00:07:58.560 align:start position:0%
expensive and then we also then we also
 

00:07:58.560 --> 00:08:01.670 align:start position:0%
expensive and then we also then we also
crossed<00:07:59.280><c> out</c><00:07:59.520><c> we</c><00:07:59.840><c> had</c><00:08:00.000><c> to</c><00:08:00.160><c> remove</c><00:08:01.120><c> every</c>

00:08:01.670 --> 00:08:01.680 align:start position:0%
crossed out we had to remove every
 

00:08:01.680 --> 00:08:02.150 align:start position:0%
crossed out we had to remove every
single

00:08:02.150 --> 00:08:02.160 align:start position:0%
single
 

00:08:02.160 --> 00:08:04.869 align:start position:0%
single
value<00:08:02.560><c> from</c><00:08:02.720><c> our</c><00:08:02.960><c> deck</c><00:08:03.759><c> but</c><00:08:04.240><c> adding</c><00:08:04.720><c> and</c>

00:08:04.869 --> 00:08:04.879 align:start position:0%
value from our deck but adding and
 

00:08:04.879 --> 00:08:06.070 align:start position:0%
value from our deck but adding and
removing<00:08:05.520><c> we</c><00:08:05.680><c> know</c>

00:08:06.070 --> 00:08:06.080 align:start position:0%
removing we know
 

00:08:06.080 --> 00:08:08.869 align:start position:0%
removing we know
adding<00:08:06.639><c> and</c><00:08:06.800><c> removing</c><00:08:07.520><c> is</c><00:08:07.680><c> an</c><00:08:07.919><c> o</c><00:08:08.160><c> of</c><00:08:08.479><c> one</c>

00:08:08.869 --> 00:08:08.879 align:start position:0%
adding and removing is an o of one
 

00:08:08.879 --> 00:08:09.830 align:start position:0%
adding and removing is an o of one
operation

00:08:09.830 --> 00:08:09.840 align:start position:0%
operation
 

00:08:09.840 --> 00:08:12.309 align:start position:0%
operation
to<00:08:10.000><c> our</c><00:08:10.240><c> deck</c><00:08:10.720><c> and</c><00:08:10.879><c> we</c><00:08:11.039><c> had</c><00:08:11.280><c> to</c><00:08:11.440><c> do</c><00:08:11.599><c> that</c><00:08:11.759><c> for</c>

00:08:12.309 --> 00:08:12.319 align:start position:0%
to our deck and we had to do that for
 

00:08:12.319 --> 00:08:13.189 align:start position:0%
to our deck and we had to do that for
every

00:08:13.189 --> 00:08:13.199 align:start position:0%
every
 

00:08:13.199 --> 00:08:16.790 align:start position:0%
every
single<00:08:14.080><c> value</c><00:08:14.960><c> in</c><00:08:15.199><c> here</c><00:08:15.440><c> potentially</c>

00:08:16.790 --> 00:08:16.800 align:start position:0%
single value in here potentially
 

00:08:16.800 --> 00:08:20.150 align:start position:0%
single value in here potentially
but<00:08:17.440><c> that's</c><00:08:17.840><c> still</c><00:08:18.960><c> o</c><00:08:19.360><c> of</c><00:08:19.759><c> n</c>

00:08:20.150 --> 00:08:20.160 align:start position:0%
but that's still o of n
 

00:08:20.160 --> 00:08:23.670 align:start position:0%
but that's still o of n
right<00:08:20.560><c> the</c><00:08:20.720><c> result</c><00:08:21.360><c> is</c><00:08:21.919><c> o</c><00:08:22.160><c> of</c><00:08:22.560><c> n</c><00:08:23.120><c> which</c><00:08:23.360><c> is</c>

00:08:23.670 --> 00:08:23.680 align:start position:0%
right the result is o of n which is
 

00:08:23.680 --> 00:08:26.390 align:start position:0%
right the result is o of n which is
why<00:08:24.000><c> this</c><00:08:24.240><c> is</c><00:08:24.479><c> a</c><00:08:24.639><c> really</c><00:08:25.039><c> good</c><00:08:25.360><c> solution</c><00:08:26.160><c> and</c>

00:08:26.390 --> 00:08:26.400 align:start position:0%
why this is a really good solution and
 

00:08:26.400 --> 00:08:27.110 align:start position:0%
why this is a really good solution and
i'm<00:08:26.479><c> going</c><00:08:26.560><c> to</c><00:08:26.639><c> show</c><00:08:26.800><c> you</c>

00:08:27.110 --> 00:08:27.120 align:start position:0%
i'm going to show you
 

00:08:27.120 --> 00:08:29.670 align:start position:0%
i'm going to show you
one<00:08:27.360><c> last</c><00:08:27.759><c> example</c><00:08:28.319><c> and</c><00:08:28.560><c> by</c><00:08:28.800><c> the</c><00:08:28.960><c> way</c><00:08:29.199><c> this</c><00:08:29.440><c> is</c>

00:08:29.670 --> 00:08:29.680 align:start position:0%
one last example and by the way this is
 

00:08:29.680 --> 00:08:30.230 align:start position:0%
one last example and by the way this is
called

00:08:30.230 --> 00:08:30.240 align:start position:0%
called
 

00:08:30.240 --> 00:08:32.750 align:start position:0%
called
the<00:08:30.400><c> type</c><00:08:30.639><c> of</c><00:08:30.879><c> problem</c><00:08:31.280><c> this</c><00:08:31.520><c> is</c><00:08:32.080><c> is</c><00:08:32.240><c> called</c><00:08:32.479><c> a</c>

00:08:32.750 --> 00:08:32.760 align:start position:0%
the type of problem this is is called a
 

00:08:32.760 --> 00:08:34.589 align:start position:0%
the type of problem this is is called a
monotonically

00:08:34.589 --> 00:08:34.599 align:start position:0%
monotonically
 

00:08:34.599 --> 00:08:39.029 align:start position:0%
monotonically
decreasing<00:08:36.640><c> q</c><00:08:37.519><c> and</c><00:08:37.680><c> the</c><00:08:37.839><c> reason</c><00:08:38.159><c> is</c><00:08:38.320><c> because</c>

00:08:39.029 --> 00:08:39.039 align:start position:0%
decreasing q and the reason is because
 

00:08:39.039 --> 00:08:41.350 align:start position:0%
decreasing q and the reason is because
our<00:08:39.519><c> q</c><00:08:40.000><c> is</c><00:08:40.320><c> always</c><00:08:40.719><c> going</c><00:08:40.880><c> to</c><00:08:40.959><c> be</c><00:08:41.120><c> in</c>

00:08:41.350 --> 00:08:41.360 align:start position:0%
our q is always going to be in
 

00:08:41.360 --> 00:08:43.190 align:start position:0%
our q is always going to be in
decreasing<00:08:42.000><c> order</c><00:08:42.320><c> which</c><00:08:42.560><c> this</c><00:08:42.800><c> next</c>

00:08:43.190 --> 00:08:43.200 align:start position:0%
decreasing order which this next
 

00:08:43.200 --> 00:08:45.509 align:start position:0%
decreasing order which this next
example<00:08:43.599><c> is</c><00:08:43.760><c> going</c><00:08:43.839><c> to</c><00:08:44.000><c> demonstrate</c><00:08:44.959><c> and</c><00:08:45.200><c> the</c>

00:08:45.509 --> 00:08:45.519 align:start position:0%
example is going to demonstrate and the
 

00:08:45.519 --> 00:08:46.710 align:start position:0%
example is going to demonstrate and the
reason<00:08:45.920><c> we're</c><00:08:46.080><c> using</c><00:08:46.399><c> a</c>

00:08:46.710 --> 00:08:46.720 align:start position:0%
reason we're using a
 

00:08:46.720 --> 00:08:49.750 align:start position:0%
reason we're using a
q<00:08:47.440><c> rather</c><00:08:47.760><c> than</c><00:08:48.000><c> a</c><00:08:48.160><c> stack</c><00:08:48.880><c> is</c><00:08:49.040><c> because</c>

00:08:49.750 --> 00:08:49.760 align:start position:0%
q rather than a stack is because
 

00:08:49.760 --> 00:08:53.110 align:start position:0%
q rather than a stack is because
we<00:08:49.920><c> want</c><00:08:50.080><c> to</c><00:08:50.240><c> be</c><00:08:50.399><c> able</c><00:08:51.040><c> to</c><00:08:51.440><c> add</c><00:08:52.080><c> and</c><00:08:52.320><c> remove</c>

00:08:53.110 --> 00:08:53.120 align:start position:0%
we want to be able to add and remove
 

00:08:53.120 --> 00:08:56.870 align:start position:0%
we want to be able to add and remove
elements<00:08:54.160><c> from</c><00:08:54.399><c> the</c><00:08:54.640><c> beginning</c><00:08:55.760><c> in</c><00:08:56.080><c> o</c><00:08:56.320><c> of</c><00:08:56.560><c> one</c>

00:08:56.870 --> 00:08:56.880 align:start position:0%
elements from the beginning in o of one
 

00:08:56.880 --> 00:08:57.509 align:start position:0%
elements from the beginning in o of one
time

00:08:57.509 --> 00:08:57.519 align:start position:0%
time
 

00:08:57.519 --> 00:09:00.790 align:start position:0%
time
but<00:08:57.839><c> not</c><00:08:58.080><c> only</c><00:08:58.480><c> that</c><00:08:59.279><c> as</c><00:08:59.600><c> our</c><00:08:59.839><c> window</c><00:09:00.320><c> shifts</c>

00:09:00.790 --> 00:09:00.800 align:start position:0%
but not only that as our window shifts
 

00:09:00.800 --> 00:09:02.870 align:start position:0%
but not only that as our window shifts
like<00:09:01.040><c> for</c><00:09:01.200><c> example</c><00:09:01.519><c> our</c><00:09:01.680><c> windows</c><00:09:02.160><c> here</c>

00:09:02.870 --> 00:09:02.880 align:start position:0%
like for example our windows here
 

00:09:02.880 --> 00:09:05.110 align:start position:0%
like for example our windows here
next<00:09:03.200><c> our</c><00:09:03.360><c> window</c><00:09:03.680><c> could</c><00:09:03.839><c> be</c><00:09:04.080><c> here</c><00:09:04.560><c> we</c><00:09:04.800><c> want</c><00:09:04.959><c> to</c>

00:09:05.110 --> 00:09:05.120 align:start position:0%
next our window could be here we want to
 

00:09:05.120 --> 00:09:05.990 align:start position:0%
next our window could be here we want to
be<00:09:05.200><c> able</c><00:09:05.360><c> to</c><00:09:05.519><c> take</c><00:09:05.760><c> an</c>

00:09:05.990 --> 00:09:06.000 align:start position:0%
be able to take an
 

00:09:06.000 --> 00:09:08.949 align:start position:0%
be able to take an
element<00:09:06.399><c> like</c><00:09:06.720><c> this</c><00:09:07.279><c> and</c><00:09:07.519><c> remove</c><00:09:08.320><c> it</c><00:09:08.560><c> from</c><00:09:08.800><c> the</c>

00:09:08.949 --> 00:09:08.959 align:start position:0%
element like this and remove it from the
 

00:09:08.959 --> 00:09:09.750 align:start position:0%
element like this and remove it from the
beginning

00:09:09.750 --> 00:09:09.760 align:start position:0%
beginning
 

00:09:09.760 --> 00:09:11.829 align:start position:0%
beginning
and<00:09:09.920><c> we</c><00:09:10.160><c> want</c><00:09:10.320><c> to</c><00:09:10.399><c> be</c><00:09:10.560><c> able</c><00:09:10.720><c> to</c><00:09:10.880><c> do</c><00:09:11.040><c> that</c><00:09:11.360><c> in</c><00:09:11.600><c> o</c>

00:09:11.829 --> 00:09:11.839 align:start position:0%
and we want to be able to do that in o
 

00:09:11.839 --> 00:09:14.310 align:start position:0%
and we want to be able to do that in o
of<00:09:12.080><c> one</c><00:09:12.399><c> time</c><00:09:12.720><c> which</c><00:09:12.959><c> is</c><00:09:13.200><c> why</c><00:09:13.600><c> we</c><00:09:13.839><c> need</c>

00:09:14.310 --> 00:09:14.320 align:start position:0%
of one time which is why we need
 

00:09:14.320 --> 00:09:17.030 align:start position:0%
of one time which is why we need
a<00:09:14.720><c> q</c><00:09:15.440><c> so</c><00:09:15.680><c> let</c><00:09:15.839><c> me</c><00:09:16.000><c> quickly</c><00:09:16.320><c> just</c><00:09:16.560><c> run</c><00:09:16.800><c> through</c>

00:09:17.030 --> 00:09:17.040 align:start position:0%
a q so let me quickly just run through
 

00:09:17.040 --> 00:09:19.670 align:start position:0%
a q so let me quickly just run through
this<00:09:17.360><c> last</c><00:09:17.680><c> example</c><00:09:18.240><c> so</c><00:09:18.480><c> we</c><00:09:18.640><c> have</c>

00:09:19.670 --> 00:09:19.680 align:start position:0%
this last example so we have
 

00:09:19.680 --> 00:09:22.389 align:start position:0%
this last example so we have
our<00:09:19.920><c> first</c><00:09:20.320><c> window</c><00:09:20.800><c> over</c><00:09:21.120><c> here</c><00:09:21.600><c> eight</c><00:09:22.160><c> and</c>

00:09:22.389 --> 00:09:22.399 align:start position:0%
our first window over here eight and
 

00:09:22.399 --> 00:09:23.350 align:start position:0%
our first window over here eight and
seven<00:09:22.800><c> so</c><00:09:23.040><c> we</c>

00:09:23.350 --> 00:09:23.360 align:start position:0%
seven so we
 

00:09:23.360 --> 00:09:26.790 align:start position:0%
seven so we
add<00:09:23.920><c> eight</c><00:09:24.399><c> to</c><00:09:24.560><c> our</c><00:09:24.800><c> q</c><00:09:25.839><c> and</c><00:09:26.000><c> then</c><00:09:26.160><c> we</c><00:09:26.320><c> look</c><00:09:26.560><c> at</c>

00:09:26.790 --> 00:09:26.800 align:start position:0%
add eight to our q and then we look at
 

00:09:26.800 --> 00:09:27.350 align:start position:0%
add eight to our q and then we look at
seven

00:09:27.350 --> 00:09:27.360 align:start position:0%
seven
 

00:09:27.360 --> 00:09:31.269 align:start position:0%
seven
well<00:09:28.080><c> seven</c><00:09:28.880><c> is</c><00:09:29.360><c> not</c><00:09:30.080><c> greater</c><00:09:30.560><c> than</c><00:09:30.880><c> eight</c>

00:09:31.269 --> 00:09:31.279 align:start position:0%
well seven is not greater than eight
 

00:09:31.279 --> 00:09:33.590 align:start position:0%
well seven is not greater than eight
right<00:09:31.440><c> that's</c><00:09:31.680><c> just</c><00:09:32.000><c> not</c><00:09:32.320><c> true</c><00:09:33.040><c> so</c><00:09:33.360><c> we're</c>

00:09:33.590 --> 00:09:33.600 align:start position:0%
right that's just not true so we're
 

00:09:33.600 --> 00:09:36.150 align:start position:0%
right that's just not true so we're
allowed<00:09:34.160><c> to</c><00:09:34.399><c> add</c><00:09:34.640><c> the</c><00:09:34.880><c> seven</c><00:09:35.279><c> we</c><00:09:35.519><c> only</c><00:09:35.920><c> want</c><00:09:36.080><c> to</c>

00:09:36.150 --> 00:09:36.160 align:start position:0%
allowed to add the seven we only want to
 

00:09:36.160 --> 00:09:36.790 align:start position:0%
allowed to add the seven we only want to
remove

00:09:36.790 --> 00:09:36.800 align:start position:0%
remove
 

00:09:36.800 --> 00:09:39.190 align:start position:0%
remove
smaller<00:09:37.440><c> elements</c><00:09:38.160><c> if</c><00:09:38.320><c> they</c><00:09:38.560><c> exist</c><00:09:38.880><c> but</c><00:09:39.040><c> in</c>

00:09:39.190 --> 00:09:39.200 align:start position:0%
smaller elements if they exist but in
 

00:09:39.200 --> 00:09:41.269 align:start position:0%
smaller elements if they exist but in
this<00:09:39.360><c> case</c><00:09:39.680><c> that's</c><00:09:39.920><c> not</c><00:09:40.160><c> true</c><00:09:40.399><c> so</c><00:09:40.560><c> we</c><00:09:40.800><c> add</c><00:09:41.040><c> the</c>

00:09:41.269 --> 00:09:41.279 align:start position:0%
this case that's not true so we add the
 

00:09:41.279 --> 00:09:41.829 align:start position:0%
this case that's not true so we add the
seven

00:09:41.829 --> 00:09:41.839 align:start position:0%
seven
 

00:09:41.839 --> 00:09:43.990 align:start position:0%
seven
and<00:09:42.080><c> notice</c><00:09:42.560><c> how</c><00:09:42.880><c> these</c><00:09:43.120><c> values</c><00:09:43.600><c> are</c><00:09:43.760><c> in</c>

00:09:43.990 --> 00:09:44.000 align:start position:0%
and notice how these values are in
 

00:09:44.000 --> 00:09:45.509 align:start position:0%
and notice how these values are in
decreasing<00:09:44.720><c> order</c><00:09:45.040><c> we</c><00:09:45.200><c> have</c>

00:09:45.509 --> 00:09:45.519 align:start position:0%
decreasing order we have
 

00:09:45.519 --> 00:09:47.430 align:start position:0%
decreasing order we have
a<00:09:45.920><c> and</c><00:09:46.000><c> then</c><00:09:46.160><c> we</c><00:09:46.320><c> have</c><00:09:46.560><c> a</c><00:09:46.720><c> seven</c><00:09:47.040><c> right</c><00:09:47.200><c> they're</c>

00:09:47.430 --> 00:09:47.440 align:start position:0%
a and then we have a seven right they're
 

00:09:47.440 --> 00:09:48.949 align:start position:0%
a and then we have a seven right they're
in<00:09:47.600><c> decreasing</c><00:09:48.320><c> order</c>

00:09:48.949 --> 00:09:48.959 align:start position:0%
in decreasing order
 

00:09:48.959 --> 00:09:51.430 align:start position:0%
in decreasing order
so<00:09:49.200><c> what</c><00:09:49.440><c> that</c><00:09:49.760><c> tells</c><00:09:50.080><c> us</c><00:09:50.480><c> is</c><00:09:50.720><c> since</c><00:09:51.040><c> we</c><00:09:51.200><c> want</c>

00:09:51.430 --> 00:09:51.440 align:start position:0%
so what that tells us is since we want
 

00:09:51.440 --> 00:09:52.230 align:start position:0%
so what that tells us is since we want
the<00:09:51.760><c> max</c>

00:09:52.230 --> 00:09:52.240 align:start position:0%
the max
 

00:09:52.240 --> 00:09:55.509 align:start position:0%
the max
value<00:09:53.040><c> in</c><00:09:53.200><c> our</c><00:09:53.360><c> sliding</c><00:09:53.839><c> window</c><00:09:54.880><c> we</c><00:09:55.120><c> can</c><00:09:55.279><c> just</c>

00:09:55.509 --> 00:09:55.519 align:start position:0%
value in our sliding window we can just
 

00:09:55.519 --> 00:09:57.590 align:start position:0%
value in our sliding window we can just
look<00:09:55.760><c> at</c><00:09:55.839><c> the</c><00:09:56.240><c> leftmost</c><00:09:57.040><c> value</c>

00:09:57.590 --> 00:09:57.600 align:start position:0%
look at the leftmost value
 

00:09:57.600 --> 00:10:00.230 align:start position:0%
look at the leftmost value
in<00:09:57.760><c> our</c><00:09:57.920><c> deck</c><00:09:58.480><c> and</c><00:09:58.640><c> then</c><00:09:58.959><c> add</c><00:09:59.279><c> that</c><00:09:59.839><c> to</c><00:10:00.000><c> the</c>

00:10:00.230 --> 00:10:00.240 align:start position:0%
in our deck and then add that to the
 

00:10:00.240 --> 00:10:01.190 align:start position:0%
in our deck and then add that to the
output

00:10:01.190 --> 00:10:01.200 align:start position:0%
output
 

00:10:01.200 --> 00:10:03.990 align:start position:0%
output
so<00:10:01.440><c> i'm</c><00:10:01.600><c> going</c><00:10:01.680><c> to</c><00:10:01.839><c> add</c><00:10:02.480><c> 8</c><00:10:03.200><c> for</c><00:10:03.440><c> the</c><00:10:03.680><c> first</c>

00:10:03.990 --> 00:10:04.000 align:start position:0%
so i'm going to add 8 for the first
 

00:10:04.000 --> 00:10:05.990 align:start position:0%
so i'm going to add 8 for the first
sliding<00:10:04.480><c> window</c><00:10:04.800><c> the</c><00:10:05.040><c> max</c><00:10:05.440><c> value</c>

00:10:05.990 --> 00:10:06.000 align:start position:0%
sliding window the max value
 

00:10:06.000 --> 00:10:09.350 align:start position:0%
sliding window the max value
happens<00:10:06.480><c> to</c><00:10:06.720><c> be</c><00:10:07.279><c> eight</c><00:10:08.000><c> okay</c><00:10:08.320><c> now</c><00:10:08.560><c> the</c><00:10:08.959><c> next</c>

00:10:09.350 --> 00:10:09.360 align:start position:0%
happens to be eight okay now the next
 

00:10:09.360 --> 00:10:10.550 align:start position:0%
happens to be eight okay now the next
sliding<00:10:09.839><c> window</c>

00:10:10.550 --> 00:10:10.560 align:start position:0%
sliding window
 

00:10:10.560 --> 00:10:13.590 align:start position:0%
sliding window
we<00:10:10.800><c> have</c><00:10:11.600><c> seven</c><00:10:12.320><c> and</c><00:10:12.560><c> we</c><00:10:12.800><c> have</c><00:10:13.200><c> eight</c>

00:10:13.590 --> 00:10:13.600 align:start position:0%
we have seven and we have eight
 

00:10:13.600 --> 00:10:16.069 align:start position:0%
we have seven and we have eight
okay<00:10:13.920><c> the</c><00:10:14.240><c> first</c><00:10:14.640><c> thing</c><00:10:14.880><c> to</c><00:10:15.040><c> notice</c><00:10:15.680><c> is</c><00:10:15.839><c> that</c>

00:10:16.069 --> 00:10:16.079 align:start position:0%
okay the first thing to notice is that
 

00:10:16.079 --> 00:10:18.069 align:start position:0%
okay the first thing to notice is that
the<00:10:16.480><c> eight</c><00:10:16.800><c> is</c><00:10:17.040><c> no</c><00:10:17.360><c> longer</c><00:10:17.760><c> in</c>

00:10:18.069 --> 00:10:18.079 align:start position:0%
the eight is no longer in
 

00:10:18.079 --> 00:10:20.790 align:start position:0%
the eight is no longer in
bounds<00:10:18.640><c> so</c><00:10:18.880><c> we</c><00:10:19.040><c> gotta</c><00:10:19.519><c> pop</c><00:10:19.920><c> from</c><00:10:20.160><c> over</c><00:10:20.480><c> here</c>

00:10:20.790 --> 00:10:20.800 align:start position:0%
bounds so we gotta pop from over here
 

00:10:20.800 --> 00:10:21.190 align:start position:0%
bounds so we gotta pop from over here
right

00:10:21.190 --> 00:10:21.200 align:start position:0%
right
 

00:10:21.200 --> 00:10:23.269 align:start position:0%
right
and<00:10:21.360><c> we</c><00:10:21.519><c> wanna</c><00:10:21.760><c> do</c><00:10:21.920><c> that</c><00:10:22.160><c> efficiently</c><00:10:23.040><c> which</c>

00:10:23.269 --> 00:10:23.279 align:start position:0%
and we wanna do that efficiently which
 

00:10:23.279 --> 00:10:24.870 align:start position:0%
and we wanna do that efficiently which
is<00:10:23.440><c> why</c><00:10:23.680><c> we're</c><00:10:23.920><c> using</c><00:10:24.240><c> a</c><00:10:24.399><c> deck</c>

00:10:24.870 --> 00:10:24.880 align:start position:0%
is why we're using a deck
 

00:10:24.880 --> 00:10:28.630 align:start position:0%
is why we're using a deck
but<00:10:25.120><c> so</c><00:10:25.360><c> before</c><00:10:25.760><c> we</c><00:10:26.000><c> add</c><00:10:26.320><c> anything</c><00:10:27.120><c> we</c><00:10:27.839><c> pop</c>

00:10:28.630 --> 00:10:28.640 align:start position:0%
but so before we add anything we pop
 

00:10:28.640 --> 00:10:31.990 align:start position:0%
but so before we add anything we pop
next<00:10:29.040><c> we</c><00:10:29.360><c> see</c><00:10:29.839><c> the</c><00:10:30.240><c> six</c><00:10:31.519><c> well</c>

00:10:31.990 --> 00:10:32.000 align:start position:0%
next we see the six well
 

00:10:32.000 --> 00:10:35.750 align:start position:0%
next we see the six well
6<00:10:32.560><c> is</c><00:10:32.880><c> not</c><00:10:33.440><c> greater</c><00:10:33.920><c> than</c><00:10:34.240><c> 7</c><00:10:34.640><c> that's</c><00:10:34.959><c> not</c><00:10:35.200><c> true</c>

00:10:35.750 --> 00:10:35.760 align:start position:0%
6 is not greater than 7 that's not true
 

00:10:35.760 --> 00:10:38.550 align:start position:0%
6 is not greater than 7 that's not true
so<00:10:35.920><c> we're</c><00:10:36.160><c> allowed</c><00:10:36.800><c> to</c><00:10:37.040><c> put</c><00:10:37.200><c> a</c><00:10:37.360><c> 6</c><00:10:37.680><c> here</c><00:10:38.000><c> to</c><00:10:38.320><c> keep</c>

00:10:38.550 --> 00:10:38.560 align:start position:0%
so we're allowed to put a 6 here to keep
 

00:10:38.560 --> 00:10:38.949 align:start position:0%
so we're allowed to put a 6 here to keep
this

00:10:38.949 --> 00:10:38.959 align:start position:0%
this
 

00:10:38.959 --> 00:10:42.389 align:start position:0%
this
in<00:10:39.279><c> decreasing</c><00:10:40.240><c> order</c><00:10:40.959><c> and</c><00:10:41.200><c> now</c><00:10:41.760><c> the</c><00:10:42.000><c> max</c>

00:10:42.389 --> 00:10:42.399 align:start position:0%
in decreasing order and now the max
 

00:10:42.399 --> 00:10:42.949 align:start position:0%
in decreasing order and now the max
value

00:10:42.949 --> 00:10:42.959 align:start position:0%
value
 

00:10:42.959 --> 00:10:46.230 align:start position:0%
value
in<00:10:43.360><c> this</c><00:10:43.680><c> window</c><00:10:44.240><c> is</c><00:10:44.560><c> 7</c><00:10:45.120><c> which</c><00:10:45.279><c> is</c><00:10:45.440><c> the</c><00:10:45.839><c> left</c>

00:10:46.230 --> 00:10:46.240 align:start position:0%
in this window is 7 which is the left
 

00:10:46.240 --> 00:10:46.710 align:start position:0%
in this window is 7 which is the left
most

00:10:46.710 --> 00:10:46.720 align:start position:0%
most
 

00:10:46.720 --> 00:10:49.030 align:start position:0%
most
value<00:10:47.200><c> in</c><00:10:47.440><c> our</c><00:10:47.600><c> deck</c><00:10:48.079><c> so</c><00:10:48.240><c> we</c><00:10:48.480><c> add</c><00:10:48.640><c> it</c><00:10:48.800><c> to</c><00:10:48.880><c> the</c>

00:10:49.030 --> 00:10:49.040 align:start position:0%
value in our deck so we add it to the
 

00:10:49.040 --> 00:10:49.990 align:start position:0%
value in our deck so we add it to the
output<00:10:49.680><c> and</c>

00:10:49.990 --> 00:10:50.000 align:start position:0%
output and
 

00:10:50.000 --> 00:10:52.550 align:start position:0%
output and
lastly<00:10:50.560><c> we</c><00:10:50.720><c> look</c><00:10:50.959><c> at</c><00:10:51.120><c> the</c><00:10:51.440><c> last</c><00:10:52.079><c> sliding</c>

00:10:52.550 --> 00:10:52.560 align:start position:0%
lastly we look at the last sliding
 

00:10:52.560 --> 00:10:53.670 align:start position:0%
lastly we look at the last sliding
window<00:10:52.880><c> which</c><00:10:53.120><c> is</c><00:10:53.200><c> these</c>

00:10:53.670 --> 00:10:53.680 align:start position:0%
window which is these
 

00:10:53.680 --> 00:10:57.110 align:start position:0%
window which is these
last<00:10:54.079><c> two</c><00:10:54.399><c> elements</c><00:10:55.680><c> and</c><00:10:55.839><c> we</c><00:10:56.000><c> know</c><00:10:56.240><c> that</c><00:10:56.480><c> the</c><00:10:56.720><c> 7</c>

00:10:57.110 --> 00:10:57.120 align:start position:0%
last two elements and we know that the 7
 

00:10:57.120 --> 00:10:57.990 align:start position:0%
last two elements and we know that the 7
is<00:10:57.279><c> no</c><00:10:57.519><c> longer</c>

00:10:57.990 --> 00:10:58.000 align:start position:0%
is no longer
 

00:10:58.000 --> 00:11:00.470 align:start position:0%
is no longer
in<00:10:58.160><c> bounds</c><00:10:58.640><c> right</c><00:10:59.200><c> so</c><00:10:59.519><c> from</c><00:10:59.680><c> the</c><00:10:59.920><c> leftmost</c>

00:11:00.470 --> 00:11:00.480 align:start position:0%
in bounds right so from the leftmost
 

00:11:00.480 --> 00:11:02.389 align:start position:0%
in bounds right so from the leftmost
position<00:11:00.959><c> with</c><00:11:01.200><c> it</c><00:11:01.279><c> which</c><00:11:01.519><c> is</c><00:11:01.680><c> this</c>

00:11:02.389 --> 00:11:02.399 align:start position:0%
position with it which is this
 

00:11:02.399 --> 00:11:05.829 align:start position:0%
position with it which is this
we<00:11:02.720><c> pop</c><00:11:03.040><c> from</c><00:11:03.279><c> our</c><00:11:03.519><c> deck</c><00:11:04.560><c> we</c><00:11:04.800><c> make</c><00:11:05.120><c> one</c><00:11:05.440><c> last</c>

00:11:05.829 --> 00:11:05.839 align:start position:0%
we pop from our deck we make one last
 

00:11:05.839 --> 00:11:08.150 align:start position:0%
we pop from our deck we make one last
comparison<00:11:06.480><c> right</c><00:11:06.720><c> we</c><00:11:06.959><c> just</c><00:11:07.200><c> added</c><00:11:07.600><c> a</c><00:11:07.760><c> 9.</c>

00:11:08.150 --> 00:11:08.160 align:start position:0%
comparison right we just added a 9.
 

00:11:08.160 --> 00:11:09.350 align:start position:0%
comparison right we just added a 9.
let's<00:11:08.399><c> take</c><00:11:08.640><c> a</c><00:11:08.800><c> look</c>

00:11:09.350 --> 00:11:09.360 align:start position:0%
let's take a look
 

00:11:09.360 --> 00:11:12.710 align:start position:0%
let's take a look
is<00:11:09.920><c> 9</c><00:11:10.399><c> greater</c><00:11:11.040><c> than</c><00:11:11.279><c> the</c><00:11:11.519><c> top</c><00:11:12.079><c> value</c>

00:11:12.710 --> 00:11:12.720 align:start position:0%
is 9 greater than the top value
 

00:11:12.720 --> 00:11:15.990 align:start position:0%
is 9 greater than the top value
of<00:11:12.880><c> our</c><00:11:13.120><c> stack</c><00:11:14.160><c> is</c><00:11:14.399><c> it</c><00:11:14.560><c> greater</c><00:11:14.959><c> than</c><00:11:15.360><c> 6</c>

00:11:15.990 --> 00:11:16.000 align:start position:0%
of our stack is it greater than 6
 

00:11:16.000 --> 00:11:18.870 align:start position:0%
of our stack is it greater than 6
it<00:11:16.399><c> is</c><00:11:16.959><c> what</c><00:11:17.120><c> does</c><00:11:17.279><c> that</c><00:11:17.600><c> mean</c><00:11:18.240><c> that</c><00:11:18.399><c> means</c><00:11:18.720><c> we</c>

00:11:18.870 --> 00:11:18.880 align:start position:0%
it is what does that mean that means we
 

00:11:18.880 --> 00:11:19.269 align:start position:0%
it is what does that mean that means we
have<00:11:18.959><c> to</c>

00:11:19.269 --> 00:11:19.279 align:start position:0%
have to
 

00:11:19.279 --> 00:11:21.990 align:start position:0%
have to
pop<00:11:20.000><c> from</c><00:11:20.240><c> this</c><00:11:20.800><c> we</c><00:11:20.959><c> have</c><00:11:21.040><c> to</c><00:11:21.200><c> pop</c><00:11:21.519><c> from</c><00:11:21.680><c> the</c>

00:11:21.990 --> 00:11:22.000 align:start position:0%
pop from this we have to pop from the
 

00:11:22.000 --> 00:11:24.550 align:start position:0%
pop from this we have to pop from the
top<00:11:22.320><c> of</c><00:11:22.480><c> the</c><00:11:22.640><c> stack</c><00:11:23.040><c> the</c><00:11:23.279><c> rightmost</c><00:11:23.839><c> position</c>

00:11:24.550 --> 00:11:24.560 align:start position:0%
top of the stack the rightmost position
 

00:11:24.560 --> 00:11:26.310 align:start position:0%
top of the stack the rightmost position
or<00:11:24.959><c> rather</c><00:11:25.279><c> the</c><00:11:25.519><c> q</c><00:11:25.760><c> i</c><00:11:25.839><c> don't</c><00:11:25.920><c> know</c><00:11:26.000><c> how</c><00:11:26.160><c> many</c>

00:11:26.310 --> 00:11:26.320 align:start position:0%
or rather the q i don't know how many
 

00:11:26.320 --> 00:11:27.750 align:start position:0%
or rather the q i don't know how many
times<00:11:26.640><c> i</c><00:11:26.720><c> said</c><00:11:26.880><c> stack</c><00:11:27.279><c> but</c><00:11:27.440><c> we're</c><00:11:27.519><c> going</c><00:11:27.680><c> to</c>

00:11:27.750 --> 00:11:27.760 align:start position:0%
times i said stack but we're going to
 

00:11:27.760 --> 00:11:29.750 align:start position:0%
times i said stack but we're going to
pop<00:11:28.079><c> from</c><00:11:28.240><c> the</c><00:11:28.399><c> rightmost</c><00:11:28.959><c> position</c><00:11:29.440><c> in</c><00:11:29.600><c> our</c>

00:11:29.750 --> 00:11:29.760 align:start position:0%
pop from the rightmost position in our
 

00:11:29.760 --> 00:11:30.389 align:start position:0%
pop from the rightmost position in our
queue

00:11:30.389 --> 00:11:30.399 align:start position:0%
queue
 

00:11:30.399 --> 00:11:33.990 align:start position:0%
queue
and<00:11:30.800><c> now</c><00:11:31.279><c> we</c><00:11:31.519><c> are</c><00:11:31.680><c> allowed</c><00:11:32.160><c> to</c><00:11:32.320><c> take</c><00:11:32.560><c> the</c><00:11:32.800><c> 9</c><00:11:33.360><c> and</c>

00:11:33.990 --> 00:11:34.000 align:start position:0%
and now we are allowed to take the 9 and
 

00:11:34.000 --> 00:11:37.509 align:start position:0%
and now we are allowed to take the 9 and
append<00:11:34.560><c> it</c><00:11:34.959><c> to</c><00:11:35.440><c> our</c><00:11:35.760><c> queue</c><00:11:36.320><c> so</c><00:11:36.480><c> we</c><00:11:36.720><c> add</c><00:11:36.880><c> the</c><00:11:37.120><c> 9</c>

00:11:37.509 --> 00:11:37.519 align:start position:0%
append it to our queue so we add the 9
 

00:11:37.519 --> 00:11:40.389 align:start position:0%
append it to our queue so we add the 9
now<00:11:38.720><c> we</c><00:11:38.880><c> know</c><00:11:39.040><c> that</c><00:11:39.200><c> this</c><00:11:39.360><c> is</c><00:11:39.519><c> the</c><00:11:39.920><c> leftmost</c>

00:11:40.389 --> 00:11:40.399 align:start position:0%
now we know that this is the leftmost
 

00:11:40.399 --> 00:11:42.230 align:start position:0%
now we know that this is the leftmost
position<00:11:40.800><c> in</c><00:11:40.880><c> our</c><00:11:40.880><c> rq</c><00:11:41.200><c> and</c><00:11:41.279><c> we</c><00:11:41.519><c> know</c><00:11:41.839><c> that</c>

00:11:42.230 --> 00:11:42.240 align:start position:0%
position in our rq and we know that
 

00:11:42.240 --> 00:11:45.509 align:start position:0%
position in our rq and we know that
in<00:11:42.720><c> this</c><00:11:43.040><c> window</c><00:11:43.760><c> nine</c><00:11:44.320><c> is</c><00:11:44.480><c> the</c><00:11:44.640><c> maximum</c><00:11:45.200><c> so</c><00:11:45.360><c> we</c>

00:11:45.509 --> 00:11:45.519 align:start position:0%
in this window nine is the maximum so we
 

00:11:45.519 --> 00:11:47.590 align:start position:0%
in this window nine is the maximum so we
did<00:11:45.760><c> this</c><00:11:46.079><c> correctly</c><00:11:46.640><c> right</c><00:11:46.880><c> so</c><00:11:47.040><c> we</c><00:11:47.200><c> can</c><00:11:47.360><c> take</c>

00:11:47.590 --> 00:11:47.600 align:start position:0%
did this correctly right so we can take
 

00:11:47.600 --> 00:11:48.630 align:start position:0%
did this correctly right so we can take
the<00:11:47.839><c> nine</c>

00:11:48.630 --> 00:11:48.640 align:start position:0%
the nine
 

00:11:48.640 --> 00:11:51.350 align:start position:0%
the nine
add<00:11:48.880><c> it</c><00:11:49.040><c> to</c><00:11:49.279><c> our</c><00:11:49.519><c> output</c><00:11:50.160><c> so</c><00:11:50.480><c> this</c><00:11:50.959><c> is</c><00:11:51.120><c> the</c>

00:11:51.350 --> 00:11:51.360 align:start position:0%
add it to our output so this is the
 

00:11:51.360 --> 00:11:53.030 align:start position:0%
add it to our output so this is the
result<00:11:51.839><c> that</c><00:11:52.000><c> we're</c><00:11:52.240><c> looking</c><00:11:52.639><c> for</c>

00:11:53.030 --> 00:11:53.040 align:start position:0%
result that we're looking for
 

00:11:53.040 --> 00:11:55.350 align:start position:0%
result that we're looking for
and<00:11:53.200><c> i</c><00:11:53.279><c> hope</c><00:11:53.519><c> this</c><00:11:53.839><c> demonstrates</c><00:11:54.800><c> a</c><00:11:54.959><c> few</c><00:11:55.200><c> of</c>

00:11:55.350 --> 00:11:55.360 align:start position:0%
and i hope this demonstrates a few of
 

00:11:55.360 --> 00:11:56.310 align:start position:0%
and i hope this demonstrates a few of
like<00:11:55.519><c> when</c><00:11:55.680><c> you</c><00:11:55.839><c> actually</c>

00:11:56.310 --> 00:11:56.320 align:start position:0%
like when you actually
 

00:11:56.320 --> 00:11:59.509 align:start position:0%
like when you actually
run<00:11:56.639><c> through</c><00:11:57.360><c> examples</c><00:11:58.160><c> it</c><00:11:58.480><c> shows</c><00:11:58.880><c> you</c>

00:11:59.509 --> 00:11:59.519 align:start position:0%
run through examples it shows you
 

00:11:59.519 --> 00:12:01.350 align:start position:0%
run through examples it shows you
like<00:11:59.760><c> what</c><00:12:00.000><c> you</c><00:12:00.160><c> need</c><00:12:00.320><c> to</c><00:12:00.399><c> know</c><00:12:00.639><c> it</c><00:12:00.720><c> shows</c><00:12:01.040><c> you</c>

00:12:01.350 --> 00:12:01.360 align:start position:0%
like what you need to know it shows you
 

00:12:01.360 --> 00:12:02.949 align:start position:0%
like what you need to know it shows you
why<00:12:02.240><c> we're</c><00:12:02.480><c> using</c>

00:12:02.949 --> 00:12:02.959 align:start position:0%
why we're using
 

00:12:02.959 --> 00:12:05.030 align:start position:0%
why we're using
this<00:12:03.200><c> data</c><00:12:03.519><c> structure</c><00:12:03.920><c> and</c><00:12:04.000><c> it</c><00:12:04.079><c> shows</c><00:12:04.320><c> you</c><00:12:04.720><c> why</c>

00:12:05.030 --> 00:12:05.040 align:start position:0%
this data structure and it shows you why
 

00:12:05.040 --> 00:12:06.710 align:start position:0%
this data structure and it shows you why
it's<00:12:05.279><c> so</c><00:12:05.600><c> efficient</c><00:12:06.399><c> so</c>

00:12:06.710 --> 00:12:06.720 align:start position:0%
it's so efficient so
 

00:12:06.720 --> 00:12:08.790 align:start position:0%
it's so efficient so
now<00:12:07.120><c> with</c><00:12:07.360><c> that</c><00:12:07.600><c> in</c><00:12:07.760><c> mind</c><00:12:08.160><c> the</c><00:12:08.480><c> coding</c>

00:12:08.790 --> 00:12:08.800 align:start position:0%
now with that in mind the coding
 

00:12:08.800 --> 00:12:10.310 align:start position:0%
now with that in mind the coding
solution<00:12:09.279><c> is</c><00:12:09.360><c> not</c><00:12:09.680><c> too</c><00:12:09.920><c> bad</c>

00:12:10.310 --> 00:12:10.320 align:start position:0%
solution is not too bad
 

00:12:10.320 --> 00:12:12.790 align:start position:0%
solution is not too bad
so<00:12:10.480><c> we</c><00:12:10.720><c> are</c><00:12:10.880><c> going</c><00:12:10.959><c> to</c><00:12:11.120><c> have</c><00:12:11.279><c> an</c><00:12:11.519><c> output</c><00:12:11.920><c> array</c>

00:12:12.790 --> 00:12:12.800 align:start position:0%
so we are going to have an output array
 

00:12:12.800 --> 00:12:13.430 align:start position:0%
so we are going to have an output array
to<00:12:13.120><c> put</c>

00:12:13.430 --> 00:12:13.440 align:start position:0%
to put
 

00:12:13.440 --> 00:12:16.550 align:start position:0%
to put
the<00:12:13.920><c> values</c><00:12:14.399><c> in</c><00:12:14.880><c> we're</c><00:12:15.200><c> also</c><00:12:15.600><c> for</c><00:12:15.920><c> our</c><00:12:16.160><c> window</c>

00:12:16.550 --> 00:12:16.560 align:start position:0%
the values in we're also for our window
 

00:12:16.560 --> 00:12:17.269 align:start position:0%
the values in we're also for our window
we're<00:12:16.720><c> going</c><00:12:16.800><c> to</c><00:12:16.880><c> have</c>

00:12:17.269 --> 00:12:17.279 align:start position:0%
we're going to have
 

00:12:17.279 --> 00:12:19.509 align:start position:0%
we're going to have
some<00:12:17.600><c> pointers</c><00:12:18.079><c> so</c><00:12:18.399><c> left</c><00:12:18.800><c> and</c><00:12:18.959><c> right</c><00:12:19.200><c> pointers</c>

00:12:19.509 --> 00:12:19.519 align:start position:0%
some pointers so left and right pointers
 

00:12:19.519 --> 00:12:20.870 align:start position:0%
some pointers so left and right pointers
these<00:12:19.760><c> are</c><00:12:19.839><c> going</c><00:12:19.920><c> to</c><00:12:20.000><c> represent</c><00:12:20.480><c> where</c><00:12:20.720><c> our</c>

00:12:20.870 --> 00:12:20.880 align:start position:0%
these are going to represent where our
 

00:12:20.880 --> 00:12:22.470 align:start position:0%
these are going to represent where our
window<00:12:21.279><c> currently</c><00:12:21.760><c> is</c><00:12:22.000><c> they're</c><00:12:22.160><c> both</c>

00:12:22.470 --> 00:12:22.480 align:start position:0%
window currently is they're both
 

00:12:22.480 --> 00:12:24.629 align:start position:0%
window currently is they're both
initially<00:12:23.040><c> going</c><00:12:23.200><c> to</c><00:12:23.279><c> be</c><00:12:23.440><c> set</c><00:12:23.600><c> to</c><00:12:23.839><c> zero</c>

00:12:24.629 --> 00:12:24.639 align:start position:0%
initially going to be set to zero
 

00:12:24.639 --> 00:12:26.870 align:start position:0%
initially going to be set to zero
and<00:12:24.800><c> we're</c><00:12:25.120><c> also</c><00:12:25.600><c> gonna</c><00:12:25.920><c> have</c><00:12:26.160><c> a</c><00:12:26.320><c> queue</c><00:12:26.720><c> in</c>

00:12:26.870 --> 00:12:26.880 align:start position:0%
and we're also gonna have a queue in
 

00:12:26.880 --> 00:12:28.430 align:start position:0%
and we're also gonna have a queue in
python<00:12:27.440><c> we</c><00:12:27.600><c> can</c><00:12:27.760><c> do</c>

00:12:28.430 --> 00:12:28.440 align:start position:0%
python we can do
 

00:12:28.440 --> 00:12:30.790 align:start position:0%
python we can do
collections.deck<00:12:29.680><c> and</c><00:12:29.839><c> so</c><00:12:30.079><c> we're</c><00:12:30.240><c> gonna</c><00:12:30.560><c> run</c>

00:12:30.790 --> 00:12:30.800 align:start position:0%
collections.deck and so we're gonna run
 

00:12:30.800 --> 00:12:32.069 align:start position:0%
collections.deck and so we're gonna run
this<00:12:31.120><c> until</c>

00:12:32.069 --> 00:12:32.079 align:start position:0%
this until
 

00:12:32.079 --> 00:12:34.629 align:start position:0%
this until
our<00:12:32.320><c> right</c><00:12:32.639><c> pointer</c><00:12:33.120><c> is</c><00:12:33.279><c> no</c><00:12:33.519><c> longer</c><00:12:33.920><c> inbound</c>

00:12:34.629 --> 00:12:34.639 align:start position:0%
our right pointer is no longer inbound
 

00:12:34.639 --> 00:12:35.190 align:start position:0%
our right pointer is no longer inbound
so

00:12:35.190 --> 00:12:35.200 align:start position:0%
so
 

00:12:35.200 --> 00:12:38.389 align:start position:0%
so
while<00:12:35.680><c> right</c><00:12:36.399><c> is</c><00:12:37.040><c> still</c><00:12:37.440><c> in</c><00:12:37.600><c> bounds</c>

00:12:38.389 --> 00:12:38.399 align:start position:0%
while right is still in bounds
 

00:12:38.399 --> 00:12:41.030 align:start position:0%
while right is still in bounds
so<00:12:38.800><c> we</c><00:12:39.200><c> want</c><00:12:39.440><c> to</c><00:12:39.680><c> to</c><00:12:39.839><c> our</c><00:12:40.079><c> q</c><00:12:40.320><c> we</c><00:12:40.560><c> want</c><00:12:40.720><c> to</c><00:12:40.880><c> be</c>

00:12:41.030 --> 00:12:41.040 align:start position:0%
so we want to to our q we want to be
 

00:12:41.040 --> 00:12:42.470 align:start position:0%
so we want to to our q we want to be
able<00:12:41.279><c> to</c><00:12:41.440><c> append</c>

00:12:42.470 --> 00:12:42.480 align:start position:0%
able to append
 

00:12:42.480 --> 00:12:45.829 align:start position:0%
able to append
the<00:12:42.720><c> value</c><00:12:43.279><c> this</c><00:12:43.600><c> value</c><00:12:44.000><c> right</c><00:12:44.399><c> r</c><00:12:45.200><c> and</c>

00:12:45.829 --> 00:12:45.839 align:start position:0%
the value this value right r and
 

00:12:45.839 --> 00:12:48.069 align:start position:0%
the value this value right r and
instead<00:12:46.160><c> of</c><00:12:46.240><c> doing</c><00:12:46.880><c> nums</c><00:12:47.279><c> of</c><00:12:47.440><c> r</c><00:12:47.839><c> i'm</c><00:12:47.920><c> just</c>

00:12:48.069 --> 00:12:48.079 align:start position:0%
instead of doing nums of r i'm just
 

00:12:48.079 --> 00:12:49.110 align:start position:0%
instead of doing nums of r i'm just
going<00:12:48.240><c> to</c><00:12:48.320><c> do</c>

00:12:49.110 --> 00:12:49.120 align:start position:0%
going to do
 

00:12:49.120 --> 00:12:52.470 align:start position:0%
going to do
the<00:12:49.839><c> index</c><00:12:50.399><c> itself</c><00:12:51.360><c> so</c><00:12:51.600><c> this</c><00:12:51.839><c> is</c><00:12:51.920><c> going</c><00:12:52.000><c> to</c>

00:12:52.470 --> 00:12:52.480 align:start position:0%
the index itself so this is going to
 

00:12:52.480 --> 00:12:55.670 align:start position:0%
the index itself so this is going to
contain<00:12:53.120><c> indices</c><00:12:54.560><c> because</c><00:12:54.880><c> we</c><00:12:55.040><c> know</c><00:12:55.279><c> we</c><00:12:55.440><c> can</c>

00:12:55.670 --> 00:12:55.680 align:start position:0%
contain indices because we know we can
 

00:12:55.680 --> 00:12:56.230 align:start position:0%
contain indices because we know we can
take<00:12:56.000><c> an</c>

00:12:56.230 --> 00:12:56.240 align:start position:0%
take an
 

00:12:56.240 --> 00:12:58.790 align:start position:0%
take an
index<00:12:56.720><c> like</c><00:12:57.040><c> r</c><00:12:57.360><c> and</c><00:12:57.680><c> then</c><00:12:57.920><c> easily</c><00:12:58.399><c> find</c><00:12:58.639><c> the</c>

00:12:58.790 --> 00:12:58.800 align:start position:0%
index like r and then easily find the
 

00:12:58.800 --> 00:13:00.069 align:start position:0%
index like r and then easily find the
number<00:12:59.120><c> that</c><00:12:59.360><c> maps</c><00:12:59.680><c> do</c>

00:13:00.069 --> 00:13:00.079 align:start position:0%
number that maps do
 

00:13:00.079 --> 00:13:02.870 align:start position:0%
number that maps do
by<00:13:00.240><c> just</c><00:13:00.480><c> taking</c><00:13:00.880><c> nums</c><00:13:01.519><c> of</c><00:13:01.680><c> r</c><00:13:02.000><c> right</c><00:13:02.639><c> but</c>

00:13:02.870 --> 00:13:02.880 align:start position:0%
by just taking nums of r right but
 

00:13:02.880 --> 00:13:05.990 align:start position:0%
by just taking nums of r right but
before<00:13:03.600><c> we're</c><00:13:03.839><c> even</c><00:13:04.160><c> allowed</c><00:13:04.800><c> to</c><00:13:04.959><c> append</c>

00:13:05.990 --> 00:13:06.000 align:start position:0%
before we're even allowed to append
 

00:13:06.000 --> 00:13:08.470 align:start position:0%
before we're even allowed to append
a<00:13:06.160><c> value</c><00:13:06.560><c> to</c><00:13:06.720><c> our</c><00:13:06.959><c> queue</c><00:13:07.519><c> we</c><00:13:07.680><c> have</c><00:13:07.839><c> to</c><00:13:08.240><c> make</c>

00:13:08.470 --> 00:13:08.480 align:start position:0%
a value to our queue we have to make
 

00:13:08.480 --> 00:13:09.430 align:start position:0%
a value to our queue we have to make
sure<00:13:08.720><c> that</c><00:13:08.959><c> no</c>

00:13:09.430 --> 00:13:09.440 align:start position:0%
sure that no
 

00:13:09.440 --> 00:13:12.310 align:start position:0%
sure that no
smaller<00:13:10.000><c> values</c><00:13:10.560><c> exist</c><00:13:10.959><c> in</c><00:13:11.120><c> our</c><00:13:11.279><c> queue</c><00:13:11.920><c> so</c>

00:13:12.310 --> 00:13:12.320 align:start position:0%
smaller values exist in our queue so
 

00:13:12.320 --> 00:13:13.030 align:start position:0%
smaller values exist in our queue so
while

00:13:13.030 --> 00:13:13.040 align:start position:0%
while
 

00:13:13.040 --> 00:13:16.470 align:start position:0%
while
the<00:13:13.279><c> queue</c><00:13:13.519><c> is</c><00:13:13.760><c> non-empty</c><00:13:14.720><c> and</c><00:13:15.680><c> the</c><00:13:16.000><c> top</c>

00:13:16.470 --> 00:13:16.480 align:start position:0%
the queue is non-empty and the top
 

00:13:16.480 --> 00:13:19.030 align:start position:0%
the queue is non-empty and the top
value<00:13:17.040><c> in</c><00:13:17.279><c> our</c><00:13:17.519><c> queue</c><00:13:18.079><c> or</c><00:13:18.240><c> the</c><00:13:18.480><c> rightmost</c>

00:13:19.030 --> 00:13:19.040 align:start position:0%
value in our queue or the rightmost
 

00:13:19.040 --> 00:13:20.550 align:start position:0%
value in our queue or the rightmost
value<00:13:19.440><c> in</c><00:13:19.600><c> our</c><00:13:19.839><c> queue</c>

00:13:20.550 --> 00:13:20.560 align:start position:0%
value in our queue
 

00:13:20.560 --> 00:13:23.430 align:start position:0%
value in our queue
is<00:13:20.959><c> less</c><00:13:21.440><c> than</c><00:13:22.320><c> the</c><00:13:22.480><c> value</c><00:13:22.880><c> that</c><00:13:23.120><c> we're</c>

00:13:23.430 --> 00:13:23.440 align:start position:0%
is less than the value that we're
 

00:13:23.440 --> 00:13:25.269 align:start position:0%
is less than the value that we're
inserting

00:13:25.269 --> 00:13:25.279 align:start position:0%
inserting
 

00:13:25.279 --> 00:13:27.590 align:start position:0%
inserting
nums<00:13:25.680><c> of</c><00:13:26.000><c> r</c><00:13:26.320><c> which</c><00:13:26.480><c> is</c><00:13:26.639><c> the</c><00:13:26.800><c> current</c><00:13:27.200><c> index</c>

00:13:27.590 --> 00:13:27.600 align:start position:0%
nums of r which is the current index
 

00:13:27.600 --> 00:13:28.310 align:start position:0%
nums of r which is the current index
we're<00:13:27.839><c> at</c>

00:13:28.310 --> 00:13:28.320 align:start position:0%
we're at
 

00:13:28.320 --> 00:13:31.190 align:start position:0%
we're at
so<00:13:28.639><c> while</c><00:13:29.120><c> smaller</c><00:13:29.680><c> values</c><00:13:30.480><c> exist</c><00:13:30.880><c> in</c><00:13:31.040><c> our</c>

00:13:31.190 --> 00:13:31.200 align:start position:0%
so while smaller values exist in our
 

00:13:31.200 --> 00:13:33.110 align:start position:0%
so while smaller values exist in our
queue<00:13:31.519><c> we</c><00:13:31.680><c> just</c><00:13:31.839><c> want</c><00:13:32.000><c> to</c><00:13:32.240><c> pop</c><00:13:32.560><c> from</c><00:13:32.720><c> the</c><00:13:32.880><c> queue</c>

00:13:33.110 --> 00:13:33.120 align:start position:0%
queue we just want to pop from the queue
 

00:13:33.120 --> 00:13:34.230 align:start position:0%
queue we just want to pop from the queue
just<00:13:33.360><c> remove</c>

00:13:34.230 --> 00:13:34.240 align:start position:0%
just remove
 

00:13:34.240 --> 00:13:37.269 align:start position:0%
just remove
values<00:13:35.120><c> while</c><00:13:35.519><c> that</c><00:13:35.839><c> condition</c><00:13:36.399><c> holds</c><00:13:36.959><c> and</c>

00:13:37.269 --> 00:13:37.279 align:start position:0%
values while that condition holds and
 

00:13:37.279 --> 00:13:40.230 align:start position:0%
values while that condition holds and
only<00:13:37.839><c> after</c><00:13:38.240><c> we</c><00:13:38.560><c> do</c><00:13:38.800><c> that</c><00:13:39.199><c> are</c><00:13:39.360><c> we</c><00:13:39.600><c> allowed</c><00:13:40.000><c> to</c>

00:13:40.230 --> 00:13:40.240 align:start position:0%
only after we do that are we allowed to
 

00:13:40.240 --> 00:13:42.389 align:start position:0%
only after we do that are we allowed to
add<00:13:40.560><c> the</c><00:13:40.800><c> new</c><00:13:41.120><c> value</c><00:13:41.519><c> to</c><00:13:41.680><c> the</c><00:13:41.839><c> queue</c>

00:13:42.389 --> 00:13:42.399 align:start position:0%
add the new value to the queue
 

00:13:42.399 --> 00:13:46.389 align:start position:0%
add the new value to the queue
we<00:13:42.800><c> also</c><00:13:43.600><c> if</c><00:13:43.920><c> our</c><00:13:44.160><c> window</c><00:13:44.639><c> if</c><00:13:44.800><c> the</c><00:13:45.040><c> left</c><00:13:45.440><c> value</c>

00:13:46.389 --> 00:13:46.399 align:start position:0%
we also if our window if the left value
 

00:13:46.399 --> 00:13:49.990 align:start position:0%
we also if our window if the left value
is<00:13:47.120><c> out</c><00:13:47.279><c> of</c><00:13:47.440><c> bounds</c><00:13:47.920><c> then</c><00:13:48.160><c> remove</c><00:13:49.120><c> the</c><00:13:49.440><c> left</c>

00:13:49.990 --> 00:13:50.000 align:start position:0%
is out of bounds then remove the left
 

00:13:50.000 --> 00:13:53.030 align:start position:0%
is out of bounds then remove the left
value<00:13:51.279><c> from</c><00:13:51.920><c> the</c><00:13:52.160><c> window</c>

00:13:53.030 --> 00:13:53.040 align:start position:0%
value from the window
 

00:13:53.040 --> 00:13:56.150 align:start position:0%
value from the window
so<00:13:53.839><c> if</c><00:13:54.240><c> our</c><00:13:54.639><c> left</c><00:13:55.120><c> index</c>

00:13:56.150 --> 00:13:56.160 align:start position:0%
so if our left index
 

00:13:56.160 --> 00:13:59.509 align:start position:0%
so if our left index
left<00:13:56.800><c> is</c><00:13:57.120><c> currently</c><00:13:58.240><c> greater</c><00:13:59.040><c> than</c><00:13:59.199><c> the</c>

00:13:59.509 --> 00:13:59.519 align:start position:0%
left is currently greater than the
 

00:13:59.519 --> 00:14:01.590 align:start position:0%
left is currently greater than the
leftmost<00:14:00.240><c> value</c><00:14:00.720><c> in</c><00:14:00.880><c> our</c><00:14:01.040><c> queue</c>

00:14:01.590 --> 00:14:01.600 align:start position:0%
leftmost value in our queue
 

00:14:01.600 --> 00:14:04.150 align:start position:0%
leftmost value in our queue
then<00:14:01.839><c> we</c><00:14:02.000><c> can</c><00:14:02.320><c> pop</c><00:14:02.720><c> from</c><00:14:02.959><c> the</c><00:14:03.360><c> left</c><00:14:03.760><c> of</c><00:14:03.920><c> the</c>

00:14:04.150 --> 00:14:04.160 align:start position:0%
then we can pop from the left of the
 

00:14:04.160 --> 00:14:05.590 align:start position:0%
then we can pop from the left of the
queue

00:14:05.590 --> 00:14:05.600 align:start position:0%
queue
 

00:14:05.600 --> 00:14:08.389 align:start position:0%
queue
so<00:14:05.839><c> basically</c><00:14:07.279><c> we</c><00:14:07.440><c> know</c><00:14:07.760><c> left</c><00:14:08.000><c> and</c><00:14:08.160><c> right</c>

00:14:08.389 --> 00:14:08.399 align:start position:0%
so basically we know left and right
 

00:14:08.399 --> 00:14:09.750 align:start position:0%
so basically we know left and right
represent<00:14:08.880><c> our</c><00:14:09.040><c> window</c>

00:14:09.750 --> 00:14:09.760 align:start position:0%
represent our window
 

00:14:09.760 --> 00:14:12.870 align:start position:0%
represent our window
so<00:14:10.000><c> if</c><00:14:10.720><c> our</c><00:14:10.959><c> window</c><00:14:11.600><c> is</c><00:14:12.000><c> out</c><00:14:12.240><c> of</c><00:14:12.560><c> if</c>

00:14:12.870 --> 00:14:12.880 align:start position:0%
so if our window is out of if
 

00:14:12.880 --> 00:14:14.949 align:start position:0%
so if our window is out of if
this<00:14:13.199><c> value</c><00:14:13.680><c> the</c><00:14:13.839><c> leftmost</c><00:14:14.240><c> value</c><00:14:14.639><c> in</c><00:14:14.800><c> our</c>

00:14:14.949 --> 00:14:14.959 align:start position:0%
this value the leftmost value in our
 

00:14:14.959 --> 00:14:15.990 align:start position:0%
this value the leftmost value in our
queue<00:14:15.360><c> is</c><00:14:15.519><c> out</c><00:14:15.760><c> of</c>

00:14:15.990 --> 00:14:16.000 align:start position:0%
queue is out of
 

00:14:16.000 --> 00:14:17.990 align:start position:0%
queue is out of
bounds<00:14:16.399><c> of</c><00:14:16.560><c> our</c><00:14:16.720><c> window</c><00:14:17.120><c> we're</c><00:14:17.279><c> gonna</c><00:14:17.600><c> remove</c>

00:14:17.990 --> 00:14:18.000 align:start position:0%
bounds of our window we're gonna remove
 

00:14:18.000 --> 00:14:19.750 align:start position:0%
bounds of our window we're gonna remove
that<00:14:18.240><c> we</c><00:14:18.480><c> have</c><00:14:18.720><c> to</c><00:14:18.880><c> remove</c><00:14:19.360><c> that</c>

00:14:19.750 --> 00:14:19.760 align:start position:0%
that we have to remove that
 

00:14:19.760 --> 00:14:23.110 align:start position:0%
that we have to remove that
and<00:14:20.000><c> this</c><00:14:20.320><c> part</c><00:14:20.639><c> is</c><00:14:20.880><c> kind</c><00:14:21.120><c> of</c><00:14:21.279><c> an</c><00:14:21.519><c> edge</c><00:14:21.839><c> case</c><00:14:22.639><c> uh</c>

00:14:23.110 --> 00:14:23.120 align:start position:0%
and this part is kind of an edge case uh
 

00:14:23.120 --> 00:14:25.829 align:start position:0%
and this part is kind of an edge case uh
since<00:14:23.519><c> we're</c><00:14:24.000><c> since</c><00:14:24.240><c> we</c><00:14:24.560><c> are</c><00:14:24.800><c> starting</c><00:14:25.440><c> at</c><00:14:25.680><c> our</c>

00:14:25.829 --> 00:14:25.839 align:start position:0%
since we're since we are starting at our
 

00:14:25.839 --> 00:14:27.189 align:start position:0%
since we're since we are starting at our
window<00:14:26.240><c> being</c>

00:14:27.189 --> 00:14:27.199 align:start position:0%
window being
 

00:14:27.199 --> 00:14:29.189 align:start position:0%
window being
uh<00:14:27.519><c> left</c><00:14:27.760><c> and</c><00:14:27.839><c> right</c><00:14:28.079><c> both</c><00:14:28.320><c> being</c><00:14:28.560><c> at</c><00:14:28.720><c> zero</c><00:14:29.040><c> we</c>

00:14:29.189 --> 00:14:29.199 align:start position:0%
uh left and right both being at zero we
 

00:14:29.199 --> 00:14:30.310 align:start position:0%
uh left and right both being at zero we
have<00:14:29.360><c> to</c><00:14:29.839><c> check</c>

00:14:30.310 --> 00:14:30.320 align:start position:0%
have to check
 

00:14:30.320 --> 00:14:33.750 align:start position:0%
have to check
that<00:14:30.959><c> our</c><00:14:31.760><c> uh</c><00:14:32.639><c> right</c><00:14:33.279><c> plus</c>

00:14:33.750 --> 00:14:33.760 align:start position:0%
that our uh right plus
 

00:14:33.760 --> 00:14:36.870 align:start position:0%
that our uh right plus
our<00:14:33.920><c> window</c><00:14:34.320><c> is</c><00:14:34.399><c> at</c><00:14:34.639><c> least</c><00:14:35.120><c> size</c><00:14:35.760><c> k</c><00:14:36.320><c> so</c>

00:14:36.870 --> 00:14:36.880 align:start position:0%
our window is at least size k so
 

00:14:36.880 --> 00:14:38.710 align:start position:0%
our window is at least size k so
so<00:14:37.120><c> if</c><00:14:37.279><c> we</c><00:14:37.440><c> want</c><00:14:37.600><c> to</c><00:14:37.680><c> update</c><00:14:38.079><c> the</c><00:14:38.240><c> output</c><00:14:38.639><c> we</c>

00:14:38.710 --> 00:14:38.720 align:start position:0%
so if we want to update the output we
 

00:14:38.720 --> 00:14:40.470 align:start position:0%
so if we want to update the output we
have<00:14:38.880><c> to</c><00:14:38.959><c> make</c><00:14:39.120><c> sure</c><00:14:39.360><c> our</c><00:14:39.440><c> window</c><00:14:39.920><c> is</c><00:14:40.079><c> at</c><00:14:40.240><c> least</c>

00:14:40.470 --> 00:14:40.480 align:start position:0%
have to make sure our window is at least
 

00:14:40.480 --> 00:14:40.870 align:start position:0%
have to make sure our window is at least
size

00:14:40.870 --> 00:14:40.880 align:start position:0%
size
 

00:14:40.880 --> 00:14:43.110 align:start position:0%
size
k<00:14:41.199><c> so</c><00:14:41.760><c> that's</c><00:14:42.079><c> basically</c><00:14:42.480><c> what</c><00:14:42.720><c> i'm</c><00:14:42.800><c> doing</c>

00:14:43.110 --> 00:14:43.120 align:start position:0%
k so that's basically what i'm doing
 

00:14:43.120 --> 00:14:44.470 align:start position:0%
k so that's basically what i'm doing
here<00:14:43.680><c> and</c><00:14:43.839><c> for</c><00:14:44.079><c> each</c>

00:14:44.470 --> 00:14:44.480 align:start position:0%
here and for each
 

00:14:44.480 --> 00:14:46.710 align:start position:0%
here and for each
iteration<00:14:45.120><c> of</c><00:14:45.199><c> the</c><00:14:45.440><c> loop</c><00:14:45.760><c> basically</c><00:14:46.240><c> for</c><00:14:46.480><c> each</c>

00:14:46.710 --> 00:14:46.720 align:start position:0%
iteration of the loop basically for each
 

00:14:46.720 --> 00:14:49.030 align:start position:0%
iteration of the loop basically for each
window<00:14:47.120><c> we</c><00:14:47.360><c> want</c><00:14:47.600><c> to</c><00:14:47.920><c> append</c>

00:14:49.030 --> 00:14:49.040 align:start position:0%
window we want to append
 

00:14:49.040 --> 00:14:52.230 align:start position:0%
window we want to append
our<00:14:49.600><c> output</c><00:14:50.560><c> with</c><00:14:50.800><c> the</c><00:14:50.959><c> maximum</c>

00:14:52.230 --> 00:14:52.240 align:start position:0%
our output with the maximum
 

00:14:52.240 --> 00:14:55.509 align:start position:0%
our output with the maximum
so<00:14:52.800><c> we</c><00:14:52.959><c> know</c><00:14:53.120><c> the</c><00:14:53.279><c> maximum</c><00:14:54.320><c> is</c><00:14:54.560><c> the</c><00:14:54.880><c> left</c><00:14:55.199><c> most</c>

00:14:55.509 --> 00:14:55.519 align:start position:0%
so we know the maximum is the left most
 

00:14:55.519 --> 00:14:57.350 align:start position:0%
so we know the maximum is the left most
position<00:14:56.000><c> in</c><00:14:56.160><c> our</c><00:14:56.320><c> queue</c>

00:14:57.350 --> 00:14:57.360 align:start position:0%
position in our queue
 

00:14:57.360 --> 00:14:59.350 align:start position:0%
position in our queue
and<00:14:57.600><c> we</c><00:14:57.839><c> want</c><00:14:58.079><c> not</c><00:14:58.320><c> the</c><00:14:58.560><c> index</c><00:14:58.880><c> but</c><00:14:59.040><c> we</c><00:14:59.199><c> want</c>

00:14:59.350 --> 00:14:59.360 align:start position:0%
and we want not the index but we want
 

00:14:59.360 --> 00:15:01.509 align:start position:0%
and we want not the index but we want
the<00:14:59.519><c> actual</c><00:15:00.079><c> value</c><00:15:00.639><c> itself</c>

00:15:01.509 --> 00:15:01.519 align:start position:0%
the actual value itself
 

00:15:01.519 --> 00:15:03.829 align:start position:0%
the actual value itself
don't<00:15:01.760><c> forget</c><00:15:02.160><c> like</c><00:15:02.399><c> me</c><00:15:02.800><c> to</c><00:15:03.199><c> update</c><00:15:03.600><c> your</c>

00:15:03.829 --> 00:15:03.839 align:start position:0%
don't forget like me to update your
 

00:15:03.839 --> 00:15:04.870 align:start position:0%
don't forget like me to update your
pointer<00:15:04.320><c> so</c>

00:15:04.870 --> 00:15:04.880 align:start position:0%
pointer so
 

00:15:04.880 --> 00:15:07.430 align:start position:0%
pointer so
we<00:15:05.040><c> know</c><00:15:05.519><c> right</c><00:15:06.079><c> is</c><00:15:06.399><c> always</c><00:15:06.800><c> going</c><00:15:07.040><c> to</c><00:15:07.199><c> be</c>

00:15:07.430 --> 00:15:07.440 align:start position:0%
we know right is always going to be
 

00:15:07.440 --> 00:15:08.389 align:start position:0%
we know right is always going to be
incremented<00:15:08.079><c> so</c>

00:15:08.389 --> 00:15:08.399 align:start position:0%
incremented so
 

00:15:08.399 --> 00:15:10.790 align:start position:0%
incremented so
at<00:15:08.560><c> the</c><00:15:08.720><c> end</c><00:15:08.959><c> of</c><00:15:09.199><c> our</c><00:15:09.519><c> loop</c><00:15:09.839><c> we</c><00:15:10.000><c> can</c><00:15:10.240><c> increment</c>

00:15:10.790 --> 00:15:10.800 align:start position:0%
at the end of our loop we can increment
 

00:15:10.800 --> 00:15:11.590 align:start position:0%
at the end of our loop we can increment
right

00:15:11.590 --> 00:15:11.600 align:start position:0%
right
 

00:15:11.600 --> 00:15:13.829 align:start position:0%
right
left<00:15:12.160><c> though</c><00:15:12.560><c> is</c><00:15:12.880><c> only</c><00:15:13.360><c> going</c><00:15:13.519><c> to</c><00:15:13.600><c> be</c>

00:15:13.829 --> 00:15:13.839 align:start position:0%
left though is only going to be
 

00:15:13.839 --> 00:15:14.870 align:start position:0%
left though is only going to be
incremented

00:15:14.870 --> 00:15:14.880 align:start position:0%
incremented
 

00:15:14.880 --> 00:15:17.990 align:start position:0%
incremented
once<00:15:15.360><c> our</c><00:15:15.519><c> window</c><00:15:16.000><c> is</c><00:15:16.240><c> at</c><00:15:16.480><c> least</c><00:15:16.880><c> size</c><00:15:17.360><c> k</c>

00:15:17.990 --> 00:15:18.000 align:start position:0%
once our window is at least size k
 

00:15:18.000 --> 00:15:19.990 align:start position:0%
once our window is at least size k
so<00:15:18.560><c> we're</c><00:15:18.720><c> going</c><00:15:18.800><c> to</c><00:15:18.880><c> put</c><00:15:19.120><c> that</c><00:15:19.440><c> inside</c><00:15:19.920><c> of</c>

00:15:19.990 --> 00:15:20.000 align:start position:0%
so we're going to put that inside of
 

00:15:20.000 --> 00:15:21.110 align:start position:0%
so we're going to put that inside of
this<00:15:20.240><c> condition</c>

00:15:21.110 --> 00:15:21.120 align:start position:0%
this condition
 

00:15:21.120 --> 00:15:23.189 align:start position:0%
this condition
and<00:15:21.360><c> now</c><00:15:21.600><c> the</c><00:15:21.760><c> only</c><00:15:22.000><c> thing</c><00:15:22.240><c> left</c><00:15:22.480><c> for</c><00:15:22.639><c> us</c><00:15:22.720><c> to</c><00:15:22.880><c> do</c>

00:15:23.189 --> 00:15:23.199 align:start position:0%
and now the only thing left for us to do
 

00:15:23.199 --> 00:15:24.310 align:start position:0%
and now the only thing left for us to do
is<00:15:23.519><c> return</c><00:15:24.000><c> that</c>

00:15:24.310 --> 00:15:24.320 align:start position:0%
is return that
 

00:15:24.320 --> 00:15:27.110 align:start position:0%
is return that
output<00:15:25.199><c> and</c><00:15:25.360><c> it</c><00:15:25.519><c> works</c><00:15:26.240><c> and</c><00:15:26.480><c> we</c><00:15:26.720><c> know</c><00:15:26.880><c> that</c>

00:15:27.110 --> 00:15:27.120 align:start position:0%
output and it works and we know that
 

00:15:27.120 --> 00:15:27.509 align:start position:0%
output and it works and we know that
this

00:15:27.509 --> 00:15:27.519 align:start position:0%
this
 

00:15:27.519 --> 00:15:29.910 align:start position:0%
this
is<00:15:27.760><c> the</c><00:15:28.000><c> most</c><00:15:28.320><c> efficient</c><00:15:28.800><c> solution</c><00:15:29.600><c> with</c><00:15:29.759><c> the</c>

00:15:29.910 --> 00:15:29.920 align:start position:0%
is the most efficient solution with the
 

00:15:29.920 --> 00:15:32.150 align:start position:0%
is the most efficient solution with the
time<00:15:30.240><c> complexity</c><00:15:30.959><c> being</c><00:15:31.279><c> linear</c>

00:15:32.150 --> 00:15:32.160 align:start position:0%
time complexity being linear
 

00:15:32.160 --> 00:15:34.389 align:start position:0%
time complexity being linear
and<00:15:32.320><c> the</c><00:15:32.560><c> memory</c><00:15:32.959><c> complexity</c><00:15:33.680><c> also</c><00:15:34.160><c> being</c>

00:15:34.389 --> 00:15:34.399 align:start position:0%
and the memory complexity also being
 

00:15:34.399 --> 00:15:36.230 align:start position:0%
and the memory complexity also being
linear<00:15:34.880><c> because</c><00:15:35.120><c> we</c><00:15:35.360><c> are</c><00:15:35.519><c> using</c><00:15:35.839><c> a</c><00:15:35.920><c> data</c>

00:15:36.230 --> 00:15:36.240 align:start position:0%
linear because we are using a data
 

00:15:36.240 --> 00:15:36.870 align:start position:0%
linear because we are using a data
structure

00:15:36.870 --> 00:15:36.880 align:start position:0%
structure
 

00:15:36.880 --> 00:15:39.990 align:start position:0%
structure
our<00:15:37.199><c> q</c><00:15:38.160><c> so</c><00:15:38.320><c> i</c><00:15:38.399><c> hope</c><00:15:38.639><c> this</c><00:15:38.800><c> was</c><00:15:38.959><c> helpful</c><00:15:39.680><c> if</c><00:15:39.839><c> you</c>

00:15:39.990 --> 00:15:40.000 align:start position:0%
our q so i hope this was helpful if you
 

00:15:40.000 --> 00:15:40.629 align:start position:0%
our q so i hope this was helpful if you
enjoyed

00:15:40.629 --> 00:15:40.639 align:start position:0%
enjoyed
 

00:15:40.639 --> 00:15:42.389 align:start position:0%
enjoyed
please<00:15:40.959><c> like</c><00:15:41.199><c> and</c><00:15:41.360><c> subscribe</c><00:15:41.839><c> it</c><00:15:42.000><c> supports</c>

00:15:42.389 --> 00:15:42.399 align:start position:0%
please like and subscribe it supports
 

00:15:42.399 --> 00:15:44.470 align:start position:0%
please like and subscribe it supports
the<00:15:42.560><c> channel</c><00:15:42.959><c> a</c><00:15:43.120><c> lot</c><00:15:43.519><c> and</c><00:15:43.680><c> i'll</c><00:15:43.839><c> hopefully</c>

00:15:44.470 --> 00:15:44.480 align:start position:0%
the channel a lot and i'll hopefully
 

00:15:44.480 --> 00:15:47.519 align:start position:0%
the channel a lot and i'll hopefully
see<00:15:44.639><c> you</c><00:15:44.880><c> pretty</c><00:15:45.120><c> soon</c>

