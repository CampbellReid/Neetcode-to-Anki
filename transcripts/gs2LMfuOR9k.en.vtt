WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.750 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.640><c> welcome</c><00:00:01.120><c> back</c><00:00:01.360><c> and</c><00:00:01.520><c> let's</c>

00:00:01.750 --> 00:00:01.760 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.760 --> 00:00:03.590 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.920><c> some</c><00:00:02.080><c> more</c><00:00:02.320><c> neat</c><00:00:02.560><c> code</c><00:00:02.800><c> today</c><00:00:03.199><c> so</c>

00:00:03.590 --> 00:00:03.600 align:start position:0%
write some more neat code today so
 

00:00:03.600 --> 00:00:05.670 align:start position:0%
write some more neat code today so
today<00:00:03.919><c> we're</c><00:00:04.160><c> gonna</c><00:00:04.400><c> solve</c><00:00:04.799><c> lowest</c><00:00:05.200><c> common</c>

00:00:05.670 --> 00:00:05.680 align:start position:0%
today we're gonna solve lowest common
 

00:00:05.680 --> 00:00:07.829 align:start position:0%
today we're gonna solve lowest common
ancestor<00:00:06.240><c> of</c><00:00:06.399><c> a</c><00:00:06.480><c> binary</c><00:00:07.040><c> search</c><00:00:07.359><c> tree</c>

00:00:07.829 --> 00:00:07.839 align:start position:0%
ancestor of a binary search tree
 

00:00:07.839 --> 00:00:10.070 align:start position:0%
ancestor of a binary search tree
and<00:00:08.000><c> if</c><00:00:08.080><c> you</c><00:00:08.240><c> recall</c><00:00:08.639><c> a</c><00:00:08.800><c> while</c><00:00:09.040><c> ago</c><00:00:09.440><c> in</c><00:00:09.599><c> a</c><00:00:09.679><c> video</c>

00:00:10.070 --> 00:00:10.080 align:start position:0%
and if you recall a while ago in a video
 

00:00:10.080 --> 00:00:11.589 align:start position:0%
and if you recall a while ago in a video
i<00:00:10.240><c> showed</c><00:00:10.559><c> you</c><00:00:10.719><c> guys</c><00:00:11.040><c> this</c>

00:00:11.589 --> 00:00:11.599 align:start position:0%
i showed you guys this
 

00:00:11.599 --> 00:00:14.470 align:start position:0%
i showed you guys this
sheet<00:00:11.920><c> of</c><00:00:12.320><c> the</c><00:00:12.559><c> 75</c><00:00:13.280><c> blind</c><00:00:13.759><c> problems</c><00:00:14.240><c> that</c><00:00:14.400><c> have</c>

00:00:14.470 --> 00:00:14.480 align:start position:0%
sheet of the 75 blind problems that have
 

00:00:14.480 --> 00:00:16.470 align:start position:0%
sheet of the 75 blind problems that have
become<00:00:14.960><c> pretty</c><00:00:15.280><c> popular</c><00:00:15.839><c> and</c><00:00:16.000><c> so</c><00:00:16.160><c> this</c><00:00:16.320><c> is</c>

00:00:16.470 --> 00:00:16.480 align:start position:0%
become pretty popular and so this is
 

00:00:16.480 --> 00:00:18.390 align:start position:0%
become pretty popular and so this is
basically<00:00:16.960><c> a</c><00:00:17.119><c> spreadsheet</c><00:00:17.680><c> that</c><00:00:17.760><c> i</c><00:00:17.920><c> showed</c>

00:00:18.390 --> 00:00:18.400 align:start position:0%
basically a spreadsheet that i showed
 

00:00:18.400 --> 00:00:20.390 align:start position:0%
basically a spreadsheet that i showed
with<00:00:18.720><c> an</c><00:00:18.880><c> entire</c><00:00:19.279><c> list</c><00:00:19.600><c> of</c><00:00:19.760><c> those</c><00:00:20.000><c> problems</c>

00:00:20.390 --> 00:00:20.400 align:start position:0%
with an entire list of those problems
 

00:00:20.400 --> 00:00:22.150 align:start position:0%
with an entire list of those problems
and<00:00:20.480><c> i've</c><00:00:20.640><c> actually</c><00:00:21.039><c> ended</c><00:00:21.279><c> up</c><00:00:21.359><c> making</c><00:00:21.760><c> videos</c>

00:00:22.150 --> 00:00:22.160 align:start position:0%
and i've actually ended up making videos
 

00:00:22.160 --> 00:00:24.070 align:start position:0%
and i've actually ended up making videos
for<00:00:22.320><c> most</c><00:00:22.640><c> of</c><00:00:22.720><c> these</c><00:00:22.960><c> problems</c><00:00:23.359><c> so</c><00:00:23.519><c> far</c>

00:00:24.070 --> 00:00:24.080 align:start position:0%
for most of these problems so far
 

00:00:24.080 --> 00:00:26.070 align:start position:0%
for most of these problems so far
the<00:00:24.320><c> video</c><00:00:24.560><c> that</c><00:00:24.640><c> we're</c><00:00:24.800><c> doing</c><00:00:25.119><c> today</c><00:00:25.840><c> is</c>

00:00:26.070 --> 00:00:26.080 align:start position:0%
the video that we're doing today is
 

00:00:26.080 --> 00:00:27.429 align:start position:0%
the video that we're doing today is
actually<00:00:26.320><c> going</c><00:00:26.480><c> to</c><00:00:26.640><c> be</c><00:00:26.720><c> lowest</c><00:00:27.119><c> common</c>

00:00:27.429 --> 00:00:27.439 align:start position:0%
actually going to be lowest common
 

00:00:27.439 --> 00:00:28.950 align:start position:0%
actually going to be lowest common
ancestor<00:00:27.840><c> one</c><00:00:28.000><c> of</c><00:00:28.080><c> the</c><00:00:28.240><c> few</c><00:00:28.400><c> problems</c><00:00:28.720><c> that</c><00:00:28.880><c> i</c>

00:00:28.950 --> 00:00:28.960 align:start position:0%
ancestor one of the few problems that i
 

00:00:28.960 --> 00:00:30.390 align:start position:0%
ancestor one of the few problems that i
haven't<00:00:29.199><c> done</c><00:00:29.439><c> yet</c><00:00:29.679><c> so</c>

00:00:30.390 --> 00:00:30.400 align:start position:0%
haven't done yet so
 

00:00:30.400 --> 00:00:32.069 align:start position:0%
haven't done yet so
i<00:00:30.480><c> will</c><00:00:30.720><c> be</c><00:00:30.880><c> linking</c><00:00:31.279><c> this</c><00:00:31.599><c> sheet</c><00:00:31.920><c> in</c><00:00:32.000><c> the</c>

00:00:32.069 --> 00:00:32.079 align:start position:0%
i will be linking this sheet in the
 

00:00:32.079 --> 00:00:33.430 align:start position:0%
i will be linking this sheet in the
description<00:00:32.640><c> if</c><00:00:32.719><c> you</c><00:00:32.800><c> do</c><00:00:32.960><c> want</c><00:00:33.120><c> to</c><00:00:33.200><c> take</c><00:00:33.360><c> a</c>

00:00:33.430 --> 00:00:33.440 align:start position:0%
description if you do want to take a
 

00:00:33.440 --> 00:00:35.270 align:start position:0%
description if you do want to take a
look<00:00:33.680><c> and</c><00:00:33.760><c> i'll</c><00:00:34.000><c> probably</c><00:00:34.320><c> be</c><00:00:34.480><c> trying</c><00:00:34.800><c> to</c><00:00:34.960><c> wrap</c>

00:00:35.270 --> 00:00:35.280 align:start position:0%
look and i'll probably be trying to wrap
 

00:00:35.280 --> 00:00:37.270 align:start position:0%
look and i'll probably be trying to wrap
up<00:00:35.520><c> most</c><00:00:35.840><c> of</c><00:00:35.920><c> the</c><00:00:36.079><c> problems</c><00:00:36.559><c> in</c><00:00:36.719><c> this</c><00:00:36.960><c> list</c><00:00:37.200><c> i</c>

00:00:37.270 --> 00:00:37.280 align:start position:0%
up most of the problems in this list i
 

00:00:37.280 --> 00:00:38.310 align:start position:0%
up most of the problems in this list i
think<00:00:37.440><c> one</c><00:00:37.600><c> of</c><00:00:37.680><c> the</c>

00:00:38.310 --> 00:00:38.320 align:start position:0%
think one of the
 

00:00:38.320 --> 00:00:39.670 align:start position:0%
think one of the
next<00:00:38.559><c> ones</c><00:00:38.800><c> that</c><00:00:38.879><c> i'm</c><00:00:39.040><c> going</c><00:00:39.120><c> to</c><00:00:39.200><c> be</c><00:00:39.280><c> doing</c><00:00:39.520><c> is</c>

00:00:39.670 --> 00:00:39.680 align:start position:0%
next ones that i'm going to be doing is
 

00:00:39.680 --> 00:00:41.270 align:start position:0%
next ones that i'm going to be doing is
alien<00:00:40.079><c> dictionary</c><00:00:40.559><c> because</c><00:00:40.719><c> i</c><00:00:40.879><c> really</c><00:00:41.120><c> like</c>

00:00:41.270 --> 00:00:41.280 align:start position:0%
alien dictionary because i really like
 

00:00:41.280 --> 00:00:42.310 align:start position:0%
alien dictionary because i really like
that<00:00:41.600><c> problem</c>

00:00:42.310 --> 00:00:42.320 align:start position:0%
that problem
 

00:00:42.320 --> 00:00:44.389 align:start position:0%
that problem
and<00:00:42.559><c> once</c><00:00:42.800><c> i've</c><00:00:42.960><c> gotten</c><00:00:43.280><c> this</c><00:00:43.600><c> entire</c><00:00:44.000><c> sheet</c>

00:00:44.389 --> 00:00:44.399 align:start position:0%
and once i've gotten this entire sheet
 

00:00:44.399 --> 00:00:46.229 align:start position:0%
and once i've gotten this entire sheet
of<00:00:44.559><c> problems</c><00:00:45.039><c> done</c><00:00:45.360><c> i'll</c><00:00:45.600><c> probably</c><00:00:45.840><c> be</c><00:00:45.920><c> making</c>

00:00:46.229 --> 00:00:46.239 align:start position:0%
of problems done i'll probably be making
 

00:00:46.239 --> 00:00:47.590 align:start position:0%
of problems done i'll probably be making
a<00:00:46.320><c> playlist</c><00:00:46.960><c> for</c><00:00:47.200><c> it</c>

00:00:47.590 --> 00:00:47.600 align:start position:0%
a playlist for it
 

00:00:47.600 --> 00:00:49.830 align:start position:0%
a playlist for it
but<00:00:47.840><c> for</c><00:00:48.079><c> now</c><00:00:48.239><c> you</c><00:00:48.480><c> can</c><00:00:48.719><c> watch</c><00:00:48.960><c> the</c><00:00:49.120><c> videos</c>

00:00:49.830 --> 00:00:49.840 align:start position:0%
but for now you can watch the videos
 

00:00:49.840 --> 00:00:51.830 align:start position:0%
but for now you can watch the videos
that<00:00:50.160><c> are</c><00:00:50.480><c> currently</c><00:00:50.960><c> available</c><00:00:51.440><c> for</c><00:00:51.600><c> this</c>

00:00:51.830 --> 00:00:51.840 align:start position:0%
that are currently available for this
 

00:00:51.840 --> 00:00:53.189 align:start position:0%
that are currently available for this
list<00:00:52.079><c> of</c><00:00:52.239><c> problems</c>

00:00:53.189 --> 00:00:53.199 align:start position:0%
list of problems
 

00:00:53.199 --> 00:00:55.110 align:start position:0%
list of problems
so<00:00:53.440><c> in</c><00:00:53.600><c> this</c><00:00:53.760><c> problem</c><00:00:54.079><c> we're</c><00:00:54.239><c> given</c><00:00:54.559><c> a</c><00:00:54.640><c> binary</c>

00:00:55.110 --> 00:00:55.120 align:start position:0%
so in this problem we're given a binary
 

00:00:55.120 --> 00:00:56.790 align:start position:0%
so in this problem we're given a binary
search<00:00:55.440><c> tree</c><00:00:55.680><c> and</c><00:00:55.760><c> we're</c><00:00:56.000><c> and</c><00:00:56.160><c> we're</c><00:00:56.399><c> supposed</c>

00:00:56.790 --> 00:00:56.800 align:start position:0%
search tree and we're and we're supposed
 

00:00:56.800 --> 00:00:58.950 align:start position:0%
search tree and we're and we're supposed
to<00:00:56.960><c> find</c><00:00:57.199><c> the</c><00:00:57.360><c> lowest</c><00:00:57.760><c> common</c><00:00:58.160><c> ancestor</c><00:00:58.800><c> of</c>

00:00:58.950 --> 00:00:58.960 align:start position:0%
to find the lowest common ancestor of
 

00:00:58.960 --> 00:00:59.349 align:start position:0%
to find the lowest common ancestor of
two

00:00:59.349 --> 00:00:59.359 align:start position:0%
two
 

00:00:59.359 --> 00:01:01.910 align:start position:0%
two
given<00:00:59.840><c> input</c><00:01:00.320><c> nodes</c><00:01:00.800><c> in</c><00:01:00.960><c> the</c><00:01:01.120><c> binary</c><00:01:01.600><c> search</c>

00:01:01.910 --> 00:01:01.920 align:start position:0%
given input nodes in the binary search
 

00:01:01.920 --> 00:01:02.470 align:start position:0%
given input nodes in the binary search
tree

00:01:02.470 --> 00:01:02.480 align:start position:0%
tree
 

00:01:02.480 --> 00:01:04.390 align:start position:0%
tree
and<00:01:02.640><c> so</c><00:01:02.800><c> the</c><00:01:02.960><c> lowest</c><00:01:03.359><c> common</c><00:01:03.760><c> ancestor</c><00:01:04.320><c> is</c>

00:01:04.390 --> 00:01:04.400 align:start position:0%
and so the lowest common ancestor is
 

00:01:04.400 --> 00:01:06.789 align:start position:0%
and so the lowest common ancestor is
basically<00:01:04.879><c> defined</c><00:01:05.519><c> as</c><00:01:05.680><c> being</c><00:01:05.920><c> the</c><00:01:06.159><c> lowest</c>

00:01:06.789 --> 00:01:06.799 align:start position:0%
basically defined as being the lowest
 

00:01:06.799 --> 00:01:10.070 align:start position:0%
basically defined as being the lowest
node<00:01:07.520><c> in</c><00:01:07.680><c> the</c><00:01:08.000><c> tree</c><00:01:08.479><c> such</c><00:01:08.880><c> that</c><00:01:09.439><c> p</c>

00:01:10.070 --> 00:01:10.080 align:start position:0%
node in the tree such that p
 

00:01:10.080 --> 00:01:13.270 align:start position:0%
node in the tree such that p
and<00:01:10.400><c> q</c><00:01:11.040><c> are</c><00:01:11.360><c> descendants</c><00:01:12.640><c> of</c><00:01:12.880><c> this</c>

00:01:13.270 --> 00:01:13.280 align:start position:0%
and q are descendants of this
 

00:01:13.280 --> 00:01:16.630 align:start position:0%
and q are descendants of this
node<00:01:13.760><c> or</c><00:01:14.320><c> p</c><00:01:14.640><c> or</c><00:01:14.960><c> q</c><00:01:15.200><c> happens</c><00:01:15.600><c> to</c><00:01:15.759><c> be</c><00:01:16.000><c> equal</c><00:01:16.400><c> to</c>

00:01:16.630 --> 00:01:16.640 align:start position:0%
node or p or q happens to be equal to
 

00:01:16.640 --> 00:01:17.590 align:start position:0%
node or p or q happens to be equal to
this<00:01:16.960><c> node</c>

00:01:17.590 --> 00:01:17.600 align:start position:0%
this node
 

00:01:17.600 --> 00:01:20.310 align:start position:0%
this node
so<00:01:17.840><c> basically</c><00:01:19.280><c> what</c><00:01:19.439><c> we're</c><00:01:19.600><c> saying</c><00:01:19.840><c> is</c><00:01:20.000><c> six</c>

00:01:20.310 --> 00:01:20.320 align:start position:0%
so basically what we're saying is six
 

00:01:20.320 --> 00:01:22.310 align:start position:0%
so basically what we're saying is six
can<00:01:20.560><c> technically</c><00:01:21.040><c> be</c><00:01:21.280><c> a</c><00:01:21.439><c> descendant</c><00:01:22.080><c> of</c>

00:01:22.310 --> 00:01:22.320 align:start position:0%
can technically be a descendant of
 

00:01:22.320 --> 00:01:23.190 align:start position:0%
can technically be a descendant of
itself

00:01:23.190 --> 00:01:23.200 align:start position:0%
itself
 

00:01:23.200 --> 00:01:25.030 align:start position:0%
itself
so<00:01:23.360><c> for</c><00:01:23.600><c> example</c><00:01:24.000><c> in</c><00:01:24.159><c> this</c><00:01:24.400><c> problem</c><00:01:24.720><c> in</c><00:01:24.799><c> this</c>

00:01:25.030 --> 00:01:25.040 align:start position:0%
so for example in this problem in this
 

00:01:25.040 --> 00:01:27.109 align:start position:0%
so for example in this problem in this
example<00:01:25.439><c> we're</c><00:01:25.600><c> given</c><00:01:25.920><c> p</c><00:01:26.080><c> equals</c><00:01:26.479><c> two</c><00:01:26.720><c> q</c>

00:01:27.109 --> 00:01:27.119 align:start position:0%
example we're given p equals two q
 

00:01:27.119 --> 00:01:29.670 align:start position:0%
example we're given p equals two q
equals<00:01:27.600><c> eight</c><00:01:28.159><c> so</c><00:01:28.640><c> we're</c><00:01:28.799><c> going</c><00:01:28.880><c> to</c><00:01:29.119><c> start</c><00:01:29.520><c> at</c>

00:01:29.670 --> 00:01:29.680 align:start position:0%
equals eight so we're going to start at
 

00:01:29.680 --> 00:01:30.469 align:start position:0%
equals eight so we're going to start at
the<00:01:29.920><c> root</c>

00:01:30.469 --> 00:01:30.479 align:start position:0%
the root
 

00:01:30.479 --> 00:01:33.270 align:start position:0%
the root
because<00:01:30.799><c> the</c><00:01:31.040><c> root</c><00:01:31.520><c> is</c><00:01:31.840><c> always</c><00:01:32.400><c> going</c><00:01:32.640><c> to</c><00:01:32.880><c> be</c><00:01:33.119><c> a</c>

00:01:33.270 --> 00:01:33.280 align:start position:0%
because the root is always going to be a
 

00:01:33.280 --> 00:01:34.710 align:start position:0%
because the root is always going to be a
common<00:01:33.759><c> ancestor</c><00:01:34.400><c> of</c>

00:01:34.710 --> 00:01:34.720 align:start position:0%
common ancestor of
 

00:01:34.720 --> 00:01:36.950 align:start position:0%
common ancestor of
every<00:01:35.119><c> single</c><00:01:35.600><c> node</c><00:01:36.000><c> in</c><00:01:36.159><c> the</c><00:01:36.320><c> tree</c><00:01:36.640><c> right</c>

00:01:36.950 --> 00:01:36.960 align:start position:0%
every single node in the tree right
 

00:01:36.960 --> 00:01:37.990 align:start position:0%
every single node in the tree right
that's<00:01:37.280><c> just</c>

00:01:37.990 --> 00:01:38.000 align:start position:0%
that's just
 

00:01:38.000 --> 00:01:39.910 align:start position:0%
that's just
kind<00:01:38.240><c> of</c><00:01:38.400><c> basic</c><00:01:38.880><c> right</c><00:01:39.119><c> for</c><00:01:39.520><c> you</c><00:01:39.600><c> know</c><00:01:39.759><c> this</c>

00:01:39.910 --> 00:01:39.920 align:start position:0%
kind of basic right for you know this
 

00:01:39.920 --> 00:01:41.510 align:start position:0%
kind of basic right for you know this
node<00:01:40.240><c> in</c><00:01:40.320><c> this</c><00:01:40.479><c> node</c><00:01:40.880><c> of</c><00:01:41.040><c> course</c>

00:01:41.510 --> 00:01:41.520 align:start position:0%
node in this node of course
 

00:01:41.520 --> 00:01:43.270 align:start position:0%
node in this node of course
this<00:01:41.759><c> is</c><00:01:41.840><c> going</c><00:01:42.000><c> to</c><00:01:42.159><c> be</c><00:01:42.320><c> a</c><00:01:42.479><c> common</c><00:01:42.799><c> ancestor</c>

00:01:43.270 --> 00:01:43.280 align:start position:0%
this is going to be a common ancestor
 

00:01:43.280 --> 00:01:45.670 align:start position:0%
this is going to be a common ancestor
it's<00:01:43.439><c> not</c><00:01:43.600><c> necessarily</c><00:01:44.479><c> the</c><00:01:44.799><c> lowest</c><00:01:45.280><c> common</c>

00:01:45.670 --> 00:01:45.680 align:start position:0%
it's not necessarily the lowest common
 

00:01:45.680 --> 00:01:46.389 align:start position:0%
it's not necessarily the lowest common
ancestor

00:01:46.389 --> 00:01:46.399 align:start position:0%
ancestor
 

00:01:46.399 --> 00:01:49.510 align:start position:0%
ancestor
but<00:01:46.640><c> it</c><00:01:46.880><c> is</c><00:01:47.200><c> a</c><00:01:47.520><c> common</c><00:01:47.920><c> ancestor</c><00:01:49.040><c> so</c>

00:01:49.510 --> 00:01:49.520 align:start position:0%
but it is a common ancestor so
 

00:01:49.520 --> 00:01:52.710 align:start position:0%
but it is a common ancestor so
what<00:01:49.680><c> we're</c><00:01:49.840><c> gonna</c><00:01:50.159><c> see</c><00:01:50.479><c> is</c><00:01:50.720><c> p</c><00:01:51.280><c> is</c><00:01:51.920><c> less</c><00:01:52.320><c> than</c>

00:01:52.710 --> 00:01:52.720 align:start position:0%
what we're gonna see is p is less than
 

00:01:52.720 --> 00:01:54.389 align:start position:0%
what we're gonna see is p is less than
six<00:01:53.040><c> therefore</c><00:01:53.439><c> it's</c><00:01:53.680><c> going</c><00:01:53.759><c> to</c><00:01:53.759><c> be</c><00:01:54.079><c> in</c><00:01:54.159><c> the</c>

00:01:54.389 --> 00:01:54.399 align:start position:0%
six therefore it's going to be in the
 

00:01:54.399 --> 00:01:56.069 align:start position:0%
six therefore it's going to be in the
left<00:01:54.640><c> subtree</c><00:01:55.040><c> and</c><00:01:55.200><c> it</c><00:01:55.360><c> actually</c><00:01:55.600><c> happens</c><00:01:55.920><c> to</c>

00:01:56.069 --> 00:01:56.079 align:start position:0%
left subtree and it actually happens to
 

00:01:56.079 --> 00:01:57.030 align:start position:0%
left subtree and it actually happens to
be<00:01:56.240><c> a</c><00:01:56.320><c> direct</c>

00:01:57.030 --> 00:01:57.040 align:start position:0%
be a direct
 

00:01:57.040 --> 00:02:00.389 align:start position:0%
be a direct
child<00:01:57.600><c> of</c><00:01:57.920><c> six</c><00:01:58.719><c> eight</c><00:01:59.200><c> happens</c><00:01:59.600><c> to</c><00:01:59.680><c> be</c><00:02:00.000><c> greater</c>

00:02:00.389 --> 00:02:00.399 align:start position:0%
child of six eight happens to be greater
 

00:02:00.399 --> 00:02:02.630 align:start position:0%
child of six eight happens to be greater
than<00:02:00.640><c> six</c><00:02:00.960><c> so</c><00:02:01.119><c> it's</c><00:02:01.360><c> gonna</c><00:02:01.600><c> go</c><00:02:01.840><c> in</c><00:02:02.000><c> the</c><00:02:02.240><c> right</c>

00:02:02.630 --> 00:02:02.640 align:start position:0%
than six so it's gonna go in the right
 

00:02:02.640 --> 00:02:03.350 align:start position:0%
than six so it's gonna go in the right
subtree

00:02:03.350 --> 00:02:03.360 align:start position:0%
subtree
 

00:02:03.360 --> 00:02:05.190 align:start position:0%
subtree
so<00:02:03.680><c> basically</c><00:02:04.159><c> if</c><00:02:04.240><c> we</c><00:02:04.320><c> went</c><00:02:04.560><c> in</c><00:02:04.640><c> the</c><00:02:04.719><c> left</c><00:02:04.960><c> sub</c>

00:02:05.190 --> 00:02:05.200 align:start position:0%
so basically if we went in the left sub
 

00:02:05.200 --> 00:02:06.550 align:start position:0%
so basically if we went in the left sub
tree<00:02:05.439><c> two</c><00:02:05.840><c> is</c><00:02:06.079><c> two</c>

00:02:06.550 --> 00:02:06.560 align:start position:0%
tree two is two
 

00:02:06.560 --> 00:02:09.589 align:start position:0%
tree two is two
going<00:02:06.880><c> to</c><00:02:07.040><c> be</c><00:02:07.439><c> a</c><00:02:08.239><c> ancestor</c><00:02:09.280><c> of</c>

00:02:09.589 --> 00:02:09.599 align:start position:0%
going to be a ancestor of
 

00:02:09.599 --> 00:02:12.390 align:start position:0%
going to be a ancestor of
two<00:02:10.239><c> and</c><00:02:10.640><c> eight</c><00:02:10.959><c> of</c><00:02:11.120><c> course</c><00:02:11.520><c> not</c><00:02:11.760><c> right</c><00:02:12.080><c> two</c>

00:02:12.390 --> 00:02:12.400 align:start position:0%
two and eight of course not right two
 

00:02:12.400 --> 00:02:14.390 align:start position:0%
two and eight of course not right two
can't<00:02:12.640><c> be</c><00:02:12.800><c> an</c><00:02:12.959><c> ancestor</c><00:02:13.520><c> of</c><00:02:13.680><c> the</c><00:02:13.760><c> node</c><00:02:14.160><c> eight</c>

00:02:14.390 --> 00:02:14.400 align:start position:0%
can't be an ancestor of the node eight
 

00:02:14.400 --> 00:02:16.309 align:start position:0%
can't be an ancestor of the node eight
if<00:02:14.560><c> it's</c><00:02:14.720><c> in</c><00:02:14.879><c> a</c><00:02:14.959><c> different</c><00:02:15.360><c> subtree</c>

00:02:16.309 --> 00:02:16.319 align:start position:0%
if it's in a different subtree
 

00:02:16.319 --> 00:02:18.150 align:start position:0%
if it's in a different subtree
similarly<00:02:17.040><c> eight</c><00:02:17.360><c> is</c><00:02:17.520><c> not</c><00:02:17.680><c> going</c><00:02:17.840><c> to</c><00:02:17.920><c> be</c><00:02:18.080><c> a</c>

00:02:18.150 --> 00:02:18.160 align:start position:0%
similarly eight is not going to be a
 

00:02:18.160 --> 00:02:19.670 align:start position:0%
similarly eight is not going to be a
common<00:02:18.480><c> ancestor</c><00:02:19.040><c> of</c><00:02:19.200><c> two</c>

00:02:19.670 --> 00:02:19.680 align:start position:0%
common ancestor of two
 

00:02:19.680 --> 00:02:21.990 align:start position:0%
common ancestor of two
so<00:02:19.840><c> basically</c><00:02:20.319><c> if</c><00:02:20.400><c> we</c><00:02:20.640><c> look</c><00:02:21.040><c> at</c><00:02:21.280><c> this</c><00:02:21.520><c> level</c><00:02:21.840><c> or</c>

00:02:21.990 --> 00:02:22.000 align:start position:0%
so basically if we look at this level or
 

00:02:22.000 --> 00:02:23.270 align:start position:0%
so basically if we look at this level or
if<00:02:22.080><c> we</c><00:02:22.239><c> keep</c><00:02:22.480><c> going</c><00:02:22.800><c> down</c>

00:02:23.270 --> 00:02:23.280 align:start position:0%
if we keep going down
 

00:02:23.280 --> 00:02:25.270 align:start position:0%
if we keep going down
we're<00:02:23.520><c> never</c><00:02:23.760><c> gonna</c><00:02:24.000><c> find</c><00:02:24.319><c> a</c><00:02:24.400><c> common</c><00:02:24.800><c> ancestor</c>

00:02:25.270 --> 00:02:25.280 align:start position:0%
we're never gonna find a common ancestor
 

00:02:25.280 --> 00:02:27.430 align:start position:0%
we're never gonna find a common ancestor
between<00:02:25.760><c> two</c><00:02:26.000><c> and</c><00:02:26.239><c> eight</c><00:02:26.400><c> so</c><00:02:26.560><c> the</c><00:02:26.800><c> lowest</c><00:02:27.280><c> one</c>

00:02:27.430 --> 00:02:27.440 align:start position:0%
between two and eight so the lowest one
 

00:02:27.440 --> 00:02:28.390 align:start position:0%
between two and eight so the lowest one
that<00:02:27.599><c> we</c><00:02:27.760><c> found</c>

00:02:28.390 --> 00:02:28.400 align:start position:0%
that we found
 

00:02:28.400 --> 00:02:30.550 align:start position:0%
that we found
ended<00:02:28.720><c> up</c><00:02:28.800><c> being</c><00:02:29.280><c> six</c><00:02:29.760><c> so</c><00:02:29.920><c> we</c><00:02:30.080><c> notice</c><00:02:30.480><c> if</c>

00:02:30.550 --> 00:02:30.560 align:start position:0%
ended up being six so we notice if
 

00:02:30.560 --> 00:02:31.670 align:start position:0%
ended up being six so we notice if
there's<00:02:30.800><c> a</c><00:02:31.040><c> split</c>

00:02:31.670 --> 00:02:31.680 align:start position:0%
there's a split
 

00:02:31.680 --> 00:02:34.710 align:start position:0%
there's a split
between<00:02:32.640><c> the</c><00:02:32.800><c> nodes</c><00:02:33.360><c> that</c><00:02:33.680><c> p</c><00:02:34.080><c> and</c><00:02:34.239><c> q</c>

00:02:34.710 --> 00:02:34.720 align:start position:0%
between the nodes that p and q
 

00:02:34.720 --> 00:02:35.910 align:start position:0%
between the nodes that p and q
are<00:02:34.879><c> going</c><00:02:35.200><c> at</c><00:02:35.360><c> if</c><00:02:35.440><c> they're</c><00:02:35.599><c> going</c><00:02:35.760><c> in</c>

00:02:35.910 --> 00:02:35.920 align:start position:0%
are going at if they're going in
 

00:02:35.920 --> 00:02:38.070 align:start position:0%
are going at if they're going in
separate<00:02:36.239><c> sub</c><00:02:36.480><c> trees</c><00:02:37.040><c> where</c><00:02:37.200><c> that</c><00:02:37.519><c> split</c>

00:02:38.070 --> 00:02:38.080 align:start position:0%
separate sub trees where that split
 

00:02:38.080 --> 00:02:40.390 align:start position:0%
separate sub trees where that split
occurs<00:02:38.560><c> is</c><00:02:38.720><c> going</c><00:02:38.959><c> to</c><00:02:39.200><c> be</c><00:02:39.360><c> the</c><00:02:39.599><c> lowest</c><00:02:40.000><c> common</c>

00:02:40.390 --> 00:02:40.400 align:start position:0%
occurs is going to be the lowest common
 

00:02:40.400 --> 00:02:41.270 align:start position:0%
occurs is going to be the lowest common
ancestor

00:02:41.270 --> 00:02:41.280 align:start position:0%
ancestor
 

00:02:41.280 --> 00:02:43.670 align:start position:0%
ancestor
so<00:02:41.440><c> if</c><00:02:41.599><c> i</c><00:02:41.840><c> change</c><00:02:42.239><c> this</c><00:02:42.480><c> problem</c><00:02:42.959><c> slightly</c><00:02:43.519><c> and</c>

00:02:43.670 --> 00:02:43.680 align:start position:0%
so if i change this problem slightly and
 

00:02:43.680 --> 00:02:44.630 align:start position:0%
so if i change this problem slightly and
i<00:02:43.920><c> gave</c>

00:02:44.630 --> 00:02:44.640 align:start position:0%
i gave
 

00:02:44.640 --> 00:02:48.229 align:start position:0%
i gave
p<00:02:45.040><c> as</c><00:02:45.280><c> 7</c><00:02:45.680><c> and</c><00:02:45.920><c> q</c><00:02:46.319><c> as</c><00:02:46.640><c> 9</c><00:02:47.360><c> we</c><00:02:47.519><c> would</c><00:02:47.680><c> once</c><00:02:48.000><c> again</c>

00:02:48.229 --> 00:02:48.239 align:start position:0%
p as 7 and q as 9 we would once again
 

00:02:48.239 --> 00:02:49.670 align:start position:0%
p as 7 and q as 9 we would once again
start<00:02:48.560><c> at</c><00:02:48.640><c> the</c><00:02:48.800><c> root</c><00:02:49.040><c> because</c><00:02:49.200><c> we</c><00:02:49.360><c> know</c><00:02:49.519><c> this</c>

00:02:49.670 --> 00:02:49.680 align:start position:0%
start at the root because we know this
 

00:02:49.680 --> 00:02:51.350 align:start position:0%
start at the root because we know this
is<00:02:49.840><c> going</c><00:02:50.080><c> to</c><00:02:50.160><c> be</c><00:02:50.319><c> a</c><00:02:50.400><c> common</c><00:02:50.720><c> ancestor</c><00:02:51.280><c> of</c>

00:02:51.350 --> 00:02:51.360 align:start position:0%
is going to be a common ancestor of
 

00:02:51.360 --> 00:02:52.309 align:start position:0%
is going to be a common ancestor of
these<00:02:51.599><c> two</c><00:02:51.840><c> nodes</c>

00:02:52.309 --> 00:02:52.319 align:start position:0%
these two nodes
 

00:02:52.319 --> 00:02:54.309 align:start position:0%
these two nodes
and<00:02:52.400><c> so</c><00:02:52.640><c> now</c><00:02:52.800><c> we're</c><00:02:52.879><c> going</c><00:02:52.959><c> to</c><00:02:53.040><c> check</c><00:02:53.360><c> okay</c><00:02:53.920><c> 7</c>

00:02:54.309 --> 00:02:54.319 align:start position:0%
and so now we're going to check okay 7
 

00:02:54.319 --> 00:02:55.509 align:start position:0%
and so now we're going to check okay 7
is<00:02:54.640><c> greater</c>

00:02:55.509 --> 00:02:55.519 align:start position:0%
is greater
 

00:02:55.519 --> 00:02:58.790 align:start position:0%
is greater
than<00:02:55.920><c> 6</c><00:02:56.400><c> right</c><00:02:56.959><c> and</c><00:02:57.920><c> 9</c><00:02:58.480><c> is</c>

00:02:58.790 --> 00:02:58.800 align:start position:0%
than 6 right and 9 is
 

00:02:58.800 --> 00:03:01.030 align:start position:0%
than 6 right and 9 is
also<00:02:59.280><c> greater</c><00:02:59.680><c> than</c><00:02:59.920><c> 6.</c><00:03:00.159><c> so</c><00:03:00.319><c> therefore</c><00:03:00.879><c> we</c>

00:03:01.030 --> 00:03:01.040 align:start position:0%
also greater than 6. so therefore we
 

00:03:01.040 --> 00:03:02.309 align:start position:0%
also greater than 6. so therefore we
don't<00:03:01.200><c> need</c><00:03:01.360><c> to</c><00:03:01.440><c> search</c><00:03:01.760><c> in</c><00:03:02.000><c> separate</c>

00:03:02.309 --> 00:03:02.319 align:start position:0%
don't need to search in separate
 

00:03:02.319 --> 00:03:04.070 align:start position:0%
don't need to search in separate
subtrees<00:03:02.879><c> we</c><00:03:02.959><c> can</c><00:03:03.120><c> just</c><00:03:03.280><c> go</c><00:03:03.519><c> to</c><00:03:03.680><c> the</c><00:03:03.840><c> right</c>

00:03:04.070 --> 00:03:04.080 align:start position:0%
subtrees we can just go to the right
 

00:03:04.080 --> 00:03:06.710 align:start position:0%
subtrees we can just go to the right
subtree<00:03:04.480><c> to</c><00:03:04.640><c> look</c><00:03:04.879><c> for</c><00:03:05.120><c> both</c><00:03:05.360><c> of</c><00:03:05.519><c> these</c><00:03:05.840><c> values</c>

00:03:06.710 --> 00:03:06.720 align:start position:0%
subtree to look for both of these values
 

00:03:06.720 --> 00:03:08.470 align:start position:0%
subtree to look for both of these values
we<00:03:06.879><c> know</c><00:03:07.040><c> that</c><00:03:07.280><c> this</c><00:03:07.599><c> is</c><00:03:07.760><c> not</c><00:03:07.920><c> going</c><00:03:08.080><c> to</c><00:03:08.159><c> be</c><00:03:08.319><c> the</c>

00:03:08.470 --> 00:03:08.480 align:start position:0%
we know that this is not going to be the
 

00:03:08.480 --> 00:03:10.229 align:start position:0%
we know that this is not going to be the
lowest<00:03:08.800><c> common</c><00:03:09.200><c> ancestor</c><00:03:09.760><c> this</c><00:03:10.000><c> could</c>

00:03:10.229 --> 00:03:10.239 align:start position:0%
lowest common ancestor this could
 

00:03:10.239 --> 00:03:11.509 align:start position:0%
lowest common ancestor this could
potentially<00:03:10.959><c> though</c>

00:03:11.509 --> 00:03:11.519 align:start position:0%
potentially though
 

00:03:11.519 --> 00:03:13.670 align:start position:0%
potentially though
be<00:03:11.760><c> the</c><00:03:11.920><c> lowest</c><00:03:12.239><c> common</c><00:03:12.560><c> ancestor</c><00:03:13.360><c> so</c><00:03:13.519><c> now</c>

00:03:13.670 --> 00:03:13.680 align:start position:0%
be the lowest common ancestor so now
 

00:03:13.680 --> 00:03:14.949 align:start position:0%
be the lowest common ancestor so now
once<00:03:13.920><c> again</c><00:03:14.159><c> we're</c><00:03:14.319><c> going</c><00:03:14.400><c> to</c><00:03:14.480><c> repeat</c><00:03:14.800><c> that</c>

00:03:14.949 --> 00:03:14.959 align:start position:0%
once again we're going to repeat that
 

00:03:14.959 --> 00:03:16.149 align:start position:0%
once again we're going to repeat that
we're<00:03:15.120><c> going</c><00:03:15.200><c> to</c><00:03:15.280><c> say</c><00:03:15.599><c> 7</c>

00:03:16.149 --> 00:03:16.159 align:start position:0%
we're going to say 7
 

00:03:16.159 --> 00:03:17.990 align:start position:0%
we're going to say 7
that's<00:03:16.400><c> going</c><00:03:16.560><c> to</c><00:03:16.640><c> be</c><00:03:16.959><c> less</c><00:03:17.280><c> than</c><00:03:17.599><c> eight</c><00:03:17.840><c> so</c>

00:03:17.990 --> 00:03:18.000 align:start position:0%
that's going to be less than eight so
 

00:03:18.000 --> 00:03:19.350 align:start position:0%
that's going to be less than eight so
for<00:03:18.159><c> a</c><00:03:18.319><c> seven</c><00:03:18.560><c> we're</c><00:03:18.720><c> gonna</c><00:03:18.879><c> have</c><00:03:18.959><c> to</c><00:03:19.040><c> look</c><00:03:19.200><c> in</c>

00:03:19.350 --> 00:03:19.360 align:start position:0%
for a seven we're gonna have to look in
 

00:03:19.360 --> 00:03:20.630 align:start position:0%
for a seven we're gonna have to look in
the<00:03:19.519><c> left</c><00:03:19.760><c> subtree</c>

00:03:20.630 --> 00:03:20.640 align:start position:0%
the left subtree
 

00:03:20.640 --> 00:03:22.790 align:start position:0%
the left subtree
nine<00:03:21.040><c> is</c><00:03:21.360><c> greater</c><00:03:21.760><c> than</c><00:03:22.000><c> eight</c><00:03:22.400><c> so</c><00:03:22.560><c> for</c><00:03:22.720><c> that</c>

00:03:22.790 --> 00:03:22.800 align:start position:0%
nine is greater than eight so for that
 

00:03:22.800 --> 00:03:24.149 align:start position:0%
nine is greater than eight so for that
we're<00:03:22.959><c> gonna</c><00:03:23.120><c> have</c><00:03:23.200><c> to</c><00:03:23.360><c> look</c><00:03:23.599><c> in</c><00:03:23.680><c> the</c><00:03:23.920><c> right</c>

00:03:24.149 --> 00:03:24.159 align:start position:0%
we're gonna have to look in the right
 

00:03:24.159 --> 00:03:25.030 align:start position:0%
we're gonna have to look in the right
subtree<00:03:24.560><c> so</c>

00:03:25.030 --> 00:03:25.040 align:start position:0%
subtree so
 

00:03:25.040 --> 00:03:27.509 align:start position:0%
subtree so
since<00:03:25.440><c> this</c><00:03:25.680><c> is</c><00:03:25.840><c> where</c><00:03:26.000><c> the</c><00:03:26.239><c> split</c><00:03:26.799><c> occurred</c>

00:03:27.509 --> 00:03:27.519 align:start position:0%
since this is where the split occurred
 

00:03:27.519 --> 00:03:29.190 align:start position:0%
since this is where the split occurred
that<00:03:27.760><c> means</c><00:03:28.080><c> this</c><00:03:28.319><c> is</c><00:03:28.480><c> going</c><00:03:28.640><c> to</c><00:03:28.799><c> be</c><00:03:28.959><c> the</c>

00:03:29.190 --> 00:03:29.200 align:start position:0%
that means this is going to be the
 

00:03:29.200 --> 00:03:31.270 align:start position:0%
that means this is going to be the
lowest<00:03:29.519><c> common</c><00:03:29.920><c> ancestor</c><00:03:30.480><c> for</c><00:03:30.799><c> this</c>

00:03:31.270 --> 00:03:31.280 align:start position:0%
lowest common ancestor for this
 

00:03:31.280 --> 00:03:33.509 align:start position:0%
lowest common ancestor for this
input<00:03:31.920><c> so</c><00:03:32.080><c> we</c><00:03:32.239><c> would</c><00:03:32.400><c> return</c><00:03:32.799><c> this</c><00:03:33.120><c> node</c><00:03:33.360><c> as</c>

00:03:33.509 --> 00:03:33.519 align:start position:0%
input so we would return this node as
 

00:03:33.519 --> 00:03:35.110 align:start position:0%
input so we would return this node as
the<00:03:33.680><c> lowest</c><00:03:34.000><c> common</c><00:03:34.319><c> ancestor</c>

00:03:35.110 --> 00:03:35.120 align:start position:0%
the lowest common ancestor
 

00:03:35.120 --> 00:03:38.470 align:start position:0%
the lowest common ancestor
so<00:03:35.360><c> one</c><00:03:35.599><c> last</c><00:03:35.920><c> case</c><00:03:36.239><c> is</c><00:03:36.400><c> if</c><00:03:36.560><c> we</c><00:03:36.879><c> changed</c><00:03:37.680><c> q</c>

00:03:38.470 --> 00:03:38.480 align:start position:0%
so one last case is if we changed q
 

00:03:38.480 --> 00:03:41.270 align:start position:0%
so one last case is if we changed q
to<00:03:38.640><c> be</c><00:03:38.879><c> a</c><00:03:39.280><c> six</c><00:03:39.920><c> so</c><00:03:40.159><c> once</c><00:03:40.400><c> again</c><00:03:40.640><c> we</c><00:03:40.799><c> would</c><00:03:40.959><c> start</c>

00:03:41.270 --> 00:03:41.280 align:start position:0%
to be a six so once again we would start
 

00:03:41.280 --> 00:03:42.949 align:start position:0%
to be a six so once again we would start
at<00:03:41.360><c> the</c><00:03:41.519><c> root</c><00:03:41.840><c> right</c><00:03:42.080><c> before</c><00:03:42.560><c> we</c><00:03:42.720><c> were</c>

00:03:42.949 --> 00:03:42.959 align:start position:0%
at the root right before we were
 

00:03:42.959 --> 00:03:43.910 align:start position:0%
at the root right before we were
checking<00:03:43.360><c> if</c><00:03:43.599><c> p</c>

00:03:43.910 --> 00:03:43.920 align:start position:0%
checking if p
 

00:03:43.920 --> 00:03:46.390 align:start position:0%
checking if p
and<00:03:44.080><c> q</c><00:03:44.319><c> were</c><00:03:44.640><c> both</c><00:03:45.040><c> greater</c><00:03:45.360><c> than</c><00:03:45.599><c> six</c><00:03:46.080><c> then</c><00:03:46.239><c> we</c>

00:03:46.390 --> 00:03:46.400 align:start position:0%
and q were both greater than six then we
 

00:03:46.400 --> 00:03:47.670 align:start position:0%
and q were both greater than six then we
look<00:03:46.640><c> in</c><00:03:46.720><c> the</c><00:03:46.799><c> right</c><00:03:47.040><c> subtree</c>

00:03:47.670 --> 00:03:47.680 align:start position:0%
look in the right subtree
 

00:03:47.680 --> 00:03:49.750 align:start position:0%
look in the right subtree
if<00:03:47.760><c> they're</c><00:03:48.000><c> both</c><00:03:48.560><c> less</c><00:03:48.799><c> than</c><00:03:49.120><c> six</c><00:03:49.440><c> then</c><00:03:49.599><c> we</c>

00:03:49.750 --> 00:03:49.760 align:start position:0%
if they're both less than six then we
 

00:03:49.760 --> 00:03:51.190 align:start position:0%
if they're both less than six then we
look<00:03:50.000><c> in</c><00:03:50.159><c> the</c><00:03:50.319><c> left</c><00:03:50.560><c> sub</c><00:03:50.799><c> tree</c>

00:03:51.190 --> 00:03:51.200 align:start position:0%
look in the left sub tree
 

00:03:51.200 --> 00:03:52.869 align:start position:0%
look in the left sub tree
if<00:03:51.440><c> they're</c><00:03:51.760><c> if</c><00:03:52.000><c> one</c><00:03:52.239><c> of</c><00:03:52.319><c> them</c><00:03:52.560><c> is</c><00:03:52.640><c> in</c><00:03:52.799><c> the</c>

00:03:52.869 --> 00:03:52.879 align:start position:0%
if they're if one of them is in the
 

00:03:52.879 --> 00:03:54.309 align:start position:0%
if they're if one of them is in the
right<00:03:53.120><c> sub</c><00:03:53.360><c> tree</c><00:03:53.519><c> and</c><00:03:53.599><c> one</c><00:03:53.760><c> of</c><00:03:53.840><c> them</c><00:03:54.080><c> is</c>

00:03:54.309 --> 00:03:54.319 align:start position:0%
right sub tree and one of them is
 

00:03:54.319 --> 00:03:56.149 align:start position:0%
right sub tree and one of them is
in<00:03:54.480><c> the</c><00:03:54.560><c> left</c><00:03:54.799><c> sub</c><00:03:55.040><c> tree</c><00:03:55.439><c> that's</c><00:03:55.680><c> how</c><00:03:55.840><c> we</c><00:03:55.920><c> know</c>

00:03:56.149 --> 00:03:56.159 align:start position:0%
in the left sub tree that's how we know
 

00:03:56.159 --> 00:03:57.750 align:start position:0%
in the left sub tree that's how we know
this<00:03:56.319><c> is</c><00:03:56.400><c> the</c><00:03:56.560><c> lowest</c><00:03:56.799><c> common</c><00:03:57.120><c> ancestor</c><00:03:57.599><c> but</c>

00:03:57.750 --> 00:03:57.760 align:start position:0%
this is the lowest common ancestor but
 

00:03:57.760 --> 00:03:59.589 align:start position:0%
this is the lowest common ancestor but
what<00:03:57.920><c> about</c><00:03:58.159><c> the</c><00:03:58.480><c> last</c><00:03:58.879><c> edge</c><00:03:59.120><c> case</c>

00:03:59.589 --> 00:03:59.599 align:start position:0%
what about the last edge case
 

00:03:59.599 --> 00:04:01.670 align:start position:0%
what about the last edge case
where<00:03:59.840><c> one</c><00:04:00.000><c> of</c><00:04:00.159><c> these</c><00:04:00.400><c> nodes</c><00:04:00.959><c> happens</c><00:04:01.280><c> to</c><00:04:01.360><c> be</c>

00:04:01.670 --> 00:04:01.680 align:start position:0%
where one of these nodes happens to be
 

00:04:01.680 --> 00:04:03.750 align:start position:0%
where one of these nodes happens to be
equal<00:04:02.400><c> to</c><00:04:02.560><c> the</c><00:04:02.799><c> root</c><00:04:03.040><c> node</c>

00:04:03.750 --> 00:04:03.760 align:start position:0%
equal to the root node
 

00:04:03.760 --> 00:04:05.910 align:start position:0%
equal to the root node
in<00:04:03.920><c> that</c><00:04:04.159><c> case</c><00:04:04.640><c> this</c><00:04:04.959><c> is</c><00:04:05.120><c> potentially</c><00:04:05.760><c> the</c>

00:04:05.910 --> 00:04:05.920 align:start position:0%
in that case this is potentially the
 

00:04:05.920 --> 00:04:07.190 align:start position:0%
in that case this is potentially the
lowest<00:04:06.239><c> common</c><00:04:06.560><c> ancestor</c>

00:04:07.190 --> 00:04:07.200 align:start position:0%
lowest common ancestor
 

00:04:07.200 --> 00:04:08.869 align:start position:0%
lowest common ancestor
it's<00:04:07.360><c> definitely</c><00:04:07.840><c> a</c><00:04:07.920><c> common</c><00:04:08.319><c> ancestor</c><00:04:08.799><c> of</c>

00:04:08.869 --> 00:04:08.879 align:start position:0%
it's definitely a common ancestor of
 

00:04:08.879 --> 00:04:10.710 align:start position:0%
it's definitely a common ancestor of
both<00:04:09.200><c> of</c><00:04:09.280><c> these</c><00:04:09.680><c> but</c><00:04:09.840><c> now</c><00:04:10.080><c> if</c><00:04:10.159><c> we</c><00:04:10.319><c> go</c>

00:04:10.710 --> 00:04:10.720 align:start position:0%
both of these but now if we go
 

00:04:10.720 --> 00:04:13.589 align:start position:0%
both of these but now if we go
lower<00:04:11.519><c> for</c><00:04:11.760><c> sure</c><00:04:12.239><c> none</c><00:04:12.480><c> of</c><00:04:12.560><c> the</c><00:04:12.720><c> descendants</c>

00:04:13.589 --> 00:04:13.599 align:start position:0%
lower for sure none of the descendants
 

00:04:13.599 --> 00:04:14.149 align:start position:0%
lower for sure none of the descendants
of<00:04:13.760><c> this</c>

00:04:14.149 --> 00:04:14.159 align:start position:0%
of this
 

00:04:14.159 --> 00:04:16.390 align:start position:0%
of this
node<00:04:14.959><c> nothing</c><00:04:15.280><c> in</c><00:04:15.439><c> the</c><00:04:15.519><c> left</c><00:04:15.760><c> subtree</c><00:04:16.160><c> or</c><00:04:16.320><c> in</c>

00:04:16.390 --> 00:04:16.400 align:start position:0%
node nothing in the left subtree or in
 

00:04:16.400 --> 00:04:17.909 align:start position:0%
node nothing in the left subtree or in
the<00:04:16.479><c> right</c><00:04:16.639><c> subtree</c><00:04:17.040><c> is</c><00:04:17.120><c> going</c><00:04:17.280><c> to</c><00:04:17.440><c> be</c><00:04:17.680><c> a</c>

00:04:17.909 --> 00:04:17.919 align:start position:0%
the right subtree is going to be a
 

00:04:17.919 --> 00:04:20.550 align:start position:0%
the right subtree is going to be a
ancestor<00:04:18.639><c> of</c><00:04:18.959><c> this</c><00:04:19.280><c> node</c><00:04:19.600><c> itself</c><00:04:20.160><c> right</c><00:04:20.400><c> so</c>

00:04:20.550 --> 00:04:20.560 align:start position:0%
ancestor of this node itself right so
 

00:04:20.560 --> 00:04:21.270 align:start position:0%
ancestor of this node itself right so
basically

00:04:21.270 --> 00:04:21.280 align:start position:0%
basically
 

00:04:21.280 --> 00:04:23.670 align:start position:0%
basically
if<00:04:21.440><c> we</c><00:04:21.600><c> ever</c><00:04:22.000><c> reach</c><00:04:22.320><c> the</c><00:04:22.560><c> node</c><00:04:23.040><c> itself</c><00:04:23.520><c> for</c>

00:04:23.670 --> 00:04:23.680 align:start position:0%
if we ever reach the node itself for
 

00:04:23.680 --> 00:04:24.629 align:start position:0%
if we ever reach the node itself for
example<00:04:24.160><c> six</c>

00:04:24.629 --> 00:04:24.639 align:start position:0%
example six
 

00:04:24.639 --> 00:04:26.469 align:start position:0%
example six
then<00:04:24.880><c> that's</c><00:04:25.280><c> going</c><00:04:25.520><c> to</c><00:04:25.759><c> be</c><00:04:25.919><c> the</c><00:04:26.080><c> lowest</c>

00:04:26.469 --> 00:04:26.479 align:start position:0%
then that's going to be the lowest
 

00:04:26.479 --> 00:04:27.990 align:start position:0%
then that's going to be the lowest
common<00:04:26.800><c> ancestor</c><00:04:27.520><c> so</c><00:04:27.759><c> it's</c>

00:04:27.990 --> 00:04:28.000 align:start position:0%
common ancestor so it's
 

00:04:28.000 --> 00:04:30.469 align:start position:0%
common ancestor so it's
an<00:04:28.240><c> ancestor</c><00:04:28.800><c> of</c><00:04:28.960><c> itself</c><00:04:29.680><c> and</c><00:04:29.840><c> it's</c><00:04:30.000><c> also</c><00:04:30.320><c> an</c>

00:04:30.469 --> 00:04:30.479 align:start position:0%
an ancestor of itself and it's also an
 

00:04:30.479 --> 00:04:31.430 align:start position:0%
an ancestor of itself and it's also an
ancestor<00:04:31.040><c> of</c>

00:04:31.430 --> 00:04:31.440 align:start position:0%
ancestor of
 

00:04:31.440 --> 00:04:35.030 align:start position:0%
ancestor of
seven<00:04:32.240><c> which</c><00:04:32.479><c> can</c><00:04:32.639><c> be</c><00:04:32.800><c> found</c><00:04:33.600><c> down</c><00:04:33.919><c> here</c><00:04:34.320><c> right</c>

00:04:35.030 --> 00:04:35.040 align:start position:0%
seven which can be found down here right
 

00:04:35.040 --> 00:04:37.110 align:start position:0%
seven which can be found down here right
so<00:04:35.440><c> this</c><00:04:35.680><c> problem</c><00:04:36.000><c> isn't</c><00:04:36.320><c> too</c><00:04:36.560><c> difficult</c><00:04:36.880><c> once</c>

00:04:37.110 --> 00:04:37.120 align:start position:0%
so this problem isn't too difficult once
 

00:04:37.120 --> 00:04:38.629 align:start position:0%
so this problem isn't too difficult once
you<00:04:37.280><c> can</c><00:04:37.440><c> kind</c><00:04:37.600><c> of</c><00:04:37.759><c> understand</c><00:04:38.240><c> that</c><00:04:38.479><c> if</c>

00:04:38.629 --> 00:04:38.639 align:start position:0%
you can kind of understand that if
 

00:04:38.639 --> 00:04:39.030 align:start position:0%
you can kind of understand that if
there's

00:04:39.030 --> 00:04:39.040 align:start position:0%
there's
 

00:04:39.040 --> 00:04:42.230 align:start position:0%
there's
a<00:04:39.280><c> split</c><00:04:40.400><c> between</c><00:04:41.040><c> these</c><00:04:41.280><c> two</c><00:04:41.520><c> nodes</c><00:04:42.000><c> then</c>

00:04:42.230 --> 00:04:42.240 align:start position:0%
a split between these two nodes then
 

00:04:42.240 --> 00:04:44.070 align:start position:0%
a split between these two nodes then
that's<00:04:42.479><c> going</c><00:04:42.639><c> to</c><00:04:42.720><c> be</c><00:04:42.960><c> the</c><00:04:43.199><c> lca</c><00:04:43.759><c> the</c>

00:04:44.070 --> 00:04:44.080 align:start position:0%
that's going to be the lca the
 

00:04:44.080 --> 00:04:46.550 align:start position:0%
that's going to be the lca the
lowest<00:04:44.320><c> common</c><00:04:44.639><c> ancestor</c><00:04:45.840><c> and</c><00:04:46.080><c> since</c><00:04:46.320><c> we're</c>

00:04:46.550 --> 00:04:46.560 align:start position:0%
lowest common ancestor and since we're
 

00:04:46.560 --> 00:04:48.629 align:start position:0%
lowest common ancestor and since we're
doing<00:04:46.880><c> it</c><00:04:46.960><c> this</c><00:04:47.120><c> way</c><00:04:47.360><c> we</c><00:04:47.600><c> don't</c><00:04:47.840><c> have</c><00:04:48.000><c> to</c><00:04:48.160><c> visit</c>

00:04:48.629 --> 00:04:48.639 align:start position:0%
doing it this way we don't have to visit
 

00:04:48.639 --> 00:04:51.030 align:start position:0%
doing it this way we don't have to visit
every<00:04:48.960><c> single</c><00:04:49.360><c> node</c><00:04:49.759><c> in</c><00:04:49.919><c> the</c><00:04:50.080><c> entire</c><00:04:50.560><c> tree</c><00:04:50.880><c> so</c>

00:04:51.030 --> 00:04:51.040 align:start position:0%
every single node in the entire tree so
 

00:04:51.040 --> 00:04:52.390 align:start position:0%
every single node in the entire tree so
the<00:04:51.120><c> time</c><00:04:51.360><c> complexity</c><00:04:51.840><c> is</c><00:04:52.000><c> not</c><00:04:52.080><c> going</c><00:04:52.160><c> to</c><00:04:52.240><c> be</c>

00:04:52.390 --> 00:04:52.400 align:start position:0%
the time complexity is not going to be
 

00:04:52.400 --> 00:04:53.909 align:start position:0%
the time complexity is not going to be
big<00:04:52.639><c> o</c><00:04:52.720><c> of</c><00:04:52.960><c> n</c><00:04:53.199><c> it's</c><00:04:53.360><c> going</c><00:04:53.440><c> to</c><00:04:53.520><c> be</c>

00:04:53.909 --> 00:04:53.919 align:start position:0%
big o of n it's going to be
 

00:04:53.919 --> 00:04:55.670 align:start position:0%
big o of n it's going to be
log<00:04:54.320><c> n</c><00:04:54.800><c> because</c><00:04:55.040><c> we're</c><00:04:55.280><c> only</c><00:04:55.520><c> going</c><00:04:55.600><c> to</c><00:04:55.680><c> have</c>

00:04:55.670 --> 00:04:55.680 align:start position:0%
log n because we're only going to have
 

00:04:55.680 --> 00:04:57.110 align:start position:0%
log n because we're only going to have
to<00:04:56.000><c> visit</c><00:04:56.639><c> one</c>

00:04:57.110 --> 00:04:57.120 align:start position:0%
to visit one
 

00:04:57.120 --> 00:04:59.990 align:start position:0%
to visit one
node<00:04:57.919><c> for</c><00:04:58.160><c> every</c><00:04:58.479><c> single</c><00:04:59.040><c> level</c><00:04:59.440><c> in</c><00:04:59.520><c> the</c><00:04:59.680><c> tree</c>

00:04:59.990 --> 00:05:00.000 align:start position:0%
node for every single level in the tree
 

00:05:00.000 --> 00:05:01.749 align:start position:0%
node for every single level in the tree
so<00:05:00.160><c> basically</c><00:05:00.560><c> the</c><00:05:00.720><c> time</c><00:05:00.880><c> complexity</c><00:05:01.440><c> is</c><00:05:01.520><c> the</c>

00:05:01.749 --> 00:05:01.759 align:start position:0%
so basically the time complexity is the
 

00:05:01.759 --> 00:05:03.590 align:start position:0%
so basically the time complexity is the
height<00:05:02.000><c> of</c><00:05:02.080><c> the</c><00:05:02.240><c> tree</c><00:05:02.560><c> which</c><00:05:02.880><c> is</c><00:05:03.120><c> usually</c>

00:05:03.590 --> 00:05:03.600 align:start position:0%
height of the tree which is usually
 

00:05:03.600 --> 00:05:04.790 align:start position:0%
height of the tree which is usually
going<00:05:03.759><c> to</c><00:05:03.840><c> be</c><00:05:04.000><c> log</c><00:05:04.400><c> n</c>

00:05:04.790 --> 00:05:04.800 align:start position:0%
going to be log n
 

00:05:04.800 --> 00:05:06.230 align:start position:0%
going to be log n
and<00:05:04.960><c> the</c><00:05:05.039><c> memory</c><00:05:05.360><c> complexity</c><00:05:05.919><c> is</c><00:05:06.000><c> just</c><00:05:06.160><c> going</c>

00:05:06.230 --> 00:05:06.240 align:start position:0%
and the memory complexity is just going
 

00:05:06.240 --> 00:05:07.909 align:start position:0%
and the memory complexity is just going
to<00:05:06.320><c> be</c><00:05:06.479><c> big</c><00:05:06.720><c> o</c><00:05:06.800><c> of</c><00:05:06.960><c> 1</c><00:05:07.360><c> because</c><00:05:07.600><c> we're</c><00:05:07.759><c> not</c>

00:05:07.909 --> 00:05:07.919 align:start position:0%
to be big o of 1 because we're not
 

00:05:07.919 --> 00:05:09.510 align:start position:0%
to be big o of 1 because we're not
really<00:05:08.080><c> needing</c><00:05:08.400><c> any</c><00:05:08.639><c> data</c><00:05:08.960><c> structures</c><00:05:09.360><c> or</c>

00:05:09.510 --> 00:05:09.520 align:start position:0%
really needing any data structures or
 

00:05:09.520 --> 00:05:09.990 align:start position:0%
really needing any data structures or
anything<00:05:09.759><c> like</c>

00:05:09.990 --> 00:05:10.000 align:start position:0%
anything like
 

00:05:10.000 --> 00:05:12.230 align:start position:0%
anything like
that<00:05:10.560><c> that</c><00:05:10.800><c> being</c><00:05:11.120><c> said</c><00:05:11.360><c> let's</c><00:05:11.600><c> jump</c><00:05:11.840><c> into</c><00:05:12.080><c> the</c>

00:05:12.230 --> 00:05:12.240 align:start position:0%
that that being said let's jump into the
 

00:05:12.240 --> 00:05:14.390 align:start position:0%
that that being said let's jump into the
code<00:05:12.560><c> now</c><00:05:12.960><c> so</c><00:05:13.199><c> as</c><00:05:13.440><c> i</c><00:05:13.600><c> mentioned</c><00:05:14.000><c> we</c><00:05:14.160><c> are</c><00:05:14.320><c> going</c>

00:05:14.390 --> 00:05:14.400 align:start position:0%
code now so as i mentioned we are going
 

00:05:14.400 --> 00:05:15.029 align:start position:0%
code now so as i mentioned we are going
to<00:05:14.560><c> start</c>

00:05:15.029 --> 00:05:15.039 align:start position:0%
to start
 

00:05:15.039 --> 00:05:17.430 align:start position:0%
to start
ourselves<00:05:15.680><c> at</c><00:05:15.840><c> the</c><00:05:16.080><c> root</c><00:05:16.400><c> node</c><00:05:17.120><c> and</c><00:05:17.280><c> we're</c>

00:05:17.430 --> 00:05:17.440 align:start position:0%
ourselves at the root node and we're
 

00:05:17.440 --> 00:05:18.950 align:start position:0%
ourselves at the root node and we're
basically<00:05:17.919><c> going</c><00:05:18.000><c> to</c><00:05:18.080><c> continue</c><00:05:18.560><c> until</c><00:05:18.800><c> we</c>

00:05:18.950 --> 00:05:18.960 align:start position:0%
basically going to continue until we
 

00:05:18.960 --> 00:05:19.990 align:start position:0%
basically going to continue until we
find<00:05:19.280><c> our</c><00:05:19.440><c> result</c>

00:05:19.990 --> 00:05:20.000 align:start position:0%
find our result
 

00:05:20.000 --> 00:05:22.390 align:start position:0%
find our result
so<00:05:20.479><c> we're</c><00:05:20.720><c> guaranteed</c><00:05:21.360><c> to</c><00:05:21.520><c> find</c><00:05:21.759><c> a</c><00:05:21.840><c> result</c><00:05:22.240><c> p</c>

00:05:22.390 --> 00:05:22.400 align:start position:0%
so we're guaranteed to find a result p
 

00:05:22.400 --> 00:05:24.070 align:start position:0%
so we're guaranteed to find a result p
and<00:05:22.560><c> q</c><00:05:22.720><c> are</c><00:05:22.880><c> guaranteed</c><00:05:23.360><c> to</c><00:05:23.520><c> exist</c>

00:05:24.070 --> 00:05:24.080 align:start position:0%
and q are guaranteed to exist
 

00:05:24.080 --> 00:05:26.070 align:start position:0%
and q are guaranteed to exist
in<00:05:24.160><c> the</c><00:05:24.400><c> input</c><00:05:24.720><c> tree</c><00:05:25.360><c> so</c><00:05:25.600><c> what</c><00:05:25.759><c> we're</c><00:05:25.919><c> just</c>

00:05:26.070 --> 00:05:26.080 align:start position:0%
in the input tree so what we're just
 

00:05:26.080 --> 00:05:27.670 align:start position:0%
in the input tree so what we're just
going<00:05:26.160><c> to</c><00:05:26.240><c> say</c><00:05:26.400><c> is</c><00:05:26.560><c> while</c><00:05:26.880><c> current</c><00:05:27.280><c> is</c><00:05:27.360><c> not</c>

00:05:27.670 --> 00:05:27.680 align:start position:0%
going to say is while current is not
 

00:05:27.680 --> 00:05:29.110 align:start position:0%
going to say is while current is not
null<00:05:28.000><c> now</c><00:05:28.160><c> it's</c><00:05:28.320><c> never</c><00:05:28.560><c> going</c><00:05:28.639><c> to</c><00:05:28.720><c> be</c><00:05:28.880><c> null</c>

00:05:29.110 --> 00:05:29.120 align:start position:0%
null now it's never going to be null
 

00:05:29.120 --> 00:05:30.550 align:start position:0%
null now it's never going to be null
because<00:05:29.360><c> we</c><00:05:29.520><c> are</c><00:05:29.600><c> going</c><00:05:29.680><c> to</c><00:05:29.840><c> find</c><00:05:30.080><c> a</c><00:05:30.320><c> result</c>

00:05:30.550 --> 00:05:30.560 align:start position:0%
because we are going to find a result
 

00:05:30.560 --> 00:05:31.990 align:start position:0%
because we are going to find a result
but<00:05:30.720><c> this</c><00:05:30.880><c> is</c><00:05:30.960><c> just</c><00:05:31.199><c> a</c><00:05:31.280><c> way</c><00:05:31.440><c> to</c><00:05:31.600><c> get</c><00:05:31.759><c> it</c><00:05:31.840><c> to</c>

00:05:31.990 --> 00:05:32.000 align:start position:0%
but this is just a way to get it to
 

00:05:32.000 --> 00:05:33.909 align:start position:0%
but this is just a way to get it to
execute<00:05:32.479><c> forever</c><00:05:32.960><c> until</c><00:05:33.280><c> we</c><00:05:33.520><c> find</c><00:05:33.759><c> that</c>

00:05:33.909 --> 00:05:33.919 align:start position:0%
execute forever until we find that
 

00:05:33.919 --> 00:05:34.629 align:start position:0%
execute forever until we find that
result

00:05:34.629 --> 00:05:34.639 align:start position:0%
result
 

00:05:34.639 --> 00:05:37.670 align:start position:0%
result
so<00:05:34.880><c> one</c><00:05:35.199><c> case</c><00:05:35.520><c> would</c><00:05:35.680><c> be</c><00:05:35.919><c> if</c><00:05:36.560><c> the</c><00:05:36.720><c> p-value</c><00:05:37.520><c> and</c>

00:05:37.670 --> 00:05:37.680 align:start position:0%
so one case would be if the p-value and
 

00:05:37.680 --> 00:05:38.150 align:start position:0%
so one case would be if the p-value and
the<00:05:37.840><c> q</c>

00:05:38.150 --> 00:05:38.160 align:start position:0%
the q
 

00:05:38.160 --> 00:05:40.710 align:start position:0%
the q
value<00:05:38.800><c> were</c><00:05:39.039><c> both</c><00:05:39.600><c> greater</c><00:05:40.080><c> than</c><00:05:40.240><c> the</c><00:05:40.400><c> root</c>

00:05:40.710 --> 00:05:40.720 align:start position:0%
value were both greater than the root
 

00:05:40.720 --> 00:05:42.230 align:start position:0%
value were both greater than the root
value<00:05:41.039><c> or</c><00:05:41.199><c> the</c><00:05:41.360><c> current</c><00:05:41.680><c> value</c><00:05:42.000><c> that</c><00:05:42.080><c> we're</c>

00:05:42.230 --> 00:05:42.240 align:start position:0%
value or the current value that we're
 

00:05:42.240 --> 00:05:42.950 align:start position:0%
value or the current value that we're
visiting

00:05:42.950 --> 00:05:42.960 align:start position:0%
visiting
 

00:05:42.960 --> 00:05:44.230 align:start position:0%
visiting
and<00:05:43.120><c> in</c><00:05:43.199><c> that</c><00:05:43.360><c> case</c><00:05:43.680><c> we</c><00:05:43.759><c> would</c><00:05:43.919><c> have</c><00:05:44.000><c> to</c><00:05:44.080><c> go</c>

00:05:44.230 --> 00:05:44.240 align:start position:0%
and in that case we would have to go
 

00:05:44.240 --> 00:05:46.710 align:start position:0%
and in that case we would have to go
down<00:05:44.479><c> the</c><00:05:44.720><c> right</c><00:05:44.960><c> subtree</c>

00:05:46.710 --> 00:05:46.720 align:start position:0%
down the right subtree
 

00:05:46.720 --> 00:05:47.830 align:start position:0%
down the right subtree
so<00:05:46.880><c> since</c><00:05:47.120><c> we're</c><00:05:47.280><c> going</c><00:05:47.440><c> down</c><00:05:47.600><c> the</c><00:05:47.680><c> right</c>

00:05:47.830 --> 00:05:47.840 align:start position:0%
so since we're going down the right
 

00:05:47.840 --> 00:05:49.749 align:start position:0%
so since we're going down the right
subtree<00:05:48.240><c> we</c><00:05:48.400><c> can</c><00:05:48.800><c> update</c><00:05:49.199><c> our</c><00:05:49.440><c> current</c>

00:05:49.749 --> 00:05:49.759 align:start position:0%
subtree we can update our current
 

00:05:49.759 --> 00:05:51.189 align:start position:0%
subtree we can update our current
pointer<00:05:50.160><c> to</c><00:05:50.320><c> current</c><00:05:50.720><c> dot</c>

00:05:51.189 --> 00:05:51.199 align:start position:0%
pointer to current dot
 

00:05:51.199 --> 00:05:53.670 align:start position:0%
pointer to current dot
right<00:05:51.919><c> now</c><00:05:52.160><c> the</c><00:05:52.400><c> else</c><00:05:52.800><c> case</c><00:05:53.120><c> is</c><00:05:53.280><c> basically</c>

00:05:53.670 --> 00:05:53.680 align:start position:0%
right now the else case is basically
 

00:05:53.680 --> 00:05:55.749 align:start position:0%
right now the else case is basically
going<00:05:53.840><c> to</c><00:05:53.919><c> be</c><00:05:54.080><c> the</c><00:05:54.320><c> opposite</c><00:05:54.960><c> of</c><00:05:55.199><c> this</c>

00:05:55.749 --> 00:05:55.759 align:start position:0%
going to be the opposite of this
 

00:05:55.759 --> 00:05:57.590 align:start position:0%
going to be the opposite of this
so<00:05:55.919><c> i'm</c><00:05:56.000><c> just</c><00:05:56.160><c> going</c><00:05:56.240><c> to</c><00:05:56.319><c> copy</c><00:05:56.720><c> and</c><00:05:56.800><c> paste</c><00:05:57.120><c> that</c>

00:05:57.590 --> 00:05:57.600 align:start position:0%
so i'm just going to copy and paste that
 

00:05:57.600 --> 00:05:59.990 align:start position:0%
so i'm just going to copy and paste that
basically<00:05:58.240><c> if</c><00:05:58.639><c> both</c><00:05:58.960><c> of</c><00:05:59.039><c> the</c><00:05:59.199><c> values</c><00:05:59.680><c> happen</c>

00:05:59.990 --> 00:06:00.000 align:start position:0%
basically if both of the values happen
 

00:06:00.000 --> 00:06:00.469 align:start position:0%
basically if both of the values happen
to<00:06:00.080><c> be</c>

00:06:00.469 --> 00:06:00.479 align:start position:0%
to be
 

00:06:00.479 --> 00:06:02.150 align:start position:0%
to be
less<00:06:00.880><c> than</c><00:06:01.039><c> the</c><00:06:01.199><c> current</c><00:06:01.600><c> node</c><00:06:01.840><c> that</c><00:06:02.000><c> we're</c>

00:06:02.150 --> 00:06:02.160 align:start position:0%
less than the current node that we're
 

00:06:02.160 --> 00:06:03.430 align:start position:0%
less than the current node that we're
visiting<00:06:02.479><c> in</c><00:06:02.639><c> that</c><00:06:02.720><c> case</c><00:06:02.960><c> we</c><00:06:03.120><c> would</c><00:06:03.280><c> want</c><00:06:03.360><c> to</c>

00:06:03.430 --> 00:06:03.440 align:start position:0%
visiting in that case we would want to
 

00:06:03.440 --> 00:06:05.189 align:start position:0%
visiting in that case we would want to
go<00:06:03.680><c> down</c><00:06:03.919><c> the</c><00:06:04.160><c> left</c><00:06:04.479><c> subtree</c>

00:06:05.189 --> 00:06:05.199 align:start position:0%
go down the left subtree
 

00:06:05.199 --> 00:06:07.110 align:start position:0%
go down the left subtree
so<00:06:05.440><c> in</c><00:06:05.520><c> that</c><00:06:05.680><c> case</c><00:06:05.919><c> we</c><00:06:06.080><c> can</c><00:06:06.240><c> update</c><00:06:06.560><c> current</c>

00:06:07.110 --> 00:06:07.120 align:start position:0%
so in that case we can update current
 

00:06:07.120 --> 00:06:09.110 align:start position:0%
so in that case we can update current
and<00:06:07.280><c> set</c><00:06:07.520><c> it</c><00:06:07.680><c> equal</c><00:06:07.840><c> to</c><00:06:08.000><c> current</c><00:06:08.319><c> dot</c>

00:06:09.110 --> 00:06:09.120 align:start position:0%
and set it equal to current dot
 

00:06:09.120 --> 00:06:12.150 align:start position:0%
and set it equal to current dot
left<00:06:10.160><c> now</c><00:06:10.400><c> the</c><00:06:10.560><c> last</c><00:06:11.039><c> case</c><00:06:11.280><c> is</c><00:06:11.440><c> basically</c><00:06:11.919><c> if</c>

00:06:12.150 --> 00:06:12.160 align:start position:0%
left now the last case is basically if
 

00:06:12.160 --> 00:06:14.070 align:start position:0%
left now the last case is basically if
our<00:06:12.400><c> split</c><00:06:12.800><c> occurs</c><00:06:13.199><c> or</c><00:06:13.440><c> if</c><00:06:13.600><c> we</c><00:06:13.759><c> end</c><00:06:13.919><c> up</c>

00:06:14.070 --> 00:06:14.080 align:start position:0%
our split occurs or if we end up
 

00:06:14.080 --> 00:06:14.550 align:start position:0%
our split occurs or if we end up
actually

00:06:14.550 --> 00:06:14.560 align:start position:0%
actually
 

00:06:14.560 --> 00:06:16.550 align:start position:0%
actually
finding<00:06:15.440><c> basically</c><00:06:15.919><c> finding</c><00:06:16.240><c> one</c><00:06:16.400><c> of</c><00:06:16.479><c> the</c>

00:06:16.550 --> 00:06:16.560 align:start position:0%
finding basically finding one of the
 

00:06:16.560 --> 00:06:17.749 align:start position:0%
finding basically finding one of the
values<00:06:17.120><c> p</c><00:06:17.440><c> or</c>

00:06:17.749 --> 00:06:17.759 align:start position:0%
values p or
 

00:06:17.759 --> 00:06:20.230 align:start position:0%
values p or
q<00:06:18.560><c> and</c><00:06:18.720><c> in</c><00:06:18.800><c> that</c><00:06:18.960><c> case</c><00:06:19.280><c> it</c><00:06:19.440><c> basically</c><00:06:19.840><c> means</c><00:06:20.080><c> we</c>

00:06:20.230 --> 00:06:20.240 align:start position:0%
q and in that case it basically means we
 

00:06:20.240 --> 00:06:22.390 align:start position:0%
q and in that case it basically means we
have<00:06:20.479><c> found</c><00:06:20.800><c> our</c><00:06:20.960><c> result</c><00:06:21.440><c> either</c><00:06:21.680><c> way</c><00:06:22.000><c> so</c><00:06:22.240><c> we</c>

00:06:22.390 --> 00:06:22.400 align:start position:0%
have found our result either way so we
 

00:06:22.400 --> 00:06:23.670 align:start position:0%
have found our result either way so we
would<00:06:22.560><c> just</c><00:06:22.720><c> be</c><00:06:22.880><c> able</c><00:06:23.039><c> to</c><00:06:23.120><c> return</c>

00:06:23.670 --> 00:06:23.680 align:start position:0%
would just be able to return
 

00:06:23.680 --> 00:06:25.830 align:start position:0%
would just be able to return
current<00:06:24.080><c> itself</c><00:06:24.880><c> now</c><00:06:25.039><c> we</c><00:06:25.199><c> don't</c><00:06:25.360><c> have</c><00:06:25.440><c> to</c><00:06:25.600><c> put</c>

00:06:25.830 --> 00:06:25.840 align:start position:0%
current itself now we don't have to put
 

00:06:25.840 --> 00:06:27.510 align:start position:0%
current itself now we don't have to put
any<00:06:26.000><c> return</c><00:06:26.319><c> statement</c><00:06:26.720><c> outside</c><00:06:27.120><c> of</c><00:06:27.199><c> the</c><00:06:27.280><c> loop</c>

00:06:27.510 --> 00:06:27.520 align:start position:0%
any return statement outside of the loop
 

00:06:27.520 --> 00:06:28.790 align:start position:0%
any return statement outside of the loop
because<00:06:27.680><c> we're</c><00:06:27.919><c> guaranteed</c><00:06:28.400><c> that</c><00:06:28.479><c> this</c><00:06:28.720><c> is</c>

00:06:28.790 --> 00:06:28.800 align:start position:0%
because we're guaranteed that this is
 

00:06:28.800 --> 00:06:30.790 align:start position:0%
because we're guaranteed that this is
going<00:06:28.880><c> to</c><00:06:29.120><c> execute</c><00:06:29.600><c> at</c><00:06:29.759><c> some</c><00:06:30.080><c> point</c>

00:06:30.790 --> 00:06:30.800 align:start position:0%
going to execute at some point
 

00:06:30.800 --> 00:06:32.710 align:start position:0%
going to execute at some point
so<00:06:31.039><c> as</c><00:06:31.199><c> you</c><00:06:31.280><c> can</c><00:06:31.440><c> see</c><00:06:31.600><c> this</c><00:06:31.840><c> is</c><00:06:31.919><c> a</c><00:06:32.080><c> pretty</c>

00:06:32.710 --> 00:06:32.720 align:start position:0%
so as you can see this is a pretty
 

00:06:32.720 --> 00:06:34.070 align:start position:0%
so as you can see this is a pretty
efficient<00:06:33.199><c> solution</c>

00:06:34.070 --> 00:06:34.080 align:start position:0%
efficient solution
 

00:06:34.080 --> 00:06:35.909 align:start position:0%
efficient solution
so<00:06:34.240><c> i</c><00:06:34.400><c> hope</c><00:06:34.560><c> that</c><00:06:34.720><c> this</c><00:06:34.880><c> was</c><00:06:35.039><c> helpful</c><00:06:35.600><c> if</c><00:06:35.759><c> it</c>

00:06:35.909 --> 00:06:35.919 align:start position:0%
so i hope that this was helpful if it
 

00:06:35.919 --> 00:06:37.749 align:start position:0%
so i hope that this was helpful if it
was<00:06:36.319><c> please</c><00:06:36.720><c> like</c><00:06:36.960><c> and</c><00:06:37.039><c> subscribe</c><00:06:37.600><c> it</c>

00:06:37.749 --> 00:06:37.759 align:start position:0%
was please like and subscribe it
 

00:06:37.759 --> 00:06:39.590 align:start position:0%
was please like and subscribe it
supports<00:06:38.160><c> the</c><00:06:38.240><c> channel</c><00:06:38.639><c> a</c><00:06:38.880><c> lot</c><00:06:39.280><c> and</c><00:06:39.440><c> i'll</c>

00:06:39.590 --> 00:06:39.600 align:start position:0%
supports the channel a lot and i'll
 

00:06:39.600 --> 00:06:40.230 align:start position:0%
supports the channel a lot and i'll
hopefully

00:06:40.230 --> 00:06:40.240 align:start position:0%
hopefully
 

00:06:40.240 --> 00:06:44.479 align:start position:0%
hopefully
see<00:06:40.400><c> you</c><00:06:40.560><c> pretty</c><00:06:40.800><c> soon</c><00:06:41.360><c> thanks</c><00:06:41.600><c> for</c><00:06:41.759><c> watching</c>

