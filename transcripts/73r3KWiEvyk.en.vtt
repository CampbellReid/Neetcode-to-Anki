WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:02.750 align:start position:0%
 
okay<00:00:00.359><c> let's</c><00:00:00.630><c> solve</c><00:00:00.900><c> leak</c><00:00:01.199><c> code</c><00:00:01.469><c> 198</c><00:00:02.370><c> house</c>

00:00:02.750 --> 00:00:02.760 align:start position:0%
okay let's solve leak code 198 house
 

00:00:02.760 --> 00:00:05.570 align:start position:0%
okay let's solve leak code 198 house
robber<00:00:03.210><c> in</c><00:00:03.570><c> my</c><00:00:03.990><c> opinion</c><00:00:04.410><c> this</c><00:00:04.560><c> is</c><00:00:04.620><c> such</c><00:00:05.069><c> a</c><00:00:05.100><c> good</c>

00:00:05.570 --> 00:00:05.580 align:start position:0%
robber in my opinion this is such a good
 

00:00:05.580 --> 00:00:07.430 align:start position:0%
robber in my opinion this is such a good
question<00:00:05.609><c> to</c><00:00:06.299><c> understand</c><00:00:06.810><c> even</c><00:00:07.170><c> though</c><00:00:07.290><c> it's</c>

00:00:07.430 --> 00:00:07.440 align:start position:0%
question to understand even though it's
 

00:00:07.440 --> 00:00:09.620 align:start position:0%
question to understand even though it's
just<00:00:07.740><c> an</c><00:00:07.919><c> easy</c><00:00:08.220><c> question</c><00:00:08.519><c> you</c><00:00:08.880><c> can</c><00:00:09.030><c> learn</c><00:00:09.179><c> so</c>

00:00:09.620 --> 00:00:09.630 align:start position:0%
just an easy question you can learn so
 

00:00:09.630 --> 00:00:11.749 align:start position:0%
just an easy question you can learn so
much<00:00:09.660><c> about</c><00:00:10.110><c> dynamic</c><00:00:10.800><c> programming</c><00:00:10.830><c> from</c><00:00:11.580><c> this</c>

00:00:11.749 --> 00:00:11.759 align:start position:0%
much about dynamic programming from this
 

00:00:11.759 --> 00:00:13.610 align:start position:0%
much about dynamic programming from this
problem<00:00:12.269><c> and</c><00:00:12.540><c> you</c><00:00:12.900><c> might</c><00:00:13.080><c> already</c><00:00:13.230><c> know</c>

00:00:13.610 --> 00:00:13.620 align:start position:0%
problem and you might already know
 

00:00:13.620 --> 00:00:16.010 align:start position:0%
problem and you might already know
Google<00:00:14.250><c> really</c><00:00:14.610><c> loves</c><00:00:15.089><c> asking</c><00:00:15.570><c> dynamic</c>

00:00:16.010 --> 00:00:16.020 align:start position:0%
Google really loves asking dynamic
 

00:00:16.020 --> 00:00:17.779 align:start position:0%
Google really loves asking dynamic
programming<00:00:16.590><c> problems</c><00:00:17.010><c> and</c><00:00:17.250><c> if</c><00:00:17.490><c> you</c><00:00:17.580><c> want</c><00:00:17.730><c> to</c>

00:00:17.779 --> 00:00:17.789 align:start position:0%
programming problems and if you want to
 

00:00:17.789 --> 00:00:19.550 align:start position:0%
programming problems and if you want to
get<00:00:17.880><c> started</c><00:00:18.090><c> on</c><00:00:18.330><c> that</c><00:00:18.480><c> this</c><00:00:18.630><c> is</c><00:00:18.690><c> such</c><00:00:19.109><c> a</c><00:00:19.140><c> good</c>

00:00:19.550 --> 00:00:19.560 align:start position:0%
get started on that this is such a good
 

00:00:19.560 --> 00:00:20.929 align:start position:0%
get started on that this is such a good
question<00:00:19.590><c> to</c><00:00:20.189><c> understand</c>

00:00:20.929 --> 00:00:20.939 align:start position:0%
question to understand
 

00:00:20.939 --> 00:00:23.300 align:start position:0%
question to understand
so<00:00:21.300><c> we're</c><00:00:21.630><c> basically</c><00:00:22.260><c> given</c><00:00:22.650><c> an</c><00:00:22.800><c> array</c><00:00:23.010><c> of</c>

00:00:23.300 --> 00:00:23.310 align:start position:0%
so we're basically given an array of
 

00:00:23.310 --> 00:00:26.300 align:start position:0%
so we're basically given an array of
integers<00:00:23.850><c> like</c><00:00:24.539><c> many</c><00:00:24.900><c> problems</c><00:00:25.380><c> and</c><00:00:25.650><c> each</c>

00:00:26.300 --> 00:00:26.310 align:start position:0%
integers like many problems and each
 

00:00:26.310 --> 00:00:28.220 align:start position:0%
integers like many problems and each
integer<00:00:26.670><c> represents</c><00:00:27.300><c> a</c><00:00:27.390><c> house</c><00:00:27.570><c> right</c><00:00:27.900><c> so</c><00:00:28.050><c> this</c>

00:00:28.220 --> 00:00:28.230 align:start position:0%
integer represents a house right so this
 

00:00:28.230 --> 00:00:30.439 align:start position:0%
integer represents a house right so this
is<00:00:28.349><c> a</c><00:00:28.380><c> house</c><00:00:28.619><c> this</c><00:00:29.279><c> is</c><00:00:29.429><c> a</c><00:00:29.460><c> house</c><00:00:29.670><c> this</c><00:00:30.240><c> is</c><00:00:30.420><c> a</c>

00:00:30.439 --> 00:00:30.449 align:start position:0%
is a house this is a house this is a
 

00:00:30.449 --> 00:00:31.910 align:start position:0%
is a house this is a house this is a
house<00:00:30.689><c> they're</c><00:00:31.080><c> all</c><00:00:31.199><c> houses</c><00:00:31.650><c> and</c><00:00:31.830><c> they're</c>

00:00:31.910 --> 00:00:31.920 align:start position:0%
house they're all houses and they're
 

00:00:31.920 --> 00:00:34.100 align:start position:0%
house they're all houses and they're
adjacent<00:00:32.250><c> to</c><00:00:32.669><c> each</c><00:00:32.700><c> other</c><00:00:32.969><c> so</c><00:00:33.570><c> it's</c><00:00:33.719><c> basically</c>

00:00:34.100 --> 00:00:34.110 align:start position:0%
adjacent to each other so it's basically
 

00:00:34.110 --> 00:00:36.260 align:start position:0%
adjacent to each other so it's basically
a<00:00:34.200><c> neighborhood</c><00:00:34.770><c> we</c><00:00:34.980><c> want</c><00:00:35.190><c> to</c><00:00:35.280><c> rob</c><00:00:35.489><c> houses</c><00:00:35.760><c> to</c>

00:00:36.260 --> 00:00:36.270 align:start position:0%
a neighborhood we want to rob houses to
 

00:00:36.270 --> 00:00:38.119 align:start position:0%
a neighborhood we want to rob houses to
maximize<00:00:36.870><c> the</c><00:00:37.050><c> amount</c><00:00:37.170><c> of</c><00:00:37.380><c> money</c><00:00:37.620><c> we</c><00:00:37.800><c> can</c><00:00:37.920><c> rob</c>

00:00:38.119 --> 00:00:38.129 align:start position:0%
maximize the amount of money we can rob
 

00:00:38.129 --> 00:00:40.340 align:start position:0%
maximize the amount of money we can rob
so<00:00:38.520><c> why</c><00:00:39.030><c> not</c><00:00:39.149><c> just</c><00:00:39.300><c> rob</c><00:00:39.540><c> all</c><00:00:39.809><c> of</c><00:00:39.960><c> them</c><00:00:40.140><c> right</c>

00:00:40.340 --> 00:00:40.350 align:start position:0%
so why not just rob all of them right
 

00:00:40.350 --> 00:00:42.950 align:start position:0%
so why not just rob all of them right
nope<00:00:40.950><c> there's</c><00:00:41.250><c> a</c><00:00:41.309><c> restriction</c><00:00:41.790><c> we</c><00:00:42.239><c> can't</c><00:00:42.629><c> rob</c>

00:00:42.950 --> 00:00:42.960 align:start position:0%
nope there's a restriction we can't rob
 

00:00:42.960 --> 00:00:44.840 align:start position:0%
nope there's a restriction we can't rob
two<00:00:43.350><c> houses</c><00:00:43.620><c> that</c><00:00:43.920><c> are</c><00:00:44.219><c> adjacent</c><00:00:44.460><c> to</c><00:00:44.789><c> each</c>

00:00:44.840 --> 00:00:44.850 align:start position:0%
two houses that are adjacent to each
 

00:00:44.850 --> 00:00:46.850 align:start position:0%
two houses that are adjacent to each
other<00:00:45.030><c> so</c><00:00:45.360><c> we</c><00:00:45.390><c> can</c><00:00:45.510><c> rob</c><00:00:45.780><c> this</c><00:00:46.020><c> house</c><00:00:46.230><c> but</c><00:00:46.710><c> then</c>

00:00:46.850 --> 00:00:46.860 align:start position:0%
other so we can rob this house but then
 

00:00:46.860 --> 00:00:49.310 align:start position:0%
other so we can rob this house but then
we<00:00:47.010><c> can't</c><00:00:47.430><c> rob</c><00:00:47.760><c> this</c><00:00:48.059><c> house</c><00:00:48.270><c> right</c><00:00:48.600><c> so</c><00:00:49.079><c> we</c><00:00:49.200><c> have</c>

00:00:49.310 --> 00:00:49.320 align:start position:0%
we can't rob this house right so we have
 

00:00:49.320 --> 00:00:52.400 align:start position:0%
we can't rob this house right so we have
to<00:00:49.440><c> rob</c><00:00:49.620><c> this</c><00:00:50.370><c> one</c><00:00:50.640><c> next</c><00:00:50.910><c> maybe</c><00:00:51.210><c> right</c><00:00:51.570><c> on</c><00:00:51.930><c> the</c>

00:00:52.400 --> 00:00:52.410 align:start position:0%
to rob this one next maybe right on the
 

00:00:52.410 --> 00:00:54.590 align:start position:0%
to rob this one next maybe right on the
other<00:00:52.530><c> hand</c><00:00:52.800><c> if</c><00:00:52.949><c> we</c><00:00:53.100><c> rob</c><00:00:53.309><c> this</c><00:00:53.550><c> one</c><00:00:53.820><c> we</c><00:00:54.180><c> can't</c>

00:00:54.590 --> 00:00:54.600 align:start position:0%
other hand if we rob this one we can't
 

00:00:54.600 --> 00:00:57.110 align:start position:0%
other hand if we rob this one we can't
rob<00:00:54.960><c> this</c><00:00:55.199><c> one</c><00:00:55.469><c> and</c><00:00:55.680><c> we</c><00:00:56.070><c> can't</c><00:00:56.370><c> rob</c><00:00:56.610><c> this</c><00:00:56.850><c> one</c>

00:00:57.110 --> 00:00:57.120 align:start position:0%
rob this one and we can't rob this one
 

00:00:57.120 --> 00:00:58.700 align:start position:0%
rob this one and we can't rob this one
it<00:00:57.300><c> has</c><00:00:57.390><c> two</c><00:00:57.719><c> neighbors</c><00:00:57.960><c> this</c><00:00:58.320><c> might</c><00:00:58.500><c> sound</c>

00:00:58.700 --> 00:00:58.710 align:start position:0%
it has two neighbors this might sound
 

00:00:58.710 --> 00:01:00.830 align:start position:0%
it has two neighbors this might sound
really<00:00:58.890><c> difficult</c><00:00:59.820><c> right</c><00:01:00.030><c> so</c><00:01:00.390><c> let's</c><00:01:00.629><c> just</c>

00:01:00.830 --> 00:01:00.840 align:start position:0%
really difficult right so let's just
 

00:01:00.840 --> 00:01:02.450 align:start position:0%
really difficult right so let's just
start<00:01:01.109><c> out</c><00:01:01.289><c> with</c><00:01:01.530><c> the</c><00:01:01.680><c> brute</c><00:01:01.920><c> force</c><00:01:01.949><c> approach</c>

00:01:02.450 --> 00:01:02.460 align:start position:0%
start out with the brute force approach
 

00:01:02.460 --> 00:01:04.820 align:start position:0%
start out with the brute force approach
let's<00:01:03.270><c> imagine</c><00:01:03.600><c> if</c><00:01:03.899><c> we</c><00:01:04.080><c> were</c><00:01:04.229><c> trying</c><00:01:04.500><c> to</c><00:01:04.619><c> get</c>

00:01:04.820 --> 00:01:04.830 align:start position:0%
let's imagine if we were trying to get
 

00:01:04.830 --> 00:01:07.399 align:start position:0%
let's imagine if we were trying to get
every<00:01:05.250><c> single</c><00:01:05.610><c> combination</c><00:01:05.850><c> okay</c><00:01:06.600><c> so</c><00:01:07.229><c> the</c>

00:01:07.399 --> 00:01:07.409 align:start position:0%
every single combination okay so the
 

00:01:07.409 --> 00:01:09.710 align:start position:0%
every single combination okay so the
first<00:01:07.560><c> combination</c><00:01:08.010><c> is</c><00:01:08.520><c> where</c><00:01:08.970><c> we</c><00:01:09.090><c> pick</c><00:01:09.420><c> the</c>

00:01:09.710 --> 00:01:09.720 align:start position:0%
first combination is where we pick the
 

00:01:09.720 --> 00:01:12.170 align:start position:0%
first combination is where we pick the
first<00:01:09.990><c> house</c><00:01:10.229><c> right</c><00:01:10.619><c> so</c><00:01:11.040><c> let's</c><00:01:11.250><c> draw</c><00:01:11.580><c> out</c><00:01:11.820><c> what</c>

00:01:12.170 --> 00:01:12.180 align:start position:0%
first house right so let's draw out what
 

00:01:12.180 --> 00:01:13.850 align:start position:0%
first house right so let's draw out what
the<00:01:12.330><c> decision</c><00:01:12.930><c> tree</c><00:01:13.110><c> of</c><00:01:13.350><c> that</c><00:01:13.530><c> would</c><00:01:13.740><c> look</c>

00:01:13.850 --> 00:01:13.860 align:start position:0%
the decision tree of that would look
 

00:01:13.860 --> 00:01:16.520 align:start position:0%
the decision tree of that would look
like<00:01:13.920><c> okay</c><00:01:14.400><c> so</c><00:01:14.460><c> our</c><00:01:14.939><c> first</c><00:01:15.210><c> decision</c><00:01:15.810><c> was</c><00:01:16.259><c> to</c>

00:01:16.520 --> 00:01:16.530 align:start position:0%
like okay so our first decision was to
 

00:01:16.530 --> 00:01:19.310 align:start position:0%
like okay so our first decision was to
rob<00:01:16.710><c> the</c><00:01:17.130><c> house</c><00:01:17.310><c> with</c><00:01:17.880><c> value</c><00:01:18.509><c> one</c><00:01:18.810><c> okay</c><00:01:19.290><c> so</c>

00:01:19.310 --> 00:01:19.320 align:start position:0%
rob the house with value one okay so
 

00:01:19.320 --> 00:01:21.230 align:start position:0%
rob the house with value one okay so
next<00:01:19.680><c> we</c><00:01:19.860><c> want</c><00:01:20.070><c> to</c><00:01:20.189><c> rob</c><00:01:20.310><c> more</c><00:01:20.640><c> houses</c><00:01:21.030><c> right</c>

00:01:21.230 --> 00:01:21.240 align:start position:0%
next we want to rob more houses right
 

00:01:21.240 --> 00:01:24.320 align:start position:0%
next we want to rob more houses right
but<00:01:21.390><c> we</c><00:01:21.509><c> can't</c><00:01:21.900><c> rob</c><00:01:22.200><c> this</c><00:01:22.590><c> one</c><00:01:22.890><c> so</c><00:01:23.460><c> we</c><00:01:23.729><c> can</c><00:01:23.909><c> we</c>

00:01:24.320 --> 00:01:24.330 align:start position:0%
but we can't rob this one so we can we
 

00:01:24.330 --> 00:01:26.719 align:start position:0%
but we can't rob this one so we can we
have<00:01:24.450><c> to</c><00:01:24.570><c> basically</c><00:01:24.780><c> get</c><00:01:25.290><c> the</c><00:01:25.860><c> max</c><00:01:26.130><c> we</c><00:01:26.369><c> can</c><00:01:26.520><c> Rob</c>

00:01:26.719 --> 00:01:26.729 align:start position:0%
have to basically get the max we can Rob
 

00:01:26.729 --> 00:01:28.730 align:start position:0%
have to basically get the max we can Rob
from<00:01:26.970><c> these</c><00:01:27.240><c> two</c><00:01:27.570><c> so</c><00:01:27.960><c> does</c><00:01:28.140><c> that</c><00:01:28.290><c> sound</c><00:01:28.470><c> kind</c>

00:01:28.730 --> 00:01:28.740 align:start position:0%
from these two so does that sound kind
 

00:01:28.740 --> 00:01:30.649 align:start position:0%
from these two so does that sound kind
of<00:01:28.770><c> like</c><00:01:28.860><c> a</c><00:01:28.950><c> sub</c><00:01:29.280><c> problem</c><00:01:29.520><c> yeah</c><00:01:30.150><c> but</c><00:01:30.390><c> we'll</c><00:01:30.509><c> get</c>

00:01:30.649 --> 00:01:30.659 align:start position:0%
of like a sub problem yeah but we'll get
 

00:01:30.659 --> 00:01:32.899 align:start position:0%
of like a sub problem yeah but we'll get
there<00:01:30.900><c> in</c><00:01:31.140><c> a</c><00:01:31.229><c> minute</c><00:01:31.439><c> so</c><00:01:32.040><c> continuing</c><00:01:32.640><c> on</c><00:01:32.759><c> with</c>

00:01:32.899 --> 00:01:32.909 align:start position:0%
there in a minute so continuing on with
 

00:01:32.909 --> 00:01:34.760 align:start position:0%
there in a minute so continuing on with
just<00:01:33.150><c> a</c><00:01:33.240><c> brute-force</c><00:01:33.479><c> right</c><00:01:34.020><c> okay</c><00:01:34.380><c> so</c><00:01:34.439><c> now</c><00:01:34.710><c> we</c>

00:01:34.760 --> 00:01:34.770 align:start position:0%
just a brute-force right okay so now we
 

00:01:34.770 --> 00:01:36.920 align:start position:0%
just a brute-force right okay so now we
want<00:01:35.040><c> to</c><00:01:35.100><c> rob</c><00:01:35.250><c> these</c><00:01:35.520><c> two</c><00:01:35.729><c> houses</c><00:01:35.909><c> right</c><00:01:36.390><c> well</c>

00:01:36.920 --> 00:01:36.930 align:start position:0%
want to rob these two houses right well
 

00:01:36.930 --> 00:01:38.510 align:start position:0%
want to rob these two houses right well
we<00:01:37.110><c> can't</c><00:01:37.380><c> rob</c><00:01:37.619><c> both</c><00:01:37.950><c> of</c><00:01:38.159><c> them</c><00:01:38.280><c> because</c>

00:01:38.510 --> 00:01:38.520 align:start position:0%
we can't rob both of them because
 

00:01:38.520 --> 00:01:39.980 align:start position:0%
we can't rob both of them because
they're<00:01:38.640><c> right</c><00:01:38.880><c> next</c><00:01:39.210><c> to</c><00:01:39.299><c> each</c><00:01:39.390><c> other</c><00:01:39.540><c> so</c><00:01:39.840><c> we</c>

00:01:39.980 --> 00:01:39.990 align:start position:0%
they're right next to each other so we
 

00:01:39.990 --> 00:01:44.749 align:start position:0%
they're right next to each other so we
can<00:01:40.020><c> either</c><00:01:40.380><c> rob</c><00:01:40.770><c> house</c><00:01:41.070><c> 3</c><00:01:42.619><c> or</c><00:01:43.619><c> we</c><00:01:44.340><c> can</c><00:01:44.520><c> rob</c>

00:01:44.749 --> 00:01:44.759 align:start position:0%
can either rob house 3 or we can rob
 

00:01:44.759 --> 00:01:47.719 align:start position:0%
can either rob house 3 or we can rob
house<00:01:45.060><c> 1</c><00:01:45.840><c> so</c><00:01:46.680><c> this</c><00:01:46.829><c> is</c><00:01:47.009><c> the</c><00:01:47.159><c> decision</c><00:01:47.610><c> tree</c>

00:01:47.719 --> 00:01:47.729 align:start position:0%
house 1 so this is the decision tree
 

00:01:47.729 --> 00:01:50.749 align:start position:0%
house 1 so this is the decision tree
right<00:01:48.000><c> and</c><00:01:48.240><c> so</c><00:01:48.509><c> along</c><00:01:49.229><c> this</c><00:01:49.560><c> path</c><00:01:49.920><c> so</c><00:01:50.340><c> if</c><00:01:50.549><c> we</c>

00:01:50.749 --> 00:01:50.759 align:start position:0%
right and so along this path so if we
 

00:01:50.759 --> 00:01:52.700 align:start position:0%
right and so along this path so if we
were<00:01:50.880><c> to</c><00:01:51.000><c> rob</c><00:01:51.180><c> house</c><00:01:51.689><c> 1</c><00:01:51.990><c> right</c><00:01:52.229><c> let's</c><00:01:52.439><c> say</c><00:01:52.560><c> we</c>

00:01:52.700 --> 00:01:52.710 align:start position:0%
were to rob house 1 right let's say we
 

00:01:52.710 --> 00:01:55.490 align:start position:0%
were to rob house 1 right let's say we
went<00:01:52.860><c> along</c><00:01:53.009><c> this</c><00:01:53.430><c> path</c><00:01:53.729><c> then</c><00:01:54.420><c> we</c><00:01:54.990><c> can</c><00:01:55.259><c> either</c>

00:01:55.490 --> 00:01:55.500 align:start position:0%
went along this path then we can either
 

00:01:55.500 --> 00:01:59.840 align:start position:0%
went along this path then we can either
rob<00:01:55.860><c> house</c><00:01:56.159><c> 1</c><00:01:56.520><c> and</c><00:01:56.729><c> 3</c><00:01:57.180><c> or</c><00:01:57.930><c> we</c><00:01:58.799><c> can</c><00:01:58.979><c> rob</c><00:01:59.189><c> house</c><00:01:59.460><c> 1</c>

00:01:59.840 --> 00:01:59.850 align:start position:0%
rob house 1 and 3 or we can rob house 1
 

00:01:59.850 --> 00:02:03.980 align:start position:0%
rob house 1 and 3 or we can rob house 1
and<00:02:00.149><c> 1</c><00:02:02.000><c> obviously</c><00:02:03.000><c> we're</c><00:02:03.149><c> gonna</c><00:02:03.210><c> choose</c><00:02:03.570><c> this</c>

00:02:03.980 --> 00:02:03.990 align:start position:0%
and 1 obviously we're gonna choose this
 

00:02:03.990 --> 00:02:06.469 align:start position:0%
and 1 obviously we're gonna choose this
one<00:02:04.229><c> because</c><00:02:04.290><c> that</c><00:02:04.860><c> gives</c><00:02:05.280><c> us</c><00:02:05.490><c> the</c><00:02:05.790><c> total</c><00:02:06.030><c> that</c>

00:02:06.469 --> 00:02:06.479 align:start position:0%
one because that gives us the total that
 

00:02:06.479 --> 00:02:09.350 align:start position:0%
one because that gives us the total that
gives<00:02:07.049><c> us</c><00:02:07.170><c> the</c><00:02:07.320><c> maximum</c><00:02:07.770><c> which</c><00:02:07.920><c> is</c><00:02:07.950><c> 4</c><00:02:08.340><c> okay</c><00:02:09.119><c> but</c>

00:02:09.350 --> 00:02:09.360 align:start position:0%
gives us the maximum which is 4 okay but
 

00:02:09.360 --> 00:02:11.420 align:start position:0%
gives us the maximum which is 4 okay but
what<00:02:09.509><c> if</c><00:02:09.629><c> we</c><00:02:09.780><c> didn't</c><00:02:10.319><c> Rob</c><00:02:10.560><c> the</c><00:02:10.890><c> first</c><00:02:11.160><c> house</c><00:02:11.400><c> we</c>

00:02:11.420 --> 00:02:11.430 align:start position:0%
what if we didn't Rob the first house we
 

00:02:11.430 --> 00:02:13.230 align:start position:0%
what if we didn't Rob the first house we
decided<00:02:12.060><c> to</c><00:02:12.390><c> rob</c><00:02:12.569><c> the</c><00:02:12.780><c> second</c>

00:02:13.230 --> 00:02:13.240 align:start position:0%
decided to rob the second
 

00:02:13.240 --> 00:02:15.940 align:start position:0%
decided to rob the second
so<00:02:14.240><c> that</c><00:02:14.420><c> would</c><00:02:14.540><c> be</c><00:02:14.660><c> our</c><00:02:14.810><c> other</c><00:02:15.020><c> decision</c><00:02:15.770><c> in</c>

00:02:15.940 --> 00:02:15.950 align:start position:0%
so that would be our other decision in
 

00:02:15.950 --> 00:02:19.060 align:start position:0%
so that would be our other decision in
our<00:02:16.160><c> decision</c><00:02:16.580><c> tree</c><00:02:16.730><c> right</c><00:02:17.000><c> Rob</c><00:02:17.540><c> house</c><00:02:17.810><c> -</c><00:02:18.380><c> okay</c>

00:02:19.060 --> 00:02:19.070 align:start position:0%
our decision tree right Rob house - okay
 

00:02:19.070 --> 00:02:21.430 align:start position:0%
our decision tree right Rob house - okay
now<00:02:19.250><c> we</c><00:02:19.310><c> have</c><00:02:19.700><c> not</c><00:02:20.360><c> many</c><00:02:20.600><c> choices</c><00:02:20.870><c> right</c><00:02:21.260><c> we</c>

00:02:21.430 --> 00:02:21.440 align:start position:0%
now we have not many choices right we
 

00:02:21.440 --> 00:02:24.070 align:start position:0%
now we have not many choices right we
can't<00:02:21.830><c> Rob</c><00:02:22.160><c> house</c><00:02:22.430><c> three</c><00:02:22.940><c> so</c><00:02:23.330><c> the</c><00:02:23.540><c> only</c><00:02:23.750><c> house</c>

00:02:24.070 --> 00:02:24.080 align:start position:0%
can't Rob house three so the only house
 

00:02:24.080 --> 00:02:27.070 align:start position:0%
can't Rob house three so the only house
left<00:02:24.530><c> is</c><00:02:24.860><c> house</c><00:02:25.100><c> one</c><00:02:25.580><c> so</c><00:02:26.120><c> we</c><00:02:26.330><c> rob</c><00:02:26.540><c> that</c><00:02:26.750><c> one</c><00:02:26.960><c> as</c>

00:02:27.070 --> 00:02:27.080 align:start position:0%
left is house one so we rob that one as
 

00:02:27.080 --> 00:02:27.570 align:start position:0%
left is house one so we rob that one as
well

00:02:27.570 --> 00:02:27.580 align:start position:0%
well
 

00:02:27.580 --> 00:02:31.120 align:start position:0%
well
so<00:02:28.580><c> if</c><00:02:28.850><c> we</c><00:02:29.030><c> went</c><00:02:29.300><c> along</c><00:02:29.390><c> this</c><00:02:29.900><c> pathway</c><00:02:30.290><c> in</c><00:02:30.860><c> our</c>

00:02:31.120 --> 00:02:31.130 align:start position:0%
so if we went along this pathway in our
 

00:02:31.130 --> 00:02:33.790 align:start position:0%
so if we went along this pathway in our
decision<00:02:31.550><c> tree</c><00:02:31.790><c> we</c><00:02:32.360><c> would</c><00:02:32.570><c> get</c><00:02:32.780><c> these</c><00:02:33.470><c> two</c>

00:02:33.790 --> 00:02:33.800 align:start position:0%
decision tree we would get these two
 

00:02:33.800 --> 00:02:35.560 align:start position:0%
decision tree we would get these two
houses<00:02:33.950><c> robbed</c><00:02:34.430><c> and</c><00:02:34.790><c> that's</c><00:02:35.030><c> a</c><00:02:35.180><c> total</c><00:02:35.510><c> of</c>

00:02:35.560 --> 00:02:35.570 align:start position:0%
houses robbed and that's a total of
 

00:02:35.570 --> 00:02:37.480 align:start position:0%
houses robbed and that's a total of
three<00:02:35.630><c> but</c><00:02:36.230><c> we</c><00:02:36.350><c> remember</c><00:02:36.800><c> we</c><00:02:36.920><c> found</c><00:02:37.160><c> this</c>

00:02:37.480 --> 00:02:37.490 align:start position:0%
three but we remember we found this
 

00:02:37.490 --> 00:02:39.490 align:start position:0%
three but we remember we found this
which<00:02:38.150><c> was</c><00:02:38.360><c> a</c><00:02:38.390><c> total</c><00:02:38.750><c> of</c><00:02:38.840><c> four</c><00:02:39.140><c> which</c><00:02:39.350><c> is</c>

00:02:39.490 --> 00:02:39.500 align:start position:0%
which was a total of four which is
 

00:02:39.500 --> 00:02:41.020 align:start position:0%
which was a total of four which is
greater<00:02:39.830><c> of</c><00:02:39.950><c> course</c><00:02:40.340><c> so</c><00:02:40.520><c> that's</c><00:02:40.640><c> going</c><00:02:40.850><c> to</c><00:02:40.910><c> be</c>

00:02:41.020 --> 00:02:41.030 align:start position:0%
greater of course so that's going to be
 

00:02:41.030 --> 00:02:42.970 align:start position:0%
greater of course so that's going to be
our<00:02:41.150><c> result</c><00:02:41.510><c> now</c><00:02:41.960><c> this</c><00:02:42.260><c> is</c><00:02:42.470><c> a</c><00:02:42.500><c> very</c>

00:02:42.970 --> 00:02:42.980 align:start position:0%
our result now this is a very
 

00:02:42.980 --> 00:02:45.430 align:start position:0%
our result now this is a very
brute-force<00:02:43.850><c> approach</c><00:02:44.200><c> imagine</c><00:02:45.200><c> if</c><00:02:45.290><c> we</c><00:02:45.410><c> had</c>

00:02:45.430 --> 00:02:45.440 align:start position:0%
brute-force approach imagine if we had
 

00:02:45.440 --> 00:02:47.410 align:start position:0%
brute-force approach imagine if we had
more<00:02:45.830><c> numbers</c><00:02:46.280><c> here</c><00:02:46.490><c> right</c><00:02:46.700><c> maybe</c><00:02:47.030><c> a</c><00:02:47.120><c> three</c>

00:02:47.410 --> 00:02:47.420 align:start position:0%
more numbers here right maybe a three
 

00:02:47.420 --> 00:02:48.850 align:start position:0%
more numbers here right maybe a three
and<00:02:47.510><c> a</c><00:02:47.600><c> four</c><00:02:47.870><c> then</c><00:02:48.080><c> we'd</c><00:02:48.260><c> have</c><00:02:48.380><c> to</c><00:02:48.530><c> have</c><00:02:48.650><c> like</c>

00:02:48.850 --> 00:02:48.860 align:start position:0%
and a four then we'd have to have like
 

00:02:48.860 --> 00:02:50.740 align:start position:0%
and a four then we'd have to have like
more<00:02:49.160><c> paths</c><00:02:49.460><c> in</c><00:02:49.820><c> our</c><00:02:49.910><c> decision</c><00:02:50.360><c> tree</c><00:02:50.480><c> this</c>

00:02:50.740 --> 00:02:50.750 align:start position:0%
more paths in our decision tree this
 

00:02:50.750 --> 00:02:53.380 align:start position:0%
more paths in our decision tree this
could<00:02:50.990><c> get</c><00:02:51.140><c> very</c><00:02:51.280><c> complex</c><00:02:52.280><c> so</c><00:02:52.850><c> how</c><00:02:53.060><c> can</c><00:02:53.120><c> we</c>

00:02:53.380 --> 00:02:53.390 align:start position:0%
could get very complex so how can we
 

00:02:53.390 --> 00:02:55.120 align:start position:0%
could get very complex so how can we
improve<00:02:53.510><c> it</c><00:02:53.960><c> can</c><00:02:54.140><c> we</c><00:02:54.320><c> identify</c><00:02:54.440><c> any</c>

00:02:55.120 --> 00:02:55.130 align:start position:0%
improve it can we identify any
 

00:02:55.130 --> 00:02:57.460 align:start position:0%
improve it can we identify any
subproblem<00:02:56.060><c> and</c><00:02:56.180><c> the</c><00:02:56.330><c> answer</c><00:02:56.660><c> to</c><00:02:56.810><c> that</c><00:02:56.840><c> is</c><00:02:57.170><c> yes</c>

00:02:57.460 --> 00:02:57.470 align:start position:0%
subproblem and the answer to that is yes
 

00:02:57.470 --> 00:02:59.980 align:start position:0%
subproblem and the answer to that is yes
let's<00:02:57.860><c> take</c><00:02:58.130><c> a</c><00:02:58.160><c> look</c><00:02:58.430><c> at</c><00:02:58.610><c> the</c><00:02:58.820><c> subproblem</c><00:02:59.540><c> so</c>

00:02:59.980 --> 00:02:59.990 align:start position:0%
let's take a look at the subproblem so
 

00:02:59.990 --> 00:03:01.930 align:start position:0%
let's take a look at the subproblem so
remember<00:03:00.380><c> we</c><00:03:00.560><c> have</c><00:03:00.740><c> two</c><00:03:00.950><c> choices</c><00:03:01.280><c> we</c><00:03:01.640><c> want</c><00:03:01.880><c> to</c>

00:03:01.930 --> 00:03:01.940 align:start position:0%
remember we have two choices we want to
 

00:03:01.940 --> 00:03:03.880 align:start position:0%
remember we have two choices we want to
get<00:03:02.090><c> the</c><00:03:02.240><c> max</c><00:03:02.600><c> that</c><00:03:03.080><c> we</c><00:03:03.200><c> can</c><00:03:03.320><c> rob</c><00:03:03.560><c> from</c><00:03:03.740><c> this</c>

00:03:03.880 --> 00:03:03.890 align:start position:0%
get the max that we can rob from this
 

00:03:03.890 --> 00:03:05.950 align:start position:0%
get the max that we can rob from this
entire<00:03:04.220><c> neighborhood</c><00:03:04.520><c> so</c><00:03:05.150><c> the</c><00:03:05.420><c> first</c><00:03:05.660><c> choice</c>

00:03:05.950 --> 00:03:05.960 align:start position:0%
entire neighborhood so the first choice
 

00:03:05.960 --> 00:03:09.730 align:start position:0%
entire neighborhood so the first choice
is<00:03:06.220><c> we</c><00:03:07.220><c> rob</c><00:03:07.460><c> from</c><00:03:07.700><c> the</c><00:03:07.760><c> first</c><00:03:08.150><c> house</c><00:03:08.420><c> and</c><00:03:08.810><c> then</c>

00:03:09.730 --> 00:03:09.740 align:start position:0%
is we rob from the first house and then
 

00:03:09.740 --> 00:03:11.710 align:start position:0%
is we rob from the first house and then
find<00:03:10.220><c> the</c><00:03:10.310><c> maximum</c><00:03:10.880><c> from</c><00:03:11.060><c> the</c><00:03:11.210><c> remaining</c>

00:03:11.710 --> 00:03:11.720 align:start position:0%
find the maximum from the remaining
 

00:03:11.720 --> 00:03:13.900 align:start position:0%
find the maximum from the remaining
houses<00:03:12.410><c> right</c><00:03:12.740><c> imagine</c><00:03:13.070><c> there's</c><00:03:13.430><c> more</c><00:03:13.670><c> houses</c>

00:03:13.900 --> 00:03:13.910 align:start position:0%
houses right imagine there's more houses
 

00:03:13.910 --> 00:03:15.340 align:start position:0%
houses right imagine there's more houses
here<00:03:14.270><c> there</c><00:03:14.420><c> could</c><00:03:14.510><c> be</c><00:03:14.570><c> a</c><00:03:14.660><c> three</c><00:03:14.960><c> or</c><00:03:15.110><c> four</c>

00:03:15.340 --> 00:03:15.350 align:start position:0%
here there could be a three or four
 

00:03:15.350 --> 00:03:17.740 align:start position:0%
here there could be a three or four
whatever<00:03:15.650><c> right</c><00:03:16.010><c> this</c><00:03:16.460><c> is</c><00:03:16.700><c> the</c><00:03:16.850><c> subproblem</c>

00:03:17.740 --> 00:03:17.750 align:start position:0%
whatever right this is the subproblem
 

00:03:17.750 --> 00:03:20.080 align:start position:0%
whatever right this is the subproblem
we're<00:03:17.900><c> finding</c><00:03:18.350><c> the</c><00:03:18.500><c> max</c><00:03:18.740><c> of</c><00:03:18.950><c> a</c><00:03:19.070><c> sub</c><00:03:19.520><c> array</c><00:03:19.850><c> of</c>

00:03:20.080 --> 00:03:20.090 align:start position:0%
we're finding the max of a sub array of
 

00:03:20.090 --> 00:03:22.690 align:start position:0%
we're finding the max of a sub array of
the<00:03:20.450><c> entire</c><00:03:20.810><c> array</c><00:03:21.230><c> the</c><00:03:21.740><c> second</c><00:03:22.190><c> choice</c><00:03:22.430><c> we</c>

00:03:22.690 --> 00:03:22.700 align:start position:0%
the entire array the second choice we
 

00:03:22.700 --> 00:03:26.080 align:start position:0%
the entire array the second choice we
have<00:03:22.880><c> is</c><00:03:23.090><c> we</c><00:03:23.570><c> skip</c><00:03:24.020><c> this</c><00:03:24.350><c> house</c><00:03:24.620><c> right</c><00:03:25.070><c> if</c><00:03:25.370><c> we</c>

00:03:26.080 --> 00:03:26.090 align:start position:0%
have is we skip this house right if we
 

00:03:26.090 --> 00:03:28.480 align:start position:0%
have is we skip this house right if we
skip<00:03:26.420><c> it</c><00:03:26.600><c> then</c><00:03:26.900><c> basically</c><00:03:27.560><c> we're</c><00:03:27.740><c> saying</c><00:03:27.980><c> okay</c>

00:03:28.480 --> 00:03:28.490 align:start position:0%
skip it then basically we're saying okay
 

00:03:28.490 --> 00:03:31.150 align:start position:0%
skip it then basically we're saying okay
find<00:03:28.730><c> the</c><00:03:28.910><c> maximum</c><00:03:29.450><c> of</c><00:03:29.540><c> the</c><00:03:30.110><c> entire</c><00:03:30.470><c> sub</c><00:03:30.950><c> array</c>

00:03:31.150 --> 00:03:31.160 align:start position:0%
find the maximum of the entire sub array
 

00:03:31.160 --> 00:03:33.490 align:start position:0%
find the maximum of the entire sub array
not<00:03:31.400><c> including</c><00:03:32.030><c> the</c><00:03:32.120><c> first</c><00:03:32.360><c> value</c><00:03:32.660><c> so</c><00:03:33.260><c> let's</c>

00:03:33.490 --> 00:03:33.500 align:start position:0%
not including the first value so let's
 

00:03:33.500 --> 00:03:35.290 align:start position:0%
not including the first value so let's
actually<00:03:33.680><c> write</c><00:03:34.160><c> out</c><00:03:34.340><c> the</c><00:03:34.550><c> relationship</c><00:03:35.150><c> if</c>

00:03:35.290 --> 00:03:35.300 align:start position:0%
actually write out the relationship if
 

00:03:35.300 --> 00:03:37.300 align:start position:0%
actually write out the relationship if
it<00:03:35.420><c> doesn't</c><00:03:35.720><c> make</c><00:03:35.870><c> sense</c><00:03:35.900><c> yet</c><00:03:36.500><c> so</c><00:03:36.890><c> if</c><00:03:37.010><c> we</c><00:03:37.130><c> want</c>

00:03:37.300 --> 00:03:37.310 align:start position:0%
it doesn't make sense yet so if we want
 

00:03:37.310 --> 00:03:39.070 align:start position:0%
it doesn't make sense yet so if we want
to<00:03:37.370><c> find</c><00:03:37.550><c> the</c><00:03:37.670><c> max</c><00:03:37.910><c> we</c><00:03:38.120><c> can</c><00:03:38.240><c> Rob</c><00:03:38.540><c> from</c><00:03:38.930><c> the</c>

00:03:39.070 --> 00:03:39.080 align:start position:0%
to find the max we can Rob from the
 

00:03:39.080 --> 00:03:46.000 align:start position:0%
to find the max we can Rob from the
entire<00:03:39.410><c> array</c><00:03:39.800><c> we</c><00:03:40.190><c> have</c><00:03:40.220><c> two</c><00:03:40.490><c> choices</c><00:03:44.770><c> Rob</c><00:03:45.770><c> in</c>

00:03:46.000 --> 00:03:46.010 align:start position:0%
entire array we have two choices Rob in
 

00:03:46.010 --> 00:03:47.890 align:start position:0%
entire array we have two choices Rob in
this<00:03:46.160><c> case</c><00:03:46.400><c> indicates</c><00:03:46.970><c> the</c><00:03:47.150><c> max</c><00:03:47.420><c> that</c><00:03:47.660><c> we</c><00:03:47.750><c> can</c>

00:03:47.890 --> 00:03:47.900 align:start position:0%
this case indicates the max that we can
 

00:03:47.900 --> 00:03:50.140 align:start position:0%
this case indicates the max that we can
Rob<00:03:48.080><c> from</c><00:03:48.290><c> the</c><00:03:48.350><c> entire</c><00:03:48.709><c> array</c><00:03:49.160><c> so</c><00:03:49.850><c> in</c><00:03:50.060><c> our</c>

00:03:50.140 --> 00:03:50.150 align:start position:0%
Rob from the entire array so in our
 

00:03:50.150 --> 00:03:52.420 align:start position:0%
Rob from the entire array so in our
first<00:03:50.540><c> decision</c><00:03:51.200><c> we</c><00:03:51.410><c> decided</c><00:03:52.070><c> that</c><00:03:52.100><c> we</c><00:03:52.310><c> were</c>

00:03:52.420 --> 00:03:52.430 align:start position:0%
first decision we decided that we were
 

00:03:52.430 --> 00:03:55.240 align:start position:0%
first decision we decided that we were
gonna<00:03:52.520><c> Rob</c><00:03:52.940><c> the</c><00:03:53.390><c> first</c><00:03:53.720><c> value</c><00:03:54.020><c> so</c><00:03:54.380><c> array</c><00:03:54.950><c> of</c>

00:03:55.240 --> 00:03:55.250 align:start position:0%
gonna Rob the first value so array of
 

00:03:55.250 --> 00:04:02.170 align:start position:0%
gonna Rob the first value so array of
index<00:03:56.209><c> 0</c><00:03:58.840><c> plus</c><00:03:59.840><c> Rob</c><00:04:00.680><c> the</c><00:04:01.100><c> remainder</c><00:04:01.760><c> of</c><00:04:01.790><c> this</c>

00:04:02.170 --> 00:04:02.180 align:start position:0%
index 0 plus Rob the remainder of this
 

00:04:02.180 --> 00:04:03.820 align:start position:0%
index 0 plus Rob the remainder of this
blue<00:04:02.570><c> portion</c><00:04:02.870><c> of</c><00:04:03.140><c> the</c><00:04:03.290><c> array</c><00:04:03.500><c> so</c><00:04:03.680><c> we're</c>

00:04:03.820 --> 00:04:03.830 align:start position:0%
blue portion of the array so we're
 

00:04:03.830 --> 00:04:06.310 align:start position:0%
blue portion of the array so we're
skipping<00:04:04.160><c> index</c><00:04:04.790><c> 1</c><00:04:05.120><c> we're</c><00:04:05.600><c> gonna</c><00:04:05.720><c> Rob</c><00:04:06.050><c> the</c>

00:04:06.310 --> 00:04:06.320 align:start position:0%
skipping index 1 we're gonna Rob the
 

00:04:06.320 --> 00:04:10.990 align:start position:0%
skipping index 1 we're gonna Rob the
entire<00:04:06.680><c> array</c><00:04:07.100><c> from</c><00:04:07.790><c> index</c><00:04:08.510><c> 2</c><00:04:08.990><c> to</c><00:04:09.680><c> the</c><00:04:09.800><c> end</c><00:04:10.000><c> so</c>

00:04:10.990 --> 00:04:11.000 align:start position:0%
entire array from index 2 to the end so
 

00:04:11.000 --> 00:04:13.420 align:start position:0%
entire array from index 2 to the end so
I'll<00:04:11.120><c> say</c><00:04:11.330><c> n</c><00:04:11.570><c> is</c><00:04:11.840><c> the</c><00:04:11.990><c> end</c><00:04:12.110><c> in</c><00:04:12.350><c> this</c><00:04:12.470><c> case</c><00:04:12.740><c> so</c>

00:04:13.420 --> 00:04:13.430 align:start position:0%
I'll say n is the end in this case so
 

00:04:13.430 --> 00:04:15.220 align:start position:0%
I'll say n is the end in this case so
that's<00:04:13.640><c> our</c><00:04:13.820><c> first</c><00:04:14.060><c> decision</c><00:04:14.390><c> if</c><00:04:14.660><c> we</c><00:04:14.840><c> decided</c>

00:04:15.220 --> 00:04:15.230 align:start position:0%
that's our first decision if we decided
 

00:04:15.230 --> 00:04:17.710 align:start position:0%
that's our first decision if we decided
to<00:04:15.380><c> rob</c><00:04:15.680><c> the</c><00:04:15.890><c> first</c><00:04:16.190><c> house</c><00:04:16.430><c> then</c><00:04:17.060><c> we're</c><00:04:17.630><c> gonna</c>

00:04:17.710 --> 00:04:17.720 align:start position:0%
to rob the first house then we're gonna
 

00:04:17.720 --> 00:04:20.110 align:start position:0%
to rob the first house then we're gonna
break<00:04:18.080><c> up</c><00:04:18.140><c> the</c><00:04:18.739><c> problem</c><00:04:19.130><c> into</c><00:04:19.280><c> a</c><00:04:19.370><c> sub</c><00:04:19.760><c> problem</c>

00:04:20.110 --> 00:04:20.120 align:start position:0%
break up the problem into a sub problem
 

00:04:20.120 --> 00:04:22.030 align:start position:0%
break up the problem into a sub problem
now<00:04:20.270><c> we</c><00:04:20.330><c> got</c><00:04:20.570><c> to</c><00:04:20.690><c> Rob</c><00:04:20.840><c> the</c><00:04:20.989><c> remainder</c><00:04:21.650><c> of</c><00:04:21.680><c> that</c>

00:04:22.030 --> 00:04:22.040 align:start position:0%
now we got to Rob the remainder of that
 

00:04:22.040 --> 00:04:22.440 align:start position:0%
now we got to Rob the remainder of that
array

00:04:22.440 --> 00:04:22.450 align:start position:0%
array
 

00:04:22.450 --> 00:04:25.200 align:start position:0%
array
skipping<00:04:23.260><c> one</c><00:04:23.410><c> of</c><00:04:23.500><c> the</c><00:04:23.620><c> values</c><00:04:24.010><c> if</c><00:04:24.430><c> we</c><00:04:24.790><c> didn't</c>

00:04:25.200 --> 00:04:25.210 align:start position:0%
skipping one of the values if we didn't
 

00:04:25.210 --> 00:04:27.360 align:start position:0%
skipping one of the values if we didn't
rob<00:04:25.450><c> the</c><00:04:25.690><c> first</c><00:04:25.930><c> house</c><00:04:26.170><c> and</c><00:04:26.410><c> then</c><00:04:26.590><c> we</c><00:04:26.950><c> simply</c>

00:04:27.360 --> 00:04:27.370 align:start position:0%
rob the first house and then we simply
 

00:04:27.370 --> 00:04:30.420 align:start position:0%
rob the first house and then we simply
only<00:04:27.610><c> have</c><00:04:28.060><c> the</c><00:04:28.240><c> sub-problem</c><00:04:28.780><c> robbed</c><00:04:29.620><c> every</c>

00:04:30.420 --> 00:04:30.430 align:start position:0%
only have the sub-problem robbed every
 

00:04:30.430 --> 00:04:33.390 align:start position:0%
only have the sub-problem robbed every
house<00:04:30.610><c> skipping</c><00:04:31.570><c> the</c><00:04:31.720><c> first</c><00:04:32.020><c> house</c><00:04:32.350><c> so</c><00:04:33.220><c> we</c>

00:04:33.390 --> 00:04:33.400 align:start position:0%
house skipping the first house so we
 

00:04:33.400 --> 00:04:37.440 align:start position:0%
house skipping the first house so we
start<00:04:33.790><c> at</c><00:04:33.910><c> house</c><00:04:34.150><c> one</c><00:04:34.540><c> not</c><00:04:34.840><c> house</c><00:04:35.050><c> zero</c><00:04:35.440><c> and</c><00:04:36.450><c> go</c>

00:04:37.440 --> 00:04:37.450 align:start position:0%
start at house one not house zero and go
 

00:04:37.450 --> 00:04:40.440 align:start position:0%
start at house one not house zero and go
until<00:04:37.780><c> the</c><00:04:37.870><c> end</c><00:04:38.050><c> of</c><00:04:38.230><c> the</c><00:04:38.410><c> array</c><00:04:39.060><c> so</c><00:04:40.060><c> this</c><00:04:40.090><c> is</c>

00:04:40.440 --> 00:04:40.450 align:start position:0%
until the end of the array so this is
 

00:04:40.450 --> 00:04:42.630 align:start position:0%
until the end of the array so this is
the<00:04:40.660><c> recurrence</c><00:04:41.160><c> relationship</c><00:04:42.160><c> you</c><00:04:42.490><c> might</c>

00:04:42.630 --> 00:04:42.640 align:start position:0%
the recurrence relationship you might
 

00:04:42.640 --> 00:04:44.100 align:start position:0%
the recurrence relationship you might
not<00:04:42.820><c> know</c><00:04:42.970><c> exactly</c><00:04:43.090><c> what</c><00:04:43.540><c> that</c><00:04:43.570><c> means</c><00:04:43.900><c> but</c>

00:04:44.100 --> 00:04:44.110 align:start position:0%
not know exactly what that means but
 

00:04:44.110 --> 00:04:46.200 align:start position:0%
not know exactly what that means but
it's<00:04:44.320><c> basically</c><00:04:44.800><c> a</c><00:04:44.920><c> way</c><00:04:45.100><c> to</c><00:04:45.160><c> break</c><00:04:45.520><c> up</c><00:04:45.550><c> dynamic</c>

00:04:46.200 --> 00:04:46.210 align:start position:0%
it's basically a way to break up dynamic
 

00:04:46.210 --> 00:04:48.720 align:start position:0%
it's basically a way to break up dynamic
programming<00:04:46.840><c> problems</c><00:04:47.320><c> notice</c><00:04:48.040><c> the</c><00:04:48.220><c> result</c>

00:04:48.720 --> 00:04:48.730 align:start position:0%
programming problems notice the result
 

00:04:48.730 --> 00:04:51.570 align:start position:0%
programming problems notice the result
of<00:04:48.880><c> the</c><00:04:49.120><c> entire</c><00:04:49.420><c> problem</c><00:04:49.920><c> depends</c><00:04:50.920><c> on</c><00:04:51.040><c> only</c>

00:04:51.570 --> 00:04:51.580 align:start position:0%
of the entire problem depends on only
 

00:04:51.580 --> 00:04:54.660 align:start position:0%
of the entire problem depends on only
these<00:04:51.940><c> two</c><00:04:52.330><c> if</c><00:04:53.230><c> we</c><00:04:53.830><c> can</c><00:04:54.010><c> compute</c><00:04:54.370><c> these</c><00:04:54.610><c> two</c>

00:04:54.660 --> 00:04:54.670 align:start position:0%
these two if we can compute these two
 

00:04:54.670 --> 00:04:56.220 align:start position:0%
these two if we can compute these two
then<00:04:55.180><c> we</c><00:04:55.360><c> have</c><00:04:55.540><c> our</c><00:04:55.690><c> result</c>

00:04:56.220 --> 00:04:56.230 align:start position:0%
then we have our result
 

00:04:56.230 --> 00:04:59.490 align:start position:0%
then we have our result
but<00:04:56.410><c> notice</c><00:04:56.800><c> each</c><00:04:57.220><c> Rob</c><00:04:57.930><c> can</c><00:04:58.930><c> be</c><00:04:58.960><c> broken</c><00:04:59.230><c> up</c>

00:04:59.490 --> 00:04:59.500 align:start position:0%
but notice each Rob can be broken up
 

00:04:59.500 --> 00:05:01.380 align:start position:0%
but notice each Rob can be broken up
into<00:04:59.590><c> its</c><00:04:59.860><c> own</c><00:05:00.130><c> sub-problem</c><00:05:00.940><c> just</c><00:05:01.150><c> like</c><00:05:01.270><c> we</c>

00:05:01.380 --> 00:05:01.390 align:start position:0%
into its own sub-problem just like we
 

00:05:01.390 --> 00:05:04.200 align:start position:0%
into its own sub-problem just like we
did<00:05:01.540><c> over</c><00:05:01.570><c> here</c><00:05:02.220><c> so</c><00:05:03.220><c> let's</c><00:05:03.430><c> actually</c><00:05:03.670><c> solve</c>

00:05:04.200 --> 00:05:04.210 align:start position:0%
did over here so let's actually solve
 

00:05:04.210 --> 00:05:06.600 align:start position:0%
did over here so let's actually solve
the<00:05:04.480><c> subproblems</c><00:05:04.810><c> now</c><00:05:05.440><c> before</c><00:05:05.980><c> we</c><00:05:06.190><c> solve</c><00:05:06.430><c> the</c>

00:05:06.600 --> 00:05:06.610 align:start position:0%
the subproblems now before we solve the
 

00:05:06.610 --> 00:05:08.760 align:start position:0%
the subproblems now before we solve the
entire<00:05:06.760><c> problem</c><00:05:07.000><c> now</c><00:05:07.960><c> I</c><00:05:07.990><c> could</c><00:05:08.350><c> do</c><00:05:08.470><c> this</c><00:05:08.590><c> in</c>

00:05:08.760 --> 00:05:08.770 align:start position:0%
entire problem now I could do this in
 

00:05:08.770 --> 00:05:10.650 align:start position:0%
entire problem now I could do this in
reverse<00:05:09.130><c> order</c><00:05:09.430><c> right</c><00:05:09.700><c> I</c><00:05:09.760><c> could</c><00:05:10.060><c> say</c><00:05:10.270><c> let's</c>

00:05:10.650 --> 00:05:10.660 align:start position:0%
reverse order right I could say let's
 

00:05:10.660 --> 00:05:12.570 align:start position:0%
reverse order right I could say let's
find<00:05:10.960><c> the</c><00:05:11.080><c> max</c><00:05:11.290><c> of</c><00:05:11.470><c> this</c><00:05:11.620><c> sub</c><00:05:11.890><c> array</c><00:05:12.100><c> this</c><00:05:12.370><c> sub</c>

00:05:12.570 --> 00:05:12.580 align:start position:0%
find the max of this sub array this sub
 

00:05:12.580 --> 00:05:14.340 align:start position:0%
find the max of this sub array this sub
array<00:05:12.820><c> and</c><00:05:13.060><c> so</c><00:05:13.270><c> on</c><00:05:13.450><c> but</c><00:05:13.840><c> it's</c><00:05:14.050><c> a</c><00:05:14.110><c> little</c><00:05:14.260><c> more</c>

00:05:14.340 --> 00:05:14.350 align:start position:0%
array and so on but it's a little more
 

00:05:14.350 --> 00:05:15.930 align:start position:0%
array and so on but it's a little more
confusing<00:05:14.890><c> to</c><00:05:15.130><c> do</c><00:05:15.220><c> that</c><00:05:15.400><c> so</c><00:05:15.580><c> I'm</c><00:05:15.730><c> actually</c>

00:05:15.930 --> 00:05:15.940 align:start position:0%
confusing to do that so I'm actually
 

00:05:15.940 --> 00:05:17.970 align:start position:0%
confusing to do that so I'm actually
going<00:05:16.150><c> to</c><00:05:16.210><c> do</c><00:05:16.330><c> it</c><00:05:16.450><c> in</c><00:05:16.600><c> order</c><00:05:16.870><c> so</c><00:05:17.530><c> let's</c><00:05:17.560><c> start</c>

00:05:17.970 --> 00:05:17.980 align:start position:0%
going to do it in order so let's start
 

00:05:17.980 --> 00:05:19.890 align:start position:0%
going to do it in order so let's start
at<00:05:18.070><c> the</c><00:05:18.130><c> first</c><00:05:18.340><c> house</c><00:05:18.640><c> like</c><00:05:19.210><c> we've</c><00:05:19.390><c> been</c><00:05:19.600><c> doing</c>

00:05:19.890 --> 00:05:19.900 align:start position:0%
at the first house like we've been doing
 

00:05:19.900 --> 00:05:21.870 align:start position:0%
at the first house like we've been doing
so<00:05:20.260><c> if</c><00:05:20.470><c> we</c><00:05:20.620><c> rob</c><00:05:20.860><c> this</c><00:05:21.040><c> house</c><00:05:21.250><c> that's</c><00:05:21.460><c> basically</c>

00:05:21.870 --> 00:05:21.880 align:start position:0%
so if we rob this house that's basically
 

00:05:21.880 --> 00:05:24.210 align:start position:0%
so if we rob this house that's basically
our<00:05:22.000><c> base</c><00:05:22.390><c> case</c><00:05:22.690><c> right</c><00:05:23.080><c> so</c><00:05:23.440><c> we</c><00:05:23.620><c> can</c><00:05:23.740><c> decide</c><00:05:24.010><c> to</c>

00:05:24.210 --> 00:05:24.220 align:start position:0%
our base case right so we can decide to
 

00:05:24.220 --> 00:05:26.490 align:start position:0%
our base case right so we can decide to
rob<00:05:24.340><c> this</c><00:05:24.550><c> house</c><00:05:24.790><c> in</c><00:05:25.000><c> that</c><00:05:25.210><c> case</c><00:05:25.510><c> up</c><00:05:26.020><c> until</c>

00:05:26.490 --> 00:05:26.500 align:start position:0%
rob this house in that case up until
 

00:05:26.500 --> 00:05:31.050 align:start position:0%
rob this house in that case up until
this<00:05:26.710><c> point</c><00:05:27.040><c> we</c><00:05:27.670><c> could</c><00:05:27.820><c> Rob</c><00:05:28.060><c> a</c><00:05:28.330><c> total</c><00:05:28.750><c> of</c><00:05:28.960><c> 1</c><00:05:30.060><c> ok</c>

00:05:31.050 --> 00:05:31.060 align:start position:0%
this point we could Rob a total of 1 ok
 

00:05:31.060 --> 00:05:33.360 align:start position:0%
this point we could Rob a total of 1 ok
now<00:05:31.240><c> we</c><00:05:31.300><c> get</c><00:05:31.600><c> to</c><00:05:31.780><c> the</c><00:05:31.810><c> second</c><00:05:32.290><c> house</c><00:05:32.410><c> so</c><00:05:33.130><c> what's</c>

00:05:33.360 --> 00:05:33.370 align:start position:0%
now we get to the second house so what's
 

00:05:33.370 --> 00:05:35.220 align:start position:0%
now we get to the second house so what's
the<00:05:33.520><c> max</c><00:05:33.790><c> we</c><00:05:34.000><c> can</c><00:05:34.120><c> Rob</c><00:05:34.300><c> up</c><00:05:34.570><c> until</c><00:05:34.900><c> this</c><00:05:35.110><c> point</c>

00:05:35.220 --> 00:05:35.230 align:start position:0%
the max we can Rob up until this point
 

00:05:35.230 --> 00:05:38.640 align:start position:0%
the max we can Rob up until this point
well<00:05:36.040><c> we</c><00:05:36.340><c> can</c><00:05:36.670><c> decide</c><00:05:37.060><c> to</c><00:05:37.330><c> not</c><00:05:37.660><c> rob</c><00:05:38.020><c> this</c><00:05:38.380><c> house</c>

00:05:38.640 --> 00:05:38.650 align:start position:0%
well we can decide to not rob this house
 

00:05:38.650 --> 00:05:41.400 align:start position:0%
well we can decide to not rob this house
and<00:05:38.950><c> only</c><00:05:39.190><c> rob</c><00:05:39.760><c> this</c><00:05:40.120><c> house</c><00:05:40.390><c> if</c><00:05:40.600><c> we</c><00:05:40.660><c> wanted</c><00:05:41.350><c> to</c>

00:05:41.400 --> 00:05:41.410 align:start position:0%
and only rob this house if we wanted to
 

00:05:41.410 --> 00:05:45.390 align:start position:0%
and only rob this house if we wanted to
or<00:05:41.980><c> we</c><00:05:42.490><c> can</c><00:05:42.670><c> decide</c><00:05:43.060><c> to</c><00:05:43.720><c> not</c><00:05:44.050><c> rob</c><00:05:44.470><c> this</c><00:05:45.070><c> house</c>

00:05:45.390 --> 00:05:45.400 align:start position:0%
or we can decide to not rob this house
 

00:05:45.400 --> 00:05:48.840 align:start position:0%
or we can decide to not rob this house
and<00:05:45.850><c> only</c><00:05:46.390><c> rob</c><00:05:46.840><c> this</c><00:05:47.110><c> house</c><00:05:47.380><c> to</c><00:05:48.190><c> is</c><00:05:48.370><c> obviously</c>

00:05:48.840 --> 00:05:48.850 align:start position:0%
and only rob this house to is obviously
 

00:05:48.850 --> 00:05:50.670 align:start position:0%
and only rob this house to is obviously
greater<00:05:49.150><c> than</c><00:05:49.390><c> 1</c><00:05:49.570><c> so</c><00:05:49.720><c> I'm</c><00:05:49.870><c> gonna</c><00:05:50.050><c> decide</c><00:05:50.440><c> only</c>

00:05:50.670 --> 00:05:50.680 align:start position:0%
greater than 1 so I'm gonna decide only
 

00:05:50.680 --> 00:05:54.180 align:start position:0%
greater than 1 so I'm gonna decide only
to<00:05:51.160><c> rob</c><00:05:51.340><c> this</c><00:05:51.640><c> house</c><00:05:51.930><c> next</c><00:05:52.930><c> we</c><00:05:53.110><c> get</c><00:05:53.290><c> to</c><00:05:53.350><c> house</c><00:05:53.740><c> 3</c>

00:05:54.180 --> 00:05:54.190 align:start position:0%
to rob this house next we get to house 3
 

00:05:54.190 --> 00:05:55.710 align:start position:0%
to rob this house next we get to house 3
this<00:05:54.340><c> is</c><00:05:54.520><c> where</c><00:05:54.670><c> it</c><00:05:54.730><c> gets</c><00:05:54.820><c> interesting</c><00:05:55.060><c> so</c>

00:05:55.710 --> 00:05:55.720 align:start position:0%
this is where it gets interesting so
 

00:05:55.720 --> 00:05:57.570 align:start position:0%
this is where it gets interesting so
what's<00:05:55.930><c> the</c><00:05:56.110><c> max</c><00:05:56.410><c> amount</c><00:05:56.770><c> we</c><00:05:56.980><c> can</c><00:05:57.010><c> Rob</c><00:05:57.340><c> up</c>

00:05:57.570 --> 00:05:57.580 align:start position:0%
what's the max amount we can Rob up
 

00:05:57.580 --> 00:06:00.360 align:start position:0%
what's the max amount we can Rob up
until<00:05:58.120><c> this</c><00:05:58.390><c> point</c><00:05:58.650><c> so</c><00:05:59.650><c> we</c><00:05:59.800><c> have</c><00:05:59.920><c> two</c><00:06:00.100><c> choices</c>

00:06:00.360 --> 00:06:00.370 align:start position:0%
until this point so we have two choices
 

00:06:00.370 --> 00:06:04.410 align:start position:0%
until this point so we have two choices
again<00:06:00.940><c> we</c><00:06:01.600><c> can</c><00:06:01.810><c> Rob</c><00:06:02.080><c> house</c><00:06:02.350><c> 3</c><00:06:03.250><c> and</c><00:06:03.550><c> we</c><00:06:04.060><c> can</c><00:06:04.090><c> Rob</c>

00:06:04.410 --> 00:06:04.420 align:start position:0%
again we can Rob house 3 and we can Rob
 

00:06:04.420 --> 00:06:09.000 align:start position:0%
again we can Rob house 3 and we can Rob
house<00:06:04.660><c> 1</c><00:06:05.140><c> or</c><00:06:05.950><c> we</c><00:06:06.700><c> can</c><00:06:06.940><c> just</c><00:06:07.420><c> Rob</c><00:06:07.750><c> house</c><00:06:08.050><c> to</c><00:06:08.470><c> the</c>

00:06:09.000 --> 00:06:09.010 align:start position:0%
house 1 or we can just Rob house to the
 

00:06:09.010 --> 00:06:11.940 align:start position:0%
house 1 or we can just Rob house to the
max<00:06:09.280><c> is</c><00:06:09.550><c> obviously</c><00:06:10.270><c> if</c><00:06:10.360><c> we</c><00:06:10.480><c> Rob</c><00:06:10.720><c> house</c><00:06:10.930><c> 3</c><00:06:11.320><c> and</c><00:06:11.560><c> 1</c>

00:06:11.940 --> 00:06:11.950 align:start position:0%
max is obviously if we Rob house 3 and 1
 

00:06:11.950 --> 00:06:14.160 align:start position:0%
max is obviously if we Rob house 3 and 1
and<00:06:12.190><c> in</c><00:06:12.370><c> that</c><00:06:12.550><c> case</c><00:06:12.790><c> we'd</c><00:06:13.030><c> get</c><00:06:13.210><c> a</c><00:06:13.240><c> total</c><00:06:13.660><c> of</c><00:06:13.780><c> 4</c>

00:06:14.160 --> 00:06:14.170 align:start position:0%
and in that case we'd get a total of 4
 

00:06:14.170 --> 00:06:17.340 align:start position:0%
and in that case we'd get a total of 4
now<00:06:14.770><c> we</c><00:06:14.830><c> get</c><00:06:15.070><c> to</c><00:06:15.160><c> the</c><00:06:15.190><c> last</c><00:06:15.460><c> value</c><00:06:15.970><c> 1</c><00:06:16.300><c> so</c><00:06:16.810><c> we</c><00:06:17.080><c> can</c>

00:06:17.340 --> 00:06:17.350 align:start position:0%
now we get to the last value 1 so we can
 

00:06:17.350 --> 00:06:21.900 align:start position:0%
now we get to the last value 1 so we can
decide<00:06:17.920><c> to</c><00:06:18.490><c> Rob</c><00:06:18.700><c> house</c><00:06:19.000><c> 1</c><00:06:19.510><c> and</c><00:06:20.280><c> if</c><00:06:21.280><c> we</c><00:06:21.430><c> did</c><00:06:21.700><c> Rob</c>

00:06:21.900 --> 00:06:21.910 align:start position:0%
decide to Rob house 1 and if we did Rob
 

00:06:21.910 --> 00:06:24.300 align:start position:0%
decide to Rob house 1 and if we did Rob
house<00:06:22.150><c> 1</c><00:06:22.450><c> then</c><00:06:22.720><c> we</c><00:06:22.900><c> would</c><00:06:23.110><c> want</c><00:06:23.410><c> the</c><00:06:23.650><c> max</c><00:06:24.040><c> we</c>

00:06:24.300 --> 00:06:24.310 align:start position:0%
house 1 then we would want the max we
 

00:06:24.310 --> 00:06:27.150 align:start position:0%
house 1 then we would want the max we
could<00:06:24.490><c> Rob</c><00:06:24.700><c> up</c><00:06:25.000><c> until</c><00:06:25.690><c> these</c><00:06:26.050><c> two</c><00:06:26.500><c> values</c>

00:06:27.150 --> 00:06:27.160 align:start position:0%
could Rob up until these two values
 

00:06:27.160 --> 00:06:30.900 align:start position:0%
could Rob up until these two values
meaning<00:06:27.820><c> we'd</c><00:06:28.240><c> want</c><00:06:28.540><c> 1</c><00:06:29.050><c> plus</c><00:06:29.560><c> 2</c><00:06:30.070><c> because</c><00:06:30.430><c> 2</c>

00:06:30.900 --> 00:06:30.910 align:start position:0%
meaning we'd want 1 plus 2 because 2
 

00:06:30.910 --> 00:06:33.300 align:start position:0%
meaning we'd want 1 plus 2 because 2
tells<00:06:31.300><c> us</c><00:06:31.480><c> what's</c><00:06:31.720><c> the</c><00:06:31.900><c> max</c><00:06:32.170><c> we</c><00:06:32.380><c> can</c><00:06:32.530><c> Rob</c><00:06:32.740><c> from</c>

00:06:33.300 --> 00:06:33.310 align:start position:0%
tells us what's the max we can Rob from
 

00:06:33.310 --> 00:06:35.550 align:start position:0%
tells us what's the max we can Rob from
these<00:06:33.580><c> first</c><00:06:34.000><c> two</c><00:06:34.390><c> elements</c><00:06:34.630><c> we</c>

00:06:35.550 --> 00:06:35.560 align:start position:0%
these first two elements we
 

00:06:35.560 --> 00:06:37.830 align:start position:0%
these first two elements we
include<00:06:36.190><c> this</c><00:06:36.639><c> one</c><00:06:36.970><c> because</c><00:06:37.540><c> it's</c><00:06:37.720><c> adjacent</c>

00:06:37.830 --> 00:06:37.840 align:start position:0%
include this one because it's adjacent
 

00:06:37.840 --> 00:06:42.990 align:start position:0%
include this one because it's adjacent
to<00:06:38.500><c> one</c><00:06:39.840><c> so</c><00:06:40.840><c> one</c><00:06:41.169><c> of</c><00:06:41.200><c> our</c><00:06:41.380><c> choices</c><00:06:41.650><c> is</c><00:06:42.100><c> one</c><00:06:42.160><c> plus</c>

00:06:42.990 --> 00:06:43.000 align:start position:0%
to one so one of our choices is one plus
 

00:06:43.000 --> 00:06:47.040 align:start position:0%
to one so one of our choices is one plus
two<00:06:43.389><c> that's</c><00:06:44.290><c> choice</c><00:06:44.740><c> one</c><00:06:45.130><c> or</c><00:06:45.880><c> we</c><00:06:46.419><c> can</c><00:06:46.600><c> decide</c>

00:06:47.040 --> 00:06:47.050 align:start position:0%
two that's choice one or we can decide
 

00:06:47.050 --> 00:06:49.409 align:start position:0%
two that's choice one or we can decide
to<00:06:47.260><c> not</c><00:06:47.560><c> even</c><00:06:47.919><c> Rob</c><00:06:48.160><c> house</c><00:06:48.430><c> one</c><00:06:48.820><c> we</c><00:06:49.180><c> can</c><00:06:49.389><c> just</c>

00:06:49.409 --> 00:06:49.419 align:start position:0%
to not even Rob house one we can just
 

00:06:49.419 --> 00:06:52.379 align:start position:0%
to not even Rob house one we can just
get<00:06:50.020><c> the</c><00:06:50.200><c> max</c><00:06:50.500><c> of</c><00:06:50.680><c> the</c><00:06:51.160><c> entire</c><00:06:51.520><c> first</c><00:06:52.030><c> three</c>

00:06:52.379 --> 00:06:52.389 align:start position:0%
get the max of the entire first three
 

00:06:52.389 --> 00:06:55.200 align:start position:0%
get the max of the entire first three
elements<00:06:52.540><c> not</c><00:06:53.110><c> including</c><00:06:53.710><c> this</c><00:06:53.830><c> one</c><00:06:54.070><c> in</c><00:06:54.340><c> that</c>

00:06:55.200 --> 00:06:55.210 align:start position:0%
elements not including this one in that
 

00:06:55.210 --> 00:06:57.360 align:start position:0%
elements not including this one in that
case<00:06:55.510><c> we</c><00:06:55.900><c> have</c><00:06:56.139><c> what</c><00:06:56.530><c> we</c><00:06:56.680><c> would</c><00:06:56.800><c> get</c><00:06:57.040><c> from</c><00:06:57.250><c> the</c>

00:06:57.360 --> 00:06:57.370 align:start position:0%
case we have what we would get from the
 

00:06:57.370 --> 00:06:58.680 align:start position:0%
case we have what we would get from the
first<00:06:57.520><c> three</c><00:06:57.790><c> elements</c><00:06:57.910><c> right</c><00:06:58.360><c> here</c><00:06:58.570><c> we</c>

00:06:58.680 --> 00:06:58.690 align:start position:0%
first three elements right here we
 

00:06:58.690 --> 00:07:01.140 align:start position:0%
first three elements right here we
already<00:06:59.260><c> computed</c><00:06:59.650><c> it</c><00:06:59.950><c> it's</c><00:07:00.160><c> four</c><00:07:00.550><c> so</c><00:07:01.000><c> our</c>

00:07:01.140 --> 00:07:01.150 align:start position:0%
already computed it it's four so our
 

00:07:01.150 --> 00:07:04.580 align:start position:0%
already computed it it's four so our
choices<00:07:01.510><c> are</c><00:07:01.840><c> one</c><00:07:02.080><c> plus</c><00:07:02.380><c> two</c><00:07:02.680><c> or</c><00:07:02.889><c> four</c>

00:07:04.580 --> 00:07:04.590 align:start position:0%
choices are one plus two or four
 

00:07:04.590 --> 00:07:07.350 align:start position:0%
choices are one plus two or four
obviously<00:07:05.590><c> four</c><00:07:06.040><c> is</c><00:07:06.190><c> greater</c><00:07:06.460><c> so</c><00:07:06.940><c> I'm</c><00:07:07.150><c> gonna</c>

00:07:07.350 --> 00:07:07.360 align:start position:0%
obviously four is greater so I'm gonna
 

00:07:07.360 --> 00:07:10.890 align:start position:0%
obviously four is greater so I'm gonna
choose<00:07:07.690><c> four</c><00:07:08.700><c> that</c><00:07:09.700><c> means</c><00:07:09.970><c> we</c><00:07:10.330><c> put</c><00:07:10.510><c> a</c><00:07:10.570><c> four</c>

00:07:10.890 --> 00:07:10.900 align:start position:0%
choose four that means we put a four
 

00:07:10.900 --> 00:07:13.379 align:start position:0%
choose four that means we put a four
right<00:07:11.139><c> here</c><00:07:11.530><c> and</c><00:07:11.650><c> this</c><00:07:11.950><c> for</c><00:07:12.310><c> this</c><00:07:12.700><c> last</c><00:07:13.030><c> four</c>

00:07:13.379 --> 00:07:13.389 align:start position:0%
right here and this for this last four
 

00:07:13.389 --> 00:07:16.290 align:start position:0%
right here and this for this last four
means<00:07:13.780><c> that</c><00:07:14.260><c> for</c><00:07:14.500><c> the</c><00:07:14.620><c> entire</c><00:07:14.740><c> array</c><00:07:15.700><c> the</c>

00:07:16.290 --> 00:07:16.300 align:start position:0%
means that for the entire array the
 

00:07:16.300 --> 00:07:20.280 align:start position:0%
means that for the entire array the
entire<00:07:16.740><c> array</c><00:07:17.740><c> the</c><00:07:18.700><c> max</c><00:07:19.000><c> value</c><00:07:19.780><c> we</c><00:07:19.930><c> could</c><00:07:20.050><c> get</c>

00:07:20.280 --> 00:07:20.290 align:start position:0%
entire array the max value we could get
 

00:07:20.290 --> 00:07:23.310 align:start position:0%
entire array the max value we could get
is<00:07:20.500><c> four</c><00:07:20.919><c> if</c><00:07:21.190><c> we</c><00:07:21.669><c> wanted</c><00:07:21.910><c> to</c><00:07:22.030><c> rob</c><00:07:22.240><c> houses</c><00:07:22.479><c> so</c><00:07:23.200><c> we</c>

00:07:23.310 --> 00:07:23.320 align:start position:0%
is four if we wanted to rob houses so we
 

00:07:23.320 --> 00:07:25.890 align:start position:0%
is four if we wanted to rob houses so we
can<00:07:23.470><c> put</c><00:07:23.620><c> a</c><00:07:23.650><c> 4</c><00:07:23.950><c> here</c><00:07:23.979><c> but</c><00:07:24.639><c> notice</c><00:07:25.000><c> how</c><00:07:25.360><c> we</c><00:07:25.419><c> don't</c>

00:07:25.890 --> 00:07:25.900 align:start position:0%
can put a 4 here but notice how we don't
 

00:07:25.900 --> 00:07:28.200 align:start position:0%
can put a 4 here but notice how we don't
have<00:07:26.260><c> to</c><00:07:26.410><c> look</c><00:07:26.710><c> we</c><00:07:27.160><c> don't</c><00:07:27.310><c> even</c><00:07:27.520><c> have</c><00:07:27.639><c> to</c><00:07:27.790><c> store</c>

00:07:28.200 --> 00:07:28.210 align:start position:0%
have to look we don't even have to store
 

00:07:28.210 --> 00:07:30.330 align:start position:0%
have to look we don't even have to store
this<00:07:28.389><c> entire</c><00:07:28.780><c> blue</c><00:07:29.110><c> portion</c><00:07:29.410><c> for</c><00:07:29.770><c> each</c><00:07:30.010><c> value</c>

00:07:30.330 --> 00:07:30.340 align:start position:0%
this entire blue portion for each value
 

00:07:30.340 --> 00:07:33.570 align:start position:0%
this entire blue portion for each value
like<00:07:31.060><c> for</c><00:07:31.360><c> this</c><00:07:31.450><c> one</c><00:07:31.510><c> for</c><00:07:32.020><c> to</c><00:07:32.650><c> compute</c><00:07:33.100><c> this</c><00:07:33.310><c> we</c>

00:07:33.570 --> 00:07:33.580 align:start position:0%
like for this one for to compute this we
 

00:07:33.580 --> 00:07:36.650 align:start position:0%
like for this one for to compute this we
only<00:07:34.090><c> need</c><00:07:34.690><c> to</c><00:07:34.870><c> look</c><00:07:35.080><c> at</c><00:07:35.229><c> the</c><00:07:35.380><c> previous</c><00:07:35.919><c> two</c>

00:07:36.650 --> 00:07:36.660 align:start position:0%
only need to look at the previous two
 

00:07:36.660 --> 00:07:39.960 align:start position:0%
only need to look at the previous two
results<00:07:37.660><c> that</c><00:07:37.810><c> we</c><00:07:37.930><c> computed</c><00:07:38.470><c> and</c><00:07:38.710><c> the</c><00:07:39.580><c> reason</c>

00:07:39.960 --> 00:07:39.970 align:start position:0%
results that we computed and the reason
 

00:07:39.970 --> 00:07:41.700 align:start position:0%
results that we computed and the reason
for<00:07:40.150><c> that</c><00:07:40.210><c> is</c><00:07:40.570><c> because</c><00:07:40.630><c> we</c><00:07:41.260><c> could</c><00:07:41.440><c> either</c>

00:07:41.700 --> 00:07:41.710 align:start position:0%
for that is because we could either
 

00:07:41.710 --> 00:07:44.370 align:start position:0%
for that is because we could either
decide<00:07:42.250><c> to</c><00:07:42.460><c> rob</c><00:07:42.610><c> this</c><00:07:42.850><c> one</c><00:07:43.120><c> and</c><00:07:43.300><c> Rob</c><00:07:43.810><c> the</c>

00:07:44.370 --> 00:07:44.380 align:start position:0%
decide to rob this one and Rob the
 

00:07:44.380 --> 00:07:47.190 align:start position:0%
decide to rob this one and Rob the
remainder<00:07:45.330><c> portion</c><00:07:46.330><c> of</c><00:07:46.419><c> the</c><00:07:46.539><c> array</c><00:07:46.810><c> not</c>

00:07:47.190 --> 00:07:47.200 align:start position:0%
remainder portion of the array not
 

00:07:47.200 --> 00:07:49.170 align:start position:0%
remainder portion of the array not
including<00:07:47.680><c> 3</c><00:07:47.979><c> and</c><00:07:48.220><c> in</c><00:07:48.580><c> which</c><00:07:48.700><c> case</c><00:07:48.940><c> we'd</c><00:07:49.150><c> have</c>

00:07:49.170 --> 00:07:49.180 align:start position:0%
including 3 and in which case we'd have
 

00:07:49.180 --> 00:07:52.740 align:start position:0%
including 3 and in which case we'd have
the<00:07:49.750><c> value</c><00:07:50.110><c> computed</c><00:07:50.440><c> right</c><00:07:50.770><c> here</c><00:07:51.539><c> the</c><00:07:52.539><c> other</c>

00:07:52.740 --> 00:07:52.750 align:start position:0%
the value computed right here the other
 

00:07:52.750 --> 00:07:54.690 align:start position:0%
the value computed right here the other
cases<00:07:53.260><c> if</c><00:07:53.380><c> we</c><00:07:53.470><c> wanted</c><00:07:53.680><c> the</c><00:07:53.800><c> max</c><00:07:54.010><c> we</c><00:07:54.220><c> could</c><00:07:54.370><c> Rob</c>

00:07:54.690 --> 00:07:54.700 align:start position:0%
cases if we wanted the max we could Rob
 

00:07:54.700 --> 00:07:56.670 align:start position:0%
cases if we wanted the max we could Rob
from<00:07:54.880><c> the</c><00:07:55.030><c> entire</c><00:07:55.360><c> array</c><00:07:55.720><c> we</c><00:07:56.169><c> could</c><00:07:56.320><c> decide</c><00:07:56.650><c> to</c>

00:07:56.670 --> 00:07:56.680 align:start position:0%
from the entire array we could decide to
 

00:07:56.680 --> 00:07:58.890 align:start position:0%
from the entire array we could decide to
not<00:07:57.039><c> even</c><00:07:57.310><c> include</c><00:07:57.669><c> this</c><00:07:57.910><c> and</c><00:07:58.120><c> just</c><00:07:58.510><c> get</c><00:07:58.720><c> the</c>

00:07:58.890 --> 00:07:58.900 align:start position:0%
not even include this and just get the
 

00:07:58.900 --> 00:08:02.010 align:start position:0%
not even include this and just get the
max<00:07:59.110><c> from</c><00:07:59.350><c> these</c><00:07:59.590><c> three</c><00:07:59.979><c> and</c><00:08:00.630><c> in</c><00:08:01.630><c> that</c><00:08:01.810><c> case</c>

00:08:02.010 --> 00:08:02.020 align:start position:0%
max from these three and in that case
 

00:08:02.020 --> 00:08:04.680 align:start position:0%
max from these three and in that case
the<00:08:02.260><c> value</c><00:08:02.560><c> would</c><00:08:02.650><c> be</c><00:08:02.710><c> stored</c><00:08:03.100><c> here</c><00:08:03.669><c> so</c><00:08:04.570><c> now</c>

00:08:04.680 --> 00:08:04.690 align:start position:0%
the value would be stored here so now
 

00:08:04.690 --> 00:08:06.300 align:start position:0%
the value would be stored here so now
let's<00:08:04.930><c> look</c><00:08:04.990><c> at</c><00:08:05.139><c> the</c><00:08:05.260><c> code</c><00:08:05.440><c> since</c><00:08:05.889><c> we</c><00:08:06.039><c> only</c>

00:08:06.300 --> 00:08:06.310 align:start position:0%
let's look at the code since we only
 

00:08:06.310 --> 00:08:08.879 align:start position:0%
let's look at the code since we only
need<00:08:06.580><c> to</c><00:08:06.700><c> maintain</c><00:08:07.270><c> the</c><00:08:07.450><c> last</c><00:08:07.690><c> two</c><00:08:08.110><c> maxes</c><00:08:08.680><c> that</c>

00:08:08.879 --> 00:08:08.889 align:start position:0%
need to maintain the last two maxes that
 

00:08:08.889 --> 00:08:11.370 align:start position:0%
need to maintain the last two maxes that
we<00:08:08.979><c> could</c><00:08:09.190><c> rob</c><00:08:09.400><c> from</c><00:08:09.789><c> we'll</c><00:08:10.630><c> only</c><00:08:10.840><c> need</c><00:08:11.139><c> two</c>

00:08:11.370 --> 00:08:11.380 align:start position:0%
we could rob from we'll only need two
 

00:08:11.380 --> 00:08:14.129 align:start position:0%
we could rob from we'll only need two
variables<00:08:11.919><c> so</c><00:08:11.979><c> I'll</c><00:08:12.190><c> just</c><00:08:12.370><c> name</c><00:08:12.580><c> them</c><00:08:12.840><c> Rob</c><00:08:13.840><c> 1</c>

00:08:14.129 --> 00:08:14.139 align:start position:0%
variables so I'll just name them Rob 1
 

00:08:14.139 --> 00:08:18.740 align:start position:0%
variables so I'll just name them Rob 1
Rob<00:08:14.410><c> 2</c><00:08:16.530><c> we'll</c><00:08:17.530><c> initialize</c><00:08:17.800><c> them</c><00:08:18.250><c> as</c><00:08:18.370><c> zero</c>

00:08:18.740 --> 00:08:18.750 align:start position:0%
Rob 2 we'll initialize them as zero
 

00:08:18.750 --> 00:08:21.480 align:start position:0%
Rob 2 we'll initialize them as zero
because<00:08:19.750><c> if</c><00:08:19.990><c> we</c><00:08:20.380><c> get</c><00:08:20.500><c> an</c><00:08:20.620><c> empty</c><00:08:20.770><c> sub-array</c><00:08:21.220><c> we</c>

00:08:21.480 --> 00:08:21.490 align:start position:0%
because if we get an empty sub-array we
 

00:08:21.490 --> 00:08:23.700 align:start position:0%
because if we get an empty sub-array we
want<00:08:21.700><c> to</c><00:08:21.789><c> return</c><00:08:22.060><c> zero</c><00:08:22.330><c> anyway</c><00:08:22.840><c> so</c><00:08:23.500><c> let's</c>

00:08:23.700 --> 00:08:23.710 align:start position:0%
want to return zero anyway so let's
 

00:08:23.710 --> 00:08:25.469 align:start position:0%
want to return zero anyway so let's
iterate<00:08:23.979><c> through</c><00:08:24.340><c> each</c><00:08:24.580><c> of</c><00:08:24.910><c> the</c><00:08:25.000><c> houses</c><00:08:25.150><c> we</c>

00:08:25.469 --> 00:08:25.479 align:start position:0%
iterate through each of the houses we
 

00:08:25.479 --> 00:08:29.909 align:start position:0%
iterate through each of the houses we
can<00:08:25.600><c> Rob</c><00:08:26.370><c> and</c><00:08:27.930><c> now</c><00:08:28.930><c> we</c><00:08:28.990><c> want</c><00:08:29.320><c> to</c><00:08:29.350><c> compute</c><00:08:29.710><c> the</c>

00:08:29.909 --> 00:08:29.919 align:start position:0%
can Rob and now we want to compute the
 

00:08:29.919 --> 00:08:32.490 align:start position:0%
can Rob and now we want to compute the
maximum<00:08:30.430><c> that</c><00:08:31.030><c> we</c><00:08:31.090><c> can</c><00:08:31.210><c> Rob</c><00:08:31.539><c> up</c><00:08:31.810><c> and</c><00:08:32.110><c> tell</c><00:08:32.320><c> this</c>

00:08:32.490 --> 00:08:32.500 align:start position:0%
maximum that we can Rob up and tell this
 

00:08:32.500 --> 00:08:35.310 align:start position:0%
maximum that we can Rob up and tell this
value<00:08:33.010><c> n</c><00:08:33.219><c> so</c><00:08:34.000><c> I'm</c><00:08:34.270><c> gonna</c><00:08:34.419><c> compute</c><00:08:34.900><c> that</c><00:08:35.050><c> in</c><00:08:35.229><c> a</c>

00:08:35.310 --> 00:08:35.320 align:start position:0%
value n so I'm gonna compute that in a
 

00:08:35.320 --> 00:08:37.110 align:start position:0%
value n so I'm gonna compute that in a
temporary<00:08:35.770><c> variable</c><00:08:36.070><c> for</c><00:08:36.580><c> now</c><00:08:36.700><c> and</c><00:08:36.969><c> you'll</c>

00:08:37.110 --> 00:08:37.120 align:start position:0%
temporary variable for now and you'll
 

00:08:37.120 --> 00:08:39.990 align:start position:0%
temporary variable for now and you'll
probably<00:08:37.300><c> see</c><00:08:37.599><c> why</c><00:08:38.039><c> so</c><00:08:39.039><c> the</c><00:08:39.159><c> max</c><00:08:39.430><c> we</c><00:08:39.640><c> can</c><00:08:39.789><c> Rob</c>

00:08:39.990 --> 00:08:40.000 align:start position:0%
probably see why so the max we can Rob
 

00:08:40.000 --> 00:08:42.930 align:start position:0%
probably see why so the max we can Rob
up<00:08:40.209><c> until</c><00:08:40.690><c> now</c><00:08:40.900><c> in</c><00:08:41.140><c> my</c><00:08:41.680><c> case</c><00:08:41.740><c> I'm</c><00:08:42.310><c> gonna</c><00:08:42.669><c> say</c>

00:08:42.930 --> 00:08:42.940 align:start position:0%
up until now in my case I'm gonna say
 

00:08:42.940 --> 00:08:46.410 align:start position:0%
up until now in my case I'm gonna say
Rob<00:08:43.300><c> 1</c><00:08:43.719><c> or</c><00:08:44.020><c> Rob</c><00:08:44.560><c> 2</c><00:08:44.950><c> was</c><00:08:45.220><c> the</c><00:08:45.400><c> last</c><00:08:45.730><c> house</c><00:08:46.060><c> that</c>

00:08:46.410 --> 00:08:46.420 align:start position:0%
Rob 1 or Rob 2 was the last house that
 

00:08:46.420 --> 00:08:47.340 align:start position:0%
Rob 1 or Rob 2 was the last house that
we<00:08:46.810><c> robbed</c>

00:08:47.340 --> 00:08:47.350 align:start position:0%
we robbed
 

00:08:47.350 --> 00:08:49.300 align:start position:0%
we robbed
Rob<00:08:47.770><c> one</c><00:08:48.160><c> was</c><00:08:48.400><c> the</c><00:08:48.520><c> one</c><00:08:48.700><c> before</c>

00:08:49.300 --> 00:08:49.310 align:start position:0%
Rob one was the one before
 

00:08:49.310 --> 00:08:52.660 align:start position:0%
Rob one was the one before
that<00:08:49.520><c> so</c><00:08:49.940><c> knowing</c><00:08:50.660><c> that</c><00:08:50.960><c> the</c><00:08:51.830><c> max</c><00:08:52.190><c> we</c><00:08:52.490><c> could</c>

00:08:52.660 --> 00:08:52.670 align:start position:0%
that so knowing that the max we could
 

00:08:52.670 --> 00:08:56.620 align:start position:0%
that so knowing that the max we could
get<00:08:53.029><c> would</c><00:08:53.660><c> be</c><00:08:54.100><c> n+</c><00:08:55.100><c> Rob</c><00:08:55.460><c> one</c><00:08:55.880><c> meaning</c><00:08:56.450><c> there's</c>

00:08:56.620 --> 00:08:56.630 align:start position:0%
get would be n+ Rob one meaning there's
 

00:08:56.630 --> 00:09:00.280 align:start position:0%
get would be n+ Rob one meaning there's
a<00:08:56.690><c> gap</c><00:08:57.110><c> between</c><00:08:58.120><c> the</c><00:08:59.120><c> current</c><00:08:59.510><c> house</c><00:08:59.690><c> and</c><00:09:00.050><c> the</c>

00:09:00.280 --> 00:09:00.290 align:start position:0%
a gap between the current house and the
 

00:09:00.290 --> 00:09:02.920 align:start position:0%
a gap between the current house and the
previous<00:09:00.680><c> house</c><00:09:00.860><c> or</c><00:09:01.160><c> Rob</c><00:09:01.520><c> two</c><00:09:01.910><c> which</c><00:09:02.270><c> includes</c>

00:09:02.920 --> 00:09:02.930 align:start position:0%
previous house or Rob two which includes
 

00:09:02.930 --> 00:09:04.990 align:start position:0%
previous house or Rob two which includes
the<00:09:03.200><c> previous</c><00:09:03.440><c> house</c><00:09:03.890><c> in</c><00:09:04.460><c> case</c><00:09:04.700><c> it's</c><00:09:04.880><c> not</c>

00:09:04.990 --> 00:09:05.000 align:start position:0%
the previous house in case it's not
 

00:09:05.000 --> 00:09:07.180 align:start position:0%
the previous house in case it's not
clear<00:09:05.060><c> this</c><00:09:05.570><c> is</c><00:09:05.750><c> basically</c><00:09:06.380><c> let</c><00:09:06.740><c> me</c><00:09:06.800><c> just</c><00:09:06.980><c> make</c>

00:09:07.180 --> 00:09:07.190 align:start position:0%
clear this is basically let me just make
 

00:09:07.190 --> 00:09:09.190 align:start position:0%
clear this is basically let me just make
a<00:09:07.250><c> comment</c><00:09:07.580><c> to</c><00:09:07.850><c> show</c><00:09:08.060><c> what</c><00:09:08.390><c> I</c><00:09:08.420><c> mean</c><00:09:08.660><c> by</c><00:09:08.810><c> Rob</c><00:09:09.020><c> 1</c>

00:09:09.190 --> 00:09:09.200 align:start position:0%
a comment to show what I mean by Rob 1
 

00:09:09.200 --> 00:09:11.590 align:start position:0%
a comment to show what I mean by Rob 1
and<00:09:09.350><c> Rob</c><00:09:09.500><c> -</c><00:09:09.710><c> so</c><00:09:10.400><c> Rob</c><00:09:10.610><c> 1</c><00:09:10.880><c> is</c><00:09:11.029><c> first</c>

00:09:11.590 --> 00:09:11.600 align:start position:0%
and Rob - so Rob 1 is first
 

00:09:11.600 --> 00:09:13.690 align:start position:0%
and Rob - so Rob 1 is first
Rob<00:09:11.930><c> 2</c><00:09:12.140><c> comes</c><00:09:12.440><c> second</c><00:09:12.860><c> and</c><00:09:12.920><c> then</c><00:09:13.190><c> we</c><00:09:13.310><c> get</c><00:09:13.490><c> some</c>

00:09:13.690 --> 00:09:13.700 align:start position:0%
Rob 2 comes second and then we get some
 

00:09:13.700 --> 00:09:19.450 align:start position:0%
Rob 2 comes second and then we get some
more<00:09:13.850><c> values</c><00:09:14.300><c> and</c><00:09:14.510><c> n</c><00:09:14.930><c> plus</c><00:09:15.560><c> 1</c><00:09:15.950><c> and</c><00:09:17.140><c> so</c><00:09:18.140><c> on</c><00:09:18.380><c> so</c><00:09:19.160><c> if</c>

00:09:19.450 --> 00:09:19.460 align:start position:0%
more values and n plus 1 and so on so if
 

00:09:19.460 --> 00:09:22.690 align:start position:0%
more values and n plus 1 and so on so if
I<00:09:19.670><c> want</c><00:09:19.910><c> a</c><00:09:19.970><c> Rob</c><00:09:20.270><c> n</c><00:09:20.570><c> then</c><00:09:21.260><c> I</c><00:09:21.290><c> have</c><00:09:21.560><c> to</c><00:09:21.740><c> Rob</c><00:09:21.980><c> Rob</c>

00:09:22.690 --> 00:09:22.700 align:start position:0%
I want a Rob n then I have to Rob Rob
 

00:09:22.700 --> 00:09:25.540 align:start position:0%
I want a Rob n then I have to Rob Rob
one<00:09:23.029><c> as</c><00:09:23.300><c> well</c><00:09:23.540><c> I</c><00:09:23.779><c> can't</c><00:09:24.350><c> use</c><00:09:24.620><c> Rob</c><00:09:24.920><c> 2</c>

00:09:25.540 --> 00:09:25.550 align:start position:0%
one as well I can't use Rob 2
 

00:09:25.550 --> 00:09:28.480 align:start position:0%
one as well I can't use Rob 2
but<00:09:25.850><c> if</c><00:09:26.060><c> I</c><00:09:26.180><c> want</c><00:09:26.390><c> to</c><00:09:26.420><c> do</c><00:09:26.870><c> Rob</c><00:09:27.110><c> -</c><00:09:27.440><c> I</c><00:09:27.470><c> can</c><00:09:28.040><c> include</c>

00:09:28.480 --> 00:09:28.490 align:start position:0%
but if I want to do Rob - I can include
 

00:09:28.490 --> 00:09:31.030 align:start position:0%
but if I want to do Rob - I can include
n<00:09:28.700><c> because</c><00:09:29.300><c> it's</c><00:09:29.420><c> right</c><00:09:29.600><c> next</c><00:09:29.930><c> to</c><00:09:30.020><c> it</c><00:09:30.050><c> so</c><00:09:30.440><c> when</c>

00:09:31.030 --> 00:09:31.040 align:start position:0%
n because it's right next to it so when
 

00:09:31.040 --> 00:09:32.890 align:start position:0%
n because it's right next to it so when
we<00:09:31.070><c> iterate</c><00:09:31.700><c> to</c><00:09:31.820><c> the</c><00:09:31.940><c> next</c><00:09:32.210><c> position</c><00:09:32.330><c> meaning</c>

00:09:32.890 --> 00:09:32.900 align:start position:0%
we iterate to the next position meaning
 

00:09:32.900 --> 00:09:36.070 align:start position:0%
we iterate to the next position meaning
we<00:09:33.020><c> get</c><00:09:33.140><c> here</c><00:09:33.589><c> we</c><00:09:33.830><c> want</c><00:09:34.040><c> to</c><00:09:34.070><c> update</c><00:09:34.339><c> Rob</c><00:09:35.000><c> one</c><00:09:35.420><c> to</c>

00:09:36.070 --> 00:09:36.080 align:start position:0%
we get here we want to update Rob one to
 

00:09:36.080 --> 00:09:39.720 align:start position:0%
we get here we want to update Rob one to
now<00:09:36.440><c> equal</c><00:09:36.860><c> Rob</c><00:09:37.070><c> -</c><00:09:37.430><c> so</c><00:09:37.970><c> let's</c><00:09:38.150><c> do</c><00:09:38.330><c> that</c>

00:09:39.720 --> 00:09:39.730 align:start position:0%
now equal Rob - so let's do that
 

00:09:39.730 --> 00:09:45.130 align:start position:0%
now equal Rob - so let's do that
and<00:09:42.070><c> Rob</c><00:09:43.070><c> 2</c><00:09:43.430><c> in</c><00:09:43.790><c> this</c><00:09:44.060><c> case</c><00:09:44.120><c> wants</c><00:09:44.930><c> to</c><00:09:45.020><c> be</c>

00:09:45.130 --> 00:09:45.140 align:start position:0%
and Rob 2 in this case wants to be
 

00:09:45.140 --> 00:09:49.180 align:start position:0%
and Rob 2 in this case wants to be
updated<00:09:45.680><c> to</c><00:09:45.800><c> n</c><00:09:46.450><c> so</c><00:09:47.450><c> Rob</c><00:09:47.690><c> 2</c><00:09:47.990><c> can</c><00:09:48.410><c> now</c><00:09:48.589><c> equal</c><00:09:49.040><c> our</c>

00:09:49.180 --> 00:09:49.190 align:start position:0%
updated to n so Rob 2 can now equal our
 

00:09:49.190 --> 00:09:52.210 align:start position:0%
updated to n so Rob 2 can now equal our
temporary<00:09:50.050><c> value</c><00:09:51.050><c> that</c><00:09:51.140><c> we</c><00:09:51.260><c> just</c><00:09:51.290><c> computed</c><00:09:51.740><c> at</c>

00:09:52.210 --> 00:09:52.220 align:start position:0%
temporary value that we just computed at
 

00:09:52.220 --> 00:09:55.990 align:start position:0%
temporary value that we just computed at
the<00:09:52.400><c> end</c><00:09:52.610><c> we</c><00:09:53.210><c> want</c><00:09:53.420><c> to</c><00:09:53.510><c> return</c><00:09:53.960><c> Rob</c><00:09:54.770><c> 2</c><00:09:55.220><c> because</c>

00:09:55.990 --> 00:09:56.000 align:start position:0%
the end we want to return Rob 2 because
 

00:09:56.000 --> 00:09:58.060 align:start position:0%
the end we want to return Rob 2 because
by<00:09:56.150><c> the</c><00:09:56.210><c> time</c><00:09:56.300><c> we</c><00:09:56.600><c> get</c><00:09:56.690><c> to</c><00:09:56.839><c> the</c><00:09:56.930><c> end</c><00:09:57.080><c> Rob</c><00:09:57.589><c> 2</c><00:09:57.860><c> will</c>

00:09:58.060 --> 00:09:58.070 align:start position:0%
by the time we get to the end Rob 2 will
 

00:09:58.070 --> 00:10:00.850 align:start position:0%
by the time we get to the end Rob 2 will
be<00:09:58.220><c> equal</c><00:09:58.640><c> to</c><00:09:58.670><c> the</c><00:09:58.880><c> last</c><00:09:59.089><c> value</c><00:09:59.500><c> meaning</c><00:10:00.500><c> that</c>

00:10:00.850 --> 00:10:00.860 align:start position:0%
be equal to the last value meaning that
 

00:10:00.860 --> 00:10:02.530 align:start position:0%
be equal to the last value meaning that
it<00:10:01.040><c> will</c><00:10:01.220><c> be</c><00:10:01.339><c> the</c><00:10:01.430><c> max</c><00:10:01.670><c> we</c><00:10:01.850><c> can</c><00:10:02.000><c> rob</c><00:10:02.180><c> from</c><00:10:02.390><c> the</c>

00:10:02.530 --> 00:10:02.540 align:start position:0%
it will be the max we can rob from the
 

00:10:02.540 --> 00:10:05.140 align:start position:0%
it will be the max we can rob from the
entire<00:10:03.050><c> neighborhood</c><00:10:03.740><c> of</c><00:10:03.890><c> houses</c><00:10:04.040><c> this</c><00:10:04.910><c> is</c><00:10:04.970><c> a</c>

00:10:05.140 --> 00:10:05.150 align:start position:0%
entire neighborhood of houses this is a
 

00:10:05.150 --> 00:10:07.660 align:start position:0%
entire neighborhood of houses this is a
problem<00:10:05.630><c> you</c><00:10:05.750><c> can</c><00:10:05.930><c> learn</c><00:10:06.140><c> so</c><00:10:06.620><c> much</c><00:10:06.650><c> from</c><00:10:07.010><c> even</c>

00:10:07.660 --> 00:10:07.670 align:start position:0%
problem you can learn so much from even
 

00:10:07.670 --> 00:10:09.190 align:start position:0%
problem you can learn so much from even
though<00:10:07.790><c> it's</c><00:10:07.940><c> an</c><00:10:08.060><c> easy</c><00:10:08.360><c> problem</c><00:10:08.690><c> it</c><00:10:09.020><c> might</c>

00:10:09.190 --> 00:10:09.200 align:start position:0%
though it's an easy problem it might
 

00:10:09.200 --> 00:10:11.170 align:start position:0%
though it's an easy problem it might
take<00:10:09.440><c> you</c><00:10:09.589><c> a</c><00:10:09.620><c> while</c><00:10:09.860><c> to</c><00:10:09.920><c> digest</c><00:10:10.250><c> exactly</c>

00:10:11.170 --> 00:10:11.180 align:start position:0%
take you a while to digest exactly
 

00:10:11.180 --> 00:10:12.910 align:start position:0%
take you a while to digest exactly
what's<00:10:11.360><c> going</c><00:10:11.630><c> on</c><00:10:11.839><c> and</c><00:10:12.020><c> to</c><00:10:12.110><c> understand</c><00:10:12.740><c> all</c>

00:10:12.910 --> 00:10:12.920 align:start position:0%
what's going on and to understand all
 

00:10:12.920 --> 00:10:15.850 align:start position:0%
what's going on and to understand all
the<00:10:13.220><c> like</c><00:10:13.520><c> importance</c><00:10:14.240><c> of</c><00:10:14.450><c> this</c><00:10:14.750><c> problem</c><00:10:15.170><c> so</c>

00:10:15.850 --> 00:10:15.860 align:start position:0%
the like importance of this problem so
 

00:10:15.860 --> 00:10:18.190 align:start position:0%
the like importance of this problem so
many<00:10:16.339><c> dynamic</c><00:10:17.030><c> program</c><00:10:17.510><c> programming</c>

00:10:18.190 --> 00:10:18.200 align:start position:0%
many dynamic program programming
 

00:10:18.200 --> 00:10:21.010 align:start position:0%
many dynamic program programming
problems<00:10:18.589><c> are</c><00:10:18.770><c> built</c><00:10:19.100><c> upon</c><00:10:19.339><c> this</c><00:10:19.730><c> one</c><00:10:20.030><c> and</c><00:10:20.300><c> let</c>

00:10:21.010 --> 00:10:21.020 align:start position:0%
problems are built upon this one and let
 

00:10:21.020 --> 00:10:22.329 align:start position:0%
problems are built upon this one and let
me<00:10:21.140><c> know</c><00:10:21.290><c> if</c><00:10:21.410><c> you</c><00:10:21.500><c> have</c><00:10:21.620><c> any</c><00:10:21.770><c> questions</c>

00:10:22.329 --> 00:10:22.339 align:start position:0%
me know if you have any questions
 

00:10:22.339 --> 00:10:23.590 align:start position:0%
me know if you have any questions
because<00:10:22.520><c> I</c><00:10:22.700><c> feel</c><00:10:22.910><c> like</c><00:10:22.940><c> I</c><00:10:23.150><c> might</c><00:10:23.360><c> not</c><00:10:23.570><c> have</c>

00:10:23.590 --> 00:10:23.600 align:start position:0%
because I feel like I might not have
 

00:10:23.600 --> 00:10:25.120 align:start position:0%
because I feel like I might not have
explained<00:10:24.200><c> like</c><00:10:24.470><c> the</c><00:10:24.650><c> recurrence</c>

00:10:25.120 --> 00:10:25.130 align:start position:0%
explained like the recurrence
 

00:10:25.130 --> 00:10:27.280 align:start position:0%
explained like the recurrence
relationship<00:10:25.820><c> quite</c><00:10:26.150><c> well</c><00:10:26.390><c> enough</c><00:10:26.720><c> but</c><00:10:27.080><c> if</c>

00:10:27.280 --> 00:10:27.290 align:start position:0%
relationship quite well enough but if
 

00:10:27.290 --> 00:10:28.810 align:start position:0%
relationship quite well enough but if
this<00:10:27.470><c> was</c><00:10:27.650><c> helpful</c><00:10:27.860><c> thank</c><00:10:28.490><c> you</c><00:10:28.580><c> for</c><00:10:28.640><c> watching</c>

00:10:28.810 --> 00:10:28.820 align:start position:0%
this was helpful thank you for watching
 

00:10:28.820 --> 00:10:31.660 align:start position:0%
this was helpful thank you for watching
leave<00:10:29.540><c> a</c><00:10:29.570><c> like</c><00:10:29.660><c> and</c><00:10:29.960><c> subscribe</c><00:10:30.440><c> and</c><00:10:30.680><c> let</c><00:10:31.520><c> me</c>

00:10:31.660 --> 00:10:31.670 align:start position:0%
leave a like and subscribe and let me
 

00:10:31.670 --> 00:10:34.900 align:start position:0%
leave a like and subscribe and let me
know<00:10:31.790><c> if</c><00:10:31.910><c> you</c><00:10:32.030><c> have</c><00:10:32.150><c> any</c><00:10:32.300><c> suggestions</c>

