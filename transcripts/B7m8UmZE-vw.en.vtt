WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.750 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.719><c> welcome</c><00:00:01.120><c> back</c><00:00:01.360><c> and</c><00:00:01.520><c> let's</c>

00:00:01.750 --> 00:00:01.760 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.760 --> 00:00:03.669 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.920><c> some</c><00:00:02.159><c> more</c><00:00:02.320><c> neat</c><00:00:02.639><c> code</c><00:00:02.879><c> today</c><00:00:03.199><c> so</c><00:00:03.360><c> today</c>

00:00:03.669 --> 00:00:03.679 align:start position:0%
write some more neat code today so today
 

00:00:03.679 --> 00:00:06.309 align:start position:0%
write some more neat code today so today
let's<00:00:03.919><c> solve</c><00:00:04.240><c> the</c><00:00:04.480><c> problem</c><00:00:04.960><c> partition</c><00:00:05.839><c> labels</c>

00:00:06.309 --> 00:00:06.319 align:start position:0%
let's solve the problem partition labels
 

00:00:06.319 --> 00:00:08.230 align:start position:0%
let's solve the problem partition labels
this<00:00:06.560><c> is</c><00:00:06.720><c> a</c><00:00:06.879><c> very</c><00:00:07.120><c> interesting</c><00:00:07.600><c> and</c><00:00:07.759><c> somewhat</c>

00:00:08.230 --> 00:00:08.240 align:start position:0%
this is a very interesting and somewhat
 

00:00:08.240 --> 00:00:11.669 align:start position:0%
this is a very interesting and somewhat
unique<00:00:08.800><c> problem</c><00:00:09.599><c> we</c><00:00:09.760><c> are</c><00:00:09.920><c> given</c><00:00:10.400><c> a</c><00:00:10.719><c> string</c><00:00:11.280><c> s</c>

00:00:11.669 --> 00:00:11.679 align:start position:0%
unique problem we are given a string s
 

00:00:11.679 --> 00:00:13.669 align:start position:0%
unique problem we are given a string s
and<00:00:11.840><c> we</c><00:00:12.000><c> want</c><00:00:12.160><c> to</c><00:00:12.320><c> partition</c><00:00:12.799><c> the</c><00:00:12.960><c> string</c><00:00:13.360><c> into</c>

00:00:13.669 --> 00:00:13.679 align:start position:0%
and we want to partition the string into
 

00:00:13.679 --> 00:00:16.790 align:start position:0%
and we want to partition the string into
as<00:00:14.000><c> many</c><00:00:14.480><c> parts</c><00:00:14.960><c> as</c><00:00:15.360><c> possible</c><00:00:15.839><c> so</c><00:00:16.080><c> that</c><00:00:16.320><c> each</c>

00:00:16.790 --> 00:00:16.800 align:start position:0%
as many parts as possible so that each
 

00:00:16.800 --> 00:00:20.470 align:start position:0%
as many parts as possible so that each
letter<00:00:17.199><c> appears</c><00:00:17.760><c> in</c><00:00:18.000><c> at</c><00:00:18.320><c> most</c><00:00:19.039><c> one</c><00:00:19.600><c> part</c><00:00:20.160><c> and</c>

00:00:20.470 --> 00:00:20.480 align:start position:0%
letter appears in at most one part and
 

00:00:20.480 --> 00:00:23.189 align:start position:0%
letter appears in at most one part and
what<00:00:20.640><c> we</c><00:00:20.800><c> want</c><00:00:20.960><c> to</c><00:00:21.039><c> return</c><00:00:21.760><c> is</c><00:00:22.000><c> the</c><00:00:22.400><c> list</c><00:00:22.880><c> of</c>

00:00:23.189 --> 00:00:23.199 align:start position:0%
what we want to return is the list of
 

00:00:23.199 --> 00:00:26.150 align:start position:0%
what we want to return is the list of
integers<00:00:24.000><c> representing</c><00:00:24.640><c> the</c><00:00:24.960><c> size</c><00:00:25.599><c> of</c><00:00:25.920><c> each</c>

00:00:26.150 --> 00:00:26.160 align:start position:0%
integers representing the size of each
 

00:00:26.160 --> 00:00:28.230 align:start position:0%
integers representing the size of each
of<00:00:26.320><c> these</c><00:00:26.640><c> parts</c><00:00:27.119><c> so</c><00:00:27.279><c> let's</c><00:00:27.519><c> actually</c><00:00:27.920><c> start</c>

00:00:28.230 --> 00:00:28.240 align:start position:0%
of these parts so let's actually start
 

00:00:28.240 --> 00:00:30.150 align:start position:0%
of these parts so let's actually start
with<00:00:28.480><c> the</c><00:00:28.640><c> second</c><00:00:29.039><c> example</c><00:00:29.599><c> this</c><00:00:29.840><c> time</c>

00:00:30.150 --> 00:00:30.160 align:start position:0%
with the second example this time
 

00:00:30.160 --> 00:00:31.750 align:start position:0%
with the second example this time
because<00:00:30.400><c> i</c><00:00:30.560><c> think</c><00:00:30.800><c> it</c><00:00:31.039><c> really</c><00:00:31.359><c> helps</c><00:00:31.599><c> to</c>

00:00:31.750 --> 00:00:31.760 align:start position:0%
because i think it really helps to
 

00:00:31.760 --> 00:00:34.150 align:start position:0%
because i think it really helps to
illustrate<00:00:32.399><c> how</c><00:00:32.559><c> to</c><00:00:32.719><c> solve</c><00:00:33.040><c> this</c><00:00:33.360><c> problem</c><00:00:34.000><c> and</c>

00:00:34.150 --> 00:00:34.160 align:start position:0%
illustrate how to solve this problem and
 

00:00:34.160 --> 00:00:36.470 align:start position:0%
illustrate how to solve this problem and
kind<00:00:34.320><c> of</c><00:00:34.399><c> makes</c><00:00:34.640><c> it</c><00:00:34.880><c> simple</c><00:00:35.760><c> just</c><00:00:36.000><c> starting</c>

00:00:36.470 --> 00:00:36.480 align:start position:0%
kind of makes it simple just starting
 

00:00:36.480 --> 00:00:38.709 align:start position:0%
kind of makes it simple just starting
from<00:00:36.800><c> left</c><00:00:37.120><c> to</c><00:00:37.360><c> right</c><00:00:37.920><c> let's</c><00:00:38.160><c> take</c><00:00:38.320><c> a</c><00:00:38.399><c> look</c><00:00:38.640><c> at</c>

00:00:38.709 --> 00:00:38.719 align:start position:0%
from left to right let's take a look at
 

00:00:38.719 --> 00:00:41.030 align:start position:0%
from left to right let's take a look at
the<00:00:38.800><c> first</c><00:00:39.120><c> character</c><00:00:39.600><c> it's</c><00:00:39.840><c> an</c><00:00:40.160><c> e</c><00:00:40.559><c> character</c>

00:00:41.030 --> 00:00:41.040 align:start position:0%
the first character it's an e character
 

00:00:41.040 --> 00:00:43.510 align:start position:0%
the first character it's an e character
right<00:00:41.600><c> we</c><00:00:41.840><c> want</c><00:00:42.000><c> to</c><00:00:42.160><c> partition</c><00:00:42.719><c> this</c><00:00:42.960><c> into</c><00:00:43.200><c> as</c>

00:00:43.510 --> 00:00:43.520 align:start position:0%
right we want to partition this into as
 

00:00:43.520 --> 00:00:46.389 align:start position:0%
right we want to partition this into as
many<00:00:44.000><c> parts</c><00:00:44.559><c> as</c><00:00:44.800><c> possible</c><00:00:45.600><c> but</c><00:00:46.000><c> each</c>

00:00:46.389 --> 00:00:46.399 align:start position:0%
many parts as possible but each
 

00:00:46.399 --> 00:00:50.150 align:start position:0%
many parts as possible but each
character<00:00:47.200><c> such</c><00:00:47.520><c> as</c><00:00:47.760><c> this</c><00:00:48.160><c> e</c><00:00:48.719><c> can</c><00:00:49.039><c> only</c><00:00:49.600><c> appear</c>

00:00:50.150 --> 00:00:50.160 align:start position:0%
character such as this e can only appear
 

00:00:50.160 --> 00:00:53.029 align:start position:0%
character such as this e can only appear
in<00:00:50.399><c> a</c><00:00:50.719><c> single</c><00:00:51.440><c> partition</c><00:00:52.079><c> so</c><00:00:52.480><c> what</c><00:00:52.640><c> we</c><00:00:52.800><c> would</c>

00:00:53.029 --> 00:00:53.039 align:start position:0%
in a single partition so what we would
 

00:00:53.039 --> 00:00:54.950 align:start position:0%
in a single partition so what we would
want<00:00:53.280><c> to</c><00:00:53.440><c> do</c><00:00:53.600><c> is</c><00:00:53.680><c> just</c><00:00:53.840><c> say</c><00:00:54.079><c> okay</c><00:00:54.399><c> cut</c><00:00:54.640><c> it</c><00:00:54.800><c> right</c>

00:00:54.950 --> 00:00:54.960 align:start position:0%
want to do is just say okay cut it right
 

00:00:54.960 --> 00:00:57.270 align:start position:0%
want to do is just say okay cut it right
here<00:00:55.199><c> right</c><00:00:55.440><c> this</c><00:00:55.680><c> is</c><00:00:55.840><c> a</c><00:00:56.079><c> single</c><00:00:56.399><c> partition</c>

00:00:57.270 --> 00:00:57.280 align:start position:0%
here right this is a single partition
 

00:00:57.280 --> 00:00:59.910 align:start position:0%
here right this is a single partition
great<00:00:57.760><c> but</c><00:00:58.000><c> we</c><00:00:58.160><c> can't</c><00:00:58.480><c> do</c><00:00:58.719><c> that</c><00:00:59.199><c> why</c><00:00:59.520><c> can't</c><00:00:59.760><c> we</c>

00:00:59.910 --> 00:00:59.920 align:start position:0%
great but we can't do that why can't we
 

00:00:59.920 --> 00:01:01.590 align:start position:0%
great but we can't do that why can't we
do<00:01:00.079><c> that</c><00:01:00.320><c> because</c>

00:01:01.590 --> 00:01:01.600 align:start position:0%
do that because
 

00:01:01.600 --> 00:01:04.310 align:start position:0%
do that because
there's<00:01:01.920><c> actually</c><00:01:02.399><c> multiple</c><00:01:03.120><c> e's</c><00:01:03.680><c> in</c><00:01:04.000><c> this</c>

00:01:04.310 --> 00:01:04.320 align:start position:0%
there's actually multiple e's in this
 

00:01:04.320 --> 00:01:06.950 align:start position:0%
there's actually multiple e's in this
string<00:01:04.640><c> there's</c><00:01:04.879><c> another</c><00:01:05.439><c> e</c><00:01:06.000><c> all</c><00:01:06.240><c> the</c><00:01:06.479><c> way</c>

00:01:06.950 --> 00:01:06.960 align:start position:0%
string there's another e all the way
 

00:01:06.960 --> 00:01:10.149 align:start position:0%
string there's another e all the way
over<00:01:07.520><c> here</c><00:01:08.080><c> and</c><00:01:08.320><c> our</c><00:01:08.560><c> partitions</c><00:01:09.439><c> have</c><00:01:09.680><c> to</c><00:01:09.920><c> be</c>

00:01:10.149 --> 00:01:10.159 align:start position:0%
over here and our partitions have to be
 

00:01:10.159 --> 00:01:13.030 align:start position:0%
over here and our partitions have to be
contiguous<00:01:11.439><c> as</c><00:01:11.680><c> soon</c><00:01:11.920><c> as</c><00:01:12.080><c> we</c><00:01:12.320><c> see</c><00:01:12.560><c> the</c><00:01:12.720><c> first</c>

00:01:13.030 --> 00:01:13.040 align:start position:0%
contiguous as soon as we see the first
 

00:01:13.040 --> 00:01:14.630 align:start position:0%
contiguous as soon as we see the first
character<00:01:13.439><c> and</c><00:01:13.520><c> we</c><00:01:13.760><c> see</c><00:01:13.920><c> that</c><00:01:14.080><c> it</c><00:01:14.240><c> actually</c>

00:01:14.630 --> 00:01:14.640 align:start position:0%
character and we see that it actually
 

00:01:14.640 --> 00:01:18.070 align:start position:0%
character and we see that it actually
occurs<00:01:15.200><c> way</c><00:01:15.520><c> to</c><00:01:15.680><c> the</c><00:01:15.920><c> right</c><00:01:16.320><c> in</c><00:01:16.400><c> the</c><00:01:16.560><c> string</c><00:01:17.280><c> we</c>

00:01:18.070 --> 00:01:18.080 align:start position:0%
occurs way to the right in the string we
 

00:01:18.080 --> 00:01:19.670 align:start position:0%
occurs way to the right in the string we
will<00:01:18.320><c> never</c><00:01:18.640><c> be</c><00:01:18.799><c> able</c><00:01:18.880><c> to</c><00:01:19.040><c> partition</c><00:01:19.520><c> the</c>

00:01:19.670 --> 00:01:19.680 align:start position:0%
will never be able to partition the
 

00:01:19.680 --> 00:01:22.390 align:start position:0%
will never be able to partition the
string<00:01:20.000><c> here</c><00:01:20.560><c> here</c><00:01:20.960><c> here</c><00:01:21.280><c> here</c><00:01:21.680><c> anywhere</c>

00:01:22.390 --> 00:01:22.400 align:start position:0%
string here here here here anywhere
 

00:01:22.400 --> 00:01:24.870 align:start position:0%
string here here here here anywhere
right<00:01:22.880><c> because</c><00:01:23.280><c> at</c><00:01:23.600><c> the</c><00:01:23.759><c> very</c><00:01:24.080><c> least</c><00:01:24.400><c> we</c><00:01:24.640><c> know</c>

00:01:24.870 --> 00:01:24.880 align:start position:0%
right because at the very least we know
 

00:01:24.880 --> 00:01:29.030 align:start position:0%
right because at the very least we know
that<00:01:25.360><c> this</c><00:01:25.840><c> has</c><00:01:26.159><c> to</c><00:01:26.400><c> be</c><00:01:27.040><c> one</c><00:01:27.520><c> partition</c><00:01:28.479><c> and</c><00:01:28.880><c> if</c>

00:01:29.030 --> 00:01:29.040 align:start position:0%
that this has to be one partition and if
 

00:01:29.040 --> 00:01:31.109 align:start position:0%
that this has to be one partition and if
we<00:01:29.200><c> do</c><00:01:29.439><c> partition</c><00:01:29.920><c> it</c><00:01:30.079><c> like</c><00:01:30.240><c> that</c><00:01:30.720><c> this</c><00:01:31.040><c> i</c>

00:01:31.109 --> 00:01:31.119 align:start position:0%
we do partition it like that this i
 

00:01:31.119 --> 00:01:34.230 align:start position:0%
we do partition it like that this i
think<00:01:31.360><c> is</c><00:01:31.600><c> nine</c><00:01:32.000><c> characters</c><00:01:32.880><c> but</c><00:01:33.360><c> we</c><00:01:33.600><c> actually</c>

00:01:34.230 --> 00:01:34.240 align:start position:0%
think is nine characters but we actually
 

00:01:34.240 --> 00:01:37.429 align:start position:0%
think is nine characters but we actually
can't<00:01:34.720><c> even</c><00:01:35.119><c> partition</c><00:01:35.680><c> it</c><00:01:35.840><c> here</c><00:01:36.400><c> either</c><00:01:37.040><c> and</c>

00:01:37.429 --> 00:01:37.439 align:start position:0%
can't even partition it here either and
 

00:01:37.439 --> 00:01:39.350 align:start position:0%
can't even partition it here either and
we<00:01:37.600><c> can</c><00:01:37.759><c> figure</c><00:01:38.000><c> that</c><00:01:38.159><c> out</c><00:01:38.479><c> just</c><00:01:38.799><c> by</c><00:01:39.040><c> looking</c>

00:01:39.350 --> 00:01:39.360 align:start position:0%
we can figure that out just by looking
 

00:01:39.360 --> 00:01:41.590 align:start position:0%
we can figure that out just by looking
at<00:01:39.520><c> the</c><00:01:39.840><c> second</c><00:01:40.320><c> character</c><00:01:41.119><c> the</c><00:01:41.280><c> second</c>

00:01:41.590 --> 00:01:41.600 align:start position:0%
at the second character the second
 

00:01:41.600 --> 00:01:44.149 align:start position:0%
at the second character the second
character<00:01:42.079><c> is</c><00:01:42.240><c> a</c><00:01:42.479><c> c</c><00:01:43.040><c> now</c><00:01:43.280><c> there's</c><00:01:43.520><c> a</c><00:01:43.600><c> c</c><00:01:43.920><c> over</c>

00:01:44.149 --> 00:01:44.159 align:start position:0%
character is a c now there's a c over
 

00:01:44.159 --> 00:01:46.630 align:start position:0%
character is a c now there's a c over
here<00:01:44.560><c> there's</c><00:01:44.799><c> another</c><00:01:45.200><c> c</c><00:01:45.520><c> over</c><00:01:45.920><c> here</c><00:01:46.479><c> and</c>

00:01:46.630 --> 00:01:46.640 align:start position:0%
here there's another c over here and
 

00:01:46.640 --> 00:01:48.710 align:start position:0%
here there's another c over here and
that's<00:01:46.880><c> perfectly</c><00:01:47.520><c> fine</c><00:01:48.000><c> but</c><00:01:48.159><c> the</c><00:01:48.320><c> reason</c><00:01:48.640><c> we</c>

00:01:48.710 --> 00:01:48.720 align:start position:0%
that's perfectly fine but the reason we
 

00:01:48.720 --> 00:01:50.550 align:start position:0%
that's perfectly fine but the reason we
can't<00:01:48.960><c> partition</c><00:01:49.520><c> here</c><00:01:49.840><c> is</c><00:01:50.000><c> because</c><00:01:50.320><c> there's</c>

00:01:50.550 --> 00:01:50.560 align:start position:0%
can't partition here is because there's
 

00:01:50.560 --> 00:01:53.830 align:start position:0%
can't partition here is because there's
a<00:01:50.720><c> c</c><00:01:51.200><c> in</c><00:01:51.360><c> the</c><00:01:51.520><c> last</c><00:01:52.000><c> position</c><00:01:52.960><c> only</c><00:01:53.360><c> by</c><00:01:53.600><c> looking</c>

00:01:53.830 --> 00:01:53.840 align:start position:0%
a c in the last position only by looking
 

00:01:53.840 --> 00:01:56.469 align:start position:0%
a c in the last position only by looking
at<00:01:54.000><c> the</c><00:01:54.159><c> first</c><00:01:54.479><c> two</c><00:01:54.720><c> characters</c><00:01:55.280><c> we</c><00:01:55.600><c> realize</c>

00:01:56.469 --> 00:01:56.479 align:start position:0%
at the first two characters we realize
 

00:01:56.479 --> 00:01:58.550 align:start position:0%
at the first two characters we realize
that<00:01:56.799><c> the</c><00:01:57.040><c> entire</c><00:01:57.600><c> string</c>

00:01:58.550 --> 00:01:58.560 align:start position:0%
that the entire string
 

00:01:58.560 --> 00:02:00.550 align:start position:0%
that the entire string
is<00:01:58.719><c> going</c><00:01:58.799><c> to</c><00:01:58.880><c> be</c><00:01:59.119><c> a</c><00:01:59.360><c> single</c><00:01:59.759><c> partition</c><00:02:00.320><c> we</c>

00:02:00.550 --> 00:02:00.560 align:start position:0%
is going to be a single partition we
 

00:02:00.560 --> 00:02:03.749 align:start position:0%
is going to be a single partition we
can't<00:02:00.799><c> partition</c><00:02:01.360><c> this</c><00:02:01.680><c> any</c><00:02:02.320><c> further</c><00:02:03.040><c> and</c><00:02:03.600><c> so</c>

00:02:03.749 --> 00:02:03.759 align:start position:0%
can't partition this any further and so
 

00:02:03.759 --> 00:02:05.749 align:start position:0%
can't partition this any further and so
what<00:02:03.920><c> we're</c><00:02:04.079><c> going</c><00:02:04.159><c> to</c><00:02:04.240><c> return</c><00:02:04.960><c> is</c><00:02:05.200><c> we</c><00:02:05.360><c> have</c><00:02:05.600><c> a</c>

00:02:05.749 --> 00:02:05.759 align:start position:0%
what we're going to return is we have a
 

00:02:05.759 --> 00:02:07.830 align:start position:0%
what we're going to return is we have a
single<00:02:06.159><c> partition</c><00:02:06.960><c> and</c><00:02:07.119><c> the</c><00:02:07.280><c> length</c><00:02:07.520><c> of</c><00:02:07.600><c> that</c>

00:02:07.830 --> 00:02:07.840 align:start position:0%
single partition and the length of that
 

00:02:07.840 --> 00:02:11.029 align:start position:0%
single partition and the length of that
partition<00:02:08.479><c> is</c><00:02:09.119><c> 10.</c><00:02:09.840><c> so</c><00:02:10.000><c> this</c><00:02:10.239><c> is</c><00:02:10.319><c> the</c><00:02:10.640><c> list</c>

00:02:11.029 --> 00:02:11.039 align:start position:0%
partition is 10. so this is the list
 

00:02:11.039 --> 00:02:13.110 align:start position:0%
partition is 10. so this is the list
that<00:02:11.200><c> we</c><00:02:11.360><c> are</c><00:02:11.440><c> going</c><00:02:11.599><c> to</c><00:02:11.680><c> return</c><00:02:12.080><c> in</c><00:02:12.239><c> this</c><00:02:12.480><c> case</c>

00:02:13.110 --> 00:02:13.120 align:start position:0%
that we are going to return in this case
 

00:02:13.120 --> 00:02:15.030 align:start position:0%
that we are going to return in this case
so<00:02:13.280><c> you</c><00:02:13.440><c> might</c><00:02:13.680><c> be</c><00:02:13.840><c> starting</c><00:02:14.239><c> to</c><00:02:14.319><c> get</c><00:02:14.480><c> an</c><00:02:14.640><c> idea</c>

00:02:15.030 --> 00:02:15.040 align:start position:0%
so you might be starting to get an idea
 

00:02:15.040 --> 00:02:16.790 align:start position:0%
so you might be starting to get an idea
of<00:02:15.120><c> how</c><00:02:15.280><c> we</c><00:02:15.440><c> can</c><00:02:15.680><c> solve</c><00:02:15.920><c> this</c><00:02:16.239><c> problem</c><00:02:16.640><c> in</c>

00:02:16.790 --> 00:02:16.800 align:start position:0%
of how we can solve this problem in
 

00:02:16.800 --> 00:02:18.790 align:start position:0%
of how we can solve this problem in
general<00:02:17.360><c> but</c><00:02:17.599><c> if</c><00:02:17.840><c> not</c><00:02:18.080><c> don't</c><00:02:18.319><c> worry</c><00:02:18.560><c> about</c><00:02:18.720><c> it</c>

00:02:18.790 --> 00:02:18.800 align:start position:0%
general but if not don't worry about it
 

00:02:18.800 --> 00:02:19.990 align:start position:0%
general but if not don't worry about it
because<00:02:19.040><c> that's</c><00:02:19.280><c> exactly</c><00:02:19.599><c> what</c><00:02:19.760><c> we're</c><00:02:19.920><c> going</c>

00:02:19.990 --> 00:02:20.000 align:start position:0%
because that's exactly what we're going
 

00:02:20.000 --> 00:02:22.070 align:start position:0%
because that's exactly what we're going
to<00:02:20.080><c> talk</c><00:02:20.319><c> about</c><00:02:20.640><c> right</c><00:02:20.879><c> now</c><00:02:21.360><c> so</c><00:02:21.520><c> let's</c><00:02:21.760><c> take</c><00:02:22.000><c> a</c>

00:02:22.070 --> 00:02:22.080 align:start position:0%
to talk about right now so let's take a
 

00:02:22.080 --> 00:02:24.070 align:start position:0%
to talk about right now so let's take a
look<00:02:22.319><c> at</c><00:02:22.560><c> another</c><00:02:22.959><c> example</c><00:02:23.599><c> in</c><00:02:23.680><c> this</c><00:02:23.840><c> case</c>

00:02:24.070 --> 00:02:24.080 align:start position:0%
look at another example in this case
 

00:02:24.080 --> 00:02:25.990 align:start position:0%
look at another example in this case
we're<00:02:24.239><c> given</c><00:02:24.560><c> a</c><00:02:24.640><c> string</c><00:02:24.959><c> and</c><00:02:25.040><c> the</c><00:02:25.280><c> result</c><00:02:25.840><c> is</c>

00:02:25.990 --> 00:02:26.000 align:start position:0%
we're given a string and the result is
 

00:02:26.000 --> 00:02:27.350 align:start position:0%
we're given a string and the result is
that<00:02:26.160><c> we</c><00:02:26.319><c> can</c><00:02:26.400><c> split</c><00:02:26.720><c> it</c><00:02:26.879><c> into</c><00:02:27.120><c> three</c>

00:02:27.350 --> 00:02:27.360 align:start position:0%
that we can split it into three
 

00:02:27.360 --> 00:02:29.190 align:start position:0%
that we can split it into three
partitions<00:02:28.000><c> the</c><00:02:28.080><c> first</c><00:02:28.319><c> partition</c><00:02:28.959><c> is</c><00:02:29.120><c> going</c>

00:02:29.190 --> 00:02:29.200 align:start position:0%
partitions the first partition is going
 

00:02:29.200 --> 00:02:30.309 align:start position:0%
partitions the first partition is going
to<00:02:29.360><c> be</c>

00:02:30.309 --> 00:02:30.319 align:start position:0%
to be
 

00:02:30.319 --> 00:02:31.830 align:start position:0%
to be
nine<00:02:30.640><c> characters</c><00:02:31.040><c> the</c><00:02:31.120><c> next</c><00:02:31.360><c> partition</c><00:02:31.760><c> is</c>

00:02:31.830 --> 00:02:31.840 align:start position:0%
nine characters the next partition is
 

00:02:31.840 --> 00:02:33.589 align:start position:0%
nine characters the next partition is
gonna<00:02:32.000><c> be</c><00:02:32.160><c> seven</c><00:02:32.400><c> characters</c><00:02:33.040><c> and</c><00:02:33.120><c> the</c><00:02:33.360><c> last</c>

00:02:33.589 --> 00:02:33.599 align:start position:0%
gonna be seven characters and the last
 

00:02:33.599 --> 00:02:35.589 align:start position:0%
gonna be seven characters and the last
one<00:02:33.760><c> is</c><00:02:33.920><c> gonna</c><00:02:34.080><c> be</c><00:02:34.239><c> eight</c><00:02:34.879><c> but</c><00:02:35.040><c> let's</c><00:02:35.360><c> try</c><00:02:35.519><c> to</c>

00:02:35.589 --> 00:02:35.599 align:start position:0%
one is gonna be eight but let's try to
 

00:02:35.599 --> 00:02:37.190 align:start position:0%
one is gonna be eight but let's try to
figure<00:02:35.920><c> out</c><00:02:36.000><c> how</c><00:02:36.239><c> we</c><00:02:36.319><c> can</c><00:02:36.480><c> arrive</c><00:02:36.879><c> at</c><00:02:37.040><c> that</c>

00:02:37.190 --> 00:02:37.200 align:start position:0%
figure out how we can arrive at that
 

00:02:37.200 --> 00:02:38.790 align:start position:0%
figure out how we can arrive at that
solution<00:02:37.760><c> and</c><00:02:37.840><c> how</c><00:02:38.000><c> we</c><00:02:38.160><c> can</c><00:02:38.239><c> make</c><00:02:38.480><c> it</c><00:02:38.640><c> as</c>

00:02:38.790 --> 00:02:38.800 align:start position:0%
solution and how we can make it as
 

00:02:38.800 --> 00:02:41.110 align:start position:0%
solution and how we can make it as
efficient<00:02:39.360><c> as</c><00:02:39.519><c> possible</c><00:02:40.400><c> so</c><00:02:40.560><c> let's</c><00:02:40.800><c> take</c><00:02:40.959><c> a</c>

00:02:41.110 --> 00:02:41.120 align:start position:0%
efficient as possible so let's take a
 

00:02:41.120 --> 00:02:42.710 align:start position:0%
efficient as possible so let's take a
look<00:02:41.280><c> at</c><00:02:41.360><c> this</c><00:02:41.519><c> string</c><00:02:41.840><c> and</c><00:02:41.920><c> let's</c><00:02:42.239><c> use</c><00:02:42.480><c> the</c>

00:02:42.710 --> 00:02:42.720 align:start position:0%
look at this string and let's use the
 

00:02:42.720 --> 00:02:44.550 align:start position:0%
look at this string and let's use the
similar<00:02:43.120><c> idea</c><00:02:43.519><c> that</c><00:02:43.599><c> we</c><00:02:43.760><c> talked</c><00:02:44.080><c> about</c><00:02:44.319><c> in</c><00:02:44.480><c> the</c>

00:02:44.550 --> 00:02:44.560 align:start position:0%
similar idea that we talked about in the
 

00:02:44.560 --> 00:02:46.470 align:start position:0%
similar idea that we talked about in the
previous<00:02:45.040><c> example</c><00:02:45.440><c> so</c><00:02:45.680><c> we</c><00:02:45.840><c> look</c><00:02:46.000><c> at</c><00:02:46.080><c> the</c><00:02:46.239><c> first</c>

00:02:46.470 --> 00:02:46.480 align:start position:0%
previous example so we look at the first
 

00:02:46.480 --> 00:02:50.070 align:start position:0%
previous example so we look at the first
character<00:02:46.959><c> it's</c><00:02:47.200><c> an</c><00:02:47.519><c> a</c><00:02:48.160><c> now</c><00:02:48.480><c> immediately</c><00:02:49.680><c> we</c>

00:02:50.070 --> 00:02:50.080 align:start position:0%
character it's an a now immediately we
 

00:02:50.080 --> 00:02:53.110 align:start position:0%
character it's an a now immediately we
know<00:02:50.400><c> that</c><00:02:50.640><c> we</c><00:02:50.959><c> can't</c><00:02:51.360><c> partition</c><00:02:52.319><c> this</c><00:02:52.800><c> at</c>

00:02:53.110 --> 00:02:53.120 align:start position:0%
know that we can't partition this at
 

00:02:53.120 --> 00:02:55.270 align:start position:0%
know that we can't partition this at
this<00:02:53.440><c> point</c><00:02:53.760><c> right</c><00:02:54.000><c> this</c><00:02:54.239><c> cannot</c><00:02:54.800><c> be</c><00:02:55.040><c> a</c>

00:02:55.270 --> 00:02:55.280 align:start position:0%
this point right this cannot be a
 

00:02:55.280 --> 00:02:58.470 align:start position:0%
this point right this cannot be a
partition<00:02:56.319><c> if</c><00:02:56.560><c> there</c><00:02:56.879><c> are</c><00:02:57.200><c> additional</c><00:02:58.080><c> a</c>

00:02:58.470 --> 00:02:58.480 align:start position:0%
partition if there are additional a
 

00:02:58.480 --> 00:03:01.589 align:start position:0%
partition if there are additional a
characters<00:02:59.440><c> somewhere</c><00:03:00.080><c> in</c><00:03:00.560><c> the</c><00:03:00.800><c> string</c><00:03:01.440><c> and</c>

00:03:01.589 --> 00:03:01.599 align:start position:0%
characters somewhere in the string and
 

00:03:01.599 --> 00:03:03.589 align:start position:0%
characters somewhere in the string and
not<00:03:01.840><c> only</c><00:03:02.080><c> that</c><00:03:02.239><c> we</c><00:03:02.400><c> could</c><00:03:02.560><c> have</c><00:03:02.879><c> multiple</c><00:03:03.360><c> a</c>

00:03:03.589 --> 00:03:03.599 align:start position:0%
not only that we could have multiple a
 

00:03:03.599 --> 00:03:05.270 align:start position:0%
not only that we could have multiple a
characters<00:03:04.159><c> and</c><00:03:04.239><c> we</c><00:03:04.480><c> do</c><00:03:04.720><c> we</c><00:03:04.879><c> have</c><00:03:04.959><c> an</c><00:03:05.120><c> a</c>

00:03:05.270 --> 00:03:05.280 align:start position:0%
characters and we do we have an a
 

00:03:05.280 --> 00:03:07.910 align:start position:0%
characters and we do we have an a
character<00:03:05.680><c> here</c><00:03:06.239><c> here</c><00:03:06.879><c> here</c>

00:03:07.910 --> 00:03:07.920 align:start position:0%
character here here here
 

00:03:07.920 --> 00:03:09.750 align:start position:0%
character here here here
and<00:03:08.000><c> that's</c><00:03:08.239><c> the</c><00:03:08.319><c> last</c><00:03:08.560><c> one</c><00:03:08.959><c> now</c><00:03:09.200><c> which</c><00:03:09.440><c> one</c><00:03:09.599><c> of</c>

00:03:09.750 --> 00:03:09.760 align:start position:0%
and that's the last one now which one of
 

00:03:09.760 --> 00:03:12.309 align:start position:0%
and that's the last one now which one of
these<00:03:10.000><c> do</c><00:03:10.159><c> we</c><00:03:10.319><c> care</c><00:03:10.560><c> about</c><00:03:10.879><c> the</c><00:03:11.120><c> most</c><00:03:11.760><c> we</c><00:03:12.080><c> care</c>

00:03:12.309 --> 00:03:12.319 align:start position:0%
these do we care about the most we care
 

00:03:12.319 --> 00:03:15.670 align:start position:0%
these do we care about the most we care
about<00:03:12.879><c> the</c><00:03:13.280><c> last</c><00:03:13.840><c> a</c><00:03:14.159><c> character</c><00:03:14.959><c> the</c><00:03:15.200><c> most</c>

00:03:15.670 --> 00:03:15.680 align:start position:0%
about the last a character the most
 

00:03:15.680 --> 00:03:18.470 align:start position:0%
about the last a character the most
because<00:03:16.080><c> once</c><00:03:16.400><c> we</c><00:03:16.720><c> stop</c><00:03:17.120><c> here</c><00:03:17.680><c> we</c><00:03:18.000><c> know</c><00:03:18.239><c> for</c>

00:03:18.470 --> 00:03:18.480 align:start position:0%
because once we stop here we know for
 

00:03:18.480 --> 00:03:22.630 align:start position:0%
because once we stop here we know for
sure<00:03:19.200><c> that</c><00:03:19.920><c> all</c><00:03:20.159><c> of</c><00:03:20.319><c> the</c><00:03:20.560><c> a</c><00:03:20.959><c> characters</c><00:03:21.840><c> are</c><00:03:22.239><c> in</c>

00:03:22.630 --> 00:03:22.640 align:start position:0%
sure that all of the a characters are in
 

00:03:22.640 --> 00:03:25.270 align:start position:0%
sure that all of the a characters are in
this<00:03:23.200><c> portion</c><00:03:23.840><c> of</c><00:03:24.080><c> the</c><00:03:24.319><c> string</c><00:03:24.959><c> and</c><00:03:25.040><c> that's</c>

00:03:25.270 --> 00:03:25.280 align:start position:0%
this portion of the string and that's
 

00:03:25.280 --> 00:03:26.630 align:start position:0%
this portion of the string and that's
what<00:03:25.360><c> we're</c><00:03:25.599><c> trying</c><00:03:25.840><c> to</c><00:03:25.920><c> do</c><00:03:26.080><c> we're</c><00:03:26.239><c> trying</c><00:03:26.480><c> to</c>

00:03:26.630 --> 00:03:26.640 align:start position:0%
what we're trying to do we're trying to
 

00:03:26.640 --> 00:03:29.270 align:start position:0%
what we're trying to do we're trying to
create<00:03:27.040><c> partitions</c><00:03:27.840><c> where</c><00:03:28.159><c> all</c><00:03:28.480><c> a</c><00:03:28.799><c> characters</c>

00:03:29.270 --> 00:03:29.280 align:start position:0%
create partitions where all a characters
 

00:03:29.280 --> 00:03:31.670 align:start position:0%
create partitions where all a characters
are<00:03:29.440><c> going</c><00:03:29.519><c> to</c><00:03:29.599><c> be</c><00:03:29.840><c> here</c><00:03:30.400><c> not</c><00:03:30.720><c> anywhere</c><00:03:31.200><c> else</c>

00:03:31.670 --> 00:03:31.680 align:start position:0%
are going to be here not anywhere else
 

00:03:31.680 --> 00:03:33.910 align:start position:0%
are going to be here not anywhere else
in<00:03:32.239><c> the</c><00:03:32.560><c> string</c><00:03:32.879><c> not</c><00:03:33.120><c> in</c><00:03:33.280><c> any</c><00:03:33.599><c> other</c>

00:03:33.910 --> 00:03:33.920 align:start position:0%
in the string not in any other
 

00:03:33.920 --> 00:03:36.309 align:start position:0%
in the string not in any other
partitions<00:03:34.720><c> so</c><00:03:34.959><c> wouldn't</c><00:03:35.280><c> it</c><00:03:35.440><c> be</c><00:03:35.599><c> convenient</c>

00:03:36.309 --> 00:03:36.319 align:start position:0%
partitions so wouldn't it be convenient
 

00:03:36.319 --> 00:03:38.949 align:start position:0%
partitions so wouldn't it be convenient
for<00:03:36.560><c> us</c><00:03:36.959><c> every</c><00:03:37.360><c> time</c><00:03:37.680><c> we</c><00:03:37.920><c> see</c><00:03:38.239><c> a</c><00:03:38.400><c> character</c><00:03:38.799><c> if</c>

00:03:38.949 --> 00:03:38.959 align:start position:0%
for us every time we see a character if
 

00:03:38.959 --> 00:03:41.589 align:start position:0%
for us every time we see a character if
we<00:03:39.120><c> could</c><00:03:39.440><c> automatically</c><00:03:40.400><c> know</c><00:03:40.959><c> where</c><00:03:41.280><c> the</c>

00:03:41.589 --> 00:03:41.599 align:start position:0%
we could automatically know where the
 

00:03:41.599 --> 00:03:44.070 align:start position:0%
we could automatically know where the
last<00:03:42.159><c> index</c><00:03:42.640><c> of</c><00:03:42.799><c> that</c><00:03:43.040><c> character</c><00:03:43.519><c> happens</c><00:03:43.920><c> to</c>

00:03:44.070 --> 00:03:44.080 align:start position:0%
last index of that character happens to
 

00:03:44.080 --> 00:03:47.030 align:start position:0%
last index of that character happens to
be<00:03:44.480><c> and</c><00:03:44.720><c> maybe</c><00:03:45.200><c> just</c><00:03:45.519><c> maybe</c><00:03:46.239><c> this</c><00:03:46.560><c> character</c>

00:03:47.030 --> 00:03:47.040 align:start position:0%
be and maybe just maybe this character
 

00:03:47.040 --> 00:03:50.949 align:start position:0%
be and maybe just maybe this character
itself<00:03:47.920><c> could</c><00:03:48.239><c> be</c><00:03:48.480><c> the</c><00:03:48.720><c> last</c><00:03:49.120><c> occurrence</c><00:03:50.080><c> of</c><00:03:50.640><c> a</c>

00:03:50.949 --> 00:03:50.959 align:start position:0%
itself could be the last occurrence of a
 

00:03:50.959 --> 00:03:52.789 align:start position:0%
itself could be the last occurrence of a
this<00:03:51.280><c> index</c><00:03:51.599><c> could</c><00:03:51.840><c> be</c><00:03:52.000><c> the</c><00:03:52.159><c> last</c><00:03:52.400><c> position</c>

00:03:52.789 --> 00:03:52.799 align:start position:0%
this index could be the last position
 

00:03:52.799 --> 00:03:55.509 align:start position:0%
this index could be the last position
where<00:03:53.040><c> a</c><00:03:53.280><c> exists</c><00:03:54.000><c> well</c><00:03:54.400><c> conveniently</c><00:03:55.040><c> for</c><00:03:55.280><c> us</c>

00:03:55.509 --> 00:03:55.519 align:start position:0%
where a exists well conveniently for us
 

00:03:55.519 --> 00:03:58.710 align:start position:0%
where a exists well conveniently for us
we<00:03:55.680><c> can</c><00:03:56.000><c> do</c><00:03:56.319><c> exactly</c><00:03:56.879><c> that</c><00:03:57.360><c> and</c><00:03:57.760><c> we</c><00:03:57.920><c> can</c><00:03:58.319><c> create</c>

00:03:58.710 --> 00:03:58.720 align:start position:0%
we can do exactly that and we can create
 

00:03:58.720 --> 00:04:01.589 align:start position:0%
we can do exactly that and we can create
a<00:03:58.879><c> hashmap</c><00:04:00.000><c> so</c><00:04:00.239><c> we</c><00:04:00.400><c> can</c><00:04:00.640><c> create</c><00:04:00.879><c> a</c><00:04:00.959><c> hashmap</c>

00:04:01.589 --> 00:04:01.599 align:start position:0%
a hashmap so we can create a hashmap
 

00:04:01.599 --> 00:04:03.830 align:start position:0%
a hashmap so we can create a hashmap
just<00:04:01.760><c> like</c><00:04:02.000><c> this</c><00:04:02.239><c> one</c><00:04:02.640><c> where</c><00:04:02.799><c> we</c><00:04:03.120><c> take</c><00:04:03.519><c> every</c>

00:04:03.830 --> 00:04:03.840 align:start position:0%
just like this one where we take every
 

00:04:03.840 --> 00:04:06.789 align:start position:0%
just like this one where we take every
single<00:04:04.239><c> unique</c><00:04:04.879><c> character</c><00:04:05.760><c> in</c><00:04:06.159><c> the</c><00:04:06.400><c> input</c>

00:04:06.789 --> 00:04:06.799 align:start position:0%
single unique character in the input
 

00:04:06.799 --> 00:04:09.670 align:start position:0%
single unique character in the input
string<00:04:07.280><c> and</c><00:04:07.439><c> we</c><00:04:07.680><c> map</c><00:04:08.000><c> it</c><00:04:08.159><c> to</c><00:04:08.319><c> the</c><00:04:08.640><c> last</c><00:04:09.200><c> index</c>

00:04:09.670 --> 00:04:09.680 align:start position:0%
string and we map it to the last index
 

00:04:09.680 --> 00:04:12.550 align:start position:0%
string and we map it to the last index
that<00:04:09.920><c> it</c><00:04:10.239><c> occurs</c><00:04:10.799><c> at</c><00:04:11.360><c> so</c><00:04:11.599><c> for</c><00:04:11.760><c> example</c><00:04:12.239><c> you</c><00:04:12.400><c> can</c>

00:04:12.550 --> 00:04:12.560 align:start position:0%
that it occurs at so for example you can
 

00:04:12.560 --> 00:04:14.630 align:start position:0%
that it occurs at so for example you can
see<00:04:12.959><c> the</c><00:04:13.200><c> indexes</c><00:04:13.680><c> are</c><00:04:13.840><c> a</c><00:04:13.840><c> little</c><00:04:14.000><c> bit</c><00:04:14.159><c> messy</c>

00:04:14.630 --> 00:04:14.640 align:start position:0%
see the indexes are a little bit messy
 

00:04:14.640 --> 00:04:17.749 align:start position:0%
see the indexes are a little bit messy
but<00:04:15.200><c> we</c><00:04:15.360><c> can</c><00:04:15.439><c> see</c><00:04:15.599><c> that</c><00:04:15.920><c> a</c><00:04:16.400><c> ends</c><00:04:16.880><c> at</c><00:04:17.359><c> the</c><00:04:17.519><c> last</c>

00:04:17.749 --> 00:04:17.759 align:start position:0%
but we can see that a ends at the last
 

00:04:17.759 --> 00:04:19.590 align:start position:0%
but we can see that a ends at the last
occurrence<00:04:18.079><c> of</c><00:04:18.239><c> a</c><00:04:18.320><c> is</c><00:04:18.479><c> at</c><00:04:18.639><c> index</c><00:04:19.120><c> eight</c><00:04:19.359><c> so</c><00:04:19.519><c> we</c>

00:04:19.590 --> 00:04:19.600 align:start position:0%
occurrence of a is at index eight so we
 

00:04:19.600 --> 00:04:21.909 align:start position:0%
occurrence of a is at index eight so we
can<00:04:19.840><c> map</c><00:04:20.239><c> a</c><00:04:20.639><c> to</c>

00:04:21.909 --> 00:04:21.919 align:start position:0%
can map a to
 

00:04:21.919 --> 00:04:24.390 align:start position:0%
can map a to
the<00:04:22.079><c> character</c><00:04:22.479><c> a</c><00:04:22.720><c> to</c><00:04:23.040><c> index</c><00:04:23.440><c> eight</c><00:04:23.919><c> the</c><00:04:24.080><c> last</c>

00:04:24.390 --> 00:04:24.400 align:start position:0%
the character a to index eight the last
 

00:04:24.400 --> 00:04:27.270 align:start position:0%
the character a to index eight the last
occurrence<00:04:24.800><c> of</c><00:04:25.040><c> b</c><00:04:25.680><c> is</c><00:04:25.840><c> going</c><00:04:25.919><c> to</c><00:04:26.080><c> be</c><00:04:26.400><c> at</c><00:04:26.720><c> index</c>

00:04:27.270 --> 00:04:27.280 align:start position:0%
occurrence of b is going to be at index
 

00:04:27.280 --> 00:04:28.870 align:start position:0%
occurrence of b is going to be at index
five<00:04:27.520><c> now</c><00:04:27.680><c> i</c><00:04:27.840><c> could</c><00:04:28.000><c> do</c><00:04:28.160><c> this</c><00:04:28.240><c> for</c><00:04:28.400><c> the</c><00:04:28.560><c> entire</c>

00:04:28.870 --> 00:04:28.880 align:start position:0%
five now i could do this for the entire
 

00:04:28.880 --> 00:04:30.310 align:start position:0%
five now i could do this for the entire
string<00:04:29.120><c> but</c><00:04:29.280><c> we</c><00:04:29.360><c> have</c><00:04:29.520><c> a</c><00:04:29.680><c> ton</c><00:04:29.840><c> of</c><00:04:30.000><c> characters</c>

00:04:30.310 --> 00:04:30.320 align:start position:0%
string but we have a ton of characters
 

00:04:30.320 --> 00:04:31.749 align:start position:0%
string but we have a ton of characters
so<00:04:30.479><c> i</c><00:04:30.560><c> don't</c><00:04:30.639><c> want</c><00:04:30.720><c> to</c><00:04:30.800><c> waste</c><00:04:31.120><c> my</c><00:04:31.360><c> time</c><00:04:31.600><c> too</c>

00:04:31.749 --> 00:04:31.759 align:start position:0%
so i don't want to waste my time too
 

00:04:31.759 --> 00:04:34.310 align:start position:0%
so i don't want to waste my time too
much<00:04:32.000><c> but</c><00:04:32.160><c> just</c><00:04:32.479><c> assume</c><00:04:32.960><c> that</c><00:04:33.199><c> before</c><00:04:33.600><c> we</c><00:04:33.840><c> even</c>

00:04:34.310 --> 00:04:34.320 align:start position:0%
much but just assume that before we even
 

00:04:34.320 --> 00:04:36.550 align:start position:0%
much but just assume that before we even
start<00:04:34.720><c> iterating</c><00:04:35.280><c> through</c><00:04:35.520><c> the</c><00:04:35.680><c> array</c><00:04:36.320><c> we</c>

00:04:36.550 --> 00:04:36.560 align:start position:0%
start iterating through the array we
 

00:04:36.560 --> 00:04:38.550 align:start position:0%
start iterating through the array we
build<00:04:36.880><c> a</c><00:04:36.960><c> hashmap</c><00:04:37.520><c> just</c><00:04:37.759><c> like</c><00:04:37.919><c> this</c><00:04:38.160><c> one</c><00:04:38.479><c> and</c>

00:04:38.550 --> 00:04:38.560 align:start position:0%
build a hashmap just like this one and
 

00:04:38.560 --> 00:04:39.909 align:start position:0%
build a hashmap just like this one and
the<00:04:38.720><c> time</c><00:04:38.880><c> complexity</c><00:04:39.440><c> of</c><00:04:39.520><c> building</c><00:04:39.759><c> this</c>

00:04:39.909 --> 00:04:39.919 align:start position:0%
the time complexity of building this
 

00:04:39.919 --> 00:04:41.830 align:start position:0%
the time complexity of building this
hashtrap<00:04:40.479><c> isn't</c><00:04:40.720><c> going</c><00:04:40.800><c> to</c><00:04:40.880><c> be</c><00:04:41.120><c> bad</c><00:04:41.520><c> because</c>

00:04:41.830 --> 00:04:41.840 align:start position:0%
hashtrap isn't going to be bad because
 

00:04:41.840 --> 00:04:43.110 align:start position:0%
hashtrap isn't going to be bad because
all<00:04:41.919><c> we</c><00:04:42.080><c> have</c><00:04:42.160><c> to</c><00:04:42.240><c> do</c><00:04:42.400><c> is</c><00:04:42.479><c> just</c><00:04:42.720><c> iterate</c>

00:04:43.110 --> 00:04:43.120 align:start position:0%
all we have to do is just iterate
 

00:04:43.120 --> 00:04:45.430 align:start position:0%
all we have to do is just iterate
through<00:04:43.280><c> the</c><00:04:43.520><c> entire</c><00:04:44.240><c> uh</c><00:04:44.479><c> string</c><00:04:44.880><c> so</c><00:04:45.040><c> the</c><00:04:45.199><c> time</c>

00:04:45.430 --> 00:04:45.440 align:start position:0%
through the entire uh string so the time
 

00:04:45.440 --> 00:04:47.030 align:start position:0%
through the entire uh string so the time
complexity<00:04:46.000><c> and</c><00:04:46.080><c> space</c><00:04:46.400><c> com</c><00:04:46.800><c> the</c><00:04:46.880><c> time</c>

00:04:47.030 --> 00:04:47.040 align:start position:0%
complexity and space com the time
 

00:04:47.040 --> 00:04:48.950 align:start position:0%
complexity and space com the time
complexity<00:04:47.520><c> will</c><00:04:47.680><c> be</c><00:04:47.759><c> o</c><00:04:47.919><c> of</c><00:04:48.080><c> n</c><00:04:48.560><c> technically</c>

00:04:48.950 --> 00:04:48.960 align:start position:0%
complexity will be o of n technically
 

00:04:48.960 --> 00:04:50.790 align:start position:0%
complexity will be o of n technically
we're<00:04:49.120><c> guaranteed</c><00:04:49.680><c> that</c><00:04:49.840><c> every</c><00:04:50.080><c> character</c><00:04:50.639><c> in</c>

00:04:50.790 --> 00:04:50.800 align:start position:0%
we're guaranteed that every character in
 

00:04:50.800 --> 00:04:52.870 align:start position:0%
we're guaranteed that every character in
here<00:04:51.040><c> is</c><00:04:51.199><c> just</c><00:04:51.360><c> going</c><00:04:51.440><c> to</c><00:04:51.520><c> be</c><00:04:51.680><c> a</c><00:04:51.759><c> lowercase</c>

00:04:52.870 --> 00:04:52.880 align:start position:0%
here is just going to be a lowercase
 

00:04:52.880 --> 00:04:55.590 align:start position:0%
here is just going to be a lowercase
abc<00:04:53.360><c> character</c><00:04:54.080><c> so</c><00:04:54.400><c> the</c><00:04:54.880><c> memory</c><00:04:55.199><c> complexity</c>

00:04:55.590 --> 00:04:55.600 align:start position:0%
abc character so the memory complexity
 

00:04:55.600 --> 00:04:57.110 align:start position:0%
abc character so the memory complexity
of<00:04:55.680><c> this</c><00:04:55.840><c> hash</c><00:04:56.080><c> map</c><00:04:56.320><c> is</c><00:04:56.400><c> really</c><00:04:56.639><c> going</c><00:04:56.720><c> to</c><00:04:56.800><c> be</c>

00:04:57.110 --> 00:04:57.120 align:start position:0%
of this hash map is really going to be
 

00:04:57.120 --> 00:05:00.070 align:start position:0%
of this hash map is really going to be
uh<00:04:57.840><c> you</c><00:04:58.000><c> know</c><00:04:58.160><c> big</c><00:04:58.320><c> o</c><00:04:58.479><c> of</c><00:04:58.560><c> 26</c><00:04:59.120><c> so</c><00:04:59.600><c> constant</c>

00:05:00.070 --> 00:05:00.080 align:start position:0%
uh you know big o of 26 so constant
 

00:05:00.080 --> 00:05:02.390 align:start position:0%
uh you know big o of 26 so constant
memory<00:05:00.400><c> complexity</c><00:05:01.039><c> not</c><00:05:01.199><c> too</c><00:05:01.360><c> bad</c><00:05:01.919><c> okay</c><00:05:02.160><c> now</c>

00:05:02.390 --> 00:05:02.400 align:start position:0%
memory complexity not too bad okay now
 

00:05:02.400 --> 00:05:04.150 align:start position:0%
memory complexity not too bad okay now
before<00:05:02.720><c> we</c><00:05:02.960><c> start</c><00:05:03.280><c> iterating</c><00:05:03.840><c> through</c><00:05:04.000><c> the</c>

00:05:04.150 --> 00:05:04.160 align:start position:0%
before we start iterating through the
 

00:05:04.160 --> 00:05:05.510 align:start position:0%
before we start iterating through the
array<00:05:04.560><c> let's</c><00:05:04.800><c> think</c><00:05:04.960><c> about</c><00:05:05.199><c> how</c><00:05:05.360><c> we're</c><00:05:05.440><c> going</c>

00:05:05.510 --> 00:05:05.520 align:start position:0%
array let's think about how we're going
 

00:05:05.520 --> 00:05:07.749 align:start position:0%
array let's think about how we're going
to<00:05:05.600><c> approach</c><00:05:06.000><c> this</c><00:05:06.240><c> algorithm</c><00:05:06.880><c> remember</c><00:05:07.600><c> we</c>

00:05:07.749 --> 00:05:07.759 align:start position:0%
to approach this algorithm remember we
 

00:05:07.759 --> 00:05:09.430 align:start position:0%
to approach this algorithm remember we
are<00:05:07.919><c> going</c><00:05:08.000><c> to</c><00:05:08.160><c> have</c><00:05:08.479><c> an</c><00:05:08.800><c> output</c><00:05:09.120><c> which</c><00:05:09.360><c> is</c>

00:05:09.430 --> 00:05:09.440 align:start position:0%
are going to have an output which is
 

00:05:09.440 --> 00:05:10.950 align:start position:0%
are going to have an output which is
going<00:05:09.520><c> to</c><00:05:09.600><c> tell</c><00:05:09.759><c> us</c><00:05:10.000><c> the</c><00:05:10.240><c> size</c><00:05:10.639><c> of</c><00:05:10.720><c> each</c>

00:05:10.950 --> 00:05:10.960 align:start position:0%
going to tell us the size of each
 

00:05:10.960 --> 00:05:13.029 align:start position:0%
going to tell us the size of each
partition<00:05:11.520><c> as</c><00:05:11.600><c> you</c><00:05:11.680><c> can</c><00:05:11.840><c> see</c><00:05:12.000><c> up</c><00:05:12.160><c> above</c><00:05:12.720><c> so</c><00:05:12.960><c> it</c>

00:05:13.029 --> 00:05:13.039 align:start position:0%
partition as you can see up above so it
 

00:05:13.039 --> 00:05:14.629 align:start position:0%
partition as you can see up above so it
would<00:05:13.199><c> be</c><00:05:13.360><c> helpful</c><00:05:13.840><c> for</c><00:05:14.080><c> us</c><00:05:14.320><c> as</c><00:05:14.479><c> we're</c>

00:05:14.629 --> 00:05:14.639 align:start position:0%
would be helpful for us as we're
 

00:05:14.639 --> 00:05:16.790 align:start position:0%
would be helpful for us as we're
iterating<00:05:15.120><c> through</c><00:05:15.280><c> this</c><00:05:15.520><c> if</c><00:05:15.759><c> we</c><00:05:15.919><c> maintain</c>

00:05:16.790 --> 00:05:16.800 align:start position:0%
iterating through this if we maintain
 

00:05:16.800 --> 00:05:18.629 align:start position:0%
iterating through this if we maintain
the<00:05:16.960><c> size</c><00:05:17.360><c> of</c><00:05:17.440><c> the</c><00:05:17.600><c> current</c><00:05:17.919><c> partition</c>

00:05:18.629 --> 00:05:18.639 align:start position:0%
the size of the current partition
 

00:05:18.639 --> 00:05:21.270 align:start position:0%
the size of the current partition
ourselves<00:05:19.520><c> initially</c><00:05:20.080><c> we</c><00:05:20.240><c> can</c><00:05:20.639><c> set</c><00:05:20.880><c> that</c><00:05:21.120><c> to</c>

00:05:21.270 --> 00:05:21.280 align:start position:0%
ourselves initially we can set that to
 

00:05:21.280 --> 00:05:24.150 align:start position:0%
ourselves initially we can set that to
zero<00:05:22.000><c> and</c><00:05:22.639><c> as</c><00:05:22.880><c> we</c><00:05:23.120><c> iterate</c><00:05:23.520><c> through</c><00:05:23.680><c> this</c><00:05:24.000><c> for</c>

00:05:24.150 --> 00:05:24.160 align:start position:0%
zero and as we iterate through this for
 

00:05:24.160 --> 00:05:25.749 align:start position:0%
zero and as we iterate through this for
example<00:05:24.479><c> we</c><00:05:24.560><c> get</c><00:05:24.720><c> to</c><00:05:24.800><c> the</c><00:05:24.880><c> first</c><00:05:25.120><c> character</c><00:05:25.600><c> we</c>

00:05:25.749 --> 00:05:25.759 align:start position:0%
example we get to the first character we
 

00:05:25.759 --> 00:05:27.749 align:start position:0%
example we get to the first character we
see<00:05:26.000><c> it's</c><00:05:26.160><c> at</c><00:05:26.320><c> index</c><00:05:26.639><c> zero</c><00:05:27.120><c> but</c><00:05:27.280><c> the</c><00:05:27.440><c> last</c>

00:05:27.749 --> 00:05:27.759 align:start position:0%
see it's at index zero but the last
 

00:05:27.759 --> 00:05:31.430 align:start position:0%
see it's at index zero but the last
occurrence<00:05:28.560><c> of</c><00:05:29.120><c> a</c><00:05:29.759><c> is</c><00:05:30.000><c> at</c><00:05:30.240><c> index</c><00:05:30.720><c> eight</c><00:05:31.120><c> so</c><00:05:31.280><c> we</c>

00:05:31.430 --> 00:05:31.440 align:start position:0%
occurrence of a is at index eight so we
 

00:05:31.440 --> 00:05:33.590 align:start position:0%
occurrence of a is at index eight so we
can<00:05:31.600><c> keep</c><00:05:31.840><c> track</c><00:05:32.160><c> of</c><00:05:32.320><c> another</c><00:05:32.960><c> variable</c><00:05:33.360><c> let's</c>

00:05:33.590 --> 00:05:33.600 align:start position:0%
can keep track of another variable let's
 

00:05:33.600 --> 00:05:35.270 align:start position:0%
can keep track of another variable let's
call<00:05:33.840><c> it</c><00:05:34.160><c> end</c><00:05:34.479><c> you</c><00:05:34.639><c> could</c><00:05:34.720><c> call</c><00:05:34.960><c> it</c><00:05:35.039><c> whatever</c>

00:05:35.270 --> 00:05:35.280 align:start position:0%
call it end you could call it whatever
 

00:05:35.280 --> 00:05:37.510 align:start position:0%
call it end you could call it whatever
you<00:05:35.440><c> want</c><00:05:35.680><c> but</c><00:05:35.919><c> end</c><00:05:36.240><c> which</c><00:05:36.479><c> is</c><00:05:36.560><c> gonna</c><00:05:36.800><c> tell</c><00:05:37.039><c> us</c>

00:05:37.510 --> 00:05:37.520 align:start position:0%
you want but end which is gonna tell us
 

00:05:37.520 --> 00:05:39.909 align:start position:0%
you want but end which is gonna tell us
what's<00:05:37.840><c> the</c><00:05:38.160><c> end</c><00:05:38.479><c> of</c><00:05:38.639><c> our</c><00:05:38.800><c> partition</c><00:05:39.440><c> as</c><00:05:39.680><c> far</c>

00:05:39.909 --> 00:05:39.919 align:start position:0%
what's the end of our partition as far
 

00:05:39.919 --> 00:05:43.670 align:start position:0%
what's the end of our partition as far
as<00:05:40.080><c> we</c><00:05:40.400><c> know</c><00:05:41.120><c> so</c><00:05:41.840><c> far</c><00:05:42.560><c> right</c><00:05:42.960><c> because</c><00:05:43.280><c> we</c><00:05:43.520><c> see</c>

00:05:43.670 --> 00:05:43.680 align:start position:0%
as we know so far right because we see
 

00:05:43.680 --> 00:05:46.070 align:start position:0%
as we know so far right because we see
the<00:05:43.840><c> character</c><00:05:44.320><c> a</c><00:05:44.880><c> and</c><00:05:45.039><c> we</c><00:05:45.199><c> know</c><00:05:45.360><c> it</c><00:05:45.600><c> exists</c>

00:05:46.070 --> 00:05:46.080 align:start position:0%
the character a and we know it exists
 

00:05:46.080 --> 00:05:47.830 align:start position:0%
the character a and we know it exists
the<00:05:46.240><c> last</c><00:05:46.639><c> occurrence</c><00:05:47.039><c> of</c><00:05:47.120><c> it</c><00:05:47.280><c> is</c><00:05:47.440><c> over</c><00:05:47.600><c> here</c>

00:05:47.830 --> 00:05:47.840 align:start position:0%
the last occurrence of it is over here
 

00:05:47.840 --> 00:05:50.629 align:start position:0%
the last occurrence of it is over here
so<00:05:48.080><c> we</c><00:05:48.560><c> assume</c><00:05:49.440><c> so</c><00:05:49.680><c> far</c><00:05:49.840><c> we're</c><00:05:50.080><c> assuming</c><00:05:50.479><c> that</c>

00:05:50.629 --> 00:05:50.639 align:start position:0%
so we assume so far we're assuming that
 

00:05:50.639 --> 00:05:52.230 align:start position:0%
so we assume so far we're assuming that
this<00:05:50.880><c> is</c><00:05:51.039><c> going</c><00:05:51.120><c> to</c><00:05:51.199><c> be</c><00:05:51.360><c> a</c><00:05:51.440><c> partition</c><00:05:51.919><c> but</c><00:05:52.080><c> we</c>

00:05:52.230 --> 00:05:52.240 align:start position:0%
this is going to be a partition but we
 

00:05:52.240 --> 00:05:54.950 align:start position:0%
this is going to be a partition but we
don't<00:05:52.479><c> know</c><00:05:52.720><c> for</c><00:05:53.039><c> sure</c><00:05:53.600><c> just</c><00:05:54.000><c> yet</c><00:05:54.320><c> because</c><00:05:54.800><c> we</c>

00:05:54.950 --> 00:05:54.960 align:start position:0%
don't know for sure just yet because we
 

00:05:54.960 --> 00:05:57.110 align:start position:0%
don't know for sure just yet because we
have<00:05:55.199><c> some</c><00:05:55.440><c> b</c><00:05:55.759><c> characters</c><00:05:56.240><c> here</c><00:05:56.800><c> it's</c>

00:05:57.110 --> 00:05:57.120 align:start position:0%
have some b characters here it's
 

00:05:57.120 --> 00:05:59.510 align:start position:0%
have some b characters here it's
possible<00:05:57.600><c> that</c><00:05:57.759><c> one</c><00:05:58.000><c> of</c><00:05:58.080><c> the</c><00:05:58.240><c> b's</c><00:05:58.560><c> exists</c><00:05:59.120><c> even</c>

00:05:59.510 --> 00:05:59.520 align:start position:0%
possible that one of the b's exists even
 

00:05:59.520 --> 00:06:01.670 align:start position:0%
possible that one of the b's exists even
farther<00:06:00.000><c> than</c><00:06:00.240><c> that</c><00:06:00.560><c> and</c><00:06:00.720><c> if</c><00:06:00.880><c> that's</c><00:06:01.120><c> the</c><00:06:01.280><c> case</c>

00:06:01.670 --> 00:06:01.680 align:start position:0%
farther than that and if that's the case
 

00:06:01.680 --> 00:06:03.749 align:start position:0%
farther than that and if that's the case
then<00:06:01.919><c> of</c><00:06:02.000><c> course</c><00:06:02.319><c> we</c><00:06:02.479><c> have</c><00:06:02.560><c> to</c><00:06:02.800><c> update</c><00:06:03.360><c> our</c>

00:06:03.749 --> 00:06:03.759 align:start position:0%
then of course we have to update our
 

00:06:03.759 --> 00:06:06.230 align:start position:0%
then of course we have to update our
ending<00:06:04.560><c> but</c><00:06:04.800><c> in</c><00:06:04.960><c> this</c><00:06:05.199><c> case</c><00:06:05.680><c> that's</c><00:06:05.919><c> not</c><00:06:06.080><c> the</c>

00:06:06.230 --> 00:06:06.240 align:start position:0%
ending but in this case that's not the
 

00:06:06.240 --> 00:06:08.629 align:start position:0%
ending but in this case that's not the
case<00:06:06.560><c> because</c><00:06:06.800><c> the</c><00:06:07.039><c> b's</c><00:06:07.520><c> are</c><00:06:07.759><c> actually</c><00:06:08.400><c> uh</c>

00:06:08.629 --> 00:06:08.639 align:start position:0%
case because the b's are actually uh
 

00:06:08.639 --> 00:06:11.430 align:start position:0%
case because the b's are actually uh
within<00:06:09.360><c> the</c><00:06:09.520><c> first</c><00:06:09.840><c> partition</c><00:06:10.800><c> so</c><00:06:10.960><c> let's</c><00:06:11.199><c> see</c>

00:06:11.430 --> 00:06:11.440 align:start position:0%
within the first partition so let's see
 

00:06:11.440 --> 00:06:14.070 align:start position:0%
within the first partition so let's see
this<00:06:11.680><c> algorithm</c><00:06:12.240><c> in</c><00:06:12.560><c> action</c><00:06:13.280><c> okay</c><00:06:13.520><c> so</c><00:06:13.680><c> so</c><00:06:13.919><c> far</c>

00:06:14.070 --> 00:06:14.080 align:start position:0%
this algorithm in action okay so so far
 

00:06:14.080 --> 00:06:15.670 align:start position:0%
this algorithm in action okay so so far
our<00:06:14.240><c> size</c><00:06:14.560><c> is</c><00:06:14.639><c> zero</c><00:06:14.960><c> we</c><00:06:15.120><c> get</c><00:06:15.280><c> to</c><00:06:15.360><c> the</c><00:06:15.440><c> first</c>

00:06:15.670 --> 00:06:15.680 align:start position:0%
our size is zero we get to the first
 

00:06:15.680 --> 00:06:18.070 align:start position:0%
our size is zero we get to the first
character<00:06:16.479><c> our</c><00:06:16.720><c> end</c><00:06:16.960><c> is</c><00:06:17.120><c> zero</c><00:06:17.440><c> so</c><00:06:17.600><c> far</c><00:06:17.759><c> but</c><00:06:17.919><c> we</c>

00:06:18.070 --> 00:06:18.080 align:start position:0%
character our end is zero so far but we
 

00:06:18.080 --> 00:06:20.629 align:start position:0%
character our end is zero so far but we
know<00:06:18.240><c> that</c><00:06:18.479><c> a</c><00:06:18.880><c> the</c><00:06:19.199><c> last</c><00:06:19.440><c> occurrence</c><00:06:19.919><c> of</c><00:06:20.080><c> it</c><00:06:20.319><c> is</c>

00:06:20.629 --> 00:06:20.639 align:start position:0%
know that a the last occurrence of it is
 

00:06:20.639 --> 00:06:24.230 align:start position:0%
know that a the last occurrence of it is
at<00:06:20.880><c> this</c><00:06:21.120><c> index</c><00:06:21.440><c> so</c><00:06:21.680><c> we</c><00:06:21.919><c> update</c><00:06:22.400><c> our</c><00:06:22.880><c> end</c><00:06:23.440><c> to</c><00:06:23.600><c> be</c>

00:06:24.230 --> 00:06:24.240 align:start position:0%
at this index so we update our end to be
 

00:06:24.240 --> 00:06:26.629 align:start position:0%
at this index so we update our end to be
index<00:06:24.800><c> a</c><00:06:25.199><c> we</c><00:06:25.360><c> get</c><00:06:25.520><c> to</c><00:06:25.680><c> the</c><00:06:25.759><c> second</c><00:06:26.000><c> character</c><00:06:26.400><c> b</c>

00:06:26.629 --> 00:06:26.639 align:start position:0%
index a we get to the second character b
 

00:06:26.639 --> 00:06:29.029 align:start position:0%
index a we get to the second character b
the<00:06:26.800><c> last</c><00:06:27.039><c> occurrence</c><00:06:27.440><c> of</c><00:06:27.600><c> it</c><00:06:27.759><c> is</c><00:06:28.000><c> five</c><00:06:28.720><c> five</c>

00:06:29.029 --> 00:06:29.039 align:start position:0%
the last occurrence of it is five five
 

00:06:29.039 --> 00:06:31.430 align:start position:0%
the last occurrence of it is five five
is<00:06:29.360><c> less</c><00:06:29.680><c> than</c><00:06:30.080><c> eight</c><00:06:30.319><c> so</c><00:06:30.479><c> we</c><00:06:30.720><c> don't</c><00:06:31.039><c> have</c><00:06:31.199><c> to</c>

00:06:31.430 --> 00:06:31.440 align:start position:0%
is less than eight so we don't have to
 

00:06:31.440 --> 00:06:33.189 align:start position:0%
is less than eight so we don't have to
update<00:06:31.919><c> our</c><00:06:32.240><c> ending</c>

00:06:33.189 --> 00:06:33.199 align:start position:0%
update our ending
 

00:06:33.199 --> 00:06:35.270 align:start position:0%
update our ending
just<00:06:33.520><c> yet</c><00:06:33.919><c> and</c><00:06:34.080><c> by</c><00:06:34.240><c> the</c><00:06:34.319><c> way</c><00:06:34.720><c> actually</c><00:06:35.039><c> we'll</c>

00:06:35.270 --> 00:06:35.280 align:start position:0%
just yet and by the way actually we'll
 

00:06:35.280 --> 00:06:37.270 align:start position:0%
just yet and by the way actually we'll
be<00:06:35.440><c> we'll</c><00:06:35.600><c> have</c><00:06:35.840><c> incremented</c><00:06:36.400><c> our</c><00:06:36.560><c> size</c><00:06:37.120><c> we'll</c>

00:06:37.270 --> 00:06:37.280 align:start position:0%
be we'll have incremented our size we'll
 

00:06:37.280 --> 00:06:39.590 align:start position:0%
be we'll have incremented our size we'll
have<00:06:37.440><c> incremented</c><00:06:38.160><c> to</c><00:06:38.400><c> one</c><00:06:38.720><c> after</c><00:06:39.039><c> we</c><00:06:39.199><c> iterate</c>

00:06:39.590 --> 00:06:39.600 align:start position:0%
have incremented to one after we iterate
 

00:06:39.600 --> 00:06:42.150 align:start position:0%
have incremented to one after we iterate
the<00:06:39.759><c> b</c><00:06:40.080><c> or</c><00:06:40.240><c> the</c><00:06:40.400><c> a</c><00:06:40.639><c> character</c><00:06:41.440><c> and</c><00:06:41.600><c> we'll</c><00:06:41.840><c> have</c>

00:06:42.150 --> 00:06:42.160 align:start position:0%
the b or the a character and we'll have
 

00:06:42.160 --> 00:06:45.029 align:start position:0%
the b or the a character and we'll have
now<00:06:42.720><c> uh</c><00:06:43.039><c> updated</c><00:06:43.520><c> it</c><00:06:43.680><c> to</c><00:06:43.919><c> two</c><00:06:44.400><c> after</c><00:06:44.720><c> we</c><00:06:44.880><c> have</c>

00:06:45.029 --> 00:06:45.039 align:start position:0%
now uh updated it to two after we have
 

00:06:45.039 --> 00:06:47.430 align:start position:0%
now uh updated it to two after we have
visited<00:06:45.440><c> the</c><00:06:45.600><c> b</c><00:06:45.840><c> character</c><00:06:46.479><c> again</c><00:06:46.880><c> we</c><00:06:47.039><c> get</c><00:06:47.280><c> to</c>

00:06:47.430 --> 00:06:47.440 align:start position:0%
visited the b character again we get to
 

00:06:47.440 --> 00:06:49.189 align:start position:0%
visited the b character again we get to
an<00:06:47.600><c> a</c><00:06:47.840><c> character</c><00:06:48.319><c> so</c><00:06:48.479><c> we</c><00:06:48.639><c> know</c><00:06:48.800><c> that</c><00:06:48.960><c> we</c><00:06:49.039><c> don't</c>

00:06:49.189 --> 00:06:49.199 align:start position:0%
an a character so we know that we don't
 

00:06:49.199 --> 00:06:51.589 align:start position:0%
an a character so we know that we don't
have<00:06:49.280><c> to</c><00:06:49.440><c> update</c><00:06:49.759><c> our</c><00:06:50.000><c> end</c><00:06:50.319><c> because</c><00:06:51.120><c> the</c><00:06:51.280><c> a's</c>

00:06:51.589 --> 00:06:51.599 align:start position:0%
have to update our end because the a's
 

00:06:51.599 --> 00:06:53.749 align:start position:0%
have to update our end because the a's
last<00:06:51.840><c> occurrence</c><00:06:52.240><c> is</c><00:06:52.400><c> still</c><00:06:52.639><c> here</c><00:06:53.120><c> but</c><00:06:53.280><c> we</c><00:06:53.440><c> can</c>

00:06:53.749 --> 00:06:53.759 align:start position:0%
last occurrence is still here but we can
 

00:06:53.759 --> 00:06:57.350 align:start position:0%
last occurrence is still here but we can
increment<00:06:54.400><c> our</c><00:06:55.120><c> size</c><00:06:55.680><c> now</c><00:06:56.000><c> to</c><00:06:56.319><c> three</c><00:06:56.880><c> we</c><00:06:57.039><c> see</c><00:06:57.199><c> a</c>

00:06:57.350 --> 00:06:57.360 align:start position:0%
increment our size now to three we see a
 

00:06:57.360 --> 00:06:58.870 align:start position:0%
increment our size now to three we see a
b<00:06:57.520><c> character</c><00:06:57.919><c> we've</c><00:06:58.080><c> already</c><00:06:58.319><c> seen</c><00:06:58.479><c> it</c><00:06:58.639><c> before</c>

00:06:58.870 --> 00:06:58.880 align:start position:0%
b character we've already seen it before
 

00:06:58.880 --> 00:07:01.189 align:start position:0%
b character we've already seen it before
okay<00:06:59.120><c> now</c><00:06:59.280><c> we</c><00:06:59.440><c> see</c><00:06:59.680><c> a</c><00:06:59.919><c> c</c><00:07:00.240><c> character</c><00:07:01.039><c> we've</c>

00:07:01.189 --> 00:07:01.199 align:start position:0%
okay now we see a c character we've
 

00:07:01.199 --> 00:07:03.270 align:start position:0%
okay now we see a c character we've
already<00:07:01.440><c> seen</c><00:07:01.680><c> a</c><00:07:01.759><c> b</c><00:07:02.080><c> before</c><00:07:02.479><c> so</c><00:07:02.720><c> we</c><00:07:02.880><c> can</c><00:07:03.039><c> go</c>

00:07:03.270 --> 00:07:03.280 align:start position:0%
already seen a b before so we can go
 

00:07:03.280 --> 00:07:07.670 align:start position:0%
already seen a b before so we can go
ahead<00:07:04.000><c> and</c><00:07:04.560><c> update</c><00:07:05.039><c> the</c><00:07:05.280><c> size</c><00:07:05.919><c> to</c><00:07:06.560><c> four</c><00:07:07.199><c> now</c><00:07:07.440><c> we</c>

00:07:07.670 --> 00:07:07.680 align:start position:0%
ahead and update the size to four now we
 

00:07:07.680 --> 00:07:09.909 align:start position:0%
ahead and update the size to four now we
see<00:07:08.080><c> a</c><00:07:08.319><c> c</c><00:07:08.560><c> character</c><00:07:08.960><c> for</c><00:07:09.120><c> the</c><00:07:09.280><c> first</c><00:07:09.520><c> time</c><00:07:09.759><c> so</c>

00:07:09.909 --> 00:07:09.919 align:start position:0%
see a c character for the first time so
 

00:07:09.919 --> 00:07:11.909 align:start position:0%
see a c character for the first time so
where's<00:07:10.240><c> the</c><00:07:10.400><c> last</c><00:07:10.720><c> occurrence</c><00:07:11.280><c> of</c><00:07:11.440><c> a</c><00:07:11.599><c> c</c>

00:07:11.909 --> 00:07:11.919 align:start position:0%
where's the last occurrence of a c
 

00:07:11.919 --> 00:07:14.070 align:start position:0%
where's the last occurrence of a c
character<00:07:12.400><c> it's</c><00:07:12.639><c> all</c><00:07:12.720><c> the</c><00:07:12.800><c> way</c><00:07:13.039><c> over</c><00:07:13.280><c> here</c><00:07:13.759><c> at</c>

00:07:14.070 --> 00:07:14.080 align:start position:0%
character it's all the way over here at
 

00:07:14.080 --> 00:07:15.909 align:start position:0%
character it's all the way over here at
index<00:07:14.800><c> seven</c><00:07:15.120><c> of</c><00:07:15.199><c> course</c><00:07:15.440><c> we're</c><00:07:15.599><c> going</c><00:07:15.680><c> to</c><00:07:15.759><c> get</c>

00:07:15.909 --> 00:07:15.919 align:start position:0%
index seven of course we're going to get
 

00:07:15.919 --> 00:07:18.469 align:start position:0%
index seven of course we're going to get
that<00:07:16.080><c> from</c><00:07:16.319><c> our</c><00:07:16.479><c> hashmap</c><00:07:17.039><c> in</c><00:07:17.280><c> constant</c><00:07:17.840><c> time</c>

00:07:18.469 --> 00:07:18.479 align:start position:0%
that from our hashmap in constant time
 

00:07:18.479 --> 00:07:21.510 align:start position:0%
that from our hashmap in constant time
since<00:07:18.800><c> it</c><00:07:18.960><c> is</c><00:07:19.120><c> a</c><00:07:19.440><c> 7</c><00:07:20.240><c> we</c><00:07:20.639><c> don't</c><00:07:20.880><c> have</c><00:07:21.039><c> to</c><00:07:21.120><c> update</c>

00:07:21.510 --> 00:07:21.520 align:start position:0%
since it is a 7 we don't have to update
 

00:07:21.520 --> 00:07:23.589 align:start position:0%
since it is a 7 we don't have to update
our<00:07:21.759><c> end</c><00:07:22.000><c> again</c><00:07:22.720><c> so</c>

00:07:23.589 --> 00:07:23.599 align:start position:0%
our end again so
 

00:07:23.599 --> 00:07:25.909 align:start position:0%
our end again so
we<00:07:23.759><c> are</c><00:07:23.919><c> good</c><00:07:24.160><c> to</c><00:07:24.319><c> go</c><00:07:24.720><c> but</c><00:07:24.880><c> we</c><00:07:25.039><c> can</c><00:07:25.440><c> increment</c>

00:07:25.909 --> 00:07:25.919 align:start position:0%
we are good to go but we can increment
 

00:07:25.919 --> 00:07:28.710 align:start position:0%
we are good to go but we can increment
our<00:07:26.240><c> size</c><00:07:26.639><c> now</c><00:07:26.880><c> to</c><00:07:27.120><c> 5.</c><00:07:27.680><c> now</c><00:07:27.840><c> we</c><00:07:28.000><c> get</c><00:07:28.160><c> to</c><00:07:28.400><c> another</c>

00:07:28.710 --> 00:07:28.720 align:start position:0%
our size now to 5. now we get to another
 

00:07:28.720 --> 00:07:32.070 align:start position:0%
our size now to 5. now we get to another
b<00:07:28.960><c> character</c><00:07:29.599><c> so</c><00:07:29.919><c> no</c><00:07:30.240><c> major</c><00:07:30.639><c> updates</c><00:07:31.360><c> here</c><00:07:31.759><c> we</c>

00:07:32.070 --> 00:07:32.080 align:start position:0%
b character so no major updates here we
 

00:07:32.080 --> 00:07:34.790 align:start position:0%
b character so no major updates here we
get<00:07:32.240><c> to</c><00:07:32.400><c> an</c><00:07:32.639><c> a</c><00:07:32.800><c> character</c><00:07:33.360><c> again</c><00:07:34.160><c> we</c><00:07:34.319><c> get</c><00:07:34.479><c> to</c><00:07:34.639><c> a</c>

00:07:34.790 --> 00:07:34.800 align:start position:0%
get to an a character again we get to a
 

00:07:34.800 --> 00:07:37.589 align:start position:0%
get to an a character again we get to a
c<00:07:35.039><c> character</c><00:07:35.520><c> again</c><00:07:36.080><c> no</c><00:07:36.319><c> major</c><00:07:36.720><c> updates</c><00:07:37.440><c> but</c>

00:07:37.589 --> 00:07:37.599 align:start position:0%
c character again no major updates but
 

00:07:37.599 --> 00:07:40.150 align:start position:0%
c character again no major updates but
at<00:07:37.759><c> this</c><00:07:37.919><c> point</c><00:07:38.240><c> our</c><00:07:38.639><c> size</c><00:07:39.039><c> will</c><00:07:39.199><c> actually</c><00:07:39.680><c> be</c>

00:07:40.150 --> 00:07:40.160 align:start position:0%
at this point our size will actually be
 

00:07:40.160 --> 00:07:42.309 align:start position:0%
at this point our size will actually be
eight<00:07:40.720><c> now</c><00:07:40.880><c> we</c><00:07:41.039><c> get</c><00:07:41.599><c> to</c>

00:07:42.309 --> 00:07:42.319 align:start position:0%
eight now we get to
 

00:07:42.319 --> 00:07:45.749 align:start position:0%
eight now we get to
uh<00:07:42.720><c> the</c><00:07:42.960><c> last</c><00:07:43.440><c> a</c><00:07:43.840><c> character</c><00:07:44.639><c> so</c><00:07:44.879><c> now</c><00:07:45.199><c> our</c><00:07:45.440><c> size</c>

00:07:45.749 --> 00:07:45.759 align:start position:0%
uh the last a character so now our size
 

00:07:45.759 --> 00:07:48.790 align:start position:0%
uh the last a character so now our size
is<00:07:45.919><c> actually</c><00:07:46.800><c> nine</c><00:07:47.440><c> but</c><00:07:47.759><c> what's</c><00:07:48.160><c> special</c>

00:07:48.790 --> 00:07:48.800 align:start position:0%
is actually nine but what's special
 

00:07:48.800 --> 00:07:51.430 align:start position:0%
is actually nine but what's special
about<00:07:49.280><c> this</c><00:07:49.680><c> position</c><00:07:50.240><c> well</c><00:07:50.479><c> this</c><00:07:50.720><c> position</c>

00:07:51.430 --> 00:07:51.440 align:start position:0%
about this position well this position
 

00:07:51.440 --> 00:07:54.950 align:start position:0%
about this position well this position
we're<00:07:51.680><c> at</c><00:07:51.759><c> the</c><00:07:52.000><c> index</c><00:07:52.800><c> where</c><00:07:53.120><c> our</c><00:07:53.520><c> end</c><00:07:54.160><c> uh</c>

00:07:54.950 --> 00:07:54.960 align:start position:0%
we're at the index where our end uh
 

00:07:54.960 --> 00:07:57.350 align:start position:0%
we're at the index where our end uh
value<00:07:55.360><c> happens</c><00:07:55.680><c> to</c><00:07:55.840><c> be</c><00:07:56.080><c> as</c><00:07:56.319><c> well</c><00:07:56.800><c> so</c><00:07:56.960><c> what</c><00:07:57.120><c> that</c>

00:07:57.350 --> 00:07:57.360 align:start position:0%
value happens to be as well so what that
 

00:07:57.360 --> 00:08:00.710 align:start position:0%
value happens to be as well so what that
tells<00:07:57.680><c> us</c><00:07:57.919><c> is</c><00:07:58.479><c> every</c><00:07:58.879><c> character</c><00:07:59.520><c> in</c><00:07:59.919><c> this</c><00:08:00.319><c> uh</c>

00:08:00.710 --> 00:08:00.720 align:start position:0%
tells us is every character in this uh
 

00:08:00.720 --> 00:08:04.469 align:start position:0%
tells us is every character in this uh
partition<00:08:01.759><c> only</c><00:08:02.240><c> occurs</c><00:08:03.120><c> in</c><00:08:03.440><c> this</c><00:08:03.759><c> partition</c>

00:08:04.469 --> 00:08:04.479 align:start position:0%
partition only occurs in this partition
 

00:08:04.479 --> 00:08:06.070 align:start position:0%
partition only occurs in this partition
none<00:08:04.720><c> of</c><00:08:04.800><c> these</c><00:08:04.960><c> characters</c><00:08:05.440><c> are</c><00:08:05.680><c> found</c>

00:08:06.070 --> 00:08:06.080 align:start position:0%
none of these characters are found
 

00:08:06.080 --> 00:08:07.990 align:start position:0%
none of these characters are found
anywhere<00:08:06.560><c> to</c><00:08:06.720><c> the</c><00:08:06.879><c> right</c><00:08:07.199><c> side</c><00:08:07.520><c> so</c><00:08:07.759><c> that</c>

00:08:07.990 --> 00:08:08.000 align:start position:0%
anywhere to the right side so that
 

00:08:08.000 --> 00:08:10.070 align:start position:0%
anywhere to the right side so that
basically<00:08:08.479><c> means</c><00:08:08.800><c> we</c><00:08:08.960><c> have</c><00:08:09.280><c> finished</c><00:08:09.759><c> our</c>

00:08:10.070 --> 00:08:10.080 align:start position:0%
basically means we have finished our
 

00:08:10.080 --> 00:08:12.230 align:start position:0%
basically means we have finished our
first<00:08:10.479><c> partition</c><00:08:11.199><c> and</c><00:08:11.280><c> we</c><00:08:11.440><c> want</c><00:08:11.599><c> to</c><00:08:11.680><c> take</c><00:08:11.919><c> the</c>

00:08:12.230 --> 00:08:12.240 align:start position:0%
first partition and we want to take the
 

00:08:12.240 --> 00:08:14.710 align:start position:0%
first partition and we want to take the
size<00:08:12.879><c> and</c><00:08:13.120><c> add</c><00:08:13.360><c> it</c><00:08:13.440><c> to</c><00:08:13.599><c> the</c><00:08:13.759><c> output</c><00:08:14.400><c> good</c><00:08:14.560><c> thing</c>

00:08:14.710 --> 00:08:14.720 align:start position:0%
size and add it to the output good thing
 

00:08:14.720 --> 00:08:16.469 align:start position:0%
size and add it to the output good thing
we're<00:08:14.879><c> keeping</c><00:08:15.280><c> track</c><00:08:15.520><c> of</c><00:08:15.680><c> the</c><00:08:15.840><c> size</c><00:08:16.319><c> the</c>

00:08:16.469 --> 00:08:16.479 align:start position:0%
we're keeping track of the size the
 

00:08:16.479 --> 00:08:19.270 align:start position:0%
we're keeping track of the size the
first<00:08:16.720><c> partition</c><00:08:17.280><c> is</c><00:08:17.520><c> of</c><00:08:17.680><c> size</c><00:08:18.319><c> nine</c><00:08:18.960><c> so</c><00:08:19.120><c> we'll</c>

00:08:19.270 --> 00:08:19.280 align:start position:0%
first partition is of size nine so we'll
 

00:08:19.280 --> 00:08:21.029 align:start position:0%
first partition is of size nine so we'll
add<00:08:19.520><c> it</c><00:08:19.599><c> to</c><00:08:19.759><c> the</c><00:08:19.919><c> output</c><00:08:20.319><c> and</c><00:08:20.479><c> then</c><00:08:20.639><c> after</c><00:08:20.879><c> that</c>

00:08:21.029 --> 00:08:21.039 align:start position:0%
add it to the output and then after that
 

00:08:21.039 --> 00:08:23.189 align:start position:0%
add it to the output and then after that
we're<00:08:21.120><c> going</c><00:08:21.280><c> to</c><00:08:21.360><c> reset</c><00:08:22.000><c> the</c><00:08:22.160><c> size</c><00:08:22.800><c> back</c><00:08:23.039><c> to</c>

00:08:23.189 --> 00:08:23.199 align:start position:0%
we're going to reset the size back to
 

00:08:23.199 --> 00:08:25.270 align:start position:0%
we're going to reset the size back to
zero<00:08:23.680><c> because</c><00:08:24.080><c> starting</c><00:08:24.400><c> from</c><00:08:24.639><c> here</c><00:08:25.120><c> we're</c>

00:08:25.270 --> 00:08:25.280 align:start position:0%
zero because starting from here we're
 

00:08:25.280 --> 00:08:27.830 align:start position:0%
zero because starting from here we're
going<00:08:25.360><c> to</c><00:08:25.440><c> be</c><00:08:25.599><c> looking</c><00:08:26.000><c> at</c><00:08:26.319><c> a</c><00:08:26.639><c> new</c><00:08:26.960><c> partition</c>

00:08:27.830 --> 00:08:27.840 align:start position:0%
going to be looking at a new partition
 

00:08:27.840 --> 00:08:29.909 align:start position:0%
going to be looking at a new partition
so<00:08:28.000><c> our</c><00:08:28.240><c> size</c><00:08:28.560><c> is</c><00:08:28.720><c> going</c><00:08:28.800><c> to</c><00:08:28.879><c> be</c><00:08:29.039><c> reset</c><00:08:29.520><c> back</c><00:08:29.759><c> to</c>

00:08:29.909 --> 00:08:29.919 align:start position:0%
so our size is going to be reset back to
 

00:08:29.919 --> 00:08:32.310 align:start position:0%
so our size is going to be reset back to
zero<00:08:30.479><c> our</c><00:08:30.800><c> end</c><00:08:31.039><c> pointer</c><00:08:31.360><c> can</c><00:08:31.599><c> stay</c><00:08:31.840><c> the</c><00:08:32.000><c> same</c>

00:08:32.310 --> 00:08:32.320 align:start position:0%
zero our end pointer can stay the same
 

00:08:32.320 --> 00:08:34.070 align:start position:0%
zero our end pointer can stay the same
because<00:08:32.560><c> we</c><00:08:32.719><c> know</c><00:08:32.959><c> as</c><00:08:33.120><c> soon</c><00:08:33.360><c> as</c><00:08:33.440><c> we</c><00:08:33.680><c> see</c><00:08:33.919><c> the</c>

00:08:34.070 --> 00:08:34.080 align:start position:0%
because we know as soon as we see the
 

00:08:34.080 --> 00:08:35.589 align:start position:0%
because we know as soon as we see the
next<00:08:34.320><c> character</c><00:08:34.800><c> our</c><00:08:35.039><c> end</c><00:08:35.200><c> pointer</c><00:08:35.440><c> is</c><00:08:35.519><c> going</c>

00:08:35.589 --> 00:08:35.599 align:start position:0%
next character our end pointer is going
 

00:08:35.599 --> 00:08:37.990 align:start position:0%
next character our end pointer is going
to<00:08:35.680><c> be</c><00:08:35.919><c> updated</c><00:08:36.479><c> anyway</c><00:08:37.200><c> because</c><00:08:37.680><c> we</c><00:08:37.839><c> know</c>

00:08:37.990 --> 00:08:38.000 align:start position:0%
to be updated anyway because we know
 

00:08:38.000 --> 00:08:40.389 align:start position:0%
to be updated anyway because we know
that<00:08:38.159><c> this</c><00:08:38.399><c> is</c><00:08:38.479><c> going</c><00:08:38.640><c> to</c><00:08:38.719><c> be</c><00:08:38.959><c> a</c><00:08:39.279><c> new</c><00:08:39.919><c> character</c>

00:08:40.389 --> 00:08:40.399 align:start position:0%
that this is going to be a new character
 

00:08:40.399 --> 00:08:43.509 align:start position:0%
that this is going to be a new character
that<00:08:40.560><c> we</c><00:08:40.719><c> see</c><00:08:41.440><c> it's</c><00:08:41.680><c> a</c><00:08:41.839><c> d</c><00:08:42.080><c> character</c><00:08:42.880><c> where</c><00:08:43.360><c> is</c>

00:08:43.509 --> 00:08:43.519 align:start position:0%
that we see it's a d character where is
 

00:08:43.519 --> 00:08:45.990 align:start position:0%
that we see it's a d character where is
the<00:08:43.680><c> last</c><00:08:44.000><c> index</c><00:08:44.399><c> of</c><00:08:44.560><c> d</c><00:08:44.800><c> well</c><00:08:44.959><c> it's</c><00:08:45.200><c> over</c><00:08:45.519><c> here</c>

00:08:45.990 --> 00:08:46.000 align:start position:0%
the last index of d well it's over here
 

00:08:46.000 --> 00:08:48.790 align:start position:0%
the last index of d well it's over here
which<00:08:46.240><c> is</c><00:08:46.640><c> 14.</c><00:08:47.519><c> so</c><00:08:47.760><c> that</c><00:08:48.000><c> means</c><00:08:48.320><c> we're</c><00:08:48.480><c> gonna</c>

00:08:48.790 --> 00:08:48.800 align:start position:0%
which is 14. so that means we're gonna
 

00:08:48.800 --> 00:08:51.509 align:start position:0%
which is 14. so that means we're gonna
update<00:08:49.200><c> our</c><00:08:49.440><c> end</c><00:08:49.760><c> pointer</c><00:08:50.160><c> because</c><00:08:50.560><c> 14</c><00:08:51.200><c> is</c><00:08:51.440><c> of</c>

00:08:51.509 --> 00:08:51.519 align:start position:0%
update our end pointer because 14 is of
 

00:08:51.519 --> 00:08:53.990 align:start position:0%
update our end pointer because 14 is of
course<00:08:51.760><c> greater</c><00:08:52.160><c> than</c><00:08:52.399><c> eight</c><00:08:52.720><c> so</c><00:08:53.279><c> end</c><00:08:53.600><c> is</c><00:08:53.760><c> now</c>

00:08:53.990 --> 00:08:54.000 align:start position:0%
course greater than eight so end is now
 

00:08:54.000 --> 00:08:56.310 align:start position:0%
course greater than eight so end is now
going<00:08:54.080><c> to</c><00:08:54.160><c> be</c><00:08:54.560><c> 14</c><00:08:55.279><c> of</c><00:08:55.360><c> course</c><00:08:55.680><c> we</c><00:08:55.839><c> are</c><00:08:56.000><c> going</c><00:08:56.160><c> to</c>

00:08:56.310 --> 00:08:56.320 align:start position:0%
going to be 14 of course we are going to
 

00:08:56.320 --> 00:08:59.910 align:start position:0%
going to be 14 of course we are going to
increment<00:08:56.880><c> our</c><00:08:57.279><c> size</c><00:08:57.920><c> uh</c><00:08:58.399><c> now</c><00:08:58.720><c> to</c><00:08:59.040><c> 1.</c><00:08:59.600><c> okay</c>

00:08:59.910 --> 00:08:59.920 align:start position:0%
increment our size uh now to 1. okay
 

00:08:59.920 --> 00:09:02.389 align:start position:0%
increment our size uh now to 1. okay
next<00:09:00.320><c> character</c><00:09:01.040><c> is</c><00:09:01.519><c> e</c><00:09:01.839><c> whereas</c><00:09:02.080><c> the</c><00:09:02.160><c> last</c>

00:09:02.389 --> 00:09:02.399 align:start position:0%
next character is e whereas the last
 

00:09:02.399 --> 00:09:04.070 align:start position:0%
next character is e whereas the last
occurrence<00:09:02.800><c> of</c><00:09:02.959><c> e</c><00:09:03.200><c> it's</c><00:09:03.360><c> over</c><00:09:03.519><c> here</c><00:09:03.760><c> which</c><00:09:03.920><c> is</c>

00:09:04.070 --> 00:09:04.080 align:start position:0%
occurrence of e it's over here which is
 

00:09:04.080 --> 00:09:07.350 align:start position:0%
occurrence of e it's over here which is
15<00:09:04.880><c> so</c><00:09:05.360><c> 15</c><00:09:05.680><c> is</c><00:09:05.839><c> greater</c><00:09:06.160><c> than</c><00:09:06.399><c> our</c><00:09:06.560><c> current</c><00:09:06.959><c> end</c>

00:09:07.350 --> 00:09:07.360 align:start position:0%
15 so 15 is greater than our current end
 

00:09:07.360 --> 00:09:10.630 align:start position:0%
15 so 15 is greater than our current end
so<00:09:07.600><c> again</c><00:09:08.000><c> let's</c><00:09:08.320><c> update</c><00:09:08.880><c> our</c><00:09:09.200><c> end</c><00:09:09.600><c> value</c><00:09:10.399><c> and</c>

00:09:10.630 --> 00:09:10.640 align:start position:0%
so again let's update our end value and
 

00:09:10.640 --> 00:09:14.310 align:start position:0%
so again let's update our end value and
of<00:09:10.800><c> course</c><00:09:11.040><c> let's</c><00:09:11.440><c> update</c><00:09:12.080><c> our</c><00:09:12.720><c> size</c><00:09:13.519><c> now</c><00:09:14.080><c> to</c>

00:09:14.310 --> 00:09:14.320 align:start position:0%
of course let's update our size now to
 

00:09:14.320 --> 00:09:14.949 align:start position:0%
of course let's update our size now to
be

00:09:14.949 --> 00:09:14.959 align:start position:0%
be
 

00:09:14.959 --> 00:09:17.350 align:start position:0%
be
2.<00:09:15.440><c> next</c><00:09:15.760><c> character</c><00:09:16.160><c> is</c><00:09:16.399><c> f</c><00:09:16.720><c> last</c><00:09:17.040><c> occurrence</c>

00:09:17.350 --> 00:09:17.360 align:start position:0%
2. next character is f last occurrence
 

00:09:17.360 --> 00:09:20.710 align:start position:0%
2. next character is f last occurrence
of<00:09:17.519><c> f</c><00:09:17.839><c> is</c><00:09:18.000><c> actually</c><00:09:18.320><c> at</c><00:09:18.640><c> this</c><00:09:19.040><c> position</c><00:09:19.600><c> so</c><00:09:20.240><c> 11</c>

00:09:20.710 --> 00:09:20.720 align:start position:0%
of f is actually at this position so 11
 

00:09:20.720 --> 00:09:21.430 align:start position:0%
of f is actually at this position so 11
is

00:09:21.430 --> 00:09:21.440 align:start position:0%
is
 

00:09:21.440 --> 00:09:24.389 align:start position:0%
is
less<00:09:21.680><c> than</c><00:09:21.920><c> 4</c><00:09:22.160><c> uh</c><00:09:22.399><c> 15</c><00:09:22.880><c> so</c><00:09:23.200><c> no</c><00:09:23.440><c> changes</c><00:09:23.839><c> here</c><00:09:24.240><c> we</c>

00:09:24.389 --> 00:09:24.399 align:start position:0%
less than 4 uh 15 so no changes here we
 

00:09:24.399 --> 00:09:26.150 align:start position:0%
less than 4 uh 15 so no changes here we
see<00:09:24.560><c> another</c><00:09:24.959><c> e</c><00:09:25.200><c> we've</c><00:09:25.360><c> already</c><00:09:25.600><c> seen</c><00:09:25.920><c> e's</c>

00:09:26.150 --> 00:09:26.160 align:start position:0%
see another e we've already seen e's
 

00:09:26.160 --> 00:09:27.829 align:start position:0%
see another e we've already seen e's
before<00:09:26.399><c> they're</c><00:09:26.640><c> at</c><00:09:26.720><c> index</c><00:09:27.040><c> 15</c><00:09:27.360><c> which</c><00:09:27.519><c> is</c><00:09:27.680><c> what</c>

00:09:27.829 --> 00:09:27.839 align:start position:0%
before they're at index 15 which is what
 

00:09:27.839 --> 00:09:31.350 align:start position:0%
before they're at index 15 which is what
we<00:09:27.920><c> have</c><00:09:28.560><c> no</c><00:09:28.800><c> big</c><00:09:29.040><c> deal</c><00:09:29.839><c> we</c><00:09:30.080><c> see</c><00:09:30.399><c> a</c><00:09:30.560><c> g</c>

00:09:31.350 --> 00:09:31.360 align:start position:0%
we have no big deal we see a g
 

00:09:31.360 --> 00:09:34.310 align:start position:0%
we have no big deal we see a g
and<00:09:32.000><c> g</c><00:09:32.560><c> is</c><00:09:33.200><c> the</c><00:09:33.279><c> last</c><00:09:33.519><c> occurrence</c><00:09:33.839><c> of</c><00:09:34.000><c> g</c><00:09:34.240><c> is</c>

00:09:34.310 --> 00:09:34.320 align:start position:0%
and g is the last occurrence of g is
 

00:09:34.320 --> 00:09:35.670 align:start position:0%
and g is the last occurrence of g is
actually<00:09:34.560><c> at</c><00:09:34.720><c> this</c><00:09:34.880><c> position</c><00:09:35.279><c> as</c><00:09:35.360><c> well</c><00:09:35.519><c> which</c>

00:09:35.670 --> 00:09:35.680 align:start position:0%
actually at this position as well which
 

00:09:35.680 --> 00:09:38.550 align:start position:0%
actually at this position as well which
is<00:09:35.839><c> 13</c><00:09:36.320><c> less</c><00:09:36.560><c> than</c><00:09:36.720><c> 15</c><00:09:37.040><c> so</c><00:09:37.200><c> no</c><00:09:37.519><c> updates</c><00:09:38.240><c> at</c><00:09:38.399><c> this</c>

00:09:38.550 --> 00:09:38.560 align:start position:0%
is 13 less than 15 so no updates at this
 

00:09:38.560 --> 00:09:40.389 align:start position:0%
is 13 less than 15 so no updates at this
point<00:09:38.800><c> our</c><00:09:38.959><c> size</c><00:09:39.279><c> will</c><00:09:39.519><c> actually</c><00:09:39.839><c> be</c><00:09:40.160><c> like</c>

00:09:40.389 --> 00:09:40.399 align:start position:0%
point our size will actually be like
 

00:09:40.399 --> 00:09:43.750 align:start position:0%
point our size will actually be like
five<00:09:40.800><c> now</c><00:09:41.040><c> i</c><00:09:41.120><c> think</c><00:09:41.680><c> uh</c><00:09:41.920><c> next</c><00:09:42.240><c> let's</c><00:09:42.480><c> get</c><00:09:42.720><c> to</c><00:09:42.959><c> d</c>

00:09:43.750 --> 00:09:43.760 align:start position:0%
five now i think uh next let's get to d
 

00:09:43.760 --> 00:09:45.670 align:start position:0%
five now i think uh next let's get to d
this<00:09:43.920><c> is</c><00:09:44.000><c> the</c><00:09:44.160><c> last</c><00:09:44.399><c> occurrence</c><00:09:44.800><c> of</c><00:09:44.880><c> d</c><00:09:45.360><c> we</c><00:09:45.519><c> get</c>

00:09:45.670 --> 00:09:45.680 align:start position:0%
this is the last occurrence of d we get
 

00:09:45.680 --> 00:09:47.829 align:start position:0%
this is the last occurrence of d we get
to<00:09:45.920><c> e</c><00:09:46.399><c> this</c><00:09:46.640><c> is</c><00:09:46.800><c> the</c><00:09:46.880><c> last</c><00:09:47.120><c> occurrence</c><00:09:47.519><c> of</c><00:09:47.600><c> e</c>

00:09:47.829 --> 00:09:47.839 align:start position:0%
to e this is the last occurrence of e
 

00:09:47.839 --> 00:09:50.550 align:start position:0%
to e this is the last occurrence of e
and<00:09:48.000><c> it's</c><00:09:48.160><c> exactly</c><00:09:48.800><c> our</c><00:09:49.200><c> end</c><00:09:49.519><c> value</c><00:09:50.000><c> so</c><00:09:50.240><c> this</c>

00:09:50.550 --> 00:09:50.560 align:start position:0%
and it's exactly our end value so this
 

00:09:50.560 --> 00:09:51.670 align:start position:0%
and it's exactly our end value so this
is<00:09:50.880><c> the</c>

00:09:51.670 --> 00:09:51.680 align:start position:0%
is the
 

00:09:51.680 --> 00:09:55.030 align:start position:0%
is the
second<00:09:52.160><c> end</c><00:09:52.800><c> of</c><00:09:53.360><c> the</c><00:09:53.519><c> second</c><00:09:54.000><c> partition</c><00:09:54.880><c> and</c>

00:09:55.030 --> 00:09:55.040 align:start position:0%
second end of the second partition and
 

00:09:55.040 --> 00:09:57.190 align:start position:0%
second end of the second partition and
what's<00:09:55.279><c> the</c><00:09:55.519><c> size</c><00:09:55.920><c> of</c><00:09:56.160><c> this</c><00:09:56.399><c> partition</c><00:09:56.880><c> well</c>

00:09:57.190 --> 00:09:57.200 align:start position:0%
what's the size of this partition well
 

00:09:57.200 --> 00:09:58.630 align:start position:0%
what's the size of this partition well
it's<00:09:57.600><c> seven</c><00:09:57.920><c> which</c><00:09:58.080><c> is</c><00:09:58.160><c> what</c><00:09:58.320><c> we're</c><00:09:58.480><c> going</c><00:09:58.560><c> to</c>

00:09:58.630 --> 00:09:58.640 align:start position:0%
it's seven which is what we're going to
 

00:09:58.640 --> 00:10:00.070 align:start position:0%
it's seven which is what we're going to
be<00:09:58.720><c> keeping</c><00:09:59.040><c> track</c><00:09:59.360><c> of</c><00:09:59.519><c> but</c><00:09:59.680><c> i'm</c><00:09:59.760><c> kind</c><00:09:59.920><c> of</c>

00:10:00.070 --> 00:10:00.080 align:start position:0%
be keeping track of but i'm kind of
 

00:10:00.080 --> 00:10:02.870 align:start position:0%
be keeping track of but i'm kind of
skipping<00:10:00.480><c> that</c><00:10:00.880><c> so</c><00:10:01.200><c> the</c><00:10:01.519><c> second</c><00:10:02.000><c> uh</c><00:10:02.399><c> partition</c>

00:10:02.870 --> 00:10:02.880 align:start position:0%
skipping that so the second uh partition
 

00:10:02.880 --> 00:10:04.310 align:start position:0%
skipping that so the second uh partition
that<00:10:02.959><c> we're</c><00:10:03.120><c> gonna</c><00:10:03.279><c> be</c><00:10:03.440><c> adding</c><00:10:03.600><c> to</c><00:10:03.760><c> our</c><00:10:03.920><c> output</c>

00:10:04.310 --> 00:10:04.320 align:start position:0%
that we're gonna be adding to our output
 

00:10:04.320 --> 00:10:06.470 align:start position:0%
that we're gonna be adding to our output
is<00:10:04.399><c> gonna</c><00:10:04.560><c> be</c><00:10:04.720><c> of</c><00:10:04.959><c> size</c><00:10:05.600><c> seven</c><00:10:06.000><c> so</c><00:10:06.160><c> that's</c><00:10:06.399><c> what</c>

00:10:06.470 --> 00:10:06.480 align:start position:0%
is gonna be of size seven so that's what
 

00:10:06.480 --> 00:10:08.710 align:start position:0%
is gonna be of size seven so that's what
we're<00:10:06.640><c> gonna</c><00:10:06.880><c> do</c><00:10:07.440><c> next</c><00:10:07.839><c> we're</c><00:10:08.000><c> gonna</c><00:10:08.240><c> go</c><00:10:08.480><c> to</c>

00:10:08.710 --> 00:10:08.720 align:start position:0%
we're gonna do next we're gonna go to
 

00:10:08.720 --> 00:10:10.870 align:start position:0%
we're gonna do next we're gonna go to
the<00:10:08.959><c> third</c><00:10:09.440><c> partition</c><00:10:10.079><c> so</c><00:10:10.320><c> over</c><00:10:10.560><c> here</c><00:10:10.720><c> the</c>

00:10:10.870 --> 00:10:10.880 align:start position:0%
the third partition so over here the
 

00:10:10.880 --> 00:10:13.750 align:start position:0%
the third partition so over here the
first<00:10:11.120><c> character</c><00:10:11.600><c> is</c><00:10:12.160><c> h</c><00:10:12.800><c> uh</c><00:10:12.959><c> by</c><00:10:13.120><c> the</c><00:10:13.279><c> way</c><00:10:13.519><c> our</c>

00:10:13.750 --> 00:10:13.760 align:start position:0%
first character is h uh by the way our
 

00:10:13.760 --> 00:10:15.910 align:start position:0%
first character is h uh by the way our
size<00:10:14.000><c> will</c><00:10:14.160><c> have</c><00:10:14.320><c> been</c><00:10:14.480><c> reset</c><00:10:14.800><c> to</c><00:10:14.959><c> zero</c><00:10:15.600><c> and</c>

00:10:15.910 --> 00:10:15.920 align:start position:0%
size will have been reset to zero and
 

00:10:15.920 --> 00:10:18.150 align:start position:0%
size will have been reset to zero and
last<00:10:16.320><c> occurrence</c><00:10:16.720><c> of</c><00:10:16.880><c> h</c><00:10:17.120><c> is</c><00:10:17.279><c> over</c><00:10:17.440><c> here</c><00:10:17.839><c> which</c>

00:10:18.150 --> 00:10:18.160 align:start position:0%
last occurrence of h is over here which
 

00:10:18.160 --> 00:10:22.069 align:start position:0%
last occurrence of h is over here which
i<00:10:18.320><c> think</c><00:10:18.800><c> is</c><00:10:19.200><c> 19.</c><00:10:20.240><c> so</c><00:10:20.480><c> that's</c><00:10:20.800><c> what</c><00:10:21.120><c> our</c><00:10:21.600><c> end</c><00:10:21.920><c> is</c>

00:10:22.069 --> 00:10:22.079 align:start position:0%
i think is 19. so that's what our end is
 

00:10:22.079 --> 00:10:24.069 align:start position:0%
i think is 19. so that's what our end is
going<00:10:22.240><c> to</c><00:10:22.320><c> be</c><00:10:22.560><c> at</c><00:10:22.880><c> currently</c><00:10:23.760><c> we're</c><00:10:23.920><c> going</c><00:10:24.000><c> to</c>

00:10:24.069 --> 00:10:24.079 align:start position:0%
going to be at currently we're going to
 

00:10:24.079 --> 00:10:25.750 align:start position:0%
going to be at currently we're going to
get<00:10:24.240><c> to</c><00:10:24.320><c> the</c><00:10:24.399><c> second</c><00:10:24.720><c> character</c><00:10:25.040><c> which</c><00:10:25.200><c> is</c><00:10:25.440><c> i</c>

00:10:25.750 --> 00:10:25.760 align:start position:0%
get to the second character which is i
 

00:10:25.760 --> 00:10:28.150 align:start position:0%
get to the second character which is i
it's<00:10:26.000><c> a</c><00:10:26.079><c> little</c><00:10:26.240><c> bit</c><00:10:26.480><c> smushed</c><00:10:27.040><c> in</c><00:10:27.200><c> here</c><00:10:27.760><c> eyes</c>

00:10:28.150 --> 00:10:28.160 align:start position:0%
it's a little bit smushed in here eyes
 

00:10:28.160 --> 00:10:29.990 align:start position:0%
it's a little bit smushed in here eyes
last<00:10:28.399><c> occurrence</c><00:10:28.720><c> is</c><00:10:28.880><c> over</c><00:10:29.040><c> here</c><00:10:29.360><c> actually</c><00:10:29.760><c> at</c>

00:10:29.990 --> 00:10:30.000 align:start position:0%
last occurrence is over here actually at
 

00:10:30.000 --> 00:10:34.870 align:start position:0%
last occurrence is over here actually at
22.<00:10:31.279><c> so</c><00:10:32.000><c> uh</c><00:10:32.480><c> you</c><00:10:32.640><c> know</c><00:10:32.880><c> update</c><00:10:33.200><c> the</c><00:10:33.360><c> end</c><00:10:33.680><c> to</c><00:10:33.920><c> 22.</c>

00:10:34.870 --> 00:10:34.880 align:start position:0%
22. so uh you know update the end to 22.
 

00:10:34.880 --> 00:10:36.389 align:start position:0%
22. so uh you know update the end to 22.
next<00:10:35.200><c> character</c><00:10:35.680><c> third</c><00:10:35.920><c> character</c><00:10:36.240><c> is</c><00:10:36.320><c> going</c>

00:10:36.389 --> 00:10:36.399 align:start position:0%
next character third character is going
 

00:10:36.399 --> 00:10:37.670 align:start position:0%
next character third character is going
to<00:10:36.480><c> be</c><00:10:36.880><c> j</c>

00:10:37.670 --> 00:10:37.680 align:start position:0%
to be j
 

00:10:37.680 --> 00:10:39.509 align:start position:0%
to be j
uh<00:10:37.920><c> last</c><00:10:38.240><c> occurrence</c><00:10:38.560><c> of</c><00:10:38.640><c> j</c><00:10:38.880><c> is</c><00:10:39.040><c> actually</c><00:10:39.360><c> at</c>

00:10:39.509 --> 00:10:39.519 align:start position:0%
uh last occurrence of j is actually at
 

00:10:39.519 --> 00:10:42.790 align:start position:0%
uh last occurrence of j is actually at
the<00:10:39.839><c> end</c><00:10:40.320><c> of</c><00:10:40.560><c> the</c><00:10:40.800><c> string</c><00:10:41.120><c> which</c><00:10:41.279><c> is</c><00:10:41.519><c> 23</c><00:10:42.480><c> so</c><00:10:42.720><c> at</c>

00:10:42.790 --> 00:10:42.800 align:start position:0%
the end of the string which is 23 so at
 

00:10:42.800 --> 00:10:44.870 align:start position:0%
the end of the string which is 23 so at
this<00:10:43.040><c> point</c><00:10:43.200><c> we</c><00:10:43.440><c> pretty</c><00:10:43.600><c> much</c><00:10:43.920><c> know</c><00:10:44.160><c> that</c><00:10:44.399><c> this</c>

00:10:44.870 --> 00:10:44.880 align:start position:0%
this point we pretty much know that this
 

00:10:44.880 --> 00:10:47.350 align:start position:0%
this point we pretty much know that this
is<00:10:45.040><c> going</c><00:10:45.120><c> to</c><00:10:45.200><c> be</c><00:10:45.360><c> a</c><00:10:45.519><c> partition</c><00:10:46.160><c> itself</c><00:10:47.120><c> right</c>

00:10:47.350 --> 00:10:47.360 align:start position:0%
is going to be a partition itself right
 

00:10:47.360 --> 00:10:49.110 align:start position:0%
is going to be a partition itself right
but<00:10:47.600><c> let's</c><00:10:47.839><c> assume</c><00:10:48.160><c> we</c><00:10:48.399><c> continue</c><00:10:48.800><c> to</c><00:10:48.959><c> run</c>

00:10:49.110 --> 00:10:49.120 align:start position:0%
but let's assume we continue to run
 

00:10:49.120 --> 00:10:50.710 align:start position:0%
but let's assume we continue to run
through<00:10:49.279><c> the</c><00:10:49.440><c> algorithm</c><00:10:49.839><c> we</c><00:10:50.000><c> basically</c><00:10:50.320><c> visit</c>

00:10:50.710 --> 00:10:50.720 align:start position:0%
through the algorithm we basically visit
 

00:10:50.720 --> 00:10:52.230 align:start position:0%
through the algorithm we basically visit
all<00:10:50.800><c> these</c><00:10:51.040><c> characters</c><00:10:51.600><c> we</c><00:10:51.760><c> don't</c><00:10:51.920><c> really</c>

00:10:52.230 --> 00:10:52.240 align:start position:0%
all these characters we don't really
 

00:10:52.240 --> 00:10:54.069 align:start position:0%
all these characters we don't really
update<00:10:52.560><c> our</c><00:10:52.800><c> end</c><00:10:53.120><c> because</c><00:10:53.360><c> it's</c><00:10:53.600><c> already</c><00:10:53.920><c> at</c>

00:10:54.069 --> 00:10:54.079 align:start position:0%
update our end because it's already at
 

00:10:54.079 --> 00:10:56.949 align:start position:0%
update our end because it's already at
the<00:10:54.320><c> last</c><00:10:54.720><c> index</c><00:10:55.200><c> of</c><00:10:55.279><c> the</c><00:10:55.440><c> entire</c><00:10:55.839><c> string</c><00:10:56.480><c> and</c>

00:10:56.949 --> 00:10:56.959 align:start position:0%
the last index of the entire string and
 

00:10:56.959 --> 00:10:58.790 align:start position:0%
the last index of the entire string and
the<00:10:57.120><c> size</c><00:10:57.360><c> of</c><00:10:57.440><c> this</c><00:10:57.600><c> partition</c><00:10:58.240><c> is</c><00:10:58.399><c> what</c><00:10:58.640><c> it's</c>

00:10:58.790 --> 00:10:58.800 align:start position:0%
the size of this partition is what it's
 

00:10:58.800 --> 00:11:00.870 align:start position:0%
the size of this partition is what it's
something<00:10:59.040><c> like</c><00:10:59.200><c> eight</c><00:10:59.440><c> characters</c><00:11:00.160><c> so</c><00:11:00.720><c> by</c>

00:11:00.870 --> 00:11:00.880 align:start position:0%
something like eight characters so by
 

00:11:00.880 --> 00:11:02.870 align:start position:0%
something like eight characters so by
the<00:11:00.959><c> end</c><00:11:01.120><c> of</c><00:11:01.279><c> it</c><00:11:01.440><c> our</c><00:11:01.600><c> size</c><00:11:01.920><c> will</c><00:11:02.079><c> be</c><00:11:02.240><c> at</c><00:11:02.399><c> eight</c>

00:11:02.870 --> 00:11:02.880 align:start position:0%
the end of it our size will be at eight
 

00:11:02.880 --> 00:11:03.990 align:start position:0%
the end of it our size will be at eight
and<00:11:02.959><c> then</c><00:11:03.120><c> we're</c><00:11:03.200><c> going</c><00:11:03.279><c> to</c><00:11:03.360><c> go</c><00:11:03.519><c> ahead</c><00:11:03.680><c> and</c><00:11:03.839><c> add</c>

00:11:03.990 --> 00:11:04.000 align:start position:0%
and then we're going to go ahead and add
 

00:11:04.000 --> 00:11:07.190 align:start position:0%
and then we're going to go ahead and add
that<00:11:04.160><c> to</c><00:11:04.320><c> our</c><00:11:04.480><c> output</c><00:11:05.120><c> so</c><00:11:05.600><c> you</c><00:11:05.760><c> can</c><00:11:05.920><c> see</c><00:11:06.480><c> we</c><00:11:06.959><c> did</c>

00:11:07.190 --> 00:11:07.200 align:start position:0%
that to our output so you can see we did
 

00:11:07.200 --> 00:11:09.430 align:start position:0%
that to our output so you can see we did
the<00:11:07.519><c> algorithm</c><00:11:08.079><c> we</c><00:11:08.240><c> got</c><00:11:08.399><c> the</c><00:11:08.480><c> same</c><00:11:08.880><c> output</c><00:11:09.279><c> as</c>

00:11:09.430 --> 00:11:09.440 align:start position:0%
the algorithm we got the same output as
 

00:11:09.440 --> 00:11:12.630 align:start position:0%
the algorithm we got the same output as
they<00:11:09.680><c> got</c><00:11:10.000><c> in</c><00:11:10.240><c> the</c><00:11:10.560><c> example</c><00:11:11.040><c> up</c><00:11:11.200><c> above</c><00:11:11.920><c> and</c><00:11:12.399><c> we</c>

00:11:12.630 --> 00:11:12.640 align:start position:0%
they got in the example up above and we
 

00:11:12.640 --> 00:11:14.790 align:start position:0%
they got in the example up above and we
kind<00:11:12.800><c> of</c><00:11:12.959><c> had</c><00:11:13.120><c> to</c><00:11:13.200><c> do</c><00:11:13.440><c> two</c><00:11:13.680><c> passes</c><00:11:14.160><c> one</c><00:11:14.399><c> pass</c><00:11:14.640><c> to</c>

00:11:14.790 --> 00:11:14.800 align:start position:0%
kind of had to do two passes one pass to
 

00:11:14.800 --> 00:11:16.550 align:start position:0%
kind of had to do two passes one pass to
build<00:11:15.040><c> our</c><00:11:15.200><c> hash</c><00:11:15.440><c> map</c><00:11:15.680><c> and</c><00:11:15.760><c> then</c><00:11:15.920><c> one</c><00:11:16.160><c> pass</c><00:11:16.399><c> to</c>

00:11:16.550 --> 00:11:16.560 align:start position:0%
build our hash map and then one pass to
 

00:11:16.560 --> 00:11:19.190 align:start position:0%
build our hash map and then one pass to
actually<00:11:16.880><c> build</c><00:11:17.279><c> the</c><00:11:17.519><c> output</c><00:11:18.160><c> but</c><00:11:18.399><c> still</c><00:11:18.959><c> we</c>

00:11:19.190 --> 00:11:19.200 align:start position:0%
actually build the output but still we
 

00:11:19.200 --> 00:11:20.470 align:start position:0%
actually build the output but still we
all<00:11:19.360><c> we</c><00:11:19.440><c> had</c><00:11:19.519><c> to</c><00:11:19.600><c> do</c><00:11:19.760><c> is</c><00:11:19.920><c> scan</c><00:11:20.240><c> through</c><00:11:20.399><c> the</c>

00:11:20.470 --> 00:11:20.480 align:start position:0%
all we had to do is scan through the
 

00:11:20.480 --> 00:11:22.710 align:start position:0%
all we had to do is scan through the
input<00:11:20.800><c> so</c><00:11:21.040><c> the</c><00:11:21.120><c> time</c><00:11:21.279><c> complexity</c><00:11:21.839><c> actually</c><00:11:22.240><c> is</c>

00:11:22.710 --> 00:11:22.720 align:start position:0%
input so the time complexity actually is
 

00:11:22.720 --> 00:11:25.670 align:start position:0%
input so the time complexity actually is
just<00:11:23.200><c> big</c><00:11:23.600><c> o</c><00:11:23.839><c> of</c><00:11:24.160><c> n</c><00:11:24.560><c> the</c><00:11:24.720><c> memory</c><00:11:25.040><c> complexity</c><00:11:25.600><c> is</c>

00:11:25.670 --> 00:11:25.680 align:start position:0%
just big o of n the memory complexity is
 

00:11:25.680 --> 00:11:27.829 align:start position:0%
just big o of n the memory complexity is
big<00:11:25.920><c> o</c><00:11:26.000><c> of</c><00:11:26.240><c> one</c><00:11:26.560><c> because</c><00:11:27.040><c> this</c><00:11:27.200><c> hash</c><00:11:27.519><c> map</c><00:11:27.760><c> is</c>

00:11:27.829 --> 00:11:27.839 align:start position:0%
big o of one because this hash map is
 

00:11:27.839 --> 00:11:30.389 align:start position:0%
big o of one because this hash map is
going<00:11:27.920><c> to</c><00:11:28.000><c> be</c><00:11:28.160><c> limited</c><00:11:28.560><c> to</c><00:11:28.800><c> 26</c><00:11:29.440><c> characters</c><00:11:30.240><c> so</c>

00:11:30.389 --> 00:11:30.399 align:start position:0%
going to be limited to 26 characters so
 

00:11:30.399 --> 00:11:32.230 align:start position:0%
going to be limited to 26 characters so
with<00:11:30.560><c> that</c><00:11:30.720><c> being</c><00:11:31.040><c> said</c><00:11:31.519><c> i</c><00:11:31.680><c> hope</c><00:11:31.839><c> this</c><00:11:32.000><c> makes</c>

00:11:32.230 --> 00:11:32.240 align:start position:0%
with that being said i hope this makes
 

00:11:32.240 --> 00:11:34.069 align:start position:0%
with that being said i hope this makes
sense<00:11:32.480><c> now</c><00:11:32.640><c> we</c><00:11:32.720><c> can</c><00:11:32.880><c> jump</c><00:11:33.200><c> into</c><00:11:33.440><c> the</c><00:11:33.600><c> code</c>

00:11:34.069 --> 00:11:34.079 align:start position:0%
sense now we can jump into the code
 

00:11:34.079 --> 00:11:35.430 align:start position:0%
sense now we can jump into the code
remember<00:11:34.399><c> the</c><00:11:34.560><c> first</c><00:11:34.720><c> thing</c><00:11:34.880><c> we</c><00:11:35.040><c> want</c><00:11:35.200><c> to</c><00:11:35.279><c> do</c>

00:11:35.430 --> 00:11:35.440 align:start position:0%
remember the first thing we want to do
 

00:11:35.440 --> 00:11:38.310 align:start position:0%
remember the first thing we want to do
is<00:11:35.600><c> do</c><00:11:35.760><c> a</c><00:11:35.839><c> little</c><00:11:36.079><c> bit</c><00:11:36.320><c> of</c><00:11:36.640><c> pre-processing</c><00:11:38.079><c> by</c>

00:11:38.310 --> 00:11:38.320 align:start position:0%
is do a little bit of pre-processing by
 

00:11:38.320 --> 00:11:40.150 align:start position:0%
is do a little bit of pre-processing by
that<00:11:38.480><c> i</c><00:11:38.640><c> mean</c><00:11:38.800><c> building</c><00:11:39.200><c> our</c><00:11:39.360><c> hash</c><00:11:39.680><c> map</c><00:11:39.920><c> where</c>

00:11:40.150 --> 00:11:40.160 align:start position:0%
that i mean building our hash map where
 

00:11:40.160 --> 00:11:42.150 align:start position:0%
that i mean building our hash map where
we<00:11:40.320><c> are</c><00:11:40.399><c> going</c><00:11:40.480><c> to</c><00:11:40.800><c> be</c><00:11:40.959><c> going</c><00:11:41.440><c> ahead</c><00:11:41.920><c> and</c>

00:11:42.150 --> 00:11:42.160 align:start position:0%
we are going to be going ahead and
 

00:11:42.160 --> 00:11:45.350 align:start position:0%
we are going to be going ahead and
mapping<00:11:42.640><c> every</c><00:11:42.880><c> character</c><00:11:43.680><c> to</c><00:11:44.160><c> the</c><00:11:44.720><c> last</c>

00:11:45.350 --> 00:11:45.360 align:start position:0%
mapping every character to the last
 

00:11:45.360 --> 00:11:49.030 align:start position:0%
mapping every character to the last
index<00:11:45.920><c> of</c><00:11:46.079><c> it</c><00:11:46.399><c> in</c><00:11:46.640><c> the</c><00:11:46.959><c> input</c><00:11:47.360><c> string</c><00:11:47.920><c> s</c><00:11:48.480><c> so</c>

00:11:49.030 --> 00:11:49.040 align:start position:0%
index of it in the input string s so
 

00:11:49.040 --> 00:11:50.389 align:start position:0%
index of it in the input string s so
let's<00:11:49.200><c> go</c><00:11:49.360><c> ahead</c><00:11:49.519><c> and</c><00:11:49.760><c> iterate</c><00:11:50.079><c> through</c><00:11:50.320><c> our</c>

00:11:50.389 --> 00:11:50.399 align:start position:0%
let's go ahead and iterate through our
 

00:11:50.399 --> 00:11:52.790 align:start position:0%
let's go ahead and iterate through our
string<00:11:50.800><c> in</c><00:11:50.880><c> python</c><00:11:51.360><c> we</c><00:11:51.519><c> can</c><00:11:52.000><c> save</c><00:11:52.320><c> like</c><00:11:52.560><c> one</c>

00:11:52.790 --> 00:11:52.800 align:start position:0%
string in python we can save like one
 

00:11:52.800 --> 00:11:54.310 align:start position:0%
string in python we can save like one
line<00:11:53.040><c> of</c><00:11:53.200><c> code</c><00:11:53.519><c> by</c>

00:11:54.310 --> 00:11:54.320 align:start position:0%
line of code by
 

00:11:54.320 --> 00:11:56.230 align:start position:0%
line of code by
enumerating<00:11:55.279><c> the</c><00:11:55.519><c> string</c><00:11:55.839><c> which</c><00:11:56.079><c> is</c>

00:11:56.230 --> 00:11:56.240 align:start position:0%
enumerating the string which is
 

00:11:56.240 --> 00:11:58.550 align:start position:0%
enumerating the string which is
basically<00:11:56.720><c> going</c><00:11:56.800><c> to</c><00:11:56.959><c> allow</c><00:11:57.279><c> us</c><00:11:57.519><c> to</c><00:11:57.680><c> get</c><00:11:58.399><c> to</c>

00:11:58.550 --> 00:11:58.560 align:start position:0%
basically going to allow us to get to
 

00:11:58.560 --> 00:12:00.150 align:start position:0%
basically going to allow us to get to
iterate<00:11:58.959><c> through</c><00:11:59.120><c> the</c><00:11:59.279><c> index</c><00:11:59.760><c> and</c><00:12:00.000><c> the</c>

00:12:00.150 --> 00:12:00.160 align:start position:0%
iterate through the index and the
 

00:12:00.160 --> 00:12:02.629 align:start position:0%
iterate through the index and the
character<00:12:00.720><c> at</c><00:12:00.880><c> the</c><00:12:00.959><c> same</c><00:12:01.279><c> time</c><00:12:01.839><c> so</c><00:12:02.079><c> i</c><00:12:02.320><c> is</c><00:12:02.399><c> the</c>

00:12:02.629 --> 00:12:02.639 align:start position:0%
character at the same time so i is the
 

00:12:02.639 --> 00:12:05.030 align:start position:0%
character at the same time so i is the
index<00:12:02.959><c> c</c><00:12:03.200><c> is</c><00:12:03.279><c> the</c><00:12:03.440><c> character</c><00:12:04.320><c> uh</c><00:12:04.560><c> we're</c><00:12:04.800><c> gonna</c>

00:12:05.030 --> 00:12:05.040 align:start position:0%
index c is the character uh we're gonna
 

00:12:05.040 --> 00:12:07.110 align:start position:0%
index c is the character uh we're gonna
go<00:12:05.200><c> ahead</c><00:12:05.360><c> and</c><00:12:05.519><c> take</c><00:12:05.839><c> that</c><00:12:06.079><c> character</c><00:12:06.560><c> and</c><00:12:06.720><c> set</c>

00:12:07.110 --> 00:12:07.120 align:start position:0%
go ahead and take that character and set
 

00:12:07.120 --> 00:12:11.110 align:start position:0%
go ahead and take that character and set
its<00:12:07.519><c> last</c><00:12:08.160><c> index</c><00:12:08.880><c> equal</c><00:12:09.519><c> to</c><00:12:09.839><c> i</c><00:12:10.399><c> now</c><00:12:10.639><c> this</c><00:12:10.880><c> is</c>

00:12:11.110 --> 00:12:11.120 align:start position:0%
its last index equal to i now this is
 

00:12:11.120 --> 00:12:13.590 align:start position:0%
its last index equal to i now this is
okay<00:12:11.600><c> because</c><00:12:12.000><c> even</c><00:12:12.320><c> if</c><00:12:12.639><c> the</c><00:12:12.800><c> last</c><00:12:13.200><c> uh</c>

00:12:13.590 --> 00:12:13.600 align:start position:0%
okay because even if the last uh
 

00:12:13.600 --> 00:12:15.829 align:start position:0%
okay because even if the last uh
occurrence<00:12:14.079><c> of</c><00:12:14.160><c> that</c><00:12:14.320><c> character</c><00:12:14.880><c> isn't</c><00:12:15.360><c> this</c>

00:12:15.829 --> 00:12:15.839 align:start position:0%
occurrence of that character isn't this
 

00:12:15.839 --> 00:12:18.550 align:start position:0%
occurrence of that character isn't this
index<00:12:16.720><c> eventually</c><00:12:17.279><c> we</c><00:12:17.519><c> will</c><00:12:17.760><c> have</c><00:12:18.000><c> visited</c>

00:12:18.550 --> 00:12:18.560 align:start position:0%
index eventually we will have visited
 

00:12:18.560 --> 00:12:20.710 align:start position:0%
index eventually we will have visited
the<00:12:18.720><c> last</c><00:12:19.200><c> occurrence</c><00:12:19.680><c> of</c><00:12:19.839><c> that</c><00:12:20.079><c> character</c><00:12:20.560><c> in</c>

00:12:20.710 --> 00:12:20.720 align:start position:0%
the last occurrence of that character in
 

00:12:20.720 --> 00:12:22.790 align:start position:0%
the last occurrence of that character in
the<00:12:20.880><c> string</c><00:12:21.440><c> and</c><00:12:21.600><c> then</c><00:12:21.839><c> we'll</c><00:12:22.000><c> have</c><00:12:22.320><c> updated</c>

00:12:22.790 --> 00:12:22.800 align:start position:0%
the string and then we'll have updated
 

00:12:22.800 --> 00:12:25.670 align:start position:0%
the string and then we'll have updated
the<00:12:22.959><c> last</c><00:12:23.279><c> index</c><00:12:23.680><c> of</c><00:12:23.920><c> that</c><00:12:24.160><c> character</c><00:12:24.800><c> to</c><00:12:25.040><c> the</c>

00:12:25.670 --> 00:12:25.680 align:start position:0%
the last index of that character to the
 

00:12:25.680 --> 00:12:28.790 align:start position:0%
the last index of that character to the
last<00:12:26.160><c> occurrence</c><00:12:27.040><c> so</c><00:12:27.200><c> this</c><00:12:27.440><c> is</c><00:12:27.680><c> pretty</c><00:12:28.079><c> simple</c>

00:12:28.790 --> 00:12:28.800 align:start position:0%
last occurrence so this is pretty simple
 

00:12:28.800 --> 00:12:31.509 align:start position:0%
last occurrence so this is pretty simple
now<00:12:29.120><c> getting</c><00:12:29.440><c> into</c><00:12:29.680><c> the</c><00:12:29.920><c> actual</c><00:12:30.480><c> algorithm</c><00:12:31.279><c> we</c>

00:12:31.509 --> 00:12:31.519 align:start position:0%
now getting into the actual algorithm we
 

00:12:31.519 --> 00:12:33.030 align:start position:0%
now getting into the actual algorithm we
are<00:12:31.600><c> going</c><00:12:31.680><c> to</c><00:12:31.760><c> be</c><00:12:32.000><c> doing</c><00:12:32.399><c> the</c><00:12:32.560><c> same</c><00:12:32.880><c> thing</c>

00:12:33.030 --> 00:12:33.040 align:start position:0%
are going to be doing the same thing
 

00:12:33.040 --> 00:12:34.949 align:start position:0%
are going to be doing the same thing
we're<00:12:33.200><c> going</c><00:12:33.279><c> to</c><00:12:33.360><c> be</c><00:12:33.519><c> enumerating</c><00:12:34.480><c> through</c>

00:12:34.949 --> 00:12:34.959 align:start position:0%
we're going to be enumerating through
 

00:12:34.959 --> 00:12:37.910 align:start position:0%
we're going to be enumerating through
the<00:12:35.200><c> index</c><00:12:35.680><c> and</c><00:12:36.320><c> the</c><00:12:36.560><c> character</c><00:12:37.200><c> of</c><00:12:37.600><c> every</c>

00:12:37.910 --> 00:12:37.920 align:start position:0%
the index and the character of every
 

00:12:37.920 --> 00:12:40.310 align:start position:0%
the index and the character of every
single<00:12:38.560><c> uh</c><00:12:38.720><c> character</c><00:12:39.120><c> in</c><00:12:39.200><c> the</c><00:12:39.360><c> string</c>

00:12:40.310 --> 00:12:40.320 align:start position:0%
single uh character in the string
 

00:12:40.320 --> 00:12:41.269 align:start position:0%
single uh character in the string
but<00:12:40.480><c> remember</c><00:12:40.880><c> we're</c><00:12:40.959><c> going</c><00:12:41.040><c> to</c><00:12:41.120><c> be</c>

00:12:41.269 --> 00:12:41.279 align:start position:0%
but remember we're going to be
 

00:12:41.279 --> 00:12:43.269 align:start position:0%
but remember we're going to be
maintaining<00:12:41.760><c> a</c><00:12:41.839><c> couple</c><00:12:42.160><c> things</c><00:12:42.800><c> one</c><00:12:43.040><c> is</c><00:12:43.200><c> going</c>

00:12:43.269 --> 00:12:43.279 align:start position:0%
maintaining a couple things one is going
 

00:12:43.279 --> 00:12:44.790 align:start position:0%
maintaining a couple things one is going
to<00:12:43.360><c> be</c><00:12:43.440><c> the</c><00:12:43.600><c> result</c><00:12:44.079><c> of</c><00:12:44.240><c> course</c><00:12:44.480><c> which</c><00:12:44.720><c> is</c>

00:12:44.790 --> 00:12:44.800 align:start position:0%
to be the result of course which is
 

00:12:44.800 --> 00:12:46.310 align:start position:0%
to be the result of course which is
going<00:12:44.959><c> to</c><00:12:45.040><c> tell</c><00:12:45.200><c> us</c><00:12:45.360><c> the</c><00:12:45.600><c> size</c><00:12:45.920><c> of</c><00:12:46.079><c> each</c>

00:12:46.310 --> 00:12:46.320 align:start position:0%
going to tell us the size of each
 

00:12:46.320 --> 00:12:48.629 align:start position:0%
going to tell us the size of each
partition<00:12:47.120><c> and</c><00:12:47.440><c> if</c><00:12:47.519><c> we</c><00:12:47.680><c> want</c><00:12:47.839><c> to</c><00:12:48.160><c> you</c><00:12:48.320><c> know</c><00:12:48.399><c> add</c>

00:12:48.629 --> 00:12:48.639 align:start position:0%
partition and if we want to you know add
 

00:12:48.639 --> 00:12:50.710 align:start position:0%
partition and if we want to you know add
the<00:12:48.800><c> size</c><00:12:49.120><c> we</c><00:12:49.279><c> have</c><00:12:49.360><c> to</c><00:12:49.440><c> maintain</c><00:12:50.000><c> the</c><00:12:50.160><c> size</c>

00:12:50.710 --> 00:12:50.720 align:start position:0%
the size we have to maintain the size
 

00:12:50.720 --> 00:12:52.069 align:start position:0%
the size we have to maintain the size
and<00:12:50.800><c> we're</c><00:12:50.959><c> also</c><00:12:51.200><c> going</c><00:12:51.279><c> to</c><00:12:51.360><c> be</c><00:12:51.440><c> maintaining</c>

00:12:52.069 --> 00:12:52.079 align:start position:0%
and we're also going to be maintaining
 

00:12:52.079 --> 00:12:54.870 align:start position:0%
and we're also going to be maintaining
the<00:12:52.320><c> end</c><00:12:52.959><c> of</c><00:12:53.200><c> each</c><00:12:53.519><c> partition</c><00:12:54.320><c> so</c><00:12:54.480><c> initially</c>

00:12:54.870 --> 00:12:54.880 align:start position:0%
the end of each partition so initially
 

00:12:54.880 --> 00:12:57.509 align:start position:0%
the end of each partition so initially
these<00:12:55.120><c> can</c><00:12:55.279><c> just</c><00:12:55.440><c> be</c><00:12:55.600><c> set</c><00:12:55.760><c> to</c><00:12:56.000><c> zero</c><00:12:56.639><c> now</c><00:12:57.040><c> as</c><00:12:57.279><c> we</c>

00:12:57.509 --> 00:12:57.519 align:start position:0%
these can just be set to zero now as we
 

00:12:57.519 --> 00:12:59.910 align:start position:0%
these can just be set to zero now as we
go<00:12:57.680><c> through</c><00:12:58.000><c> every</c><00:12:58.320><c> character</c><00:12:59.279><c> as</c><00:12:59.440><c> soon</c><00:12:59.600><c> as</c><00:12:59.760><c> we</c>

00:12:59.910 --> 00:12:59.920 align:start position:0%
go through every character as soon as we
 

00:12:59.920 --> 00:13:01.509 align:start position:0%
go through every character as soon as we
see<00:13:00.160><c> a</c><00:13:00.320><c> character</c><00:13:00.639><c> we</c><00:13:00.800><c> want</c><00:13:00.959><c> to</c><00:13:01.040><c> go</c><00:13:01.200><c> ahead</c><00:13:01.360><c> and</c>

00:13:01.509 --> 00:13:01.519 align:start position:0%
see a character we want to go ahead and
 

00:13:01.519 --> 00:13:04.230 align:start position:0%
see a character we want to go ahead and
increment<00:13:02.000><c> the</c><00:13:02.160><c> size</c><00:13:02.720><c> of</c><00:13:02.959><c> the</c><00:13:03.200><c> partition</c><00:13:04.079><c> we</c>

00:13:04.230 --> 00:13:04.240 align:start position:0%
increment the size of the partition we
 

00:13:04.240 --> 00:13:06.470 align:start position:0%
increment the size of the partition we
also<00:13:04.639><c> potentially</c><00:13:05.200><c> want</c><00:13:05.360><c> to</c><00:13:05.519><c> update</c><00:13:06.000><c> the</c><00:13:06.240><c> end</c>

00:13:06.470 --> 00:13:06.480 align:start position:0%
also potentially want to update the end
 

00:13:06.480 --> 00:13:09.990 align:start position:0%
also potentially want to update the end
of<00:13:06.560><c> the</c><00:13:06.720><c> partition</c><00:13:07.360><c> if</c><00:13:07.920><c> uh</c><00:13:08.399><c> the</c><00:13:08.639><c> last</c><00:13:08.959><c> index</c><00:13:09.519><c> of</c>

00:13:09.990 --> 00:13:10.000 align:start position:0%
of the partition if uh the last index of
 

00:13:10.000 --> 00:13:12.870 align:start position:0%
of the partition if uh the last index of
this<00:13:10.399><c> character</c><00:13:11.279><c> is</c><00:13:11.920><c> greater</c><00:13:12.399><c> than</c><00:13:12.639><c> the</c>

00:13:12.870 --> 00:13:12.880 align:start position:0%
this character is greater than the
 

00:13:12.880 --> 00:13:14.949 align:start position:0%
this character is greater than the
current<00:13:13.360><c> end</c><00:13:13.920><c> then</c><00:13:14.079><c> we</c><00:13:14.240><c> can</c><00:13:14.320><c> go</c><00:13:14.480><c> ahead</c><00:13:14.720><c> and</c>

00:13:14.949 --> 00:13:14.959 align:start position:0%
current end then we can go ahead and
 

00:13:14.959 --> 00:13:17.910 align:start position:0%
current end then we can go ahead and
update<00:13:15.360><c> the</c><00:13:15.440><c> current</c><00:13:15.839><c> end</c><00:13:16.399><c> to</c><00:13:16.880><c> uh</c><00:13:17.279><c> that</c><00:13:17.519><c> last</c>

00:13:17.910 --> 00:13:17.920 align:start position:0%
update the current end to uh that last
 

00:13:17.920 --> 00:13:19.829 align:start position:0%
update the current end to uh that last
index<00:13:18.399><c> you</c><00:13:18.560><c> can</c><00:13:18.720><c> write</c><00:13:18.959><c> it</c><00:13:19.120><c> out</c><00:13:19.279><c> like</c><00:13:19.440><c> an</c><00:13:19.600><c> if</c>

00:13:19.829 --> 00:13:19.839 align:start position:0%
index you can write it out like an if
 

00:13:19.839 --> 00:13:22.150 align:start position:0%
index you can write it out like an if
statement<00:13:20.240><c> like</c><00:13:20.480><c> this</c><00:13:20.959><c> but</c><00:13:21.200><c> to</c><00:13:21.440><c> save</c><00:13:21.760><c> a</c><00:13:21.839><c> line</c>

00:13:22.150 --> 00:13:22.160 align:start position:0%
statement like this but to save a line
 

00:13:22.160 --> 00:13:24.389 align:start position:0%
statement like this but to save a line
of<00:13:22.240><c> code</c><00:13:22.560><c> we</c><00:13:22.720><c> can</c><00:13:22.959><c> actually</c><00:13:23.279><c> just</c><00:13:23.519><c> use</c><00:13:23.760><c> the</c><00:13:24.000><c> max</c>

00:13:24.389 --> 00:13:24.399 align:start position:0%
of code we can actually just use the max
 

00:13:24.399 --> 00:13:26.550 align:start position:0%
of code we can actually just use the max
function<00:13:24.720><c> which</c><00:13:24.959><c> is</c><00:13:25.040><c> built</c><00:13:25.360><c> into</c><00:13:25.600><c> python</c><00:13:26.320><c> and</c>

00:13:26.550 --> 00:13:26.560 align:start position:0%
function which is built into python and
 

00:13:26.560 --> 00:13:29.030 align:start position:0%
function which is built into python and
most<00:13:26.800><c> languages</c><00:13:27.279><c> we</c><00:13:27.440><c> can</c><00:13:27.600><c> update</c><00:13:28.079><c> end</c><00:13:28.560><c> to</c><00:13:28.720><c> be</c>

00:13:29.030 --> 00:13:29.040 align:start position:0%
most languages we can update end to be
 

00:13:29.040 --> 00:13:32.310 align:start position:0%
most languages we can update end to be
the<00:13:29.200><c> max</c><00:13:29.680><c> of</c><00:13:29.839><c> itself</c><00:13:30.639><c> and</c><00:13:30.880><c> the</c><00:13:31.040><c> last</c><00:13:31.440><c> index</c><00:13:32.160><c> of</c>

00:13:32.310 --> 00:13:32.320 align:start position:0%
the max of itself and the last index of
 

00:13:32.320 --> 00:13:34.710 align:start position:0%
the max of itself and the last index of
the<00:13:32.480><c> current</c><00:13:32.800><c> character</c><00:13:33.360><c> that</c><00:13:33.680><c> we</c><00:13:34.160><c> are</c>

00:13:34.710 --> 00:13:34.720 align:start position:0%
the current character that we are
 

00:13:34.720 --> 00:13:36.710 align:start position:0%
the current character that we are
visiting<00:13:35.200><c> so</c><00:13:35.440><c> we</c><00:13:35.600><c> can</c><00:13:35.760><c> get</c><00:13:35.920><c> rid</c><00:13:36.079><c> of</c><00:13:36.160><c> these</c><00:13:36.480><c> two</c>

00:13:36.710 --> 00:13:36.720 align:start position:0%
visiting so we can get rid of these two
 

00:13:36.720 --> 00:13:39.189 align:start position:0%
visiting so we can get rid of these two
and<00:13:36.959><c> just</c><00:13:37.200><c> have</c><00:13:37.760><c> this</c><00:13:38.000><c> one</c><00:13:38.240><c> line</c><00:13:38.480><c> of</c><00:13:38.720><c> code</c>

00:13:39.189 --> 00:13:39.199 align:start position:0%
and just have this one line of code
 

00:13:39.199 --> 00:13:41.590 align:start position:0%
and just have this one line of code
remember<00:13:40.079><c> we</c><00:13:40.240><c> know</c><00:13:40.399><c> we</c><00:13:40.480><c> can</c><00:13:40.639><c> stop</c><00:13:40.880><c> a</c><00:13:41.040><c> partition</c>

00:13:41.590 --> 00:13:41.600 align:start position:0%
remember we know we can stop a partition
 

00:13:41.600 --> 00:13:43.590 align:start position:0%
remember we know we can stop a partition
if<00:13:41.680><c> we</c><00:13:41.920><c> actually</c><00:13:42.320><c> reach</c><00:13:42.639><c> the</c><00:13:42.959><c> end</c><00:13:43.279><c> of</c><00:13:43.440><c> the</c>

00:13:43.590 --> 00:13:43.600 align:start position:0%
if we actually reach the end of the
 

00:13:43.600 --> 00:13:46.949 align:start position:0%
if we actually reach the end of the
partition<00:13:44.000><c> so</c><00:13:44.160><c> if</c><00:13:44.399><c> i</c><00:13:44.880><c> equals</c><00:13:45.680><c> the</c><00:13:46.079><c> end</c><00:13:46.560><c> of</c><00:13:46.800><c> the</c>

00:13:46.949 --> 00:13:46.959 align:start position:0%
partition so if i equals the end of the
 

00:13:46.959 --> 00:13:48.949 align:start position:0%
partition so if i equals the end of the
partition<00:13:48.079><c> then</c>

00:13:48.949 --> 00:13:48.959 align:start position:0%
partition then
 

00:13:48.959 --> 00:13:50.870 align:start position:0%
partition then
we're<00:13:49.279><c> done</c><00:13:49.760><c> we're</c><00:13:50.000><c> going</c><00:13:50.079><c> to</c><00:13:50.160><c> go</c><00:13:50.320><c> ahead</c><00:13:50.560><c> and</c>

00:13:50.870 --> 00:13:50.880 align:start position:0%
we're done we're going to go ahead and
 

00:13:50.880 --> 00:13:55.110 align:start position:0%
we're done we're going to go ahead and
add<00:13:51.440><c> the</c><00:13:51.920><c> size</c><00:13:52.800><c> to</c><00:13:53.279><c> the</c><00:13:53.519><c> result</c><00:13:54.160><c> and</c><00:13:54.560><c> then</c><00:13:54.959><c> we</c>

00:13:55.110 --> 00:13:55.120 align:start position:0%
add the size to the result and then we
 

00:13:55.120 --> 00:13:57.590 align:start position:0%
add the size to the result and then we
can<00:13:55.279><c> go</c><00:13:55.440><c> ahead</c><00:13:55.680><c> and</c><00:13:55.839><c> reset</c><00:13:56.399><c> the</c><00:13:56.639><c> size</c><00:13:57.199><c> back</c>

00:13:57.590 --> 00:13:57.600 align:start position:0%
can go ahead and reset the size back
 

00:13:57.600 --> 00:14:00.150 align:start position:0%
can go ahead and reset the size back
down<00:13:58.160><c> to</c><00:13:58.480><c> zero</c><00:13:59.199><c> and</c><00:13:59.279><c> that's</c><00:13:59.600><c> all</c><00:13:59.760><c> we</c><00:13:59.920><c> really</c>

00:14:00.150 --> 00:14:00.160 align:start position:0%
down to zero and that's all we really
 

00:14:00.160 --> 00:14:02.069 align:start position:0%
down to zero and that's all we really
need<00:14:00.320><c> to</c><00:14:00.480><c> do</c><00:14:00.720><c> as</c><00:14:00.880><c> we</c><00:14:01.040><c> finish</c><00:14:01.360><c> our</c><00:14:01.519><c> partition</c><00:14:02.000><c> we</c>

00:14:02.069 --> 00:14:02.079 align:start position:0%
need to do as we finish our partition we
 

00:14:02.079 --> 00:14:03.829 align:start position:0%
need to do as we finish our partition we
don't<00:14:02.240><c> really</c><00:14:02.480><c> have</c><00:14:02.560><c> to</c><00:14:02.720><c> reset</c><00:14:03.120><c> the</c><00:14:03.360><c> end</c>

00:14:03.829 --> 00:14:03.839 align:start position:0%
don't really have to reset the end
 

00:14:03.839 --> 00:14:05.509 align:start position:0%
don't really have to reset the end
because<00:14:04.240><c> it's</c><00:14:04.399><c> not</c><00:14:04.560><c> really</c><00:14:04.880><c> necessary</c><00:14:05.440><c> in</c>

00:14:05.509 --> 00:14:05.519 align:start position:0%
because it's not really necessary in
 

00:14:05.519 --> 00:14:07.509 align:start position:0%
because it's not really necessary in
this<00:14:05.680><c> case</c><00:14:06.079><c> once</c><00:14:06.320><c> this</c><00:14:06.560><c> is</c><00:14:06.720><c> done</c>

00:14:07.509 --> 00:14:07.519 align:start position:0%
this case once this is done
 

00:14:07.519 --> 00:14:09.110 align:start position:0%
this case once this is done
our<00:14:07.680><c> result</c><00:14:08.079><c> will</c><00:14:08.240><c> have</c><00:14:08.399><c> been</c><00:14:08.639><c> built</c><00:14:08.880><c> so</c><00:14:09.040><c> we</c>

00:14:09.110 --> 00:14:09.120 align:start position:0%
our result will have been built so we
 

00:14:09.120 --> 00:14:11.269 align:start position:0%
our result will have been built so we
can<00:14:09.279><c> go</c><00:14:09.440><c> ahead</c><00:14:09.680><c> and</c><00:14:09.760><c> return</c><00:14:10.240><c> it</c><00:14:10.480><c> and</c><00:14:10.639><c> then</c><00:14:11.040><c> run</c>

00:14:11.269 --> 00:14:11.279 align:start position:0%
can go ahead and return it and then run
 

00:14:11.279 --> 00:14:13.350 align:start position:0%
can go ahead and return it and then run
this<00:14:11.519><c> to</c><00:14:11.680><c> make</c><00:14:11.839><c> sure</c><00:14:12.000><c> that</c><00:14:12.160><c> the</c><00:14:12.320><c> code</c><00:14:12.720><c> works</c>

00:14:13.350 --> 00:14:13.360 align:start position:0%
this to make sure that the code works
 

00:14:13.360 --> 00:14:14.870 align:start position:0%
this to make sure that the code works
and<00:14:13.519><c> as</c><00:14:13.680><c> you</c><00:14:13.760><c> can</c><00:14:13.839><c> see</c><00:14:14.000><c> on</c><00:14:14.079><c> the</c><00:14:14.240><c> left</c><00:14:14.480><c> yes</c><00:14:14.800><c> it</c>

00:14:14.870 --> 00:14:14.880 align:start position:0%
and as you can see on the left yes it
 

00:14:14.880 --> 00:14:16.629 align:start position:0%
and as you can see on the left yes it
works<00:14:15.199><c> and</c><00:14:15.279><c> it's</c><00:14:15.440><c> about</c><00:14:15.760><c> as</c><00:14:15.920><c> efficient</c><00:14:16.320><c> as</c><00:14:16.480><c> we</c>

00:14:16.629 --> 00:14:16.639 align:start position:0%
works and it's about as efficient as we
 

00:14:16.639 --> 00:14:18.629 align:start position:0%
works and it's about as efficient as we
can<00:14:16.800><c> get</c><00:14:17.040><c> this</c><00:14:17.279><c> problem</c><00:14:17.600><c> to</c><00:14:17.760><c> be</c><00:14:18.000><c> so</c><00:14:18.160><c> i</c><00:14:18.399><c> really</c>

00:14:18.629 --> 00:14:18.639 align:start position:0%
can get this problem to be so i really
 

00:14:18.639 --> 00:14:20.550 align:start position:0%
can get this problem to be so i really
hope<00:14:18.800><c> that</c><00:14:18.959><c> this</c><00:14:19.120><c> was</c><00:14:19.279><c> helpful</c><00:14:19.760><c> if</c><00:14:19.920><c> it</c><00:14:20.079><c> was</c>

00:14:20.550 --> 00:14:20.560 align:start position:0%
hope that this was helpful if it was
 

00:14:20.560 --> 00:14:22.310 align:start position:0%
hope that this was helpful if it was
please<00:14:20.880><c> like</c><00:14:21.120><c> and</c><00:14:21.199><c> subscribe</c><00:14:21.760><c> it</c><00:14:21.920><c> supports</c>

00:14:22.310 --> 00:14:22.320 align:start position:0%
please like and subscribe it supports
 

00:14:22.320 --> 00:14:23.829 align:start position:0%
please like and subscribe it supports
the<00:14:22.399><c> channel</c><00:14:22.800><c> a</c><00:14:22.959><c> lot</c><00:14:23.120><c> consider</c><00:14:23.519><c> checking</c><00:14:23.760><c> out</c>

00:14:23.829 --> 00:14:23.839 align:start position:0%
the channel a lot consider checking out
 

00:14:23.839 --> 00:14:25.350 align:start position:0%
the channel a lot consider checking out
my<00:14:24.000><c> patreon</c><00:14:24.480><c> where</c><00:14:24.639><c> you</c><00:14:24.720><c> can</c><00:14:24.800><c> further</c><00:14:25.040><c> support</c>

00:14:25.350 --> 00:14:25.360 align:start position:0%
my patreon where you can further support
 

00:14:25.360 --> 00:14:27.030 align:start position:0%
my patreon where you can further support
the<00:14:25.519><c> channel</c><00:14:25.839><c> and</c><00:14:26.079><c> hopefully</c><00:14:26.560><c> i'll</c><00:14:26.720><c> see</c><00:14:26.880><c> you</c>

00:14:27.030 --> 00:14:27.040 align:start position:0%
the channel and hopefully i'll see you
 

00:14:27.040 --> 00:14:30.720 align:start position:0%
the channel and hopefully i'll see you
pretty<00:14:27.279><c> soon</c><00:14:27.760><c> thanks</c><00:14:28.000><c> for</c><00:14:28.160><c> watching</c>

