WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.750 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.719><c> welcome</c><00:00:01.120><c> back</c><00:00:01.439><c> and</c><00:00:01.520><c> let's</c>

00:00:01.750 --> 00:00:01.760 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.760 --> 00:00:03.590 align:start position:0%
hey everyone welcome back and let's
write<00:00:02.000><c> some</c><00:00:02.159><c> more</c><00:00:02.399><c> neat</c><00:00:02.560><c> code</c><00:00:02.879><c> today</c><00:00:03.120><c> so</c><00:00:03.280><c> today</c>

00:00:03.590 --> 00:00:03.600 align:start position:0%
write some more neat code today so today
 

00:00:03.600 --> 00:00:06.230 align:start position:0%
write some more neat code today so today
let's<00:00:03.760><c> solve</c><00:00:04.000><c> the</c><00:00:04.240><c> problem</c><00:00:04.720><c> subsets</c><00:00:05.440><c> 2.</c><00:00:06.000><c> we</c>

00:00:06.230 --> 00:00:06.240 align:start position:0%
let's solve the problem subsets 2. we
 

00:00:06.240 --> 00:00:08.629 align:start position:0%
let's solve the problem subsets 2. we
did<00:00:06.560><c> solve</c><00:00:06.879><c> the</c><00:00:07.040><c> first</c><00:00:07.359><c> one</c><00:00:07.680><c> of</c><00:00:07.839><c> this</c><00:00:08.320><c> and</c><00:00:08.480><c> that</c>

00:00:08.629 --> 00:00:08.639 align:start position:0%
did solve the first one of this and that
 

00:00:08.639 --> 00:00:10.230 align:start position:0%
did solve the first one of this and that
was<00:00:08.720><c> actually</c><00:00:09.040><c> a</c><00:00:09.200><c> long</c><00:00:09.440><c> time</c><00:00:09.679><c> ago</c><00:00:09.920><c> and</c><00:00:10.000><c> people</c>

00:00:10.230 --> 00:00:10.240 align:start position:0%
was actually a long time ago and people
 

00:00:10.240 --> 00:00:11.910 align:start position:0%
was actually a long time ago and people
have<00:00:10.320><c> been</c><00:00:10.480><c> requesting</c><00:00:11.040><c> i</c><00:00:11.120><c> solved</c><00:00:11.440><c> this</c><00:00:11.679><c> one</c>

00:00:11.910 --> 00:00:11.920 align:start position:0%
have been requesting i solved this one
 

00:00:11.920 --> 00:00:14.230 align:start position:0%
have been requesting i solved this one
as<00:00:12.080><c> well</c><00:00:12.320><c> so</c><00:00:12.480><c> let's</c><00:00:12.719><c> do</c><00:00:12.880><c> it</c><00:00:13.040><c> today</c><00:00:13.840><c> the</c><00:00:14.000><c> first</c>

00:00:14.230 --> 00:00:14.240 align:start position:0%
as well so let's do it today the first
 

00:00:14.240 --> 00:00:16.150 align:start position:0%
as well so let's do it today the first
one<00:00:14.400><c> is</c><00:00:14.559><c> actually</c><00:00:14.880><c> very</c><00:00:15.280><c> similar</c><00:00:15.679><c> to</c><00:00:15.839><c> this</c><00:00:15.920><c> one</c>

00:00:16.150 --> 00:00:16.160 align:start position:0%
one is actually very similar to this one
 

00:00:16.160 --> 00:00:19.269 align:start position:0%
one is actually very similar to this one
the<00:00:16.400><c> only</c><00:00:16.880><c> difference</c><00:00:17.359><c> is</c><00:00:18.000><c> that</c><00:00:18.560><c> in</c><00:00:18.720><c> this</c><00:00:18.960><c> case</c>

00:00:19.269 --> 00:00:19.279 align:start position:0%
the only difference is that in this case
 

00:00:19.279 --> 00:00:21.590 align:start position:0%
the only difference is that in this case
the<00:00:19.520><c> input</c><00:00:19.920><c> array</c><00:00:20.320><c> that</c><00:00:20.480><c> we're</c><00:00:20.640><c> given</c><00:00:21.279><c> can</c>

00:00:21.590 --> 00:00:21.600 align:start position:0%
the input array that we're given can
 

00:00:21.600 --> 00:00:24.390 align:start position:0%
the input array that we're given can
contain<00:00:22.240><c> some</c><00:00:22.560><c> duplicate</c><00:00:23.199><c> values</c><00:00:23.920><c> now</c><00:00:24.160><c> our</c>

00:00:24.390 --> 00:00:24.400 align:start position:0%
contain some duplicate values now our
 

00:00:24.400 --> 00:00:26.870 align:start position:0%
contain some duplicate values now our
job<00:00:24.720><c> is</c><00:00:24.880><c> still</c><00:00:25.119><c> the</c><00:00:25.279><c> same</c><00:00:25.599><c> we</c><00:00:25.840><c> want</c><00:00:26.080><c> to</c><00:00:26.240><c> return</c>

00:00:26.870 --> 00:00:26.880 align:start position:0%
job is still the same we want to return
 

00:00:26.880 --> 00:00:30.470 align:start position:0%
job is still the same we want to return
all<00:00:27.199><c> possible</c><00:00:27.920><c> subsets</c><00:00:28.880><c> we</c><00:00:29.119><c> can</c><00:00:29.679><c> from</c><00:00:30.080><c> this</c>

00:00:30.470 --> 00:00:30.480 align:start position:0%
all possible subsets we can from this
 

00:00:30.480 --> 00:00:33.110 align:start position:0%
all possible subsets we can from this
input<00:00:30.880><c> array</c><00:00:31.199><c> nums</c><00:00:31.840><c> but</c><00:00:32.239><c> since</c><00:00:32.559><c> we</c><00:00:32.719><c> do</c><00:00:32.880><c> have</c>

00:00:33.110 --> 00:00:33.120 align:start position:0%
input array nums but since we do have
 

00:00:33.120 --> 00:00:35.510 align:start position:0%
input array nums but since we do have
duplicate<00:00:33.680><c> values</c><00:00:34.480><c> it's</c><00:00:34.719><c> going</c><00:00:34.800><c> to</c><00:00:34.880><c> be</c><00:00:35.040><c> tricky</c>

00:00:35.510 --> 00:00:35.520 align:start position:0%
duplicate values it's going to be tricky
 

00:00:35.520 --> 00:00:39.270 align:start position:0%
duplicate values it's going to be tricky
for<00:00:35.840><c> us</c><00:00:36.160><c> to</c><00:00:36.480><c> not</c><00:00:36.719><c> have</c><00:00:37.200><c> any</c><00:00:37.600><c> duplicate</c><00:00:38.399><c> subsets</c>

00:00:39.270 --> 00:00:39.280 align:start position:0%
for us to not have any duplicate subsets
 

00:00:39.280 --> 00:00:41.830 align:start position:0%
for us to not have any duplicate subsets
in<00:00:39.680><c> our</c><00:00:40.000><c> result</c><00:00:40.719><c> the</c><00:00:40.879><c> good</c><00:00:41.040><c> thing</c><00:00:41.200><c> is</c><00:00:41.360><c> we</c><00:00:41.600><c> can</c>

00:00:41.830 --> 00:00:41.840 align:start position:0%
in our result the good thing is we can
 

00:00:41.840 --> 00:00:43.990 align:start position:0%
in our result the good thing is we can
return<00:00:42.160><c> the</c><00:00:42.320><c> solution</c><00:00:42.800><c> in</c><00:00:43.040><c> any</c><00:00:43.280><c> order</c><00:00:43.680><c> so</c>

00:00:43.990 --> 00:00:44.000 align:start position:0%
return the solution in any order so
 

00:00:44.000 --> 00:00:46.150 align:start position:0%
return the solution in any order so
that's<00:00:44.399><c> good</c><00:00:44.879><c> but</c><00:00:45.039><c> let's</c><00:00:45.200><c> take</c><00:00:45.440><c> a</c><00:00:45.520><c> look</c><00:00:45.760><c> at</c><00:00:46.000><c> an</c>

00:00:46.150 --> 00:00:46.160 align:start position:0%
that's good but let's take a look at an
 

00:00:46.160 --> 00:00:49.110 align:start position:0%
that's good but let's take a look at an
example<00:00:46.559><c> we</c><00:00:46.719><c> have</c><00:00:46.960><c> one</c><00:00:47.280><c> two</c><00:00:47.680><c> two</c><00:00:48.239><c> now</c><00:00:48.480><c> a</c><00:00:48.640><c> subset</c>

00:00:49.110 --> 00:00:49.120 align:start position:0%
example we have one two two now a subset
 

00:00:49.120 --> 00:00:51.670 align:start position:0%
example we have one two two now a subset
of<00:00:49.360><c> one</c><00:00:49.600><c> two</c><00:00:49.840><c> two</c><00:00:50.079><c> is</c><00:00:50.239><c> basically</c><00:00:51.120><c> uh</c><00:00:51.360><c> some</c>

00:00:51.670 --> 00:00:51.680 align:start position:0%
of one two two is basically uh some
 

00:00:51.680 --> 00:00:53.830 align:start position:0%
of one two two is basically uh some
values<00:00:52.079><c> from</c><00:00:52.320><c> here</c><00:00:52.559><c> where</c><00:00:52.800><c> the</c><00:00:53.039><c> order</c><00:00:53.520><c> is</c>

00:00:53.830 --> 00:00:53.840 align:start position:0%
values from here where the order is
 

00:00:53.840 --> 00:00:56.229 align:start position:0%
values from here where the order is
preserved<00:00:54.800><c> for</c><00:00:54.960><c> the</c><00:00:55.120><c> most</c><00:00:55.360><c> part</c><00:00:55.680><c> so</c><00:00:56.000><c> you</c><00:00:56.079><c> know</c>

00:00:56.229 --> 00:00:56.239 align:start position:0%
preserved for the most part so you know
 

00:00:56.239 --> 00:00:58.229 align:start position:0%
preserved for the most part so you know
we<00:00:56.320><c> could</c><00:00:56.480><c> just</c><00:00:56.640><c> take</c><00:00:56.800><c> the</c><00:00:56.960><c> value</c><00:00:57.360><c> one</c><00:00:57.920><c> that's</c>

00:00:58.229 --> 00:00:58.239 align:start position:0%
we could just take the value one that's
 

00:00:58.239 --> 00:01:00.310 align:start position:0%
we could just take the value one that's
a<00:00:58.320><c> subset</c><00:00:58.719><c> we</c><00:00:58.879><c> could</c><00:00:58.960><c> take</c><00:00:59.199><c> the</c><00:00:59.280><c> second</c><00:00:59.600><c> value</c>

00:01:00.310 --> 00:01:00.320 align:start position:0%
a subset we could take the second value
 

00:01:00.320 --> 00:01:01.189 align:start position:0%
a subset we could take the second value
two

00:01:01.189 --> 00:01:01.199 align:start position:0%
two
 

00:01:01.199 --> 00:01:03.750 align:start position:0%
two
that's<00:01:01.600><c> a</c><00:01:01.680><c> subset</c><00:01:02.239><c> as</c><00:01:02.640><c> well</c><00:01:03.199><c> we</c><00:01:03.359><c> could</c><00:01:03.600><c> take</c>

00:01:03.750 --> 00:01:03.760 align:start position:0%
that's a subset as well we could take
 

00:01:03.760 --> 00:01:06.710 align:start position:0%
that's a subset as well we could take
the<00:01:04.080><c> third</c><00:01:04.479><c> value</c><00:01:05.040><c> by</c><00:01:05.199><c> itself</c><00:01:05.840><c> which</c><00:01:06.080><c> is</c><00:01:06.240><c> also</c>

00:01:06.710 --> 00:01:06.720 align:start position:0%
the third value by itself which is also
 

00:01:06.720 --> 00:01:08.950 align:start position:0%
the third value by itself which is also
two<00:01:07.200><c> but</c><00:01:07.439><c> here</c><00:01:07.680><c> you</c><00:01:07.840><c> can</c><00:01:08.080><c> see</c><00:01:08.479><c> we</c><00:01:08.640><c> have</c><00:01:08.880><c> a</c>

00:01:08.950 --> 00:01:08.960 align:start position:0%
two but here you can see we have a
 

00:01:08.960 --> 00:01:10.950 align:start position:0%
two but here you can see we have a
duplicate<00:01:09.439><c> right</c><00:01:09.840><c> these</c><00:01:10.000><c> are</c><00:01:10.159><c> both</c><00:01:10.320><c> the</c><00:01:10.479><c> same</c>

00:01:10.950 --> 00:01:10.960 align:start position:0%
duplicate right these are both the same
 

00:01:10.960 --> 00:01:13.109 align:start position:0%
duplicate right these are both the same
we<00:01:11.119><c> can't</c><00:01:11.520><c> include</c><00:01:12.000><c> both</c><00:01:12.240><c> of</c><00:01:12.320><c> them</c><00:01:12.560><c> so</c><00:01:12.960><c> you</c>

00:01:13.109 --> 00:01:13.119 align:start position:0%
we can't include both of them so you
 

00:01:13.119 --> 00:01:14.870 align:start position:0%
we can't include both of them so you
know<00:01:13.280><c> we</c><00:01:13.360><c> don't</c><00:01:13.680><c> include</c><00:01:13.920><c> the</c><00:01:14.080><c> second</c><00:01:14.320><c> one</c><00:01:14.720><c> and</c>

00:01:14.870 --> 00:01:14.880 align:start position:0%
know we don't include the second one and
 

00:01:14.880 --> 00:01:17.030 align:start position:0%
know we don't include the second one and
by<00:01:15.040><c> the</c><00:01:15.200><c> way</c><00:01:15.439><c> even</c><00:01:15.680><c> if</c><00:01:15.759><c> we</c><00:01:15.920><c> don't</c><00:01:16.240><c> choose</c><00:01:16.720><c> any</c>

00:01:17.030 --> 00:01:17.040 align:start position:0%
by the way even if we don't choose any
 

00:01:17.040 --> 00:01:19.109 align:start position:0%
by the way even if we don't choose any
of<00:01:17.200><c> these</c><00:01:17.920><c> for</c><00:01:18.080><c> example</c><00:01:18.400><c> if</c><00:01:18.479><c> we</c><00:01:18.640><c> just</c><00:01:18.799><c> have</c><00:01:18.960><c> an</c>

00:01:19.109 --> 00:01:19.119 align:start position:0%
of these for example if we just have an
 

00:01:19.119 --> 00:01:20.390 align:start position:0%
of these for example if we just have an
empty<00:01:19.439><c> list</c>

00:01:20.390 --> 00:01:20.400 align:start position:0%
empty list
 

00:01:20.400 --> 00:01:23.429 align:start position:0%
empty list
that<00:01:20.640><c> is</c><00:01:20.880><c> still</c><00:01:21.520><c> a</c><00:01:22.000><c> valid</c><00:01:22.479><c> subset</c><00:01:23.040><c> as</c><00:01:23.200><c> you</c><00:01:23.280><c> can</c>

00:01:23.429 --> 00:01:23.439 align:start position:0%
that is still a valid subset as you can
 

00:01:23.439 --> 00:01:25.830 align:start position:0%
that is still a valid subset as you can
see<00:01:23.680><c> in</c><00:01:23.840><c> the</c><00:01:24.080><c> output</c><00:01:24.640><c> over</c><00:01:24.960><c> here</c><00:01:25.520><c> we</c><00:01:25.680><c> could</c>

00:01:25.830 --> 00:01:25.840 align:start position:0%
see in the output over here we could
 

00:01:25.840 --> 00:01:28.070 align:start position:0%
see in the output over here we could
also<00:01:26.159><c> take</c><00:01:26.400><c> the</c><00:01:26.560><c> first</c><00:01:27.040><c> one</c><00:01:27.439><c> and</c><00:01:27.680><c> take</c><00:01:27.920><c> the</c>

00:01:28.070 --> 00:01:28.080 align:start position:0%
also take the first one and take the
 

00:01:28.080 --> 00:01:30.710 align:start position:0%
also take the first one and take the
first<00:01:28.400><c> two</c><00:01:28.640><c> which</c><00:01:28.799><c> would</c><00:01:28.960><c> give</c><00:01:29.200><c> us</c><00:01:29.520><c> one</c><00:01:30.000><c> two</c><00:01:30.560><c> we</c>

00:01:30.710 --> 00:01:30.720 align:start position:0%
first two which would give us one two we
 

00:01:30.720 --> 00:01:32.310 align:start position:0%
first two which would give us one two we
could<00:01:30.880><c> take</c><00:01:31.040><c> the</c><00:01:31.200><c> first</c><00:01:31.520><c> one</c><00:01:31.759><c> and</c><00:01:31.920><c> then</c><00:01:32.079><c> take</c>

00:01:32.310 --> 00:01:32.320 align:start position:0%
could take the first one and then take
 

00:01:32.320 --> 00:01:34.310 align:start position:0%
could take the first one and then take
the<00:01:32.560><c> second</c><00:01:33.040><c> two</c><00:01:33.520><c> but</c><00:01:33.680><c> that</c><00:01:33.840><c> would</c><00:01:34.000><c> be</c><00:01:34.159><c> the</c>

00:01:34.310 --> 00:01:34.320 align:start position:0%
the second two but that would be the
 

00:01:34.320 --> 00:01:36.069 align:start position:0%
the second two but that would be the
exact<00:01:34.640><c> same</c><00:01:34.960><c> that</c><00:01:35.119><c> would</c><00:01:35.200><c> be</c><00:01:35.360><c> one</c><00:01:35.600><c> two</c><00:01:35.840><c> as</c><00:01:35.920><c> well</c>

00:01:36.069 --> 00:01:36.079 align:start position:0%
exact same that would be one two as well
 

00:01:36.079 --> 00:01:37.990 align:start position:0%
exact same that would be one two as well
so<00:01:36.240><c> we're</c><00:01:36.400><c> not</c><00:01:36.479><c> going</c><00:01:36.640><c> to</c><00:01:36.799><c> keep</c><00:01:37.360><c> both</c><00:01:37.600><c> of</c><00:01:37.680><c> them</c>

00:01:37.990 --> 00:01:38.000 align:start position:0%
so we're not going to keep both of them
 

00:01:38.000 --> 00:01:39.670 align:start position:0%
so we're not going to keep both of them
so<00:01:38.159><c> you're</c><00:01:38.400><c> starting</c><00:01:38.720><c> to</c><00:01:38.799><c> get</c><00:01:38.960><c> the</c><00:01:39.119><c> idea</c><00:01:39.520><c> of</c>

00:01:39.670 --> 00:01:39.680 align:start position:0%
so you're starting to get the idea of
 

00:01:39.680 --> 00:01:41.910 align:start position:0%
so you're starting to get the idea of
you<00:01:39.840><c> know</c><00:01:40.079><c> subsets</c><00:01:40.640><c> in</c><00:01:40.720><c> general</c><00:01:41.200><c> and</c><00:01:41.520><c> what</c><00:01:41.680><c> the</c>

00:01:41.910 --> 00:01:41.920 align:start position:0%
you know subsets in general and what the
 

00:01:41.920 --> 00:01:43.749 align:start position:0%
you know subsets in general and what the
problem<00:01:42.320><c> here</c><00:01:42.560><c> is</c><00:01:42.720><c> going</c><00:01:42.880><c> to</c><00:01:43.040><c> be</c><00:01:43.200><c> for</c><00:01:43.439><c> us</c><00:01:43.600><c> to</c>

00:01:43.749 --> 00:01:43.759 align:start position:0%
problem here is going to be for us to
 

00:01:43.759 --> 00:01:45.990 align:start position:0%
problem here is going to be for us to
not<00:01:44.079><c> include</c><00:01:44.560><c> any</c><00:01:44.880><c> duplicates</c><00:01:45.520><c> in</c><00:01:45.759><c> our</c>

00:01:45.990 --> 00:01:46.000 align:start position:0%
not include any duplicates in our
 

00:01:46.000 --> 00:01:47.670 align:start position:0%
not include any duplicates in our
results<00:01:46.720><c> when</c><00:01:46.880><c> we</c><00:01:47.040><c> don't</c><00:01:47.200><c> include</c><00:01:47.520><c> any</c>

00:01:47.670 --> 00:01:47.680 align:start position:0%
results when we don't include any
 

00:01:47.680 --> 00:01:49.830 align:start position:0%
results when we don't include any
duplicates<00:01:48.159><c> we</c><00:01:48.320><c> have</c><00:01:48.560><c> six</c><00:01:48.960><c> different</c><00:01:49.360><c> subsets</c>

00:01:49.830 --> 00:01:49.840 align:start position:0%
duplicates we have six different subsets
 

00:01:49.840 --> 00:01:51.590 align:start position:0%
duplicates we have six different subsets
that<00:01:50.000><c> we</c><00:01:50.159><c> can</c><00:01:50.399><c> create</c><00:01:51.040><c> and</c><00:01:51.200><c> before</c><00:01:51.439><c> we</c>

00:01:51.590 --> 00:01:51.600 align:start position:0%
that we can create and before we
 

00:01:51.600 --> 00:01:53.109 align:start position:0%
that we can create and before we
actually<00:01:51.840><c> get</c><00:01:52.000><c> into</c><00:01:52.240><c> the</c><00:01:52.320><c> assertion</c><00:01:52.960><c> you</c>

00:01:53.109 --> 00:01:53.119 align:start position:0%
actually get into the assertion you
 

00:01:53.119 --> 00:01:54.870 align:start position:0%
actually get into the assertion you
might<00:01:53.280><c> be</c><00:01:53.439><c> thinking</c><00:01:53.840><c> okay</c><00:01:54.159><c> maybe</c><00:01:54.479><c> dynamic</c>

00:01:54.870 --> 00:01:54.880 align:start position:0%
might be thinking okay maybe dynamic
 

00:01:54.880 --> 00:01:56.789 align:start position:0%
might be thinking okay maybe dynamic
programming<00:01:55.439><c> is</c><00:01:55.520><c> something</c><00:01:55.840><c> we</c><00:01:55.920><c> can</c><00:01:56.159><c> do</c><00:01:56.640><c> and</c>

00:01:56.789 --> 00:01:56.799 align:start position:0%
programming is something we can do and
 

00:01:56.799 --> 00:01:59.270 align:start position:0%
programming is something we can do and
that<00:01:57.119><c> would</c><00:01:57.360><c> be</c><00:01:57.680><c> possible</c><00:01:58.640><c> but</c><00:01:58.799><c> i</c><00:01:59.040><c> know</c>

00:01:59.270 --> 00:01:59.280 align:start position:0%
that would be possible but i know
 

00:01:59.280 --> 00:02:00.870 align:start position:0%
that would be possible but i know
immediately<00:01:59.840><c> by</c><00:02:00.079><c> looking</c><00:02:00.320><c> at</c><00:02:00.399><c> this</c><00:02:00.560><c> problem</c>

00:02:00.870 --> 00:02:00.880 align:start position:0%
immediately by looking at this problem
 

00:02:00.880 --> 00:02:03.109 align:start position:0%
immediately by looking at this problem
that<00:02:00.960><c> we</c><00:02:01.200><c> can't</c><00:02:01.439><c> do</c><00:02:01.840><c> dynamic</c><00:02:02.320><c> programming</c><00:02:02.960><c> and</c>

00:02:03.109 --> 00:02:03.119 align:start position:0%
that we can't do dynamic programming and
 

00:02:03.119 --> 00:02:04.550 align:start position:0%
that we can't do dynamic programming and
the<00:02:03.200><c> reason</c><00:02:03.520><c> is</c><00:02:03.759><c> because</c><00:02:03.920><c> we're</c><00:02:04.079><c> not</c><00:02:04.240><c> really</c>

00:02:04.550 --> 00:02:04.560 align:start position:0%
the reason is because we're not really
 

00:02:04.560 --> 00:02:06.389 align:start position:0%
the reason is because we're not really
counting<00:02:05.040><c> subsets</c><00:02:05.680><c> or</c><00:02:05.840><c> anything</c><00:02:06.079><c> like</c><00:02:06.240><c> that</c>

00:02:06.389 --> 00:02:06.399 align:start position:0%
counting subsets or anything like that
 

00:02:06.399 --> 00:02:09.350 align:start position:0%
counting subsets or anything like that
we're<00:02:06.640><c> actually</c><00:02:06.960><c> creating</c><00:02:07.680><c> the</c><00:02:07.840><c> subsets</c><00:02:08.720><c> so</c>

00:02:09.350 --> 00:02:09.360 align:start position:0%
we're actually creating the subsets so
 

00:02:09.360 --> 00:02:11.589 align:start position:0%
we're actually creating the subsets so
even<00:02:09.599><c> if</c><00:02:09.679><c> we</c><00:02:09.920><c> found</c><00:02:10.239><c> some</c><00:02:10.399><c> kind</c><00:02:10.560><c> of</c><00:02:10.800><c> shortcut</c>

00:02:11.589 --> 00:02:11.599 align:start position:0%
even if we found some kind of shortcut
 

00:02:11.599 --> 00:02:13.270 align:start position:0%
even if we found some kind of shortcut
it<00:02:11.760><c> wouldn't</c><00:02:12.080><c> really</c><00:02:12.400><c> make</c><00:02:12.640><c> this</c><00:02:12.879><c> any</c><00:02:13.040><c> more</c>

00:02:13.270 --> 00:02:13.280 align:start position:0%
it wouldn't really make this any more
 

00:02:13.280 --> 00:02:14.790 align:start position:0%
it wouldn't really make this any more
efficient<00:02:13.760><c> because</c><00:02:14.000><c> we</c><00:02:14.160><c> still</c><00:02:14.400><c> have</c><00:02:14.560><c> to</c>

00:02:14.790 --> 00:02:14.800 align:start position:0%
efficient because we still have to
 

00:02:14.800 --> 00:02:18.150 align:start position:0%
efficient because we still have to
create<00:02:15.599><c> all</c><00:02:15.920><c> of</c><00:02:16.239><c> these</c><00:02:16.720><c> subsets</c><00:02:17.599><c> and</c><00:02:17.760><c> how</c><00:02:17.920><c> many</c>

00:02:18.150 --> 00:02:18.160 align:start position:0%
create all of these subsets and how many
 

00:02:18.160 --> 00:02:20.470 align:start position:0%
create all of these subsets and how many
possible<00:02:18.560><c> subsets</c><00:02:19.040><c> could</c><00:02:19.200><c> we</c><00:02:19.440><c> have</c><00:02:19.920><c> well</c><00:02:20.239><c> to</c>

00:02:20.470 --> 00:02:20.480 align:start position:0%
possible subsets could we have well to
 

00:02:20.480 --> 00:02:23.110 align:start position:0%
possible subsets could we have well to
generate<00:02:20.879><c> a</c><00:02:20.959><c> subset</c><00:02:21.440><c> for</c><00:02:21.599><c> each</c><00:02:21.920><c> value</c><00:02:22.720><c> we</c><00:02:22.879><c> can</c>

00:02:23.110 --> 00:02:23.120 align:start position:0%
generate a subset for each value we can
 

00:02:23.120 --> 00:02:25.110 align:start position:0%
generate a subset for each value we can
either<00:02:23.360><c> choose</c><00:02:23.599><c> to</c><00:02:23.760><c> include</c><00:02:24.160><c> this</c><00:02:24.319><c> value</c><00:02:24.800><c> or</c>

00:02:25.110 --> 00:02:25.120 align:start position:0%
either choose to include this value or
 

00:02:25.120 --> 00:02:27.190 align:start position:0%
either choose to include this value or
not<00:02:25.440><c> include</c><00:02:25.760><c> that</c><00:02:25.920><c> value</c><00:02:26.319><c> so</c><00:02:26.480><c> for</c><00:02:26.640><c> each</c><00:02:26.800><c> value</c>

00:02:27.190 --> 00:02:27.200 align:start position:0%
not include that value so for each value
 

00:02:27.200 --> 00:02:29.350 align:start position:0%
not include that value so for each value
we<00:02:27.360><c> have</c><00:02:27.520><c> two</c><00:02:27.760><c> choices</c><00:02:28.400><c> now</c><00:02:28.560><c> how</c><00:02:28.720><c> many</c><00:02:28.959><c> values</c>

00:02:29.350 --> 00:02:29.360 align:start position:0%
we have two choices now how many values
 

00:02:29.360 --> 00:02:30.869 align:start position:0%
we have two choices now how many values
do<00:02:29.440><c> we</c><00:02:29.520><c> have</c><00:02:29.680><c> in</c><00:02:29.840><c> our</c><00:02:30.000><c> input</c><00:02:30.239><c> let's</c><00:02:30.480><c> just</c><00:02:30.640><c> call</c>

00:02:30.869 --> 00:02:30.879 align:start position:0%
do we have in our input let's just call
 

00:02:30.879 --> 00:02:33.350 align:start position:0%
do we have in our input let's just call
it<00:02:31.120><c> n</c><00:02:31.440><c> so</c><00:02:31.599><c> let's</c><00:02:31.840><c> say</c><00:02:32.000><c> 2</c><00:02:32.239><c> to</c><00:02:32.319><c> the</c><00:02:32.400><c> power</c><00:02:32.720><c> of</c><00:02:32.959><c> n</c><00:02:33.200><c> is</c>

00:02:33.350 --> 00:02:33.360 align:start position:0%
it n so let's say 2 to the power of n is
 

00:02:33.360 --> 00:02:35.990 align:start position:0%
it n so let's say 2 to the power of n is
how<00:02:33.599><c> many</c><00:02:34.000><c> subsets</c><00:02:34.480><c> we're</c><00:02:34.720><c> going</c><00:02:34.879><c> to</c><00:02:35.040><c> have</c><00:02:35.599><c> now</c>

00:02:35.990 --> 00:02:36.000 align:start position:0%
how many subsets we're going to have now
 

00:02:36.000 --> 00:02:38.470 align:start position:0%
how many subsets we're going to have now
how<00:02:36.319><c> long</c><00:02:36.640><c> is</c><00:02:36.800><c> each</c><00:02:37.040><c> subset</c><00:02:37.440><c> going</c><00:02:37.599><c> to</c><00:02:37.680><c> be</c><00:02:38.160><c> well</c>

00:02:38.470 --> 00:02:38.480 align:start position:0%
how long is each subset going to be well
 

00:02:38.480 --> 00:02:40.390 align:start position:0%
how long is each subset going to be well
at<00:02:38.720><c> most</c><00:02:38.959><c> it</c><00:02:39.040><c> could</c><00:02:39.200><c> be</c><00:02:39.360><c> of</c><00:02:39.519><c> length</c><00:02:39.920><c> n</c><00:02:40.160><c> so</c><00:02:40.319><c> we're</c>

00:02:40.390 --> 00:02:40.400 align:start position:0%
at most it could be of length n so we're
 

00:02:40.400 --> 00:02:41.910 align:start position:0%
at most it could be of length n so we're
going<00:02:40.480><c> to</c><00:02:40.560><c> take</c><00:02:40.720><c> the</c><00:02:40.879><c> number</c><00:02:41.120><c> of</c><00:02:41.280><c> subsets</c>

00:02:41.910 --> 00:02:41.920 align:start position:0%
going to take the number of subsets
 

00:02:41.920 --> 00:02:43.910 align:start position:0%
going to take the number of subsets
multiplied<00:02:42.480><c> by</c><00:02:42.640><c> the</c><00:02:42.800><c> length</c><00:02:43.040><c> of</c><00:02:43.120><c> the</c><00:02:43.280><c> subset</c>

00:02:43.910 --> 00:02:43.920 align:start position:0%
multiplied by the length of the subset
 

00:02:43.920 --> 00:02:45.990 align:start position:0%
multiplied by the length of the subset
so<00:02:44.160><c> this</c><00:02:44.400><c> is</c><00:02:44.560><c> going</c><00:02:44.720><c> to</c><00:02:44.959><c> be</c><00:02:45.120><c> the</c><00:02:45.360><c> overall</c><00:02:45.760><c> time</c>

00:02:45.990 --> 00:02:46.000 align:start position:0%
so this is going to be the overall time
 

00:02:46.000 --> 00:02:48.309 align:start position:0%
so this is going to be the overall time
complexity<00:02:46.560><c> to</c><00:02:46.720><c> actually</c><00:02:47.200><c> generate</c><00:02:48.000><c> all</c><00:02:48.160><c> of</c>

00:02:48.309 --> 00:02:48.319 align:start position:0%
complexity to actually generate all of
 

00:02:48.319 --> 00:02:50.470 align:start position:0%
complexity to actually generate all of
these<00:02:48.560><c> subsets</c><00:02:49.280><c> notice</c><00:02:49.680><c> how</c><00:02:49.920><c> we</c><00:02:50.000><c> can</c><00:02:50.160><c> figure</c>

00:02:50.470 --> 00:02:50.480 align:start position:0%
these subsets notice how we can figure
 

00:02:50.480 --> 00:02:52.070 align:start position:0%
these subsets notice how we can figure
this<00:02:50.720><c> out</c><00:02:50.879><c> even</c><00:02:51.120><c> though</c><00:02:51.280><c> we</c><00:02:51.440><c> haven't</c><00:02:51.760><c> even</c>

00:02:52.070 --> 00:02:52.080 align:start position:0%
this out even though we haven't even
 

00:02:52.080 --> 00:02:54.229 align:start position:0%
this out even though we haven't even
solved<00:02:52.480><c> the</c><00:02:52.720><c> problem</c><00:02:53.120><c> yet</c><00:02:53.599><c> and</c><00:02:53.680><c> this</c><00:02:53.920><c> kind</c><00:02:54.080><c> of</c>

00:02:54.229 --> 00:02:54.239 align:start position:0%
solved the problem yet and this kind of
 

00:02:54.239 --> 00:02:56.070 align:start position:0%
solved the problem yet and this kind of
hints<00:02:54.560><c> to</c><00:02:54.720><c> you</c><00:02:54.959><c> how</c><00:02:55.200><c> we</c><00:02:55.440><c> are</c><00:02:55.519><c> going</c><00:02:55.680><c> to</c><00:02:55.840><c> solve</c>

00:02:56.070 --> 00:02:56.080 align:start position:0%
hints to you how we are going to solve
 

00:02:56.080 --> 00:02:58.070 align:start position:0%
hints to you how we are going to solve
this<00:02:56.319><c> problem</c><00:02:56.640><c> this</c><00:02:56.879><c> is</c><00:02:57.360><c> basically</c><00:02:57.760><c> a</c><00:02:57.840><c> brute</c>

00:02:58.070 --> 00:02:58.080 align:start position:0%
this problem this is basically a brute
 

00:02:58.080 --> 00:02:59.350 align:start position:0%
this problem this is basically a brute
force<00:02:58.319><c> solution</c><00:02:58.720><c> right</c><00:02:58.879><c> so</c><00:02:59.040><c> we're</c><00:02:59.200><c> going</c><00:02:59.280><c> to</c>

00:02:59.350 --> 00:02:59.360 align:start position:0%
force solution right so we're going to
 

00:02:59.360 --> 00:03:01.589 align:start position:0%
force solution right so we're going to
be<00:02:59.440><c> using</c><00:02:59.840><c> backtracking</c><00:03:00.800><c> okay</c><00:03:01.040><c> so</c><00:03:01.200><c> let's</c><00:03:01.440><c> get</c>

00:03:01.589 --> 00:03:01.599 align:start position:0%
be using backtracking okay so let's get
 

00:03:01.599 --> 00:03:03.670 align:start position:0%
be using backtracking okay so let's get
into<00:03:01.920><c> it</c><00:03:02.319><c> so</c><00:03:02.560><c> let's</c><00:03:02.720><c> take</c><00:03:02.959><c> a</c><00:03:03.040><c> look</c><00:03:03.280><c> at</c><00:03:03.440><c> an</c>

00:03:03.670 --> 00:03:03.680 align:start position:0%
into it so let's take a look at an
 

00:03:03.680 --> 00:03:05.589 align:start position:0%
into it so let's take a look at an
example<00:03:04.159><c> and</c><00:03:04.239><c> let's</c><00:03:04.480><c> just</c><00:03:04.800><c> start</c><00:03:05.120><c> with</c><00:03:05.360><c> the</c>

00:03:05.589 --> 00:03:05.599 align:start position:0%
example and let's just start with the
 

00:03:05.599 --> 00:03:07.750 align:start position:0%
example and let's just start with the
first<00:03:06.080><c> subset</c><00:03:06.640><c> solution</c><00:03:07.040><c> which</c><00:03:07.200><c> is</c><00:03:07.360><c> actually</c>

00:03:07.750 --> 00:03:07.760 align:start position:0%
first subset solution which is actually
 

00:03:07.760 --> 00:03:09.750 align:start position:0%
first subset solution which is actually
pretty<00:03:08.080><c> trivial</c><00:03:08.640><c> for</c><00:03:08.879><c> a</c><00:03:09.040><c> backtracking</c>

00:03:09.750 --> 00:03:09.760 align:start position:0%
pretty trivial for a backtracking
 

00:03:09.760 --> 00:03:12.309 align:start position:0%
pretty trivial for a backtracking
problem<00:03:10.480><c> remember</c><00:03:11.280><c> we</c><00:03:11.440><c> want</c><00:03:11.599><c> to</c><00:03:11.680><c> create</c><00:03:12.080><c> every</c>

00:03:12.309 --> 00:03:12.319 align:start position:0%
problem remember we want to create every
 

00:03:12.319 --> 00:03:14.309 align:start position:0%
problem remember we want to create every
single<00:03:12.720><c> possible</c><00:03:13.120><c> subset</c><00:03:13.599><c> so</c><00:03:13.760><c> for</c><00:03:14.000><c> each</c><00:03:14.159><c> one</c>

00:03:14.309 --> 00:03:14.319 align:start position:0%
single possible subset so for each one
 

00:03:14.319 --> 00:03:16.149 align:start position:0%
single possible subset so for each one
of<00:03:14.480><c> these</c><00:03:14.720><c> input</c><00:03:15.040><c> values</c><00:03:15.519><c> we</c><00:03:15.599><c> have</c><00:03:15.680><c> a</c><00:03:15.840><c> choice</c>

00:03:16.149 --> 00:03:16.159 align:start position:0%
of these input values we have a choice
 

00:03:16.159 --> 00:03:18.309 align:start position:0%
of these input values we have a choice
are<00:03:16.239><c> we</c><00:03:16.400><c> going</c><00:03:16.480><c> to</c><00:03:16.720><c> include</c><00:03:17.200><c> this</c><00:03:17.519><c> one</c><00:03:18.000><c> or</c><00:03:18.239><c> are</c>

00:03:18.309 --> 00:03:18.319 align:start position:0%
are we going to include this one or are
 

00:03:18.319 --> 00:03:20.229 align:start position:0%
are we going to include this one or are
we<00:03:18.560><c> not</c><00:03:18.720><c> going</c><00:03:18.879><c> to</c><00:03:19.040><c> include</c><00:03:19.360><c> this</c><00:03:19.599><c> one</c><00:03:19.920><c> so</c>

00:03:20.229 --> 00:03:20.239 align:start position:0%
we not going to include this one so
 

00:03:20.239 --> 00:03:21.990 align:start position:0%
we not going to include this one so
putting<00:03:20.560><c> it</c><00:03:20.640><c> more</c><00:03:20.879><c> simply</c><00:03:21.200><c> with</c><00:03:21.440><c> a</c><00:03:21.519><c> decision</c>

00:03:21.990 --> 00:03:22.000 align:start position:0%
putting it more simply with a decision
 

00:03:22.000 --> 00:03:24.070 align:start position:0%
putting it more simply with a decision
tree<00:03:22.720><c> you</c><00:03:22.879><c> know</c><00:03:22.959><c> for</c><00:03:23.120><c> the</c><00:03:23.200><c> first</c><00:03:23.519><c> decision</c><00:03:23.920><c> we</c>

00:03:24.070 --> 00:03:24.080 align:start position:0%
tree you know for the first decision we
 

00:03:24.080 --> 00:03:26.470 align:start position:0%
tree you know for the first decision we
have<00:03:24.720><c> we're</c><00:03:24.879><c> at</c><00:03:25.040><c> this</c><00:03:25.280><c> one</c><00:03:25.599><c> right</c><00:03:26.000><c> and</c><00:03:26.159><c> we</c><00:03:26.319><c> know</c>

00:03:26.470 --> 00:03:26.480 align:start position:0%
have we're at this one right and we know
 

00:03:26.480 --> 00:03:27.589 align:start position:0%
have we're at this one right and we know
that<00:03:26.640><c> because</c><00:03:26.879><c> we're</c><00:03:27.040><c> going</c><00:03:27.120><c> to</c><00:03:27.200><c> keep</c><00:03:27.360><c> track</c>

00:03:27.589 --> 00:03:27.599 align:start position:0%
that because we're going to keep track
 

00:03:27.599 --> 00:03:29.350 align:start position:0%
that because we're going to keep track
of<00:03:27.680><c> an</c><00:03:27.920><c> index</c><00:03:28.319><c> a</c><00:03:28.480><c> pointer</c><00:03:28.799><c> whatever</c><00:03:29.120><c> you</c><00:03:29.200><c> want</c>

00:03:29.350 --> 00:03:29.360 align:start position:0%
of an index a pointer whatever you want
 

00:03:29.360 --> 00:03:31.110 align:start position:0%
of an index a pointer whatever you want
to<00:03:29.440><c> call</c><00:03:29.680><c> it</c><00:03:30.080><c> and</c><00:03:30.319><c> it's</c><00:03:30.560><c> initially</c><00:03:30.959><c> going</c><00:03:31.040><c> to</c>

00:03:31.110 --> 00:03:31.120 align:start position:0%
to call it and it's initially going to
 

00:03:31.120 --> 00:03:33.350 align:start position:0%
to call it and it's initially going to
start<00:03:31.360><c> at</c><00:03:31.599><c> zero</c><00:03:32.319><c> once</c><00:03:32.480><c> we</c><00:03:32.640><c> make</c><00:03:32.879><c> our</c><00:03:32.959><c> decision</c>

00:03:33.350 --> 00:03:33.360 align:start position:0%
start at zero once we make our decision
 

00:03:33.360 --> 00:03:35.110 align:start position:0%
start at zero once we make our decision
here<00:03:34.080><c> then</c><00:03:34.239><c> we're</c><00:03:34.400><c> going</c><00:03:34.480><c> to</c><00:03:34.560><c> shift</c><00:03:34.799><c> it</c><00:03:34.879><c> to</c><00:03:35.040><c> the</c>

00:03:35.110 --> 00:03:35.120 align:start position:0%
here then we're going to shift it to the
 

00:03:35.120 --> 00:03:36.550 align:start position:0%
here then we're going to shift it to the
right<00:03:35.360><c> and</c><00:03:35.440><c> then</c><00:03:35.599><c> make</c><00:03:35.840><c> our</c><00:03:35.920><c> decision</c><00:03:36.319><c> over</c>

00:03:36.550 --> 00:03:36.560 align:start position:0%
right and then make our decision over
 

00:03:36.560 --> 00:03:38.309 align:start position:0%
right and then make our decision over
here<00:03:36.879><c> and</c><00:03:36.959><c> then</c><00:03:37.280><c> keep</c><00:03:37.599><c> doing</c><00:03:37.840><c> that</c><00:03:38.000><c> for</c><00:03:38.159><c> every</c>

00:03:38.309 --> 00:03:38.319 align:start position:0%
here and then keep doing that for every
 

00:03:38.319 --> 00:03:40.470 align:start position:0%
here and then keep doing that for every
single<00:03:38.640><c> value</c><00:03:38.959><c> in</c><00:03:39.040><c> the</c><00:03:39.200><c> input</c><00:03:39.599><c> but</c><00:03:40.159><c> so</c><00:03:40.319><c> let's</c>

00:03:40.470 --> 00:03:40.480 align:start position:0%
single value in the input but so let's
 

00:03:40.480 --> 00:03:41.910 align:start position:0%
single value in the input but so let's
start<00:03:40.720><c> with</c><00:03:40.799><c> our</c><00:03:40.959><c> first</c><00:03:41.200><c> decision</c><00:03:41.599><c> which</c><00:03:41.840><c> is</c>

00:03:41.910 --> 00:03:41.920 align:start position:0%
start with our first decision which is
 

00:03:41.920 --> 00:03:43.990 align:start position:0%
start with our first decision which is
the<00:03:42.080><c> one</c><00:03:42.480><c> so</c><00:03:42.640><c> let's</c><00:03:42.799><c> say</c><00:03:42.959><c> we</c><00:03:43.120><c> do</c><00:03:43.360><c> include</c><00:03:43.760><c> that</c>

00:03:43.990 --> 00:03:44.000 align:start position:0%
the one so let's say we do include that
 

00:03:44.000 --> 00:03:46.949 align:start position:0%
the one so let's say we do include that
one<00:03:44.720><c> then</c><00:03:45.040><c> we</c><00:03:45.200><c> are</c><00:03:45.360><c> going</c><00:03:45.440><c> to</c><00:03:45.519><c> have</c><00:03:45.760><c> a</c><00:03:46.239><c> array</c><00:03:46.720><c> of</c>

00:03:46.949 --> 00:03:46.959 align:start position:0%
one then we are going to have a array of
 

00:03:46.959 --> 00:03:49.350 align:start position:0%
one then we are going to have a array of
one<00:03:47.200><c> this</c><00:03:47.280><c> is</c><00:03:47.440><c> our</c><00:03:47.519><c> subset</c><00:03:48.080><c> so</c><00:03:48.400><c> far</c><00:03:49.040><c> if</c><00:03:49.200><c> we</c>

00:03:49.350 --> 00:03:49.360 align:start position:0%
one this is our subset so far if we
 

00:03:49.360 --> 00:03:50.949 align:start position:0%
one this is our subset so far if we
don't<00:03:49.599><c> include</c><00:03:49.920><c> the</c><00:03:50.080><c> one</c><00:03:50.560><c> we're</c><00:03:50.799><c> going</c><00:03:50.879><c> to</c>

00:03:50.949 --> 00:03:50.959 align:start position:0%
don't include the one we're going to
 

00:03:50.959 --> 00:03:53.270 align:start position:0%
don't include the one we're going to
have<00:03:51.280><c> an</c><00:03:51.519><c> empty</c><00:03:51.920><c> list</c><00:03:52.319><c> which</c><00:03:52.560><c> is</c><00:03:52.799><c> still</c><00:03:53.120><c> a</c>

00:03:53.270 --> 00:03:53.280 align:start position:0%
have an empty list which is still a
 

00:03:53.280 --> 00:03:55.589 align:start position:0%
have an empty list which is still a
valid<00:03:53.680><c> subset</c><00:03:54.480><c> but</c><00:03:54.640><c> we're</c><00:03:54.799><c> not</c><00:03:55.040><c> done</c><00:03:55.280><c> yet</c><00:03:55.439><c> we</c>

00:03:55.589 --> 00:03:55.599 align:start position:0%
valid subset but we're not done yet we
 

00:03:55.599 --> 00:03:56.949 align:start position:0%
valid subset but we're not done yet we
still<00:03:55.760><c> have</c><00:03:55.840><c> to</c><00:03:55.920><c> iterate</c><00:03:56.319><c> through</c><00:03:56.560><c> the</c><00:03:56.720><c> rest</c>

00:03:56.949 --> 00:03:56.959 align:start position:0%
still have to iterate through the rest
 

00:03:56.959 --> 00:03:58.710 align:start position:0%
still have to iterate through the rest
of<00:03:57.040><c> the</c><00:03:57.200><c> array</c><00:03:57.680><c> so</c><00:03:57.840><c> next</c><00:03:58.080><c> we're</c><00:03:58.239><c> at</c><00:03:58.319><c> the</c><00:03:58.400><c> second</c>

00:03:58.710 --> 00:03:58.720 align:start position:0%
of the array so next we're at the second
 

00:03:58.720 --> 00:04:01.190 align:start position:0%
of the array so next we're at the second
decision<00:03:59.120><c> which</c><00:03:59.360><c> is</c><00:03:59.920><c> two</c><00:04:00.159><c> values</c><00:04:00.560><c> so</c><00:04:00.799><c> for</c><00:04:00.959><c> here</c>

00:04:01.190 --> 00:04:01.200 align:start position:0%
decision which is two values so for here
 

00:04:01.200 --> 00:04:03.429 align:start position:0%
decision which is two values so for here
we<00:04:01.360><c> could</c><00:04:01.599><c> either</c><00:04:02.080><c> add</c><00:04:02.319><c> the</c><00:04:02.560><c> two</c><00:04:03.040><c> and</c><00:04:03.200><c> if</c><00:04:03.280><c> we</c>

00:04:03.429 --> 00:04:03.439 align:start position:0%
we could either add the two and if we
 

00:04:03.439 --> 00:04:05.350 align:start position:0%
we could either add the two and if we
add<00:04:03.599><c> the</c><00:04:03.680><c> two</c><00:04:03.920><c> we'd</c><00:04:04.080><c> have</c><00:04:04.319><c> one</c><00:04:04.640><c> two</c><00:04:04.959><c> or</c><00:04:05.120><c> we</c>

00:04:05.350 --> 00:04:05.360 align:start position:0%
add the two we'd have one two or we
 

00:04:05.360 --> 00:04:07.270 align:start position:0%
add the two we'd have one two or we
could<00:04:05.760><c> not</c><00:04:06.000><c> add</c><00:04:06.239><c> the</c><00:04:06.319><c> two</c><00:04:06.560><c> so</c><00:04:06.720><c> we're</c><00:04:06.879><c> basically</c>

00:04:07.270 --> 00:04:07.280 align:start position:0%
could not add the two so we're basically
 

00:04:07.280 --> 00:04:09.270 align:start position:0%
could not add the two so we're basically
skipping<00:04:07.680><c> the</c><00:04:07.760><c> two</c><00:04:08.000><c> which</c><00:04:08.239><c> would</c><00:04:08.560><c> leave</c><00:04:08.799><c> us</c>

00:04:09.270 --> 00:04:09.280 align:start position:0%
skipping the two which would leave us
 

00:04:09.280 --> 00:04:11.910 align:start position:0%
skipping the two which would leave us
having<00:04:09.680><c> a</c><00:04:09.920><c> one</c><00:04:10.400><c> same</c><00:04:10.879><c> over</c><00:04:11.120><c> here</c><00:04:11.360><c> we</c><00:04:11.519><c> could</c><00:04:11.680><c> add</c>

00:04:11.910 --> 00:04:11.920 align:start position:0%
having a one same over here we could add
 

00:04:11.920 --> 00:04:15.030 align:start position:0%
having a one same over here we could add
a<00:04:12.000><c> two</c><00:04:12.560><c> which</c><00:04:12.799><c> would</c><00:04:13.040><c> be</c><00:04:13.599><c> just</c><00:04:13.920><c> 2</c><00:04:14.159><c> by</c><00:04:14.319><c> itself</c><00:04:14.879><c> in</c>

00:04:15.030 --> 00:04:15.040 align:start position:0%
a two which would be just 2 by itself in
 

00:04:15.040 --> 00:04:16.229 align:start position:0%
a two which would be just 2 by itself in
an<00:04:15.200><c> array</c>

00:04:16.229 --> 00:04:16.239 align:start position:0%
an array
 

00:04:16.239 --> 00:04:17.909 align:start position:0%
an array
or<00:04:16.400><c> we</c><00:04:16.479><c> could</c><00:04:16.639><c> skip</c><00:04:16.959><c> the</c><00:04:17.040><c> 2</c><00:04:17.280><c> which</c><00:04:17.440><c> would</c><00:04:17.680><c> leave</c>

00:04:17.909 --> 00:04:17.919 align:start position:0%
or we could skip the 2 which would leave
 

00:04:17.919 --> 00:04:20.949 align:start position:0%
or we could skip the 2 which would leave
this<00:04:18.400><c> being</c><00:04:18.799><c> an</c><00:04:19.040><c> empty</c><00:04:19.359><c> list</c><00:04:19.840><c> still</c><00:04:20.400><c> ok</c><00:04:20.639><c> so</c><00:04:20.799><c> we</c>

00:04:20.949 --> 00:04:20.959 align:start position:0%
this being an empty list still ok so we
 

00:04:20.959 --> 00:04:22.710 align:start position:0%
this being an empty list still ok so we
just<00:04:21.199><c> finished</c><00:04:21.600><c> this</c><00:04:21.840><c> value</c><00:04:22.240><c> now</c><00:04:22.400><c> we're</c><00:04:22.560><c> at</c>

00:04:22.710 --> 00:04:22.720 align:start position:0%
just finished this value now we're at
 

00:04:22.720 --> 00:04:24.310 align:start position:0%
just finished this value now we're at
the<00:04:22.880><c> second</c><00:04:23.280><c> two</c><00:04:23.759><c> and</c><00:04:23.919><c> we're</c><00:04:24.080><c> going</c><00:04:24.160><c> to</c>

00:04:24.310 --> 00:04:24.320 align:start position:0%
the second two and we're going to
 

00:04:24.320 --> 00:04:27.030 align:start position:0%
the second two and we're going to
continue<00:04:24.800><c> this</c><00:04:25.040><c> kind</c><00:04:25.199><c> of</c><00:04:25.360><c> naive</c><00:04:26.080><c> approach</c><00:04:26.800><c> but</c>

00:04:27.030 --> 00:04:27.040 align:start position:0%
continue this kind of naive approach but
 

00:04:27.040 --> 00:04:29.030 align:start position:0%
continue this kind of naive approach but
now<00:04:27.199><c> you're</c><00:04:27.360><c> gonna</c><00:04:27.520><c> see</c><00:04:27.680><c> what</c><00:04:27.840><c> the</c><00:04:28.080><c> problem</c><00:04:28.560><c> is</c>

00:04:29.030 --> 00:04:29.040 align:start position:0%
now you're gonna see what the problem is
 

00:04:29.040 --> 00:04:31.990 align:start position:0%
now you're gonna see what the problem is
so<00:04:29.199><c> for</c><00:04:29.440><c> here</c><00:04:29.919><c> suppose</c><00:04:30.639><c> we</c><00:04:30.960><c> add</c><00:04:31.199><c> this</c><00:04:31.520><c> to</c><00:04:31.759><c> which</c>

00:04:31.990 --> 00:04:32.000 align:start position:0%
so for here suppose we add this to which
 

00:04:32.000 --> 00:04:34.790 align:start position:0%
so for here suppose we add this to which
would<00:04:32.160><c> leave</c><00:04:32.400><c> us</c><00:04:32.560><c> having</c><00:04:32.880><c> one</c><00:04:33.520><c> two</c><00:04:34.000><c> two</c><00:04:34.479><c> if</c><00:04:34.639><c> we</c>

00:04:34.790 --> 00:04:34.800 align:start position:0%
would leave us having one two two if we
 

00:04:34.800 --> 00:04:38.469 align:start position:0%
would leave us having one two two if we
don't<00:04:34.960><c> add</c><00:04:35.199><c> the</c><00:04:35.360><c> two</c><00:04:35.840><c> we</c><00:04:36.240><c> stay</c><00:04:36.720><c> as</c><00:04:37.040><c> a</c><00:04:37.360><c> one</c><00:04:37.919><c> two</c>

00:04:38.469 --> 00:04:38.479 align:start position:0%
don't add the two we stay as a one two
 

00:04:38.479 --> 00:04:39.990 align:start position:0%
don't add the two we stay as a one two
and<00:04:38.639><c> over</c><00:04:38.880><c> here</c><00:04:39.199><c> you're</c><00:04:39.360><c> gonna</c><00:04:39.520><c> see</c><00:04:39.680><c> where</c><00:04:39.840><c> the</c>

00:04:39.990 --> 00:04:40.000 align:start position:0%
and over here you're gonna see where the
 

00:04:40.000 --> 00:04:42.070 align:start position:0%
and over here you're gonna see where the
problem<00:04:40.400><c> is</c><00:04:40.560><c> so</c><00:04:40.720><c> here</c><00:04:41.040><c> we</c><00:04:41.199><c> could</c><00:04:41.440><c> add</c><00:04:41.680><c> a</c><00:04:41.840><c> 2</c>

00:04:42.070 --> 00:04:42.080 align:start position:0%
problem is so here we could add a 2
 

00:04:42.080 --> 00:04:45.110 align:start position:0%
problem is so here we could add a 2
which<00:04:42.320><c> would</c><00:04:42.479><c> give</c><00:04:42.720><c> us</c><00:04:42.960><c> a</c><00:04:43.280><c> 1</c><00:04:44.000><c> 2.</c><00:04:44.479><c> you</c><00:04:44.639><c> see</c><00:04:44.880><c> that</c>

00:04:45.110 --> 00:04:45.120 align:start position:0%
which would give us a 1 2. you see that
 

00:04:45.120 --> 00:04:48.230 align:start position:0%
which would give us a 1 2. you see that
we<00:04:45.280><c> have</c><00:04:45.600><c> two</c><00:04:46.320><c> subsets</c><00:04:47.040><c> that</c><00:04:47.280><c> are</c><00:04:47.520><c> the</c><00:04:47.759><c> exact</c>

00:04:48.230 --> 00:04:48.240 align:start position:0%
we have two subsets that are the exact
 

00:04:48.240 --> 00:04:49.749 align:start position:0%
we have two subsets that are the exact
same<00:04:48.560><c> now</c><00:04:48.800><c> even</c><00:04:48.960><c> though</c><00:04:49.040><c> we're</c><00:04:49.199><c> not</c><00:04:49.440><c> finished</c>

00:04:49.749 --> 00:04:49.759 align:start position:0%
same now even though we're not finished
 

00:04:49.759 --> 00:04:52.150 align:start position:0%
same now even though we're not finished
with<00:04:49.840><c> the</c><00:04:50.000><c> array</c><00:04:50.400><c> yet</c><00:04:50.960><c> uh</c><00:04:51.520><c> both</c><00:04:51.840><c> of</c><00:04:51.919><c> these</c>

00:04:52.150 --> 00:04:52.160 align:start position:0%
with the array yet uh both of these
 

00:04:52.160 --> 00:04:54.310 align:start position:0%
with the array yet uh both of these
paths<00:04:52.560><c> are</c><00:04:52.720><c> clearly</c><00:04:53.120><c> going</c><00:04:53.360><c> to</c><00:04:53.600><c> lead</c><00:04:53.919><c> to</c><00:04:54.160><c> the</c>

00:04:54.310 --> 00:04:54.320 align:start position:0%
paths are clearly going to lead to the
 

00:04:54.320 --> 00:04:56.310 align:start position:0%
paths are clearly going to lead to the
same<00:04:54.639><c> subsets</c><00:04:55.199><c> because</c><00:04:55.440><c> they</c><00:04:55.680><c> are</c><00:04:55.759><c> the</c><00:04:56.000><c> exact</c>

00:04:56.310 --> 00:04:56.320 align:start position:0%
same subsets because they are the exact
 

00:04:56.320 --> 00:04:59.110 align:start position:0%
same subsets because they are the exact
same<00:04:56.880><c> and</c><00:04:57.360><c> they</c><00:04:57.919><c> the</c><00:04:58.080><c> remainder</c><00:04:58.479><c> of</c><00:04:58.560><c> the</c><00:04:58.720><c> array</c>

00:04:59.110 --> 00:04:59.120 align:start position:0%
same and they the remainder of the array
 

00:04:59.120 --> 00:05:00.390 align:start position:0%
same and they the remainder of the array
is<00:04:59.199><c> going</c><00:04:59.280><c> to</c><00:04:59.360><c> be</c><00:04:59.520><c> the</c><00:04:59.600><c> same</c><00:04:59.919><c> for</c><00:05:00.080><c> both</c><00:05:00.320><c> of</c>

00:05:00.390 --> 00:05:00.400 align:start position:0%
is going to be the same for both of
 

00:05:00.400 --> 00:05:01.909 align:start position:0%
is going to be the same for both of
these<00:05:00.880><c> so</c><00:05:01.039><c> we're</c><00:05:01.199><c> going</c><00:05:01.280><c> to</c><00:05:01.360><c> end</c><00:05:01.600><c> up</c><00:05:01.680><c> with</c>

00:05:01.909 --> 00:05:01.919 align:start position:0%
these so we're going to end up with
 

00:05:01.919 --> 00:05:04.070 align:start position:0%
these so we're going to end up with
duplicate<00:05:02.560><c> subsets</c><00:05:03.280><c> but</c><00:05:03.440><c> the</c><00:05:03.600><c> important</c>

00:05:04.070 --> 00:05:04.080 align:start position:0%
duplicate subsets but the important
 

00:05:04.080 --> 00:05:06.150 align:start position:0%
duplicate subsets but the important
question<00:05:04.479><c> is</c><00:05:04.720><c> how</c><00:05:04.960><c> did</c><00:05:05.120><c> this</c><00:05:05.360><c> happen</c><00:05:05.759><c> and</c><00:05:05.919><c> how</c>

00:05:06.150 --> 00:05:06.160 align:start position:0%
question is how did this happen and how
 

00:05:06.160 --> 00:05:08.310 align:start position:0%
question is how did this happen and how
can<00:05:06.400><c> we</c><00:05:06.560><c> prevent</c><00:05:07.039><c> this</c><00:05:07.280><c> from</c><00:05:07.520><c> happening</c><00:05:08.080><c> let's</c>

00:05:08.310 --> 00:05:08.320 align:start position:0%
can we prevent this from happening let's
 

00:05:08.320 --> 00:05:11.029 align:start position:0%
can we prevent this from happening let's
take<00:05:08.560><c> a</c><00:05:08.720><c> look</c><00:05:09.199><c> so</c><00:05:09.440><c> as</c><00:05:09.680><c> we</c><00:05:10.000><c> make</c><00:05:10.320><c> this</c><00:05:10.560><c> decision</c>

00:05:11.029 --> 00:05:11.039 align:start position:0%
take a look so as we make this decision
 

00:05:11.039 --> 00:05:12.790 align:start position:0%
take a look so as we make this decision
tree<00:05:11.280><c> for</c><00:05:11.440><c> example</c><00:05:11.759><c> when</c><00:05:11.919><c> we're</c><00:05:12.080><c> over</c><00:05:12.320><c> here</c>

00:05:12.790 --> 00:05:12.800 align:start position:0%
tree for example when we're over here
 

00:05:12.800 --> 00:05:15.350 align:start position:0%
tree for example when we're over here
and<00:05:12.960><c> we're</c><00:05:13.199><c> at</c><00:05:13.360><c> the</c><00:05:13.680><c> two</c><00:05:13.919><c> value</c><00:05:14.639><c> we</c><00:05:14.800><c> know</c><00:05:15.039><c> that</c>

00:05:15.350 --> 00:05:15.360 align:start position:0%
and we're at the two value we know that
 

00:05:15.360 --> 00:05:17.830 align:start position:0%
and we're at the two value we know that
all<00:05:15.919><c> subsets</c><00:05:16.560><c> that</c><00:05:16.800><c> follow</c><00:05:17.199><c> this</c><00:05:17.360><c> one</c><00:05:17.520><c> like</c><00:05:17.680><c> as</c>

00:05:17.830 --> 00:05:17.840 align:start position:0%
all subsets that follow this one like as
 

00:05:17.840 --> 00:05:20.469 align:start position:0%
all subsets that follow this one like as
we<00:05:17.919><c> go</c><00:05:18.160><c> down</c><00:05:18.639><c> the</c><00:05:18.880><c> decision</c><00:05:19.280><c> tree</c><00:05:19.600><c> all</c><00:05:19.919><c> subsets</c>

00:05:20.469 --> 00:05:20.479 align:start position:0%
we go down the decision tree all subsets
 

00:05:20.479 --> 00:05:23.110 align:start position:0%
we go down the decision tree all subsets
are<00:05:20.560><c> going</c><00:05:20.800><c> to</c><00:05:20.960><c> include</c><00:05:21.440><c> at</c><00:05:21.600><c> least</c><00:05:22.080><c> one</c><00:05:22.800><c> one</c>

00:05:23.110 --> 00:05:23.120 align:start position:0%
are going to include at least one one
 

00:05:23.120 --> 00:05:24.950 align:start position:0%
are going to include at least one one
value<00:05:23.600><c> right</c><00:05:24.080><c> and</c><00:05:24.160><c> the</c><00:05:24.320><c> decision</c><00:05:24.800><c> we're</c>

00:05:24.950 --> 00:05:24.960 align:start position:0%
value right and the decision we're
 

00:05:24.960 --> 00:05:27.670 align:start position:0%
value right and the decision we're
making<00:05:25.360><c> is</c><00:05:25.840><c> okay</c><00:05:26.400><c> we're</c><00:05:26.639><c> including</c><00:05:27.120><c> this</c><00:05:27.440><c> two</c>

00:05:27.670 --> 00:05:27.680 align:start position:0%
making is okay we're including this two
 

00:05:27.680 --> 00:05:29.830 align:start position:0%
making is okay we're including this two
so<00:05:27.919><c> if</c><00:05:28.080><c> we</c><00:05:28.320><c> do</c><00:05:28.639><c> include</c><00:05:29.039><c> the</c><00:05:29.199><c> two</c><00:05:29.440><c> then</c><00:05:29.600><c> we're</c>

00:05:29.830 --> 00:05:29.840 align:start position:0%
so if we do include the two then we're
 

00:05:29.840 --> 00:05:32.150 align:start position:0%
so if we do include the two then we're
saying<00:05:30.160><c> all</c><00:05:30.400><c> subsets</c><00:05:30.960><c> that</c><00:05:31.120><c> we</c><00:05:31.280><c> create</c><00:05:31.759><c> using</c>

00:05:32.150 --> 00:05:32.160 align:start position:0%
saying all subsets that we create using
 

00:05:32.160 --> 00:05:34.870 align:start position:0%
saying all subsets that we create using
this<00:05:32.400><c> one</c><00:05:32.639><c> are</c><00:05:32.880><c> going</c><00:05:33.120><c> to</c><00:05:33.360><c> include</c><00:05:34.000><c> at</c><00:05:34.320><c> least</c>

00:05:34.870 --> 00:05:34.880 align:start position:0%
this one are going to include at least
 

00:05:34.880 --> 00:05:37.909 align:start position:0%
this one are going to include at least
one<00:05:35.520><c> two</c><00:05:35.840><c> value</c><00:05:36.479><c> so</c><00:05:36.720><c> this</c><00:05:36.960><c> path</c><00:05:37.360><c> is</c><00:05:37.440><c> supposed</c>

00:05:37.909 --> 00:05:37.919 align:start position:0%
one two value so this path is supposed
 

00:05:37.919 --> 00:05:40.550 align:start position:0%
one two value so this path is supposed
to<00:05:38.080><c> be</c><00:05:38.240><c> the</c><00:05:38.400><c> path</c><00:05:38.960><c> with</c><00:05:39.360><c> all</c><00:05:39.680><c> subsets</c><00:05:40.320><c> that</c>

00:05:40.550 --> 00:05:40.560 align:start position:0%
to be the path with all subsets that
 

00:05:40.560 --> 00:05:43.110 align:start position:0%
to be the path with all subsets that
include<00:05:41.039><c> at</c><00:05:41.280><c> least</c><00:05:41.759><c> one</c><00:05:42.160><c> two</c><00:05:42.639><c> and</c><00:05:42.800><c> we</c><00:05:42.960><c> don't</c>

00:05:43.110 --> 00:05:43.120 align:start position:0%
include at least one two and we don't
 

00:05:43.120 --> 00:05:45.270 align:start position:0%
include at least one two and we don't
want<00:05:43.360><c> duplicates</c><00:05:44.160><c> so</c><00:05:44.320><c> when</c><00:05:44.479><c> we</c><00:05:44.720><c> make</c><00:05:45.120><c> the</c>

00:05:45.270 --> 00:05:45.280 align:start position:0%
want duplicates so when we make the
 

00:05:45.280 --> 00:05:47.990 align:start position:0%
want duplicates so when we make the
decision<00:05:45.840><c> on</c><00:05:46.000><c> the</c><00:05:46.240><c> right</c><00:05:46.639><c> side</c><00:05:47.120><c> where</c><00:05:47.360><c> we</c><00:05:47.600><c> skip</c>

00:05:47.990 --> 00:05:48.000 align:start position:0%
decision on the right side where we skip
 

00:05:48.000 --> 00:05:50.230 align:start position:0%
decision on the right side where we skip
this<00:05:48.320><c> two</c><00:05:48.479><c> value</c><00:05:48.880><c> we</c><00:05:49.120><c> don't</c><00:05:49.440><c> include</c><00:05:49.840><c> the</c><00:05:50.000><c> two</c>

00:05:50.230 --> 00:05:50.240 align:start position:0%
this two value we don't include the two
 

00:05:50.240 --> 00:05:53.029 align:start position:0%
this two value we don't include the two
value<00:05:50.639><c> on</c><00:05:50.800><c> this</c><00:05:51.039><c> right</c><00:05:51.360><c> side</c><00:05:51.919><c> so</c><00:05:52.320><c> what</c><00:05:52.560><c> this</c>

00:05:53.029 --> 00:05:53.039 align:start position:0%
value on this right side so what this
 

00:05:53.039 --> 00:05:55.670 align:start position:0%
value on this right side so what this
right<00:05:53.360><c> side</c><00:05:53.759><c> should</c><00:05:54.240><c> represent</c><00:05:54.960><c> is</c><00:05:55.360><c> all</c>

00:05:55.670 --> 00:05:55.680 align:start position:0%
right side should represent is all
 

00:05:55.680 --> 00:05:58.870 align:start position:0%
right side should represent is all
possible<00:05:56.240><c> subsets</c><00:05:56.960><c> that</c><00:05:57.440><c> don't</c><00:05:57.840><c> include</c><00:05:58.639><c> at</c>

00:05:58.870 --> 00:05:58.880 align:start position:0%
possible subsets that don't include at
 

00:05:58.880 --> 00:06:01.670 align:start position:0%
possible subsets that don't include at
least<00:05:59.440><c> a</c><00:05:59.520><c> single</c><00:05:59.919><c> two</c><00:06:00.319><c> basically</c><00:06:00.800><c> all</c><00:06:01.120><c> subsets</c>

00:06:01.670 --> 00:06:01.680 align:start position:0%
least a single two basically all subsets
 

00:06:01.680 --> 00:06:05.350 align:start position:0%
least a single two basically all subsets
that<00:06:01.919><c> do</c><00:06:02.160><c> not</c><00:06:02.479><c> include</c><00:06:03.280><c> any</c><00:06:03.680><c> two</c><00:06:04.000><c> values</c><00:06:04.880><c> why</c>

00:06:05.350 --> 00:06:05.360 align:start position:0%
that do not include any two values why
 

00:06:05.360 --> 00:06:08.950 align:start position:0%
that do not include any two values why
because<00:06:05.919><c> this</c><00:06:06.560><c> left</c><00:06:06.960><c> side</c><00:06:07.360><c> over</c><00:06:07.680><c> here</c><00:06:08.240><c> already</c>

00:06:08.950 --> 00:06:08.960 align:start position:0%
because this left side over here already
 

00:06:08.960 --> 00:06:11.830 align:start position:0%
because this left side over here already
includes<00:06:09.680><c> all</c><00:06:10.080><c> subsets</c><00:06:10.800><c> that</c><00:06:10.960><c> have</c><00:06:11.199><c> at</c><00:06:11.360><c> least</c>

00:06:11.830 --> 00:06:11.840 align:start position:0%
includes all subsets that have at least
 

00:06:11.840 --> 00:06:15.029 align:start position:0%
includes all subsets that have at least
one<00:06:12.240><c> two</c><00:06:12.479><c> value</c><00:06:12.960><c> so</c><00:06:13.360><c> if</c><00:06:13.520><c> we</c><00:06:13.759><c> include</c><00:06:14.400><c> any</c><00:06:14.720><c> two</c>

00:06:15.029 --> 00:06:15.039 align:start position:0%
one two value so if we include any two
 

00:06:15.039 --> 00:06:16.710 align:start position:0%
one two value so if we include any two
values<00:06:15.520><c> on</c><00:06:15.600><c> the</c><00:06:15.759><c> right</c><00:06:16.080><c> side</c><00:06:16.319><c> we're</c><00:06:16.479><c> going</c><00:06:16.560><c> to</c>

00:06:16.710 --> 00:06:16.720 align:start position:0%
values on the right side we're going to
 

00:06:16.720 --> 00:06:18.390 align:start position:0%
values on the right side we're going to
end<00:06:16.960><c> up</c><00:06:17.039><c> with</c><00:06:17.280><c> duplicates</c><00:06:17.840><c> so</c><00:06:17.919><c> what</c><00:06:18.080><c> we</c><00:06:18.240><c> have</c>

00:06:18.390 --> 00:06:18.400 align:start position:0%
end up with duplicates so what we have
 

00:06:18.400 --> 00:06:21.670 align:start position:0%
end up with duplicates so what we have
to<00:06:18.560><c> do</c><00:06:18.720><c> is</c><00:06:19.039><c> not</c><00:06:19.280><c> include</c><00:06:20.080><c> any</c><00:06:20.479><c> two</c><00:06:20.800><c> values</c><00:06:21.520><c> on</c>

00:06:21.670 --> 00:06:21.680 align:start position:0%
to do is not include any two values on
 

00:06:21.680 --> 00:06:24.550 align:start position:0%
to do is not include any two values on
this<00:06:22.000><c> right</c><00:06:22.400><c> side</c><00:06:22.880><c> how</c><00:06:23.120><c> can</c><00:06:23.280><c> we</c><00:06:23.520><c> do</c><00:06:23.759><c> that</c><00:06:24.240><c> well</c>

00:06:24.550 --> 00:06:24.560 align:start position:0%
this right side how can we do that well
 

00:06:24.560 --> 00:06:27.590 align:start position:0%
this right side how can we do that well
basically<00:06:25.360><c> when</c><00:06:25.600><c> we</c><00:06:25.759><c> were</c><00:06:25.919><c> over</c><00:06:26.240><c> here</c><00:06:26.720><c> that's</c>

00:06:27.590 --> 00:06:27.600 align:start position:0%
basically when we were over here that's
 

00:06:27.600 --> 00:06:29.430 align:start position:0%
basically when we were over here that's
what<00:06:27.840><c> two</c><00:06:28.080><c> we</c><00:06:28.240><c> were</c><00:06:28.400><c> deciding</c><00:06:28.880><c> at</c><00:06:28.960><c> right</c><00:06:29.280><c> when</c>

00:06:29.430 --> 00:06:29.440 align:start position:0%
what two we were deciding at right when
 

00:06:29.440 --> 00:06:31.749 align:start position:0%
what two we were deciding at right when
we<00:06:29.680><c> choose</c><00:06:30.000><c> to</c><00:06:30.240><c> skip</c><00:06:30.560><c> this</c><00:06:30.880><c> two</c><00:06:31.280><c> we</c><00:06:31.520><c> should</c>

00:06:31.749 --> 00:06:31.759 align:start position:0%
we choose to skip this two we should
 

00:06:31.759 --> 00:06:34.390 align:start position:0%
we choose to skip this two we should
choose<00:06:32.160><c> to</c><00:06:32.400><c> skip</c><00:06:32.880><c> all</c><00:06:33.199><c> two</c><00:06:33.600><c> so</c><00:06:33.919><c> instead</c><00:06:34.240><c> of</c>

00:06:34.390 --> 00:06:34.400 align:start position:0%
choose to skip all two so instead of
 

00:06:34.400 --> 00:06:36.070 align:start position:0%
choose to skip all two so instead of
taking<00:06:34.720><c> our</c><00:06:34.880><c> i</c><00:06:35.120><c> pointer</c><00:06:35.440><c> and</c><00:06:35.520><c> just</c><00:06:35.680><c> shifting</c>

00:06:36.070 --> 00:06:36.080 align:start position:0%
taking our i pointer and just shifting
 

00:06:36.080 --> 00:06:38.469 align:start position:0%
taking our i pointer and just shifting
it<00:06:36.240><c> by</c><00:06:36.560><c> one</c><00:06:36.960><c> to</c><00:06:37.120><c> be</c><00:06:37.360><c> over</c><00:06:37.680><c> here</c><00:06:38.080><c> we</c><00:06:38.240><c> should</c>

00:06:38.469 --> 00:06:38.479 align:start position:0%
it by one to be over here we should
 

00:06:38.479 --> 00:06:41.270 align:start position:0%
it by one to be over here we should
actually<00:06:38.800><c> shift</c><00:06:39.120><c> it</c><00:06:39.280><c> by</c><00:06:39.600><c> two</c><00:06:40.160><c> to</c><00:06:40.319><c> be</c><00:06:40.560><c> over</c><00:06:40.800><c> here</c>

00:06:41.270 --> 00:06:41.280 align:start position:0%
actually shift it by two to be over here
 

00:06:41.280 --> 00:06:43.110 align:start position:0%
actually shift it by two to be over here
because<00:06:41.600><c> that's</c><00:06:41.840><c> how</c><00:06:42.080><c> we</c><00:06:42.240><c> know</c><00:06:42.720><c> we're</c><00:06:42.960><c> not</c>

00:06:43.110 --> 00:06:43.120 align:start position:0%
because that's how we know we're not
 

00:06:43.120 --> 00:06:46.230 align:start position:0%
because that's how we know we're not
going<00:06:43.199><c> to</c><00:06:43.360><c> get</c><00:06:43.680><c> any</c><00:06:44.000><c> more</c><00:06:44.400><c> two</c><00:06:44.800><c> values</c><00:06:45.680><c> but</c>

00:06:46.230 --> 00:06:46.240 align:start position:0%
going to get any more two values but
 

00:06:46.240 --> 00:06:48.710 align:start position:0%
going to get any more two values but
this<00:06:46.960><c> input</c><00:06:47.360><c> representation</c><00:06:48.080><c> might</c><00:06:48.319><c> make</c><00:06:48.560><c> it</c>

00:06:48.710 --> 00:06:48.720 align:start position:0%
this input representation might make it
 

00:06:48.720 --> 00:06:50.950 align:start position:0%
this input representation might make it
look<00:06:49.120><c> simple</c><00:06:49.759><c> but</c><00:06:50.000><c> we're</c><00:06:50.160><c> actually</c><00:06:50.639><c> not</c>

00:06:50.950 --> 00:06:50.960 align:start position:0%
look simple but we're actually not
 

00:06:50.960 --> 00:06:53.270 align:start position:0%
look simple but we're actually not
guaranteed<00:06:51.680><c> that</c><00:06:51.840><c> the</c><00:06:52.080><c> input</c><00:06:52.560><c> array</c><00:06:52.960><c> is</c><00:06:53.120><c> going</c>

00:06:53.270 --> 00:06:53.280 align:start position:0%
guaranteed that the input array is going
 

00:06:53.280 --> 00:06:55.189 align:start position:0%
guaranteed that the input array is going
to<00:06:53.360><c> be</c><00:06:53.599><c> sorted</c><00:06:54.080><c> so</c><00:06:54.240><c> we</c><00:06:54.400><c> have</c><00:06:54.560><c> to</c><00:06:54.720><c> sort</c><00:06:55.039><c> it</c>

00:06:55.189 --> 00:06:55.199 align:start position:0%
to be sorted so we have to sort it
 

00:06:55.199 --> 00:06:58.070 align:start position:0%
to be sorted so we have to sort it
ourselves<00:06:56.000><c> which</c><00:06:56.240><c> is</c><00:06:56.319><c> going</c><00:06:56.400><c> to</c><00:06:56.560><c> be</c><00:06:56.800><c> n</c><00:06:57.120><c> log</c><00:06:57.440><c> n</c>

00:06:58.070 --> 00:06:58.080 align:start position:0%
ourselves which is going to be n log n
 

00:06:58.080 --> 00:06:59.749 align:start position:0%
ourselves which is going to be n log n
time<00:06:58.479><c> but</c><00:06:58.639><c> that's</c><00:06:58.800><c> not</c><00:06:58.960><c> a</c><00:06:59.039><c> big</c><00:06:59.280><c> deal</c><00:06:59.520><c> because</c>

00:06:59.749 --> 00:06:59.759 align:start position:0%
time but that's not a big deal because
 

00:06:59.759 --> 00:07:01.350 align:start position:0%
time but that's not a big deal because
we<00:06:59.919><c> already</c><00:07:00.160><c> know</c><00:07:00.319><c> that</c><00:07:00.479><c> the</c><00:07:00.639><c> time</c><00:07:00.800><c> complexity</c>

00:07:01.350 --> 00:07:01.360 align:start position:0%
we already know that the time complexity
 

00:07:01.360 --> 00:07:03.270 align:start position:0%
we already know that the time complexity
of<00:07:01.440><c> this</c><00:07:01.520><c> solution</c><00:07:01.919><c> is</c><00:07:02.000><c> going</c><00:07:02.080><c> to</c><00:07:02.160><c> be</c><00:07:02.400><c> about</c><00:07:03.039><c> n</c>

00:07:03.270 --> 00:07:03.280 align:start position:0%
of this solution is going to be about n
 

00:07:03.280 --> 00:07:05.110 align:start position:0%
of this solution is going to be about n
times<00:07:03.599><c> 2</c><00:07:03.759><c> to</c><00:07:03.840><c> the</c><00:07:03.919><c> power</c><00:07:04.160><c> of</c><00:07:04.319><c> n</c><00:07:04.639><c> so</c><00:07:04.800><c> this</c><00:07:05.039><c> is</c>

00:07:05.110 --> 00:07:05.120 align:start position:0%
times 2 to the power of n so this is
 

00:07:05.120 --> 00:07:07.350 align:start position:0%
times 2 to the power of n so this is
pretty<00:07:05.520><c> insignificant</c><00:07:06.560><c> so</c><00:07:06.800><c> now</c><00:07:06.960><c> let's</c>

00:07:07.350 --> 00:07:07.360 align:start position:0%
pretty insignificant so now let's
 

00:07:07.360 --> 00:07:10.070 align:start position:0%
pretty insignificant so now let's
re-draw<00:07:08.240><c> this</c><00:07:08.479><c> decision</c><00:07:08.960><c> tree</c><00:07:09.360><c> keeping</c><00:07:09.919><c> what</c>

00:07:10.070 --> 00:07:10.080 align:start position:0%
re-draw this decision tree keeping what
 

00:07:10.080 --> 00:07:11.990 align:start position:0%
re-draw this decision tree keeping what
i<00:07:10.160><c> just</c><00:07:10.400><c> mentioned</c><00:07:10.880><c> in</c><00:07:11.120><c> mind</c><00:07:11.440><c> and</c><00:07:11.599><c> then</c><00:07:11.840><c> we</c>

00:07:11.990 --> 00:07:12.000 align:start position:0%
i just mentioned in mind and then we
 

00:07:12.000 --> 00:07:14.469 align:start position:0%
i just mentioned in mind and then we
will<00:07:12.240><c> eliminate</c><00:07:12.960><c> all</c><00:07:13.120><c> the</c><00:07:13.280><c> duplicates</c><00:07:14.160><c> okay</c>

00:07:14.469 --> 00:07:14.479 align:start position:0%
will eliminate all the duplicates okay
 

00:07:14.479 --> 00:07:16.469 align:start position:0%
will eliminate all the duplicates okay
so<00:07:14.800><c> this</c><00:07:15.039><c> can</c><00:07:15.360><c> actually</c><00:07:15.840><c> stay</c><00:07:16.080><c> the</c><00:07:16.240><c> same</c>

00:07:16.469 --> 00:07:16.479 align:start position:0%
so this can actually stay the same
 

00:07:16.479 --> 00:07:17.909 align:start position:0%
so this can actually stay the same
because<00:07:16.720><c> this</c><00:07:16.880><c> is</c><00:07:17.039><c> the</c><00:07:17.120><c> side</c><00:07:17.360><c> where</c><00:07:17.520><c> we</c><00:07:17.680><c> do</c>

00:07:17.909 --> 00:07:17.919 align:start position:0%
because this is the side where we do
 

00:07:17.919 --> 00:07:19.749 align:start position:0%
because this is the side where we do
include<00:07:18.240><c> a</c><00:07:18.319><c> 2</c><00:07:18.720><c> but</c><00:07:18.960><c> this</c><00:07:19.120><c> is</c><00:07:19.199><c> the</c><00:07:19.360><c> side</c><00:07:19.599><c> where</c>

00:07:19.749 --> 00:07:19.759 align:start position:0%
include a 2 but this is the side where
 

00:07:19.759 --> 00:07:22.070 align:start position:0%
include a 2 but this is the side where
we're<00:07:19.919><c> skipping</c><00:07:20.400><c> all</c><00:07:20.560><c> the</c><00:07:20.720><c> two</c><00:07:20.960><c> values</c><00:07:21.599><c> so</c><00:07:21.840><c> our</c>

00:07:22.070 --> 00:07:22.080 align:start position:0%
we're skipping all the two values so our
 

00:07:22.080 --> 00:07:23.909 align:start position:0%
we're skipping all the two values so our
pointer<00:07:22.560><c> when</c><00:07:22.800><c> we're</c><00:07:22.960><c> making</c><00:07:23.199><c> a</c><00:07:23.280><c> decision</c><00:07:23.680><c> now</c>

00:07:23.909 --> 00:07:23.919 align:start position:0%
pointer when we're making a decision now
 

00:07:23.919 --> 00:07:25.670 align:start position:0%
pointer when we're making a decision now
is<00:07:24.080><c> not</c><00:07:24.319><c> actually</c><00:07:24.560><c> going</c><00:07:24.720><c> to</c><00:07:24.880><c> be</c><00:07:25.039><c> over</c><00:07:25.280><c> here</c>

00:07:25.670 --> 00:07:25.680 align:start position:0%
is not actually going to be over here
 

00:07:25.680 --> 00:07:27.270 align:start position:0%
is not actually going to be over here
our<00:07:25.840><c> pointer</c><00:07:26.160><c> is</c><00:07:26.240><c> actually</c><00:07:26.560><c> going</c><00:07:26.639><c> to</c><00:07:26.720><c> be</c><00:07:27.039><c> over</c>

00:07:27.270 --> 00:07:27.280 align:start position:0%
our pointer is actually going to be over
 

00:07:27.280 --> 00:07:29.589 align:start position:0%
our pointer is actually going to be over
here<00:07:27.599><c> at</c><00:07:27.759><c> this</c><00:07:28.080><c> 3.</c><00:07:28.479><c> so</c><00:07:28.720><c> are</c><00:07:28.880><c> we</c><00:07:29.039><c> gonna</c><00:07:29.280><c> include</c>

00:07:29.589 --> 00:07:29.599 align:start position:0%
here at this 3. so are we gonna include
 

00:07:29.599 --> 00:07:32.309 align:start position:0%
here at this 3. so are we gonna include
a<00:07:29.680><c> three</c><00:07:30.080><c> or</c><00:07:30.400><c> not</c><00:07:30.720><c> that's</c><00:07:31.039><c> our</c><00:07:31.199><c> choice</c><00:07:31.759><c> so</c><00:07:32.160><c> if</c>

00:07:32.309 --> 00:07:32.319 align:start position:0%
a three or not that's our choice so if
 

00:07:32.319 --> 00:07:34.469 align:start position:0%
a three or not that's our choice so if
we<00:07:32.400><c> do</c><00:07:32.639><c> include</c><00:07:32.880><c> a</c><00:07:33.039><c> three</c><00:07:33.280><c> we</c><00:07:33.440><c> get</c><00:07:33.759><c> one</c><00:07:34.000><c> three</c>

00:07:34.469 --> 00:07:34.479 align:start position:0%
we do include a three we get one three
 

00:07:34.479 --> 00:07:37.510 align:start position:0%
we do include a three we get one three
if<00:07:34.720><c> we</c><00:07:34.960><c> don't</c><00:07:35.199><c> include</c><00:07:35.520><c> a</c><00:07:35.680><c> three</c><00:07:36.240><c> we</c><00:07:36.639><c> just</c><00:07:37.120><c> get</c>

00:07:37.510 --> 00:07:37.520 align:start position:0%
if we don't include a three we just get
 

00:07:37.520 --> 00:07:40.070 align:start position:0%
if we don't include a three we just get
one<00:07:38.080><c> okay</c><00:07:38.400><c> and</c><00:07:38.560><c> what</c><00:07:38.720><c> about</c><00:07:38.960><c> this</c><00:07:39.280><c> two</c><00:07:39.759><c> well</c><00:07:39.919><c> we</c>

00:07:40.070 --> 00:07:40.080 align:start position:0%
one okay and what about this two well we
 

00:07:40.080 --> 00:07:41.909 align:start position:0%
one okay and what about this two well we
chose<00:07:40.400><c> one</c><00:07:40.639><c> two</c><00:07:40.800><c> so</c><00:07:40.960><c> now</c><00:07:41.199><c> the</c><00:07:41.280><c> next</c><00:07:41.599><c> decision</c>

00:07:41.909 --> 00:07:41.919 align:start position:0%
chose one two so now the next decision
 

00:07:41.919 --> 00:07:43.189 align:start position:0%
chose one two so now the next decision
is<00:07:42.080><c> going</c><00:07:42.160><c> to</c><00:07:42.240><c> be</c><00:07:42.479><c> are</c><00:07:42.560><c> we</c><00:07:42.720><c> including</c><00:07:43.120><c> the</c>

00:07:43.189 --> 00:07:43.199 align:start position:0%
is going to be are we including the
 

00:07:43.199 --> 00:07:45.189 align:start position:0%
is going to be are we including the
second<00:07:43.520><c> two</c><00:07:43.840><c> or</c><00:07:44.080><c> are</c><00:07:44.160><c> we</c><00:07:44.400><c> not</c><00:07:44.639><c> including</c><00:07:45.039><c> the</c>

00:07:45.189 --> 00:07:45.199 align:start position:0%
second two or are we not including the
 

00:07:45.199 --> 00:07:47.670 align:start position:0%
second two or are we not including the
second<00:07:45.520><c> two</c><00:07:46.000><c> so</c><00:07:46.400><c> we</c><00:07:46.560><c> can</c><00:07:46.879><c> draw</c><00:07:47.120><c> that</c><00:07:47.280><c> so</c><00:07:47.440><c> if</c><00:07:47.520><c> we</c>

00:07:47.670 --> 00:07:47.680 align:start position:0%
second two so we can draw that so if we
 

00:07:47.680 --> 00:07:50.550 align:start position:0%
second two so we can draw that so if we
do<00:07:47.919><c> include</c><00:07:48.479><c> the</c><00:07:48.639><c> second</c><00:07:48.879><c> two</c><00:07:49.120><c> we</c><00:07:49.280><c> get</c><00:07:49.599><c> a</c><00:07:49.840><c> two</c>

00:07:50.550 --> 00:07:50.560 align:start position:0%
do include the second two we get a two
 

00:07:50.560 --> 00:07:52.950 align:start position:0%
do include the second two we get a two
two<00:07:51.199><c> and</c><00:07:51.360><c> if</c><00:07:51.520><c> we</c><00:07:51.840><c> don't</c><00:07:52.080><c> include</c><00:07:52.479><c> the</c><00:07:52.560><c> second</c>

00:07:52.950 --> 00:07:52.960 align:start position:0%
two and if we don't include the second
 

00:07:52.960 --> 00:07:56.230 align:start position:0%
two and if we don't include the second
two<00:07:53.280><c> we</c><00:07:53.520><c> just</c><00:07:54.080><c> stay</c><00:07:54.639><c> as</c><00:07:54.879><c> a</c><00:07:55.039><c> single</c><00:07:55.520><c> two</c><00:07:55.840><c> and</c>

00:07:56.230 --> 00:07:56.240 align:start position:0%
two we just stay as a single two and
 

00:07:56.240 --> 00:07:58.150 align:start position:0%
two we just stay as a single two and
lastly<00:07:56.720><c> on</c><00:07:56.879><c> the</c><00:07:56.960><c> right</c><00:07:57.199><c> side</c><00:07:57.440><c> over</c><00:07:57.680><c> here</c><00:07:58.000><c> are</c>

00:07:58.150 --> 00:07:58.160 align:start position:0%
lastly on the right side over here are
 

00:07:58.160 --> 00:08:00.469 align:start position:0%
lastly on the right side over here are
we<00:07:58.400><c> actually</c><00:07:58.720><c> going</c><00:07:58.960><c> to</c><00:07:59.039><c> be</c><00:07:59.280><c> choosing</c><00:08:00.000><c> from</c>

00:08:00.469 --> 00:08:00.479 align:start position:0%
we actually going to be choosing from
 

00:08:00.479 --> 00:08:02.790 align:start position:0%
we actually going to be choosing from
the<00:08:00.720><c> second</c><00:08:01.120><c> two</c><00:08:01.840><c> well</c><00:08:02.080><c> no</c><00:08:02.400><c> because</c><00:08:02.639><c> we</c>

00:08:02.790 --> 00:08:02.800 align:start position:0%
the second two well no because we
 

00:08:02.800 --> 00:08:04.390 align:start position:0%
the second two well no because we
already<00:08:03.120><c> skipped</c><00:08:03.440><c> the</c><00:08:03.599><c> first</c><00:08:03.919><c> two</c><00:08:04.160><c> and</c><00:08:04.240><c> that</c>

00:08:04.390 --> 00:08:04.400 align:start position:0%
already skipped the first two and that
 

00:08:04.400 --> 00:08:05.749 align:start position:0%
already skipped the first two and that
means<00:08:04.639><c> we're</c><00:08:04.879><c> gonna</c><00:08:05.039><c> end</c><00:08:05.199><c> up</c><00:08:05.280><c> skipping</c><00:08:05.599><c> the</c>

00:08:05.749 --> 00:08:05.759 align:start position:0%
means we're gonna end up skipping the
 

00:08:05.759 --> 00:08:07.350 align:start position:0%
means we're gonna end up skipping the
second<00:08:06.000><c> two</c><00:08:06.240><c> as</c><00:08:06.319><c> well</c><00:08:06.560><c> so</c><00:08:06.720><c> the</c><00:08:06.879><c> decision</c><00:08:07.199><c> we're</c>

00:08:07.350 --> 00:08:07.360 align:start position:0%
second two as well so the decision we're
 

00:08:07.360 --> 00:08:09.029 align:start position:0%
second two as well so the decision we're
making<00:08:07.680><c> over</c><00:08:07.840><c> here</c><00:08:08.080><c> is</c><00:08:08.240><c> actually</c><00:08:08.479><c> going</c><00:08:08.560><c> to</c><00:08:08.639><c> be</c>

00:08:09.029 --> 00:08:09.039 align:start position:0%
making over here is actually going to be
 

00:08:09.039 --> 00:08:11.510 align:start position:0%
making over here is actually going to be
are<00:08:09.120><c> we</c><00:08:09.360><c> including</c><00:08:09.759><c> the</c><00:08:10.000><c> three</c><00:08:10.560><c> or</c><00:08:10.879><c> are</c><00:08:11.039><c> we</c><00:08:11.280><c> not</c>

00:08:11.510 --> 00:08:11.520 align:start position:0%
are we including the three or are we not
 

00:08:11.520 --> 00:08:13.830 align:start position:0%
are we including the three or are we not
including<00:08:12.000><c> the</c><00:08:12.160><c> 3</c><00:08:12.479><c> so</c><00:08:12.639><c> that's</c><00:08:12.879><c> going</c><00:08:12.960><c> to</c><00:08:13.039><c> be</c><00:08:13.520><c> 3</c>

00:08:13.830 --> 00:08:13.840 align:start position:0%
including the 3 so that's going to be 3
 

00:08:13.840 --> 00:08:16.950 align:start position:0%
including the 3 so that's going to be 3
by<00:08:14.080><c> itself</c><00:08:14.639><c> or</c><00:08:14.960><c> just</c><00:08:15.360><c> an</c><00:08:15.759><c> empty</c>

00:08:16.950 --> 00:08:16.960 align:start position:0%
by itself or just an empty
 

00:08:16.960 --> 00:08:19.029 align:start position:0%
by itself or just an empty
array<00:08:17.440><c> and</c><00:08:17.599><c> so</c><00:08:17.840><c> now</c><00:08:18.080><c> you</c><00:08:18.160><c> can</c><00:08:18.319><c> see</c><00:08:18.479><c> that</c><00:08:18.639><c> this</c>

00:08:19.029 --> 00:08:19.039 align:start position:0%
array and so now you can see that this
 

00:08:19.039 --> 00:08:20.150 align:start position:0%
array and so now you can see that this
is<00:08:19.199><c> actually</c>

00:08:20.150 --> 00:08:20.160 align:start position:0%
is actually
 

00:08:20.160 --> 00:08:21.990 align:start position:0%
is actually
the<00:08:20.400><c> last</c><00:08:20.800><c> value</c><00:08:21.280><c> that</c><00:08:21.440><c> we</c><00:08:21.520><c> were</c><00:08:21.680><c> looking</c><00:08:21.919><c> at</c>

00:08:21.990 --> 00:08:22.000 align:start position:0%
the last value that we were looking at
 

00:08:22.000 --> 00:08:23.589 align:start position:0%
the last value that we were looking at
so<00:08:22.160><c> we're</c><00:08:22.240><c> not</c><00:08:22.400><c> going</c><00:08:22.479><c> to</c><00:08:22.560><c> go</c><00:08:22.720><c> any</c><00:08:23.039><c> further</c>

00:08:23.589 --> 00:08:23.599 align:start position:0%
so we're not going to go any further
 

00:08:23.599 --> 00:08:25.830 align:start position:0%
so we're not going to go any further
down<00:08:24.000><c> in</c><00:08:24.160><c> this</c><00:08:24.479><c> case</c><00:08:25.039><c> so</c><00:08:25.280><c> just</c><00:08:25.440><c> to</c><00:08:25.520><c> kind</c><00:08:25.680><c> of</c>

00:08:25.830 --> 00:08:25.840 align:start position:0%
down in this case so just to kind of
 

00:08:25.840 --> 00:08:27.270 align:start position:0%
down in this case so just to kind of
illustrate<00:08:26.240><c> that</c><00:08:26.479><c> i'm</c><00:08:26.560><c> going</c><00:08:26.639><c> to</c><00:08:26.720><c> put</c><00:08:26.879><c> a</c><00:08:26.960><c> box</c>

00:08:27.270 --> 00:08:27.280 align:start position:0%
illustrate that i'm going to put a box
 

00:08:27.280 --> 00:08:28.869 align:start position:0%
illustrate that i'm going to put a box
around<00:08:27.520><c> here</c><00:08:27.759><c> this</c><00:08:27.919><c> is</c><00:08:28.000><c> the</c><00:08:28.160><c> base</c><00:08:28.479><c> case</c><00:08:28.720><c> we're</c>

00:08:28.869 --> 00:08:28.879 align:start position:0%
around here this is the base case we're
 

00:08:28.879 --> 00:08:30.950 align:start position:0%
around here this is the base case we're
not<00:08:29.039><c> going</c><00:08:29.120><c> to</c><00:08:29.199><c> go</c><00:08:29.360><c> any</c><00:08:29.520><c> further</c><00:08:29.919><c> same</c><00:08:30.639><c> over</c>

00:08:30.950 --> 00:08:30.960 align:start position:0%
not going to go any further same over
 

00:08:30.960 --> 00:08:33.029 align:start position:0%
not going to go any further same over
here<00:08:31.520><c> this</c><00:08:31.759><c> was</c><00:08:31.919><c> also</c><00:08:32.159><c> the</c><00:08:32.320><c> base</c><00:08:32.560><c> case</c><00:08:32.800><c> because</c>

00:08:33.029 --> 00:08:33.039 align:start position:0%
here this was also the base case because
 

00:08:33.039 --> 00:08:35.110 align:start position:0%
here this was also the base case because
we<00:08:33.200><c> were</c><00:08:33.360><c> choosing</c><00:08:33.760><c> from</c><00:08:34.000><c> the</c><00:08:34.240><c> three</c><00:08:34.560><c> value</c>

00:08:35.110 --> 00:08:35.120 align:start position:0%
we were choosing from the three value
 

00:08:35.120 --> 00:08:37.190 align:start position:0%
we were choosing from the three value
here<00:08:35.360><c> we</c><00:08:35.519><c> included</c><00:08:36.000><c> it</c><00:08:36.240><c> here</c><00:08:36.560><c> we</c><00:08:36.719><c> did</c><00:08:36.880><c> not</c>

00:08:37.190 --> 00:08:37.200 align:start position:0%
here we included it here we did not
 

00:08:37.200 --> 00:08:38.709 align:start position:0%
here we included it here we did not
include<00:08:37.599><c> it</c><00:08:37.839><c> okay</c><00:08:38.159><c> at</c><00:08:38.240><c> this</c><00:08:38.399><c> point</c><00:08:38.560><c> you</c>

00:08:38.709 --> 00:08:38.719 align:start position:0%
include it okay at this point you
 

00:08:38.719 --> 00:08:39.909 align:start position:0%
include it okay at this point you
probably<00:08:38.959><c> get</c><00:08:39.039><c> the</c><00:08:39.200><c> idea</c><00:08:39.519><c> so</c><00:08:39.680><c> i'm</c><00:08:39.760><c> going</c><00:08:39.839><c> to</c>

00:08:39.909 --> 00:08:39.919 align:start position:0%
probably get the idea so i'm going to
 

00:08:39.919 --> 00:08:41.509 align:start position:0%
probably get the idea so i'm going to
fast<00:08:40.159><c> forward</c><00:08:40.479><c> so</c><00:08:40.719><c> over</c><00:08:40.880><c> here</c><00:08:41.039><c> we</c><00:08:41.200><c> either</c>

00:08:41.509 --> 00:08:41.519 align:start position:0%
fast forward so over here we either
 

00:08:41.519 --> 00:08:43.350 align:start position:0%
fast forward so over here we either
include<00:08:41.919><c> the</c><00:08:42.240><c> three</c><00:08:42.560><c> or</c><00:08:42.719><c> we</c><00:08:42.880><c> don't</c><00:08:43.120><c> include</c>

00:08:43.350 --> 00:08:43.360 align:start position:0%
include the three or we don't include
 

00:08:43.360 --> 00:08:45.190 align:start position:0%
include the three or we don't include
the<00:08:43.519><c> three</c><00:08:43.680><c> which</c><00:08:43.839><c> will</c><00:08:44.000><c> leave</c><00:08:44.240><c> us</c><00:08:44.399><c> with</c><00:08:44.720><c> a</c><00:08:44.880><c> one</c>

00:08:45.190 --> 00:08:45.200 align:start position:0%
the three which will leave us with a one
 

00:08:45.200 --> 00:08:47.509 align:start position:0%
the three which will leave us with a one
two<00:08:45.440><c> two</c><00:08:45.760><c> three</c><00:08:46.480><c> the</c><00:08:46.640><c> other</c><00:08:46.800><c> one</c><00:08:47.040><c> would</c><00:08:47.279><c> be</c>

00:08:47.509 --> 00:08:47.519 align:start position:0%
two two three the other one would be
 

00:08:47.519 --> 00:08:50.710 align:start position:0%
two two three the other one would be
just<00:08:47.839><c> one</c><00:08:48.480><c> two</c><00:08:49.120><c> two</c><00:08:49.760><c> and</c><00:08:49.920><c> the</c><00:08:50.080><c> other</c><00:08:50.240><c> decision</c>

00:08:50.710 --> 00:08:50.720 align:start position:0%
just one two two and the other decision
 

00:08:50.720 --> 00:08:53.590 align:start position:0%
just one two two and the other decision
is<00:08:50.880><c> just</c><00:08:51.200><c> one</c><00:08:51.600><c> two</c><00:08:51.839><c> two</c><00:08:52.480><c> over</c><00:08:52.800><c> here</c><00:08:53.279><c> if</c><00:08:53.440><c> we</c>

00:08:53.590 --> 00:08:53.600 align:start position:0%
is just one two two over here if we
 

00:08:53.600 --> 00:08:56.790 align:start position:0%
is just one two two over here if we
include<00:08:54.000><c> the</c><00:08:54.160><c> 3</c><00:08:54.480><c> we</c><00:08:54.720><c> get</c><00:08:55.120><c> 1</c><00:08:55.440><c> 2</c><00:08:55.760><c> 3.</c><00:08:56.320><c> if</c><00:08:56.399><c> we</c><00:08:56.560><c> don't</c>

00:08:56.790 --> 00:08:56.800 align:start position:0%
include the 3 we get 1 2 3. if we don't
 

00:08:56.800 --> 00:09:00.470 align:start position:0%
include the 3 we get 1 2 3. if we don't
include<00:08:57.120><c> the</c><00:08:57.200><c> 3</c><00:08:57.519><c> we</c><00:08:57.760><c> just</c><00:08:58.160><c> get</c><00:08:58.399><c> a</c><00:08:58.640><c> 1</c><00:08:59.360><c> 2</c><00:09:00.000><c> and</c><00:09:00.240><c> then</c>

00:09:00.470 --> 00:09:00.480 align:start position:0%
include the 3 we just get a 1 2 and then
 

00:09:00.480 --> 00:09:02.470 align:start position:0%
include the 3 we just get a 1 2 and then
let's<00:09:00.720><c> finish</c><00:09:01.040><c> these</c><00:09:01.279><c> two</c><00:09:01.600><c> as</c><00:09:01.760><c> well</c><00:09:02.000><c> so</c><00:09:02.240><c> this</c>

00:09:02.470 --> 00:09:02.480 align:start position:0%
let's finish these two as well so this
 

00:09:02.480 --> 00:09:06.870 align:start position:0%
let's finish these two as well so this
would<00:09:02.720><c> be</c><00:09:03.200><c> 2</c><00:09:03.519><c> 2</c><00:09:03.839><c> 3</c><00:09:04.480><c> or</c><00:09:04.800><c> just</c><00:09:05.279><c> a</c><00:09:05.440><c> 2</c><00:09:05.760><c> 2</c><00:09:06.399><c> if</c><00:09:06.480><c> we</c><00:09:06.640><c> don't</c>

00:09:06.870 --> 00:09:06.880 align:start position:0%
would be 2 2 3 or just a 2 2 if we don't
 

00:09:06.880 --> 00:09:09.430 align:start position:0%
would be 2 2 3 or just a 2 2 if we don't
include<00:09:07.200><c> the</c><00:09:07.360><c> 3</c><00:09:07.760><c> and</c><00:09:07.920><c> then</c><00:09:08.160><c> this</c><00:09:08.399><c> one</c><00:09:09.040><c> is</c><00:09:09.200><c> going</c>

00:09:09.430 --> 00:09:09.440 align:start position:0%
include the 3 and then this one is going
 

00:09:09.440 --> 00:09:13.750 align:start position:0%
include the 3 and then this one is going
to<00:09:09.680><c> be</c><00:09:10.000><c> 2</c><00:09:10.399><c> 3</c><00:09:10.880><c> or</c><00:09:11.200><c> just</c><00:09:11.600><c> 2</c><00:09:11.839><c> by</c><00:09:12.080><c> itself</c><00:09:12.720><c> so</c><00:09:13.279><c> these</c>

00:09:13.750 --> 00:09:13.760 align:start position:0%
to be 2 3 or just 2 by itself so these
 

00:09:13.760 --> 00:09:15.590 align:start position:0%
to be 2 3 or just 2 by itself so these
are<00:09:14.080><c> all</c><00:09:14.480><c> of</c><00:09:14.800><c> our</c>

00:09:15.590 --> 00:09:15.600 align:start position:0%
are all of our
 

00:09:15.600 --> 00:09:17.750 align:start position:0%
are all of our
subsets<00:09:16.160><c> that</c><00:09:16.399><c> are</c><00:09:16.560><c> going</c><00:09:16.720><c> to</c><00:09:16.880><c> be</c><00:09:17.120><c> added</c><00:09:17.519><c> to</c>

00:09:17.750 --> 00:09:17.760 align:start position:0%
subsets that are going to be added to
 

00:09:17.760 --> 00:09:19.990 align:start position:0%
subsets that are going to be added to
the<00:09:18.000><c> result</c><00:09:18.720><c> output</c><00:09:19.279><c> you</c><00:09:19.360><c> can</c><00:09:19.519><c> see</c><00:09:19.680><c> that</c><00:09:19.839><c> it's</c>

00:09:19.990 --> 00:09:20.000 align:start position:0%
the result output you can see that it's
 

00:09:20.000 --> 00:09:22.550 align:start position:0%
the result output you can see that it's
actually<00:09:20.399><c> not</c><00:09:20.720><c> quite</c><00:09:21.040><c> 2</c><00:09:21.200><c> to</c><00:09:21.360><c> the</c><00:09:21.440><c> power</c><00:09:21.680><c> of</c><00:09:22.000><c> n</c><00:09:22.399><c> 2</c>

00:09:22.550 --> 00:09:22.560 align:start position:0%
actually not quite 2 to the power of n 2
 

00:09:22.560 --> 00:09:24.070 align:start position:0%
actually not quite 2 to the power of n 2
to<00:09:22.640><c> the</c><00:09:22.720><c> power</c><00:09:22.959><c> of</c><00:09:23.200><c> n</c><00:09:23.360><c> in</c><00:09:23.440><c> this</c><00:09:23.600><c> case</c><00:09:23.760><c> would</c><00:09:23.920><c> be</c>

00:09:24.070 --> 00:09:24.080 align:start position:0%
to the power of n in this case would be
 

00:09:24.080 --> 00:09:26.230 align:start position:0%
to the power of n in this case would be
2<00:09:24.240><c> to</c><00:09:24.320><c> the</c><00:09:24.399><c> power</c><00:09:24.640><c> of</c><00:09:24.800><c> 4</c><00:09:25.040><c> which</c><00:09:25.279><c> is</c><00:09:25.440><c> 16.</c><00:09:26.000><c> in</c><00:09:26.080><c> this</c>

00:09:26.230 --> 00:09:26.240 align:start position:0%
2 to the power of 4 which is 16. in this
 

00:09:26.240 --> 00:09:28.070 align:start position:0%
2 to the power of 4 which is 16. in this
case<00:09:26.480><c> i</c><00:09:26.560><c> think</c><00:09:26.720><c> we</c><00:09:26.880><c> actually</c><00:09:27.120><c> have</c><00:09:27.279><c> about</c><00:09:27.680><c> 12</c>

00:09:28.070 --> 00:09:28.080 align:start position:0%
case i think we actually have about 12
 

00:09:28.080 --> 00:09:29.750 align:start position:0%
case i think we actually have about 12
of<00:09:28.240><c> them</c><00:09:28.560><c> and</c><00:09:28.720><c> the</c><00:09:28.800><c> reason</c><00:09:29.200><c> is</c><00:09:29.360><c> because</c><00:09:29.600><c> we're</c>

00:09:29.750 --> 00:09:29.760 align:start position:0%
of them and the reason is because we're
 

00:09:29.760 --> 00:09:31.509 align:start position:0%
of them and the reason is because we're
eliminating<00:09:30.320><c> duplicates</c><00:09:30.880><c> right</c><00:09:31.279><c> if</c><00:09:31.360><c> we</c>

00:09:31.509 --> 00:09:31.519 align:start position:0%
eliminating duplicates right if we
 

00:09:31.519 --> 00:09:32.949 align:start position:0%
eliminating duplicates right if we
included<00:09:31.920><c> the</c><00:09:32.000><c> duplicates</c><00:09:32.480><c> it</c><00:09:32.640><c> would</c><00:09:32.800><c> have</c>

00:09:32.949 --> 00:09:32.959 align:start position:0%
included the duplicates it would have
 

00:09:32.959 --> 00:09:35.910 align:start position:0%
included the duplicates it would have
been<00:09:33.360><c> 16</c><00:09:34.320><c> but</c><00:09:34.560><c> that's</c><00:09:34.800><c> why</c><00:09:35.279><c> uh</c><00:09:35.519><c> the</c><00:09:35.680><c> time</c>

00:09:35.910 --> 00:09:35.920 align:start position:0%
been 16 but that's why uh the time
 

00:09:35.920 --> 00:09:37.509 align:start position:0%
been 16 but that's why uh the time
complexity<00:09:36.480><c> still</c><00:09:36.800><c> is</c><00:09:36.880><c> the</c><00:09:37.040><c> same</c><00:09:37.279><c> we</c><00:09:37.360><c> can</c>

00:09:37.509 --> 00:09:37.519 align:start position:0%
complexity still is the same we can
 

00:09:37.519 --> 00:09:39.509 align:start position:0%
complexity still is the same we can
still<00:09:37.760><c> say</c><00:09:37.920><c> the</c><00:09:38.080><c> time</c><00:09:38.240><c> complexity</c><00:09:38.800><c> is</c><00:09:38.959><c> n</c><00:09:39.200><c> times</c>

00:09:39.509 --> 00:09:39.519 align:start position:0%
still say the time complexity is n times
 

00:09:39.519 --> 00:09:40.870 align:start position:0%
still say the time complexity is n times
two<00:09:39.680><c> to</c><00:09:39.760><c> the</c><00:09:39.839><c> power</c><00:09:40.080><c> of</c><00:09:40.240><c> n</c><00:09:40.399><c> because</c><00:09:40.640><c> remember</c>

00:09:40.870 --> 00:09:40.880 align:start position:0%
two to the power of n because remember
 

00:09:40.880 --> 00:09:42.949 align:start position:0%
two to the power of n because remember
this<00:09:41.040><c> is</c><00:09:41.200><c> the</c><00:09:41.279><c> worst</c><00:09:41.680><c> case</c><00:09:42.080><c> we</c><00:09:42.240><c> don't</c><00:09:42.480><c> actually</c>

00:09:42.949 --> 00:09:42.959 align:start position:0%
this is the worst case we don't actually
 

00:09:42.959 --> 00:09:44.310 align:start position:0%
this is the worst case we don't actually
know<00:09:43.200><c> if</c><00:09:43.360><c> there</c><00:09:43.600><c> are</c><00:09:43.760><c> gonna</c><00:09:44.000><c> be</c><00:09:44.160><c> any</c>

00:09:44.310 --> 00:09:44.320 align:start position:0%
know if there are gonna be any
 

00:09:44.320 --> 00:09:45.990 align:start position:0%
know if there are gonna be any
duplicates<00:09:44.880><c> in</c><00:09:44.959><c> the</c><00:09:45.120><c> input</c><00:09:45.440><c> or</c><00:09:45.680><c> not</c><00:09:45.920><c> if</c>

00:09:45.990 --> 00:09:46.000 align:start position:0%
duplicates in the input or not if
 

00:09:46.000 --> 00:09:48.389 align:start position:0%
duplicates in the input or not if
there's<00:09:46.240><c> not</c><00:09:46.480><c> any</c><00:09:46.640><c> duplicates</c><00:09:47.519><c> this</c><00:09:47.920><c> is</c><00:09:48.160><c> gonna</c>

00:09:48.389 --> 00:09:48.399 align:start position:0%
there's not any duplicates this is gonna
 

00:09:48.399 --> 00:09:50.389 align:start position:0%
there's not any duplicates this is gonna
be<00:09:48.720><c> the</c><00:09:49.120><c> upper</c><00:09:49.360><c> bound</c><00:09:49.760><c> you</c><00:09:49.920><c> know</c><00:09:50.000><c> if</c><00:09:50.080><c> there</c><00:09:50.240><c> are</c>

00:09:50.389 --> 00:09:50.399 align:start position:0%
be the upper bound you know if there are
 

00:09:50.399 --> 00:09:52.230 align:start position:0%
be the upper bound you know if there are
some<00:09:50.560><c> duplicates</c><00:09:51.440><c> the</c><00:09:51.680><c> actual</c><00:09:52.000><c> time</c>

00:09:52.230 --> 00:09:52.240 align:start position:0%
some duplicates the actual time
 

00:09:52.240 --> 00:09:53.829 align:start position:0%
some duplicates the actual time
complexity<00:09:52.800><c> might</c><00:09:52.959><c> be</c><00:09:53.040><c> a</c><00:09:53.120><c> little</c><00:09:53.279><c> bit</c><00:09:53.440><c> smaller</c>

00:09:53.829 --> 00:09:53.839 align:start position:0%
complexity might be a little bit smaller
 

00:09:53.839 --> 00:09:55.670 align:start position:0%
complexity might be a little bit smaller
than<00:09:54.080><c> this</c><00:09:54.399><c> but</c><00:09:54.560><c> i</c><00:09:54.640><c> think</c><00:09:54.800><c> that's</c><00:09:55.040><c> enough</c><00:09:55.360><c> for</c>

00:09:55.670 --> 00:09:55.680 align:start position:0%
than this but i think that's enough for
 

00:09:55.680 --> 00:09:57.430 align:start position:0%
than this but i think that's enough for
us<00:09:56.000><c> with</c><00:09:56.240><c> this</c><00:09:56.480><c> explanation</c><00:09:57.040><c> now</c><00:09:57.200><c> let's</c>

00:09:57.430 --> 00:09:57.440 align:start position:0%
us with this explanation now let's
 

00:09:57.440 --> 00:09:58.949 align:start position:0%
us with this explanation now let's
actually<00:09:57.760><c> get</c><00:09:57.920><c> into</c><00:09:58.160><c> writing</c><00:09:58.480><c> the</c><00:09:58.640><c> code</c>

00:09:58.949 --> 00:09:58.959 align:start position:0%
actually get into writing the code
 

00:09:58.959 --> 00:10:01.110 align:start position:0%
actually get into writing the code
luckily<00:09:59.440><c> it's</c><00:09:59.600><c> pretty</c><00:09:59.920><c> straightforward</c><00:10:00.880><c> okay</c>

00:10:01.110 --> 00:10:01.120 align:start position:0%
luckily it's pretty straightforward okay
 

00:10:01.120 --> 00:10:03.350 align:start position:0%
luckily it's pretty straightforward okay
so<00:10:01.279><c> now</c><00:10:01.440><c> let's</c><00:10:01.680><c> code</c><00:10:01.920><c> it</c><00:10:02.160><c> up</c><00:10:02.480><c> and</c><00:10:03.040><c> we're</c><00:10:03.200><c> going</c>

00:10:03.350 --> 00:10:03.360 align:start position:0%
so now let's code it up and we're going
 

00:10:03.360 --> 00:10:05.030 align:start position:0%
so now let's code it up and we're going
to<00:10:03.440><c> declare</c><00:10:03.920><c> our</c><00:10:04.079><c> result</c><00:10:04.480><c> it's</c><00:10:04.720><c> initially</c>

00:10:05.030 --> 00:10:05.040 align:start position:0%
to declare our result it's initially
 

00:10:05.040 --> 00:10:07.269 align:start position:0%
to declare our result it's initially
just<00:10:05.200><c> going</c><00:10:05.279><c> to</c><00:10:05.360><c> be</c><00:10:05.519><c> an</c><00:10:05.680><c> empty</c><00:10:06.160><c> array</c><00:10:06.959><c> this</c><00:10:07.200><c> is</c>

00:10:07.269 --> 00:10:07.279 align:start position:0%
just going to be an empty array this is
 

00:10:07.279 --> 00:10:08.710 align:start position:0%
just going to be an empty array this is
what<00:10:07.440><c> we're</c><00:10:07.600><c> going</c><00:10:07.680><c> to</c><00:10:07.760><c> be</c><00:10:07.920><c> adding</c><00:10:08.320><c> all</c><00:10:08.560><c> our</c>

00:10:08.710 --> 00:10:08.720 align:start position:0%
what we're going to be adding all our
 

00:10:08.720 --> 00:10:10.710 align:start position:0%
what we're going to be adding all our
subsets<00:10:09.360><c> to</c><00:10:09.680><c> and</c><00:10:09.920><c> remember</c><00:10:10.240><c> before</c><00:10:10.640><c> we</c>

00:10:10.710 --> 00:10:10.720 align:start position:0%
subsets to and remember before we
 

00:10:10.720 --> 00:10:12.389 align:start position:0%
subsets to and remember before we
actually<00:10:11.040><c> get</c><00:10:11.279><c> into</c><00:10:11.600><c> the</c><00:10:11.760><c> backtracking</c>

00:10:12.389 --> 00:10:12.399 align:start position:0%
actually get into the backtracking
 

00:10:12.399 --> 00:10:13.670 align:start position:0%
actually get into the backtracking
portion<00:10:12.720><c> we</c><00:10:12.800><c> want</c><00:10:12.959><c> to</c><00:10:13.040><c> make</c><00:10:13.200><c> sure</c><00:10:13.360><c> that</c><00:10:13.519><c> our</c>

00:10:13.670 --> 00:10:13.680 align:start position:0%
portion we want to make sure that our
 

00:10:13.680 --> 00:10:16.310 align:start position:0%
portion we want to make sure that our
input<00:10:14.079><c> array</c><00:10:14.480><c> is</c><00:10:14.720><c> in</c><00:10:14.880><c> sorted</c><00:10:15.279><c> order</c><00:10:15.920><c> okay</c><00:10:16.160><c> so</c>

00:10:16.310 --> 00:10:16.320 align:start position:0%
input array is in sorted order okay so
 

00:10:16.320 --> 00:10:18.710 align:start position:0%
input array is in sorted order okay so
now<00:10:16.560><c> let's</c><00:10:16.880><c> write</c><00:10:17.120><c> the</c><00:10:17.279><c> backtracking</c><00:10:18.000><c> portion</c>

00:10:18.710 --> 00:10:18.720 align:start position:0%
now let's write the backtracking portion
 

00:10:18.720 --> 00:10:21.110 align:start position:0%
now let's write the backtracking portion
we<00:10:19.040><c> are</c><00:10:19.279><c> given</c><00:10:20.000><c> uh</c><00:10:20.240><c> two</c><00:10:20.399><c> main</c><00:10:20.720><c> inputs</c><00:10:21.040><c> that</c>

00:10:21.110 --> 00:10:21.120 align:start position:0%
we are given uh two main inputs that
 

00:10:21.120 --> 00:10:22.550 align:start position:0%
we are given uh two main inputs that
we're<00:10:21.279><c> gonna</c><00:10:21.519><c> keep</c><00:10:21.680><c> track</c><00:10:21.920><c> of</c><00:10:22.000><c> one</c><00:10:22.240><c> is</c><00:10:22.399><c> the</c>

00:10:22.550 --> 00:10:22.560 align:start position:0%
we're gonna keep track of one is the
 

00:10:22.560 --> 00:10:24.550 align:start position:0%
we're gonna keep track of one is the
index<00:10:22.880><c> that</c><00:10:22.959><c> we're</c><00:10:23.200><c> at</c><00:10:23.360><c> in</c><00:10:23.519><c> our</c><00:10:23.680><c> nums</c><00:10:24.079><c> array</c>

00:10:24.550 --> 00:10:24.560 align:start position:0%
index that we're at in our nums array
 

00:10:24.560 --> 00:10:26.389 align:start position:0%
index that we're at in our nums array
and<00:10:24.720><c> the</c><00:10:24.800><c> second</c><00:10:25.200><c> is</c><00:10:25.360><c> what's</c><00:10:25.600><c> the</c><00:10:25.920><c> current</c>

00:10:26.389 --> 00:10:26.399 align:start position:0%
and the second is what's the current
 

00:10:26.399 --> 00:10:29.509 align:start position:0%
and the second is what's the current
subset<00:10:27.360><c> looking</c><00:10:27.839><c> like</c><00:10:28.399><c> so</c><00:10:28.640><c> far</c><00:10:29.200><c> uh</c><00:10:29.360><c> we're</c>

00:10:29.509 --> 00:10:29.519 align:start position:0%
subset looking like so far uh we're
 

00:10:29.519 --> 00:10:31.430 align:start position:0%
subset looking like so far uh we're
gonna<00:10:29.680><c> have</c><00:10:29.760><c> a</c><00:10:29.839><c> single</c><00:10:30.240><c> base</c><00:10:30.560><c> case</c>

00:10:31.430 --> 00:10:31.440 align:start position:0%
gonna have a single base case
 

00:10:31.440 --> 00:10:33.269 align:start position:0%
gonna have a single base case
and<00:10:31.600><c> that's</c><00:10:31.760><c> when</c><00:10:31.920><c> we</c><00:10:32.160><c> reach</c><00:10:32.480><c> the</c><00:10:32.720><c> end</c><00:10:32.959><c> of</c><00:10:33.040><c> the</c>

00:10:33.269 --> 00:10:33.279 align:start position:0%
and that's when we reach the end of the
 

00:10:33.279 --> 00:10:35.190 align:start position:0%
and that's when we reach the end of the
input<00:10:33.519><c> array</c><00:10:33.760><c> so</c><00:10:33.920><c> basically</c><00:10:34.320><c> if</c><00:10:34.560><c> i</c><00:10:34.720><c> is</c><00:10:34.959><c> equal</c>

00:10:35.190 --> 00:10:35.200 align:start position:0%
input array so basically if i is equal
 

00:10:35.200 --> 00:10:38.310 align:start position:0%
input array so basically if i is equal
to<00:10:35.440><c> the</c><00:10:35.760><c> length</c><00:10:36.160><c> of</c><00:10:36.480><c> the</c><00:10:36.800><c> input</c><00:10:37.120><c> array</c><00:10:37.440><c> nums</c>

00:10:38.310 --> 00:10:38.320 align:start position:0%
to the length of the input array nums
 

00:10:38.320 --> 00:10:39.910 align:start position:0%
to the length of the input array nums
that's<00:10:38.560><c> basically</c><00:10:38.959><c> how</c><00:10:39.120><c> we</c><00:10:39.279><c> know</c><00:10:39.680><c> we</c><00:10:39.760><c> have</c>

00:10:39.910 --> 00:10:39.920 align:start position:0%
that's basically how we know we have
 

00:10:39.920 --> 00:10:41.829 align:start position:0%
that's basically how we know we have
gone<00:10:40.160><c> through</c><00:10:40.399><c> the</c><00:10:40.560><c> entire</c><00:10:40.959><c> array</c><00:10:41.440><c> that</c><00:10:41.600><c> means</c>

00:10:41.829 --> 00:10:41.839 align:start position:0%
gone through the entire array that means
 

00:10:41.839 --> 00:10:43.990 align:start position:0%
gone through the entire array that means
we<00:10:42.000><c> can</c><00:10:42.160><c> take</c><00:10:42.480><c> this</c><00:10:42.880><c> subset</c><00:10:43.360><c> that</c><00:10:43.519><c> we</c><00:10:43.760><c> have</c>

00:10:43.990 --> 00:10:44.000 align:start position:0%
we can take this subset that we have
 

00:10:44.000 --> 00:10:46.949 align:start position:0%
we can take this subset that we have
built<00:10:44.560><c> and</c><00:10:44.720><c> go</c><00:10:44.880><c> ahead</c><00:10:45.120><c> and</c><00:10:45.279><c> append</c><00:10:45.760><c> it</c><00:10:46.000><c> to</c><00:10:46.399><c> our</c>

00:10:46.949 --> 00:10:46.959 align:start position:0%
built and go ahead and append it to our
 

00:10:46.959 --> 00:10:49.509 align:start position:0%
built and go ahead and append it to our
result<00:10:47.680><c> but</c><00:10:47.920><c> we</c><00:10:48.160><c> want</c><00:10:48.320><c> to</c><00:10:48.399><c> make</c><00:10:48.640><c> a</c><00:10:48.880><c> copy</c><00:10:49.360><c> of</c>

00:10:49.509 --> 00:10:49.519 align:start position:0%
result but we want to make a copy of
 

00:10:49.519 --> 00:10:51.910 align:start position:0%
result but we want to make a copy of
this<00:10:49.760><c> subset</c><00:10:50.320><c> because</c><00:10:50.800><c> this</c><00:10:51.200><c> subset</c><00:10:51.680><c> is</c><00:10:51.760><c> just</c>

00:10:51.910 --> 00:10:51.920 align:start position:0%
this subset because this subset is just
 

00:10:51.920 --> 00:10:53.990 align:start position:0%
this subset because this subset is just
going<00:10:52.000><c> to</c><00:10:52.079><c> be</c><00:10:52.320><c> an</c><00:10:52.480><c> array</c><00:10:53.120><c> and</c><00:10:53.600><c> we're</c><00:10:53.760><c> going</c><00:10:53.920><c> to</c>

00:10:53.990 --> 00:10:54.000 align:start position:0%
going to be an array and we're going to
 

00:10:54.000 --> 00:10:56.550 align:start position:0%
going to be an array and we're going to
be<00:10:54.399><c> using</c><00:10:54.880><c> this</c><00:10:55.200><c> as</c><00:10:55.360><c> we</c><00:10:55.600><c> do</c><00:10:55.760><c> our</c><00:10:55.920><c> backtracking</c>

00:10:56.550 --> 00:10:56.560 align:start position:0%
be using this as we do our backtracking
 

00:10:56.560 --> 00:10:58.069 align:start position:0%
be using this as we do our backtracking
so<00:10:56.720><c> what</c><00:10:56.880><c> we</c><00:10:56.959><c> want</c><00:10:57.120><c> to</c><00:10:57.200><c> do</c><00:10:57.440><c> is</c><00:10:57.519><c> actually</c><00:10:57.760><c> create</c>

00:10:58.069 --> 00:10:58.079 align:start position:0%
so what we want to do is actually create
 

00:10:58.079 --> 00:11:00.630 align:start position:0%
so what we want to do is actually create
a<00:10:58.240><c> copy</c><00:10:58.720><c> of</c><00:10:58.800><c> this</c><00:10:59.040><c> subset</c><00:10:59.440><c> so</c><00:10:59.600><c> that</c><00:10:59.760><c> when</c><00:11:00.000><c> we</c>

00:11:00.630 --> 00:11:00.640 align:start position:0%
a copy of this subset so that when we
 

00:11:00.640 --> 00:11:02.870 align:start position:0%
a copy of this subset so that when we
have<00:11:00.800><c> a</c><00:11:00.959><c> future</c><00:11:01.440><c> backtracking</c><00:11:02.160><c> call</c><00:11:02.560><c> that</c><00:11:02.720><c> we</c>

00:11:02.870 --> 00:11:02.880 align:start position:0%
have a future backtracking call that we
 

00:11:02.880 --> 00:11:05.509 align:start position:0%
have a future backtracking call that we
don't<00:11:03.120><c> end</c><00:11:03.360><c> up</c><00:11:03.600><c> overwriting</c><00:11:04.800><c> this</c><00:11:05.040><c> subset</c>

00:11:05.509 --> 00:11:05.519 align:start position:0%
don't end up overwriting this subset
 

00:11:05.519 --> 00:11:07.750 align:start position:0%
don't end up overwriting this subset
because<00:11:05.680><c> we're</c><00:11:05.920><c> taking</c><00:11:06.320><c> a</c><00:11:06.560><c> reference</c><00:11:07.279><c> to</c><00:11:07.519><c> this</c>

00:11:07.750 --> 00:11:07.760 align:start position:0%
because we're taking a reference to this
 

00:11:07.760 --> 00:11:10.710 align:start position:0%
because we're taking a reference to this
subset<00:11:08.240><c> and</c><00:11:08.399><c> appending</c><00:11:08.959><c> it</c><00:11:09.120><c> to</c><00:11:09.360><c> this</c><00:11:09.920><c> array</c>

00:11:10.710 --> 00:11:10.720 align:start position:0%
subset and appending it to this array
 

00:11:10.720 --> 00:11:12.790 align:start position:0%
subset and appending it to this array
what<00:11:10.880><c> we</c><00:11:11.040><c> want</c><00:11:11.200><c> to</c><00:11:11.279><c> do</c><00:11:11.440><c> is</c><00:11:11.600><c> create</c><00:11:11.920><c> a</c><00:11:12.079><c> copy</c><00:11:12.720><c> and</c>

00:11:12.790 --> 00:11:12.800 align:start position:0%
what we want to do is create a copy and
 

00:11:12.800 --> 00:11:15.110 align:start position:0%
what we want to do is create a copy and
we<00:11:12.959><c> can</c><00:11:13.040><c> do</c><00:11:13.200><c> that</c><00:11:13.360><c> in</c><00:11:13.440><c> python</c><00:11:14.000><c> like</c><00:11:14.320><c> this</c><00:11:14.959><c> or</c>

00:11:15.110 --> 00:11:15.120 align:start position:0%
we can do that in python like this or
 

00:11:15.120 --> 00:11:16.550 align:start position:0%
we can do that in python like this or
you<00:11:15.279><c> can</c><00:11:15.360><c> use</c><00:11:15.519><c> like</c><00:11:15.680><c> a</c><00:11:15.760><c> built-in</c><00:11:16.240><c> copy</c>

00:11:16.550 --> 00:11:16.560 align:start position:0%
you can use like a built-in copy
 

00:11:16.560 --> 00:11:18.949 align:start position:0%
you can use like a built-in copy
function<00:11:17.120><c> in</c><00:11:17.279><c> java</c><00:11:17.760><c> or</c><00:11:18.160><c> whatever</c><00:11:18.560><c> language</c>

00:11:18.949 --> 00:11:18.959 align:start position:0%
function in java or whatever language
 

00:11:18.959 --> 00:11:20.870 align:start position:0%
function in java or whatever language
you<00:11:19.120><c> want</c><00:11:19.760><c> and</c><00:11:19.920><c> after</c><00:11:20.160><c> that</c><00:11:20.320><c> we</c><00:11:20.480><c> just</c><00:11:20.640><c> want</c><00:11:20.800><c> to</c>

00:11:20.870 --> 00:11:20.880 align:start position:0%
you want and after that we just want to
 

00:11:20.880 --> 00:11:22.870 align:start position:0%
you want and after that we just want to
return<00:11:21.519><c> because</c><00:11:21.680><c> we</c><00:11:21.839><c> don't</c><00:11:22.079><c> want</c><00:11:22.320><c> to</c><00:11:22.480><c> continue</c>

00:11:22.870 --> 00:11:22.880 align:start position:0%
return because we don't want to continue
 

00:11:22.880 --> 00:11:24.550 align:start position:0%
return because we don't want to continue
backtracking<00:11:23.440><c> when</c><00:11:23.600><c> we</c><00:11:23.760><c> reach</c><00:11:24.079><c> the</c><00:11:24.240><c> end</c><00:11:24.480><c> of</c>

00:11:24.550 --> 00:11:24.560 align:start position:0%
backtracking when we reach the end of
 

00:11:24.560 --> 00:11:27.110 align:start position:0%
backtracking when we reach the end of
the<00:11:24.720><c> array</c><00:11:25.360><c> okay</c><00:11:25.920><c> that's</c><00:11:26.160><c> the</c><00:11:26.240><c> base</c><00:11:26.480><c> case</c><00:11:26.959><c> but</c>

00:11:27.110 --> 00:11:27.120 align:start position:0%
the array okay that's the base case but
 

00:11:27.120 --> 00:11:29.509 align:start position:0%
the array okay that's the base case but
what<00:11:27.360><c> is</c><00:11:27.519><c> the</c><00:11:27.680><c> recursive</c><00:11:28.240><c> case</c><00:11:28.640><c> well</c><00:11:29.120><c> remember</c>

00:11:29.509 --> 00:11:29.519 align:start position:0%
what is the recursive case well remember
 

00:11:29.519 --> 00:11:31.829 align:start position:0%
what is the recursive case well remember
we<00:11:29.680><c> have</c><00:11:29.920><c> exactly</c><00:11:30.399><c> two</c><00:11:30.640><c> decisions</c><00:11:31.200><c> to</c><00:11:31.360><c> make</c>

00:11:31.829 --> 00:11:31.839 align:start position:0%
we have exactly two decisions to make
 

00:11:31.839 --> 00:11:35.190 align:start position:0%
we have exactly two decisions to make
one<00:11:32.160><c> is</c><00:11:32.640><c> all</c><00:11:33.040><c> subsets</c><00:11:33.600><c> that</c><00:11:33.839><c> include</c><00:11:34.640><c> nums</c><00:11:34.959><c> of</c>

00:11:35.190 --> 00:11:35.200 align:start position:0%
one is all subsets that include nums of
 

00:11:35.200 --> 00:11:37.190 align:start position:0%
one is all subsets that include nums of
i<00:11:35.360><c> that</c><00:11:35.600><c> include</c><00:11:35.920><c> the</c><00:11:36.000><c> number</c><00:11:36.320><c> that</c><00:11:36.480><c> we're</c><00:11:36.720><c> at</c>

00:11:37.190 --> 00:11:37.200 align:start position:0%
i that include the number that we're at
 

00:11:37.200 --> 00:11:40.389 align:start position:0%
i that include the number that we're at
the<00:11:37.440><c> other</c><00:11:37.680><c> case</c><00:11:38.160><c> is</c><00:11:38.720><c> all</c><00:11:38.959><c> subsets</c><00:11:39.760><c> that</c><00:11:40.000><c> do</c>

00:11:40.389 --> 00:11:40.399 align:start position:0%
the other case is all subsets that do
 

00:11:40.399 --> 00:11:42.870 align:start position:0%
the other case is all subsets that do
not<00:11:40.800><c> include</c><00:11:41.440><c> nums</c><00:11:41.680><c> of</c><00:11:41.920><c> i</c><00:11:42.000><c> so</c><00:11:42.240><c> we</c><00:11:42.399><c> do</c><00:11:42.560><c> not</c>

00:11:42.870 --> 00:11:42.880 align:start position:0%
not include nums of i so we do not
 

00:11:42.880 --> 00:11:44.630 align:start position:0%
not include nums of i so we do not
choose<00:11:43.200><c> to</c><00:11:43.440><c> include</c><00:11:43.760><c> nums</c><00:11:44.000><c> of</c><00:11:44.160><c> i</c><00:11:44.320><c> in</c><00:11:44.480><c> our</c>

00:11:44.630 --> 00:11:44.640 align:start position:0%
choose to include nums of i in our
 

00:11:44.640 --> 00:11:46.310 align:start position:0%
choose to include nums of i in our
subset<00:11:45.279><c> let's</c><00:11:45.519><c> start</c><00:11:45.680><c> with</c><00:11:45.839><c> the</c><00:11:46.000><c> first</c>

00:11:46.310 --> 00:11:46.320 align:start position:0%
subset let's start with the first
 

00:11:46.320 --> 00:11:47.910 align:start position:0%
subset let's start with the first
decision<00:11:46.720><c> what</c><00:11:46.880><c> we're</c><00:11:47.040><c> going</c><00:11:47.120><c> to</c><00:11:47.279><c> do</c><00:11:47.519><c> is</c><00:11:47.760><c> we're</c>

00:11:47.910 --> 00:11:47.920 align:start position:0%
decision what we're going to do is we're
 

00:11:47.920 --> 00:11:49.990 align:start position:0%
decision what we're going to do is we're
going<00:11:48.000><c> to</c><00:11:48.160><c> include</c><00:11:48.959><c> nums</c><00:11:49.279><c> of</c><00:11:49.440><c> i</c><00:11:49.760><c> right</c><00:11:49.920><c> so</c>

00:11:49.990 --> 00:11:50.000 align:start position:0%
going to include nums of i right so
 

00:11:50.000 --> 00:11:51.190 align:start position:0%
going to include nums of i right so
we're<00:11:50.160><c> going</c><00:11:50.240><c> to</c><00:11:50.320><c> take</c><00:11:50.480><c> our</c><00:11:50.639><c> subset</c><00:11:51.040><c> and</c>

00:11:51.190 --> 00:11:51.200 align:start position:0%
we're going to take our subset and
 

00:11:51.200 --> 00:11:54.710 align:start position:0%
we're going to take our subset and
append<00:11:51.680><c> to</c><00:11:51.920><c> it</c><00:11:52.399><c> this</c><00:11:52.880><c> number</c><00:11:53.279><c> nums</c><00:11:53.600><c> of</c><00:11:53.839><c> i</c><00:11:54.320><c> and</c>

00:11:54.710 --> 00:11:54.720 align:start position:0%
append to it this number nums of i and
 

00:11:54.720 --> 00:11:56.389 align:start position:0%
append to it this number nums of i and
then<00:11:55.040><c> simply</c><00:11:55.519><c> enough</c><00:11:55.920><c> we're</c><00:11:56.079><c> going</c><00:11:56.160><c> to</c><00:11:56.240><c> go</c>

00:11:56.389 --> 00:11:56.399 align:start position:0%
then simply enough we're going to go
 

00:11:56.399 --> 00:11:59.030 align:start position:0%
then simply enough we're going to go
ahead<00:11:56.639><c> and</c><00:11:56.800><c> do</c><00:11:57.040><c> our</c><00:11:57.279><c> backtracking</c><00:11:58.160><c> call</c><00:11:58.720><c> by</c>

00:11:59.030 --> 00:11:59.040 align:start position:0%
ahead and do our backtracking call by
 

00:11:59.040 --> 00:12:01.030 align:start position:0%
ahead and do our backtracking call by
passing<00:11:59.440><c> in</c><00:11:59.600><c> the</c><00:11:59.839><c> next</c><00:12:00.320><c> index</c><00:12:00.639><c> so</c><00:12:00.800><c> we're</c><00:12:00.959><c> going</c>

00:12:01.030 --> 00:12:01.040 align:start position:0%
passing in the next index so we're going
 

00:12:01.040 --> 00:12:03.910 align:start position:0%
passing in the next index so we're going
to<00:12:01.120><c> pass</c><00:12:01.440><c> in</c><00:12:02.079><c> i</c><00:12:02.399><c> plus</c><00:12:02.800><c> 1.</c><00:12:03.279><c> and</c><00:12:03.519><c> we're</c><00:12:03.680><c> going</c><00:12:03.760><c> to</c>

00:12:03.910 --> 00:12:03.920 align:start position:0%
to pass in i plus 1. and we're going to
 

00:12:03.920 --> 00:12:07.430 align:start position:0%
to pass in i plus 1. and we're going to
pass<00:12:04.240><c> in</c><00:12:04.560><c> the</c><00:12:04.959><c> subset</c><00:12:05.760><c> that</c><00:12:06.000><c> we</c><00:12:06.160><c> have</c><00:12:06.399><c> so</c><00:12:06.720><c> far</c>

00:12:07.430 --> 00:12:07.440 align:start position:0%
pass in the subset that we have so far
 

00:12:07.440 --> 00:12:09.190 align:start position:0%
pass in the subset that we have so far
and<00:12:08.000><c> you</c><00:12:08.160><c> know</c><00:12:08.320><c> that's</c><00:12:08.560><c> going</c><00:12:08.639><c> to</c><00:12:08.720><c> take</c><00:12:08.959><c> care</c>

00:12:09.190 --> 00:12:09.200 align:start position:0%
and you know that's going to take care
 

00:12:09.200 --> 00:12:11.829 align:start position:0%
and you know that's going to take care
of<00:12:09.440><c> all</c><00:12:09.760><c> subsets</c><00:12:10.320><c> that</c><00:12:10.560><c> include</c><00:12:11.200><c> this</c><00:12:11.440><c> number</c>

00:12:11.829 --> 00:12:11.839 align:start position:0%
of all subsets that include this number
 

00:12:11.839 --> 00:12:14.069 align:start position:0%
of all subsets that include this number
so<00:12:12.079><c> very</c><00:12:12.480><c> easy</c><00:12:12.959><c> but</c><00:12:13.120><c> before</c><00:12:13.600><c> we</c><00:12:13.839><c> start</c>

00:12:14.069 --> 00:12:14.079 align:start position:0%
so very easy but before we start
 

00:12:14.079 --> 00:12:16.069 align:start position:0%
so very easy but before we start
generating<00:12:14.639><c> all</c><00:12:14.800><c> subsets</c><00:12:15.360><c> that</c><00:12:15.600><c> do</c><00:12:15.839><c> not</c>

00:12:16.069 --> 00:12:16.079 align:start position:0%
generating all subsets that do not
 

00:12:16.079 --> 00:12:18.629 align:start position:0%
generating all subsets that do not
include<00:12:16.480><c> that</c><00:12:16.720><c> number</c><00:12:17.279><c> we</c><00:12:17.440><c> should</c><00:12:17.760><c> probably</c>

00:12:18.629 --> 00:12:18.639 align:start position:0%
include that number we should probably
 

00:12:18.639 --> 00:12:21.829 align:start position:0%
include that number we should probably
remove<00:12:19.680><c> from</c><00:12:19.920><c> the</c><00:12:20.160><c> subset</c><00:12:20.800><c> the</c><00:12:21.040><c> value</c><00:12:21.440><c> that</c><00:12:21.600><c> we</c>

00:12:21.829 --> 00:12:21.839 align:start position:0%
remove from the subset the value that we
 

00:12:21.839 --> 00:12:24.230 align:start position:0%
remove from the subset the value that we
just<00:12:22.240><c> added</c><00:12:22.639><c> to</c><00:12:22.800><c> it</c><00:12:22.959><c> we</c><00:12:23.040><c> can</c><00:12:23.200><c> do</c><00:12:23.360><c> that</c><00:12:23.760><c> just</c><00:12:24.000><c> by</c>

00:12:24.230 --> 00:12:24.240 align:start position:0%
just added to it we can do that just by
 

00:12:24.240 --> 00:12:27.030 align:start position:0%
just added to it we can do that just by
saying<00:12:24.720><c> subset</c><00:12:25.279><c> pop</c><00:12:25.600><c> that'll</c><00:12:26.000><c> pop</c><00:12:26.320><c> this</c><00:12:26.639><c> value</c>

00:12:27.030 --> 00:12:27.040 align:start position:0%
saying subset pop that'll pop this value
 

00:12:27.040 --> 00:12:29.269 align:start position:0%
saying subset pop that'll pop this value
that<00:12:27.200><c> we</c><00:12:27.440><c> just</c><00:12:27.839><c> added</c><00:12:28.320><c> so</c><00:12:28.560><c> now</c><00:12:28.959><c> we're</c><00:12:29.120><c> going</c><00:12:29.200><c> to</c>

00:12:29.269 --> 00:12:29.279 align:start position:0%
that we just added so now we're going to
 

00:12:29.279 --> 00:12:31.110 align:start position:0%
that we just added so now we're going to
generate<00:12:29.760><c> all</c><00:12:29.920><c> subsets</c><00:12:30.399><c> that</c><00:12:30.560><c> don't</c><00:12:30.800><c> include</c>

00:12:31.110 --> 00:12:31.120 align:start position:0%
generate all subsets that don't include
 

00:12:31.120 --> 00:12:33.190 align:start position:0%
generate all subsets that don't include
numbers<00:12:31.440><c> of</c><00:12:31.600><c> eye</c><00:12:31.839><c> but</c><00:12:32.000><c> this</c><00:12:32.240><c> is</c><00:12:32.320><c> the</c><00:12:32.639><c> slightly</c>

00:12:33.190 --> 00:12:33.200 align:start position:0%
numbers of eye but this is the slightly
 

00:12:33.200 --> 00:12:34.949 align:start position:0%
numbers of eye but this is the slightly
tricky<00:12:33.519><c> part</c><00:12:33.839><c> because</c><00:12:34.079><c> remember</c><00:12:34.560><c> if</c><00:12:34.720><c> there</c>

00:12:34.949 --> 00:12:34.959 align:start position:0%
tricky part because remember if there
 

00:12:34.959 --> 00:12:37.670 align:start position:0%
tricky part because remember if there
are<00:12:35.680><c> duplicates</c><00:12:36.720><c> the</c><00:12:36.880><c> duplicates</c><00:12:37.360><c> will</c><00:12:37.519><c> be</c>

00:12:37.670 --> 00:12:37.680 align:start position:0%
are duplicates the duplicates will be
 

00:12:37.680 --> 00:12:39.030 align:start position:0%
are duplicates the duplicates will be
right<00:12:38.000><c> next</c><00:12:38.240><c> to</c><00:12:38.399><c> each</c><00:12:38.560><c> other</c><00:12:38.720><c> because</c>

00:12:39.030 --> 00:12:39.040 align:start position:0%
right next to each other because
 

00:12:39.040 --> 00:12:41.030 align:start position:0%
right next to each other because
remember<00:12:39.360><c> we</c><00:12:39.600><c> sorted</c><00:12:39.920><c> the</c><00:12:40.079><c> input</c><00:12:40.399><c> array</c><00:12:40.880><c> so</c>

00:12:41.030 --> 00:12:41.040 align:start position:0%
remember we sorted the input array so
 

00:12:41.040 --> 00:12:43.190 align:start position:0%
remember we sorted the input array so
what<00:12:41.200><c> we</c><00:12:41.440><c> want</c><00:12:41.600><c> to</c><00:12:41.839><c> say</c><00:12:42.320><c> is</c>

00:12:43.190 --> 00:12:43.200 align:start position:0%
what we want to say is
 

00:12:43.200 --> 00:12:46.230 align:start position:0%
what we want to say is
i<00:12:43.519><c> plus</c><00:12:43.839><c> 1</c><00:12:44.160><c> as</c><00:12:44.320><c> long</c><00:12:44.560><c> as</c><00:12:44.720><c> i</c><00:12:44.880><c> plus</c><00:12:45.120><c> 1</c><00:12:45.440><c> is</c><00:12:45.680><c> inbound</c>

00:12:46.230 --> 00:12:46.240 align:start position:0%
i plus 1 as long as i plus 1 is inbound
 

00:12:46.240 --> 00:12:47.670 align:start position:0%
i plus 1 as long as i plus 1 is inbound
so<00:12:46.399><c> it's</c><00:12:46.560><c> less</c><00:12:46.800><c> than</c><00:12:46.959><c> the</c><00:12:47.120><c> length</c><00:12:47.440><c> of</c><00:12:47.519><c> the</c>

00:12:47.670 --> 00:12:47.680 align:start position:0%
so it's less than the length of the
 

00:12:47.680 --> 00:12:49.269 align:start position:0%
so it's less than the length of the
input<00:12:48.000><c> array</c><00:12:48.320><c> and</c><00:12:48.480><c> you'll</c><00:12:48.720><c> see</c><00:12:48.880><c> why</c><00:12:49.120><c> we're</c>

00:12:49.269 --> 00:12:49.279 align:start position:0%
input array and you'll see why we're
 

00:12:49.279 --> 00:12:53.430 align:start position:0%
input array and you'll see why we're
doing<00:12:49.600><c> this</c><00:12:50.240><c> and</c><00:12:51.040><c> if</c><00:12:51.519><c> nums</c><00:12:52.079><c> of</c><00:12:52.560><c> i</c>

00:12:53.430 --> 00:12:53.440 align:start position:0%
doing this and if nums of i
 

00:12:53.440 --> 00:12:57.990 align:start position:0%
doing this and if nums of i
is<00:12:53.760><c> equal</c><00:12:54.560><c> to</c><00:12:55.279><c> nums</c><00:12:55.760><c> of</c><00:12:56.079><c> i</c><00:12:56.480><c> plus</c><00:12:57.040><c> one</c><00:12:57.440><c> so</c><00:12:57.680><c> what</c>

00:12:57.990 --> 00:12:58.000 align:start position:0%
is equal to nums of i plus one so what
 

00:12:58.000 --> 00:13:00.069 align:start position:0%
is equal to nums of i plus one so what
am<00:12:58.160><c> i</c><00:12:58.320><c> doing</c><00:12:58.639><c> here</c><00:12:58.880><c> and</c><00:12:59.040><c> why</c><00:12:59.279><c> am</c><00:12:59.360><c> i</c><00:12:59.519><c> doing</c><00:12:59.839><c> it</c>

00:13:00.069 --> 00:13:00.079 align:start position:0%
am i doing here and why am i doing it
 

00:13:00.079 --> 00:13:01.829 align:start position:0%
am i doing here and why am i doing it
well<00:13:00.480><c> remember</c><00:13:00.880><c> if</c><00:13:01.040><c> we</c><00:13:01.120><c> have</c><00:13:01.200><c> an</c><00:13:01.360><c> input</c><00:13:01.600><c> array</c>

00:13:01.829 --> 00:13:01.839 align:start position:0%
well remember if we have an input array
 

00:13:01.839 --> 00:13:04.949 align:start position:0%
well remember if we have an input array
like<00:13:02.079><c> one</c><00:13:02.480><c> two</c><00:13:03.040><c> two</c><00:13:03.600><c> and</c><00:13:03.839><c> we're</c><00:13:04.079><c> at</c><00:13:04.240><c> this</c><00:13:04.560><c> value</c>

00:13:04.949 --> 00:13:04.959 align:start position:0%
like one two two and we're at this value
 

00:13:04.959 --> 00:13:07.190 align:start position:0%
like one two two and we're at this value
and<00:13:05.040><c> we're</c><00:13:05.279><c> choosing</c><00:13:05.600><c> to</c><00:13:05.839><c> skip</c><00:13:06.240><c> this</c><00:13:06.560><c> two</c><00:13:07.040><c> then</c>

00:13:07.190 --> 00:13:07.200 align:start position:0%
and we're choosing to skip this two then
 

00:13:07.200 --> 00:13:09.350 align:start position:0%
and we're choosing to skip this two then
we<00:13:07.360><c> should</c><00:13:07.519><c> probably</c><00:13:07.920><c> skip</c><00:13:08.320><c> the</c><00:13:08.560><c> second</c><00:13:09.040><c> two</c>

00:13:09.350 --> 00:13:09.360 align:start position:0%
we should probably skip the second two
 

00:13:09.360 --> 00:13:11.269 align:start position:0%
we should probably skip the second two
as<00:13:09.600><c> well</c><00:13:09.839><c> because</c><00:13:10.160><c> we</c><00:13:10.320><c> don't</c><00:13:10.480><c> want</c><00:13:10.720><c> duplicates</c>

00:13:11.269 --> 00:13:11.279 align:start position:0%
as well because we don't want duplicates
 

00:13:11.279 --> 00:13:13.269 align:start position:0%
as well because we don't want duplicates
right<00:13:11.440><c> we</c><00:13:11.519><c> should</c><00:13:11.760><c> skip</c><00:13:12.000><c> the</c><00:13:12.160><c> second</c><00:13:12.560><c> two</c><00:13:13.120><c> and</c>

00:13:13.269 --> 00:13:13.279 align:start position:0%
right we should skip the second two and
 

00:13:13.279 --> 00:13:16.150 align:start position:0%
right we should skip the second two and
then<00:13:13.680><c> our</c><00:13:13.920><c> index</c><00:13:14.560><c> i</c><00:13:14.800><c> is</c><00:13:14.959><c> gonna</c><00:13:15.120><c> be</c><00:13:15.279><c> over</c><00:13:15.519><c> here</c>

00:13:16.150 --> 00:13:16.160 align:start position:0%
then our index i is gonna be over here
 

00:13:16.160 --> 00:13:17.910 align:start position:0%
then our index i is gonna be over here
right<00:13:16.399><c> and</c><00:13:16.480><c> we're</c><00:13:16.639><c> gonna</c><00:13:16.800><c> compare</c><00:13:17.200><c> this</c><00:13:17.440><c> value</c>

00:13:17.910 --> 00:13:17.920 align:start position:0%
right and we're gonna compare this value
 

00:13:17.920 --> 00:13:20.470 align:start position:0%
right and we're gonna compare this value
to<00:13:18.079><c> this</c><00:13:18.320><c> value</c><00:13:18.800><c> are</c><00:13:18.880><c> they</c><00:13:19.200><c> equal</c><00:13:20.000><c> yes</c><00:13:20.240><c> they</c>

00:13:20.470 --> 00:13:20.480 align:start position:0%
to this value are they equal yes they
 

00:13:20.480 --> 00:13:22.069 align:start position:0%
to this value are they equal yes they
are<00:13:20.800><c> so</c><00:13:20.959><c> then</c><00:13:21.120><c> we're</c><00:13:21.279><c> going</c><00:13:21.360><c> to</c><00:13:21.519><c> increment</c><00:13:21.920><c> our</c>

00:13:22.069 --> 00:13:22.079 align:start position:0%
are so then we're going to increment our
 

00:13:22.079 --> 00:13:23.910 align:start position:0%
are so then we're going to increment our
pointer<00:13:22.399><c> to</c><00:13:22.560><c> be</c><00:13:22.720><c> over</c><00:13:23.040><c> here</c><00:13:23.279><c> now</c><00:13:23.600><c> then</c><00:13:23.760><c> we're</c>

00:13:23.910 --> 00:13:23.920 align:start position:0%
pointer to be over here now then we're
 

00:13:23.920 --> 00:13:25.350 align:start position:0%
pointer to be over here now then we're
going<00:13:24.000><c> to</c><00:13:24.079><c> compare</c><00:13:24.480><c> this</c><00:13:24.720><c> value</c><00:13:25.040><c> with</c><00:13:25.200><c> the</c>

00:13:25.350 --> 00:13:25.360 align:start position:0%
going to compare this value with the
 

00:13:25.360 --> 00:13:29.030 align:start position:0%
going to compare this value with the
next<00:13:25.760><c> value</c><00:13:26.240><c> 3.</c><00:13:26.880><c> it's</c><00:13:27.200><c> not</c><00:13:27.519><c> equal</c><00:13:28.240><c> so</c>

00:13:29.030 --> 00:13:29.040 align:start position:0%
next value 3. it's not equal so
 

00:13:29.040 --> 00:13:30.870 align:start position:0%
next value 3. it's not equal so
that's<00:13:29.279><c> when</c><00:13:29.440><c> we're</c><00:13:29.600><c> going</c><00:13:29.680><c> to</c><00:13:29.920><c> stop</c><00:13:30.480><c> this</c>

00:13:30.870 --> 00:13:30.880 align:start position:0%
that's when we're going to stop this
 

00:13:30.880 --> 00:13:32.629 align:start position:0%
that's when we're going to stop this
loop<00:13:31.440><c> right</c><00:13:31.680><c> and</c><00:13:31.839><c> what</c><00:13:32.000><c> this</c><00:13:32.160><c> loop</c><00:13:32.480><c> is</c><00:13:32.560><c> going</c>

00:13:32.629 --> 00:13:32.639 align:start position:0%
loop right and what this loop is going
 

00:13:32.639 --> 00:13:33.670 align:start position:0%
loop right and what this loop is going
to<00:13:32.720><c> be</c><00:13:32.800><c> doing</c><00:13:33.040><c> is</c><00:13:33.200><c> just</c><00:13:33.360><c> going</c><00:13:33.440><c> to</c><00:13:33.519><c> be</c>

00:13:33.670 --> 00:13:33.680 align:start position:0%
to be doing is just going to be
 

00:13:33.680 --> 00:13:35.910 align:start position:0%
to be doing is just going to be
incrementing<00:13:34.399><c> the</c><00:13:34.639><c> i</c><00:13:34.959><c> pointer</c><00:13:35.360><c> like</c><00:13:35.600><c> i</c><00:13:35.760><c> kind</c>

00:13:35.910 --> 00:13:35.920 align:start position:0%
incrementing the i pointer like i kind
 

00:13:35.920 --> 00:13:38.310 align:start position:0%
incrementing the i pointer like i kind
of<00:13:36.240><c> talked</c><00:13:36.480><c> about</c><00:13:36.800><c> right</c><00:13:36.959><c> now</c><00:13:37.680><c> but</c><00:13:37.920><c> what</c><00:13:38.079><c> if</c><00:13:38.240><c> we</c>

00:13:38.310 --> 00:13:38.320 align:start position:0%
of talked about right now but what if we
 

00:13:38.320 --> 00:13:40.790 align:start position:0%
of talked about right now but what if we
didn't<00:13:38.639><c> actually</c><00:13:38.880><c> have</c><00:13:39.120><c> this</c><00:13:39.360><c> 3</c><00:13:39.600><c> value</c><00:13:40.000><c> here</c>

00:13:40.790 --> 00:13:40.800 align:start position:0%
didn't actually have this 3 value here
 

00:13:40.800 --> 00:13:42.710 align:start position:0%
didn't actually have this 3 value here
in<00:13:40.880><c> that</c><00:13:41.120><c> case</c><00:13:41.600><c> our</c><00:13:41.839><c> i</c><00:13:42.079><c> pointer</c><00:13:42.399><c> would</c><00:13:42.560><c> be</c>

00:13:42.710 --> 00:13:42.720 align:start position:0%
in that case our i pointer would be
 

00:13:42.720 --> 00:13:45.269 align:start position:0%
in that case our i pointer would be
incremented<00:13:43.279><c> to</c><00:13:43.440><c> be</c><00:13:43.680><c> this</c><00:13:43.920><c> position</c><00:13:44.639><c> and</c><00:13:44.959><c> we'd</c>

00:13:45.269 --> 00:13:45.279 align:start position:0%
incremented to be this position and we'd
 

00:13:45.279 --> 00:13:47.670 align:start position:0%
incremented to be this position and we'd
see<00:13:45.440><c> that</c><00:13:45.600><c> i</c><00:13:45.839><c> plus</c><00:13:46.079><c> 1</c><00:13:46.399><c> is</c><00:13:46.639><c> out</c><00:13:46.800><c> of</c><00:13:46.959><c> bounds</c><00:13:47.519><c> so</c>

00:13:47.670 --> 00:13:47.680 align:start position:0%
see that i plus 1 is out of bounds so
 

00:13:47.680 --> 00:13:49.990 align:start position:0%
see that i plus 1 is out of bounds so
then<00:13:47.920><c> our</c><00:13:48.000><c> loop</c><00:13:48.240><c> would</c><00:13:48.480><c> terminate</c><00:13:49.360><c> as</c><00:13:49.519><c> well</c>

00:13:49.990 --> 00:13:50.000 align:start position:0%
then our loop would terminate as well
 

00:13:50.000 --> 00:13:53.030 align:start position:0%
then our loop would terminate as well
okay<00:13:50.320><c> and</c><00:13:50.639><c> after</c><00:13:51.279><c> the</c><00:13:51.519><c> loop</c><00:13:51.920><c> does</c><00:13:52.320><c> terminate</c>

00:13:53.030 --> 00:13:53.040 align:start position:0%
okay and after the loop does terminate
 

00:13:53.040 --> 00:13:55.990 align:start position:0%
okay and after the loop does terminate
we<00:13:53.279><c> still</c><00:13:53.839><c> want</c><00:13:54.079><c> to</c><00:13:54.320><c> run</c><00:13:54.720><c> our</c><00:13:54.880><c> back</c><00:13:55.199><c> tracking</c>

00:13:55.990 --> 00:13:56.000 align:start position:0%
we still want to run our back tracking
 

00:13:56.000 --> 00:13:59.350 align:start position:0%
we still want to run our back tracking
because<00:13:56.560><c> even</c><00:13:56.959><c> if</c><00:13:57.120><c> we</c><00:13:57.440><c> don't</c><00:13:57.839><c> add</c><00:13:58.320><c> any</c><00:13:58.639><c> values</c>

00:13:59.350 --> 00:13:59.360 align:start position:0%
because even if we don't add any values
 

00:13:59.360 --> 00:14:01.750 align:start position:0%
because even if we don't add any values
even<00:13:59.600><c> if</c><00:13:59.680><c> we</c><00:13:59.839><c> skipped</c><00:14:00.240><c> the</c><00:14:00.399><c> entire</c><00:14:00.959><c> array</c><00:14:01.600><c> you</c>

00:14:01.750 --> 00:14:01.760 align:start position:0%
even if we skipped the entire array you
 

00:14:01.760 --> 00:14:03.990 align:start position:0%
even if we skipped the entire array you
know<00:14:01.920><c> this</c><00:14:02.240><c> is</c><00:14:02.720><c> this</c><00:14:03.040><c> case</c><00:14:03.360><c> over</c><00:14:03.600><c> here</c><00:14:03.839><c> is</c>

00:14:03.990 --> 00:14:04.000 align:start position:0%
know this is this case over here is
 

00:14:04.000 --> 00:14:06.470 align:start position:0%
know this is this case over here is
going<00:14:04.240><c> to</c><00:14:04.399><c> be</c><00:14:04.560><c> the</c><00:14:04.720><c> case</c><00:14:05.040><c> that</c><00:14:05.360><c> ends</c><00:14:05.600><c> up</c><00:14:05.839><c> adding</c>

00:14:06.470 --> 00:14:06.480 align:start position:0%
going to be the case that ends up adding
 

00:14:06.480 --> 00:14:10.069 align:start position:0%
going to be the case that ends up adding
the<00:14:06.880><c> empty</c><00:14:07.360><c> array</c><00:14:08.160><c> to</c><00:14:08.720><c> the</c><00:14:09.120><c> result</c><00:14:09.760><c> so</c><00:14:09.920><c> we</c>

00:14:10.069 --> 00:14:10.079 align:start position:0%
the empty array to the result so we
 

00:14:10.079 --> 00:14:11.750 align:start position:0%
the empty array to the result so we
definitely<00:14:10.560><c> don't</c><00:14:10.720><c> want</c><00:14:10.880><c> to</c><00:14:10.959><c> skip</c><00:14:11.360><c> calling</c>

00:14:11.750 --> 00:14:11.760 align:start position:0%
definitely don't want to skip calling
 

00:14:11.760 --> 00:14:14.550 align:start position:0%
definitely don't want to skip calling
backtrack<00:14:12.639><c> onto</c><00:14:13.040><c> this</c><00:14:13.440><c> regardless</c><00:14:14.240><c> of</c><00:14:14.399><c> what</c>

00:14:14.550 --> 00:14:14.560 align:start position:0%
backtrack onto this regardless of what
 

00:14:14.560 --> 00:14:16.949 align:start position:0%
backtrack onto this regardless of what
the<00:14:14.720><c> while</c><00:14:15.120><c> loop</c><00:14:15.440><c> ends</c><00:14:15.600><c> up</c><00:14:15.839><c> doing</c><00:14:16.320><c> so</c><00:14:16.639><c> let's</c>

00:14:16.949 --> 00:14:16.959 align:start position:0%
the while loop ends up doing so let's
 

00:14:16.959 --> 00:14:20.629 align:start position:0%
the while loop ends up doing so let's
call<00:14:17.199><c> our</c><00:14:17.360><c> backtracking</c><00:14:18.399><c> uh</c><00:14:19.040><c> pass</c><00:14:19.360><c> in</c><00:14:19.600><c> i</c><00:14:20.000><c> plus</c>

00:14:20.629 --> 00:14:20.639 align:start position:0%
call our backtracking uh pass in i plus
 

00:14:20.639 --> 00:14:24.069 align:start position:0%
call our backtracking uh pass in i plus
1<00:14:21.279><c> same</c><00:14:21.600><c> as</c><00:14:21.680><c> we</c><00:14:21.839><c> did</c><00:14:22.079><c> up</c><00:14:22.240><c> above</c><00:14:23.040><c> and</c><00:14:23.440><c> let's</c><00:14:23.760><c> pass</c>

00:14:24.069 --> 00:14:24.079 align:start position:0%
1 same as we did up above and let's pass
 

00:14:24.079 --> 00:14:26.230 align:start position:0%
1 same as we did up above and let's pass
in<00:14:24.560><c> the</c><00:14:24.720><c> current</c><00:14:25.120><c> subset</c>

00:14:26.230 --> 00:14:26.240 align:start position:0%
in the current subset
 

00:14:26.240 --> 00:14:28.710 align:start position:0%
in the current subset
after<00:14:26.720><c> we</c><00:14:26.959><c> have</c><00:14:27.279><c> popped</c><00:14:27.760><c> the</c><00:14:27.920><c> value</c><00:14:28.320><c> from</c><00:14:28.560><c> it</c>

00:14:28.710 --> 00:14:28.720 align:start position:0%
after we have popped the value from it
 

00:14:28.720 --> 00:14:31.269 align:start position:0%
after we have popped the value from it
remember<00:14:29.440><c> that</c><00:14:29.760><c> is</c><00:14:30.000><c> actually</c><00:14:30.399><c> the</c><00:14:30.720><c> entire</c>

00:14:31.269 --> 00:14:31.279 align:start position:0%
remember that is actually the entire
 

00:14:31.279 --> 00:14:33.509 align:start position:0%
remember that is actually the entire
code<00:14:31.839><c> as</c><00:14:32.000><c> long</c><00:14:32.240><c> as</c><00:14:32.320><c> i</c><00:14:32.399><c> don't</c><00:14:32.639><c> have</c><00:14:32.720><c> any</c><00:14:32.959><c> bugs</c>

00:14:33.509 --> 00:14:33.519 align:start position:0%
code as long as i don't have any bugs
 

00:14:33.519 --> 00:14:35.590 align:start position:0%
code as long as i don't have any bugs
let's<00:14:34.000><c> run</c><00:14:34.160><c> it</c><00:14:34.320><c> to</c><00:14:34.399><c> make</c><00:14:34.560><c> sure</c><00:14:34.720><c> that</c><00:14:34.880><c> i</c><00:14:35.040><c> don't</c>

00:14:35.590 --> 00:14:35.600 align:start position:0%
let's run it to make sure that i don't
 

00:14:35.600 --> 00:14:37.430 align:start position:0%
let's run it to make sure that i don't
so<00:14:35.920><c> first</c><00:14:36.240><c> we</c><00:14:36.320><c> want</c><00:14:36.480><c> to</c><00:14:36.560><c> actually</c><00:14:37.040><c> call</c><00:14:37.279><c> our</c>

00:14:37.430 --> 00:14:37.440 align:start position:0%
so first we want to actually call our
 

00:14:37.440 --> 00:14:40.310 align:start position:0%
so first we want to actually call our
backtracking<00:14:38.240><c> function</c><00:14:38.880><c> let's</c><00:14:39.199><c> pass</c><00:14:39.519><c> in</c><00:14:39.680><c> 0</c><00:14:40.079><c> as</c>

00:14:40.310 --> 00:14:40.320 align:start position:0%
backtracking function let's pass in 0 as
 

00:14:40.320 --> 00:14:42.069 align:start position:0%
backtracking function let's pass in 0 as
the<00:14:40.399><c> starting</c><00:14:40.800><c> index</c><00:14:41.199><c> and</c><00:14:41.279><c> just</c><00:14:41.440><c> pass</c><00:14:41.760><c> in</c><00:14:41.920><c> an</c>

00:14:42.069 --> 00:14:42.079 align:start position:0%
the starting index and just pass in an
 

00:14:42.079 --> 00:14:44.710 align:start position:0%
the starting index and just pass in an
empty<00:14:42.560><c> array</c><00:14:43.279><c> as</c><00:14:43.519><c> the</c><00:14:43.839><c> initial</c><00:14:44.240><c> subset</c><00:14:44.639><c> and</c>

00:14:44.710 --> 00:14:44.720 align:start position:0%
empty array as the initial subset and
 

00:14:44.720 --> 00:14:46.629 align:start position:0%
empty array as the initial subset and
then<00:14:44.880><c> after</c><00:14:45.040><c> that</c><00:14:45.199><c> we</c><00:14:45.279><c> can</c><00:14:45.440><c> just</c><00:14:45.600><c> return</c><00:14:46.320><c> the</c>

00:14:46.629 --> 00:14:46.639 align:start position:0%
then after that we can just return the
 

00:14:46.639 --> 00:14:48.710 align:start position:0%
then after that we can just return the
result<00:14:47.440><c> so</c><00:14:47.680><c> now</c><00:14:47.839><c> let's</c><00:14:48.079><c> run</c><00:14:48.240><c> it</c><00:14:48.320><c> to</c><00:14:48.480><c> make</c><00:14:48.560><c> sure</c>

00:14:48.710 --> 00:14:48.720 align:start position:0%
result so now let's run it to make sure
 

00:14:48.720 --> 00:14:50.790 align:start position:0%
result so now let's run it to make sure
that<00:14:48.880><c> it</c><00:14:49.040><c> works</c><00:14:49.600><c> and</c><00:14:49.920><c> as</c><00:14:50.160><c> you</c><00:14:50.240><c> can</c><00:14:50.320><c> see</c><00:14:50.560><c> on</c><00:14:50.639><c> the</c>

00:14:50.790 --> 00:14:50.800 align:start position:0%
that it works and as you can see on the
 

00:14:50.800 --> 00:14:52.870 align:start position:0%
that it works and as you can see on the
left<00:14:51.199><c> yes</c><00:14:51.519><c> it</c><00:14:51.680><c> does</c><00:14:51.920><c> work</c><00:14:52.240><c> and</c><00:14:52.320><c> it's</c><00:14:52.480><c> pretty</c>

00:14:52.870 --> 00:14:52.880 align:start position:0%
left yes it does work and it's pretty
 

00:14:52.880 --> 00:14:54.470 align:start position:0%
left yes it does work and it's pretty
efficient<00:14:53.279><c> so</c><00:14:53.440><c> i</c><00:14:53.519><c> really</c><00:14:53.760><c> hope</c><00:14:54.000><c> that</c><00:14:54.160><c> this</c><00:14:54.320><c> was</c>

00:14:54.470 --> 00:14:54.480 align:start position:0%
efficient so i really hope that this was
 

00:14:54.480 --> 00:14:56.550 align:start position:0%
efficient so i really hope that this was
helpful<00:14:55.040><c> if</c><00:14:55.279><c> it</c><00:14:55.360><c> was</c><00:14:55.920><c> please</c><00:14:56.240><c> like</c><00:14:56.480><c> and</c>

00:14:56.550 --> 00:14:56.560 align:start position:0%
helpful if it was please like and
 

00:14:56.560 --> 00:14:58.310 align:start position:0%
helpful if it was please like and
subscribe<00:14:57.040><c> it</c><00:14:57.199><c> really</c><00:14:57.440><c> supports</c><00:14:57.920><c> the</c><00:14:58.000><c> channel</c>

00:14:58.310 --> 00:14:58.320 align:start position:0%
subscribe it really supports the channel
 

00:14:58.320 --> 00:15:00.150 align:start position:0%
subscribe it really supports the channel
a<00:14:58.480><c> lot</c><00:14:58.720><c> consider</c><00:14:59.120><c> checking</c><00:14:59.360><c> out</c><00:14:59.440><c> my</c><00:14:59.600><c> patreon</c>

00:15:00.150 --> 00:15:00.160 align:start position:0%
a lot consider checking out my patreon
 

00:15:00.160 --> 00:15:01.430 align:start position:0%
a lot consider checking out my patreon
if<00:15:00.240><c> you'd</c><00:15:00.399><c> like</c><00:15:00.560><c> to</c><00:15:00.639><c> further</c><00:15:00.959><c> support</c><00:15:01.279><c> the</c>

00:15:01.430 --> 00:15:01.440 align:start position:0%
if you'd like to further support the
 

00:15:01.440 --> 00:15:02.949 align:start position:0%
if you'd like to further support the
channel<00:15:01.760><c> and</c><00:15:02.000><c> hopefully</c><00:15:02.480><c> i'll</c><00:15:02.720><c> see</c><00:15:02.880><c> you</c>

00:15:02.949 --> 00:15:02.959 align:start position:0%
channel and hopefully i'll see you
 

00:15:02.959 --> 00:15:06.800 align:start position:0%
channel and hopefully i'll see you
pretty<00:15:03.199><c> soon</c><00:15:03.760><c> thanks</c><00:15:04.000><c> for</c><00:15:04.160><c> watching</c>

