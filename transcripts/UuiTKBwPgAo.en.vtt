WEBVTT
Kind: captions
Language: en

00:00:00.160 --> 00:00:02.629 align:start position:0%
 
hey<00:00:00.480><c> everyone</c><00:00:01.040><c> welcome</c><00:00:01.520><c> back</c><00:00:02.080><c> and</c><00:00:02.399><c> let's</c>

00:00:02.629 --> 00:00:02.639 align:start position:0%
hey everyone welcome back and let's
 

00:00:02.639 --> 00:00:04.550 align:start position:0%
hey everyone welcome back and let's
write<00:00:02.879><c> some</c><00:00:03.040><c> more</c><00:00:03.280><c> neat</c><00:00:03.600><c> code</c><00:00:03.919><c> so</c><00:00:04.080><c> today</c><00:00:04.400><c> we're</c>

00:00:04.550 --> 00:00:04.560 align:start position:0%
write some more neat code so today we're
 

00:00:04.560 --> 00:00:05.590 align:start position:0%
write some more neat code so today we're
going<00:00:04.640><c> to</c><00:00:04.720><c> be</c><00:00:04.960><c> solving</c>

00:00:05.590 --> 00:00:05.600 align:start position:0%
going to be solving
 

00:00:05.600 --> 00:00:08.710 align:start position:0%
going to be solving
leak<00:00:05.839><c> code</c><00:00:06.080><c> 11</c><00:00:06.799><c> container</c><00:00:07.440><c> with</c><00:00:07.680><c> most</c><00:00:08.160><c> water</c>

00:00:08.710 --> 00:00:08.720 align:start position:0%
leak code 11 container with most water
 

00:00:08.720 --> 00:00:11.350 align:start position:0%
leak code 11 container with most water
so<00:00:08.880><c> we're</c><00:00:09.040><c> given</c><00:00:09.519><c> an</c><00:00:09.679><c> array</c><00:00:10.080><c> of</c><00:00:10.320><c> heights</c><00:00:11.040><c> so</c>

00:00:11.350 --> 00:00:11.360 align:start position:0%
so we're given an array of heights so
 

00:00:11.360 --> 00:00:13.270 align:start position:0%
so we're given an array of heights so
this<00:00:11.599><c> is</c><00:00:11.759><c> a</c><00:00:11.840><c> height</c><00:00:12.240><c> 1</c><00:00:12.559><c> this</c><00:00:12.719><c> is</c><00:00:12.880><c> i</c>

00:00:13.270 --> 00:00:13.280 align:start position:0%
this is a height 1 this is i
 

00:00:13.280 --> 00:00:16.470 align:start position:0%
this is a height 1 this is i
8<00:00:14.000><c> 6</c><00:00:14.559><c> so</c><00:00:14.799><c> on</c><00:00:14.960><c> and</c><00:00:15.120><c> so</c><00:00:15.360><c> on</c><00:00:16.000><c> and</c>

00:00:16.470 --> 00:00:16.480 align:start position:0%
8 6 so on and so on and
 

00:00:16.480 --> 00:00:18.630 align:start position:0%
8 6 so on and so on and
using<00:00:16.880><c> these</c><00:00:17.199><c> heights</c><00:00:17.600><c> we</c><00:00:17.840><c> want</c><00:00:18.000><c> to</c><00:00:18.240><c> see</c>

00:00:18.630 --> 00:00:18.640 align:start position:0%
using these heights we want to see
 

00:00:18.640 --> 00:00:19.990 align:start position:0%
using these heights we want to see
what's<00:00:18.960><c> the</c><00:00:19.279><c> biggest</c>

00:00:19.990 --> 00:00:20.000 align:start position:0%
what's the biggest
 

00:00:20.000 --> 00:00:22.710 align:start position:0%
what's the biggest
area<00:00:20.480><c> we</c><00:00:20.640><c> can</c><00:00:20.880><c> form</c><00:00:21.199><c> with</c><00:00:21.439><c> a</c><00:00:21.520><c> container</c><00:00:22.480><c> that</c>

00:00:22.710 --> 00:00:22.720 align:start position:0%
area we can form with a container that
 

00:00:22.720 --> 00:00:23.189 align:start position:0%
area we can form with a container that
has<00:00:22.960><c> a</c>

00:00:23.189 --> 00:00:23.199 align:start position:0%
has a
 

00:00:23.199 --> 00:00:25.349 align:start position:0%
has a
left<00:00:23.519><c> height</c><00:00:23.920><c> and</c><00:00:24.080><c> a</c><00:00:24.240><c> right</c><00:00:24.480><c> height</c><00:00:24.960><c> so</c><00:00:25.199><c> in</c>

00:00:25.349 --> 00:00:25.359 align:start position:0%
left height and a right height so in
 

00:00:25.359 --> 00:00:26.470 align:start position:0%
left height and a right height so in
this<00:00:25.599><c> example</c>

00:00:26.470 --> 00:00:26.480 align:start position:0%
this example
 

00:00:26.480 --> 00:00:29.269 align:start position:0%
this example
you<00:00:26.560><c> can</c><00:00:26.800><c> see</c><00:00:27.199><c> that</c><00:00:27.840><c> if</c><00:00:28.000><c> we</c><00:00:28.080><c> take</c><00:00:28.400><c> this</c><00:00:28.720><c> one</c>

00:00:29.269 --> 00:00:29.279 align:start position:0%
you can see that if we take this one
 

00:00:29.279 --> 00:00:30.470 align:start position:0%
you can see that if we take this one
with<00:00:29.519><c> a</c><00:00:29.599><c> height</c><00:00:29.840><c> of</c><00:00:30.000><c> eight</c>

00:00:30.470 --> 00:00:30.480 align:start position:0%
with a height of eight
 

00:00:30.480 --> 00:00:33.110 align:start position:0%
with a height of eight
and<00:00:30.720><c> this</c><00:00:30.960><c> one</c><00:00:31.199><c> with</c><00:00:31.439><c> a</c><00:00:31.519><c> height</c><00:00:31.760><c> of</c><00:00:32.079><c> seven</c><00:00:32.960><c> we</c>

00:00:33.110 --> 00:00:33.120 align:start position:0%
and this one with a height of seven we
 

00:00:33.120 --> 00:00:33.990 align:start position:0%
and this one with a height of seven we
can<00:00:33.360><c> create</c><00:00:33.680><c> an</c>

00:00:33.990 --> 00:00:34.000 align:start position:0%
can create an
 

00:00:34.000 --> 00:00:36.870 align:start position:0%
can create an
area<00:00:35.120><c> let's</c><00:00:35.360><c> see</c><00:00:35.520><c> how</c><00:00:35.680><c> wide</c><00:00:36.000><c> this</c><00:00:36.239><c> is</c><00:00:36.480><c> at</c><00:00:36.719><c> one</c>

00:00:36.870 --> 00:00:36.880 align:start position:0%
area let's see how wide this is at one
 

00:00:36.880 --> 00:00:37.990 align:start position:0%
area let's see how wide this is at one
two<00:00:37.200><c> three</c>

00:00:37.990 --> 00:00:38.000 align:start position:0%
two three
 

00:00:38.000 --> 00:00:41.110 align:start position:0%
two three
one<00:00:38.239><c> two</c><00:00:38.480><c> three</c><00:00:38.879><c> seven</c><00:00:39.600><c> wide</c><00:00:40.000><c> and</c><00:00:40.239><c> seven</c><00:00:40.719><c> tall</c>

00:00:41.110 --> 00:00:41.120 align:start position:0%
one two three seven wide and seven tall
 

00:00:41.120 --> 00:00:42.790 align:start position:0%
one two three seven wide and seven tall
so<00:00:41.280><c> that's</c><00:00:41.520><c> seven</c><00:00:41.840><c> by</c><00:00:42.160><c> seven</c>

00:00:42.790 --> 00:00:42.800 align:start position:0%
so that's seven by seven
 

00:00:42.800 --> 00:00:45.590 align:start position:0%
so that's seven by seven
and<00:00:43.040><c> the</c><00:00:43.280><c> area</c><00:00:43.680><c> is</c><00:00:43.760><c> going</c><00:00:43.920><c> to</c><00:00:44.000><c> be</c><00:00:44.160><c> 49</c><00:00:44.960><c> and</c><00:00:45.440><c> they</c>

00:00:45.590 --> 00:00:45.600 align:start position:0%
and the area is going to be 49 and they
 

00:00:45.600 --> 00:00:46.790 align:start position:0%
and the area is going to be 49 and they
tell<00:00:45.840><c> us</c><00:00:46.000><c> that</c><00:00:46.239><c> much</c>

00:00:46.790 --> 00:00:46.800 align:start position:0%
tell us that much
 

00:00:46.800 --> 00:00:49.910 align:start position:0%
tell us that much
in<00:00:47.039><c> the</c><00:00:47.200><c> explanation</c><00:00:48.239><c> so</c><00:00:48.640><c> since</c><00:00:48.960><c> we're</c><00:00:49.280><c> given</c>

00:00:49.910 --> 00:00:49.920 align:start position:0%
in the explanation so since we're given
 

00:00:49.920 --> 00:00:51.670 align:start position:0%
in the explanation so since we're given
a<00:00:50.160><c> list</c><00:00:50.480><c> of</c><00:00:50.640><c> heights</c><00:00:51.120><c> and</c><00:00:51.199><c> we</c><00:00:51.360><c> want</c><00:00:51.520><c> to</c>

00:00:51.670 --> 00:00:51.680 align:start position:0%
a list of heights and we want to
 

00:00:51.680 --> 00:00:53.430 align:start position:0%
a list of heights and we want to
maximize<00:00:52.320><c> the</c><00:00:52.559><c> area</c>

00:00:53.430 --> 00:00:53.440 align:start position:0%
maximize the area
 

00:00:53.440 --> 00:00:55.830 align:start position:0%
maximize the area
we<00:00:53.680><c> can</c><00:00:53.920><c> potentially</c><00:00:54.640><c> just</c><00:00:54.879><c> take</c><00:00:55.360><c> every</c>

00:00:55.830 --> 00:00:55.840 align:start position:0%
we can potentially just take every
 

00:00:55.840 --> 00:00:58.229 align:start position:0%
we can potentially just take every
single<00:00:56.239><c> combination</c><00:00:56.879><c> right</c><00:00:57.120><c> so</c><00:00:57.360><c> check</c><00:00:57.840><c> every</c>

00:00:58.229 --> 00:00:58.239 align:start position:0%
single combination right so check every
 

00:00:58.239 --> 00:00:59.270 align:start position:0%
single combination right so check every
left<00:00:58.559><c> pointer</c>

00:00:59.270 --> 00:00:59.280 align:start position:0%
left pointer
 

00:00:59.280 --> 00:01:01.910 align:start position:0%
left pointer
and<00:00:59.440><c> every</c><00:00:59.920><c> right</c><00:01:00.320><c> pointer</c><00:01:01.039><c> so</c><00:01:01.280><c> my</c><00:01:01.520><c> first</c>

00:01:01.910 --> 00:01:01.920 align:start position:0%
and every right pointer so my first
 

00:01:01.920 --> 00:01:02.709 align:start position:0%
and every right pointer so my first
thought<00:01:02.160><c> with</c><00:01:02.320><c> this</c>

00:01:02.709 --> 00:01:02.719 align:start position:0%
thought with this
 

00:01:02.719 --> 00:01:05.109 align:start position:0%
thought with this
is<00:01:03.120><c> what's</c><00:01:03.359><c> the</c><00:01:03.520><c> brute</c><00:01:03.920><c> force</c><00:01:04.239><c> way</c><00:01:04.479><c> what's</c><00:01:04.720><c> the</c>

00:01:05.109 --> 00:01:05.119 align:start position:0%
is what's the brute force way what's the
 

00:01:05.119 --> 00:01:07.429 align:start position:0%
is what's the brute force way what's the
easiest<00:01:05.680><c> way</c><00:01:05.840><c> to</c><00:01:06.080><c> solve</c><00:01:06.320><c> this</c><00:01:06.640><c> problem</c>

00:01:07.429 --> 00:01:07.439 align:start position:0%
easiest way to solve this problem
 

00:01:07.439 --> 00:01:10.630 align:start position:0%
easiest way to solve this problem
well<00:01:08.320><c> let's</c><00:01:08.640><c> just</c><00:01:09.119><c> try</c><00:01:09.600><c> every</c><00:01:10.159><c> single</c>

00:01:10.630 --> 00:01:10.640 align:start position:0%
well let's just try every single
 

00:01:10.640 --> 00:01:13.030 align:start position:0%
well let's just try every single
combination<00:01:11.520><c> of</c><00:01:11.760><c> left</c><00:01:12.080><c> and</c><00:01:12.240><c> right</c><00:01:12.560><c> let's</c><00:01:12.720><c> just</c>

00:01:13.030 --> 00:01:13.040 align:start position:0%
combination of left and right let's just
 

00:01:13.040 --> 00:01:13.590 align:start position:0%
combination of left and right let's just
try

00:01:13.590 --> 00:01:13.600 align:start position:0%
try
 

00:01:13.600 --> 00:01:16.390 align:start position:0%
try
every<00:01:14.159><c> single</c><00:01:14.720><c> possible</c><00:01:15.360><c> container</c><00:01:16.000><c> we</c><00:01:16.159><c> could</c>

00:01:16.390 --> 00:01:16.400 align:start position:0%
every single possible container we could
 

00:01:16.400 --> 00:01:16.870 align:start position:0%
every single possible container we could
make

00:01:16.870 --> 00:01:16.880 align:start position:0%
make
 

00:01:16.880 --> 00:01:19.109 align:start position:0%
make
and<00:01:17.040><c> see</c><00:01:17.200><c> if</c><00:01:17.360><c> it</c><00:01:17.439><c> works</c><00:01:17.759><c> so</c><00:01:18.320><c> let's</c><00:01:18.560><c> say</c><00:01:18.799><c> this</c><00:01:18.960><c> is</c>

00:01:19.109 --> 00:01:19.119 align:start position:0%
and see if it works so let's say this is
 

00:01:19.119 --> 00:01:20.149 align:start position:0%
and see if it works so let's say this is
our<00:01:19.360><c> left</c>

00:01:20.149 --> 00:01:20.159 align:start position:0%
our left
 

00:01:20.159 --> 00:01:22.710 align:start position:0%
our left
and<00:01:20.400><c> this</c><00:01:20.560><c> is</c><00:01:20.720><c> our</c><00:01:20.960><c> right</c><00:01:21.759><c> what's</c><00:01:22.000><c> the</c><00:01:22.159><c> most</c>

00:01:22.710 --> 00:01:22.720 align:start position:0%
and this is our right what's the most
 

00:01:22.720 --> 00:01:24.310 align:start position:0%
and this is our right what's the most
what's<00:01:22.960><c> the</c><00:01:23.119><c> max</c><00:01:23.439><c> area</c><00:01:23.680><c> we</c><00:01:23.840><c> can</c><00:01:23.920><c> make</c><00:01:24.159><c> with</c>

00:01:24.310 --> 00:01:24.320 align:start position:0%
what's the max area we can make with
 

00:01:24.320 --> 00:01:24.950 align:start position:0%
what's the max area we can make with
this<00:01:24.560><c> well</c>

00:01:24.950 --> 00:01:24.960 align:start position:0%
this well
 

00:01:24.960 --> 00:01:27.990 align:start position:0%
this well
let's<00:01:25.200><c> fill</c><00:01:25.439><c> it</c><00:01:25.520><c> up</c><00:01:25.680><c> to</c><00:01:26.000><c> 1</c><00:01:27.200><c> and</c><00:01:27.439><c> if</c><00:01:27.600><c> we</c><00:01:27.759><c> keep</c>

00:01:27.990 --> 00:01:28.000 align:start position:0%
let's fill it up to 1 and if we keep
 

00:01:28.000 --> 00:01:28.469 align:start position:0%
let's fill it up to 1 and if we keep
filling

00:01:28.469 --> 00:01:28.479 align:start position:0%
filling
 

00:01:28.479 --> 00:01:30.390 align:start position:0%
filling
it<00:01:28.640><c> up</c><00:01:28.720><c> with</c><00:01:28.880><c> water</c><00:01:29.280><c> notice</c><00:01:29.680><c> how</c><00:01:30.159><c> it's</c><00:01:30.320><c> going</c>

00:01:30.390 --> 00:01:30.400 align:start position:0%
it up with water notice how it's going
 

00:01:30.400 --> 00:01:32.230 align:start position:0%
it up with water notice how it's going
to<00:01:30.560><c> spill</c><00:01:30.880><c> to</c><00:01:31.040><c> the</c><00:01:31.200><c> left</c><00:01:31.600><c> right</c>

00:01:32.230 --> 00:01:32.240 align:start position:0%
to spill to the left right
 

00:01:32.240 --> 00:01:35.590 align:start position:0%
to spill to the left right
so<00:01:32.479><c> this</c><00:01:33.200><c> left</c><00:01:33.520><c> pointer</c><00:01:34.479><c> is</c><00:01:34.720><c> our</c><00:01:34.880><c> bottleneck</c>

00:01:35.590 --> 00:01:35.600 align:start position:0%
so this left pointer is our bottleneck
 

00:01:35.600 --> 00:01:36.069 align:start position:0%
so this left pointer is our bottleneck
right

00:01:36.069 --> 00:01:36.079 align:start position:0%
right
 

00:01:36.079 --> 00:01:39.109 align:start position:0%
right
we<00:01:36.320><c> have</c><00:01:36.640><c> a</c><00:01:36.799><c> height</c><00:01:37.040><c> of</c><00:01:37.360><c> 1</c><00:01:38.560><c> and</c><00:01:38.720><c> we</c><00:01:38.880><c> have</c><00:01:39.040><c> a</c>

00:01:39.109 --> 00:01:39.119 align:start position:0%
we have a height of 1 and we have a
 

00:01:39.119 --> 00:01:40.789 align:start position:0%
we have a height of 1 and we have a
height<00:01:39.520><c> of</c><00:01:39.759><c> seven</c>

00:01:40.789 --> 00:01:40.799 align:start position:0%
height of seven
 

00:01:40.799 --> 00:01:44.230 align:start position:0%
height of seven
the<00:01:41.040><c> minimum</c><00:01:41.600><c> one</c><00:01:42.079><c> is</c><00:01:42.320><c> one</c><00:01:42.880><c> so</c><00:01:43.600><c> you</c><00:01:43.759><c> know</c>

00:01:44.230 --> 00:01:44.240 align:start position:0%
the minimum one is one so you know
 

00:01:44.240 --> 00:01:46.550 align:start position:0%
the minimum one is one so you know
we<00:01:44.399><c> can't</c><00:01:44.640><c> fill</c><00:01:44.880><c> it</c><00:01:44.960><c> up</c><00:01:45.119><c> any</c><00:01:45.360><c> higher</c><00:01:45.920><c> the</c><00:01:46.240><c> width</c>

00:01:46.550 --> 00:01:46.560 align:start position:0%
we can't fill it up any higher the width
 

00:01:46.560 --> 00:01:47.670 align:start position:0%
we can't fill it up any higher the width
of<00:01:46.720><c> this</c><00:01:47.040><c> is</c><00:01:47.200><c> also</c>

00:01:47.670 --> 00:01:47.680 align:start position:0%
of this is also
 

00:01:47.680 --> 00:01:51.030 align:start position:0%
of this is also
one<00:01:48.159><c> so</c><00:01:48.399><c> we</c><00:01:48.640><c> get</c><00:01:48.880><c> a</c><00:01:49.520><c> we</c><00:01:49.680><c> get</c><00:01:49.840><c> an</c><00:01:50.000><c> area</c><00:01:50.320><c> of</c><00:01:50.560><c> one</c><00:01:50.799><c> by</c>

00:01:51.030 --> 00:01:51.040 align:start position:0%
one so we get a we get an area of one by
 

00:01:51.040 --> 00:01:51.830 align:start position:0%
one so we get a we get an area of one by
one

00:01:51.830 --> 00:01:51.840 align:start position:0%
one
 

00:01:51.840 --> 00:01:54.310 align:start position:0%
one
with<00:01:52.079><c> water</c><00:01:52.720><c> and</c><00:01:52.960><c> of</c><00:01:53.040><c> course</c><00:01:53.680><c> if</c><00:01:53.840><c> this</c><00:01:54.079><c> one</c>

00:01:54.310 --> 00:01:54.320 align:start position:0%
with water and of course if this one
 

00:01:54.320 --> 00:01:56.230 align:start position:0%
with water and of course if this one
remains<00:01:54.799><c> our</c><00:01:54.960><c> left</c><00:01:55.200><c> pointer</c><00:01:55.520><c> we</c><00:01:55.600><c> can</c><00:01:55.759><c> try</c><00:01:56.079><c> this</c>

00:01:56.230 --> 00:01:56.240 align:start position:0%
remains our left pointer we can try this
 

00:01:56.240 --> 00:01:58.230 align:start position:0%
remains our left pointer we can try this
one<00:01:56.479><c> as</c><00:01:56.640><c> our</c><00:01:56.799><c> right</c><00:01:57.040><c> pointer</c>

00:01:58.230 --> 00:01:58.240 align:start position:0%
one as our right pointer
 

00:01:58.240 --> 00:02:00.230 align:start position:0%
one as our right pointer
and<00:01:58.799><c> in</c><00:01:58.960><c> this</c><00:01:59.119><c> case</c><00:01:59.439><c> the</c><00:01:59.600><c> width</c><00:01:59.920><c> is</c><00:02:00.079><c> going</c><00:02:00.159><c> to</c>

00:02:00.230 --> 00:02:00.240 align:start position:0%
and in this case the width is going to
 

00:02:00.240 --> 00:02:01.830 align:start position:0%
and in this case the width is going to
be<00:02:00.560><c> two</c>

00:02:01.830 --> 00:02:01.840 align:start position:0%
be two
 

00:02:01.840 --> 00:02:04.389 align:start position:0%
be two
but<00:02:02.000><c> the</c><00:02:02.240><c> height</c><00:02:02.799><c> is</c><00:02:02.960><c> still</c><00:02:03.200><c> going</c><00:02:03.360><c> to</c><00:02:03.439><c> be</c><00:02:03.759><c> one</c>

00:02:04.389 --> 00:02:04.399 align:start position:0%
but the height is still going to be one
 

00:02:04.399 --> 00:02:05.109 align:start position:0%
but the height is still going to be one
our

00:02:05.109 --> 00:02:05.119 align:start position:0%
our
 

00:02:05.119 --> 00:02:07.350 align:start position:0%
our
remember<00:02:05.520><c> our</c><00:02:05.759><c> left</c><00:02:06.000><c> height</c><00:02:06.320><c> is</c><00:02:06.479><c> only</c><00:02:06.799><c> one</c><00:02:07.200><c> so</c>

00:02:07.350 --> 00:02:07.360 align:start position:0%
remember our left height is only one so
 

00:02:07.360 --> 00:02:09.430 align:start position:0%
remember our left height is only one so
our<00:02:07.520><c> bottleneck</c><00:02:08.080><c> is</c><00:02:08.239><c> one</c><00:02:08.560><c> so</c><00:02:08.720><c> we</c><00:02:08.879><c> get</c><00:02:09.039><c> an</c><00:02:09.200><c> area</c>

00:02:09.430 --> 00:02:09.440 align:start position:0%
our bottleneck is one so we get an area
 

00:02:09.440 --> 00:02:12.070 align:start position:0%
our bottleneck is one so we get an area
of<00:02:09.679><c> two</c><00:02:09.840><c> by</c><00:02:10.080><c> one</c>

00:02:12.070 --> 00:02:12.080 align:start position:0%
of two by one
 

00:02:12.080 --> 00:02:13.910 align:start position:0%
of two by one
so<00:02:12.239><c> i'm</c><00:02:12.480><c> starting</c><00:02:12.800><c> to</c><00:02:12.959><c> notice</c><00:02:13.360><c> a</c><00:02:13.440><c> bit</c><00:02:13.599><c> of</c><00:02:13.760><c> a</c>

00:02:13.910 --> 00:02:13.920 align:start position:0%
so i'm starting to notice a bit of a
 

00:02:13.920 --> 00:02:15.589 align:start position:0%
so i'm starting to notice a bit of a
pattern<00:02:14.239><c> but</c><00:02:14.480><c> let's</c><00:02:14.640><c> just</c><00:02:14.879><c> keep</c><00:02:15.040><c> continuing</c>

00:02:15.589 --> 00:02:15.599 align:start position:0%
pattern but let's just keep continuing
 

00:02:15.599 --> 00:02:16.790 align:start position:0%
pattern but let's just keep continuing
with<00:02:15.760><c> the</c><00:02:15.840><c> brute</c><00:02:16.160><c> force</c>

00:02:16.790 --> 00:02:16.800 align:start position:0%
with the brute force
 

00:02:16.800 --> 00:02:19.830 align:start position:0%
with the brute force
so<00:02:17.599><c> next</c><00:02:17.920><c> we</c><00:02:18.000><c> can</c><00:02:18.160><c> try</c><00:02:18.480><c> this</c><00:02:18.879><c> area</c>

00:02:19.830 --> 00:02:19.840 align:start position:0%
so next we can try this area
 

00:02:19.840 --> 00:02:21.910 align:start position:0%
so next we can try this area
that's<00:02:20.080><c> going</c><00:02:20.239><c> to</c><00:02:20.319><c> be</c><00:02:20.560><c> three</c><00:02:21.200><c> next</c><00:02:21.440><c> we</c><00:02:21.599><c> can</c><00:02:21.680><c> try</c>

00:02:21.910 --> 00:02:21.920 align:start position:0%
that's going to be three next we can try
 

00:02:21.920 --> 00:02:24.070 align:start position:0%
that's going to be three next we can try
this<00:02:22.239><c> area</c><00:02:22.720><c> that's</c><00:02:23.040><c> going</c><00:02:23.120><c> to</c><00:02:23.200><c> be</c><00:02:23.440><c> 4.</c>

00:02:24.070 --> 00:02:24.080 align:start position:0%
this area that's going to be 4.
 

00:02:24.080 --> 00:02:25.830 align:start position:0%
this area that's going to be 4.
next<00:02:24.400><c> we</c><00:02:24.640><c> try</c><00:02:24.800><c> this</c><00:02:25.040><c> one</c><00:02:25.200><c> that's</c><00:02:25.440><c> going</c><00:02:25.520><c> to</c><00:02:25.599><c> be</c>

00:02:25.830 --> 00:02:25.840 align:start position:0%
next we try this one that's going to be
 

00:02:25.840 --> 00:02:27.510 align:start position:0%
next we try this one that's going to be
5<00:02:26.080><c> and</c><00:02:26.239><c> we</c><00:02:26.319><c> can</c><00:02:26.400><c> just</c><00:02:26.640><c> keep</c><00:02:26.959><c> going</c>

00:02:27.510 --> 00:02:27.520 align:start position:0%
5 and we can just keep going
 

00:02:27.520 --> 00:02:29.190 align:start position:0%
5 and we can just keep going
the<00:02:27.680><c> height</c><00:02:28.000><c> is</c><00:02:28.080><c> going</c><00:02:28.160><c> to</c><00:02:28.239><c> stay</c><00:02:28.640><c> 1</c><00:02:28.879><c> because</c>

00:02:29.190 --> 00:02:29.200 align:start position:0%
the height is going to stay 1 because
 

00:02:29.200 --> 00:02:30.949 align:start position:0%
the height is going to stay 1 because
our<00:02:29.360><c> left</c><00:02:29.680><c> pointer</c><00:02:30.319><c> has</c><00:02:30.480><c> a</c><00:02:30.560><c> height</c>

00:02:30.949 --> 00:02:30.959 align:start position:0%
our left pointer has a height
 

00:02:30.959 --> 00:02:35.430 align:start position:0%
our left pointer has a height
of<00:02:31.120><c> 1.</c><00:02:32.959><c> next</c><00:02:33.519><c> we</c><00:02:33.760><c> move</c><00:02:34.080><c> our</c><00:02:34.319><c> left</c><00:02:34.640><c> pointer</c>

00:02:35.430 --> 00:02:35.440 align:start position:0%
of 1. next we move our left pointer
 

00:02:35.440 --> 00:02:38.150 align:start position:0%
of 1. next we move our left pointer
here<00:02:37.040><c> and</c><00:02:37.280><c> again</c><00:02:37.519><c> we're</c><00:02:37.760><c> just</c><00:02:37.920><c> going</c><00:02:38.080><c> to</c>

00:02:38.150 --> 00:02:38.160 align:start position:0%
here and again we're just going to
 

00:02:38.160 --> 00:02:40.390 align:start position:0%
here and again we're just going to
continue<00:02:38.640><c> with</c><00:02:38.800><c> the</c><00:02:38.879><c> brute</c><00:02:39.200><c> force</c><00:02:39.440><c> solution</c>

00:02:40.390 --> 00:02:40.400 align:start position:0%
continue with the brute force solution
 

00:02:40.400 --> 00:02:43.430 align:start position:0%
continue with the brute force solution
eventually<00:02:41.120><c> we're</c><00:02:41.360><c> going</c><00:02:41.519><c> to</c><00:02:42.800><c> have</c><00:02:42.959><c> our</c><00:02:43.200><c> right</c>

00:02:43.430 --> 00:02:43.440 align:start position:0%
eventually we're going to have our right
 

00:02:43.440 --> 00:02:45.190 align:start position:0%
eventually we're going to have our right
pointer<00:02:43.920><c> set</c><00:02:44.239><c> here</c><00:02:44.560><c> and</c><00:02:44.640><c> then</c><00:02:44.879><c> we're</c><00:02:45.040><c> going</c><00:02:45.120><c> to</c>

00:02:45.190 --> 00:02:45.200 align:start position:0%
pointer set here and then we're going to
 

00:02:45.200 --> 00:02:45.589 align:start position:0%
pointer set here and then we're going to
find

00:02:45.589 --> 00:02:45.599 align:start position:0%
find
 

00:02:45.599 --> 00:02:49.589 align:start position:0%
find
our<00:02:45.760><c> result</c><00:02:46.319><c> right</c><00:02:46.560><c> it's</c><00:02:46.720><c> going</c><00:02:46.800><c> to</c><00:02:46.879><c> be</c><00:02:47.040><c> 7</c><00:02:47.360><c> by</c><00:02:47.680><c> 7</c>

00:02:49.589 --> 00:02:49.599 align:start position:0%
our result right it's going to be 7 by 7
 

00:02:49.599 --> 00:02:51.910 align:start position:0%
our result right it's going to be 7 by 7
that's<00:02:49.920><c> the</c><00:02:50.080><c> biggest</c><00:02:50.480><c> area</c><00:02:50.720><c> we</c><00:02:50.879><c> can</c><00:02:51.040><c> do</c><00:02:51.680><c> and</c>

00:02:51.910 --> 00:02:51.920 align:start position:0%
that's the biggest area we can do and
 

00:02:51.920 --> 00:02:53.350 align:start position:0%
that's the biggest area we can do and
since<00:02:52.160><c> we're</c><00:02:52.319><c> checking</c><00:02:52.720><c> every</c><00:02:52.959><c> single</c>

00:02:53.350 --> 00:02:53.360 align:start position:0%
since we're checking every single
 

00:02:53.360 --> 00:02:55.190 align:start position:0%
since we're checking every single
combination<00:02:53.920><c> we</c><00:02:54.080><c> know</c><00:02:54.239><c> we're</c><00:02:54.560><c> eventually</c>

00:02:55.190 --> 00:02:55.200 align:start position:0%
combination we know we're eventually
 

00:02:55.200 --> 00:02:55.910 align:start position:0%
combination we know we're eventually
going<00:02:55.360><c> to</c><00:02:55.440><c> find</c>

00:02:55.910 --> 00:02:55.920 align:start position:0%
going to find
 

00:02:55.920 --> 00:02:58.229 align:start position:0%
going to find
the<00:02:56.080><c> correct</c><00:02:56.400><c> solution</c><00:02:57.120><c> the</c><00:02:57.280><c> only</c><00:02:57.599><c> downside</c>

00:02:58.229 --> 00:02:58.239 align:start position:0%
the correct solution the only downside
 

00:02:58.239 --> 00:02:59.750 align:start position:0%
the correct solution the only downside
is<00:02:58.640><c> that</c><00:02:58.800><c> this</c><00:02:59.040><c> algorithm</c>

00:02:59.750 --> 00:02:59.760 align:start position:0%
is that this algorithm
 

00:02:59.760 --> 00:03:02.309 align:start position:0%
is that this algorithm
is<00:02:59.920><c> big</c><00:03:00.239><c> o</c><00:03:00.480><c> of</c><00:03:00.640><c> n</c><00:03:00.879><c> squared</c><00:03:01.440><c> now</c><00:03:01.760><c> is</c><00:03:01.840><c> that</c><00:03:02.159><c> good</c>

00:03:02.309 --> 00:03:02.319 align:start position:0%
is big o of n squared now is that good
 

00:03:02.319 --> 00:03:03.030 align:start position:0%
is big o of n squared now is that good
enough

00:03:03.030 --> 00:03:03.040 align:start position:0%
enough
 

00:03:03.040 --> 00:03:04.949 align:start position:0%
enough
i<00:03:03.120><c> guess</c><00:03:03.360><c> it</c><00:03:03.440><c> depends</c><00:03:03.840><c> on</c><00:03:03.920><c> your</c><00:03:04.080><c> interviewer</c>

00:03:04.949 --> 00:03:04.959 align:start position:0%
i guess it depends on your interviewer
 

00:03:04.959 --> 00:03:06.630 align:start position:0%
i guess it depends on your interviewer
and<00:03:05.200><c> let</c><00:03:05.360><c> me</c><00:03:05.519><c> just</c><00:03:05.680><c> quickly</c><00:03:06.080><c> code</c><00:03:06.319><c> up</c><00:03:06.480><c> the</c>

00:03:06.630 --> 00:03:06.640 align:start position:0%
and let me just quickly code up the
 

00:03:06.640 --> 00:03:07.670 align:start position:0%
and let me just quickly code up the
solution

00:03:07.670 --> 00:03:07.680 align:start position:0%
solution
 

00:03:07.680 --> 00:03:10.710 align:start position:0%
solution
for<00:03:08.000><c> that</c><00:03:08.560><c> so</c><00:03:08.800><c> this</c><00:03:09.040><c> is</c><00:03:09.120><c> the</c><00:03:09.280><c> brute</c><00:03:09.680><c> force</c><00:03:10.239><c> of</c>

00:03:10.710 --> 00:03:10.720 align:start position:0%
for that so this is the brute force of
 

00:03:10.720 --> 00:03:13.830 align:start position:0%
for that so this is the brute force of
n<00:03:10.959><c> solution</c><00:03:12.080><c> let's</c><00:03:12.480><c> first</c><00:03:12.879><c> initialize</c><00:03:13.680><c> our</c>

00:03:13.830 --> 00:03:13.840 align:start position:0%
n solution let's first initialize our
 

00:03:13.840 --> 00:03:14.949 align:start position:0%
n solution let's first initialize our
result

00:03:14.949 --> 00:03:14.959 align:start position:0%
result
 

00:03:14.959 --> 00:03:16.550 align:start position:0%
result
which<00:03:15.200><c> is</c><00:03:15.360><c> our</c><00:03:15.519><c> area</c><00:03:16.239><c> i'm</c><00:03:16.400><c> going</c><00:03:16.480><c> to</c>

00:03:16.550 --> 00:03:16.560 align:start position:0%
which is our area i'm going to
 

00:03:16.560 --> 00:03:18.550 align:start position:0%
which is our area i'm going to
initialize<00:03:17.120><c> it</c><00:03:17.200><c> to</c><00:03:17.360><c> 0</c><00:03:17.840><c> because</c><00:03:18.239><c> you</c><00:03:18.400><c> can't</c>

00:03:18.550 --> 00:03:18.560 align:start position:0%
initialize it to 0 because you can't
 

00:03:18.560 --> 00:03:19.830 align:start position:0%
initialize it to 0 because you can't
really<00:03:18.800><c> have</c><00:03:18.879><c> a</c><00:03:18.959><c> negative</c><00:03:19.360><c> area</c>

00:03:19.830 --> 00:03:19.840 align:start position:0%
really have a negative area
 

00:03:19.840 --> 00:03:22.309 align:start position:0%
really have a negative area
at<00:03:20.000><c> least</c><00:03:20.239><c> not</c><00:03:20.480><c> in</c><00:03:20.560><c> this</c><00:03:20.800><c> context</c><00:03:21.840><c> and</c><00:03:22.000><c> we</c><00:03:22.159><c> want</c>

00:03:22.309 --> 00:03:22.319 align:start position:0%
at least not in this context and we want
 

00:03:22.319 --> 00:03:24.309 align:start position:0%
at least not in this context and we want
to<00:03:22.400><c> go</c><00:03:22.640><c> through</c><00:03:22.959><c> every</c><00:03:23.200><c> single</c><00:03:23.519><c> combination</c>

00:03:24.309 --> 00:03:24.319 align:start position:0%
to go through every single combination
 

00:03:24.319 --> 00:03:24.630 align:start position:0%
to go through every single combination
so

00:03:24.630 --> 00:03:24.640 align:start position:0%
so
 

00:03:24.640 --> 00:03:27.030 align:start position:0%
so
i'm<00:03:24.799><c> going</c><00:03:24.959><c> to</c><00:03:25.040><c> have</c><00:03:25.280><c> our</c><00:03:25.519><c> left</c><00:03:25.840><c> pointer</c><00:03:26.720><c> go</c>

00:03:27.030 --> 00:03:27.040 align:start position:0%
i'm going to have our left pointer go
 

00:03:27.040 --> 00:03:27.670 align:start position:0%
i'm going to have our left pointer go
through

00:03:27.670 --> 00:03:27.680 align:start position:0%
through
 

00:03:27.680 --> 00:03:30.710 align:start position:0%
through
every<00:03:28.080><c> single</c><00:03:28.560><c> indices</c><00:03:29.920><c> of</c><00:03:30.239><c> height</c>

00:03:30.710 --> 00:03:30.720 align:start position:0%
every single indices of height
 

00:03:30.720 --> 00:03:32.869 align:start position:0%
every single indices of height
so<00:03:30.959><c> i'm</c><00:03:31.040><c> going</c><00:03:31.120><c> to</c><00:03:31.200><c> get</c><00:03:31.360><c> the</c><00:03:31.519><c> length</c><00:03:31.920><c> of</c><00:03:32.080><c> height</c>

00:03:32.869 --> 00:03:32.879 align:start position:0%
so i'm going to get the length of height
 

00:03:32.879 --> 00:03:33.910 align:start position:0%
so i'm going to get the length of height
which<00:03:33.200><c> is</c><00:03:33.599><c> our</c>

00:03:33.910 --> 00:03:33.920 align:start position:0%
which is our
 

00:03:33.920 --> 00:03:37.350 align:start position:0%
which is our
array<00:03:35.599><c> so</c><00:03:35.920><c> left</c><00:03:36.239><c> is</c><00:03:36.400><c> going</c><00:03:36.640><c> to</c>

00:03:37.350 --> 00:03:37.360 align:start position:0%
array so left is going to
 

00:03:37.360 --> 00:03:39.509 align:start position:0%
array so left is going to
be<00:03:37.599><c> at</c><00:03:37.840><c> every</c><00:03:38.080><c> single</c><00:03:38.400><c> position</c><00:03:38.959><c> at</c><00:03:39.120><c> least</c>

00:03:39.509 --> 00:03:39.519 align:start position:0%
be at every single position at least
 

00:03:39.519 --> 00:03:40.630 align:start position:0%
be at every single position at least
once<00:03:40.239><c> now</c>

00:03:40.630 --> 00:03:40.640 align:start position:0%
once now
 

00:03:40.640 --> 00:03:44.789 align:start position:0%
once now
right<00:03:41.040><c> pointer</c><00:03:42.319><c> we</c><00:03:42.640><c> can</c><00:03:42.959><c> just</c><00:03:43.280><c> have</c><00:03:43.599><c> this</c><00:03:43.920><c> one</c>

00:03:44.789 --> 00:03:44.799 align:start position:0%
right pointer we can just have this one
 

00:03:44.799 --> 00:03:47.990 align:start position:0%
right pointer we can just have this one
be<00:03:45.280><c> always</c><00:03:46.000><c> at</c><00:03:46.159><c> least</c><00:03:46.640><c> one</c><00:03:46.879><c> position</c><00:03:47.360><c> ahead</c><00:03:47.680><c> of</c>

00:03:47.990 --> 00:03:48.000 align:start position:0%
be always at least one position ahead of
 

00:03:48.000 --> 00:03:52.149 align:start position:0%
be always at least one position ahead of
left<00:03:48.799><c> so</c><00:03:49.920><c> left</c><00:03:50.319><c> plus</c><00:03:50.720><c> one</c>

00:03:52.149 --> 00:03:52.159 align:start position:0%
left so left plus one
 

00:03:52.159 --> 00:03:54.630 align:start position:0%
left so left plus one
because<00:03:52.480><c> it</c><00:03:52.640><c> all</c><00:03:52.959><c> our</c><00:03:53.680><c> right</c><00:03:53.920><c> pointer</c><00:03:54.480><c> of</c>

00:03:54.630 --> 00:03:54.640 align:start position:0%
because it all our right pointer of
 

00:03:54.640 --> 00:03:56.309 align:start position:0%
because it all our right pointer of
course<00:03:54.959><c> always</c><00:03:55.280><c> needs</c><00:03:55.519><c> to</c><00:03:55.599><c> be</c>

00:03:56.309 --> 00:03:56.319 align:start position:0%
course always needs to be
 

00:03:56.319 --> 00:03:58.309 align:start position:0%
course always needs to be
to<00:03:56.480><c> the</c><00:03:56.720><c> right</c><00:03:56.959><c> of</c><00:03:57.120><c> our</c><00:03:57.200><c> left</c><00:03:57.519><c> pointer</c><00:03:57.840><c> right</c>

00:03:58.309 --> 00:03:58.319 align:start position:0%
to the right of our left pointer right
 

00:03:58.319 --> 00:04:00.229 align:start position:0%
to the right of our left pointer right
and<00:03:58.720><c> for</c><00:03:59.040><c> each</c><00:03:59.360><c> of</c><00:03:59.599><c> these</c>

00:04:00.229 --> 00:04:00.239 align:start position:0%
and for each of these
 

00:04:00.239 --> 00:04:02.229 align:start position:0%
and for each of these
combinations<00:04:00.959><c> we</c><00:04:01.120><c> want</c><00:04:01.280><c> to</c><00:04:01.360><c> compute</c><00:04:01.680><c> the</c><00:04:01.920><c> area</c>

00:04:02.229 --> 00:04:02.239 align:start position:0%
combinations we want to compute the area
 

00:04:02.239 --> 00:04:03.509 align:start position:0%
combinations we want to compute the area
so<00:04:02.400><c> let's</c><00:04:02.640><c> do</c><00:04:02.799><c> that</c>

00:04:03.509 --> 00:04:03.519 align:start position:0%
so let's do that
 

00:04:03.519 --> 00:04:06.470 align:start position:0%
so let's do that
area<00:04:04.000><c> is</c><00:04:04.159><c> going</c><00:04:04.239><c> to</c><00:04:04.319><c> be</c><00:04:04.560><c> equal</c><00:04:06.000><c> let</c><00:04:06.159><c> me</c><00:04:06.319><c> just</c>

00:04:06.470 --> 00:04:06.480 align:start position:0%
area is going to be equal let me just
 

00:04:06.480 --> 00:04:07.350 align:start position:0%
area is going to be equal let me just
remember

00:04:07.350 --> 00:04:07.360 align:start position:0%
remember
 

00:04:07.360 --> 00:04:09.509 align:start position:0%
remember
how<00:04:07.599><c> to</c><00:04:08.319><c> i</c><00:04:08.480><c> don't</c><00:04:08.640><c> know</c><00:04:08.799><c> about</c><00:04:08.959><c> you</c><00:04:09.120><c> guys</c><00:04:09.280><c> but</c>

00:04:09.509 --> 00:04:09.519 align:start position:0%
how to i don't know about you guys but
 

00:04:09.519 --> 00:04:11.270 align:start position:0%
how to i don't know about you guys but
sometimes<00:04:09.920><c> even</c><00:04:10.239><c> i</c><00:04:10.400><c> forget</c><00:04:10.720><c> how</c><00:04:10.879><c> to</c><00:04:10.959><c> compute</c>

00:04:11.270 --> 00:04:11.280 align:start position:0%
sometimes even i forget how to compute
 

00:04:11.280 --> 00:04:12.949 align:start position:0%
sometimes even i forget how to compute
the<00:04:11.439><c> area</c><00:04:11.680><c> of</c><00:04:11.760><c> a</c><00:04:11.840><c> rectangle</c>

00:04:12.949 --> 00:04:12.959 align:start position:0%
the area of a rectangle
 

00:04:12.959 --> 00:04:15.910 align:start position:0%
the area of a rectangle
so<00:04:13.200><c> we're</c><00:04:13.360><c> going</c><00:04:13.519><c> to</c><00:04:13.680><c> do</c><00:04:14.640><c> width</c><00:04:15.120><c> times</c><00:04:15.519><c> height</c>

00:04:15.910 --> 00:04:15.920 align:start position:0%
so we're going to do width times height
 

00:04:15.920 --> 00:04:16.710 align:start position:0%
so we're going to do width times height
so<00:04:16.079><c> the</c><00:04:16.320><c> width</c>

00:04:16.710 --> 00:04:16.720 align:start position:0%
so the width
 

00:04:16.720 --> 00:04:20.229 align:start position:0%
so the width
is<00:04:16.880><c> going</c><00:04:16.959><c> to</c><00:04:17.120><c> be</c><00:04:17.440><c> right</c><00:04:18.160><c> minus</c><00:04:19.040><c> left</c>

00:04:20.229 --> 00:04:20.239 align:start position:0%
is going to be right minus left
 

00:04:20.239 --> 00:04:23.510 align:start position:0%
is going to be right minus left
multiplied<00:04:21.440><c> by</c><00:04:21.759><c> the</c><00:04:22.079><c> height</c><00:04:22.560><c> now</c><00:04:22.880><c> how</c><00:04:23.040><c> do</c><00:04:23.199><c> we</c>

00:04:23.510 --> 00:04:23.520 align:start position:0%
multiplied by the height now how do we
 

00:04:23.520 --> 00:04:26.230 align:start position:0%
multiplied by the height now how do we
find<00:04:23.919><c> the</c><00:04:24.160><c> height</c><00:04:25.120><c> so</c><00:04:25.280><c> how</c><00:04:25.440><c> do</c><00:04:25.600><c> we</c><00:04:25.759><c> find</c><00:04:26.000><c> the</c>

00:04:26.230 --> 00:04:26.240 align:start position:0%
find the height so how do we find the
 

00:04:26.240 --> 00:04:26.950 align:start position:0%
find the height so how do we find the
height

00:04:26.950 --> 00:04:26.960 align:start position:0%
height
 

00:04:26.960 --> 00:04:29.030 align:start position:0%
height
remember<00:04:27.520><c> we're</c><00:04:27.759><c> focusing</c><00:04:28.320><c> on</c><00:04:28.639><c> what</c><00:04:28.800><c> the</c>

00:04:29.030 --> 00:04:29.040 align:start position:0%
remember we're focusing on what the
 

00:04:29.040 --> 00:04:30.230 align:start position:0%
remember we're focusing on what the
bottleneck<00:04:29.759><c> is</c>

00:04:30.230 --> 00:04:30.240 align:start position:0%
bottleneck is
 

00:04:30.240 --> 00:04:32.550 align:start position:0%
bottleneck is
and<00:04:30.479><c> by</c><00:04:30.720><c> bottleneck</c><00:04:31.440><c> in</c><00:04:31.600><c> this</c><00:04:31.840><c> case</c><00:04:32.080><c> we</c><00:04:32.320><c> mean</c>

00:04:32.550 --> 00:04:32.560 align:start position:0%
and by bottleneck in this case we mean
 

00:04:32.560 --> 00:04:34.230 align:start position:0%
and by bottleneck in this case we mean
the<00:04:32.800><c> minimum</c><00:04:33.280><c> height</c><00:04:33.680><c> because</c>

00:04:34.230 --> 00:04:34.240 align:start position:0%
the minimum height because
 

00:04:34.240 --> 00:04:36.390 align:start position:0%
the minimum height because
no<00:04:34.479><c> matter</c><00:04:34.800><c> how</c><00:04:35.040><c> tall</c><00:04:35.360><c> our</c><00:04:35.600><c> right</c><00:04:36.000><c> no</c><00:04:36.160><c> matter</c>

00:04:36.390 --> 00:04:36.400 align:start position:0%
no matter how tall our right no matter
 

00:04:36.400 --> 00:04:38.230 align:start position:0%
no matter how tall our right no matter
how<00:04:36.639><c> tall</c><00:04:36.880><c> one</c><00:04:37.120><c> of</c><00:04:37.199><c> the</c><00:04:37.360><c> heights</c><00:04:37.680><c> is</c><00:04:37.919><c> right</c>

00:04:38.230 --> 00:04:38.240 align:start position:0%
how tall one of the heights is right
 

00:04:38.240 --> 00:04:40.230 align:start position:0%
how tall one of the heights is right
we<00:04:38.320><c> could</c><00:04:38.560><c> extend</c><00:04:38.960><c> this</c><00:04:39.120><c> to</c><00:04:39.280><c> a</c><00:04:39.440><c> million</c><00:04:39.919><c> but</c>

00:04:40.230 --> 00:04:40.240 align:start position:0%
we could extend this to a million but
 

00:04:40.240 --> 00:04:42.150 align:start position:0%
we could extend this to a million but
look<00:04:40.400><c> how</c><00:04:40.639><c> small</c><00:04:40.960><c> this</c><00:04:41.120><c> one</c><00:04:41.360><c> is</c><00:04:41.520><c> it's</c><00:04:41.680><c> just</c><00:04:41.919><c> too</c>

00:04:42.150 --> 00:04:42.160 align:start position:0%
look how small this one is it's just too
 

00:04:42.160 --> 00:04:44.070 align:start position:0%
look how small this one is it's just too
small<00:04:42.560><c> the</c><00:04:42.720><c> water</c><00:04:43.040><c> is</c><00:04:43.120><c> going</c><00:04:43.199><c> to</c><00:04:43.360><c> spill</c><00:04:43.680><c> out</c>

00:04:44.070 --> 00:04:44.080 align:start position:0%
small the water is going to spill out
 

00:04:44.080 --> 00:04:46.390 align:start position:0%
small the water is going to spill out
so<00:04:44.320><c> we</c><00:04:44.479><c> care</c><00:04:44.720><c> about</c><00:04:44.880><c> the</c><00:04:45.120><c> minimum</c><00:04:45.680><c> height</c><00:04:46.240><c> of</c>

00:04:46.390 --> 00:04:46.400 align:start position:0%
so we care about the minimum height of
 

00:04:46.400 --> 00:04:47.430 align:start position:0%
so we care about the minimum height of
the<00:04:46.639><c> left</c><00:04:46.880><c> and</c><00:04:47.040><c> right</c>

00:04:47.430 --> 00:04:47.440 align:start position:0%
the left and right
 

00:04:47.440 --> 00:04:49.990 align:start position:0%
the left and right
pointers<00:04:48.080><c> so</c><00:04:48.400><c> let's</c><00:04:48.639><c> get</c><00:04:48.880><c> that</c><00:04:49.120><c> minimum</c><00:04:49.759><c> so</c>

00:04:49.990 --> 00:04:50.000 align:start position:0%
pointers so let's get that minimum so
 

00:04:50.000 --> 00:04:50.629 align:start position:0%
pointers so let's get that minimum so
minimum

00:04:50.629 --> 00:04:50.639 align:start position:0%
minimum
 

00:04:50.639 --> 00:04:53.909 align:start position:0%
minimum
of<00:04:51.120><c> height</c><00:04:51.600><c> of</c><00:04:51.919><c> left</c>

00:04:53.909 --> 00:04:53.919 align:start position:0%
of height of left
 

00:04:53.919 --> 00:04:57.830 align:start position:0%
of height of left
and<00:04:54.160><c> minimum</c><00:04:54.720><c> of</c><00:04:55.040><c> height</c><00:04:55.919><c> of</c><00:04:56.320><c> right</c>

00:04:57.830 --> 00:04:57.840 align:start position:0%
and minimum of height of right
 

00:04:57.840 --> 00:04:59.670 align:start position:0%
and minimum of height of right
so<00:04:58.080><c> now</c><00:04:58.240><c> that</c><00:04:58.400><c> we've</c><00:04:58.560><c> computed</c><00:04:59.040><c> the</c><00:04:59.280><c> area</c>

00:04:59.670 --> 00:04:59.680 align:start position:0%
so now that we've computed the area
 

00:04:59.680 --> 00:05:01.830 align:start position:0%
so now that we've computed the area
remember<00:05:00.080><c> we</c><00:05:00.240><c> want</c><00:05:00.400><c> the</c><00:05:00.560><c> max</c><00:05:00.960><c> area</c><00:05:01.280><c> so</c><00:05:01.440><c> we</c><00:05:01.600><c> can</c>

00:05:01.830 --> 00:05:01.840 align:start position:0%
remember we want the max area so we can
 

00:05:01.840 --> 00:05:03.350 align:start position:0%
remember we want the max area so we can
set<00:05:02.160><c> our</c><00:05:02.400><c> result</c>

00:05:03.350 --> 00:05:03.360 align:start position:0%
set our result
 

00:05:03.360 --> 00:05:06.790 align:start position:0%
set our result
equal<00:05:03.919><c> to</c><00:05:04.080><c> the</c><00:05:04.320><c> max</c><00:05:05.280><c> of</c>

00:05:06.790 --> 00:05:06.800 align:start position:0%
equal to the max of
 

00:05:06.800 --> 00:05:09.670 align:start position:0%
equal to the max of
itself<00:05:08.000><c> and</c><00:05:08.320><c> of</c><00:05:08.639><c> the</c><00:05:08.960><c> area</c><00:05:09.199><c> that</c><00:05:09.360><c> we</c><00:05:09.440><c> just</c>

00:05:09.670 --> 00:05:09.680 align:start position:0%
itself and of the area that we just
 

00:05:09.680 --> 00:05:10.390 align:start position:0%
itself and of the area that we just
computed

00:05:10.390 --> 00:05:10.400 align:start position:0%
computed
 

00:05:10.400 --> 00:05:13.029 align:start position:0%
computed
so<00:05:11.199><c> every</c><00:05:11.440><c> time</c><00:05:11.600><c> we</c><00:05:11.759><c> compute</c><00:05:12.080><c> an</c><00:05:12.240><c> area</c><00:05:12.720><c> if</c><00:05:12.880><c> it's</c>

00:05:13.029 --> 00:05:13.039 align:start position:0%
so every time we compute an area if it's
 

00:05:13.039 --> 00:05:15.270 align:start position:0%
so every time we compute an area if it's
the<00:05:13.199><c> max</c><00:05:13.600><c> we're</c><00:05:13.759><c> going</c><00:05:13.840><c> to</c><00:05:14.000><c> update</c><00:05:14.400><c> our</c><00:05:14.560><c> result</c>

00:05:15.270 --> 00:05:15.280 align:start position:0%
the max we're going to update our result
 

00:05:15.280 --> 00:05:18.150 align:start position:0%
the max we're going to update our result
and<00:05:15.520><c> now</c><00:05:16.240><c> all</c><00:05:16.400><c> we</c><00:05:16.560><c> need</c><00:05:16.720><c> to</c><00:05:16.880><c> do</c><00:05:17.199><c> is</c><00:05:17.360><c> return</c><00:05:17.919><c> that</c>

00:05:18.150 --> 00:05:18.160 align:start position:0%
and now all we need to do is return that
 

00:05:18.160 --> 00:05:19.510 align:start position:0%
and now all we need to do is return that
result<00:05:18.479><c> that</c><00:05:18.560><c> we</c><00:05:18.720><c> computed</c>

00:05:19.510 --> 00:05:19.520 align:start position:0%
result that we computed
 

00:05:19.520 --> 00:05:22.230 align:start position:0%
result that we computed
let's<00:05:19.759><c> see</c><00:05:19.919><c> if</c><00:05:20.080><c> it</c><00:05:20.160><c> works</c><00:05:21.360><c> unfortunately</c><00:05:22.080><c> it</c>

00:05:22.230 --> 00:05:22.240 align:start position:0%
let's see if it works unfortunately it
 

00:05:22.240 --> 00:05:24.390 align:start position:0%
let's see if it works unfortunately it
doesn't<00:05:22.479><c> work</c><00:05:22.800><c> we</c><00:05:22.960><c> got</c><00:05:23.199><c> time</c><00:05:23.520><c> limit</c><00:05:23.919><c> exceeded</c>

00:05:24.390 --> 00:05:24.400 align:start position:0%
doesn't work we got time limit exceeded
 

00:05:24.400 --> 00:05:24.950 align:start position:0%
doesn't work we got time limit exceeded
so

00:05:24.950 --> 00:05:24.960 align:start position:0%
so
 

00:05:24.960 --> 00:05:26.870 align:start position:0%
so
now<00:05:25.120><c> we</c><00:05:25.280><c> need</c><00:05:25.440><c> to</c><00:05:25.600><c> figure</c><00:05:25.919><c> out</c><00:05:26.320><c> how</c><00:05:26.560><c> we</c><00:05:26.720><c> can</c>

00:05:26.870 --> 00:05:26.880 align:start position:0%
now we need to figure out how we can
 

00:05:26.880 --> 00:05:28.710 align:start position:0%
now we need to figure out how we can
make<00:05:27.120><c> this</c><00:05:27.520><c> a</c><00:05:27.680><c> little</c><00:05:27.840><c> bit</c><00:05:28.080><c> better</c>

00:05:28.710 --> 00:05:28.720 align:start position:0%
make this a little bit better
 

00:05:28.720 --> 00:05:31.909 align:start position:0%
make this a little bit better
can<00:05:28.960><c> we</c><00:05:29.120><c> get</c><00:05:29.600><c> a</c><00:05:29.759><c> linear</c><00:05:30.160><c> time</c><00:05:30.479><c> solution</c><00:05:31.440><c> so</c><00:05:31.680><c> now</c>

00:05:31.909 --> 00:05:31.919 align:start position:0%
can we get a linear time solution so now
 

00:05:31.919 --> 00:05:33.510 align:start position:0%
can we get a linear time solution so now
let's<00:05:32.160><c> take</c><00:05:32.400><c> a</c><00:05:32.560><c> look</c><00:05:32.880><c> at</c><00:05:33.120><c> the</c>

00:05:33.510 --> 00:05:33.520 align:start position:0%
let's take a look at the
 

00:05:33.520 --> 00:05:35.909 align:start position:0%
let's take a look at the
linear<00:05:34.000><c> time</c><00:05:34.400><c> solution</c><00:05:35.199><c> the</c><00:05:35.360><c> one</c><00:05:35.520><c> that</c><00:05:35.680><c> will</c>

00:05:35.909 --> 00:05:35.919 align:start position:0%
linear time solution the one that will
 

00:05:35.919 --> 00:05:37.990 align:start position:0%
linear time solution the one that will
actually<00:05:36.400><c> work</c><00:05:36.639><c> in</c><00:05:36.800><c> late</c><00:05:37.039><c> code</c>

00:05:37.990 --> 00:05:38.000 align:start position:0%
actually work in late code
 

00:05:38.000 --> 00:05:40.710 align:start position:0%
actually work in late code
so<00:05:38.320><c> remember</c><00:05:38.720><c> how</c><00:05:38.880><c> we</c><00:05:39.120><c> said</c><00:05:39.680><c> that</c><00:05:39.840><c> the</c><00:05:40.080><c> minimum</c>

00:05:40.710 --> 00:05:40.720 align:start position:0%
so remember how we said that the minimum
 

00:05:40.720 --> 00:05:41.110 align:start position:0%
so remember how we said that the minimum
height

00:05:41.110 --> 00:05:41.120 align:start position:0%
height
 

00:05:41.120 --> 00:05:43.749 align:start position:0%
height
is<00:05:41.360><c> our</c><00:05:41.600><c> limiting</c><00:05:42.080><c> factor</c><00:05:42.639><c> we</c><00:05:43.120><c> really</c><00:05:43.520><c> don't</c>

00:05:43.749 --> 00:05:43.759 align:start position:0%
is our limiting factor we really don't
 

00:05:43.759 --> 00:05:44.150 align:start position:0%
is our limiting factor we really don't
want

00:05:44.150 --> 00:05:44.160 align:start position:0%
want
 

00:05:44.160 --> 00:05:47.350 align:start position:0%
want
small<00:05:44.560><c> heights</c><00:05:45.199><c> so</c><00:05:45.520><c> let's</c><00:05:45.919><c> see</c><00:05:46.160><c> if</c><00:05:46.240><c> we</c><00:05:46.400><c> can</c><00:05:46.720><c> try</c>

00:05:47.350 --> 00:05:47.360 align:start position:0%
small heights so let's see if we can try
 

00:05:47.360 --> 00:05:50.550 align:start position:0%
small heights so let's see if we can try
a<00:05:47.680><c> two</c><00:05:48.000><c> pointer</c><00:05:48.400><c> technique</c><00:05:49.199><c> now</c><00:05:50.000><c> i'm</c><00:05:50.240><c> gonna</c>

00:05:50.550 --> 00:05:50.560 align:start position:0%
a two pointer technique now i'm gonna
 

00:05:50.560 --> 00:05:51.510 align:start position:0%
a two pointer technique now i'm gonna
initialize

00:05:51.510 --> 00:05:51.520 align:start position:0%
initialize
 

00:05:51.520 --> 00:05:55.029 align:start position:0%
initialize
the<00:05:51.680><c> left</c><00:05:52.080><c> pointer</c><00:05:53.680><c> all</c><00:05:53.840><c> the</c><00:05:54.000><c> way</c><00:05:54.240><c> at</c><00:05:54.400><c> the</c><00:05:54.639><c> left</c>

00:05:55.029 --> 00:05:55.039 align:start position:0%
the left pointer all the way at the left
 

00:05:55.039 --> 00:05:56.870 align:start position:0%
the left pointer all the way at the left
and<00:05:55.199><c> i'm</c><00:05:55.360><c> going</c><00:05:55.520><c> to</c><00:05:55.600><c> initialize</c><00:05:56.240><c> the</c><00:05:56.560><c> right</c>

00:05:56.870 --> 00:05:56.880 align:start position:0%
and i'm going to initialize the right
 

00:05:56.880 --> 00:05:59.029 align:start position:0%
and i'm going to initialize the right
pointer<00:05:57.520><c> all</c><00:05:57.759><c> the</c><00:05:57.919><c> way</c><00:05:58.160><c> at</c><00:05:58.240><c> the</c><00:05:58.479><c> right</c>

00:05:59.029 --> 00:05:59.039 align:start position:0%
pointer all the way at the right
 

00:05:59.039 --> 00:06:01.670 align:start position:0%
pointer all the way at the right
why<00:05:59.440><c> because</c><00:05:59.680><c> we</c><00:05:59.840><c> want</c><00:06:00.000><c> to</c><00:06:00.240><c> maximize</c><00:06:00.880><c> the</c><00:06:01.120><c> area</c>

00:06:01.670 --> 00:06:01.680 align:start position:0%
why because we want to maximize the area
 

00:06:01.680 --> 00:06:02.230 align:start position:0%
why because we want to maximize the area
so

00:06:02.230 --> 00:06:02.240 align:start position:0%
so
 

00:06:02.240 --> 00:06:05.510 align:start position:0%
so
why<00:06:02.479><c> would</c><00:06:02.639><c> i</c><00:06:03.360><c> initialize</c><00:06:04.000><c> them</c><00:06:04.400><c> like</c>

00:06:05.510 --> 00:06:05.520 align:start position:0%
why would i initialize them like
 

00:06:05.520 --> 00:06:07.510 align:start position:0%
why would i initialize them like
because<00:06:05.840><c> we</c><00:06:06.000><c> want</c><00:06:06.160><c> the</c><00:06:06.400><c> width</c><00:06:06.720><c> to</c><00:06:06.800><c> be</c><00:06:06.960><c> as</c><00:06:07.280><c> big</c>

00:06:07.510 --> 00:06:07.520 align:start position:0%
because we want the width to be as big
 

00:06:07.520 --> 00:06:09.909 align:start position:0%
because we want the width to be as big
as<00:06:07.680><c> possible</c><00:06:08.400><c> because</c><00:06:08.639><c> if</c><00:06:08.880><c> this</c><00:06:09.120><c> left</c><00:06:09.440><c> height</c>

00:06:09.909 --> 00:06:09.919 align:start position:0%
as possible because if this left height
 

00:06:09.919 --> 00:06:12.230 align:start position:0%
as possible because if this left height
is<00:06:10.160><c> super</c><00:06:10.560><c> tall</c><00:06:11.120><c> and</c><00:06:11.280><c> this</c><00:06:11.600><c> right</c><00:06:11.840><c> height</c><00:06:12.160><c> is</c>

00:06:12.230 --> 00:06:12.240 align:start position:0%
is super tall and this right height is
 

00:06:12.240 --> 00:06:13.189 align:start position:0%
is super tall and this right height is
super<00:06:12.639><c> tall</c>

00:06:13.189 --> 00:06:13.199 align:start position:0%
super tall
 

00:06:13.199 --> 00:06:16.870 align:start position:0%
super tall
then<00:06:13.360><c> we've</c><00:06:14.000><c> instantly</c><00:06:14.639><c> found</c><00:06:14.960><c> our</c><00:06:15.120><c> result</c>

00:06:16.870 --> 00:06:16.880 align:start position:0%
then we've instantly found our result
 

00:06:16.880 --> 00:06:19.350 align:start position:0%
then we've instantly found our result
but<00:06:17.039><c> of</c><00:06:17.199><c> course</c><00:06:17.600><c> in</c><00:06:17.840><c> this</c><00:06:18.080><c> case</c><00:06:18.800><c> that</c><00:06:18.960><c> doesn't</c>

00:06:19.350 --> 00:06:19.360 align:start position:0%
but of course in this case that doesn't
 

00:06:19.360 --> 00:06:20.629 align:start position:0%
but of course in this case that doesn't
work<00:06:19.919><c> we</c><00:06:20.160><c> get</c><00:06:20.400><c> an</c>

00:06:20.629 --> 00:06:20.639 align:start position:0%
work we get an
 

00:06:20.639 --> 00:06:24.070 align:start position:0%
work we get an
area<00:06:21.120><c> of</c><00:06:21.600><c> 1</c><00:06:21.919><c> by</c><00:06:22.639><c> 8</c><00:06:23.039><c> i</c><00:06:23.199><c> think</c><00:06:23.520><c> so</c><00:06:23.680><c> that's</c>

00:06:24.070 --> 00:06:24.080 align:start position:0%
area of 1 by 8 i think so that's
 

00:06:24.080 --> 00:06:24.790 align:start position:0%
area of 1 by 8 i think so that's
obviously

00:06:24.790 --> 00:06:24.800 align:start position:0%
obviously
 

00:06:24.800 --> 00:06:27.510 align:start position:0%
obviously
not<00:06:25.039><c> the</c><00:06:25.199><c> result</c><00:06:25.919><c> so</c><00:06:26.160><c> what</c><00:06:26.639><c> do</c><00:06:26.800><c> we</c><00:06:26.960><c> do</c><00:06:27.199><c> how</c><00:06:27.360><c> do</c>

00:06:27.510 --> 00:06:27.520 align:start position:0%
not the result so what do we do how do
 

00:06:27.520 --> 00:06:32.629 align:start position:0%
not the result so what do we do how do
we<00:06:27.759><c> update</c><00:06:28.240><c> our</c><00:06:28.400><c> left</c><00:06:28.720><c> and</c><00:06:28.880><c> right</c><00:06:29.120><c> pointers</c>

00:06:32.629 --> 00:06:32.639 align:start position:0%
 
 

00:06:32.639 --> 00:06:34.710 align:start position:0%
 
so<00:06:32.880><c> the</c><00:06:33.120><c> first</c><00:06:33.440><c> area</c><00:06:33.759><c> that</c><00:06:33.840><c> we</c><00:06:34.000><c> computed</c><00:06:34.560><c> was</c>

00:06:34.710 --> 00:06:34.720 align:start position:0%
so the first area that we computed was
 

00:06:34.720 --> 00:06:35.990 align:start position:0%
so the first area that we computed was
an<00:06:34.960><c> 8</c><00:06:35.440><c> which</c><00:06:35.680><c> is</c>

00:06:35.990 --> 00:06:36.000 align:start position:0%
an 8 which is
 

00:06:36.000 --> 00:06:38.390 align:start position:0%
an 8 which is
our<00:06:36.160><c> max</c><00:06:36.639><c> because</c><00:06:37.039><c> our</c><00:06:37.280><c> initial</c><00:06:37.680><c> max</c><00:06:38.160><c> because</c>

00:06:38.390 --> 00:06:38.400 align:start position:0%
our max because our initial max because
 

00:06:38.400 --> 00:06:40.950 align:start position:0%
our max because our initial max because
this<00:06:38.639><c> is</c><00:06:38.720><c> basically</c><00:06:39.280><c> the</c><00:06:39.440><c> maximum</c><00:06:40.080><c> so</c><00:06:40.400><c> far</c>

00:06:40.950 --> 00:06:40.960 align:start position:0%
this is basically the maximum so far
 

00:06:40.960 --> 00:06:42.629 align:start position:0%
this is basically the maximum so far
so<00:06:41.199><c> now</c><00:06:41.440><c> how</c><00:06:41.680><c> are</c><00:06:41.759><c> we</c><00:06:41.919><c> going</c><00:06:42.000><c> to</c><00:06:42.160><c> update</c><00:06:42.479><c> our</c>

00:06:42.629 --> 00:06:42.639 align:start position:0%
so now how are we going to update our
 

00:06:42.639 --> 00:06:43.990 align:start position:0%
so now how are we going to update our
pointer<00:06:43.440><c> well</c>

00:06:43.990 --> 00:06:44.000 align:start position:0%
pointer well
 

00:06:44.000 --> 00:06:45.350 align:start position:0%
pointer well
we're<00:06:44.160><c> going</c><00:06:44.319><c> to</c><00:06:44.400><c> look</c><00:06:44.560><c> at</c><00:06:44.800><c> what's</c><00:06:45.120><c> the</c>

00:06:45.350 --> 00:06:45.360 align:start position:0%
we're going to look at what's the
 

00:06:45.360 --> 00:06:47.590 align:start position:0%
we're going to look at what's the
minimum<00:06:45.840><c> height</c><00:06:46.400><c> this</c><00:06:46.639><c> one</c><00:06:46.800><c> has</c><00:06:47.039><c> a</c><00:06:47.120><c> height</c><00:06:47.360><c> of</c>

00:06:47.590 --> 00:06:47.600 align:start position:0%
minimum height this one has a height of
 

00:06:47.600 --> 00:06:48.390 align:start position:0%
minimum height this one has a height of
one

00:06:48.390 --> 00:06:48.400 align:start position:0%
one
 

00:06:48.400 --> 00:06:50.870 align:start position:0%
one
this<00:06:48.639><c> one</c><00:06:48.880><c> has</c><00:06:49.039><c> a</c><00:06:49.120><c> height</c><00:06:49.360><c> of</c><00:06:49.520><c> seven</c><00:06:50.319><c> so</c><00:06:50.639><c> why</c>

00:06:50.870 --> 00:06:50.880 align:start position:0%
this one has a height of seven so why
 

00:06:50.880 --> 00:06:53.029 align:start position:0%
this one has a height of seven so why
would<00:06:51.120><c> i</c><00:06:51.360><c> shift</c><00:06:51.759><c> my</c><00:06:52.080><c> right</c><00:06:52.400><c> pointer</c><00:06:52.720><c> when</c><00:06:52.880><c> it</c>

00:06:53.029 --> 00:06:53.039 align:start position:0%
would i shift my right pointer when it
 

00:06:53.039 --> 00:06:53.830 align:start position:0%
would i shift my right pointer when it
has<00:06:53.199><c> a</c><00:06:53.280><c> height</c><00:06:53.520><c> of</c>

00:06:53.830 --> 00:06:53.840 align:start position:0%
has a height of
 

00:06:53.840 --> 00:06:56.950 align:start position:0%
has a height of
seven<00:06:54.400><c> when</c><00:06:54.639><c> i</c><00:06:54.720><c> could</c><00:06:54.960><c> instead</c><00:06:55.919><c> shift</c><00:06:56.240><c> my</c><00:06:56.560><c> left</c>

00:06:56.950 --> 00:06:56.960 align:start position:0%
seven when i could instead shift my left
 

00:06:56.960 --> 00:06:57.670 align:start position:0%
seven when i could instead shift my left
pointer

00:06:57.670 --> 00:06:57.680 align:start position:0%
pointer
 

00:06:57.680 --> 00:06:59.270 align:start position:0%
pointer
which<00:06:57.919><c> has</c><00:06:58.080><c> a</c><00:06:58.160><c> height</c><00:06:58.400><c> of</c><00:06:58.639><c> one</c><00:06:59.039><c> and</c>

00:06:59.270 --> 00:06:59.280 align:start position:0%
which has a height of one and
 

00:06:59.280 --> 00:07:01.350 align:start position:0%
which has a height of one and
potentially<00:07:00.319><c> increase</c><00:07:00.880><c> it</c>

00:07:01.350 --> 00:07:01.360 align:start position:0%
potentially increase it
 

00:07:01.360 --> 00:07:03.990 align:start position:0%
potentially increase it
so<00:07:01.599><c> now</c><00:07:02.000><c> left</c><00:07:02.400><c> is</c><00:07:02.560><c> over</c><00:07:02.880><c> here</c><00:07:03.440><c> and</c><00:07:03.599><c> we</c><00:07:03.759><c> have</c><00:07:03.919><c> a</c>

00:07:03.990 --> 00:07:04.000 align:start position:0%
so now left is over here and we have a
 

00:07:04.000 --> 00:07:05.830 align:start position:0%
so now left is over here and we have a
height<00:07:04.319><c> of</c><00:07:04.479><c> 8</c>

00:07:05.830 --> 00:07:05.840 align:start position:0%
height of 8
 

00:07:05.840 --> 00:07:08.150 align:start position:0%
height of 8
and<00:07:06.080><c> lucky</c><00:07:06.400><c> for</c><00:07:06.560><c> us</c><00:07:06.800><c> we've</c><00:07:07.360><c> basically</c><00:07:07.840><c> found</c>

00:07:08.150 --> 00:07:08.160 align:start position:0%
and lucky for us we've basically found
 

00:07:08.160 --> 00:07:09.749 align:start position:0%
and lucky for us we've basically found
our<00:07:08.319><c> solution</c><00:07:08.800><c> but</c><00:07:08.960><c> i'm</c><00:07:09.120><c> just</c><00:07:09.280><c> going</c><00:07:09.440><c> to</c><00:07:09.520><c> keep</c>

00:07:09.749 --> 00:07:09.759 align:start position:0%
our solution but i'm just going to keep
 

00:07:09.759 --> 00:07:11.110 align:start position:0%
our solution but i'm just going to keep
going<00:07:10.000><c> with</c><00:07:10.160><c> the</c><00:07:10.319><c> algorithm</c>

00:07:11.110 --> 00:07:11.120 align:start position:0%
going with the algorithm
 

00:07:11.120 --> 00:07:13.430 align:start position:0%
going with the algorithm
just<00:07:11.360><c> to</c><00:07:11.440><c> kind</c><00:07:11.599><c> of</c><00:07:11.680><c> show</c><00:07:11.840><c> you</c><00:07:12.000><c> how</c><00:07:12.240><c> it</c><00:07:12.400><c> works</c><00:07:13.120><c> so</c>

00:07:13.430 --> 00:07:13.440 align:start position:0%
just to kind of show you how it works so
 

00:07:13.440 --> 00:07:14.469 align:start position:0%
just to kind of show you how it works so
now<00:07:13.759><c> we</c><00:07:14.000><c> have</c><00:07:14.240><c> an</c>

00:07:14.469 --> 00:07:14.479 align:start position:0%
now we have an
 

00:07:14.479 --> 00:07:17.589 align:start position:0%
now we have an
area<00:07:14.880><c> of</c><00:07:15.120><c> seven</c><00:07:15.440><c> by</c><00:07:15.759><c> seven</c><00:07:16.400><c> which</c><00:07:16.639><c> we</c><00:07:16.880><c> know</c><00:07:17.360><c> is</c>

00:07:17.589 --> 00:07:17.599 align:start position:0%
area of seven by seven which we know is
 

00:07:17.599 --> 00:07:18.469 align:start position:0%
area of seven by seven which we know is
49

00:07:18.469 --> 00:07:18.479 align:start position:0%
49
 

00:07:18.479 --> 00:07:20.870 align:start position:0%
49
so<00:07:18.639><c> our</c><00:07:18.880><c> max</c><00:07:19.280><c> area</c><00:07:19.520><c> gets</c><00:07:19.840><c> updated</c><00:07:20.319><c> our</c><00:07:20.479><c> max</c><00:07:20.800><c> is</c>

00:07:20.870 --> 00:07:20.880 align:start position:0%
so our max area gets updated our max is
 

00:07:20.880 --> 00:07:22.790 align:start position:0%
so our max area gets updated our max is
no<00:07:21.120><c> longer</c><00:07:21.520><c> eight</c><00:07:21.759><c> it's</c><00:07:22.000><c> 49</c>

00:07:22.790 --> 00:07:22.800 align:start position:0%
no longer eight it's 49
 

00:07:22.800 --> 00:07:25.189 align:start position:0%
no longer eight it's 49
which<00:07:22.960><c> we</c><00:07:23.199><c> know</c><00:07:23.520><c> is</c><00:07:23.680><c> the</c><00:07:23.759><c> correct</c><00:07:24.160><c> solution</c>

00:07:25.189 --> 00:07:25.199 align:start position:0%
which we know is the correct solution
 

00:07:25.199 --> 00:07:26.870 align:start position:0%
which we know is the correct solution
next<00:07:25.520><c> i'm</c><00:07:25.680><c> gonna</c><00:07:25.840><c> take</c><00:07:26.080><c> the</c><00:07:26.240><c> minimum</c>

00:07:26.870 --> 00:07:26.880 align:start position:0%
next i'm gonna take the minimum
 

00:07:26.880 --> 00:07:30.230 align:start position:0%
next i'm gonna take the minimum
of<00:07:27.360><c> eight</c><00:07:28.000><c> and</c><00:07:28.840><c> seven</c>

00:07:30.230 --> 00:07:30.240 align:start position:0%
of eight and seven
 

00:07:30.240 --> 00:07:31.909 align:start position:0%
of eight and seven
is<00:07:30.400><c> smaller</c><00:07:30.800><c> so</c><00:07:30.960><c> we're</c><00:07:31.120><c> going</c><00:07:31.199><c> to</c><00:07:31.440><c> shift</c><00:07:31.759><c> our</c>

00:07:31.909 --> 00:07:31.919 align:start position:0%
is smaller so we're going to shift our
 

00:07:31.919 --> 00:07:33.670 align:start position:0%
is smaller so we're going to shift our
right<00:07:32.240><c> pointer</c><00:07:32.639><c> to</c><00:07:32.800><c> the</c><00:07:32.960><c> left</c>

00:07:33.670 --> 00:07:33.680 align:start position:0%
right pointer to the left
 

00:07:33.680 --> 00:07:37.589 align:start position:0%
right pointer to the left
now<00:07:34.000><c> our</c><00:07:34.319><c> right</c><00:07:34.560><c> height</c><00:07:35.120><c> is</c><00:07:36.319><c> looks</c><00:07:36.479><c> like</c><00:07:36.800><c> three</c>

00:07:37.589 --> 00:07:37.599 align:start position:0%
now our right height is looks like three
 

00:07:37.599 --> 00:07:39.589 align:start position:0%
now our right height is looks like three
so<00:07:37.759><c> the</c><00:07:38.080><c> area</c><00:07:38.400><c> that</c><00:07:38.479><c> we're</c><00:07:38.639><c> going</c><00:07:38.800><c> to</c><00:07:38.960><c> compute</c>

00:07:39.589 --> 00:07:39.599 align:start position:0%
so the area that we're going to compute
 

00:07:39.599 --> 00:07:42.830 align:start position:0%
so the area that we're going to compute
is<00:07:39.759><c> going</c><00:07:39.840><c> to</c><00:07:40.000><c> be</c><00:07:40.560><c> 3</c>

00:07:42.830 --> 00:07:42.840 align:start position:0%
is going to be 3
 

00:07:42.840 --> 00:07:44.869 align:start position:0%
is going to be 3
by<00:07:44.160><c> 6</c>

00:07:44.869 --> 00:07:44.879 align:start position:0%
by 6
 

00:07:44.879 --> 00:07:47.350 align:start position:0%
by 6
which<00:07:45.120><c> is</c><00:07:45.280><c> 18</c><00:07:45.919><c> but</c><00:07:46.080><c> that's</c><00:07:46.400><c> too</c><00:07:46.639><c> small</c><00:07:47.120><c> that's</c>

00:07:47.350 --> 00:07:47.360 align:start position:0%
which is 18 but that's too small that's
 

00:07:47.360 --> 00:07:49.270 align:start position:0%
which is 18 but that's too small that's
not<00:07:47.759><c> bigger</c><00:07:48.000><c> than</c><00:07:48.240><c> our</c><00:07:48.479><c> maximum</c>

00:07:49.270 --> 00:07:49.280 align:start position:0%
not bigger than our maximum
 

00:07:49.280 --> 00:07:51.430 align:start position:0%
not bigger than our maximum
so<00:07:49.520><c> we</c><00:07:49.599><c> don't</c><00:07:49.759><c> need</c><00:07:49.919><c> to</c><00:07:50.000><c> update</c><00:07:50.319><c> our</c><00:07:50.400><c> max</c><00:07:50.720><c> area</c>

00:07:51.430 --> 00:07:51.440 align:start position:0%
so we don't need to update our max area
 

00:07:51.440 --> 00:07:52.309 align:start position:0%
so we don't need to update our max area
now<00:07:51.680><c> our</c><00:07:51.840><c> minimum</c>

00:07:52.309 --> 00:07:52.319 align:start position:0%
now our minimum
 

00:07:52.319 --> 00:07:58.629 align:start position:0%
now our minimum
is<00:07:52.479><c> 3</c><00:07:53.199><c> so</c><00:07:53.360><c> we're</c><00:07:53.520><c> going</c><00:07:53.599><c> to</c><00:07:56.840><c> shift</c>

00:07:58.629 --> 00:07:58.639 align:start position:0%
is 3 so we're going to shift
 

00:07:58.639 --> 00:08:01.830 align:start position:0%
is 3 so we're going to shift
now<00:07:58.879><c> we</c><00:07:59.120><c> have</c><00:07:59.360><c> an</c><00:07:59.599><c> 8</c><00:07:59.840><c> by</c><00:08:00.160><c> 5</c><00:08:00.479><c> rectangle</c><00:08:01.120><c> which</c><00:08:01.360><c> is</c>

00:08:01.830 --> 00:08:01.840 align:start position:0%
now we have an 8 by 5 rectangle which is
 

00:08:01.840 --> 00:08:04.790 align:start position:0%
now we have an 8 by 5 rectangle which is
40<00:08:02.240><c> but</c><00:08:02.479><c> that's</c><00:08:03.039><c> still</c><00:08:03.360><c> not</c><00:08:03.599><c> greater</c><00:08:03.919><c> than</c><00:08:04.080><c> 49</c>

00:08:04.790 --> 00:08:04.800 align:start position:0%
40 but that's still not greater than 49
 

00:08:04.800 --> 00:08:05.830 align:start position:0%
40 but that's still not greater than 49
and

00:08:05.830 --> 00:08:05.840 align:start position:0%
and
 

00:08:05.840 --> 00:08:07.670 align:start position:0%
and
and<00:08:06.000><c> now</c><00:08:06.160><c> we</c><00:08:06.319><c> get</c><00:08:06.560><c> to</c><00:08:06.800><c> a</c><00:08:06.960><c> nice</c><00:08:07.199><c> little</c><00:08:07.440><c> edge</c>

00:08:07.670 --> 00:08:07.680 align:start position:0%
and now we get to a nice little edge
 

00:08:07.680 --> 00:08:09.670 align:start position:0%
and now we get to a nice little edge
case<00:08:08.000><c> where</c><00:08:08.160><c> both</c><00:08:08.560><c> of</c><00:08:08.800><c> the</c><00:08:08.960><c> values</c>

00:08:09.670 --> 00:08:09.680 align:start position:0%
case where both of the values
 

00:08:09.680 --> 00:08:11.670 align:start position:0%
case where both of the values
are<00:08:10.000><c> equal</c><00:08:10.639><c> in</c><00:08:10.800><c> this</c><00:08:10.960><c> case</c><00:08:11.199><c> it</c><00:08:11.360><c> doesn't</c>

00:08:11.670 --> 00:08:11.680 align:start position:0%
are equal in this case it doesn't
 

00:08:11.680 --> 00:08:13.350 align:start position:0%
are equal in this case it doesn't
actually<00:08:12.080><c> matter</c><00:08:12.400><c> which</c><00:08:12.639><c> pointer</c><00:08:13.039><c> that</c><00:08:13.120><c> we</c>

00:08:13.350 --> 00:08:13.360 align:start position:0%
actually matter which pointer that we
 

00:08:13.360 --> 00:08:13.909 align:start position:0%
actually matter which pointer that we
shift

00:08:13.909 --> 00:08:13.919 align:start position:0%
shift
 

00:08:13.919 --> 00:08:17.189 align:start position:0%
shift
but<00:08:14.240><c> if</c><00:08:14.400><c> you</c><00:08:14.639><c> wanted</c><00:08:15.039><c> to</c><00:08:15.360><c> you</c><00:08:15.759><c> could</c><00:08:16.319><c> shift</c>

00:08:17.189 --> 00:08:17.199 align:start position:0%
but if you wanted to you could shift
 

00:08:17.199 --> 00:08:19.990 align:start position:0%
but if you wanted to you could shift
the<00:08:17.440><c> one</c><00:08:17.840><c> that</c><00:08:18.080><c> has</c><00:08:18.400><c> a</c><00:08:18.560><c> larger</c><00:08:19.039><c> height</c><00:08:19.599><c> coming</c>

00:08:19.990 --> 00:08:20.000 align:start position:0%
the one that has a larger height coming
 

00:08:20.000 --> 00:08:20.309 align:start position:0%
the one that has a larger height coming
like

00:08:20.309 --> 00:08:20.319 align:start position:0%
like
 

00:08:20.319 --> 00:08:22.950 align:start position:0%
like
for<00:08:20.479><c> example</c><00:08:20.879><c> like</c><00:08:21.039><c> this</c><00:08:21.280><c> height</c><00:08:21.520><c> is</c><00:08:21.680><c> at</c><00:08:21.919><c> six</c>

00:08:22.950 --> 00:08:22.960 align:start position:0%
for example like this height is at six
 

00:08:22.960 --> 00:08:25.189 align:start position:0%
for example like this height is at six
whereas<00:08:23.280><c> this</c><00:08:23.520><c> height</c><00:08:23.759><c> is</c><00:08:23.840><c> at</c><00:08:24.080><c> four</c>

00:08:25.189 --> 00:08:25.199 align:start position:0%
whereas this height is at four
 

00:08:25.199 --> 00:08:27.189 align:start position:0%
whereas this height is at four
we<00:08:25.360><c> could</c><00:08:26.000><c> choose</c><00:08:26.240><c> to</c><00:08:26.400><c> shift</c><00:08:26.720><c> this</c><00:08:26.879><c> one</c><00:08:27.039><c> just</c>

00:08:27.189 --> 00:08:27.199 align:start position:0%
we could choose to shift this one just
 

00:08:27.199 --> 00:08:28.950 align:start position:0%
we could choose to shift this one just
because<00:08:27.520><c> we</c><00:08:27.680><c> know</c><00:08:27.840><c> that</c><00:08:28.080><c> a</c><00:08:28.240><c> larger</c><00:08:28.639><c> height</c>

00:08:28.950 --> 00:08:28.960 align:start position:0%
because we know that a larger height
 

00:08:28.960 --> 00:08:29.990 align:start position:0%
because we know that a larger height
exists<00:08:29.440><c> over</c><00:08:29.599><c> here</c>

00:08:29.990 --> 00:08:30.000 align:start position:0%
exists over here
 

00:08:30.000 --> 00:08:32.469 align:start position:0%
exists over here
but<00:08:30.479><c> it</c><00:08:30.800><c> actually</c><00:08:31.199><c> doesn't</c><00:08:31.520><c> matter</c><00:08:32.159><c> you</c><00:08:32.320><c> could</c>

00:08:32.469 --> 00:08:32.479 align:start position:0%
but it actually doesn't matter you could
 

00:08:32.479 --> 00:08:38.949 align:start position:0%
but it actually doesn't matter you could
shift<00:08:32.800><c> either</c><00:08:33.120><c> one</c>

00:08:38.949 --> 00:08:38.959 align:start position:0%
 
 

00:08:38.959 --> 00:08:42.469 align:start position:0%
 
so<00:08:39.120><c> now</c><00:08:39.279><c> our</c><00:08:39.519><c> left</c><00:08:39.919><c> is</c><00:08:40.240><c> six</c><00:08:40.959><c> so</c><00:08:41.120><c> we</c><00:08:41.360><c> get</c>

00:08:42.469 --> 00:08:42.479 align:start position:0%
so now our left is six so we get
 

00:08:42.479 --> 00:08:46.070 align:start position:0%
so now our left is six so we get
six<00:08:42.880><c> by</c><00:08:43.360><c> four</c><00:08:43.760><c> which</c><00:08:44.080><c> is</c><00:08:44.560><c> 24</c><00:08:45.279><c> too</c><00:08:45.519><c> small</c>

00:08:46.070 --> 00:08:46.080 align:start position:0%
six by four which is 24 too small
 

00:08:46.080 --> 00:08:48.470 align:start position:0%
six by four which is 24 too small
we<00:08:46.240><c> don't</c><00:08:46.480><c> care</c><00:08:46.640><c> about</c><00:08:46.959><c> it</c><00:08:47.920><c> let's</c><00:08:48.080><c> just</c><00:08:48.240><c> keep</c>

00:08:48.470 --> 00:08:48.480 align:start position:0%
we don't care about it let's just keep
 

00:08:48.480 --> 00:08:49.190 align:start position:0%
we don't care about it let's just keep
going

00:08:49.190 --> 00:08:49.200 align:start position:0%
going
 

00:08:49.200 --> 00:08:51.350 align:start position:0%
going
so<00:08:49.440><c> now</c><00:08:49.680><c> our</c><00:08:49.760><c> minimum</c><00:08:50.160><c> height</c><00:08:50.399><c> is</c><00:08:50.640><c> six</c><00:08:51.120><c> let's</c>

00:08:51.350 --> 00:08:51.360 align:start position:0%
so now our minimum height is six let's
 

00:08:51.360 --> 00:08:56.710 align:start position:0%
so now our minimum height is six let's
shift<00:08:51.600><c> our</c><00:08:51.760><c> left</c><00:08:52.839><c> pointer</c>

00:08:56.710 --> 00:08:56.720 align:start position:0%
 
 

00:08:56.720 --> 00:08:58.790 align:start position:0%
 
now<00:08:56.880><c> we</c><00:08:57.040><c> get</c><00:08:57.200><c> a</c><00:08:57.279><c> two</c><00:08:57.519><c> by</c><00:08:57.760><c> three</c><00:08:58.000><c> rectangle</c>

00:08:58.790 --> 00:08:58.800 align:start position:0%
now we get a two by three rectangle
 

00:08:58.800 --> 00:09:01.110 align:start position:0%
now we get a two by three rectangle
which<00:08:59.279><c> is</c><00:08:59.600><c> too</c><00:08:59.839><c> small</c>

00:09:01.110 --> 00:09:01.120 align:start position:0%
which is too small
 

00:09:01.120 --> 00:09:02.790 align:start position:0%
which is too small
let's<00:09:01.360><c> shift</c><00:09:01.600><c> our</c><00:09:01.760><c> left</c><00:09:02.000><c> pointer</c><00:09:02.320><c> one</c><00:09:02.560><c> more</c>

00:09:02.790 --> 00:09:02.800 align:start position:0%
let's shift our left pointer one more
 

00:09:02.800 --> 00:09:04.150 align:start position:0%
let's shift our left pointer one more
time

00:09:04.150 --> 00:09:04.160 align:start position:0%
time
 

00:09:04.160 --> 00:09:06.389 align:start position:0%
time
hey<00:09:04.480><c> this</c><00:09:04.640><c> time</c><00:09:04.880><c> we</c><00:09:05.040><c> got</c><00:09:05.360><c> a</c><00:09:05.600><c> five</c><00:09:05.920><c> by</c><00:09:06.160><c> two</c>

00:09:06.389 --> 00:09:06.399 align:start position:0%
hey this time we got a five by two
 

00:09:06.399 --> 00:09:08.389 align:start position:0%
hey this time we got a five by two
that's<00:09:06.640><c> a</c><00:09:06.720><c> little</c><00:09:06.880><c> better</c><00:09:07.120><c> than</c><00:09:07.279><c> before</c><00:09:07.920><c> but</c>

00:09:08.389 --> 00:09:08.399 align:start position:0%
that's a little better than before but
 

00:09:08.399 --> 00:09:11.350 align:start position:0%
that's a little better than before but
still<00:09:08.720><c> not</c><00:09:08.959><c> better</c><00:09:09.200><c> than</c><00:09:09.360><c> our</c><00:09:09.519><c> max</c><00:09:10.959><c> and</c><00:09:11.120><c> so</c>

00:09:11.350 --> 00:09:11.360 align:start position:0%
still not better than our max and so
 

00:09:11.360 --> 00:09:13.190 align:start position:0%
still not better than our max and so
this<00:09:11.600><c> is</c><00:09:11.760><c> basically</c><00:09:12.399><c> the</c><00:09:12.640><c> last</c>

00:09:13.190 --> 00:09:13.200 align:start position:0%
this is basically the last
 

00:09:13.200 --> 00:09:15.990 align:start position:0%
this is basically the last
rectangle<00:09:14.000><c> or</c><00:09:14.640><c> water</c><00:09:14.959><c> container</c><00:09:15.440><c> that</c><00:09:15.600><c> we</c><00:09:15.760><c> can</c>

00:09:15.990 --> 00:09:16.000 align:start position:0%
rectangle or water container that we can
 

00:09:16.000 --> 00:09:16.790 align:start position:0%
rectangle or water container that we can
form

00:09:16.790 --> 00:09:16.800 align:start position:0%
form
 

00:09:16.800 --> 00:09:19.509 align:start position:0%
form
it's<00:09:16.959><c> going</c><00:09:17.040><c> to</c><00:09:17.120><c> be</c><00:09:17.279><c> four</c><00:09:17.519><c> by</c><00:09:17.760><c> one</c><00:09:18.560><c> and</c><00:09:19.120><c> now</c><00:09:19.360><c> if</c>

00:09:19.509 --> 00:09:19.519 align:start position:0%
it's going to be four by one and now if
 

00:09:19.519 --> 00:09:21.590 align:start position:0%
it's going to be four by one and now if
we<00:09:19.680><c> try</c><00:09:19.920><c> to</c><00:09:20.080><c> shift</c><00:09:20.399><c> our</c><00:09:20.560><c> left</c><00:09:20.880><c> pointer</c>

00:09:21.590 --> 00:09:21.600 align:start position:0%
we try to shift our left pointer
 

00:09:21.600 --> 00:09:23.829 align:start position:0%
we try to shift our left pointer
we<00:09:21.839><c> get</c><00:09:22.080><c> to</c><00:09:22.160><c> the</c><00:09:22.399><c> terminating</c><00:09:23.279><c> condition</c><00:09:23.760><c> we</c>

00:09:23.829 --> 00:09:23.839 align:start position:0%
we get to the terminating condition we
 

00:09:23.839 --> 00:09:26.230 align:start position:0%
we get to the terminating condition we
get<00:09:24.000><c> to</c><00:09:24.160><c> the</c><00:09:24.240><c> condition</c><00:09:24.800><c> that's</c><00:09:25.120><c> going</c><00:09:25.440><c> to</c>

00:09:26.230 --> 00:09:26.240 align:start position:0%
get to the condition that's going to
 

00:09:26.240 --> 00:09:28.790 align:start position:0%
get to the condition that's going to
end<00:09:26.560><c> our</c><00:09:26.800><c> code</c><00:09:27.600><c> so</c><00:09:27.839><c> now</c><00:09:28.080><c> that</c><00:09:28.240><c> we</c><00:09:28.399><c> shift</c><00:09:28.640><c> our</c>

00:09:28.790 --> 00:09:28.800 align:start position:0%
end our code so now that we shift our
 

00:09:28.800 --> 00:09:29.829 align:start position:0%
end our code so now that we shift our
left<00:09:29.040><c> pointer</c>

00:09:29.829 --> 00:09:29.839 align:start position:0%
left pointer
 

00:09:29.839 --> 00:09:31.829 align:start position:0%
left pointer
here<00:09:30.320><c> we're</c><00:09:30.480><c> going</c><00:09:30.560><c> to</c><00:09:30.640><c> get</c><00:09:30.800><c> our</c><00:09:30.959><c> left</c><00:09:31.200><c> here</c>

00:09:31.829 --> 00:09:31.839 align:start position:0%
here we're going to get our left here
 

00:09:31.839 --> 00:09:33.910 align:start position:0%
here we're going to get our left here
left<00:09:32.080><c> and</c><00:09:32.240><c> right</c><00:09:32.720><c> are</c><00:09:32.880><c> at</c><00:09:33.040><c> the</c><00:09:33.200><c> same</c>

00:09:33.910 --> 00:09:33.920 align:start position:0%
left and right are at the same
 

00:09:33.920 --> 00:09:36.150 align:start position:0%
left and right are at the same
position<00:09:34.800><c> so</c><00:09:34.959><c> let's</c><00:09:35.200><c> get</c><00:09:35.360><c> rid</c><00:09:35.519><c> of</c><00:09:35.680><c> this</c><00:09:35.920><c> let's</c>

00:09:36.150 --> 00:09:36.160 align:start position:0%
position so let's get rid of this let's
 

00:09:36.160 --> 00:09:38.070 align:start position:0%
position so let's get rid of this let's
get<00:09:36.320><c> a</c><00:09:36.480><c> solution</c><00:09:36.880><c> that</c><00:09:37.040><c> can</c><00:09:37.279><c> actually</c><00:09:37.680><c> work</c>

00:09:38.070 --> 00:09:38.080 align:start position:0%
get a solution that can actually work
 

00:09:38.080 --> 00:09:41.509 align:start position:0%
get a solution that can actually work
on<00:09:38.240><c> leak</c><00:09:38.560><c> code</c><00:09:38.959><c> and</c><00:09:39.680><c> maybe</c><00:09:40.480><c> you</c><00:09:40.640><c> might</c><00:09:40.959><c> need</c>

00:09:41.509 --> 00:09:41.519 align:start position:0%
on leak code and maybe you might need
 

00:09:41.519 --> 00:09:43.829 align:start position:0%
on leak code and maybe you might need
this<00:09:41.760><c> solution</c><00:09:42.480><c> in</c><00:09:42.640><c> your</c><00:09:42.880><c> interview</c><00:09:43.440><c> if</c><00:09:43.760><c> the</c>

00:09:43.829 --> 00:09:43.839 align:start position:0%
this solution in your interview if the
 

00:09:43.839 --> 00:09:45.750 align:start position:0%
this solution in your interview if the
brute<00:09:44.160><c> force</c><00:09:44.480><c> is</c><00:09:44.560><c> not</c><00:09:44.720><c> good</c><00:09:44.959><c> enough</c>

00:09:45.750 --> 00:09:45.760 align:start position:0%
brute force is not good enough
 

00:09:45.760 --> 00:09:47.350 align:start position:0%
brute force is not good enough
so<00:09:45.920><c> once</c><00:09:46.240><c> again</c><00:09:46.640><c> i'm</c><00:09:46.800><c> going</c><00:09:46.959><c> to</c><00:09:47.040><c> set</c><00:09:47.200><c> our</c>

00:09:47.350 --> 00:09:47.360 align:start position:0%
so once again i'm going to set our
 

00:09:47.360 --> 00:09:49.590 align:start position:0%
so once again i'm going to set our
result<00:09:47.920><c> equal</c><00:09:48.160><c> to</c><00:09:48.399><c> zero</c>

00:09:49.590 --> 00:09:49.600 align:start position:0%
result equal to zero
 

00:09:49.600 --> 00:09:51.670 align:start position:0%
result equal to zero
i'm<00:09:49.920><c> going</c><00:09:50.160><c> to</c><00:09:50.480><c> do</c><00:09:50.720><c> what</c><00:09:50.959><c> i</c><00:09:51.040><c> did</c><00:09:51.360><c> in</c><00:09:51.519><c> the</c>

00:09:51.670 --> 00:09:51.680 align:start position:0%
i'm going to do what i did in the
 

00:09:51.680 --> 00:09:53.430 align:start position:0%
i'm going to do what i did in the
explanation<00:09:52.240><c> our</c><00:09:52.480><c> left</c><00:09:52.800><c> pointer</c><00:09:53.120><c> is</c><00:09:53.279><c> going</c><00:09:53.360><c> to</c>

00:09:53.430 --> 00:09:53.440 align:start position:0%
explanation our left pointer is going to
 

00:09:53.440 --> 00:09:54.389 align:start position:0%
explanation our left pointer is going to
be<00:09:53.600><c> initialized</c>

00:09:54.389 --> 00:09:54.399 align:start position:0%
be initialized
 

00:09:54.399 --> 00:09:57.670 align:start position:0%
be initialized
all<00:09:54.640><c> the</c><00:09:54.800><c> way</c><00:09:55.839><c> to</c><00:09:56.160><c> the</c>

00:09:57.670 --> 00:09:57.680 align:start position:0%
all the way to the
 

00:09:57.680 --> 00:09:59.990 align:start position:0%
all the way to the
left<00:09:57.920><c> which</c><00:09:58.160><c> is</c><00:09:58.320><c> zero</c><00:09:58.720><c> and</c><00:09:58.800><c> our</c><00:09:59.040><c> right</c><00:09:59.279><c> pointer</c>

00:09:59.990 --> 00:10:00.000 align:start position:0%
left which is zero and our right pointer
 

00:10:00.000 --> 00:10:01.509 align:start position:0%
left which is zero and our right pointer
is<00:10:00.160><c> going</c><00:10:00.240><c> to</c><00:10:00.320><c> be</c><00:10:00.399><c> initialized</c><00:10:01.120><c> all</c><00:10:01.200><c> the</c><00:10:01.360><c> way</c>

00:10:01.509 --> 00:10:01.519 align:start position:0%
is going to be initialized all the way
 

00:10:01.519 --> 00:10:02.870 align:start position:0%
is going to be initialized all the way
to<00:10:01.680><c> the</c><00:10:01.839><c> right</c>

00:10:02.870 --> 00:10:02.880 align:start position:0%
to the right
 

00:10:02.880 --> 00:10:06.310 align:start position:0%
to the right
so<00:10:03.120><c> these</c><00:10:03.360><c> values</c><00:10:03.760><c> are</c><00:10:04.000><c> zero</c><00:10:04.720><c> and</c><00:10:05.760><c> length</c>

00:10:06.310 --> 00:10:06.320 align:start position:0%
so these values are zero and length
 

00:10:06.320 --> 00:10:09.990 align:start position:0%
so these values are zero and length
of<00:10:06.720><c> heights</c><00:10:08.320><c> minus</c><00:10:08.720><c> one</c>

00:10:09.990 --> 00:10:10.000 align:start position:0%
of heights minus one
 

00:10:10.000 --> 00:10:12.470 align:start position:0%
of heights minus one
and<00:10:10.240><c> remember</c><00:10:10.640><c> our</c><00:10:10.880><c> condition</c><00:10:11.680><c> for</c><00:10:11.839><c> the</c><00:10:12.079><c> loop</c>

00:10:12.470 --> 00:10:12.480 align:start position:0%
and remember our condition for the loop
 

00:10:12.480 --> 00:10:14.310 align:start position:0%
and remember our condition for the loop
is<00:10:12.880><c> while</c>

00:10:14.310 --> 00:10:14.320 align:start position:0%
is while
 

00:10:14.320 --> 00:10:17.030 align:start position:0%
is while
left<00:10:15.040><c> is</c><00:10:15.440><c> less</c><00:10:15.839><c> than</c><00:10:16.240><c> right</c><00:10:16.640><c> because</c><00:10:16.959><c> if</c>

00:10:17.030 --> 00:10:17.040 align:start position:0%
left is less than right because if
 

00:10:17.040 --> 00:10:18.470 align:start position:0%
left is less than right because if
they're<00:10:17.360><c> equal</c><00:10:17.839><c> that's</c><00:10:18.160><c> no</c>

00:10:18.470 --> 00:10:18.480 align:start position:0%
they're equal that's no
 

00:10:18.480 --> 00:10:21.350 align:start position:0%
they're equal that's no
good<00:10:19.040><c> and</c><00:10:19.279><c> if</c><00:10:19.360><c> they</c><00:10:19.839><c> if</c><00:10:20.079><c> left</c><00:10:20.560><c> passes</c><00:10:21.040><c> right</c>

00:10:21.350 --> 00:10:21.360 align:start position:0%
good and if they if left passes right
 

00:10:21.360 --> 00:10:22.870 align:start position:0%
good and if they if left passes right
that's<00:10:21.600><c> no</c><00:10:21.760><c> good</c><00:10:22.000><c> either</c>

00:10:22.870 --> 00:10:22.880 align:start position:0%
that's no good either
 

00:10:22.880 --> 00:10:25.670 align:start position:0%
that's no good either
so<00:10:23.120><c> let's</c><00:10:23.440><c> compute</c><00:10:23.839><c> the</c><00:10:24.079><c> area</c><00:10:24.560><c> again</c><00:10:25.200><c> i'm</c><00:10:25.519><c> just</c>

00:10:25.670 --> 00:10:25.680 align:start position:0%
so let's compute the area again i'm just
 

00:10:25.680 --> 00:10:27.670 align:start position:0%
so let's compute the area again i'm just
going<00:10:25.839><c> to</c><00:10:25.920><c> copy</c><00:10:26.320><c> and</c><00:10:26.399><c> paste</c><00:10:26.800><c> it</c><00:10:26.959><c> from</c><00:10:27.120><c> my</c><00:10:27.279><c> above</c>

00:10:27.670 --> 00:10:27.680 align:start position:0%
going to copy and paste it from my above
 

00:10:27.680 --> 00:10:29.190 align:start position:0%
going to copy and paste it from my above
solution<00:10:28.240><c> because</c>

00:10:29.190 --> 00:10:29.200 align:start position:0%
solution because
 

00:10:29.200 --> 00:10:30.790 align:start position:0%
solution because
that's<00:10:29.440><c> what</c><00:10:29.519><c> the</c><00:10:29.680><c> brute</c><00:10:29.920><c> force</c><00:10:30.160><c> solution</c><00:10:30.640><c> is</c>

00:10:30.790 --> 00:10:30.800 align:start position:0%
that's what the brute force solution is
 

00:10:30.800 --> 00:10:32.870 align:start position:0%
that's what the brute force solution is
for<00:10:31.120><c> right</c><00:10:31.600><c> you</c><00:10:31.760><c> can</c><00:10:32.079><c> learn</c>

00:10:32.870 --> 00:10:32.880 align:start position:0%
for right you can learn
 

00:10:32.880 --> 00:10:35.269 align:start position:0%
for right you can learn
the<00:10:33.040><c> basic</c><00:10:33.440><c> problem</c><00:10:34.320><c> the</c><00:10:34.399><c> basic</c><00:10:34.720><c> parts</c><00:10:35.040><c> of</c><00:10:35.120><c> the</c>

00:10:35.269 --> 00:10:35.279 align:start position:0%
the basic problem the basic parts of the
 

00:10:35.279 --> 00:10:36.790 align:start position:0%
the basic problem the basic parts of the
problem<00:10:35.600><c> before</c><00:10:36.000><c> doing</c>

00:10:36.790 --> 00:10:36.800 align:start position:0%
problem before doing
 

00:10:36.800 --> 00:10:39.829 align:start position:0%
problem before doing
the<00:10:37.120><c> clever</c><00:10:37.519><c> stuff</c><00:10:38.399><c> i</c><00:10:38.560><c> can</c><00:10:38.720><c> also</c><00:10:39.040><c> just</c><00:10:39.440><c> copy</c>

00:10:39.829 --> 00:10:39.839 align:start position:0%
the clever stuff i can also just copy
 

00:10:39.839 --> 00:10:41.269 align:start position:0%
the clever stuff i can also just copy
and<00:10:39.920><c> paste</c><00:10:40.240><c> the</c><00:10:40.320><c> part</c><00:10:40.480><c> where</c><00:10:40.720><c> we</c><00:10:40.800><c> update</c><00:10:41.120><c> our</c>

00:10:41.269 --> 00:10:41.279 align:start position:0%
and paste the part where we update our
 

00:10:41.279 --> 00:10:42.870 align:start position:0%
and paste the part where we update our
result<00:10:41.760><c> as</c><00:10:41.920><c> well</c>

00:10:42.870 --> 00:10:42.880 align:start position:0%
result as well
 

00:10:42.880 --> 00:10:45.110 align:start position:0%
result as well
now<00:10:43.120><c> the</c><00:10:43.279><c> part</c><00:10:43.519><c> that</c><00:10:43.839><c> we</c><00:10:44.079><c> have</c><00:10:44.320><c> to</c><00:10:44.640><c> change</c>

00:10:45.110 --> 00:10:45.120 align:start position:0%
now the part that we have to change
 

00:10:45.120 --> 00:10:46.310 align:start position:0%
now the part that we have to change
though<00:10:45.600><c> is</c>

00:10:46.310 --> 00:10:46.320 align:start position:0%
though is
 

00:10:46.320 --> 00:10:48.069 align:start position:0%
though is
when<00:10:46.640><c> we're</c><00:10:46.880><c> updating</c><00:10:47.279><c> our</c><00:10:47.440><c> left</c><00:10:47.680><c> and</c><00:10:47.760><c> right</c>

00:10:48.069 --> 00:10:48.079 align:start position:0%
when we're updating our left and right
 

00:10:48.079 --> 00:10:50.150 align:start position:0%
when we're updating our left and right
pointers<00:10:48.640><c> we're</c><00:10:48.880><c> doing</c><00:10:49.200><c> it</c>

00:10:50.150 --> 00:10:50.160 align:start position:0%
pointers we're doing it
 

00:10:50.160 --> 00:10:53.350 align:start position:0%
pointers we're doing it
based<00:10:50.480><c> on</c><00:10:50.560><c> a</c><00:10:50.640><c> certain</c><00:10:50.959><c> condition</c><00:10:51.920><c> if</c>

00:10:53.350 --> 00:10:53.360 align:start position:0%
based on a certain condition if
 

00:10:53.360 --> 00:10:56.870 align:start position:0%
based on a certain condition if
the<00:10:53.680><c> height</c><00:10:54.480><c> at</c><00:10:54.720><c> position</c><00:10:55.279><c> left</c><00:10:55.920><c> is</c><00:10:56.240><c> less</c><00:10:56.560><c> than</c>

00:10:56.870 --> 00:10:56.880 align:start position:0%
the height at position left is less than
 

00:10:56.880 --> 00:10:58.310 align:start position:0%
the height at position left is less than
the<00:10:57.040><c> height</c><00:10:57.440><c> at</c><00:10:57.680><c> position</c>

00:10:58.310 --> 00:10:58.320 align:start position:0%
the height at position
 

00:10:58.320 --> 00:11:01.509 align:start position:0%
the height at position
right<00:10:59.760><c> we're</c><00:11:00.000><c> going</c><00:11:00.160><c> to</c><00:11:00.399><c> shift</c><00:11:00.880><c> our</c><00:11:01.200><c> left</c>

00:11:01.509 --> 00:11:01.519 align:start position:0%
right we're going to shift our left
 

00:11:01.519 --> 00:11:02.870 align:start position:0%
right we're going to shift our left
pointer<00:11:02.000><c> to</c><00:11:02.160><c> the</c><00:11:02.399><c> right</c>

00:11:02.870 --> 00:11:02.880 align:start position:0%
pointer to the right
 

00:11:02.880 --> 00:11:04.150 align:start position:0%
pointer to the right
we're<00:11:03.040><c> going</c><00:11:03.120><c> to</c><00:11:03.279><c> increment</c><00:11:03.760><c> our</c><00:11:03.920><c> left</c>

00:11:04.150 --> 00:11:04.160 align:start position:0%
we're going to increment our left
 

00:11:04.160 --> 00:11:07.430 align:start position:0%
we're going to increment our left
pointer<00:11:05.680><c> because</c><00:11:06.000><c> we</c><00:11:06.240><c> want</c><00:11:06.399><c> to</c><00:11:06.640><c> maximize</c>

00:11:07.430 --> 00:11:07.440 align:start position:0%
pointer because we want to maximize
 

00:11:07.440 --> 00:11:10.230 align:start position:0%
pointer because we want to maximize
both<00:11:07.680><c> of</c><00:11:07.839><c> these</c><00:11:08.079><c> heights</c><00:11:09.440><c> now</c><00:11:09.680><c> the</c><00:11:10.000><c> other</c>

00:11:10.230 --> 00:11:10.240 align:start position:0%
both of these heights now the other
 

00:11:10.240 --> 00:11:10.949 align:start position:0%
both of these heights now the other
condition

00:11:10.949 --> 00:11:10.959 align:start position:0%
condition
 

00:11:10.959 --> 00:11:13.670 align:start position:0%
condition
is<00:11:11.440><c> the</c><00:11:11.680><c> opposite</c><00:11:12.240><c> case</c><00:11:12.640><c> so</c><00:11:12.880><c> if</c><00:11:13.200><c> height</c><00:11:13.519><c> of</c>

00:11:13.670 --> 00:11:13.680 align:start position:0%
is the opposite case so if height of
 

00:11:13.680 --> 00:11:13.990 align:start position:0%
is the opposite case so if height of
left

00:11:13.990 --> 00:11:14.000 align:start position:0%
left
 

00:11:14.000 --> 00:11:20.870 align:start position:0%
left
was<00:11:14.320><c> greater</c><00:11:14.640><c> than</c><00:11:14.880><c> height</c><00:11:15.120><c> of</c><00:11:15.279><c> right</c>

00:11:20.870 --> 00:11:20.880 align:start position:0%
 
 

00:11:20.880 --> 00:11:22.630 align:start position:0%
 
then<00:11:21.279><c> we</c><00:11:21.440><c> would</c><00:11:21.600><c> want</c><00:11:21.839><c> to</c><00:11:21.920><c> shift</c><00:11:22.240><c> our</c><00:11:22.399><c> right</c>

00:11:22.630 --> 00:11:22.640 align:start position:0%
then we would want to shift our right
 

00:11:22.640 --> 00:11:25.509 align:start position:0%
then we would want to shift our right
pointer<00:11:23.120><c> and</c><00:11:23.279><c> we</c><00:11:23.360><c> want</c><00:11:23.519><c> to</c><00:11:23.680><c> decrement</c><00:11:24.240><c> it</c>

00:11:25.509 --> 00:11:25.519 align:start position:0%
pointer and we want to decrement it
 

00:11:25.519 --> 00:11:27.670 align:start position:0%
pointer and we want to decrement it
and<00:11:25.680><c> the</c><00:11:25.839><c> last</c><00:11:26.160><c> case</c><00:11:26.720><c> is</c><00:11:26.880><c> if</c><00:11:26.959><c> they're</c><00:11:27.279><c> equal</c>

00:11:27.670 --> 00:11:27.680 align:start position:0%
and the last case is if they're equal
 

00:11:27.680 --> 00:11:29.509 align:start position:0%
and the last case is if they're equal
right<00:11:28.000><c> that's</c><00:11:28.320><c> our</c><00:11:28.480><c> else</c><00:11:28.800><c> condition</c>

00:11:29.509 --> 00:11:29.519 align:start position:0%
right that's our else condition
 

00:11:29.519 --> 00:11:31.030 align:start position:0%
right that's our else condition
and<00:11:29.680><c> remember</c><00:11:30.000><c> how</c><00:11:30.160><c> i</c><00:11:30.240><c> said</c><00:11:30.480><c> we</c><00:11:30.640><c> could</c><00:11:30.800><c> do</c>

00:11:31.030 --> 00:11:31.040 align:start position:0%
and remember how i said we could do
 

00:11:31.040 --> 00:11:32.949 align:start position:0%
and remember how i said we could do
either<00:11:31.519><c> one</c><00:11:32.000><c> if</c>

00:11:32.949 --> 00:11:32.959 align:start position:0%
either one if
 

00:11:32.959 --> 00:11:35.509 align:start position:0%
either one if
uh<00:11:33.760><c> if</c><00:11:33.920><c> they're</c><00:11:34.079><c> both</c><00:11:34.399><c> equal</c><00:11:34.640><c> right</c><00:11:34.880><c> we</c><00:11:35.040><c> could</c>

00:11:35.509 --> 00:11:35.519 align:start position:0%
uh if they're both equal right we could
 

00:11:35.519 --> 00:11:37.030 align:start position:0%
uh if they're both equal right we could
increment<00:11:35.920><c> our</c><00:11:36.079><c> left</c><00:11:36.240><c> pointer</c><00:11:36.560><c> or</c><00:11:36.800><c> we</c><00:11:36.880><c> could</c>

00:11:37.030 --> 00:11:37.040 align:start position:0%
increment our left pointer or we could
 

00:11:37.040 --> 00:11:39.110 align:start position:0%
increment our left pointer or we could
decrement<00:11:37.600><c> our</c>

00:11:39.110 --> 00:11:39.120 align:start position:0%
decrement our
 

00:11:39.120 --> 00:11:42.630 align:start position:0%
decrement our
right<00:11:39.440><c> pointer</c><00:11:41.279><c> uh</c><00:11:41.600><c> notice</c><00:11:41.920><c> how</c><00:11:42.240><c> both</c><00:11:42.480><c> of</c>

00:11:42.630 --> 00:11:42.640 align:start position:0%
right pointer uh notice how both of
 

00:11:42.640 --> 00:11:44.389 align:start position:0%
right pointer uh notice how both of
these<00:11:42.880><c> are</c><00:11:43.040><c> doing</c><00:11:43.200><c> the</c><00:11:43.360><c> same</c><00:11:43.680><c> thing</c>

00:11:44.389 --> 00:11:44.399 align:start position:0%
these are doing the same thing
 

00:11:44.399 --> 00:11:47.030 align:start position:0%
these are doing the same thing
so<00:11:45.200><c> i'm</c><00:11:45.360><c> just</c><00:11:45.519><c> going</c><00:11:45.680><c> to</c><00:11:45.760><c> condense</c><00:11:46.320><c> this</c><00:11:46.880><c> i'm</c>

00:11:47.030 --> 00:11:47.040 align:start position:0%
so i'm just going to condense this i'm
 

00:11:47.040 --> 00:11:48.069 align:start position:0%
so i'm just going to condense this i'm
just<00:11:47.200><c> going</c><00:11:47.279><c> to</c><00:11:47.360><c> get</c><00:11:47.519><c> rid</c><00:11:47.680><c> of</c>

00:11:48.069 --> 00:11:48.079 align:start position:0%
just going to get rid of
 

00:11:48.079 --> 00:11:51.829 align:start position:0%
just going to get rid of
these<00:11:48.320><c> two</c><00:11:48.560><c> lines</c><00:11:48.800><c> of</c><00:11:48.959><c> code</c>

00:11:51.829 --> 00:11:51.839 align:start position:0%
 
 

00:11:51.839 --> 00:11:54.150 align:start position:0%
 
now<00:11:52.079><c> all</c><00:11:52.320><c> we</c><00:11:52.399><c> need</c><00:11:52.560><c> to</c><00:11:52.720><c> do</c><00:11:53.040><c> is</c><00:11:53.360><c> return</c><00:11:54.000><c> the</c>

00:11:54.150 --> 00:11:54.160 align:start position:0%
now all we need to do is return the
 

00:11:54.160 --> 00:11:56.230 align:start position:0%
now all we need to do is return the
maximum<00:11:54.720><c> that</c><00:11:54.959><c> we</c><00:11:55.200><c> computed</c>

00:11:56.230 --> 00:11:56.240 align:start position:0%
maximum that we computed
 

00:11:56.240 --> 00:11:58.150 align:start position:0%
maximum that we computed
let's<00:11:56.399><c> see</c><00:11:56.560><c> if</c><00:11:56.720><c> it</c><00:11:56.800><c> actually</c><00:11:57.120><c> works</c><00:11:57.360><c> this</c><00:11:57.600><c> time</c>

00:11:58.150 --> 00:11:58.160 align:start position:0%
let's see if it actually works this time
 

00:11:58.160 --> 00:11:59.430 align:start position:0%
let's see if it actually works this time
okay<00:11:58.560><c> of</c><00:11:58.639><c> course</c><00:11:58.959><c> i</c><00:11:59.040><c> had</c>

00:11:59.430 --> 00:11:59.440 align:start position:0%
okay of course i had
 

00:11:59.440 --> 00:12:02.949 align:start position:0%
okay of course i had
a<00:11:59.680><c> typo</c><00:12:01.279><c> so</c><00:12:01.519><c> i</c><00:12:01.760><c> had</c><00:12:02.000><c> a</c><00:12:02.240><c> s</c><00:12:02.480><c> at</c><00:12:02.560><c> the</c><00:12:02.720><c> end</c><00:12:02.880><c> of</c>

00:12:02.949 --> 00:12:02.959 align:start position:0%
a typo so i had a s at the end of
 

00:12:02.959 --> 00:12:03.670 align:start position:0%
a typo so i had a s at the end of
heights

00:12:03.670 --> 00:12:03.680 align:start position:0%
heights
 

00:12:03.680 --> 00:12:05.430 align:start position:0%
heights
let's<00:12:03.920><c> run</c><00:12:04.079><c> it</c><00:12:04.160><c> one</c><00:12:04.320><c> more</c><00:12:04.560><c> time</c><00:12:04.880><c> and</c><00:12:05.120><c> this</c><00:12:05.279><c> time</c>

00:12:05.430 --> 00:12:05.440 align:start position:0%
let's run it one more time and this time
 

00:12:05.440 --> 00:12:06.949 align:start position:0%
let's run it one more time and this time
it'll<00:12:05.680><c> work</c><00:12:06.480><c> so</c>

00:12:06.949 --> 00:12:06.959 align:start position:0%
it'll work so
 

00:12:06.959 --> 00:12:10.949 align:start position:0%
it'll work so
this<00:12:07.200><c> is</c><00:12:07.360><c> the</c><00:12:07.519><c> actual</c><00:12:08.079><c> linear</c><00:12:08.560><c> time</c><00:12:08.880><c> solution</c>

00:12:10.949 --> 00:12:10.959 align:start position:0%
this is the actual linear time solution
 

00:12:10.959 --> 00:12:15.750 align:start position:0%
this is the actual linear time solution
the<00:12:12.240><c> big</c><00:12:12.480><c> o</c><00:12:12.880><c> of</c><00:12:13.279><c> n</c><00:12:13.519><c> solution</c>

00:12:15.750 --> 00:12:15.760 align:start position:0%
the big o of n solution
 

00:12:15.760 --> 00:12:18.389 align:start position:0%
the big o of n solution
as<00:12:16.000><c> always</c><00:12:16.720><c> thank</c><00:12:16.959><c> you</c><00:12:17.040><c> so</c><00:12:17.200><c> much</c><00:12:17.440><c> for</c><00:12:17.600><c> watching</c>

00:12:18.389 --> 00:12:18.399 align:start position:0%
as always thank you so much for watching
 

00:12:18.399 --> 00:12:20.389 align:start position:0%
as always thank you so much for watching
like<00:12:18.639><c> and</c><00:12:18.720><c> subscribe</c><00:12:19.279><c> if</c><00:12:19.360><c> this</c><00:12:19.600><c> was</c><00:12:19.760><c> helpful</c>

00:12:20.389 --> 00:12:20.399 align:start position:0%
like and subscribe if this was helpful
 

00:12:20.399 --> 00:12:35.910 align:start position:0%
like and subscribe if this was helpful
and<00:12:20.720><c> i'll</c><00:12:20.959><c> see</c><00:12:21.120><c> you</c><00:12:21.279><c> pretty</c><00:12:22.839><c> soon</c>

00:12:35.910 --> 00:12:35.920 align:start position:0%
 
 

00:12:35.920 --> 00:12:38.000 align:start position:0%
 
you

