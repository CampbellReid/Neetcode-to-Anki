WEBVTT
Kind: captions
Language: en

00:00:00.160 --> 00:00:01.589 align:start position:0%
 
everyone<00:00:00.560><c> welcome</c><00:00:00.880><c> back</c><00:00:01.120><c> and</c><00:00:01.199><c> let's</c><00:00:01.439><c> write</c>

00:00:01.589 --> 00:00:01.599 align:start position:0%
everyone welcome back and let's write
 

00:00:01.599 --> 00:00:03.830 align:start position:0%
everyone welcome back and let's write
some<00:00:01.760><c> more</c><00:00:02.000><c> neat</c><00:00:02.240><c> code</c><00:00:02.480><c> today</c><00:00:02.879><c> so</c><00:00:03.120><c> today</c><00:00:03.520><c> let's</c>

00:00:03.830 --> 00:00:03.840 align:start position:0%
some more neat code today so today let's
 

00:00:03.840 --> 00:00:06.710 align:start position:0%
some more neat code today so today let's
solve<00:00:04.240><c> a</c><00:00:04.560><c> pretty</c><00:00:05.040><c> easy</c><00:00:05.440><c> and</c><00:00:05.600><c> popular</c><00:00:06.160><c> question</c>

00:00:06.710 --> 00:00:06.720 align:start position:0%
solve a pretty easy and popular question
 

00:00:06.720 --> 00:00:09.350 align:start position:0%
solve a pretty easy and popular question
invert<00:00:07.440><c> binary</c><00:00:08.000><c> search</c><00:00:08.400><c> tree</c><00:00:08.800><c> so</c><00:00:09.040><c> all</c><00:00:09.200><c> they</c>

00:00:09.350 --> 00:00:09.360 align:start position:0%
invert binary search tree so all they
 

00:00:09.360 --> 00:00:10.150 align:start position:0%
invert binary search tree so all they
tell<00:00:09.519><c> us</c><00:00:09.679><c> to</c><00:00:09.840><c> do</c>

00:00:10.150 --> 00:00:10.160 align:start position:0%
tell us to do
 

00:00:10.160 --> 00:00:12.950 align:start position:0%
tell us to do
is<00:00:10.480><c> invert</c><00:00:11.040><c> a</c><00:00:11.200><c> binary</c><00:00:11.759><c> tree</c><00:00:12.080><c> and</c><00:00:12.320><c> what</c><00:00:12.559><c> exactly</c>

00:00:12.950 --> 00:00:12.960 align:start position:0%
is invert a binary tree and what exactly
 

00:00:12.960 --> 00:00:13.990 align:start position:0%
is invert a binary tree and what exactly
does<00:00:13.200><c> that</c><00:00:13.519><c> mean</c>

00:00:13.990 --> 00:00:14.000 align:start position:0%
does that mean
 

00:00:14.000 --> 00:00:17.109 align:start position:0%
does that mean
so<00:00:14.320><c> let's</c><00:00:14.559><c> say</c><00:00:14.719><c> that</c><00:00:15.200><c> this</c><00:00:15.759><c> is</c><00:00:16.080><c> our</c><00:00:16.560><c> initial</c>

00:00:17.109 --> 00:00:17.119 align:start position:0%
so let's say that this is our initial
 

00:00:17.119 --> 00:00:17.910 align:start position:0%
so let's say that this is our initial
tree

00:00:17.910 --> 00:00:17.920 align:start position:0%
tree
 

00:00:17.920 --> 00:00:21.189 align:start position:0%
tree
to<00:00:18.240><c> invert</c><00:00:18.800><c> it</c><00:00:19.199><c> is</c><00:00:19.600><c> basically</c><00:00:20.480><c> what</c><00:00:20.720><c> you</c><00:00:20.880><c> can</c>

00:00:21.189 --> 00:00:21.199 align:start position:0%
to invert it is basically what you can
 

00:00:21.199 --> 00:00:21.590 align:start position:0%
to invert it is basically what you can
tell

00:00:21.590 --> 00:00:21.600 align:start position:0%
tell
 

00:00:21.600 --> 00:00:23.670 align:start position:0%
tell
in<00:00:21.760><c> the</c><00:00:22.000><c> output</c><00:00:22.400><c> right</c><00:00:22.640><c> so</c><00:00:22.880><c> the</c><00:00:23.119><c> root</c><00:00:23.359><c> stayed</c>

00:00:23.670 --> 00:00:23.680 align:start position:0%
in the output right so the root stayed
 

00:00:23.680 --> 00:00:25.509 align:start position:0%
in the output right so the root stayed
the<00:00:23.920><c> same</c><00:00:24.160><c> but</c><00:00:24.320><c> you</c><00:00:24.400><c> can</c><00:00:24.560><c> see</c><00:00:24.800><c> it's</c><00:00:25.119><c> two</c>

00:00:25.509 --> 00:00:25.519 align:start position:0%
the same but you can see it's two
 

00:00:25.519 --> 00:00:28.870 align:start position:0%
the same but you can see it's two
children<00:00:26.480><c> which</c><00:00:26.720><c> were</c><00:00:27.519><c> left</c><00:00:27.840><c> child</c><00:00:28.240><c> two</c><00:00:28.560><c> left</c>

00:00:28.870 --> 00:00:28.880 align:start position:0%
children which were left child two left
 

00:00:28.880 --> 00:00:30.230 align:start position:0%
children which were left child two left
or<00:00:29.039><c> right</c><00:00:29.279><c> child</c><00:00:29.679><c> seven</c>

00:00:30.230 --> 00:00:30.240 align:start position:0%
or right child seven
 

00:00:30.240 --> 00:00:33.110 align:start position:0%
or right child seven
were<00:00:30.640><c> swapped</c><00:00:31.199><c> right</c><00:00:31.519><c> so</c><00:00:31.920><c> seven</c><00:00:32.320><c> is</c><00:00:32.480><c> now</c><00:00:32.880><c> on</c>

00:00:33.110 --> 00:00:33.120 align:start position:0%
were swapped right so seven is now on
 

00:00:33.120 --> 00:00:34.150 align:start position:0%
were swapped right so seven is now on
the<00:00:33.440><c> other</c><00:00:33.760><c> side</c>

00:00:34.150 --> 00:00:34.160 align:start position:0%
the other side
 

00:00:34.160 --> 00:00:36.310 align:start position:0%
the other side
two<00:00:34.480><c> has</c><00:00:34.640><c> been</c><00:00:34.880><c> moved</c><00:00:35.200><c> right</c><00:00:35.440><c> so</c><00:00:35.600><c> basically</c><00:00:36.079><c> we</c>

00:00:36.310 --> 00:00:36.320 align:start position:0%
two has been moved right so basically we
 

00:00:36.320 --> 00:00:37.190 align:start position:0%
two has been moved right so basically we
took<00:00:36.559><c> these</c>

00:00:37.190 --> 00:00:37.200 align:start position:0%
took these
 

00:00:37.200 --> 00:00:39.750 align:start position:0%
took these
and<00:00:37.360><c> then</c><00:00:37.600><c> we</c><00:00:37.840><c> swapped</c><00:00:38.399><c> them</c><00:00:39.040><c> and</c><00:00:39.360><c> when</c><00:00:39.520><c> they</c>

00:00:39.750 --> 00:00:39.760 align:start position:0%
and then we swapped them and when they
 

00:00:39.760 --> 00:00:41.510 align:start position:0%
and then we swapped them and when they
say<00:00:40.000><c> invert</c><00:00:40.399><c> the</c><00:00:40.480><c> binary</c><00:00:40.879><c> tree</c><00:00:41.120><c> it's</c><00:00:41.360><c> a</c>

00:00:41.510 --> 00:00:41.520 align:start position:0%
say invert the binary tree it's a
 

00:00:41.520 --> 00:00:43.750 align:start position:0%
say invert the binary tree it's a
recursive<00:00:42.160><c> definition</c><00:00:42.719><c> so</c><00:00:42.960><c> take</c><00:00:43.200><c> a</c><00:00:43.280><c> look</c><00:00:43.520><c> at</c>

00:00:43.750 --> 00:00:43.760 align:start position:0%
recursive definition so take a look at
 

00:00:43.760 --> 00:00:44.150 align:start position:0%
recursive definition so take a look at
this

00:00:44.150 --> 00:00:44.160 align:start position:0%
this
 

00:00:44.160 --> 00:00:46.709 align:start position:0%
this
subtree<00:00:44.719><c> right</c><00:00:45.120><c> you</c><00:00:45.200><c> can</c><00:00:45.360><c> see</c><00:00:45.680><c> since</c><00:00:46.000><c> we</c><00:00:46.399><c> moved</c>

00:00:46.709 --> 00:00:46.719 align:start position:0%
subtree right you can see since we moved
 

00:00:46.719 --> 00:00:49.350 align:start position:0%
subtree right you can see since we moved
it<00:00:47.039><c> to</c><00:00:47.280><c> this</c><00:00:47.520><c> side</c><00:00:47.840><c> that's</c><00:00:48.160><c> where</c><00:00:48.399><c> it</c><00:00:48.640><c> is</c>

00:00:49.350 --> 00:00:49.360 align:start position:0%
it to this side that's where it is
 

00:00:49.360 --> 00:00:52.229 align:start position:0%
it to this side that's where it is
right<00:00:49.920><c> but</c><00:00:50.399><c> notice</c><00:00:50.800><c> how</c><00:00:51.039><c> even</c><00:00:51.440><c> these</c><00:00:51.920><c> sub</c>

00:00:52.229 --> 00:00:52.239 align:start position:0%
right but notice how even these sub
 

00:00:52.239 --> 00:00:52.790 align:start position:0%
right but notice how even these sub
trees

00:00:52.790 --> 00:00:52.800 align:start position:0%
trees
 

00:00:52.800 --> 00:00:55.270 align:start position:0%
trees
are<00:00:53.120><c> are</c><00:00:53.360><c> different</c><00:00:53.760><c> now</c><00:00:54.000><c> right</c><00:00:54.800><c> one</c><00:00:55.039><c> was</c>

00:00:55.270 --> 00:00:55.280 align:start position:0%
are are different now right one was
 

00:00:55.280 --> 00:00:57.029 align:start position:0%
are are different now right one was
initially<00:00:55.760><c> on</c><00:00:55.840><c> the</c><00:00:56.079><c> left</c><00:00:56.320><c> and</c><00:00:56.559><c> three</c><00:00:56.800><c> was</c>

00:00:57.029 --> 00:00:57.039 align:start position:0%
initially on the left and three was
 

00:00:57.039 --> 00:00:58.310 align:start position:0%
initially on the left and three was
initially<00:00:57.440><c> on</c><00:00:57.600><c> the</c><00:00:57.680><c> right</c>

00:00:58.310 --> 00:00:58.320 align:start position:0%
initially on the right
 

00:00:58.320 --> 00:01:01.430 align:start position:0%
initially on the right
but<00:00:58.719><c> now</c><00:00:59.120><c> three</c><00:00:59.520><c> is</c><00:00:59.680><c> on</c><00:00:59.760><c> the</c><00:01:00.000><c> left</c><00:01:00.399><c> and</c><00:01:00.800><c> one</c><00:01:01.199><c> is</c>

00:01:01.430 --> 00:01:01.440 align:start position:0%
but now three is on the left and one is
 

00:01:01.440 --> 00:01:02.389 align:start position:0%
but now three is on the left and one is
on<00:01:01.600><c> the</c><00:01:01.840><c> right</c>

00:01:02.389 --> 00:01:02.399 align:start position:0%
on the right
 

00:01:02.399 --> 00:01:04.390 align:start position:0%
on the right
the<00:01:02.640><c> exact</c><00:01:02.960><c> same</c><00:01:03.280><c> thing</c><00:01:03.520><c> happened</c><00:01:03.840><c> with</c><00:01:04.080><c> this</c>

00:01:04.390 --> 00:01:04.400 align:start position:0%
the exact same thing happened with this
 

00:01:04.400 --> 00:01:05.750 align:start position:0%
the exact same thing happened with this
tree<00:01:04.640><c> right</c><00:01:04.799><c> it</c><00:01:04.879><c> was</c><00:01:05.199><c> moved</c>

00:01:05.750 --> 00:01:05.760 align:start position:0%
tree right it was moved
 

00:01:05.760 --> 00:01:08.789 align:start position:0%
tree right it was moved
over<00:01:06.159><c> here</c><00:01:06.640><c> to</c><00:01:06.799><c> the</c><00:01:07.119><c> left</c><00:01:07.520><c> side</c><00:01:08.159><c> but</c><00:01:08.400><c> then</c>

00:01:08.789 --> 00:01:08.799 align:start position:0%
over here to the left side but then
 

00:01:08.799 --> 00:01:11.750 align:start position:0%
over here to the left side but then
its<00:01:09.200><c> children</c><00:01:09.680><c> were</c><00:01:10.000><c> also</c><00:01:10.640><c> swapped</c><00:01:11.200><c> right</c><00:01:11.360><c> so</c>

00:01:11.750 --> 00:01:11.760 align:start position:0%
its children were also swapped right so
 

00:01:11.760 --> 00:01:12.310 align:start position:0%
its children were also swapped right so
nine

00:01:12.310 --> 00:01:12.320 align:start position:0%
nine
 

00:01:12.320 --> 00:01:14.710 align:start position:0%
nine
was<00:01:12.720><c> moved</c><00:01:13.040><c> to</c><00:01:13.200><c> the</c><00:01:13.360><c> left</c><00:01:13.680><c> six</c><00:01:13.920><c> to</c><00:01:14.080><c> the</c><00:01:14.240><c> right</c>

00:01:14.710 --> 00:01:14.720 align:start position:0%
was moved to the left six to the right
 

00:01:14.720 --> 00:01:15.749 align:start position:0%
was moved to the left six to the right
so<00:01:14.960><c> when</c><00:01:15.119><c> they</c><00:01:15.360><c> say</c>

00:01:15.749 --> 00:01:15.759 align:start position:0%
so when they say
 

00:01:15.759 --> 00:01:18.390 align:start position:0%
so when they say
invert<00:01:16.479><c> the</c><00:01:16.640><c> binary</c><00:01:17.119><c> tree</c><00:01:17.439><c> what</c><00:01:17.600><c> we're</c><00:01:17.920><c> saying</c>

00:01:18.390 --> 00:01:18.400 align:start position:0%
invert the binary tree what we're saying
 

00:01:18.400 --> 00:01:19.109 align:start position:0%
invert the binary tree what we're saying
is

00:01:19.109 --> 00:01:19.119 align:start position:0%
is
 

00:01:19.119 --> 00:01:22.789 align:start position:0%
is
visit<00:01:19.759><c> every</c><00:01:20.560><c> single</c><00:01:21.439><c> node</c><00:01:22.080><c> in</c><00:01:22.240><c> the</c><00:01:22.400><c> tree</c>

00:01:22.789 --> 00:01:22.799 align:start position:0%
visit every single node in the tree
 

00:01:22.799 --> 00:01:23.429 align:start position:0%
visit every single node in the tree
right

00:01:23.429 --> 00:01:23.439 align:start position:0%
right
 

00:01:23.439 --> 00:01:26.710 align:start position:0%
right
and<00:01:23.759><c> every</c><00:01:24.240><c> time</c><00:01:24.560><c> we</c><00:01:24.799><c> visit</c><00:01:25.280><c> a</c><00:01:25.520><c> node</c><00:01:26.240><c> take</c><00:01:26.479><c> a</c>

00:01:26.710 --> 00:01:26.720 align:start position:0%
and every time we visit a node take a
 

00:01:26.720 --> 00:01:27.670 align:start position:0%
and every time we visit a node take a
look<00:01:26.960><c> at</c><00:01:27.200><c> its</c>

00:01:27.670 --> 00:01:27.680 align:start position:0%
look at its
 

00:01:27.680 --> 00:01:31.590 align:start position:0%
look at its
two<00:01:28.159><c> children</c><00:01:29.200><c> and</c><00:01:29.680><c> swap</c><00:01:30.479><c> the</c><00:01:30.799><c> positions</c>

00:01:31.590 --> 00:01:31.600 align:start position:0%
two children and swap the positions
 

00:01:31.600 --> 00:01:34.310 align:start position:0%
two children and swap the positions
of<00:01:31.840><c> the</c><00:01:32.000><c> children</c><00:01:32.479><c> right</c><00:01:33.200><c> so</c><00:01:33.520><c> in</c><00:01:33.759><c> other</c><00:01:34.000><c> words</c>

00:01:34.310 --> 00:01:34.320 align:start position:0%
of the children right so in other words
 

00:01:34.320 --> 00:01:35.429 align:start position:0%
of the children right so in other words
if<00:01:34.479><c> we're</c><00:01:34.720><c> given</c><00:01:35.119><c> a</c>

00:01:35.429 --> 00:01:35.439 align:start position:0%
if we're given a
 

00:01:35.439 --> 00:01:38.469 align:start position:0%
if we're given a
tree<00:01:36.240><c> look</c><00:01:36.479><c> at</c><00:01:36.560><c> the</c><00:01:36.799><c> root</c><00:01:37.119><c> node</c><00:01:37.520><c> and</c><00:01:37.840><c> take</c><00:01:38.159><c> its</c>

00:01:38.469 --> 00:01:38.479 align:start position:0%
tree look at the root node and take its
 

00:01:38.479 --> 00:01:41.350 align:start position:0%
tree look at the root node and take its
children<00:01:39.040><c> and</c><00:01:39.119><c> then</c><00:01:39.439><c> swap</c><00:01:39.920><c> the</c><00:01:40.079><c> positions</c><00:01:41.119><c> and</c>

00:01:41.350 --> 00:01:41.360 align:start position:0%
children and then swap the positions and
 

00:01:41.360 --> 00:01:41.990 align:start position:0%
children and then swap the positions and
then

00:01:41.990 --> 00:01:42.000 align:start position:0%
then
 

00:01:42.000 --> 00:01:45.109 align:start position:0%
then
recursively<00:01:43.280><c> run</c><00:01:43.759><c> inver</c><00:01:44.399><c> binaries</c>

00:01:45.109 --> 00:01:45.119 align:start position:0%
recursively run inver binaries
 

00:01:45.119 --> 00:01:48.149 align:start position:0%
recursively run inver binaries
or<00:01:45.439><c> invert</c><00:01:45.840><c> tree</c><00:01:46.240><c> on</c><00:01:46.399><c> the</c><00:01:46.640><c> left</c><00:01:46.960><c> subtree</c><00:01:47.600><c> and</c>

00:01:48.149 --> 00:01:48.159 align:start position:0%
or invert tree on the left subtree and
 

00:01:48.159 --> 00:01:50.789 align:start position:0%
or invert tree on the left subtree and
run<00:01:48.560><c> invert</c><00:01:49.119><c> on</c><00:01:49.360><c> the</c><00:01:49.520><c> right</c><00:01:49.840><c> subtree</c><00:01:50.479><c> so</c><00:01:50.640><c> it's</c>

00:01:50.789 --> 00:01:50.799 align:start position:0%
run invert on the right subtree so it's
 

00:01:50.799 --> 00:01:52.550 align:start position:0%
run invert on the right subtree so it's
a<00:01:50.960><c> recursive</c><00:01:51.600><c> definition</c>

00:01:52.550 --> 00:01:52.560 align:start position:0%
a recursive definition
 

00:01:52.560 --> 00:01:54.550 align:start position:0%
a recursive definition
so<00:01:52.799><c> we</c><00:01:52.960><c> can</c><00:01:53.200><c> solve</c><00:01:53.520><c> this</c><00:01:53.680><c> problem</c><00:01:54.320><c> with</c>

00:01:54.550 --> 00:01:54.560 align:start position:0%
so we can solve this problem with
 

00:01:54.560 --> 00:01:56.230 align:start position:0%
so we can solve this problem with
recursion<00:01:55.200><c> we</c><00:01:55.360><c> can</c><00:01:55.600><c> do</c>

00:01:56.230 --> 00:01:56.240 align:start position:0%
recursion we can do
 

00:01:56.240 --> 00:01:57.830 align:start position:0%
recursion we can do
a<00:01:56.479><c> depth</c><00:01:56.719><c> first</c><00:01:56.960><c> search</c><00:01:57.360><c> whether</c><00:01:57.680><c> it's</c>

00:01:57.830 --> 00:01:57.840 align:start position:0%
a depth first search whether it's
 

00:01:57.840 --> 00:01:59.270 align:start position:0%
a depth first search whether it's
pre-order<00:01:58.560><c> or</c><00:01:58.880><c> post</c>

00:01:59.270 --> 00:01:59.280 align:start position:0%
pre-order or post
 

00:01:59.280 --> 00:02:01.350 align:start position:0%
pre-order or post
order<00:01:59.600><c> it</c><00:01:59.680><c> doesn't</c><00:01:59.920><c> actually</c><00:02:00.320><c> matter</c><00:02:00.880><c> a</c><00:02:01.119><c> depth</c>

00:02:01.350 --> 00:02:01.360 align:start position:0%
order it doesn't actually matter a depth
 

00:02:01.360 --> 00:02:02.469 align:start position:0%
order it doesn't actually matter a depth
first<00:02:01.520><c> search</c><00:02:01.920><c> will</c>

00:02:02.469 --> 00:02:02.479 align:start position:0%
first search will
 

00:02:02.479 --> 00:02:03.990 align:start position:0%
first search will
allow<00:02:02.799><c> us</c><00:02:02.960><c> to</c><00:02:03.119><c> solve</c><00:02:03.360><c> this</c><00:02:03.680><c> problem</c>

00:02:03.990 --> 00:02:04.000 align:start position:0%
allow us to solve this problem
 

00:02:04.000 --> 00:02:06.149 align:start position:0%
allow us to solve this problem
recursively<00:02:05.119><c> so</c><00:02:05.280><c> this</c><00:02:05.520><c> problem</c><00:02:05.920><c> would</c>

00:02:06.149 --> 00:02:06.159 align:start position:0%
recursively so this problem would
 

00:02:06.159 --> 00:02:08.389 align:start position:0%
recursively so this problem would
probably<00:02:06.560><c> be</c><00:02:06.719><c> a</c><00:02:06.880><c> lot</c><00:02:07.280><c> more</c><00:02:07.600><c> annoying</c>

00:02:08.389 --> 00:02:08.399 align:start position:0%
probably be a lot more annoying
 

00:02:08.399 --> 00:02:10.389 align:start position:0%
probably be a lot more annoying
if<00:02:08.640><c> it</c><00:02:08.800><c> were</c><00:02:09.119><c> iterative</c><00:02:09.599><c> but</c><00:02:09.759><c> luckily</c><00:02:10.160><c> we</c><00:02:10.239><c> can</c>

00:02:10.389 --> 00:02:10.399 align:start position:0%
if it were iterative but luckily we can
 

00:02:10.399 --> 00:02:12.150 align:start position:0%
if it were iterative but luckily we can
do<00:02:10.479><c> it</c><00:02:10.560><c> recursively</c><00:02:11.360><c> so</c>

00:02:12.150 --> 00:02:12.160 align:start position:0%
do it recursively so
 

00:02:12.160 --> 00:02:14.470 align:start position:0%
do it recursively so
we<00:02:12.400><c> can</c><00:02:12.720><c> first</c><00:02:13.040><c> check</c><00:02:13.280><c> the</c><00:02:13.440><c> base</c><00:02:13.760><c> case</c><00:02:14.000><c> so</c><00:02:14.239><c> if</c>

00:02:14.470 --> 00:02:14.480 align:start position:0%
we can first check the base case so if
 

00:02:14.480 --> 00:02:15.990 align:start position:0%
we can first check the base case so if
the<00:02:14.800><c> root</c><00:02:15.120><c> is</c><00:02:15.440><c> null</c>

00:02:15.990 --> 00:02:16.000 align:start position:0%
the root is null
 

00:02:16.000 --> 00:02:18.710 align:start position:0%
the root is null
then<00:02:16.400><c> we</c><00:02:16.560><c> can</c><00:02:16.879><c> return</c><00:02:17.680><c> null</c><00:02:18.080><c> we</c><00:02:18.239><c> don't</c><00:02:18.400><c> have</c><00:02:18.480><c> to</c>

00:02:18.710 --> 00:02:18.720 align:start position:0%
then we can return null we don't have to
 

00:02:18.720 --> 00:02:19.670 align:start position:0%
then we can return null we don't have to
continue

00:02:19.670 --> 00:02:19.680 align:start position:0%
continue
 

00:02:19.680 --> 00:02:22.390 align:start position:0%
continue
otherwise<00:02:20.480><c> what</c><00:02:20.640><c> we're</c><00:02:20.800><c> going</c><00:02:20.959><c> to</c><00:02:21.040><c> do</c><00:02:21.360><c> is</c><00:02:21.599><c> swap</c>

00:02:22.390 --> 00:02:22.400 align:start position:0%
otherwise what we're going to do is swap
 

00:02:22.400 --> 00:02:23.350 align:start position:0%
otherwise what we're going to do is swap
the<00:02:22.640><c> children</c>

00:02:23.350 --> 00:02:23.360 align:start position:0%
the children
 

00:02:23.360 --> 00:02:27.150 align:start position:0%
the children
so<00:02:23.599><c> we're</c><00:02:23.760><c> going</c><00:02:23.920><c> to</c><00:02:24.080><c> save</c><00:02:24.800><c> the</c><00:02:26.160><c> left</c><00:02:26.480><c> value</c>

00:02:27.150 --> 00:02:27.160 align:start position:0%
so we're going to save the left value
 

00:02:27.160 --> 00:02:30.390 align:start position:0%
so we're going to save the left value
root.left<00:02:28.319><c> in</c><00:02:28.480><c> a</c><00:02:28.560><c> temporary</c><00:02:29.040><c> variable</c><00:02:30.080><c> then</c>

00:02:30.390 --> 00:02:30.400 align:start position:0%
root.left in a temporary variable then
 

00:02:30.400 --> 00:02:31.110 align:start position:0%
root.left in a temporary variable then
we're<00:02:30.560><c> going</c><00:02:30.720><c> to</c>

00:02:31.110 --> 00:02:31.120 align:start position:0%
we're going to
 

00:02:31.120 --> 00:02:33.630 align:start position:0%
we're going to
replace<00:02:31.760><c> the</c><00:02:31.920><c> root.left</c><00:02:32.640><c> value</c><00:02:33.040><c> with</c>

00:02:33.630 --> 00:02:33.640 align:start position:0%
replace the root.left value with
 

00:02:33.640 --> 00:02:34.869 align:start position:0%
replace the root.left value with
root.right

00:02:34.869 --> 00:02:34.879 align:start position:0%
root.right
 

00:02:34.879 --> 00:02:36.309 align:start position:0%
root.right
and<00:02:35.040><c> then</c><00:02:35.440><c> we're</c><00:02:35.599><c> going</c><00:02:35.680><c> to</c><00:02:35.760><c> replace</c><00:02:36.160><c> the</c>

00:02:36.309 --> 00:02:36.319 align:start position:0%
and then we're going to replace the
 

00:02:36.319 --> 00:02:38.949 align:start position:0%
and then we're going to replace the
root.right<00:02:37.200><c> value</c><00:02:37.680><c> with</c><00:02:37.920><c> the</c><00:02:38.239><c> left</c><00:02:38.560><c> value</c>

00:02:38.949 --> 00:02:38.959 align:start position:0%
root.right value with the left value
 

00:02:38.959 --> 00:02:40.150 align:start position:0%
root.right value with the left value
which<00:02:39.120><c> we</c><00:02:39.280><c> know</c><00:02:39.599><c> is</c><00:02:39.840><c> now</c>

00:02:40.150 --> 00:02:40.160 align:start position:0%
which we know is now
 

00:02:40.160 --> 00:02:42.790 align:start position:0%
which we know is now
stored<00:02:40.560><c> in</c><00:02:40.879><c> temp</c><00:02:41.519><c> so</c><00:02:41.680><c> after</c><00:02:42.000><c> we</c><00:02:42.239><c> swap</c><00:02:42.560><c> the</c>

00:02:42.790 --> 00:02:42.800 align:start position:0%
stored in temp so after we swap the
 

00:02:42.800 --> 00:02:43.270 align:start position:0%
stored in temp so after we swap the
nodes

00:02:43.270 --> 00:02:43.280 align:start position:0%
nodes
 

00:02:43.280 --> 00:02:45.430 align:start position:0%
nodes
all<00:02:43.440><c> we</c><00:02:43.599><c> have</c><00:02:43.760><c> to</c><00:02:43.840><c> do</c><00:02:44.080><c> is</c><00:02:44.239><c> now</c><00:02:44.480><c> recursively</c>

00:02:45.430 --> 00:02:45.440 align:start position:0%
all we have to do is now recursively
 

00:02:45.440 --> 00:02:46.390 align:start position:0%
all we have to do is now recursively
invert<00:02:46.080><c> the</c>

00:02:46.390 --> 00:02:46.400 align:start position:0%
invert the
 

00:02:46.400 --> 00:02:50.150 align:start position:0%
invert the
subtrees<00:02:47.440><c> so</c><00:02:47.840><c> we</c><00:02:48.000><c> can</c><00:02:48.319><c> invert</c><00:02:49.120><c> the</c><00:02:49.840><c> left</c>

00:02:50.150 --> 00:02:50.160 align:start position:0%
subtrees so we can invert the left
 

00:02:50.160 --> 00:02:51.030 align:start position:0%
subtrees so we can invert the left
subtree

00:02:51.030 --> 00:02:51.040 align:start position:0%
subtree
 

00:02:51.040 --> 00:02:54.150 align:start position:0%
subtree
and<00:02:51.360><c> then</c><00:02:51.680><c> we</c><00:02:51.840><c> can</c><00:02:52.080><c> invert</c><00:02:52.640><c> the</c><00:02:52.879><c> right</c><00:02:53.200><c> subtree</c>

00:02:54.150 --> 00:02:54.160 align:start position:0%
and then we can invert the right subtree
 

00:02:54.160 --> 00:02:56.630 align:start position:0%
and then we can invert the right subtree
so<00:02:54.640><c> by</c><00:02:55.040><c> doing</c><00:02:55.360><c> self.invert</c><00:02:56.160><c> tree</c><00:02:56.319><c> what</c><00:02:56.480><c> we're</c>

00:02:56.630 --> 00:02:56.640 align:start position:0%
so by doing self.invert tree what we're
 

00:02:56.640 --> 00:02:58.390 align:start position:0%
so by doing self.invert tree what we're
doing<00:02:56.879><c> is</c><00:02:56.959><c> making</c><00:02:57.280><c> a</c><00:02:57.360><c> recursive</c><00:02:57.920><c> call</c><00:02:58.159><c> to</c><00:02:58.319><c> the</c>

00:02:58.390 --> 00:02:58.400 align:start position:0%
doing is making a recursive call to the
 

00:02:58.400 --> 00:02:59.750 align:start position:0%
doing is making a recursive call to the
function<00:02:58.800><c> we're</c><00:02:58.959><c> inside</c>

00:02:59.750 --> 00:02:59.760 align:start position:0%
function we're inside
 

00:02:59.760 --> 00:03:02.149 align:start position:0%
function we're inside
and<00:03:00.000><c> once</c><00:03:00.400><c> we</c><00:03:00.640><c> have</c><00:03:01.120><c> swapped</c><00:03:01.599><c> the</c><00:03:01.760><c> roots</c>

00:03:02.149 --> 00:03:02.159 align:start position:0%
and once we have swapped the roots
 

00:03:02.159 --> 00:03:04.229 align:start position:0%
and once we have swapped the roots
children<00:03:02.640><c> once</c><00:03:02.879><c> we</c><00:03:03.040><c> have</c><00:03:03.120><c> inverted</c><00:03:03.680><c> the</c><00:03:03.920><c> left</c>

00:03:04.229 --> 00:03:04.239 align:start position:0%
children once we have inverted the left
 

00:03:04.239 --> 00:03:05.030 align:start position:0%
children once we have inverted the left
subtree<00:03:04.800><c> and</c>

00:03:05.030 --> 00:03:05.040 align:start position:0%
subtree and
 

00:03:05.040 --> 00:03:07.270 align:start position:0%
subtree and
inverted<00:03:05.440><c> the</c><00:03:05.599><c> right</c><00:03:05.840><c> subtree</c><00:03:06.640><c> we</c><00:03:06.800><c> know</c><00:03:07.040><c> we're</c>

00:03:07.270 --> 00:03:07.280 align:start position:0%
inverted the right subtree we know we're
 

00:03:07.280 --> 00:03:09.670 align:start position:0%
inverted the right subtree we know we're
finished<00:03:07.599><c> so</c><00:03:07.840><c> then</c><00:03:08.080><c> we</c><00:03:08.159><c> can</c><00:03:08.319><c> return</c><00:03:08.720><c> the</c><00:03:08.959><c> root</c>

00:03:09.670 --> 00:03:09.680 align:start position:0%
finished so then we can return the root
 

00:03:09.680 --> 00:03:12.070 align:start position:0%
finished so then we can return the root
so<00:03:09.920><c> there</c><00:03:10.080><c> it</c><00:03:10.239><c> is</c><00:03:10.480><c> this</c><00:03:10.720><c> problem</c><00:03:11.680><c> is</c><00:03:11.920><c> a</c>

00:03:12.070 --> 00:03:12.080 align:start position:0%
so there it is this problem is a
 

00:03:12.080 --> 00:03:13.910 align:start position:0%
so there it is this problem is a
relatively<00:03:12.720><c> short</c><00:03:12.959><c> code</c><00:03:13.200><c> it's</c><00:03:13.360><c> a</c><00:03:13.440><c> very</c><00:03:13.680><c> good</c>

00:03:13.910 --> 00:03:13.920 align:start position:0%
relatively short code it's a very good
 

00:03:13.920 --> 00:03:16.229 align:start position:0%
relatively short code it's a very good
problem<00:03:14.319><c> to</c><00:03:14.560><c> kind</c><00:03:14.720><c> of</c><00:03:14.879><c> understand</c><00:03:15.440><c> the</c><00:03:15.599><c> basics</c>

00:03:16.229 --> 00:03:16.239 align:start position:0%
problem to kind of understand the basics
 

00:03:16.239 --> 00:03:17.430 align:start position:0%
problem to kind of understand the basics
of

00:03:17.430 --> 00:03:17.440 align:start position:0%
of
 

00:03:17.440 --> 00:03:19.750 align:start position:0%
of
depth<00:03:17.599><c> first</c><00:03:17.840><c> search</c><00:03:18.239><c> and</c><00:03:18.879><c> tree</c><00:03:19.200><c> problems</c><00:03:19.599><c> in</c>

00:03:19.750 --> 00:03:19.760 align:start position:0%
depth first search and tree problems in
 

00:03:19.760 --> 00:03:21.670 align:start position:0%
depth first search and tree problems in
general<00:03:20.319><c> and</c><00:03:20.480><c> it's</c><00:03:20.640><c> actually</c><00:03:21.040><c> a</c><00:03:21.280><c> pretty</c>

00:03:21.670 --> 00:03:21.680 align:start position:0%
general and it's actually a pretty
 

00:03:21.680 --> 00:03:23.110 align:start position:0%
general and it's actually a pretty
popular<00:03:22.239><c> problem</c>

00:03:23.110 --> 00:03:23.120 align:start position:0%
popular problem
 

00:03:23.120 --> 00:03:25.190 align:start position:0%
popular problem
and<00:03:23.280><c> if</c><00:03:23.440><c> you</c><00:03:23.599><c> weren't</c><00:03:23.920><c> able</c><00:03:24.159><c> to</c><00:03:24.480><c> solve</c><00:03:24.720><c> this</c><00:03:25.040><c> on</c>

00:03:25.190 --> 00:03:25.200 align:start position:0%
and if you weren't able to solve this on
 

00:03:25.200 --> 00:03:27.190 align:start position:0%
and if you weren't able to solve this on
your<00:03:25.360><c> first</c><00:03:25.599><c> try</c><00:03:25.840><c> don't</c><00:03:26.080><c> feel</c><00:03:26.400><c> too</c><00:03:26.640><c> bad</c><00:03:26.959><c> take</c><00:03:27.120><c> a</c>

00:03:27.190 --> 00:03:27.200 align:start position:0%
your first try don't feel too bad take a
 

00:03:27.200 --> 00:03:29.190 align:start position:0%
your first try don't feel too bad take a
look<00:03:27.440><c> at</c><00:03:27.599><c> this</c><00:03:27.920><c> trivia</c>

00:03:29.190 --> 00:03:29.200 align:start position:0%
look at this trivia
 

00:03:29.200 --> 00:03:31.190 align:start position:0%
look at this trivia
there<00:03:29.440><c> was</c><00:03:29.680><c> a</c><00:03:29.840><c> very</c><00:03:30.239><c> good</c><00:03:30.480><c> engineer</c><00:03:31.040><c> who</c>

00:03:31.190 --> 00:03:31.200 align:start position:0%
there was a very good engineer who
 

00:03:31.200 --> 00:03:32.869 align:start position:0%
there was a very good engineer who
actually<00:03:31.519><c> failed</c><00:03:31.840><c> this</c><00:03:32.080><c> problem</c><00:03:32.560><c> in</c><00:03:32.640><c> their</c>

00:03:32.869 --> 00:03:32.879 align:start position:0%
actually failed this problem in their
 

00:03:32.879 --> 00:03:34.229 align:start position:0%
actually failed this problem in their
google<00:03:33.360><c> interview</c>

00:03:34.229 --> 00:03:34.239 align:start position:0%
google interview
 

00:03:34.239 --> 00:03:36.229 align:start position:0%
google interview
but<00:03:34.480><c> his</c><00:03:34.799><c> career</c><00:03:35.200><c> still</c><00:03:35.440><c> turned</c><00:03:35.760><c> out</c><00:03:35.920><c> pretty</c>

00:03:36.229 --> 00:03:36.239 align:start position:0%
but his career still turned out pretty
 

00:03:36.239 --> 00:03:38.630 align:start position:0%
but his career still turned out pretty
fine<00:03:37.040><c> so</c><00:03:37.280><c> i</c><00:03:37.440><c> hope</c><00:03:37.599><c> this</c><00:03:37.840><c> was</c><00:03:38.000><c> helpful</c>

00:03:38.630 --> 00:03:38.640 align:start position:0%
fine so i hope this was helpful
 

00:03:38.640 --> 00:03:40.710 align:start position:0%
fine so i hope this was helpful
if<00:03:38.879><c> it</c><00:03:38.959><c> was</c><00:03:39.360><c> please</c><00:03:39.680><c> like</c><00:03:40.000><c> and</c><00:03:40.080><c> subscribe</c><00:03:40.640><c> it</c>

00:03:40.710 --> 00:03:40.720 align:start position:0%
if it was please like and subscribe it
 

00:03:40.720 --> 00:03:41.750 align:start position:0%
if it was please like and subscribe it
supports<00:03:41.120><c> the</c><00:03:41.280><c> channel</c>

00:03:41.750 --> 00:03:41.760 align:start position:0%
supports the channel
 

00:03:41.760 --> 00:03:44.830 align:start position:0%
supports the channel
a<00:03:41.920><c> lot</c><00:03:42.319><c> and</c><00:03:42.480><c> i'll</c><00:03:42.720><c> hopefully</c><00:03:43.280><c> see</c><00:03:43.440><c> you</c><00:03:43.599><c> pretty</c>

00:03:44.830 --> 00:03:44.840 align:start position:0%
a lot and i'll hopefully see you pretty
 

00:03:44.840 --> 00:03:47.840 align:start position:0%
a lot and i'll hopefully see you pretty
soon

