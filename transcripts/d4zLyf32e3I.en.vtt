WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.510 align:start position:0%
 
hey<00:00:00.160><c> everyone</c><00:00:00.560><c> welcome</c><00:00:00.960><c> back</c><00:00:01.199><c> and</c><00:00:01.280><c> let's</c>

00:00:01.510 --> 00:00:01.520 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.520 --> 00:00:03.030 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.680><c> some</c><00:00:01.839><c> more</c><00:00:02.080><c> neat</c><00:00:02.320><c> code</c><00:00:02.560><c> today</c>

00:00:03.030 --> 00:00:03.040 align:start position:0%
write some more neat code today
 

00:00:03.040 --> 00:00:05.749 align:start position:0%
write some more neat code today
so<00:00:03.199><c> today</c><00:00:03.600><c> let's</c><00:00:03.919><c> solve</c><00:00:04.319><c> binary</c><00:00:05.040><c> tree</c><00:00:05.440><c> right</c>

00:00:05.749 --> 00:00:05.759 align:start position:0%
so today let's solve binary tree right
 

00:00:05.759 --> 00:00:06.230 align:start position:0%
so today let's solve binary tree right
side

00:00:06.230 --> 00:00:06.240 align:start position:0%
side
 

00:00:06.240 --> 00:00:07.870 align:start position:0%
side
view<00:00:06.799><c> the</c><00:00:06.960><c> problem</c><00:00:07.359><c> is</c><00:00:07.520><c> pretty</c>

00:00:07.870 --> 00:00:07.880 align:start position:0%
view the problem is pretty
 

00:00:07.880 --> 00:00:10.230 align:start position:0%
view the problem is pretty
self-explanatory<00:00:08.880><c> we're</c><00:00:09.040><c> given</c><00:00:09.440><c> a</c><00:00:09.679><c> binary</c>

00:00:10.230 --> 00:00:10.240 align:start position:0%
self-explanatory we're given a binary
 

00:00:10.240 --> 00:00:10.870 align:start position:0%
self-explanatory we're given a binary
tree

00:00:10.870 --> 00:00:10.880 align:start position:0%
tree
 

00:00:10.880 --> 00:00:13.350 align:start position:0%
tree
and<00:00:11.280><c> basically</c><00:00:11.920><c> imagine</c><00:00:12.400><c> you're</c><00:00:12.559><c> standing</c><00:00:13.120><c> on</c>

00:00:13.350 --> 00:00:13.360 align:start position:0%
and basically imagine you're standing on
 

00:00:13.360 --> 00:00:15.509 align:start position:0%
and basically imagine you're standing on
the<00:00:13.519><c> right</c><00:00:13.840><c> side</c><00:00:14.080><c> of</c><00:00:14.240><c> it</c><00:00:14.320><c> so</c><00:00:14.480><c> this</c><00:00:14.719><c> is</c><00:00:14.799><c> the</c><00:00:15.040><c> tree</c>

00:00:15.509 --> 00:00:15.519 align:start position:0%
the right side of it so this is the tree
 

00:00:15.519 --> 00:00:17.910 align:start position:0%
the right side of it so this is the tree
imagine<00:00:15.920><c> we</c><00:00:16.080><c> have</c><00:00:16.320><c> a</c><00:00:16.560><c> person</c><00:00:17.199><c> standing</c><00:00:17.600><c> over</c>

00:00:17.910 --> 00:00:17.920 align:start position:0%
imagine we have a person standing over
 

00:00:17.920 --> 00:00:19.590 align:start position:0%
imagine we have a person standing over
here<00:00:18.160><c> right</c><00:00:18.400><c> you</c><00:00:18.560><c> can</c><00:00:18.800><c> see</c>

00:00:19.590 --> 00:00:19.600 align:start position:0%
here right you can see
 

00:00:19.600 --> 00:00:21.349 align:start position:0%
here right you can see
from<00:00:20.080><c> the</c><00:00:20.240><c> right</c><00:00:20.480><c> side</c><00:00:20.720><c> you</c><00:00:20.880><c> can</c><00:00:21.039><c> see</c>

00:00:21.349 --> 00:00:21.359 align:start position:0%
from the right side you can see
 

00:00:21.359 --> 00:00:23.269 align:start position:0%
from the right side you can see
everything<00:00:21.920><c> on</c><00:00:22.160><c> the</c><00:00:22.320><c> right</c><00:00:22.640><c> side</c>

00:00:23.269 --> 00:00:23.279 align:start position:0%
everything on the right side
 

00:00:23.279 --> 00:00:26.470 align:start position:0%
everything on the right side
and<00:00:23.439><c> so</c><00:00:24.000><c> what</c><00:00:24.480><c> nodes</c><00:00:24.960><c> can</c><00:00:25.199><c> this</c><00:00:25.519><c> person</c><00:00:26.080><c> see</c>

00:00:26.470 --> 00:00:26.480 align:start position:0%
and so what nodes can this person see
 

00:00:26.480 --> 00:00:27.509 align:start position:0%
and so what nodes can this person see
well<00:00:26.720><c> they</c><00:00:26.880><c> can</c><00:00:27.039><c> see</c>

00:00:27.509 --> 00:00:27.519 align:start position:0%
well they can see
 

00:00:27.519 --> 00:00:29.029 align:start position:0%
well they can see
the<00:00:27.680><c> root</c><00:00:28.000><c> node</c><00:00:28.320><c> right</c><00:00:28.480><c> there's</c><00:00:28.640><c> nothing</c>

00:00:29.029 --> 00:00:29.039 align:start position:0%
the root node right there's nothing
 

00:00:29.039 --> 00:00:31.029 align:start position:0%
the root node right there's nothing
blocking<00:00:29.519><c> that</c><00:00:29.679><c> they</c><00:00:29.920><c> can</c><00:00:30.160><c> see</c>

00:00:31.029 --> 00:00:31.039 align:start position:0%
blocking that they can see
 

00:00:31.039 --> 00:00:34.069 align:start position:0%
blocking that they can see
this<00:00:31.439><c> node</c><00:00:32.079><c> can</c><00:00:32.320><c> they</c><00:00:32.640><c> see</c><00:00:33.200><c> two</c><00:00:33.600><c> well</c><00:00:33.840><c> you</c>

00:00:34.069 --> 00:00:34.079 align:start position:0%
this node can they see two well you
 

00:00:34.079 --> 00:00:36.389 align:start position:0%
this node can they see two well you
can't<00:00:34.320><c> really</c><00:00:34.640><c> see</c><00:00:34.880><c> two</c><00:00:35.120><c> because</c><00:00:35.360><c> it's</c><00:00:35.600><c> behind</c>

00:00:36.389 --> 00:00:36.399 align:start position:0%
can't really see two because it's behind
 

00:00:36.399 --> 00:00:38.869 align:start position:0%
can't really see two because it's behind
this<00:00:36.719><c> node</c><00:00:37.040><c> right</c><00:00:37.280><c> it's</c><00:00:37.440><c> basically</c><00:00:38.079><c> blocking</c>

00:00:38.869 --> 00:00:38.879 align:start position:0%
this node right it's basically blocking
 

00:00:38.879 --> 00:00:40.790 align:start position:0%
this node right it's basically blocking
it's<00:00:39.120><c> blocking</c><00:00:39.520><c> this</c><00:00:39.760><c> node</c><00:00:40.079><c> right</c>

00:00:40.790 --> 00:00:40.800 align:start position:0%
it's blocking this node right
 

00:00:40.800 --> 00:00:42.790 align:start position:0%
it's blocking this node right
and<00:00:41.280><c> the</c><00:00:41.520><c> same</c><00:00:41.760><c> thing</c><00:00:41.920><c> with</c><00:00:42.079><c> these</c><00:00:42.399><c> two</c><00:00:42.559><c> nodes</c>

00:00:42.790 --> 00:00:42.800 align:start position:0%
and the same thing with these two nodes
 

00:00:42.800 --> 00:00:44.549 align:start position:0%
and the same thing with these two nodes
right<00:00:43.040><c> we</c><00:00:43.200><c> can</c><00:00:43.360><c> see</c><00:00:43.680><c> four</c><00:00:43.920><c> because</c><00:00:44.239><c> it's</c><00:00:44.399><c> the</c>

00:00:44.549 --> 00:00:44.559 align:start position:0%
right we can see four because it's the
 

00:00:44.559 --> 00:00:45.910 align:start position:0%
right we can see four because it's the
right<00:00:44.800><c> most</c><00:00:45.120><c> right</c><00:00:45.360><c> like</c>

00:00:45.910 --> 00:00:45.920 align:start position:0%
right most right like
 

00:00:45.920 --> 00:00:48.229 align:start position:0%
right most right like
imagine<00:00:46.320><c> the</c><00:00:46.480><c> person</c><00:00:47.200><c> sees</c><00:00:47.520><c> this</c><00:00:47.760><c> but</c><00:00:48.079><c> you</c>

00:00:48.229 --> 00:00:48.239 align:start position:0%
imagine the person sees this but you
 

00:00:48.239 --> 00:00:49.350 align:start position:0%
imagine the person sees this but you
can't<00:00:48.399><c> really</c><00:00:48.640><c> see</c><00:00:48.960><c> that</c>

00:00:49.350 --> 00:00:49.360 align:start position:0%
can't really see that
 

00:00:49.360 --> 00:00:52.069 align:start position:0%
can't really see that
because<00:00:49.600><c> it's</c><00:00:49.760><c> being</c><00:00:50.160><c> blocked</c><00:00:51.039><c> by</c><00:00:51.199><c> the</c><00:00:51.440><c> four</c>

00:00:52.069 --> 00:00:52.079 align:start position:0%
because it's being blocked by the four
 

00:00:52.079 --> 00:00:52.470 align:start position:0%
because it's being blocked by the four
so

00:00:52.470 --> 00:00:52.480 align:start position:0%
so
 

00:00:52.480 --> 00:00:54.069 align:start position:0%
so
that<00:00:52.879><c> so</c><00:00:53.039><c> when</c><00:00:53.199><c> you</c><00:00:53.360><c> just</c><00:00:53.600><c> look</c><00:00:53.760><c> at</c><00:00:53.920><c> this</c>

00:00:54.069 --> 00:00:54.079 align:start position:0%
that so when you just look at this
 

00:00:54.079 --> 00:00:56.549 align:start position:0%
that so when you just look at this
example<00:00:54.480><c> this</c><00:00:54.640><c> problem</c><00:00:55.039><c> seems</c><00:00:55.440><c> really</c><00:00:56.079><c> easy</c>

00:00:56.549 --> 00:00:56.559 align:start position:0%
example this problem seems really easy
 

00:00:56.559 --> 00:00:58.790 align:start position:0%
example this problem seems really easy
right<00:00:56.879><c> so</c><00:00:57.440><c> your</c><00:00:57.680><c> first</c><00:00:58.160><c> thought</c><00:00:58.399><c> might</c><00:00:58.640><c> just</c>

00:00:58.790 --> 00:00:58.800 align:start position:0%
right so your first thought might just
 

00:00:58.800 --> 00:01:00.549 align:start position:0%
right so your first thought might just
be<00:00:59.039><c> okay</c><00:00:59.359><c> start</c><00:00:59.680><c> at</c><00:00:59.760><c> the</c><00:01:00.000><c> root</c>

00:01:00.549 --> 00:01:00.559 align:start position:0%
be okay start at the root
 

00:01:00.559 --> 00:01:03.750 align:start position:0%
be okay start at the root
and<00:01:00.960><c> keep</c><00:01:01.760><c> going</c><00:01:02.719><c> to</c><00:01:02.879><c> the</c><00:01:03.120><c> right</c>

00:01:03.750 --> 00:01:03.760 align:start position:0%
and keep going to the right
 

00:01:03.760 --> 00:01:06.310 align:start position:0%
and keep going to the right
right<00:01:04.000><c> just</c><00:01:04.239><c> keep</c><00:01:04.400><c> going</c><00:01:04.799><c> down</c><00:01:05.439><c> and</c><00:01:05.920><c> we'll</c><00:01:06.080><c> get</c>

00:01:06.310 --> 00:01:06.320 align:start position:0%
right just keep going down and we'll get
 

00:01:06.320 --> 00:01:08.230 align:start position:0%
right just keep going down and we'll get
the<00:01:06.479><c> right</c><00:01:06.720><c> side</c><00:01:07.040><c> view</c><00:01:07.280><c> right</c><00:01:07.520><c> every</c><00:01:07.840><c> node</c><00:01:08.080><c> on</c>

00:01:08.230 --> 00:01:08.240 align:start position:0%
the right side view right every node on
 

00:01:08.240 --> 00:01:09.190 align:start position:0%
the right side view right every node on
the<00:01:08.320><c> right</c><00:01:08.640><c> side</c>

00:01:09.190 --> 00:01:09.200 align:start position:0%
the right side
 

00:01:09.200 --> 00:01:11.830 align:start position:0%
the right side
but<00:01:09.600><c> we</c><00:01:09.840><c> can</c><00:01:10.080><c> make</c><00:01:10.320><c> a</c><00:01:10.560><c> counter</c><00:01:10.960><c> example</c><00:01:11.439><c> pretty</c>

00:01:11.830 --> 00:01:11.840 align:start position:0%
but we can make a counter example pretty
 

00:01:11.840 --> 00:01:13.990 align:start position:0%
but we can make a counter example pretty
easily<00:01:12.240><c> to</c><00:01:12.479><c> show</c><00:01:12.720><c> that</c><00:01:12.880><c> that</c><00:01:13.119><c> actually</c><00:01:13.600><c> won't</c>

00:01:13.990 --> 00:01:14.000 align:start position:0%
easily to show that that actually won't
 

00:01:14.000 --> 00:01:17.350 align:start position:0%
easily to show that that actually won't
always<00:01:14.560><c> work</c><00:01:14.880><c> imagine</c><00:01:15.840><c> this</c><00:01:16.159><c> node</c><00:01:16.640><c> 5</c>

00:01:17.350 --> 00:01:17.360 align:start position:0%
always work imagine this node 5
 

00:01:17.360 --> 00:01:20.469 align:start position:0%
always work imagine this node 5
had<00:01:17.840><c> a</c><00:01:18.400><c> left</c><00:01:18.799><c> child</c><00:01:19.439><c> right</c><00:01:19.600><c> like</c><00:01:19.840><c> let's</c><00:01:20.320><c> let's</c>

00:01:20.469 --> 00:01:20.479 align:start position:0%
had a left child right like let's let's
 

00:01:20.479 --> 00:01:21.590 align:start position:0%
had a left child right like let's let's
say<00:01:20.640><c> it</c><00:01:20.720><c> has</c><00:01:21.040><c> 7</c>

00:01:21.590 --> 00:01:21.600 align:start position:0%
say it has 7
 

00:01:21.600 --> 00:01:23.830 align:start position:0%
say it has 7
over<00:01:22.000><c> here</c><00:01:22.320><c> now</c><00:01:22.799><c> now</c><00:01:23.040><c> you</c><00:01:23.119><c> can</c><00:01:23.280><c> see</c><00:01:23.439><c> that</c><00:01:23.600><c> our</c>

00:01:23.830 --> 00:01:23.840 align:start position:0%
over here now now you can see that our
 

00:01:23.840 --> 00:01:25.030 align:start position:0%
over here now now you can see that our
result<00:01:24.320><c> is</c><00:01:24.479><c> going</c><00:01:24.640><c> to</c><00:01:24.720><c> be</c>

00:01:25.030 --> 00:01:25.040 align:start position:0%
result is going to be
 

00:01:25.040 --> 00:01:27.670 align:start position:0%
result is going to be
one<00:01:25.600><c> three</c><00:01:26.320><c> four</c><00:01:26.640><c> we</c><00:01:26.799><c> can't</c><00:01:27.040><c> include</c><00:01:27.439><c> these</c>

00:01:27.670 --> 00:01:27.680 align:start position:0%
one three four we can't include these
 

00:01:27.680 --> 00:01:29.510 align:start position:0%
one three four we can't include these
nodes<00:01:28.000><c> because</c><00:01:28.240><c> they're</c><00:01:28.479><c> being</c><00:01:28.799><c> blocked</c>

00:01:29.510 --> 00:01:29.520 align:start position:0%
nodes because they're being blocked
 

00:01:29.520 --> 00:01:32.550 align:start position:0%
nodes because they're being blocked
but<00:01:30.159><c> there's</c><00:01:30.479><c> nothing</c><00:01:30.960><c> over</c><00:01:31.280><c> here</c><00:01:31.840><c> right</c><00:01:32.159><c> the</c>

00:01:32.550 --> 00:01:32.560 align:start position:0%
but there's nothing over here right the
 

00:01:32.560 --> 00:01:35.590 align:start position:0%
but there's nothing over here right the
seven<00:01:32.960><c> is</c><00:01:33.119><c> not</c><00:01:33.360><c> being</c><00:01:33.680><c> blocked</c><00:01:34.320><c> so</c><00:01:35.119><c> if</c><00:01:35.360><c> this</c>

00:01:35.590 --> 00:01:35.600 align:start position:0%
seven is not being blocked so if this
 

00:01:35.600 --> 00:01:37.270 align:start position:0%
seven is not being blocked so if this
was<00:01:35.840><c> our</c><00:01:36.079><c> input</c><00:01:36.479><c> tree</c><00:01:36.799><c> then</c>

00:01:37.270 --> 00:01:37.280 align:start position:0%
was our input tree then
 

00:01:37.280 --> 00:01:39.590 align:start position:0%
was our input tree then
our<00:01:37.600><c> output</c><00:01:38.000><c> would</c><00:01:38.159><c> be</c><00:01:38.479><c> one</c><00:01:38.880><c> three</c><00:01:39.280><c> four</c><00:01:39.520><c> and</c>

00:01:39.590 --> 00:01:39.600 align:start position:0%
our output would be one three four and
 

00:01:39.600 --> 00:01:41.749 align:start position:0%
our output would be one three four and
we'd<00:01:39.840><c> have</c><00:01:40.000><c> to</c><00:01:40.240><c> add</c><00:01:40.479><c> a</c><00:01:40.720><c> seven</c><00:01:41.040><c> to</c><00:01:41.200><c> that</c><00:01:41.439><c> because</c>

00:01:41.749 --> 00:01:41.759 align:start position:0%
we'd have to add a seven to that because
 

00:01:41.759 --> 00:01:43.190 align:start position:0%
we'd have to add a seven to that because
look<00:01:41.920><c> at</c><00:01:42.079><c> our</c><00:01:42.240><c> person</c>

00:01:43.190 --> 00:01:43.200 align:start position:0%
look at our person
 

00:01:43.200 --> 00:01:46.389 align:start position:0%
look at our person
they<00:01:43.600><c> can</c><00:01:43.840><c> technically</c><00:01:44.479><c> see</c><00:01:45.040><c> down</c><00:01:45.360><c> here</c><00:01:46.159><c> so</c>

00:01:46.389 --> 00:01:46.399 align:start position:0%
they can technically see down here so
 

00:01:46.399 --> 00:01:48.550 align:start position:0%
they can technically see down here so
basically<00:01:46.960><c> what</c><00:01:47.200><c> this</c><00:01:47.439><c> means</c><00:01:47.759><c> is</c><00:01:47.840><c> we</c><00:01:48.079><c> can't</c>

00:01:48.550 --> 00:01:48.560 align:start position:0%
basically what this means is we can't
 

00:01:48.560 --> 00:01:51.749 align:start position:0%
basically what this means is we can't
only<00:01:49.040><c> look</c><00:01:49.280><c> at</c><00:01:49.520><c> the</c><00:01:49.920><c> right</c><00:01:50.720><c> children</c><00:01:51.280><c> right</c>

00:01:51.749 --> 00:01:51.759 align:start position:0%
only look at the right children right
 

00:01:51.759 --> 00:01:54.149 align:start position:0%
only look at the right children right
so<00:01:52.079><c> you</c><00:01:52.240><c> can</c><00:01:52.479><c> actually</c><00:01:53.040><c> solve</c><00:01:53.360><c> this</c><00:01:53.600><c> problem</c>

00:01:54.149 --> 00:01:54.159 align:start position:0%
so you can actually solve this problem
 

00:01:54.159 --> 00:01:56.630 align:start position:0%
so you can actually solve this problem
with<00:01:54.399><c> a</c><00:01:54.720><c> breadth</c><00:01:55.280><c> first</c><00:01:55.600><c> search</c><00:01:55.920><c> i</c><00:01:56.000><c> know</c><00:01:56.240><c> most</c>

00:01:56.630 --> 00:01:56.640 align:start position:0%
with a breadth first search i know most
 

00:01:56.640 --> 00:01:58.230 align:start position:0%
with a breadth first search i know most
tree<00:01:56.880><c> problems</c><00:01:57.280><c> you</c><00:01:57.439><c> can</c><00:01:57.520><c> just</c><00:01:57.759><c> do</c><00:01:58.000><c> depth</c>

00:01:58.230 --> 00:01:58.240 align:start position:0%
tree problems you can just do depth
 

00:01:58.240 --> 00:01:59.830 align:start position:0%
tree problems you can just do depth
first<00:01:58.399><c> search</c><00:01:58.799><c> but</c><00:01:59.040><c> this</c><00:01:59.280><c> problem</c><00:01:59.600><c> can</c>

00:01:59.830 --> 00:01:59.840 align:start position:0%
first search but this problem can
 

00:01:59.840 --> 00:02:01.429 align:start position:0%
first search but this problem can
actually<00:02:00.079><c> be</c><00:02:00.320><c> solved</c><00:02:00.640><c> with</c><00:02:00.960><c> breadth</c><00:02:01.200><c> first</c>

00:02:01.429 --> 00:02:01.439 align:start position:0%
actually be solved with breadth first
 

00:02:01.439 --> 00:02:02.389 align:start position:0%
actually be solved with breadth first
search<00:02:01.680><c> there</c><00:02:01.920><c> actually</c>

00:02:02.389 --> 00:02:02.399 align:start position:0%
search there actually
 

00:02:02.399 --> 00:02:04.950 align:start position:0%
search there actually
is<00:02:02.560><c> a</c><00:02:02.799><c> depth</c><00:02:03.040><c> first</c><00:02:03.280><c> search</c><00:02:03.600><c> solution</c><00:02:04.479><c> but</c><00:02:04.719><c> i'm</c>

00:02:04.950 --> 00:02:04.960 align:start position:0%
is a depth first search solution but i'm
 

00:02:04.960 --> 00:02:06.870 align:start position:0%
is a depth first search solution but i'm
going<00:02:05.200><c> to</c><00:02:05.439><c> explain</c><00:02:06.000><c> the</c><00:02:06.240><c> breadth</c><00:02:06.640><c> first</c>

00:02:06.870 --> 00:02:06.880 align:start position:0%
going to explain the breadth first
 

00:02:06.880 --> 00:02:08.070 align:start position:0%
going to explain the breadth first
search<00:02:07.200><c> solution</c>

00:02:08.070 --> 00:02:08.080 align:start position:0%
search solution
 

00:02:08.080 --> 00:02:10.550 align:start position:0%
search solution
to<00:02:08.239><c> you</c><00:02:08.479><c> because</c><00:02:08.879><c> in</c><00:02:08.959><c> some</c><00:02:09.200><c> ways</c><00:02:09.440><c> it's</c><00:02:09.679><c> easier</c>

00:02:10.550 --> 00:02:10.560 align:start position:0%
to you because in some ways it's easier
 

00:02:10.560 --> 00:02:12.550 align:start position:0%
to you because in some ways it's easier
and<00:02:10.800><c> you</c><00:02:10.959><c> might</c><00:02:11.200><c> know</c><00:02:11.440><c> brett's</c><00:02:11.760><c> first</c><00:02:12.080><c> search</c>

00:02:12.550 --> 00:02:12.560 align:start position:0%
and you might know brett's first search
 

00:02:12.560 --> 00:02:15.990 align:start position:0%
and you might know brett's first search
in<00:02:12.879><c> a</c><00:02:13.200><c> tree</c><00:02:13.760><c> is</c><00:02:13.920><c> also</c><00:02:14.160><c> known</c><00:02:14.480><c> as</c><00:02:15.040><c> level</c>

00:02:15.990 --> 00:02:16.000 align:start position:0%
in a tree is also known as level
 

00:02:16.000 --> 00:02:18.470 align:start position:0%
in a tree is also known as level
order<00:02:16.400><c> traversal</c><00:02:17.360><c> so</c><00:02:17.520><c> it's</c><00:02:17.680><c> also</c><00:02:17.920><c> known</c><00:02:18.160><c> as</c>

00:02:18.470 --> 00:02:18.480 align:start position:0%
order traversal so it's also known as
 

00:02:18.480 --> 00:02:20.229 align:start position:0%
order traversal so it's also known as
level<00:02:18.800><c> order</c><00:02:19.200><c> traversal</c><00:02:19.840><c> which</c>

00:02:20.229 --> 00:02:20.239 align:start position:0%
level order traversal which
 

00:02:20.239 --> 00:02:22.390 align:start position:0%
level order traversal which
you're<00:02:20.400><c> gonna</c><00:02:20.640><c> see</c><00:02:20.879><c> why</c><00:02:21.120><c> it's</c><00:02:21.280><c> called</c><00:02:21.599><c> that</c>

00:02:22.390 --> 00:02:22.400 align:start position:0%
you're gonna see why it's called that
 

00:02:22.400 --> 00:02:23.830 align:start position:0%
you're gonna see why it's called that
just<00:02:22.640><c> about</c><00:02:23.040><c> now</c>

00:02:23.830 --> 00:02:23.840 align:start position:0%
just about now
 

00:02:23.840 --> 00:02:25.510 align:start position:0%
just about now
so<00:02:24.160><c> instead</c><00:02:24.480><c> of</c><00:02:24.720><c> saying</c><00:02:24.959><c> that</c><00:02:25.120><c> there's</c><00:02:25.360><c> a</c>

00:02:25.510 --> 00:02:25.520 align:start position:0%
so instead of saying that there's a
 

00:02:25.520 --> 00:02:27.110 align:start position:0%
so instead of saying that there's a
person<00:02:25.920><c> over</c><00:02:26.160><c> here</c><00:02:26.319><c> that</c><00:02:26.480><c> can</c><00:02:26.720><c> see</c>

00:02:27.110 --> 00:02:27.120 align:start position:0%
person over here that can see
 

00:02:27.120 --> 00:02:29.430 align:start position:0%
person over here that can see
only<00:02:27.440><c> the</c><00:02:27.599><c> right</c><00:02:27.920><c> side</c><00:02:28.160><c> of</c><00:02:28.239><c> the</c><00:02:28.400><c> tree</c><00:02:29.040><c> another</c>

00:02:29.430 --> 00:02:29.440 align:start position:0%
only the right side of the tree another
 

00:02:29.440 --> 00:02:31.509 align:start position:0%
only the right side of the tree another
way<00:02:29.680><c> of</c><00:02:29.840><c> framing</c><00:02:30.319><c> this</c><00:02:30.560><c> problem</c><00:02:31.040><c> is</c><00:02:31.200><c> saying</c>

00:02:31.509 --> 00:02:31.519 align:start position:0%
way of framing this problem is saying
 

00:02:31.519 --> 00:02:32.710 align:start position:0%
way of framing this problem is saying
okay<00:02:31.760><c> for</c><00:02:32.000><c> each</c>

00:02:32.710 --> 00:02:32.720 align:start position:0%
okay for each
 

00:02:32.720 --> 00:02:35.430 align:start position:0%
okay for each
level<00:02:33.360><c> right</c><00:02:33.599><c> each</c><00:02:34.080><c> level</c><00:02:34.560><c> of</c><00:02:34.720><c> the</c><00:02:34.959><c> tree</c><00:02:35.280><c> we</c>

00:02:35.430 --> 00:02:35.440 align:start position:0%
level right each level of the tree we
 

00:02:35.440 --> 00:02:36.150 align:start position:0%
level right each level of the tree we
want<00:02:35.680><c> the</c>

00:02:36.150 --> 00:02:36.160 align:start position:0%
want the
 

00:02:36.160 --> 00:02:39.270 align:start position:0%
want the
right<00:02:36.640><c> most</c><00:02:37.519><c> node</c><00:02:38.000><c> so</c><00:02:38.239><c> the</c><00:02:38.400><c> first</c><00:02:38.800><c> level</c><00:02:39.120><c> it's</c>

00:02:39.270 --> 00:02:39.280 align:start position:0%
right most node so the first level it's
 

00:02:39.280 --> 00:02:40.949 align:start position:0%
right most node so the first level it's
pretty<00:02:39.599><c> easy</c><00:02:39.920><c> because</c><00:02:40.160><c> there's</c><00:02:40.319><c> only</c><00:02:40.640><c> one</c>

00:02:40.949 --> 00:02:40.959 align:start position:0%
pretty easy because there's only one
 

00:02:40.959 --> 00:02:41.430 align:start position:0%
pretty easy because there's only one
node

00:02:41.430 --> 00:02:41.440 align:start position:0%
node
 

00:02:41.440 --> 00:02:43.270 align:start position:0%
node
so<00:02:41.599><c> we'll</c><00:02:41.840><c> just</c><00:02:42.000><c> take</c><00:02:42.400><c> the</c><00:02:42.560><c> one</c><00:02:42.879><c> from</c><00:02:43.040><c> that</c>

00:02:43.270 --> 00:02:43.280 align:start position:0%
so we'll just take the one from that
 

00:02:43.280 --> 00:02:44.869 align:start position:0%
so we'll just take the one from that
what<00:02:43.519><c> about</c><00:02:44.160><c> this</c>

00:02:44.869 --> 00:02:44.879 align:start position:0%
what about this
 

00:02:44.879 --> 00:02:47.509 align:start position:0%
what about this
level<00:02:45.519><c> right</c><00:02:45.840><c> we</c><00:02:46.160><c> look</c><00:02:46.400><c> at</c><00:02:46.800><c> the</c><00:02:47.040><c> nodes</c>

00:02:47.509 --> 00:02:47.519 align:start position:0%
level right we look at the nodes
 

00:02:47.519 --> 00:02:49.509 align:start position:0%
level right we look at the nodes
together<00:02:48.239><c> for</c><00:02:48.400><c> this</c><00:02:48.640><c> level</c><00:02:48.879><c> we</c><00:02:49.040><c> want</c><00:02:49.280><c> the</c>

00:02:49.509 --> 00:02:49.519 align:start position:0%
together for this level we want the
 

00:02:49.519 --> 00:02:51.830 align:start position:0%
together for this level we want the
right<00:02:49.840><c> most</c><00:02:50.160><c> so</c><00:02:50.400><c> we</c><00:02:50.560><c> get</c><00:02:50.879><c> the</c><00:02:51.120><c> three</c>

00:02:51.830 --> 00:02:51.840 align:start position:0%
right most so we get the three
 

00:02:51.840 --> 00:02:55.190 align:start position:0%
right most so we get the three
next<00:02:52.560><c> we</c><00:02:52.959><c> want</c><00:02:53.519><c> the</c><00:02:53.920><c> third</c><00:02:54.640><c> level</c>

00:02:55.190 --> 00:02:55.200 align:start position:0%
next we want the third level
 

00:02:55.200 --> 00:02:57.270 align:start position:0%
next we want the third level
and<00:02:55.519><c> what's</c><00:02:55.840><c> the</c><00:02:56.080><c> right</c><00:02:56.400><c> most</c><00:02:56.720><c> value</c><00:02:57.120><c> it's</c>

00:02:57.270 --> 00:02:57.280 align:start position:0%
and what's the right most value it's
 

00:02:57.280 --> 00:02:58.869 align:start position:0%
and what's the right most value it's
gonna<00:02:57.440><c> be</c><00:02:57.680><c> the</c><00:02:57.920><c> four</c><00:02:58.319><c> right</c>

00:02:58.869 --> 00:02:58.879 align:start position:0%
gonna be the four right
 

00:02:58.879 --> 00:03:01.990 align:start position:0%
gonna be the four right
and<00:02:59.200><c> lastly</c><00:03:00.239><c> we</c><00:03:00.560><c> take</c><00:03:01.040><c> the</c><00:03:01.280><c> last</c>

00:03:01.990 --> 00:03:02.000 align:start position:0%
and lastly we take the last
 

00:03:02.000 --> 00:03:04.710 align:start position:0%
and lastly we take the last
level<00:03:02.720><c> and</c><00:03:03.280><c> there's</c><00:03:03.519><c> only</c><00:03:03.760><c> one</c><00:03:04.080><c> node</c><00:03:04.480><c> it's</c>

00:03:04.710 --> 00:03:04.720 align:start position:0%
level and there's only one node it's
 

00:03:04.720 --> 00:03:05.270 align:start position:0%
level and there's only one node it's
seven

00:03:05.270 --> 00:03:05.280 align:start position:0%
seven
 

00:03:05.280 --> 00:03:07.750 align:start position:0%
seven
so<00:03:05.519><c> we're</c><00:03:05.680><c> going</c><00:03:05.760><c> to</c><00:03:05.920><c> get</c><00:03:06.239><c> d7</c><00:03:07.120><c> so</c><00:03:07.360><c> with</c><00:03:07.599><c> a</c>

00:03:07.750 --> 00:03:07.760 align:start position:0%
so we're going to get d7 so with a
 

00:03:07.760 --> 00:03:09.190 align:start position:0%
so we're going to get d7 so with a
picture<00:03:08.319><c> this</c><00:03:08.480><c> is</c><00:03:08.720><c> pretty</c>

00:03:09.190 --> 00:03:09.200 align:start position:0%
picture this is pretty
 

00:03:09.200 --> 00:03:12.070 align:start position:0%
picture this is pretty
obvious<00:03:10.159><c> right</c><00:03:10.400><c> it's</c><00:03:10.560><c> really</c><00:03:10.959><c> easy</c><00:03:11.680><c> to</c><00:03:11.920><c> know</c>

00:03:12.070 --> 00:03:12.080 align:start position:0%
obvious right it's really easy to know
 

00:03:12.080 --> 00:03:13.509 align:start position:0%
obvious right it's really easy to know
what<00:03:12.239><c> we're</c><00:03:12.400><c> doing</c><00:03:12.640><c> with</c><00:03:12.800><c> a</c><00:03:12.959><c> picture</c><00:03:13.280><c> but</c>

00:03:13.509 --> 00:03:13.519 align:start position:0%
what we're doing with a picture but
 

00:03:13.519 --> 00:03:13.990 align:start position:0%
what we're doing with a picture but
actually

00:03:13.990 --> 00:03:14.000 align:start position:0%
actually
 

00:03:14.000 --> 00:03:15.750 align:start position:0%
actually
writing<00:03:14.400><c> the</c><00:03:14.560><c> code</c><00:03:14.879><c> for</c><00:03:15.200><c> level</c><00:03:15.519><c> order</c>

00:03:15.750 --> 00:03:15.760 align:start position:0%
writing the code for level order
 

00:03:15.760 --> 00:03:18.070 align:start position:0%
writing the code for level order
traversal<00:03:16.560><c> is</c><00:03:16.720><c> a</c><00:03:16.879><c> little</c><00:03:17.120><c> bit</c><00:03:17.360><c> tricky</c>

00:03:18.070 --> 00:03:18.080 align:start position:0%
traversal is a little bit tricky
 

00:03:18.080 --> 00:03:20.390 align:start position:0%
traversal is a little bit tricky
and<00:03:18.319><c> i'm</c><00:03:18.480><c> gonna</c><00:03:18.720><c> show</c><00:03:18.879><c> you</c><00:03:19.040><c> how</c><00:03:19.200><c> to</c><00:03:19.360><c> do</c><00:03:19.599><c> that</c>

00:03:20.390 --> 00:03:20.400 align:start position:0%
and i'm gonna show you how to do that
 

00:03:20.400 --> 00:03:22.470 align:start position:0%
and i'm gonna show you how to do that
basically<00:03:20.959><c> how</c><00:03:21.120><c> we're</c><00:03:21.280><c> gonna</c><00:03:21.599><c> implement</c><00:03:22.159><c> this</c>

00:03:22.470 --> 00:03:22.480 align:start position:0%
basically how we're gonna implement this
 

00:03:22.480 --> 00:03:25.670 align:start position:0%
basically how we're gonna implement this
is<00:03:22.560><c> with</c><00:03:22.800><c> a</c><00:03:23.040><c> q</c><00:03:23.760><c> data</c><00:03:24.080><c> structure</c><00:03:24.799><c> so</c><00:03:25.040><c> initially</c>

00:03:25.670 --> 00:03:25.680 align:start position:0%
is with a q data structure so initially
 

00:03:25.680 --> 00:03:26.710 align:start position:0%
is with a q data structure so initially
what<00:03:25.840><c> we're</c><00:03:26.000><c> gonna</c><00:03:26.239><c> do</c>

00:03:26.710 --> 00:03:26.720 align:start position:0%
what we're gonna do
 

00:03:26.720 --> 00:03:29.430 align:start position:0%
what we're gonna do
is<00:03:27.040><c> add</c><00:03:27.360><c> the</c><00:03:27.599><c> root</c><00:03:28.000><c> node</c><00:03:28.480><c> to</c><00:03:28.720><c> our</c><00:03:28.879><c> queue</c><00:03:29.280><c> so</c>

00:03:29.430 --> 00:03:29.440 align:start position:0%
is add the root node to our queue so
 

00:03:29.440 --> 00:03:30.309 align:start position:0%
is add the root node to our queue so
we're<00:03:29.599><c> gonna</c><00:03:29.840><c> add</c>

00:03:30.309 --> 00:03:30.319 align:start position:0%
we're gonna add
 

00:03:30.319 --> 00:03:32.710 align:start position:0%
we're gonna add
one<00:03:30.720><c> to</c><00:03:30.959><c> our</c><00:03:31.120><c> queue</c><00:03:31.840><c> and</c><00:03:32.080><c> we're</c><00:03:32.319><c> also</c><00:03:32.560><c> going</c><00:03:32.640><c> to</c>

00:03:32.710 --> 00:03:32.720 align:start position:0%
one to our queue and we're also going to
 

00:03:32.720 --> 00:03:33.750 align:start position:0%
one to our queue and we're also going to
have<00:03:32.879><c> a</c><00:03:33.040><c> result</c>

00:03:33.750 --> 00:03:33.760 align:start position:0%
have a result
 

00:03:33.760 --> 00:03:36.550 align:start position:0%
have a result
array<00:03:34.239><c> so</c><00:03:34.640><c> now</c><00:03:35.200><c> what</c><00:03:35.360><c> we're</c><00:03:35.519><c> going</c><00:03:35.680><c> to</c><00:03:35.840><c> do</c><00:03:36.159><c> is</c>

00:03:36.550 --> 00:03:36.560 align:start position:0%
array so now what we're going to do is
 

00:03:36.560 --> 00:03:37.430 align:start position:0%
array so now what we're going to do is
take<00:03:36.799><c> a</c><00:03:37.040><c> look</c>

00:03:37.430 --> 00:03:37.440 align:start position:0%
take a look
 

00:03:37.440 --> 00:03:40.390 align:start position:0%
take a look
at<00:03:37.840><c> our</c><00:03:38.159><c> rightmost</c><00:03:38.799><c> value</c><00:03:39.360><c> in</c><00:03:39.519><c> the</c><00:03:39.760><c> queue</c><00:03:40.080><c> it's</c>

00:03:40.390 --> 00:03:40.400 align:start position:0%
at our rightmost value in the queue it's
 

00:03:40.400 --> 00:03:40.869 align:start position:0%
at our rightmost value in the queue it's
1

00:03:40.869 --> 00:03:40.879 align:start position:0%
1
 

00:03:40.879 --> 00:03:43.589 align:start position:0%
1
so<00:03:41.040><c> we're</c><00:03:41.200><c> going</c><00:03:41.280><c> to</c><00:03:41.440><c> add</c><00:03:41.840><c> 1</c><00:03:42.239><c> to</c><00:03:42.480><c> our</c><00:03:42.799><c> result</c>

00:03:43.589 --> 00:03:43.599 align:start position:0%
so we're going to add 1 to our result
 

00:03:43.599 --> 00:03:45.910 align:start position:0%
so we're going to add 1 to our result
next<00:03:44.000><c> now</c><00:03:44.239><c> we're</c><00:03:44.560><c> no</c><00:03:44.799><c> longer</c><00:03:45.280><c> looking</c><00:03:45.519><c> at</c><00:03:45.680><c> this</c>

00:03:45.910 --> 00:03:45.920 align:start position:0%
next now we're no longer looking at this
 

00:03:45.920 --> 00:03:47.270 align:start position:0%
next now we're no longer looking at this
node<00:03:46.239><c> we</c><00:03:46.480><c> are</c><00:03:46.640><c> looking</c><00:03:46.959><c> at</c>

00:03:47.270 --> 00:03:47.280 align:start position:0%
node we are looking at
 

00:03:47.280 --> 00:03:49.670 align:start position:0%
node we are looking at
its<00:03:47.599><c> children</c><00:03:48.080><c> basically</c><00:03:48.560><c> the</c><00:03:48.879><c> next</c><00:03:49.200><c> level</c><00:03:49.519><c> so</c>

00:03:49.670 --> 00:03:49.680 align:start position:0%
its children basically the next level so
 

00:03:49.680 --> 00:03:51.670 align:start position:0%
its children basically the next level so
we<00:03:49.840><c> can</c><00:03:50.000><c> get</c><00:03:50.239><c> that</c><00:03:50.480><c> by</c><00:03:50.720><c> taking</c><00:03:51.120><c> the</c><00:03:51.280><c> left</c><00:03:51.519><c> and</c>

00:03:51.670 --> 00:03:51.680 align:start position:0%
we can get that by taking the left and
 

00:03:51.680 --> 00:03:52.630 align:start position:0%
we can get that by taking the left and
right<00:03:52.000><c> child</c>

00:03:52.630 --> 00:03:52.640 align:start position:0%
right child
 

00:03:52.640 --> 00:03:56.390 align:start position:0%
right child
and<00:03:52.959><c> adding</c><00:03:53.360><c> them</c><00:03:53.840><c> to</c><00:03:54.080><c> our</c><00:03:54.400><c> q</c><00:03:54.959><c> and</c><00:03:55.200><c> removing</c>

00:03:56.390 --> 00:03:56.400 align:start position:0%
and adding them to our q and removing
 

00:03:56.400 --> 00:03:59.910 align:start position:0%
and adding them to our q and removing
the<00:03:56.799><c> leftmost</c><00:03:57.519><c> value</c><00:03:58.000><c> from</c><00:03:58.319><c> our</c><00:03:58.640><c> q</c><00:03:59.200><c> so</c><00:03:59.360><c> we</c><00:03:59.599><c> add</c>

00:03:59.910 --> 00:03:59.920 align:start position:0%
the leftmost value from our q so we add
 

00:03:59.920 --> 00:04:00.710 align:start position:0%
the leftmost value from our q so we add
the<00:04:00.239><c> two</c>

00:04:00.710 --> 00:04:00.720 align:start position:0%
the two
 

00:04:00.720 --> 00:04:03.030 align:start position:0%
the two
and<00:04:00.799><c> the</c><00:04:01.120><c> three</c><00:04:02.000><c> to</c><00:04:02.239><c> the</c><00:04:02.400><c> q</c><00:04:02.640><c> and</c><00:04:02.799><c> it's</c>

00:04:03.030 --> 00:04:03.040 align:start position:0%
and the three to the q and it's
 

00:04:03.040 --> 00:04:04.229 align:start position:0%
and the three to the q and it's
important<00:04:03.439><c> that</c><00:04:03.599><c> we</c><00:04:03.760><c> do</c><00:04:04.000><c> it</c>

00:04:04.229 --> 00:04:04.239 align:start position:0%
important that we do it
 

00:04:04.239 --> 00:04:06.390 align:start position:0%
important that we do it
in<00:04:04.560><c> order</c><00:04:04.879><c> right</c><00:04:05.120><c> the</c><00:04:05.280><c> left</c><00:04:05.599><c> and</c><00:04:05.920><c> right</c><00:04:06.239><c> the</c>

00:04:06.390 --> 00:04:06.400 align:start position:0%
in order right the left and right the
 

00:04:06.400 --> 00:04:07.509 align:start position:0%
in order right the left and right the
left<00:04:06.640><c> has</c><00:04:06.799><c> to</c><00:04:06.879><c> be</c><00:04:07.040><c> added</c>

00:04:07.509 --> 00:04:07.519 align:start position:0%
left has to be added
 

00:04:07.519 --> 00:04:10.070 align:start position:0%
left has to be added
first<00:04:07.920><c> and</c><00:04:08.159><c> then</c><00:04:08.400><c> the</c><00:04:08.640><c> right</c><00:04:09.200><c> because</c><00:04:09.840><c> we</c>

00:04:10.070 --> 00:04:10.080 align:start position:0%
first and then the right because we
 

00:04:10.080 --> 00:04:13.030 align:start position:0%
first and then the right because we
always<00:04:10.480><c> want</c><00:04:10.640><c> to</c><00:04:10.799><c> get</c><00:04:11.040><c> the</c><00:04:11.360><c> right</c><00:04:11.680><c> most</c><00:04:12.080><c> value</c>

00:04:13.030 --> 00:04:13.040 align:start position:0%
always want to get the right most value
 

00:04:13.040 --> 00:04:15.589 align:start position:0%
always want to get the right most value
when<00:04:13.280><c> we</c><00:04:13.840><c> you</c><00:04:14.000><c> know</c><00:04:14.159><c> add</c><00:04:14.400><c> to</c><00:04:14.560><c> our</c><00:04:14.720><c> result</c><00:04:15.439><c> so</c>

00:04:15.589 --> 00:04:15.599 align:start position:0%
when we you know add to our result so
 

00:04:15.599 --> 00:04:16.069 align:start position:0%
when we you know add to our result so
now

00:04:16.069 --> 00:04:16.079 align:start position:0%
now
 

00:04:16.079 --> 00:04:19.270 align:start position:0%
now
this<00:04:16.400><c> is</c><00:04:16.560><c> the</c><00:04:16.880><c> second</c><00:04:17.600><c> level</c><00:04:18.160><c> of</c><00:04:18.560><c> our</c>

00:04:19.270 --> 00:04:19.280 align:start position:0%
this is the second level of our
 

00:04:19.280 --> 00:04:21.110 align:start position:0%
this is the second level of our
uh<00:04:19.600><c> tree</c><00:04:19.919><c> right</c><00:04:20.160><c> so</c><00:04:20.320><c> what</c><00:04:20.479><c> are</c><00:04:20.560><c> we</c><00:04:20.720><c> going</c><00:04:20.799><c> to</c><00:04:20.880><c> do</c>

00:04:21.110 --> 00:04:21.120 align:start position:0%
uh tree right so what are we going to do
 

00:04:21.120 --> 00:04:22.469 align:start position:0%
uh tree right so what are we going to do
again<00:04:21.519><c> we're</c><00:04:21.680><c> just</c><00:04:21.840><c> going</c><00:04:21.919><c> to</c><00:04:22.079><c> take</c><00:04:22.240><c> the</c>

00:04:22.469 --> 00:04:22.479 align:start position:0%
again we're just going to take the
 

00:04:22.479 --> 00:04:24.710 align:start position:0%
again we're just going to take the
rightmost<00:04:23.040><c> value</c><00:04:23.440><c> in</c><00:04:23.600><c> this</c><00:04:23.759><c> case</c><00:04:24.000><c> it's</c><00:04:24.240><c> 3</c>

00:04:24.710 --> 00:04:24.720 align:start position:0%
rightmost value in this case it's 3
 

00:04:24.720 --> 00:04:27.270 align:start position:0%
rightmost value in this case it's 3
add<00:04:24.960><c> it</c><00:04:25.120><c> to</c><00:04:25.360><c> our</c><00:04:25.520><c> result</c><00:04:26.160><c> and</c><00:04:26.560><c> next</c><00:04:26.960><c> what</c><00:04:27.120><c> we're</c>

00:04:27.270 --> 00:04:27.280 align:start position:0%
add it to our result and next what we're
 

00:04:27.280 --> 00:04:28.629 align:start position:0%
add it to our result and next what we're
going<00:04:27.360><c> to</c><00:04:27.440><c> do</c><00:04:27.680><c> is</c><00:04:27.919><c> we're</c><00:04:28.080><c> going</c><00:04:28.240><c> to</c><00:04:28.320><c> look</c><00:04:28.560><c> at</c>

00:04:28.629 --> 00:04:28.639 align:start position:0%
going to do is we're going to look at
 

00:04:28.639 --> 00:04:29.110 align:start position:0%
going to do is we're going to look at
the

00:04:29.110 --> 00:04:29.120 align:start position:0%
the
 

00:04:29.120 --> 00:04:32.310 align:start position:0%
the
leftmost<00:04:29.919><c> value</c><00:04:30.880><c> pop</c><00:04:31.280><c> it</c><00:04:31.520><c> right</c><00:04:31.759><c> but</c><00:04:31.919><c> before</c>

00:04:32.310 --> 00:04:32.320 align:start position:0%
leftmost value pop it right but before
 

00:04:32.320 --> 00:04:34.950 align:start position:0%
leftmost value pop it right but before
we<00:04:32.639><c> pop</c><00:04:32.960><c> it</c><00:04:33.120><c> we</c><00:04:33.280><c> want</c><00:04:33.440><c> to</c><00:04:33.600><c> take</c><00:04:33.919><c> its</c><00:04:34.320><c> children</c>

00:04:34.950 --> 00:04:34.960 align:start position:0%
we pop it we want to take its children
 

00:04:34.960 --> 00:04:36.629 align:start position:0%
we pop it we want to take its children
notice<00:04:35.360><c> it</c><00:04:35.520><c> doesn't</c><00:04:35.759><c> have</c><00:04:35.919><c> a</c><00:04:36.080><c> left</c><00:04:36.400><c> child</c>

00:04:36.629 --> 00:04:36.639 align:start position:0%
notice it doesn't have a left child
 

00:04:36.639 --> 00:04:39.270 align:start position:0%
notice it doesn't have a left child
right<00:04:36.880><c> that's</c><00:04:37.280><c> null</c><00:04:37.919><c> and</c><00:04:38.160><c> the</c><00:04:38.320><c> right</c><00:04:38.639><c> child</c><00:04:38.960><c> is</c>

00:04:39.270 --> 00:04:39.280 align:start position:0%
right that's null and the right child is
 

00:04:39.280 --> 00:04:41.830 align:start position:0%
right that's null and the right child is
5.<00:04:39.680><c> so</c><00:04:39.840><c> we're</c><00:04:40.080><c> going</c><00:04:40.160><c> to</c><00:04:40.320><c> take</c><00:04:40.560><c> its</c><00:04:40.880><c> children</c>

00:04:41.830 --> 00:04:41.840 align:start position:0%
5. so we're going to take its children
 

00:04:41.840 --> 00:04:43.830 align:start position:0%
5. so we're going to take its children
and<00:04:42.160><c> add</c><00:04:42.479><c> them</c><00:04:42.560><c> to</c><00:04:42.720><c> the</c><00:04:42.960><c> queue</c><00:04:43.199><c> so</c><00:04:43.360><c> now</c><00:04:43.600><c> we're</c>

00:04:43.830 --> 00:04:43.840 align:start position:0%
and add them to the queue so now we're
 

00:04:43.840 --> 00:04:44.550 align:start position:0%
and add them to the queue so now we're
adding

00:04:44.550 --> 00:04:44.560 align:start position:0%
adding
 

00:04:44.560 --> 00:04:47.990 align:start position:0%
adding
5<00:04:45.120><c> to</c><00:04:45.280><c> the</c><00:04:45.520><c> q</c><00:04:46.000><c> so</c><00:04:46.160><c> we're</c><00:04:46.400><c> done</c><00:04:46.560><c> with</c><00:04:46.880><c> 2.</c><00:04:47.520><c> next</c><00:04:47.840><c> we</c>

00:04:47.990 --> 00:04:48.000 align:start position:0%
5 to the q so we're done with 2. next we
 

00:04:48.000 --> 00:04:49.270 align:start position:0%
5 to the q so we're done with 2. next we
have<00:04:48.160><c> to</c><00:04:48.400><c> remove</c>

00:04:49.270 --> 00:04:49.280 align:start position:0%
have to remove
 

00:04:49.280 --> 00:04:51.749 align:start position:0%
have to remove
3<00:04:49.680><c> from</c><00:04:49.919><c> our</c><00:04:50.080><c> cube</c><00:04:50.320><c> because</c><00:04:50.479><c> we're</c><00:04:51.280><c> done</c><00:04:51.520><c> with</c>

00:04:51.749 --> 00:04:51.759 align:start position:0%
3 from our cube because we're done with
 

00:04:51.759 --> 00:04:53.590 align:start position:0%
3 from our cube because we're done with
this<00:04:52.000><c> level</c><00:04:52.240><c> we</c><00:04:52.400><c> want</c><00:04:52.560><c> to</c><00:04:52.639><c> look</c><00:04:52.880><c> at</c><00:04:52.960><c> the</c><00:04:53.199><c> next</c>

00:04:53.590 --> 00:04:53.600 align:start position:0%
this level we want to look at the next
 

00:04:53.600 --> 00:04:54.150 align:start position:0%
this level we want to look at the next
level

00:04:54.150 --> 00:04:54.160 align:start position:0%
level
 

00:04:54.160 --> 00:04:57.350 align:start position:0%
level
so<00:04:54.320><c> we</c><00:04:54.479><c> remove</c><00:04:55.280><c> three</c><00:04:56.000><c> but</c><00:04:56.240><c> before</c><00:04:56.720><c> we</c><00:04:56.960><c> remove</c>

00:04:57.350 --> 00:04:57.360 align:start position:0%
so we remove three but before we remove
 

00:04:57.360 --> 00:04:59.510 align:start position:0%
so we remove three but before we remove
three<00:04:57.680><c> we</c><00:04:57.840><c> have</c><00:04:58.000><c> to</c><00:04:58.240><c> add</c><00:04:58.560><c> its</c><00:04:58.880><c> left</c><00:04:59.120><c> and</c><00:04:59.280><c> right</c>

00:04:59.510 --> 00:04:59.520 align:start position:0%
three we have to add its left and right
 

00:04:59.520 --> 00:04:59.909 align:start position:0%
three we have to add its left and right
child

00:04:59.909 --> 00:04:59.919 align:start position:0%
child
 

00:04:59.919 --> 00:05:01.430 align:start position:0%
child
notice<00:05:00.240><c> it</c><00:05:00.320><c> doesn't</c><00:05:00.560><c> have</c><00:05:00.720><c> a</c><00:05:00.800><c> left</c><00:05:01.039><c> child</c><00:05:01.280><c> but</c>

00:05:01.430 --> 00:05:01.440 align:start position:0%
notice it doesn't have a left child but
 

00:05:01.440 --> 00:05:03.189 align:start position:0%
notice it doesn't have a left child but
it<00:05:01.520><c> has</c><00:05:01.680><c> a</c><00:05:01.840><c> right</c><00:05:02.080><c> child</c><00:05:02.560><c> four</c><00:05:02.880><c> so</c><00:05:03.039><c> we're</c><00:05:03.120><c> going</c>

00:05:03.189 --> 00:05:03.199 align:start position:0%
it has a right child four so we're going
 

00:05:03.199 --> 00:05:04.790 align:start position:0%
it has a right child four so we're going
to<00:05:03.280><c> add</c><00:05:03.600><c> four</c><00:05:03.840><c> to</c><00:05:04.080><c> our</c><00:05:04.240><c> q</c>

00:05:04.790 --> 00:05:04.800 align:start position:0%
to add four to our q
 

00:05:04.800 --> 00:05:06.870 align:start position:0%
to add four to our q
so<00:05:05.199><c> now</c><00:05:05.680><c> look</c><00:05:05.919><c> at</c><00:05:06.000><c> our</c><00:05:06.160><c> cube</c><00:05:06.400><c> we</c><00:05:06.479><c> have</c><00:05:06.639><c> two</c>

00:05:06.870 --> 00:05:06.880 align:start position:0%
so now look at our cube we have two
 

00:05:06.880 --> 00:05:08.310 align:start position:0%
so now look at our cube we have two
elements<00:05:07.360><c> and</c><00:05:07.440><c> these</c><00:05:07.680><c> two</c><00:05:07.919><c> elements</c>

00:05:08.310 --> 00:05:08.320 align:start position:0%
elements and these two elements
 

00:05:08.320 --> 00:05:10.710 align:start position:0%
elements and these two elements
represent<00:05:08.960><c> the</c><00:05:09.280><c> third</c><00:05:09.759><c> level</c><00:05:10.160><c> so</c><00:05:10.400><c> what</c><00:05:10.560><c> we're</c>

00:05:10.710 --> 00:05:10.720 align:start position:0%
represent the third level so what we're
 

00:05:10.720 --> 00:05:11.189 align:start position:0%
represent the third level so what we're
going<00:05:10.800><c> to</c><00:05:10.880><c> do</c>

00:05:11.189 --> 00:05:11.199 align:start position:0%
going to do
 

00:05:11.199 --> 00:05:14.230 align:start position:0%
going to do
now<00:05:11.840><c> is</c><00:05:12.080><c> take</c><00:05:12.479><c> the</c><00:05:12.800><c> rightmost</c><00:05:13.360><c> value</c><00:05:13.919><c> once</c>

00:05:14.230 --> 00:05:14.240 align:start position:0%
now is take the rightmost value once
 

00:05:14.240 --> 00:05:14.710 align:start position:0%
now is take the rightmost value once
again

00:05:14.710 --> 00:05:14.720 align:start position:0%
again
 

00:05:14.720 --> 00:05:16.710 align:start position:0%
again
in<00:05:14.880><c> our</c><00:05:15.039><c> queue</c><00:05:15.360><c> and</c><00:05:15.600><c> add</c><00:05:15.840><c> it</c><00:05:15.919><c> to</c><00:05:16.080><c> our</c><00:05:16.240><c> result</c>

00:05:16.710 --> 00:05:16.720 align:start position:0%
in our queue and add it to our result
 

00:05:16.720 --> 00:05:17.749 align:start position:0%
in our queue and add it to our result
because<00:05:17.199><c> that's</c>

00:05:17.749 --> 00:05:17.759 align:start position:0%
because that's
 

00:05:17.759 --> 00:05:20.790 align:start position:0%
because that's
the<00:05:18.000><c> rightmost</c><00:05:18.560><c> value</c><00:05:19.039><c> in</c><00:05:19.600><c> this</c><00:05:20.240><c> level</c>

00:05:20.790 --> 00:05:20.800 align:start position:0%
the rightmost value in this level
 

00:05:20.800 --> 00:05:22.629 align:start position:0%
the rightmost value in this level
of<00:05:20.960><c> the</c><00:05:21.280><c> tree</c><00:05:22.000><c> and</c><00:05:22.160><c> now</c><00:05:22.320><c> we're</c><00:05:22.479><c> going</c><00:05:22.560><c> to</c>

00:05:22.629 --> 00:05:22.639 align:start position:0%
of the tree and now we're going to
 

00:05:22.639 --> 00:05:24.629 align:start position:0%
of the tree and now we're going to
repeat<00:05:23.039><c> that</c><00:05:23.280><c> process</c><00:05:23.680><c> so</c><00:05:23.840><c> for</c><00:05:24.160><c> five</c><00:05:24.479><c> we're</c>

00:05:24.629 --> 00:05:24.639 align:start position:0%
repeat that process so for five we're
 

00:05:24.639 --> 00:05:26.629 align:start position:0%
repeat that process so for five we're
done<00:05:24.880><c> looking</c><00:05:25.199><c> at</c><00:05:25.360><c> five</c><00:05:25.680><c> but</c><00:05:25.840><c> we</c><00:05:26.000><c> have</c><00:05:26.240><c> to</c><00:05:26.400><c> look</c>

00:05:26.629 --> 00:05:26.639 align:start position:0%
done looking at five but we have to look
 

00:05:26.639 --> 00:05:28.550 align:start position:0%
done looking at five but we have to look
at<00:05:26.800><c> its</c><00:05:27.039><c> left</c><00:05:27.280><c> and</c><00:05:27.440><c> right</c><00:05:27.600><c> child</c><00:05:27.919><c> it</c><00:05:28.000><c> has</c><00:05:28.240><c> one</c>

00:05:28.550 --> 00:05:28.560 align:start position:0%
at its left and right child it has one
 

00:05:28.560 --> 00:05:28.950 align:start position:0%
at its left and right child it has one
child

00:05:28.950 --> 00:05:28.960 align:start position:0%
child
 

00:05:28.960 --> 00:05:32.150 align:start position:0%
child
seven<00:05:29.280><c> so</c><00:05:29.440><c> we</c><00:05:29.600><c> remove</c><00:05:30.479><c> five</c><00:05:31.199><c> and</c><00:05:31.360><c> we</c><00:05:31.680><c> add</c>

00:05:32.150 --> 00:05:32.160 align:start position:0%
seven so we remove five and we add
 

00:05:32.160 --> 00:05:36.230 align:start position:0%
seven so we remove five and we add
seven<00:05:33.039><c> to</c><00:05:33.520><c> our</c><00:05:34.320><c> q</c><00:05:34.960><c> and</c><00:05:35.039><c> we</c><00:05:35.280><c> also</c><00:05:35.520><c> look</c><00:05:35.759><c> at</c><00:05:35.919><c> four</c>

00:05:36.230 --> 00:05:36.240 align:start position:0%
seven to our q and we also look at four
 

00:05:36.240 --> 00:05:36.550 align:start position:0%
seven to our q and we also look at four
so

00:05:36.550 --> 00:05:36.560 align:start position:0%
so
 

00:05:36.560 --> 00:05:38.550 align:start position:0%
so
we're<00:05:36.800><c> done</c><00:05:37.039><c> looking</c><00:05:37.360><c> at</c><00:05:37.520><c> 4</c><00:05:37.680><c> right</c><00:05:37.919><c> so</c><00:05:38.080><c> we</c><00:05:38.240><c> pop</c>

00:05:38.550 --> 00:05:38.560 align:start position:0%
we're done looking at 4 right so we pop
 

00:05:38.560 --> 00:05:40.150 align:start position:0%
we're done looking at 4 right so we pop
it<00:05:38.639><c> but</c><00:05:38.800><c> before</c><00:05:39.199><c> we</c><00:05:39.360><c> pop</c><00:05:39.600><c> it</c><00:05:39.680><c> we</c><00:05:39.759><c> want</c><00:05:39.919><c> to</c><00:05:40.000><c> look</c>

00:05:40.150 --> 00:05:40.160 align:start position:0%
it but before we pop it we want to look
 

00:05:40.160 --> 00:05:41.510 align:start position:0%
it but before we pop it we want to look
at<00:05:40.320><c> its</c><00:05:40.560><c> children</c><00:05:41.039><c> notice</c>

00:05:41.510 --> 00:05:41.520 align:start position:0%
at its children notice
 

00:05:41.520 --> 00:05:43.909 align:start position:0%
at its children notice
both<00:05:41.840><c> of</c><00:05:41.919><c> the</c><00:05:42.080><c> children</c><00:05:42.880><c> are</c><00:05:43.199><c> null</c><00:05:43.600><c> so</c>

00:05:43.909 --> 00:05:43.919 align:start position:0%
both of the children are null so
 

00:05:43.919 --> 00:05:45.990 align:start position:0%
both of the children are null so
basically<00:05:44.479><c> we've</c><00:05:44.720><c> reached</c><00:05:45.039><c> our</c><00:05:45.280><c> base</c><00:05:45.600><c> case</c>

00:05:45.990 --> 00:05:46.000 align:start position:0%
basically we've reached our base case
 

00:05:46.000 --> 00:05:48.629 align:start position:0%
basically we've reached our base case
we<00:05:46.400><c> don't</c><00:05:46.800><c> end</c><00:05:47.120><c> up</c><00:05:47.360><c> adding</c><00:05:47.759><c> more</c><00:05:48.160><c> elements</c><00:05:48.560><c> to</c>

00:05:48.629 --> 00:05:48.639 align:start position:0%
we don't end up adding more elements to
 

00:05:48.639 --> 00:05:49.110 align:start position:0%
we don't end up adding more elements to
the<00:05:48.800><c> q</c>

00:05:49.110 --> 00:05:49.120 align:start position:0%
the q
 

00:05:49.120 --> 00:05:51.670 align:start position:0%
the q
in<00:05:49.199><c> this</c><00:05:49.440><c> case</c><00:05:50.240><c> and</c><00:05:50.479><c> now</c><00:05:50.720><c> there's</c><00:05:51.039><c> only</c><00:05:51.360><c> a</c>

00:05:51.670 --> 00:05:51.680 align:start position:0%
in this case and now there's only a
 

00:05:51.680 --> 00:05:52.230 align:start position:0%
in this case and now there's only a
single

00:05:52.230 --> 00:05:52.240 align:start position:0%
single
 

00:05:52.240 --> 00:05:55.189 align:start position:0%
single
element<00:05:52.720><c> remaining</c><00:05:53.440><c> in</c><00:05:53.840><c> our</c><00:05:54.240><c> queue</c><00:05:54.720><c> and</c><00:05:54.880><c> that</c>

00:05:55.189 --> 00:05:55.199 align:start position:0%
element remaining in our queue and that
 

00:05:55.199 --> 00:05:57.189 align:start position:0%
element remaining in our queue and that
element<00:05:55.600><c> represents</c><00:05:56.240><c> the</c><00:05:56.560><c> fourth</c>

00:05:57.189 --> 00:05:57.199 align:start position:0%
element represents the fourth
 

00:05:57.199 --> 00:06:00.629 align:start position:0%
element represents the fourth
level<00:05:57.759><c> of</c><00:05:58.000><c> our</c><00:05:58.319><c> tree</c><00:05:59.039><c> and</c><00:05:59.199><c> the</c><00:05:59.440><c> rightmost</c><00:06:00.080><c> node</c>

00:06:00.629 --> 00:06:00.639 align:start position:0%
level of our tree and the rightmost node
 

00:06:00.639 --> 00:06:03.510 align:start position:0%
level of our tree and the rightmost node
in<00:06:01.039><c> that</c><00:06:01.280><c> level</c><00:06:01.759><c> is</c><00:06:02.000><c> seven</c><00:06:02.560><c> so</c><00:06:02.720><c> we</c><00:06:02.880><c> can</c><00:06:03.120><c> add</c>

00:06:03.510 --> 00:06:03.520 align:start position:0%
in that level is seven so we can add
 

00:06:03.520 --> 00:06:05.110 align:start position:0%
in that level is seven so we can add
seven<00:06:03.919><c> to</c><00:06:04.080><c> our</c><00:06:04.240><c> result</c>

00:06:05.110 --> 00:06:05.120 align:start position:0%
seven to our result
 

00:06:05.120 --> 00:06:07.029 align:start position:0%
seven to our result
and<00:06:05.440><c> we</c><00:06:05.600><c> know</c><00:06:05.759><c> we</c><00:06:06.000><c> still</c><00:06:06.160><c> have</c><00:06:06.240><c> to</c><00:06:06.400><c> remove</c>

00:06:07.029 --> 00:06:07.039 align:start position:0%
and we know we still have to remove
 

00:06:07.039 --> 00:06:09.189 align:start position:0%
and we know we still have to remove
seven<00:06:07.360><c> now</c><00:06:07.600><c> right</c><00:06:07.759><c> so</c><00:06:07.919><c> remove</c><00:06:08.479><c> seven</c><00:06:08.800><c> from</c><00:06:09.039><c> our</c>

00:06:09.189 --> 00:06:09.199 align:start position:0%
seven now right so remove seven from our
 

00:06:09.199 --> 00:06:09.590 align:start position:0%
seven now right so remove seven from our
q

00:06:09.590 --> 00:06:09.600 align:start position:0%
q
 

00:06:09.600 --> 00:06:11.749 align:start position:0%
q
notice<00:06:10.000><c> it</c><00:06:10.160><c> didn't</c><00:06:10.479><c> have</c><00:06:10.800><c> any</c><00:06:11.039><c> children</c><00:06:11.520><c> right</c>

00:06:11.749 --> 00:06:11.759 align:start position:0%
notice it didn't have any children right
 

00:06:11.759 --> 00:06:13.029 align:start position:0%
notice it didn't have any children right
both<00:06:12.000><c> of</c><00:06:12.080><c> the</c><00:06:12.240><c> children</c><00:06:12.639><c> were</c>

00:06:13.029 --> 00:06:13.039 align:start position:0%
both of the children were
 

00:06:13.039 --> 00:06:15.510 align:start position:0%
both of the children were
null<00:06:13.520><c> so</c><00:06:13.759><c> we've</c><00:06:14.000><c> reached</c><00:06:14.319><c> our</c><00:06:14.479><c> base</c><00:06:14.720><c> case</c><00:06:15.199><c> we</c>

00:06:15.510 --> 00:06:15.520 align:start position:0%
null so we've reached our base case we
 

00:06:15.520 --> 00:06:16.469 align:start position:0%
null so we've reached our base case we
cannot<00:06:16.000><c> add</c>

00:06:16.469 --> 00:06:16.479 align:start position:0%
cannot add
 

00:06:16.479 --> 00:06:18.629 align:start position:0%
cannot add
any<00:06:16.720><c> more</c><00:06:16.960><c> elements</c><00:06:17.360><c> to</c><00:06:17.520><c> the</c><00:06:17.759><c> queue</c><00:06:18.160><c> therefore</c>

00:06:18.629 --> 00:06:18.639 align:start position:0%
any more elements to the queue therefore
 

00:06:18.639 --> 00:06:19.990 align:start position:0%
any more elements to the queue therefore
the<00:06:18.960><c> queue</c><00:06:19.360><c> is</c><00:06:19.520><c> now</c>

00:06:19.990 --> 00:06:20.000 align:start position:0%
the queue is now
 

00:06:20.000 --> 00:06:22.550 align:start position:0%
the queue is now
empty<00:06:20.720><c> so</c><00:06:21.039><c> now</c><00:06:21.280><c> we</c><00:06:21.440><c> can</c><00:06:21.680><c> stop</c><00:06:22.080><c> running</c><00:06:22.400><c> our</c>

00:06:22.550 --> 00:06:22.560 align:start position:0%
empty so now we can stop running our
 

00:06:22.560 --> 00:06:24.390 align:start position:0%
empty so now we can stop running our
algorithm<00:06:23.039><c> we</c><00:06:23.199><c> know</c><00:06:23.440><c> that</c><00:06:23.600><c> our</c><00:06:23.840><c> result</c>

00:06:24.390 --> 00:06:24.400 align:start position:0%
algorithm we know that our result
 

00:06:24.400 --> 00:06:27.029 align:start position:0%
algorithm we know that our result
is<00:06:24.560><c> complete</c><00:06:25.039><c> we</c><00:06:25.199><c> have</c><00:06:25.440><c> no</c><00:06:25.680><c> more</c><00:06:26.000><c> nodes</c><00:06:26.720><c> left</c>

00:06:27.029 --> 00:06:27.039 align:start position:0%
is complete we have no more nodes left
 

00:06:27.039 --> 00:06:28.150 align:start position:0%
is complete we have no more nodes left
to<00:06:27.280><c> traverse</c>

00:06:28.150 --> 00:06:28.160 align:start position:0%
to traverse
 

00:06:28.160 --> 00:06:31.430 align:start position:0%
to traverse
so<00:06:28.400><c> now</c><00:06:28.720><c> let's</c><00:06:29.039><c> translate</c><00:06:29.600><c> this</c><00:06:29.919><c> into</c><00:06:30.240><c> code</c><00:06:31.120><c> so</c>

00:06:31.430 --> 00:06:31.440 align:start position:0%
so now let's translate this into code so
 

00:06:31.440 --> 00:06:32.790 align:start position:0%
so now let's translate this into code so
i'm<00:06:31.600><c> going</c><00:06:31.680><c> to</c><00:06:31.840><c> initialize</c><00:06:32.479><c> a</c>

00:06:32.790 --> 00:06:32.800 align:start position:0%
i'm going to initialize a
 

00:06:32.800 --> 00:06:35.909 align:start position:0%
i'm going to initialize a
empty<00:06:33.120><c> result</c><00:06:33.919><c> i'm</c><00:06:34.240><c> also</c><00:06:34.639><c> going</c><00:06:34.880><c> to</c><00:06:35.199><c> have</c><00:06:35.520><c> a</c>

00:06:35.909 --> 00:06:35.919 align:start position:0%
empty result i'm also going to have a
 

00:06:35.919 --> 00:06:39.029 align:start position:0%
empty result i'm also going to have a
q<00:06:36.319><c> so</c><00:06:36.720><c> in</c><00:06:36.960><c> python</c><00:06:37.440><c> we</c><00:06:37.600><c> can</c><00:06:37.759><c> do</c><00:06:38.000><c> that</c><00:06:38.240><c> like</c><00:06:38.560><c> this</c>

00:06:39.029 --> 00:06:39.039 align:start position:0%
q so in python we can do that like this
 

00:06:39.039 --> 00:06:41.350 align:start position:0%
q so in python we can do that like this
it's<00:06:39.280><c> called</c><00:06:39.680><c> a</c><00:06:40.000><c> dec</c><00:06:40.639><c> and</c><00:06:40.880><c> i'm</c><00:06:41.039><c> going</c><00:06:41.120><c> to</c>

00:06:41.350 --> 00:06:41.360 align:start position:0%
it's called a dec and i'm going to
 

00:06:41.360 --> 00:06:43.189 align:start position:0%
it's called a dec and i'm going to
initialize<00:06:42.080><c> it</c><00:06:42.240><c> just</c><00:06:42.479><c> like</c><00:06:42.639><c> i</c><00:06:42.800><c> did</c><00:06:42.960><c> in</c><00:06:43.120><c> the</c>

00:06:43.189 --> 00:06:43.199 align:start position:0%
initialize it just like i did in the
 

00:06:43.199 --> 00:06:44.870 align:start position:0%
initialize it just like i did in the
picture<00:06:43.520><c> with</c><00:06:43.680><c> a</c><00:06:43.919><c> single</c><00:06:44.319><c> element</c>

00:06:44.870 --> 00:06:44.880 align:start position:0%
picture with a single element
 

00:06:44.880 --> 00:06:46.950 align:start position:0%
picture with a single element
and<00:06:45.120><c> that's</c><00:06:45.360><c> going</c><00:06:45.520><c> to</c><00:06:45.600><c> be</c><00:06:45.919><c> root</c><00:06:46.560><c> now</c><00:06:46.720><c> it's</c>

00:06:46.950 --> 00:06:46.960 align:start position:0%
and that's going to be root now it's
 

00:06:46.960 --> 00:06:48.150 align:start position:0%
and that's going to be root now it's
possible<00:06:47.440><c> that</c><00:06:47.680><c> root</c>

00:06:48.150 --> 00:06:48.160 align:start position:0%
possible that root
 

00:06:48.160 --> 00:06:50.230 align:start position:0%
possible that root
could<00:06:48.400><c> be</c><00:06:48.720><c> null</c><00:06:49.199><c> so</c><00:06:49.520><c> technically</c><00:06:50.000><c> it's</c>

00:06:50.230 --> 00:06:50.240 align:start position:0%
could be null so technically it's
 

00:06:50.240 --> 00:06:51.270 align:start position:0%
could be null so technically it's
possible<00:06:50.639><c> that</c><00:06:50.800><c> our</c><00:06:50.960><c> q</c>

00:06:51.270 --> 00:06:51.280 align:start position:0%
possible that our q
 

00:06:51.280 --> 00:06:52.870 align:start position:0%
possible that our q
could<00:06:51.520><c> have</c><00:06:51.840><c> null</c><00:06:52.080><c> values</c><00:06:52.479><c> and</c><00:06:52.560><c> i'm</c><00:06:52.639><c> going</c><00:06:52.720><c> to</c>

00:06:52.870 --> 00:06:52.880 align:start position:0%
could have null values and i'm going to
 

00:06:52.880 --> 00:06:54.950 align:start position:0%
could have null values and i'm going to
show<00:06:53.120><c> you</c><00:06:53.280><c> how</c><00:06:53.520><c> i'm</c><00:06:53.680><c> going</c><00:06:53.759><c> to</c><00:06:53.919><c> handle</c><00:06:54.319><c> that</c>

00:06:54.950 --> 00:06:54.960 align:start position:0%
show you how i'm going to handle that
 

00:06:54.960 --> 00:06:57.350 align:start position:0%
show you how i'm going to handle that
so<00:06:55.280><c> while</c><00:06:55.680><c> the</c><00:06:55.919><c> queue</c><00:06:56.319><c> is</c><00:06:56.479><c> non-empty</c><00:06:57.199><c> that</c>

00:06:57.350 --> 00:06:57.360 align:start position:0%
so while the queue is non-empty that
 

00:06:57.360 --> 00:06:58.150 align:start position:0%
so while the queue is non-empty that
means<00:06:57.680><c> we</c><00:06:57.840><c> can</c>

00:06:58.150 --> 00:06:58.160 align:start position:0%
means we can
 

00:06:58.160 --> 00:07:00.870 align:start position:0%
means we can
pop<00:06:58.720><c> elements</c><00:06:59.199><c> from</c><00:06:59.360><c> the</c><00:06:59.599><c> queue</c><00:07:00.240><c> so</c><00:07:00.560><c> i'm</c><00:07:00.720><c> going</c>

00:07:00.870 --> 00:07:00.880 align:start position:0%
pop elements from the queue so i'm going
 

00:07:00.880 --> 00:07:01.430 align:start position:0%
pop elements from the queue so i'm going
to<00:07:01.039><c> get</c>

00:07:01.430 --> 00:07:01.440 align:start position:0%
to get
 

00:07:01.440 --> 00:07:04.870 align:start position:0%
to get
the<00:07:01.919><c> right</c><00:07:02.479><c> side</c><00:07:03.280><c> element</c><00:07:03.919><c> from</c><00:07:04.240><c> this</c><00:07:04.560><c> current</c>

00:07:04.870 --> 00:07:04.880 align:start position:0%
the right side element from this current
 

00:07:04.880 --> 00:07:06.629 align:start position:0%
the right side element from this current
level<00:07:05.199><c> i'm</c><00:07:05.360><c> initially</c><00:07:05.759><c> going</c><00:07:05.919><c> to</c><00:07:06.080><c> set</c><00:07:06.240><c> it</c><00:07:06.400><c> to</c>

00:07:06.629 --> 00:07:06.639 align:start position:0%
level i'm initially going to set it to
 

00:07:06.639 --> 00:07:07.350 align:start position:0%
level i'm initially going to set it to
null

00:07:07.350 --> 00:07:07.360 align:start position:0%
null
 

00:07:07.360 --> 00:07:09.749 align:start position:0%
null
and<00:07:07.599><c> i'm</c><00:07:07.759><c> going</c><00:07:07.919><c> to</c><00:07:08.000><c> get</c><00:07:08.160><c> the</c><00:07:08.639><c> current</c><00:07:09.360><c> queue</c>

00:07:09.749 --> 00:07:09.759 align:start position:0%
and i'm going to get the current queue
 

00:07:09.759 --> 00:07:10.469 align:start position:0%
and i'm going to get the current queue
length

00:07:10.469 --> 00:07:10.479 align:start position:0%
length
 

00:07:10.479 --> 00:07:13.029 align:start position:0%
length
right<00:07:10.720><c> the</c><00:07:11.039><c> current</c><00:07:11.520><c> length</c><00:07:12.000><c> of</c><00:07:12.160><c> the</c><00:07:12.400><c> queue</c><00:07:12.800><c> so</c>

00:07:13.029 --> 00:07:13.039 align:start position:0%
right the current length of the queue so
 

00:07:13.039 --> 00:07:14.070 align:start position:0%
right the current length of the queue so
right<00:07:13.280><c> now</c><00:07:13.520><c> imagine</c>

00:07:14.070 --> 00:07:14.080 align:start position:0%
right now imagine
 

00:07:14.080 --> 00:07:16.790 align:start position:0%
right now imagine
it's<00:07:14.319><c> just</c><00:07:14.560><c> a</c><00:07:14.720><c> single</c><00:07:15.280><c> level</c><00:07:15.680><c> right</c><00:07:15.919><c> our</c><00:07:16.160><c> q</c><00:07:16.560><c> at</c>

00:07:16.790 --> 00:07:16.800 align:start position:0%
it's just a single level right our q at
 

00:07:16.800 --> 00:07:18.309 align:start position:0%
it's just a single level right our q at
any<00:07:17.039><c> given</c><00:07:17.360><c> point</c><00:07:17.680><c> contains</c>

00:07:18.309 --> 00:07:18.319 align:start position:0%
any given point contains
 

00:07:18.319 --> 00:07:21.189 align:start position:0%
any given point contains
one<00:07:18.720><c> level</c><00:07:19.120><c> at</c><00:07:19.280><c> a</c><00:07:19.440><c> time</c><00:07:19.680><c> so</c><00:07:20.080><c> for</c><00:07:20.240><c> this</c><00:07:20.720><c> level</c>

00:07:21.189 --> 00:07:21.199 align:start position:0%
one level at a time so for this level
 

00:07:21.199 --> 00:07:22.550 align:start position:0%
one level at a time so for this level
i'm<00:07:21.360><c> gonna</c><00:07:21.520><c> get</c><00:07:21.680><c> the</c><00:07:21.919><c> length</c>

00:07:22.550 --> 00:07:22.560 align:start position:0%
i'm gonna get the length
 

00:07:22.560 --> 00:07:24.710 align:start position:0%
i'm gonna get the length
and<00:07:22.800><c> then</c><00:07:23.039><c> what</c><00:07:23.199><c> i'm</c><00:07:23.280><c> gonna</c><00:07:23.520><c> do</c><00:07:23.759><c> is</c><00:07:24.000><c> go</c><00:07:24.240><c> through</c>

00:07:24.710 --> 00:07:24.720 align:start position:0%
and then what i'm gonna do is go through
 

00:07:24.720 --> 00:07:25.909 align:start position:0%
and then what i'm gonna do is go through
every<00:07:25.199><c> element</c>

00:07:25.909 --> 00:07:25.919 align:start position:0%
every element
 

00:07:25.919 --> 00:07:29.270 align:start position:0%
every element
in<00:07:26.400><c> this</c><00:07:26.720><c> level</c><00:07:27.039><c> so</c><00:07:27.280><c> for</c><00:07:27.599><c> only</c><00:07:28.080><c> q</c><00:07:28.639><c> length</c><00:07:29.120><c> right</c>

00:07:29.270 --> 00:07:29.280 align:start position:0%
in this level so for only q length right
 

00:07:29.280 --> 00:07:30.230 align:start position:0%
in this level so for only q length right
the<00:07:29.520><c> initial</c>

00:07:30.230 --> 00:07:30.240 align:start position:0%
the initial
 

00:07:30.240 --> 00:07:32.550 align:start position:0%
the initial
length<00:07:30.800><c> because</c><00:07:31.039><c> we</c><00:07:31.280><c> know</c><00:07:31.440><c> this</c><00:07:31.759><c> q</c><00:07:32.080><c> is</c><00:07:32.319><c> going</c>

00:07:32.550 --> 00:07:32.560 align:start position:0%
length because we know this q is going
 

00:07:32.560 --> 00:07:33.830 align:start position:0%
length because we know this q is going
to<00:07:32.720><c> continuously</c><00:07:33.520><c> be</c>

00:07:33.830 --> 00:07:33.840 align:start position:0%
to continuously be
 

00:07:33.840 --> 00:07:36.550 align:start position:0%
to continuously be
updated<00:07:34.800><c> so</c><00:07:35.280><c> i'm</c><00:07:35.520><c> going</c><00:07:35.599><c> to</c><00:07:35.759><c> go</c><00:07:36.000><c> through</c><00:07:36.240><c> every</c>

00:07:36.550 --> 00:07:36.560 align:start position:0%
updated so i'm going to go through every
 

00:07:36.560 --> 00:07:37.189 align:start position:0%
updated so i'm going to go through every
element

00:07:37.189 --> 00:07:37.199 align:start position:0%
element
 

00:07:37.199 --> 00:07:40.469 align:start position:0%
element
and<00:07:37.360><c> i'm</c><00:07:37.520><c> going</c><00:07:37.599><c> to</c><00:07:37.759><c> pop</c><00:07:38.080><c> it</c><00:07:38.319><c> so</c><00:07:39.120><c> q</c><00:07:39.680><c> pop</c>

00:07:40.469 --> 00:07:40.479 align:start position:0%
and i'm going to pop it so q pop
 

00:07:40.479 --> 00:07:42.230 align:start position:0%
and i'm going to pop it so q pop
left<00:07:40.880><c> right</c><00:07:41.360><c> we</c><00:07:41.520><c> know</c><00:07:41.680><c> we're</c><00:07:41.840><c> popping</c>

00:07:42.230 --> 00:07:42.240 align:start position:0%
left right we know we're popping
 

00:07:42.240 --> 00:07:44.230 align:start position:0%
left right we know we're popping
elements<00:07:42.720><c> from</c><00:07:42.880><c> the</c><00:07:43.199><c> left</c><00:07:43.520><c> and</c><00:07:43.599><c> we're</c><00:07:43.840><c> adding</c>

00:07:44.230 --> 00:07:44.240 align:start position:0%
elements from the left and we're adding
 

00:07:44.240 --> 00:07:45.830 align:start position:0%
elements from the left and we're adding
elements<00:07:44.720><c> to</c><00:07:44.879><c> the</c><00:07:45.120><c> right</c>

00:07:45.830 --> 00:07:45.840 align:start position:0%
elements to the right
 

00:07:45.840 --> 00:07:48.150 align:start position:0%
elements to the right
now<00:07:46.000><c> we</c><00:07:46.240><c> know</c><00:07:46.560><c> the</c><00:07:46.800><c> node</c><00:07:47.199><c> actually</c><00:07:47.520><c> could</c><00:07:47.759><c> be</c>

00:07:48.150 --> 00:07:48.160 align:start position:0%
now we know the node actually could be
 

00:07:48.160 --> 00:07:49.909 align:start position:0%
now we know the node actually could be
null<00:07:48.479><c> so</c><00:07:48.639><c> what</c><00:07:48.800><c> i'm</c><00:07:48.960><c> going</c><00:07:49.039><c> to</c><00:07:49.199><c> check</c><00:07:49.520><c> is</c>

00:07:49.909 --> 00:07:49.919 align:start position:0%
null so what i'm going to check is
 

00:07:49.919 --> 00:07:52.629 align:start position:0%
null so what i'm going to check is
if<00:07:50.160><c> node</c><00:07:50.560><c> is</c><00:07:50.800><c> not</c><00:07:51.039><c> null</c><00:07:51.520><c> if</c><00:07:51.680><c> it</c><00:07:51.919><c> is</c><00:07:52.160><c> null</c><00:07:52.479><c> then</c>

00:07:52.629 --> 00:07:52.639 align:start position:0%
if node is not null if it is null then
 

00:07:52.639 --> 00:07:53.990 align:start position:0%
if node is not null if it is null then
we<00:07:52.720><c> can</c><00:07:52.879><c> just</c><00:07:53.039><c> go</c><00:07:53.199><c> to</c><00:07:53.360><c> the</c><00:07:53.599><c> next</c>

00:07:53.990 --> 00:07:54.000 align:start position:0%
we can just go to the next
 

00:07:54.000 --> 00:07:57.110 align:start position:0%
we can just go to the next
iteration<00:07:54.960><c> of</c><00:07:55.120><c> the</c><00:07:55.360><c> loop</c><00:07:56.160><c> so</c><00:07:56.400><c> if</c><00:07:56.560><c> it's</c><00:07:56.800><c> not</c>

00:07:57.110 --> 00:07:57.120 align:start position:0%
iteration of the loop so if it's not
 

00:07:57.120 --> 00:07:59.670 align:start position:0%
iteration of the loop so if it's not
null<00:07:57.440><c> what</c><00:07:57.599><c> i'm</c><00:07:57.759><c> going</c><00:07:57.840><c> to</c><00:07:58.000><c> do</c><00:07:58.319><c> is</c><00:07:58.639><c> update</c><00:07:59.199><c> our</c>

00:07:59.670 --> 00:07:59.680 align:start position:0%
null what i'm going to do is update our
 

00:07:59.680 --> 00:08:01.510 align:start position:0%
null what i'm going to do is update our
right<00:08:00.160><c> side</c>

00:08:01.510 --> 00:08:01.520 align:start position:0%
right side
 

00:08:01.520 --> 00:08:04.629 align:start position:0%
right side
to<00:08:02.160><c> that</c><00:08:02.400><c> node</c><00:08:02.800><c> so</c><00:08:03.039><c> you</c><00:08:03.199><c> can</c><00:08:03.440><c> see</c><00:08:03.759><c> that</c><00:08:04.319><c> after</c>

00:08:04.629 --> 00:08:04.639 align:start position:0%
to that node so you can see that after
 

00:08:04.639 --> 00:08:05.589 align:start position:0%
to that node so you can see that after
this<00:08:04.879><c> entire</c>

00:08:05.589 --> 00:08:05.599 align:start position:0%
this entire
 

00:08:05.599 --> 00:08:07.990 align:start position:0%
this entire
loop<00:08:05.919><c> is</c><00:08:06.080><c> done</c><00:08:06.400><c> executing</c><00:08:07.120><c> what</c><00:08:07.440><c> right</c><00:08:07.759><c> side</c>

00:08:07.990 --> 00:08:08.000 align:start position:0%
loop is done executing what right side
 

00:08:08.000 --> 00:08:08.950 align:start position:0%
loop is done executing what right side
is<00:08:08.160><c> going</c><00:08:08.319><c> to</c><00:08:08.560><c> have</c>

00:08:08.950 --> 00:08:08.960 align:start position:0%
is going to have
 

00:08:08.960 --> 00:08:11.990 align:start position:0%
is going to have
is<00:08:09.199><c> the</c><00:08:09.599><c> last</c><00:08:10.240><c> node</c><00:08:10.720><c> that</c><00:08:10.960><c> was</c><00:08:11.360><c> in</c>

00:08:11.990 --> 00:08:12.000 align:start position:0%
is the last node that was in
 

00:08:12.000 --> 00:08:15.029 align:start position:0%
is the last node that was in
this<00:08:12.560><c> current</c><00:08:13.120><c> level</c><00:08:13.680><c> of</c><00:08:13.840><c> the</c><00:08:14.080><c> queue</c><00:08:14.800><c> and</c>

00:08:15.029 --> 00:08:15.039 align:start position:0%
this current level of the queue and
 

00:08:15.039 --> 00:08:16.390 align:start position:0%
this current level of the queue and
since<00:08:15.360><c> this</c><00:08:15.599><c> node</c><00:08:15.919><c> is</c><00:08:16.080><c> not</c>

00:08:16.390 --> 00:08:16.400 align:start position:0%
since this node is not
 

00:08:16.400 --> 00:08:18.629 align:start position:0%
since this node is not
null<00:08:16.800><c> i'm</c><00:08:16.960><c> just</c><00:08:17.120><c> going</c><00:08:17.199><c> to</c><00:08:17.360><c> take</c><00:08:17.759><c> its</c><00:08:18.080><c> children</c>

00:08:18.629 --> 00:08:18.639 align:start position:0%
null i'm just going to take its children
 

00:08:18.639 --> 00:08:19.430 align:start position:0%
null i'm just going to take its children
so

00:08:19.430 --> 00:08:19.440 align:start position:0%
so
 

00:08:19.440 --> 00:08:21.749 align:start position:0%
so
so<00:08:19.759><c> node.left</c><00:08:20.800><c> and</c><00:08:20.879><c> i'm</c><00:08:21.039><c> going</c><00:08:21.120><c> to</c><00:08:21.280><c> append</c>

00:08:21.749 --> 00:08:21.759 align:start position:0%
so node.left and i'm going to append
 

00:08:21.759 --> 00:08:23.189 align:start position:0%
so node.left and i'm going to append
that<00:08:22.080><c> to</c><00:08:22.240><c> our</c><00:08:22.479><c> queue</c>

00:08:23.189 --> 00:08:23.199 align:start position:0%
that to our queue
 

00:08:23.199 --> 00:08:26.070 align:start position:0%
that to our queue
and<00:08:23.440><c> also</c><00:08:23.840><c> i'm</c><00:08:23.919><c> going</c><00:08:24.000><c> to</c><00:08:24.080><c> take</c><00:08:24.840><c> node.right</c>

00:08:26.070 --> 00:08:26.080 align:start position:0%
and also i'm going to take node.right
 

00:08:26.080 --> 00:08:27.830 align:start position:0%
and also i'm going to take node.right
and<00:08:26.240><c> append</c><00:08:26.720><c> it</c><00:08:26.960><c> to</c><00:08:27.120><c> the</c><00:08:27.360><c> queue</c>

00:08:27.830 --> 00:08:27.840 align:start position:0%
and append it to the queue
 

00:08:27.840 --> 00:08:29.670 align:start position:0%
and append it to the queue
now<00:08:28.080><c> it's</c><00:08:28.319><c> technically</c><00:08:28.879><c> possible</c><00:08:29.280><c> that</c><00:08:29.440><c> these</c>

00:08:29.670 --> 00:08:29.680 align:start position:0%
now it's technically possible that these
 

00:08:29.680 --> 00:08:30.950 align:start position:0%
now it's technically possible that these
children<00:08:30.080><c> could</c><00:08:30.240><c> be</c><00:08:30.560><c> null</c>

00:08:30.950 --> 00:08:30.960 align:start position:0%
children could be null
 

00:08:30.960 --> 00:08:33.589 align:start position:0%
children could be null
but<00:08:31.120><c> we</c><00:08:31.360><c> know</c><00:08:31.680><c> that</c><00:08:32.080><c> if</c><00:08:32.240><c> they</c><00:08:32.479><c> are</c><00:08:32.959><c> in</c><00:08:33.120><c> the</c><00:08:33.279><c> next</c>

00:08:33.589 --> 00:08:33.599 align:start position:0%
but we know that if they are in the next
 

00:08:33.599 --> 00:08:35.589 align:start position:0%
but we know that if they are in the next
iteration<00:08:34.240><c> of</c><00:08:34.479><c> the</c><00:08:34.719><c> while</c><00:08:35.120><c> loop</c>

00:08:35.589 --> 00:08:35.599 align:start position:0%
iteration of the while loop
 

00:08:35.599 --> 00:08:37.509 align:start position:0%
iteration of the while loop
we'll<00:08:35.760><c> come</c><00:08:36.000><c> back</c><00:08:36.320><c> here</c><00:08:36.560><c> and</c><00:08:36.719><c> we'll</c><00:08:37.039><c> verify</c>

00:08:37.509 --> 00:08:37.519 align:start position:0%
we'll come back here and we'll verify
 

00:08:37.519 --> 00:08:39.190 align:start position:0%
we'll come back here and we'll verify
that<00:08:37.680><c> the</c><00:08:37.839><c> nodes</c><00:08:38.159><c> are</c><00:08:38.399><c> non-null</c>

00:08:39.190 --> 00:08:39.200 align:start position:0%
that the nodes are non-null
 

00:08:39.200 --> 00:08:41.990 align:start position:0%
that the nodes are non-null
before<00:08:39.599><c> we</c><00:08:40.320><c> you</c><00:08:40.399><c> know</c><00:08:40.640><c> update</c><00:08:40.959><c> our</c><00:08:41.120><c> right</c><00:08:41.440><c> side</c>

00:08:41.990 --> 00:08:42.000 align:start position:0%
before we you know update our right side
 

00:08:42.000 --> 00:08:43.990 align:start position:0%
before we you know update our right side
and<00:08:42.159><c> it's</c><00:08:42.320><c> also</c><00:08:42.640><c> important</c><00:08:43.039><c> that</c><00:08:43.200><c> you</c><00:08:43.440><c> add</c><00:08:43.680><c> the</c>

00:08:43.990 --> 00:08:44.000 align:start position:0%
and it's also important that you add the
 

00:08:44.000 --> 00:08:44.790 align:start position:0%
and it's also important that you add the
left<00:08:44.320><c> node</c>

00:08:44.790 --> 00:08:44.800 align:start position:0%
left node
 

00:08:44.800 --> 00:08:47.990 align:start position:0%
left node
before<00:08:45.360><c> you</c><00:08:45.600><c> add</c><00:08:45.839><c> the</c><00:08:46.160><c> right</c><00:08:46.480><c> node</c><00:08:47.200><c> and</c><00:08:47.600><c> after</c>

00:08:47.990 --> 00:08:48.000 align:start position:0%
before you add the right node and after
 

00:08:48.000 --> 00:08:49.030 align:start position:0%
before you add the right node and after
this

00:08:49.030 --> 00:08:49.040 align:start position:0%
this
 

00:08:49.040 --> 00:08:51.350 align:start position:0%
this
after<00:08:49.360><c> this</c><00:08:49.600><c> for</c><00:08:49.920><c> loop</c><00:08:50.240><c> is</c><00:08:50.399><c> done</c><00:08:50.720><c> executing</c>

00:08:51.350 --> 00:08:51.360 align:start position:0%
after this for loop is done executing
 

00:08:51.360 --> 00:08:53.509 align:start position:0%
after this for loop is done executing
what<00:08:51.519><c> we</c><00:08:51.680><c> have</c><00:08:51.839><c> done</c><00:08:52.080><c> is</c><00:08:52.320><c> taken</c><00:08:52.720><c> every</c><00:08:53.040><c> node</c><00:08:53.360><c> in</c>

00:08:53.509 --> 00:08:53.519 align:start position:0%
what we have done is taken every node in
 

00:08:53.519 --> 00:08:55.030 align:start position:0%
what we have done is taken every node in
the<00:08:53.839><c> current</c><00:08:54.240><c> level</c>

00:08:55.030 --> 00:08:55.040 align:start position:0%
the current level
 

00:08:55.040 --> 00:08:56.710 align:start position:0%
the current level
popped<00:08:55.440><c> it</c><00:08:55.600><c> right</c><00:08:55.760><c> that's</c><00:08:56.000><c> what</c><00:08:56.160><c> the</c><00:08:56.320><c> pop</c><00:08:56.640><c> is</c>

00:08:56.710 --> 00:08:56.720 align:start position:0%
popped it right that's what the pop is
 

00:08:56.720 --> 00:08:58.310 align:start position:0%
popped it right that's what the pop is
doing<00:08:57.200><c> and</c><00:08:57.839><c> taking</c>

00:08:58.310 --> 00:08:58.320 align:start position:0%
doing and taking
 

00:08:58.320 --> 00:09:01.110 align:start position:0%
doing and taking
all<00:08:58.480><c> the</c><00:08:58.880><c> children</c><00:08:59.360><c> of</c><00:08:59.600><c> that</c><00:08:59.839><c> level</c><00:09:00.320><c> and</c><00:09:00.720><c> added</c>

00:09:01.110 --> 00:09:01.120 align:start position:0%
all the children of that level and added
 

00:09:01.120 --> 00:09:02.790 align:start position:0%
all the children of that level and added
them<00:09:01.279><c> to</c><00:09:01.440><c> the</c><00:09:01.600><c> queue</c><00:09:01.920><c> so</c><00:09:02.160><c> basically</c><00:09:02.640><c> what</c>

00:09:02.790 --> 00:09:02.800 align:start position:0%
them to the queue so basically what
 

00:09:02.800 --> 00:09:04.310 align:start position:0%
them to the queue so basically what
we've<00:09:03.040><c> done</c><00:09:03.279><c> is</c><00:09:03.519><c> removed</c>

00:09:04.310 --> 00:09:04.320 align:start position:0%
we've done is removed
 

00:09:04.320 --> 00:09:07.190 align:start position:0%
we've done is removed
the<00:09:04.560><c> elements</c><00:09:05.200><c> from</c><00:09:05.760><c> the</c><00:09:06.080><c> previous</c><00:09:06.560><c> level</c><00:09:06.959><c> and</c>

00:09:07.190 --> 00:09:07.200 align:start position:0%
the elements from the previous level and
 

00:09:07.200 --> 00:09:09.030 align:start position:0%
the elements from the previous level and
added<00:09:07.519><c> the</c><00:09:07.760><c> elements</c><00:09:08.160><c> from</c><00:09:08.320><c> the</c><00:09:08.640><c> next</c>

00:09:09.030 --> 00:09:09.040 align:start position:0%
added the elements from the next
 

00:09:09.040 --> 00:09:11.590 align:start position:0%
added the elements from the next
level<00:09:09.600><c> so</c><00:09:09.760><c> that's</c><00:09:10.080><c> good</c><00:09:10.480><c> and</c><00:09:10.800><c> the</c><00:09:11.120><c> other</c><00:09:11.360><c> thing</c>

00:09:11.590 --> 00:09:11.600 align:start position:0%
level so that's good and the other thing
 

00:09:11.600 --> 00:09:13.670 align:start position:0%
level so that's good and the other thing
that<00:09:11.680><c> we</c><00:09:11.839><c> did</c><00:09:12.080><c> is</c><00:09:12.240><c> we</c><00:09:12.399><c> took</c><00:09:12.640><c> the</c><00:09:12.959><c> right</c><00:09:13.279><c> side</c>

00:09:13.670 --> 00:09:13.680 align:start position:0%
that we did is we took the right side
 

00:09:13.680 --> 00:09:14.310 align:start position:0%
that we did is we took the right side
the<00:09:13.920><c> right</c>

00:09:14.310 --> 00:09:14.320 align:start position:0%
the right
 

00:09:14.320 --> 00:09:16.870 align:start position:0%
the right
most<00:09:14.720><c> node</c><00:09:15.200><c> in</c><00:09:15.360><c> that</c><00:09:15.600><c> level</c><00:09:16.080><c> and</c><00:09:16.240><c> had</c><00:09:16.480><c> it</c>

00:09:16.870 --> 00:09:16.880 align:start position:0%
most node in that level and had it
 

00:09:16.880 --> 00:09:17.430 align:start position:0%
most node in that level and had it
stored

00:09:17.430 --> 00:09:17.440 align:start position:0%
stored
 

00:09:17.440 --> 00:09:20.310 align:start position:0%
stored
in<00:09:17.519><c> the</c><00:09:17.760><c> right</c><00:09:18.000><c> side</c><00:09:18.320><c> variable</c><00:09:19.200><c> so</c><00:09:19.519><c> now</c><00:09:19.920><c> we</c><00:09:20.080><c> can</c>

00:09:20.310 --> 00:09:20.320 align:start position:0%
in the right side variable so now we can
 

00:09:20.320 --> 00:09:21.110 align:start position:0%
in the right side variable so now we can
take

00:09:21.110 --> 00:09:21.120 align:start position:0%
take
 

00:09:21.120 --> 00:09:23.269 align:start position:0%
take
to<00:09:21.360><c> our</c><00:09:21.519><c> result</c><00:09:22.000><c> we</c><00:09:22.160><c> can</c><00:09:22.399><c> take</c><00:09:22.720><c> that</c><00:09:23.040><c> right</c>

00:09:23.269 --> 00:09:23.279 align:start position:0%
to our result we can take that right
 

00:09:23.279 --> 00:09:25.190 align:start position:0%
to our result we can take that right
side<00:09:23.600><c> variable</c><00:09:24.160><c> and</c><00:09:24.320><c> append</c><00:09:24.720><c> it</c><00:09:24.880><c> to</c><00:09:25.040><c> the</c>

00:09:25.190 --> 00:09:25.200 align:start position:0%
side variable and append it to the
 

00:09:25.200 --> 00:09:25.910 align:start position:0%
side variable and append it to the
result

00:09:25.910 --> 00:09:25.920 align:start position:0%
result
 

00:09:25.920 --> 00:09:28.070 align:start position:0%
result
but<00:09:26.160><c> not</c><00:09:26.399><c> just</c><00:09:26.800><c> uh</c><00:09:27.120><c> right</c><00:09:27.440><c> side</c><00:09:27.680><c> we</c><00:09:27.839><c> actually</c>

00:09:28.070 --> 00:09:28.080 align:start position:0%
but not just uh right side we actually
 

00:09:28.080 --> 00:09:29.269 align:start position:0%
but not just uh right side we actually
want<00:09:28.399><c> right</c><00:09:28.560><c> side</c><00:09:28.880><c> dot</c>

00:09:29.269 --> 00:09:29.279 align:start position:0%
want right side dot
 

00:09:29.279 --> 00:09:31.350 align:start position:0%
want right side dot
value<00:09:29.680><c> because</c><00:09:30.000><c> we're</c><00:09:30.240><c> trying</c><00:09:30.560><c> to</c><00:09:30.800><c> append</c><00:09:31.200><c> the</c>

00:09:31.350 --> 00:09:31.360 align:start position:0%
value because we're trying to append the
 

00:09:31.360 --> 00:09:33.430 align:start position:0%
value because we're trying to append the
values<00:09:32.000><c> and</c><00:09:32.240><c> it's</c><00:09:32.560><c> actually</c><00:09:32.880><c> technically</c>

00:09:33.430 --> 00:09:33.440 align:start position:0%
values and it's actually technically
 

00:09:33.440 --> 00:09:34.070 align:start position:0%
values and it's actually technically
possible

00:09:34.070 --> 00:09:34.080 align:start position:0%
possible
 

00:09:34.080 --> 00:09:36.870 align:start position:0%
possible
initially<00:09:34.640><c> right</c><00:09:34.880><c> side</c><00:09:35.200><c> was</c><00:09:35.519><c> null</c><00:09:36.160><c> in</c><00:09:36.560><c> one</c><00:09:36.720><c> of</c>

00:09:36.870 --> 00:09:36.880 align:start position:0%
initially right side was null in one of
 

00:09:36.880 --> 00:09:37.990 align:start position:0%
initially right side was null in one of
the<00:09:36.959><c> base</c><00:09:37.279><c> cases</c>

00:09:37.990 --> 00:09:38.000 align:start position:0%
the base cases
 

00:09:38.000 --> 00:09:40.470 align:start position:0%
the base cases
you<00:09:38.160><c> know</c><00:09:38.800><c> the</c><00:09:38.959><c> right</c><00:09:39.279><c> side</c><00:09:39.839><c> could</c><00:09:40.080><c> actually</c>

00:09:40.470 --> 00:09:40.480 align:start position:0%
you know the right side could actually
 

00:09:40.480 --> 00:09:41.670 align:start position:0%
you know the right side could actually
be<00:09:40.959><c> null</c>

00:09:41.670 --> 00:09:41.680 align:start position:0%
be null
 

00:09:41.680 --> 00:09:43.750 align:start position:0%
be null
once<00:09:41.920><c> we've</c><00:09:42.160><c> reached</c><00:09:42.480><c> the</c><00:09:42.800><c> last</c><00:09:43.200><c> level</c><00:09:43.519><c> so</c>

00:09:43.750 --> 00:09:43.760 align:start position:0%
once we've reached the last level so
 

00:09:43.760 --> 00:09:44.870 align:start position:0%
once we've reached the last level so
we're<00:09:43.920><c> going</c><00:09:44.000><c> to</c><00:09:44.080><c> verify</c><00:09:44.560><c> that</c>

00:09:44.870 --> 00:09:44.880 align:start position:0%
we're going to verify that
 

00:09:44.880 --> 00:09:47.910 align:start position:0%
we're going to verify that
right<00:09:45.120><c> side</c><00:09:45.600><c> is</c><00:09:45.920><c> non-null</c><00:09:47.200><c> so</c><00:09:47.440><c> once</c><00:09:47.680><c> we've</c>

00:09:47.910 --> 00:09:47.920 align:start position:0%
right side is non-null so once we've
 

00:09:47.920 --> 00:09:48.710 align:start position:0%
right side is non-null so once we've
done<00:09:48.160><c> that</c>

00:09:48.710 --> 00:09:48.720 align:start position:0%
done that
 

00:09:48.720 --> 00:09:51.990 align:start position:0%
done that
and<00:09:49.120><c> once</c><00:09:49.519><c> this</c><00:09:50.160><c> cue</c><00:09:50.640><c> is</c><00:09:50.959><c> empty</c><00:09:51.440><c> meaning</c><00:09:51.760><c> we've</c>

00:09:51.990 --> 00:09:52.000 align:start position:0%
and once this cue is empty meaning we've
 

00:09:52.000 --> 00:09:53.190 align:start position:0%
and once this cue is empty meaning we've
gone<00:09:52.240><c> through</c><00:09:52.480><c> every</c><00:09:52.720><c> single</c>

00:09:53.190 --> 00:09:53.200 align:start position:0%
gone through every single
 

00:09:53.200 --> 00:09:55.509 align:start position:0%
gone through every single
level<00:09:53.680><c> of</c><00:09:53.839><c> the</c><00:09:54.000><c> tree</c><00:09:54.399><c> then</c><00:09:54.720><c> all</c><00:09:54.880><c> we</c><00:09:55.040><c> have</c><00:09:55.120><c> to</c><00:09:55.279><c> do</c>

00:09:55.509 --> 00:09:55.519 align:start position:0%
level of the tree then all we have to do
 

00:09:55.519 --> 00:09:57.590 align:start position:0%
level of the tree then all we have to do
is<00:09:55.760><c> return</c><00:09:56.240><c> our</c><00:09:56.560><c> result</c>

00:09:57.590 --> 00:09:57.600 align:start position:0%
is return our result
 

00:09:57.600 --> 00:09:59.590 align:start position:0%
is return our result
so<00:09:57.839><c> there</c><00:09:58.080><c> it</c><00:09:58.240><c> is</c><00:09:58.480><c> it's</c><00:09:58.720><c> a</c><00:09:58.880><c> pretty</c><00:09:59.200><c> efficient</c>

00:09:59.590 --> 00:09:59.600 align:start position:0%
so there it is it's a pretty efficient
 

00:09:59.600 --> 00:10:01.509 align:start position:0%
so there it is it's a pretty efficient
solution<00:10:00.160><c> even</c><00:10:00.399><c> though</c><00:10:00.640><c> this</c><00:10:00.880><c> percentage</c>

00:10:01.509 --> 00:10:01.519 align:start position:0%
solution even though this percentage
 

00:10:01.519 --> 00:10:02.949 align:start position:0%
solution even though this percentage
doesn't<00:10:01.839><c> indicate</c><00:10:02.320><c> that</c>

00:10:02.949 --> 00:10:02.959 align:start position:0%
doesn't indicate that
 

00:10:02.959 --> 00:10:04.870 align:start position:0%
doesn't indicate that
so<00:10:03.279><c> i</c><00:10:03.360><c> hope</c><00:10:03.600><c> this</c><00:10:03.760><c> was</c><00:10:04.000><c> helpful</c><00:10:04.480><c> if</c><00:10:04.640><c> you</c>

00:10:04.870 --> 00:10:04.880 align:start position:0%
so i hope this was helpful if you
 

00:10:04.880 --> 00:10:06.949 align:start position:0%
so i hope this was helpful if you
enjoyed<00:10:05.519><c> like</c><00:10:05.760><c> and</c><00:10:05.920><c> subscribe</c><00:10:06.399><c> it</c><00:10:06.560><c> supports</c>

00:10:06.949 --> 00:10:06.959 align:start position:0%
enjoyed like and subscribe it supports
 

00:10:06.959 --> 00:10:08.069 align:start position:0%
enjoyed like and subscribe it supports
the<00:10:07.040><c> channel</c><00:10:07.440><c> a</c><00:10:07.680><c> lot</c>

00:10:08.069 --> 00:10:08.079 align:start position:0%
the channel a lot
 

00:10:08.079 --> 00:10:17.760 align:start position:0%
the channel a lot
and<00:10:08.240><c> i'll</c><00:10:08.399><c> hopefully</c><00:10:08.959><c> see</c><00:10:09.120><c> you</c><00:10:09.279><c> pretty</c><00:10:14.760><c> soon</c>

