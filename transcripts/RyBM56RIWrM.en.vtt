WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.750 align:start position:0%
 
hey<00:00:00.160><c> everyone</c><00:00:00.640><c> welcome</c><00:00:01.120><c> back</c><00:00:01.360><c> and</c><00:00:01.439><c> let's</c>

00:00:01.750 --> 00:00:01.760 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.760 --> 00:00:03.669 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.920><c> some</c><00:00:02.080><c> more</c><00:00:02.320><c> neat</c><00:00:02.639><c> code</c><00:00:02.879><c> today</c><00:00:03.199><c> so</c><00:00:03.360><c> today</c>

00:00:03.669 --> 00:00:03.679 align:start position:0%
write some more neat code today so today
 

00:00:03.679 --> 00:00:05.349 align:start position:0%
write some more neat code today so today
we're<00:00:03.840><c> going</c><00:00:04.000><c> to</c><00:00:04.080><c> be</c><00:00:04.240><c> solving</c><00:00:04.640><c> a</c><00:00:04.799><c> binary</c>

00:00:05.349 --> 00:00:05.359 align:start position:0%
we're going to be solving a binary
 

00:00:05.359 --> 00:00:05.910 align:start position:0%
we're going to be solving a binary
question

00:00:05.910 --> 00:00:05.920 align:start position:0%
question
 

00:00:05.920 --> 00:00:08.070 align:start position:0%
question
counting<00:00:06.399><c> bits</c><00:00:07.120><c> and</c><00:00:07.279><c> this</c><00:00:07.520><c> is</c><00:00:07.600><c> one</c><00:00:07.759><c> of</c><00:00:07.839><c> the</c>

00:00:08.070 --> 00:00:08.080 align:start position:0%
counting bits and this is one of the
 

00:00:08.080 --> 00:00:10.549 align:start position:0%
counting bits and this is one of the
binary<00:00:08.559><c> questions</c><00:00:08.960><c> from</c><00:00:09.200><c> the</c><00:00:09.360><c> blind</c><00:00:09.679><c> 75</c><00:00:10.320><c> list</c>

00:00:10.549 --> 00:00:10.559 align:start position:0%
binary questions from the blind 75 list
 

00:00:10.559 --> 00:00:11.589 align:start position:0%
binary questions from the blind 75 list
that<00:00:10.719><c> we've</c><00:00:10.880><c> been</c><00:00:11.040><c> tracking</c><00:00:11.360><c> in</c><00:00:11.519><c> the</c>

00:00:11.589 --> 00:00:11.599 align:start position:0%
that we've been tracking in the
 

00:00:11.599 --> 00:00:13.509 align:start position:0%
that we've been tracking in the
spreadsheet<00:00:12.160><c> so</c><00:00:12.320><c> we</c><00:00:12.559><c> will</c><00:00:12.719><c> finally</c><00:00:13.040><c> be</c><00:00:13.200><c> adding</c>

00:00:13.509 --> 00:00:13.519 align:start position:0%
spreadsheet so we will finally be adding
 

00:00:13.519 --> 00:00:13.910 align:start position:0%
spreadsheet so we will finally be adding
a

00:00:13.910 --> 00:00:13.920 align:start position:0%
a
 

00:00:13.920 --> 00:00:16.150 align:start position:0%
a
video<00:00:14.320><c> solution</c><00:00:14.799><c> to</c><00:00:14.960><c> this</c><00:00:15.200><c> binary</c><00:00:15.679><c> problem</c>

00:00:16.150 --> 00:00:16.160 align:start position:0%
video solution to this binary problem
 

00:00:16.160 --> 00:00:17.750 align:start position:0%
video solution to this binary problem
i'm<00:00:16.400><c> pretty</c><00:00:16.560><c> sure</c><00:00:16.720><c> it</c><00:00:16.800><c> used</c><00:00:17.039><c> to</c><00:00:17.119><c> be</c><00:00:17.199><c> a</c><00:00:17.359><c> medium</c>

00:00:17.750 --> 00:00:17.760 align:start position:0%
i'm pretty sure it used to be a medium
 

00:00:17.760 --> 00:00:19.189 align:start position:0%
i'm pretty sure it used to be a medium
problem<00:00:18.080><c> which</c><00:00:18.240><c> is</c><00:00:18.400><c> why</c><00:00:18.560><c> it's</c><00:00:18.640><c> highlighted</c>

00:00:19.189 --> 00:00:19.199 align:start position:0%
problem which is why it's highlighted
 

00:00:19.199 --> 00:00:21.349 align:start position:0%
problem which is why it's highlighted
yellow<00:00:19.680><c> but</c><00:00:19.920><c> i</c><00:00:20.000><c> think</c><00:00:20.240><c> it</c><00:00:20.320><c> got</c><00:00:20.560><c> changed</c><00:00:20.960><c> to</c><00:00:21.199><c> an</c>

00:00:21.349 --> 00:00:21.359 align:start position:0%
yellow but i think it got changed to an
 

00:00:21.359 --> 00:00:22.310 align:start position:0%
yellow but i think it got changed to an
easy<00:00:21.760><c> problem</c>

00:00:22.310 --> 00:00:22.320 align:start position:0%
easy problem
 

00:00:22.320 --> 00:00:23.990 align:start position:0%
easy problem
so<00:00:22.480><c> the</c><00:00:22.640><c> statement</c><00:00:23.119><c> is</c><00:00:23.199><c> pretty</c><00:00:23.519><c> simple</c><00:00:23.840><c> we're</c>

00:00:23.990 --> 00:00:24.000 align:start position:0%
so the statement is pretty simple we're
 

00:00:24.000 --> 00:00:26.550 align:start position:0%
so the statement is pretty simple we're
given<00:00:24.320><c> an</c><00:00:24.480><c> integer</c><00:00:24.960><c> n</c><00:00:25.279><c> and</c><00:00:25.439><c> we</c><00:00:25.599><c> want</c><00:00:25.760><c> to</c><00:00:25.840><c> return</c>

00:00:26.550 --> 00:00:26.560 align:start position:0%
given an integer n and we want to return
 

00:00:26.560 --> 00:00:30.390 align:start position:0%
given an integer n and we want to return
an<00:00:26.800><c> answer</c><00:00:27.680><c> array</c><00:00:28.240><c> of</c><00:00:28.560><c> length</c><00:00:28.960><c> n</c><00:00:29.279><c> plus</c><00:00:29.679><c> one</c>

00:00:30.390 --> 00:00:30.400 align:start position:0%
an answer array of length n plus one
 

00:00:30.400 --> 00:00:33.910 align:start position:0%
an answer array of length n plus one
basically<00:00:31.279><c> a</c><00:00:31.439><c> value</c><00:00:31.920><c> for</c><00:00:32.239><c> every</c><00:00:33.360><c> integer</c><00:00:33.840><c> in</c>

00:00:33.910 --> 00:00:33.920 align:start position:0%
basically a value for every integer in
 

00:00:33.920 --> 00:00:35.270 align:start position:0%
basically a value for every integer in
the<00:00:34.079><c> range</c><00:00:34.399><c> from</c><00:00:34.719><c> zero</c>

00:00:35.270 --> 00:00:35.280 align:start position:0%
the range from zero
 

00:00:35.280 --> 00:00:38.869 align:start position:0%
the range from zero
all<00:00:35.440><c> the</c><00:00:35.600><c> way</c><00:00:35.920><c> up</c><00:00:36.079><c> until</c><00:00:37.200><c> n</c><00:00:38.000><c> so</c><00:00:38.160><c> if</c><00:00:38.320><c> n</c><00:00:38.559><c> happened</c>

00:00:38.869 --> 00:00:38.879 align:start position:0%
all the way up until n so if n happened
 

00:00:38.879 --> 00:00:39.350 align:start position:0%
all the way up until n so if n happened
to<00:00:39.040><c> be</c>

00:00:39.350 --> 00:00:39.360 align:start position:0%
to be
 

00:00:39.360 --> 00:00:41.750 align:start position:0%
to be
zero<00:00:39.680><c> then</c><00:00:39.840><c> we</c><00:00:40.000><c> would</c><00:00:40.079><c> just</c><00:00:40.320><c> return</c><00:00:41.200><c> a</c><00:00:41.360><c> single</c>

00:00:41.750 --> 00:00:41.760 align:start position:0%
zero then we would just return a single
 

00:00:41.760 --> 00:00:42.470 align:start position:0%
zero then we would just return a single
integer<00:00:42.239><c> if</c>

00:00:42.470 --> 00:00:42.480 align:start position:0%
integer if
 

00:00:42.480 --> 00:00:44.069 align:start position:0%
integer if
zero<00:00:42.800><c> happened</c><00:00:43.040><c> to</c><00:00:43.200><c> be</c><00:00:43.440><c> two</c><00:00:43.680><c> then</c><00:00:43.840><c> we</c><00:00:43.920><c> would</c>

00:00:44.069 --> 00:00:44.079 align:start position:0%
zero happened to be two then we would
 

00:00:44.079 --> 00:00:45.670 align:start position:0%
zero happened to be two then we would
return<00:00:44.480><c> three</c><00:00:44.800><c> integers</c><00:00:45.360><c> for</c>

00:00:45.670 --> 00:00:45.680 align:start position:0%
return three integers for
 

00:00:45.680 --> 00:00:49.110 align:start position:0%
return three integers for
zero<00:00:46.079><c> one</c><00:00:46.559><c> and</c><00:00:47.039><c> two</c><00:00:47.600><c> and</c><00:00:47.840><c> basically</c><00:00:48.480><c> for</c><00:00:48.719><c> every</c>

00:00:49.110 --> 00:00:49.120 align:start position:0%
zero one and two and basically for every
 

00:00:49.120 --> 00:00:49.670 align:start position:0%
zero one and two and basically for every
value

00:00:49.670 --> 00:00:49.680 align:start position:0%
value
 

00:00:49.680 --> 00:00:52.790 align:start position:0%
value
in<00:00:49.840><c> this</c><00:00:50.160><c> range</c><00:00:50.640><c> zero</c><00:00:50.960><c> to</c><00:00:51.280><c> n</c><00:00:51.920><c> so</c><00:00:52.079><c> if</c><00:00:52.239><c> n</c><00:00:52.399><c> was</c><00:00:52.559><c> two</c>

00:00:52.790 --> 00:00:52.800 align:start position:0%
in this range zero to n so if n was two
 

00:00:52.800 --> 00:00:54.630 align:start position:0%
in this range zero to n so if n was two
we<00:00:52.879><c> would</c><00:00:53.039><c> have</c><00:00:53.199><c> three</c><00:00:53.440><c> values</c><00:00:53.840><c> in</c><00:00:53.920><c> that</c><00:00:54.079><c> range</c>

00:00:54.630 --> 00:00:54.640 align:start position:0%
we would have three values in that range
 

00:00:54.640 --> 00:00:57.189 align:start position:0%
we would have three values in that range
zero<00:00:54.960><c> one</c><00:00:55.280><c> two</c><00:00:55.840><c> for</c><00:00:56.000><c> each</c><00:00:56.239><c> of</c><00:00:56.320><c> these</c><00:00:56.559><c> values</c><00:00:57.039><c> we</c>

00:00:57.189 --> 00:00:57.199 align:start position:0%
zero one two for each of these values we
 

00:00:57.199 --> 00:00:58.069 align:start position:0%
zero one two for each of these values we
want<00:00:57.360><c> to</c><00:00:57.520><c> know</c><00:00:57.760><c> what</c>

00:00:58.069 --> 00:00:58.079 align:start position:0%
want to know what
 

00:00:58.079 --> 00:01:00.950 align:start position:0%
want to know what
is<00:00:58.160><c> the</c><00:00:58.559><c> number</c><00:00:58.960><c> of</c><00:00:59.440><c> ones</c><00:01:00.000><c> in</c><00:01:00.079><c> the</c><00:01:00.399><c> binary</c>

00:01:00.950 --> 00:01:00.960 align:start position:0%
is the number of ones in the binary
 

00:01:00.960 --> 00:01:02.069 align:start position:0%
is the number of ones in the binary
representation

00:01:02.069 --> 00:01:02.079 align:start position:0%
representation
 

00:01:02.079 --> 00:01:04.149 align:start position:0%
representation
of<00:01:02.399><c> this</c><00:01:02.640><c> particular</c><00:01:03.199><c> integer</c><00:01:03.760><c> now</c><00:01:03.920><c> what's</c>

00:01:04.149 --> 00:01:04.159 align:start position:0%
of this particular integer now what's
 

00:01:04.159 --> 00:01:06.070 align:start position:0%
of this particular integer now what's
the<00:01:04.239><c> binary</c><00:01:04.720><c> representation</c><00:01:05.360><c> of</c><00:01:05.519><c> zero</c><00:01:05.840><c> it's</c>

00:01:06.070 --> 00:01:06.080 align:start position:0%
the binary representation of zero it's
 

00:01:06.080 --> 00:01:06.789 align:start position:0%
the binary representation of zero it's
of<00:01:06.159><c> course</c><00:01:06.479><c> just</c>

00:01:06.789 --> 00:01:06.799 align:start position:0%
of course just
 

00:01:06.799 --> 00:01:09.350 align:start position:0%
of course just
zero<00:01:07.200><c> right</c><00:01:07.520><c> you</c><00:01:07.680><c> could</c><00:01:07.840><c> add</c><00:01:08.240><c> multiple</c><00:01:08.720><c> zeros</c>

00:01:09.350 --> 00:01:09.360 align:start position:0%
zero right you could add multiple zeros
 

00:01:09.360 --> 00:01:09.990 align:start position:0%
zero right you could add multiple zeros
but<00:01:09.600><c> it's</c>

00:01:09.990 --> 00:01:10.000 align:start position:0%
but it's
 

00:01:10.000 --> 00:01:12.310 align:start position:0%
but it's
still<00:01:10.400><c> going</c><00:01:10.479><c> to</c><00:01:10.560><c> be</c><00:01:10.799><c> zero</c><00:01:11.520><c> what's</c><00:01:11.840><c> the</c><00:01:11.920><c> binary</c>

00:01:12.310 --> 00:01:12.320 align:start position:0%
still going to be zero what's the binary
 

00:01:12.320 --> 00:01:13.590 align:start position:0%
still going to be zero what's the binary
representation<00:01:13.040><c> of</c><00:01:13.200><c> one</c>

00:01:13.590 --> 00:01:13.600 align:start position:0%
representation of one
 

00:01:13.600 --> 00:01:15.749 align:start position:0%
representation of one
it's<00:01:13.760><c> going</c><00:01:13.920><c> to</c><00:01:14.080><c> be</c><00:01:14.799><c> just</c><00:01:15.200><c> one</c><00:01:15.520><c> right</c><00:01:15.680><c> you</c>

00:01:15.749 --> 00:01:15.759 align:start position:0%
it's going to be just one right you
 

00:01:15.759 --> 00:01:17.270 align:start position:0%
it's going to be just one right you
could<00:01:15.920><c> have</c><00:01:16.080><c> some</c><00:01:16.320><c> leading</c><00:01:16.720><c> zeros</c><00:01:17.119><c> we</c><00:01:17.200><c> could</c>

00:01:17.270 --> 00:01:17.280 align:start position:0%
could have some leading zeros we could
 

00:01:17.280 --> 00:01:18.469 align:start position:0%
could have some leading zeros we could
have<00:01:17.439><c> as</c><00:01:17.520><c> many</c><00:01:17.759><c> as</c><00:01:17.920><c> we</c><00:01:18.080><c> want</c>

00:01:18.469 --> 00:01:18.479 align:start position:0%
have as many as we want
 

00:01:18.479 --> 00:01:19.910 align:start position:0%
have as many as we want
but<00:01:18.720><c> at</c><00:01:18.799><c> the</c><00:01:18.960><c> end</c><00:01:19.200><c> it's</c><00:01:19.360><c> just</c><00:01:19.520><c> going</c><00:01:19.600><c> to</c><00:01:19.759><c> end</c>

00:01:19.910 --> 00:01:19.920 align:start position:0%
but at the end it's just going to end
 

00:01:19.920 --> 00:01:22.070 align:start position:0%
but at the end it's just going to end
with<00:01:20.159><c> a</c><00:01:20.320><c> single</c><00:01:20.720><c> one</c><00:01:21.200><c> so</c><00:01:21.439><c> there's</c><00:01:21.680><c> only</c>

00:01:22.070 --> 00:01:22.080 align:start position:0%
with a single one so there's only
 

00:01:22.080 --> 00:01:24.789 align:start position:0%
with a single one so there's only
one<00:01:22.799><c> occurrence</c><00:01:23.360><c> of</c><00:01:23.520><c> the</c><00:01:23.759><c> integer</c><00:01:24.159><c> one</c><00:01:24.479><c> in</c><00:01:24.640><c> the</c>

00:01:24.789 --> 00:01:24.799 align:start position:0%
one occurrence of the integer one in the
 

00:01:24.799 --> 00:01:26.789 align:start position:0%
one occurrence of the integer one in the
binary<00:01:25.200><c> representation</c><00:01:25.920><c> of</c><00:01:26.159><c> 0.</c>

00:01:26.789 --> 00:01:26.799 align:start position:0%
binary representation of 0.
 

00:01:26.799 --> 00:01:28.789 align:start position:0%
binary representation of 0.
so<00:01:27.040><c> so</c><00:01:27.360><c> far</c><00:01:27.680><c> our</c><00:01:28.000><c> output</c><00:01:28.320><c> is</c><00:01:28.479><c> going</c><00:01:28.560><c> to</c><00:01:28.640><c> look</c>

00:01:28.789 --> 00:01:28.799 align:start position:0%
so so far our output is going to look
 

00:01:28.799 --> 00:01:30.310 align:start position:0%
so so far our output is going to look
something<00:01:29.040><c> like</c><00:01:29.280><c> 0</c>

00:01:30.310 --> 00:01:30.320 align:start position:0%
something like 0
 

00:01:30.320 --> 00:01:32.069 align:start position:0%
something like 0
1<00:01:30.720><c> and</c><00:01:30.799><c> then</c><00:01:31.040><c> now</c><00:01:31.280><c> we</c><00:01:31.360><c> just</c><00:01:31.520><c> need</c><00:01:31.680><c> the</c><00:01:31.759><c> number</c>

00:01:32.069 --> 00:01:32.079 align:start position:0%
1 and then now we just need the number
 

00:01:32.079 --> 00:01:33.910 align:start position:0%
1 and then now we just need the number
of<00:01:32.320><c> ones</c><00:01:32.640><c> in</c><00:01:32.720><c> the</c><00:01:32.799><c> binary</c><00:01:33.200><c> representation</c><00:01:33.759><c> of</c>

00:01:33.910 --> 00:01:33.920 align:start position:0%
of ones in the binary representation of
 

00:01:33.920 --> 00:01:34.469 align:start position:0%
of ones in the binary representation of
2.

00:01:34.469 --> 00:01:34.479 align:start position:0%
2.
 

00:01:34.479 --> 00:01:36.230 align:start position:0%
2.
the<00:01:34.640><c> binary</c><00:01:35.119><c> representation</c><00:01:35.680><c> of</c><00:01:35.840><c> 2</c><00:01:36.079><c> is</c><00:01:36.159><c> going</c>

00:01:36.230 --> 00:01:36.240 align:start position:0%
the binary representation of 2 is going
 

00:01:36.240 --> 00:01:37.749 align:start position:0%
the binary representation of 2 is going
to<00:01:36.320><c> look</c><00:01:36.560><c> like</c><00:01:36.960><c> this</c><00:01:37.439><c> 1</c>

00:01:37.749 --> 00:01:37.759 align:start position:0%
to look like this 1
 

00:01:37.759 --> 00:01:40.310 align:start position:0%
to look like this 1
0.<00:01:38.079><c> you</c><00:01:38.159><c> could</c><00:01:38.320><c> have</c><00:01:38.479><c> some</c><00:01:38.720><c> leading</c><00:01:39.040><c> zeros</c><00:01:39.759><c> but</c>

00:01:40.310 --> 00:01:40.320 align:start position:0%
0. you could have some leading zeros but
 

00:01:40.320 --> 00:01:41.990 align:start position:0%
0. you could have some leading zeros but
this<00:01:40.720><c> is</c><00:01:40.880><c> the</c><00:01:41.040><c> main</c><00:01:41.280><c> part</c><00:01:41.439><c> that</c><00:01:41.600><c> we're</c><00:01:41.759><c> looking</c>

00:01:41.990 --> 00:01:42.000 align:start position:0%
this is the main part that we're looking
 

00:01:42.000 --> 00:01:42.789 align:start position:0%
this is the main part that we're looking
at<00:01:42.159><c> so</c>

00:01:42.789 --> 00:01:42.799 align:start position:0%
at so
 

00:01:42.799 --> 00:01:45.109 align:start position:0%
at so
it<00:01:42.960><c> just</c><00:01:43.200><c> has</c><00:01:43.439><c> a</c><00:01:43.600><c> single</c><00:01:44.000><c> one</c><00:01:44.560><c> so</c><00:01:44.799><c> then</c><00:01:44.960><c> the</c>

00:01:45.109 --> 00:01:45.119 align:start position:0%
it just has a single one so then the
 

00:01:45.119 --> 00:01:46.550 align:start position:0%
it just has a single one so then the
output<00:01:45.520><c> is</c><00:01:45.680><c> going</c><00:01:45.759><c> to</c><00:01:45.920><c> be</c>

00:01:46.550 --> 00:01:46.560 align:start position:0%
output is going to be
 

00:01:46.560 --> 00:01:48.870 align:start position:0%
output is going to be
one<00:01:46.880><c> for</c><00:01:47.040><c> that</c><00:01:47.280><c> so</c><00:01:47.520><c> the</c><00:01:48.079><c> array</c><00:01:48.479><c> that</c><00:01:48.560><c> we</c><00:01:48.720><c> would</c>

00:01:48.870 --> 00:01:48.880 align:start position:0%
one for that so the array that we would
 

00:01:48.880 --> 00:01:50.310 align:start position:0%
one for that so the array that we would
return<00:01:49.360><c> is</c><00:01:49.439><c> going</c><00:01:49.600><c> to</c><00:01:49.680><c> look</c><00:01:49.840><c> something</c><00:01:50.159><c> like</c>

00:01:50.310 --> 00:01:50.320 align:start position:0%
return is going to look something like
 

00:01:50.320 --> 00:01:50.710 align:start position:0%
return is going to look something like
this

00:01:50.710 --> 00:01:50.720 align:start position:0%
this
 

00:01:50.720 --> 00:01:53.190 align:start position:0%
this
zero<00:01:51.119><c> one</c><00:01:51.439><c> one</c><00:01:52.000><c> now</c><00:01:52.159><c> the</c><00:01:52.240><c> brute</c><00:01:52.640><c> force</c><00:01:52.880><c> way</c><00:01:53.040><c> to</c>

00:01:53.190 --> 00:01:53.200 align:start position:0%
zero one one now the brute force way to
 

00:01:53.200 --> 00:01:54.069 align:start position:0%
zero one one now the brute force way to
solve<00:01:53.439><c> this</c><00:01:53.680><c> problem</c>

00:01:54.069 --> 00:01:54.079 align:start position:0%
solve this problem
 

00:01:54.079 --> 00:01:57.109 align:start position:0%
solve this problem
is<00:01:54.240><c> going</c><00:01:54.320><c> to</c><00:01:54.399><c> be</c><00:01:54.720><c> n</c><00:01:55.280><c> log</c><00:01:55.840><c> n</c><00:01:56.320><c> and</c><00:01:56.479><c> that</c><00:01:56.719><c> solution</c>

00:01:57.109 --> 00:01:57.119 align:start position:0%
is going to be n log n and that solution
 

00:01:57.119 --> 00:01:58.310 align:start position:0%
is going to be n log n and that solution
is<00:01:57.200><c> going</c><00:01:57.280><c> to</c><00:01:57.360><c> look</c><00:01:57.600><c> something</c><00:01:57.920><c> like</c><00:01:58.079><c> this</c>

00:01:58.310 --> 00:01:58.320 align:start position:0%
is going to look something like this
 

00:01:58.320 --> 00:01:59.830 align:start position:0%
is going to look something like this
let's<00:01:58.479><c> say</c><00:01:58.640><c> we</c><00:01:58.719><c> had</c><00:01:58.880><c> an</c><00:01:59.040><c> arbitrary</c>

00:01:59.830 --> 00:01:59.840 align:start position:0%
let's say we had an arbitrary
 

00:01:59.840 --> 00:02:02.230 align:start position:0%
let's say we had an arbitrary
value<00:02:00.240><c> such</c><00:02:00.479><c> as</c><00:02:00.719><c> 2</c><00:02:00.960><c> or</c><00:02:01.119><c> maybe</c><00:02:01.439><c> even</c><00:02:01.680><c> 3</c><00:02:01.920><c> right</c><00:02:02.079><c> we</c>

00:02:02.230 --> 00:02:02.240 align:start position:0%
value such as 2 or maybe even 3 right we
 

00:02:02.240 --> 00:02:02.870 align:start position:0%
value such as 2 or maybe even 3 right we
know<00:02:02.479><c> the</c>

00:02:02.870 --> 00:02:02.880 align:start position:0%
know the
 

00:02:02.880 --> 00:02:04.789 align:start position:0%
know the
binary<00:02:03.439><c> representation</c><00:02:04.000><c> of</c><00:02:04.159><c> 3</c><00:02:04.479><c> is</c><00:02:04.560><c> going</c><00:02:04.640><c> to</c>

00:02:04.789 --> 00:02:04.799 align:start position:0%
binary representation of 3 is going to
 

00:02:04.799 --> 00:02:06.069 align:start position:0%
binary representation of 3 is going to
look<00:02:04.960><c> like</c><00:02:05.600><c> 1</c>

00:02:06.069 --> 00:02:06.079 align:start position:0%
look like 1
 

00:02:06.079 --> 00:02:08.469 align:start position:0%
look like 1
1<00:02:06.640><c> right</c><00:02:07.119><c> so</c><00:02:07.439><c> how</c><00:02:07.600><c> are</c><00:02:07.759><c> we</c><00:02:07.840><c> going</c><00:02:07.920><c> to</c><00:02:08.080><c> count</c><00:02:08.319><c> the</c>

00:02:08.469 --> 00:02:08.479 align:start position:0%
1 right so how are we going to count the
 

00:02:08.479 --> 00:02:09.350 align:start position:0%
1 right so how are we going to count the
number<00:02:08.720><c> of</c><00:02:08.879><c> ones</c>

00:02:09.350 --> 00:02:09.360 align:start position:0%
number of ones
 

00:02:09.360 --> 00:02:11.270 align:start position:0%
number of ones
in<00:02:09.679><c> the</c><00:02:09.840><c> binary</c><00:02:10.160><c> representation</c><00:02:10.720><c> of</c><00:02:10.879><c> three</c>

00:02:11.270 --> 00:02:11.280 align:start position:0%
in the binary representation of three
 

00:02:11.280 --> 00:02:13.589 align:start position:0%
in the binary representation of three
well<00:02:12.000><c> we</c><00:02:12.319><c> first</c><00:02:12.560><c> let's</c><00:02:12.720><c> get</c><00:02:12.879><c> the</c><00:02:12.959><c> ones</c><00:02:13.360><c> place</c>

00:02:13.589 --> 00:02:13.599 align:start position:0%
well we first let's get the ones place
 

00:02:13.599 --> 00:02:14.309 align:start position:0%
well we first let's get the ones place
right<00:02:13.760><c> is</c><00:02:13.920><c> this</c><00:02:14.000><c> gonna</c>

00:02:14.309 --> 00:02:14.319 align:start position:0%
right is this gonna
 

00:02:14.319 --> 00:02:15.990 align:start position:0%
right is this gonna
is<00:02:14.480><c> this</c><00:02:14.560><c> gonna</c><00:02:14.720><c> be</c><00:02:14.800><c> a</c><00:02:14.879><c> one</c><00:02:15.200><c> or</c><00:02:15.360><c> a</c><00:02:15.440><c> zero</c><00:02:15.760><c> how</c><00:02:15.840><c> can</c>

00:02:15.990 --> 00:02:16.000 align:start position:0%
is this gonna be a one or a zero how can
 

00:02:16.000 --> 00:02:17.990 align:start position:0%
is this gonna be a one or a zero how can
we<00:02:16.160><c> get</c><00:02:16.239><c> that</c><00:02:16.400><c> well</c><00:02:16.640><c> we</c><00:02:16.720><c> can</c><00:02:16.879><c> take</c><00:02:17.120><c> three</c>

00:02:17.990 --> 00:02:18.000 align:start position:0%
we get that well we can take three
 

00:02:18.000 --> 00:02:20.630 align:start position:0%
we get that well we can take three
mod<00:02:18.319><c> it</c><00:02:18.720><c> by</c><00:02:19.040><c> two</c><00:02:19.440><c> which</c><00:02:19.680><c> is</c><00:02:19.760><c> gonna</c><00:02:20.000><c> give</c><00:02:20.160><c> us</c><00:02:20.400><c> one</c>

00:02:20.630 --> 00:02:20.640 align:start position:0%
mod it by two which is gonna give us one
 

00:02:20.640 --> 00:02:21.510 align:start position:0%
mod it by two which is gonna give us one
so<00:02:20.800><c> we</c><00:02:20.879><c> have</c><00:02:21.040><c> at</c><00:02:21.120><c> least</c>

00:02:21.510 --> 00:02:21.520 align:start position:0%
so we have at least
 

00:02:21.520 --> 00:02:24.309 align:start position:0%
so we have at least
one<00:02:22.239><c> one</c><00:02:22.560><c> here</c><00:02:22.800><c> right</c><00:02:23.440><c> so</c><00:02:23.680><c> we</c><00:02:23.840><c> already</c><00:02:24.080><c> looked</c>

00:02:24.309 --> 00:02:24.319 align:start position:0%
one one here right so we already looked
 

00:02:24.319 --> 00:02:25.670 align:start position:0%
one one here right so we already looked
at<00:02:24.400><c> this</c><00:02:24.640><c> position</c><00:02:24.959><c> so</c><00:02:25.120><c> what</c><00:02:25.200><c> we</c><00:02:25.360><c> do</c><00:02:25.520><c> is</c>

00:02:25.670 --> 00:02:25.680 align:start position:0%
at this position so what we do is
 

00:02:25.680 --> 00:02:27.510 align:start position:0%
at this position so what we do is
basically<00:02:26.239><c> cross</c><00:02:26.640><c> it</c><00:02:26.879><c> out</c><00:02:27.040><c> and</c><00:02:27.120><c> then</c><00:02:27.280><c> we</c><00:02:27.360><c> just</c>

00:02:27.510 --> 00:02:27.520 align:start position:0%
basically cross it out and then we just
 

00:02:27.520 --> 00:02:29.030 align:start position:0%
basically cross it out and then we just
want<00:02:27.599><c> to</c><00:02:27.680><c> look</c><00:02:27.920><c> at</c><00:02:28.000><c> the</c><00:02:28.080><c> remaining</c>

00:02:29.030 --> 00:02:29.040 align:start position:0%
want to look at the remaining
 

00:02:29.040 --> 00:02:30.949 align:start position:0%
want to look at the remaining
portions<00:02:29.440><c> now</c><00:02:29.599><c> how</c><00:02:29.760><c> can</c><00:02:29.920><c> we</c><00:02:30.080><c> actually</c><00:02:30.319><c> do</c><00:02:30.560><c> this</c>

00:02:30.949 --> 00:02:30.959 align:start position:0%
portions now how can we actually do this
 

00:02:30.959 --> 00:02:33.110 align:start position:0%
portions now how can we actually do this
uh<00:02:31.519><c> like</c><00:02:31.680><c> what</c><00:02:31.840><c> kind</c><00:02:31.920><c> of</c><00:02:32.160><c> operation</c><00:02:32.640><c> can</c><00:02:32.800><c> we</c><00:02:32.879><c> do</c>

00:02:33.110 --> 00:02:33.120 align:start position:0%
uh like what kind of operation can we do
 

00:02:33.120 --> 00:02:33.990 align:start position:0%
uh like what kind of operation can we do
basically<00:02:33.519><c> if</c><00:02:33.599><c> you</c><00:02:33.680><c> take</c>

00:02:33.990 --> 00:02:34.000 align:start position:0%
basically if you take
 

00:02:34.000 --> 00:02:36.070 align:start position:0%
basically if you take
three<00:02:34.319><c> and</c><00:02:34.480><c> divide</c><00:02:34.959><c> it</c><00:02:35.040><c> by</c><00:02:35.200><c> 2</c><00:02:35.599><c> integer</c>

00:02:36.070 --> 00:02:36.080 align:start position:0%
three and divide it by 2 integer
 

00:02:36.080 --> 00:02:37.030 align:start position:0%
three and divide it by 2 integer
division<00:02:36.560><c> here</c>

00:02:37.030 --> 00:02:37.040 align:start position:0%
division here
 

00:02:37.040 --> 00:02:38.869 align:start position:0%
division here
and<00:02:37.280><c> most</c><00:02:37.599><c> programming</c><00:02:38.080><c> languages</c><00:02:38.480><c> will</c><00:02:38.720><c> do</c>

00:02:38.869 --> 00:02:38.879 align:start position:0%
and most programming languages will do
 

00:02:38.879 --> 00:02:41.509 align:start position:0%
and most programming languages will do
this<00:02:39.519><c> basically</c><00:02:40.000><c> by</c><00:02:40.239><c> integer</c><00:02:40.720><c> division</c>

00:02:41.509 --> 00:02:41.519 align:start position:0%
this basically by integer division
 

00:02:41.519 --> 00:02:43.110 align:start position:0%
this basically by integer division
what<00:02:41.680><c> that's</c><00:02:41.920><c> going</c><00:02:42.000><c> to</c><00:02:42.080><c> do</c><00:02:42.400><c> to</c><00:02:42.560><c> this</c><00:02:42.800><c> integer</c>

00:02:43.110 --> 00:02:43.120 align:start position:0%
what that's going to do to this integer
 

00:02:43.120 --> 00:02:44.470 align:start position:0%
what that's going to do to this integer
is<00:02:43.280><c> it's</c><00:02:43.440><c> basically</c><00:02:43.760><c> going</c><00:02:43.920><c> to</c><00:02:44.080><c> take</c><00:02:44.239><c> that</c>

00:02:44.470 --> 00:02:44.480 align:start position:0%
is it's basically going to take that
 

00:02:44.480 --> 00:02:45.990 align:start position:0%
is it's basically going to take that
ones<00:02:44.800><c> place</c><00:02:45.040><c> and</c><00:02:45.200><c> remove</c><00:02:45.680><c> it</c>

00:02:45.990 --> 00:02:46.000 align:start position:0%
ones place and remove it
 

00:02:46.000 --> 00:02:47.990 align:start position:0%
ones place and remove it
take<00:02:46.160><c> the</c><00:02:46.400><c> remaining</c><00:02:46.879><c> bits</c><00:02:47.360><c> and</c><00:02:47.440><c> then</c><00:02:47.680><c> shift</c>

00:02:47.990 --> 00:02:48.000 align:start position:0%
take the remaining bits and then shift
 

00:02:48.000 --> 00:02:49.509 align:start position:0%
take the remaining bits and then shift
it<00:02:48.080><c> to</c><00:02:48.239><c> the</c><00:02:48.400><c> right</c><00:02:48.640><c> so</c><00:02:48.800><c> it</c><00:02:48.879><c> basically</c><00:02:49.280><c> does</c>

00:02:49.509 --> 00:02:49.519 align:start position:0%
it to the right so it basically does
 

00:02:49.519 --> 00:02:51.030 align:start position:0%
it to the right so it basically does
exactly<00:02:49.920><c> what</c><00:02:50.080><c> you</c><00:02:50.160><c> would</c><00:02:50.319><c> want</c><00:02:50.480><c> to</c><00:02:50.560><c> do</c>

00:02:51.030 --> 00:02:51.040 align:start position:0%
exactly what you would want to do
 

00:02:51.040 --> 00:02:52.710 align:start position:0%
exactly what you would want to do
and<00:02:51.280><c> of</c><00:02:51.360><c> course</c><00:02:51.760><c> what</c><00:02:51.920><c> do</c><00:02:52.080><c> we</c><00:02:52.239><c> get</c><00:02:52.480><c> when</c><00:02:52.640><c> we</c>

00:02:52.710 --> 00:02:52.720 align:start position:0%
and of course what do we get when we
 

00:02:52.720 --> 00:02:55.110 align:start position:0%
and of course what do we get when we
take<00:02:52.959><c> 3</c><00:02:53.280><c> and</c><00:02:53.360><c> divide</c><00:02:53.680><c> it</c><00:02:53.760><c> by</c><00:02:54.000><c> 2</c>

00:02:55.110 --> 00:02:55.120 align:start position:0%
take 3 and divide it by 2
 

00:02:55.120 --> 00:02:57.589 align:start position:0%
take 3 and divide it by 2
integer<00:02:55.519><c> division</c><00:02:55.920><c> is</c><00:02:56.000><c> going</c><00:02:56.160><c> to</c><00:02:56.239><c> give</c><00:02:56.400><c> us</c><00:02:56.640><c> a</c><00:02:57.040><c> 1</c>

00:02:57.589 --> 00:02:57.599 align:start position:0%
integer division is going to give us a 1
 

00:02:57.599 --> 00:02:59.030 align:start position:0%
integer division is going to give us a 1
so<00:02:57.760><c> we're</c><00:02:57.920><c> basically</c><00:02:58.319><c> going</c><00:02:58.400><c> to</c><00:02:58.480><c> get</c><00:02:58.720><c> this</c>

00:02:59.030 --> 00:02:59.040 align:start position:0%
so we're basically going to get this
 

00:02:59.040 --> 00:03:00.790 align:start position:0%
so we're basically going to get this
and<00:02:59.120><c> when</c><00:02:59.200><c> you</c><00:02:59.360><c> look</c><00:02:59.599><c> at</c><00:02:59.680><c> that</c><00:03:00.159><c> yes</c><00:03:00.480><c> this</c><00:03:00.720><c> is</c>

00:03:00.790 --> 00:03:00.800 align:start position:0%
and when you look at that yes this is
 

00:03:00.800 --> 00:03:02.790 align:start position:0%
and when you look at that yes this is
the<00:03:00.879><c> binary</c><00:03:01.280><c> representation</c><00:03:02.080><c> of</c><00:03:02.400><c> 1</c>

00:03:02.790 --> 00:03:02.800 align:start position:0%
the binary representation of 1
 

00:03:02.800 --> 00:03:04.710 align:start position:0%
the binary representation of 1
right<00:03:03.280><c> so</c><00:03:03.440><c> now</c><00:03:03.599><c> we're</c><00:03:03.760><c> gonna</c><00:03:03.920><c> take</c><00:03:04.159><c> this</c><00:03:04.560><c> and</c>

00:03:04.710 --> 00:03:04.720 align:start position:0%
right so now we're gonna take this and
 

00:03:04.720 --> 00:03:07.350 align:start position:0%
right so now we're gonna take this and
mod<00:03:04.959><c> it</c><00:03:05.120><c> by</c><00:03:05.440><c> two</c><00:03:05.680><c> as</c><00:03:05.840><c> well</c><00:03:06.080><c> we're</c><00:03:06.319><c> taking</c><00:03:06.720><c> one</c>

00:03:07.350 --> 00:03:07.360 align:start position:0%
mod it by two as well we're taking one
 

00:03:07.360 --> 00:03:10.149 align:start position:0%
mod it by two as well we're taking one
modding<00:03:07.680><c> it</c><00:03:07.760><c> by</c><00:03:08.000><c> two</c><00:03:08.800><c> that's</c><00:03:09.120><c> also</c><00:03:09.360><c> gonna</c><00:03:09.599><c> be</c><00:03:09.840><c> a</c>

00:03:10.149 --> 00:03:10.159 align:start position:0%
modding it by two that's also gonna be a
 

00:03:10.159 --> 00:03:11.350 align:start position:0%
modding it by two that's also gonna be a
one

00:03:11.350 --> 00:03:11.360 align:start position:0%
one
 

00:03:11.360 --> 00:03:13.190 align:start position:0%
one
so<00:03:11.519><c> so</c><00:03:11.760><c> far</c><00:03:11.920><c> we've</c><00:03:12.159><c> counted</c><00:03:12.560><c> two</c><00:03:12.800><c> different</c>

00:03:13.190 --> 00:03:13.200 align:start position:0%
so so far we've counted two different
 

00:03:13.200 --> 00:03:14.949 align:start position:0%
so so far we've counted two different
ones<00:03:13.599><c> for</c><00:03:13.840><c> this</c><00:03:14.239><c> integer</c>

00:03:14.949 --> 00:03:14.959 align:start position:0%
ones for this integer
 

00:03:14.959 --> 00:03:18.070 align:start position:0%
ones for this integer
and<00:03:15.280><c> again</c><00:03:16.080><c> we're</c><00:03:16.239><c> gonna</c><00:03:16.480><c> take</c><00:03:17.120><c> this</c><00:03:17.599><c> uh</c>

00:03:18.070 --> 00:03:18.080 align:start position:0%
and again we're gonna take this uh
 

00:03:18.080 --> 00:03:20.229 align:start position:0%
and again we're gonna take this uh
this<00:03:18.319><c> one's</c><00:03:18.640><c> place</c><00:03:18.959><c> now</c><00:03:19.200><c> and</c><00:03:19.519><c> chop</c><00:03:19.760><c> it</c><00:03:19.920><c> off</c><00:03:20.159><c> and</c>

00:03:20.229 --> 00:03:20.239 align:start position:0%
this one's place now and chop it off and
 

00:03:20.239 --> 00:03:21.990 align:start position:0%
this one's place now and chop it off and
now<00:03:20.400><c> we're</c><00:03:20.640><c> left</c><00:03:20.879><c> with</c><00:03:21.040><c> a</c><00:03:21.120><c> single</c><00:03:21.440><c> zero</c><00:03:21.760><c> so</c><00:03:21.920><c> if</c>

00:03:21.990 --> 00:03:22.000 align:start position:0%
now we're left with a single zero so if
 

00:03:22.000 --> 00:03:22.790 align:start position:0%
now we're left with a single zero so if
you<00:03:22.080><c> take</c><00:03:22.400><c> one</c>

00:03:22.790 --> 00:03:22.800 align:start position:0%
you take one
 

00:03:22.800 --> 00:03:24.949 align:start position:0%
you take one
divided<00:03:23.280><c> by</c><00:03:23.440><c> two</c><00:03:23.680><c> yes</c><00:03:23.920><c> you</c><00:03:24.080><c> get</c><00:03:24.319><c> zero</c><00:03:24.640><c> once</c><00:03:24.799><c> we</c>

00:03:24.949 --> 00:03:24.959 align:start position:0%
divided by two yes you get zero once we
 

00:03:24.959 --> 00:03:26.550 align:start position:0%
divided by two yes you get zero once we
get<00:03:25.040><c> to</c><00:03:25.200><c> zero</c><00:03:25.599><c> that's</c><00:03:25.840><c> how</c><00:03:26.000><c> you</c><00:03:26.159><c> know</c><00:03:26.319><c> when</c>

00:03:26.550 --> 00:03:26.560 align:start position:0%
get to zero that's how you know when
 

00:03:26.560 --> 00:03:27.589 align:start position:0%
get to zero that's how you know when
we're<00:03:26.799><c> stopping</c>

00:03:27.589 --> 00:03:27.599 align:start position:0%
we're stopping
 

00:03:27.599 --> 00:03:29.430 align:start position:0%
we're stopping
right<00:03:28.000><c> there's</c><00:03:28.319><c> obviously</c><00:03:28.799><c> in</c><00:03:28.959><c> zero</c><00:03:29.280><c> there's</c>

00:03:29.430 --> 00:03:29.440 align:start position:0%
right there's obviously in zero there's
 

00:03:29.440 --> 00:03:30.710 align:start position:0%
right there's obviously in zero there's
no<00:03:29.680><c> more</c><00:03:30.000><c> ones</c>

00:03:30.710 --> 00:03:30.720 align:start position:0%
no more ones
 

00:03:30.720 --> 00:03:33.350 align:start position:0%
no more ones
in<00:03:30.959><c> zero</c><00:03:31.680><c> so</c><00:03:32.239><c> basically</c><00:03:32.640><c> we</c><00:03:32.799><c> counted</c><00:03:33.200><c> two</c>

00:03:33.350 --> 00:03:33.360 align:start position:0%
in zero so basically we counted two
 

00:03:33.360 --> 00:03:34.149 align:start position:0%
in zero so basically we counted two
different<00:03:33.760><c> ones</c>

00:03:34.149 --> 00:03:34.159 align:start position:0%
different ones
 

00:03:34.159 --> 00:03:35.670 align:start position:0%
different ones
so<00:03:34.400><c> that's</c><00:03:34.560><c> how</c><00:03:34.720><c> we</c><00:03:34.879><c> would</c><00:03:35.040><c> do</c><00:03:35.200><c> it</c><00:03:35.280><c> for</c><00:03:35.440><c> every</c>

00:03:35.670 --> 00:03:35.680 align:start position:0%
so that's how we would do it for every
 

00:03:35.680 --> 00:03:37.430 align:start position:0%
so that's how we would do it for every
particular<00:03:36.239><c> integer</c><00:03:36.640><c> the</c><00:03:36.720><c> example</c><00:03:37.120><c> i</c><00:03:37.200><c> showed</c>

00:03:37.430 --> 00:03:37.440 align:start position:0%
particular integer the example i showed
 

00:03:37.440 --> 00:03:38.789 align:start position:0%
particular integer the example i showed
right<00:03:37.680><c> now</c><00:03:37.920><c> is</c><00:03:38.159><c> three</c>

00:03:38.789 --> 00:03:38.799 align:start position:0%
right now is three
 

00:03:38.799 --> 00:03:42.710 align:start position:0%
right now is three
and<00:03:39.519><c> to</c><00:03:39.760><c> get</c><00:03:40.720><c> this</c><00:03:41.440><c> the</c><00:03:41.599><c> time</c><00:03:41.840><c> complexity</c><00:03:42.480><c> is</c>

00:03:42.710 --> 00:03:42.720 align:start position:0%
and to get this the time complexity is
 

00:03:42.720 --> 00:03:43.190 align:start position:0%
and to get this the time complexity is
log

00:03:43.190 --> 00:03:43.200 align:start position:0%
log
 

00:03:43.200 --> 00:03:45.750 align:start position:0%
log
n<00:03:43.760><c> because</c><00:03:44.000><c> for</c><00:03:44.239><c> any</c><00:03:44.560><c> integer</c><00:03:45.040><c> n</c><00:03:45.360><c> how</c><00:03:45.519><c> many</c>

00:03:45.750 --> 00:03:45.760 align:start position:0%
n because for any integer n how many
 

00:03:45.760 --> 00:03:47.509 align:start position:0%
n because for any integer n how many
times<00:03:46.000><c> can</c><00:03:46.159><c> you</c><00:03:46.319><c> divide</c><00:03:46.640><c> it</c><00:03:46.799><c> by</c><00:03:46.959><c> two</c><00:03:47.200><c> well</c><00:03:47.440><c> of</c>

00:03:47.509 --> 00:03:47.519 align:start position:0%
times can you divide it by two well of
 

00:03:47.519 --> 00:03:47.990 align:start position:0%
times can you divide it by two well of
course

00:03:47.990 --> 00:03:48.000 align:start position:0%
course
 

00:03:48.000 --> 00:03:50.470 align:start position:0%
course
that's<00:03:48.239><c> just</c><00:03:48.560><c> log</c><00:03:48.959><c> base</c><00:03:49.360><c> two</c><00:03:49.680><c> n</c><00:03:50.080><c> now</c><00:03:50.239><c> we</c><00:03:50.319><c> don't</c>

00:03:50.470 --> 00:03:50.480 align:start position:0%
that's just log base two n now we don't
 

00:03:50.480 --> 00:03:51.830 align:start position:0%
that's just log base two n now we don't
really<00:03:50.640><c> worry</c><00:03:50.879><c> too</c><00:03:51.040><c> much</c><00:03:51.200><c> about</c><00:03:51.440><c> the</c><00:03:51.519><c> base</c>

00:03:51.830 --> 00:03:51.840 align:start position:0%
really worry too much about the base
 

00:03:51.840 --> 00:03:53.910 align:start position:0%
really worry too much about the base
usually<00:03:52.239><c> but</c><00:03:52.400><c> yes</c><00:03:52.640><c> it's</c><00:03:52.799><c> gonna</c><00:03:52.959><c> be</c><00:03:53.200><c> log</c><00:03:53.519><c> n</c>

00:03:53.910 --> 00:03:53.920 align:start position:0%
usually but yes it's gonna be log n
 

00:03:53.920 --> 00:03:56.229 align:start position:0%
usually but yes it's gonna be log n
log<00:03:54.319><c> base</c><00:03:54.640><c> two</c><00:03:55.040><c> n</c><00:03:55.360><c> that's</c><00:03:55.599><c> how</c><00:03:55.760><c> many</c><00:03:55.920><c> times</c><00:03:56.159><c> we</c>

00:03:56.229 --> 00:03:56.239 align:start position:0%
log base two n that's how many times we
 

00:03:56.239 --> 00:03:58.309 align:start position:0%
log base two n that's how many times we
could<00:03:56.400><c> divide</c><00:03:56.879><c> any</c><00:03:57.040><c> particular</c><00:03:57.599><c> integer</c>

00:03:58.309 --> 00:03:58.319 align:start position:0%
could divide any particular integer
 

00:03:58.319 --> 00:04:00.309 align:start position:0%
could divide any particular integer
n<00:03:58.640><c> by</c><00:03:58.879><c> two</c><00:03:59.360><c> and</c><00:03:59.519><c> of</c><00:03:59.599><c> course</c><00:03:59.840><c> we</c><00:04:00.000><c> know</c><00:04:00.159><c> we're</c>

00:04:00.309 --> 00:04:00.319 align:start position:0%
n by two and of course we know we're
 

00:04:00.319 --> 00:04:02.309 align:start position:0%
n by two and of course we know we're
doing<00:04:00.480><c> this</c><00:04:00.879><c> for</c><00:04:01.120><c> a</c><00:04:01.200><c> bunch</c><00:04:01.519><c> of</c><00:04:01.680><c> integers</c><00:04:02.159><c> in</c>

00:04:02.309 --> 00:04:02.319 align:start position:0%
doing this for a bunch of integers in
 

00:04:02.319 --> 00:04:03.030 align:start position:0%
doing this for a bunch of integers in
the<00:04:02.480><c> range</c>

00:04:03.030 --> 00:04:03.040 align:start position:0%
the range
 

00:04:03.040 --> 00:04:05.270 align:start position:0%
the range
all<00:04:03.200><c> the</c><00:04:03.280><c> way</c><00:04:03.519><c> from</c><00:04:03.920><c> 0</c><00:04:04.239><c> to</c><00:04:04.480><c> n</c><00:04:04.799><c> so</c><00:04:04.959><c> we're</c><00:04:05.120><c> doing</c>

00:04:05.270 --> 00:04:05.280 align:start position:0%
all the way from 0 to n so we're doing
 

00:04:05.280 --> 00:04:06.470 align:start position:0%
all the way from 0 to n so we're doing
this<00:04:05.599><c> n</c><00:04:05.840><c> times</c>

00:04:06.470 --> 00:04:06.480 align:start position:0%
this n times
 

00:04:06.480 --> 00:04:09.910 align:start position:0%
this n times
doing<00:04:07.599><c> a</c><00:04:07.760><c> log</c><00:04:08.159><c> n</c><00:04:08.480><c> operation</c><00:04:09.200><c> n</c><00:04:09.439><c> times</c>

00:04:09.910 --> 00:04:09.920 align:start position:0%
doing a log n operation n times
 

00:04:09.920 --> 00:04:12.309 align:start position:0%
doing a log n operation n times
is<00:04:10.159><c> going</c><00:04:10.319><c> to</c><00:04:10.400><c> be</c><00:04:10.560><c> time</c><00:04:10.720><c> complexity</c><00:04:11.360><c> and</c><00:04:11.519><c> log</c><00:04:11.840><c> n</c>

00:04:12.309 --> 00:04:12.319 align:start position:0%
is going to be time complexity and log n
 

00:04:12.319 --> 00:04:13.750 align:start position:0%
is going to be time complexity and log n
now<00:04:12.560><c> there's</c><00:04:12.720><c> some</c><00:04:12.879><c> repeated</c><00:04:13.360><c> work</c>

00:04:13.750 --> 00:04:13.760 align:start position:0%
now there's some repeated work
 

00:04:13.760 --> 00:04:15.350 align:start position:0%
now there's some repeated work
that<00:04:13.920><c> we</c><00:04:14.000><c> can</c><00:04:14.159><c> eliminate</c><00:04:14.720><c> that</c><00:04:14.879><c> you</c><00:04:15.040><c> can</c>

00:04:15.350 --> 00:04:15.360 align:start position:0%
that we can eliminate that you can
 

00:04:15.360 --> 00:04:17.270 align:start position:0%
that we can eliminate that you can
easily<00:04:15.760><c> recognize</c><00:04:16.239><c> when</c><00:04:16.400><c> you</c><00:04:16.560><c> actually</c><00:04:16.880><c> draw</c>

00:04:17.270 --> 00:04:17.280 align:start position:0%
easily recognize when you actually draw
 

00:04:17.280 --> 00:04:18.949 align:start position:0%
easily recognize when you actually draw
out<00:04:17.440><c> the</c><00:04:17.680><c> bit</c><00:04:17.919><c> mappings</c>

00:04:18.949 --> 00:04:18.959 align:start position:0%
out the bit mappings
 

00:04:18.959 --> 00:04:21.110 align:start position:0%
out the bit mappings
the<00:04:19.519><c> the</c><00:04:19.680><c> binary</c><00:04:20.160><c> representations</c><00:04:20.880><c> of</c><00:04:21.040><c> a</c>

00:04:21.110 --> 00:04:21.120 align:start position:0%
the the binary representations of a
 

00:04:21.120 --> 00:04:23.030 align:start position:0%
the the binary representations of a
bunch<00:04:21.359><c> of</c><00:04:21.519><c> integers</c><00:04:22.000><c> and</c><00:04:22.160><c> with</c><00:04:22.400><c> that</c><00:04:22.639><c> repeated</c>

00:04:23.030 --> 00:04:23.040 align:start position:0%
bunch of integers and with that repeated
 

00:04:23.040 --> 00:04:25.189 align:start position:0%
bunch of integers and with that repeated
work<00:04:23.280><c> we</c><00:04:23.440><c> can</c><00:04:23.600><c> actually</c><00:04:23.840><c> get</c><00:04:24.080><c> a</c><00:04:24.240><c> working</c><00:04:24.720><c> o</c><00:04:24.960><c> of</c>

00:04:25.189 --> 00:04:25.199 align:start position:0%
work we can actually get a working o of
 

00:04:25.199 --> 00:04:25.510 align:start position:0%
work we can actually get a working o of
n

00:04:25.510 --> 00:04:25.520 align:start position:0%
n
 

00:04:25.520 --> 00:04:27.270 align:start position:0%
n
solution<00:04:26.160><c> let</c><00:04:26.320><c> me</c><00:04:26.479><c> show</c><00:04:26.639><c> you</c><00:04:26.800><c> that</c><00:04:27.040><c> right</c><00:04:27.280><c> now</c>

00:04:27.270 --> 00:04:27.280 align:start position:0%
solution let me show you that right now
 

00:04:27.280 --> 00:04:29.430 align:start position:0%
solution let me show you that right now
now<00:04:28.080><c> i</c><00:04:28.160><c> just</c><00:04:28.400><c> drew</c><00:04:28.639><c> out</c><00:04:28.800><c> the</c><00:04:28.960><c> binary</c>

00:04:29.430 --> 00:04:29.440 align:start position:0%
now i just drew out the binary
 

00:04:29.440 --> 00:04:31.430 align:start position:0%
now i just drew out the binary
representations<00:04:30.240><c> from</c><00:04:30.560><c> zero</c><00:04:30.960><c> all</c><00:04:31.040><c> the</c><00:04:31.120><c> way</c><00:04:31.280><c> up</c>

00:04:31.430 --> 00:04:31.440 align:start position:0%
representations from zero all the way up
 

00:04:31.440 --> 00:04:32.950 align:start position:0%
representations from zero all the way up
to<00:04:31.600><c> eight</c><00:04:31.840><c> so</c><00:04:32.000><c> we</c><00:04:32.160><c> know</c><00:04:32.320><c> that</c><00:04:32.479><c> of</c><00:04:32.560><c> course</c>

00:04:32.950 --> 00:04:32.960 align:start position:0%
to eight so we know that of course
 

00:04:32.960 --> 00:04:35.909 align:start position:0%
to eight so we know that of course
zero<00:04:33.360><c> has</c><00:04:34.080><c> zero</c><00:04:34.880><c> ones</c><00:04:35.280><c> in</c><00:04:35.440><c> the</c><00:04:35.520><c> binary</c>

00:04:35.909 --> 00:04:35.919 align:start position:0%
zero has zero ones in the binary
 

00:04:35.919 --> 00:04:36.790 align:start position:0%
zero has zero ones in the binary
representation

00:04:36.790 --> 00:04:36.800 align:start position:0%
representation
 

00:04:36.800 --> 00:04:40.230 align:start position:0%
representation
when<00:04:36.960><c> you</c><00:04:37.040><c> get</c><00:04:37.199><c> to</c><00:04:37.440><c> one</c><00:04:38.000><c> we</c><00:04:38.160><c> have</c><00:04:38.880><c> one</c>

00:04:40.230 --> 00:04:40.240 align:start position:0%
when you get to one we have one
 

00:04:40.240 --> 00:04:41.830 align:start position:0%
when you get to one we have one
occurrence<00:04:40.639><c> of</c><00:04:40.800><c> one</c><00:04:41.040><c> in</c><00:04:41.199><c> its</c><00:04:41.360><c> binary</c>

00:04:41.830 --> 00:04:41.840 align:start position:0%
occurrence of one in its binary
 

00:04:41.840 --> 00:04:44.150 align:start position:0%
occurrence of one in its binary
representation<00:04:42.960><c> for</c><00:04:43.280><c> two</c><00:04:43.600><c> we</c><00:04:43.759><c> have</c>

00:04:44.150 --> 00:04:44.160 align:start position:0%
representation for two we have
 

00:04:44.160 --> 00:04:46.550 align:start position:0%
representation for two we have
one<00:04:44.639><c> for</c><00:04:44.960><c> three</c><00:04:45.440><c> by</c><00:04:45.680><c> looking</c><00:04:45.919><c> at</c><00:04:46.080><c> this</c><00:04:46.240><c> we</c><00:04:46.400><c> can</c>

00:04:46.550 --> 00:04:46.560 align:start position:0%
one for three by looking at this we can
 

00:04:46.560 --> 00:04:48.710 align:start position:0%
one for three by looking at this we can
see<00:04:47.040><c> we</c><00:04:47.199><c> have</c><00:04:47.440><c> two</c><00:04:47.680><c> different</c><00:04:48.080><c> ones</c>

00:04:48.710 --> 00:04:48.720 align:start position:0%
see we have two different ones
 

00:04:48.720 --> 00:04:51.270 align:start position:0%
see we have two different ones
and<00:04:49.040><c> now</c><00:04:49.440><c> when</c><00:04:49.600><c> you</c><00:04:49.759><c> get</c><00:04:49.919><c> to</c><00:04:50.240><c> four</c><00:04:50.639><c> you</c><00:04:50.880><c> really</c>

00:04:51.270 --> 00:04:51.280 align:start position:0%
and now when you get to four you really
 

00:04:51.280 --> 00:04:53.590 align:start position:0%
and now when you get to four you really
start<00:04:51.600><c> to</c><00:04:51.919><c> notice</c><00:04:52.400><c> how</c><00:04:52.720><c> we</c><00:04:52.960><c> are</c><00:04:53.199><c> doing</c><00:04:53.440><c> this</c>

00:04:53.590 --> 00:04:53.600 align:start position:0%
start to notice how we are doing this
 

00:04:53.600 --> 00:04:54.710 align:start position:0%
start to notice how we are doing this
repeated<00:04:54.080><c> work</c>

00:04:54.710 --> 00:04:54.720 align:start position:0%
repeated work
 

00:04:54.720 --> 00:04:57.670 align:start position:0%
repeated work
notice<00:04:55.120><c> how</c><00:04:55.360><c> for</c><00:04:55.680><c> four</c><00:04:56.240><c> all</c><00:04:56.400><c> the</c><00:04:56.560><c> way</c><00:04:56.800><c> to</c><00:04:57.040><c> seven</c>

00:04:57.670 --> 00:04:57.680 align:start position:0%
notice how for four all the way to seven
 

00:04:57.680 --> 00:04:58.629 align:start position:0%
notice how for four all the way to seven
we<00:04:57.919><c> have</c><00:04:58.240><c> a</c>

00:04:58.629 --> 00:04:58.639 align:start position:0%
we have a
 

00:04:58.639 --> 00:05:01.270 align:start position:0%
we have a
one<00:04:59.360><c> in</c><00:04:59.840><c> this</c><00:05:00.240><c> place</c><00:05:00.560><c> right</c><00:05:00.720><c> in</c><00:05:00.880><c> the</c><00:05:01.039><c> most</c>

00:05:01.270 --> 00:05:01.280 align:start position:0%
one in this place right in the most
 

00:05:01.280 --> 00:05:02.550 align:start position:0%
one in this place right in the most
significant<00:05:02.000><c> place</c>

00:05:02.550 --> 00:05:02.560 align:start position:0%
significant place
 

00:05:02.560 --> 00:05:05.510 align:start position:0%
significant place
we<00:05:02.800><c> have</c><00:05:03.039><c> a</c><00:05:03.280><c> one</c><00:05:04.000><c> and</c><00:05:04.720><c> notice</c><00:05:05.120><c> how</c><00:05:05.360><c> the</c>

00:05:05.510 --> 00:05:05.520 align:start position:0%
we have a one and notice how the
 

00:05:05.520 --> 00:05:06.790 align:start position:0%
we have a one and notice how the
remaining<00:05:06.240><c> portion</c>

00:05:06.790 --> 00:05:06.800 align:start position:0%
remaining portion
 

00:05:06.800 --> 00:05:10.150 align:start position:0%
remaining portion
of<00:05:07.199><c> this</c><00:05:08.080><c> and</c><00:05:08.240><c> then</c><00:05:08.960><c> this</c><00:05:09.600><c> and</c><00:05:09.759><c> then</c>

00:05:10.150 --> 00:05:10.160 align:start position:0%
of this and then this and then
 

00:05:10.160 --> 00:05:13.189 align:start position:0%
of this and then this and then
this<00:05:10.960><c> and</c><00:05:11.600><c> this</c><00:05:12.240><c> these</c><00:05:12.720><c> four</c>

00:05:13.189 --> 00:05:13.199 align:start position:0%
this and this these four
 

00:05:13.199 --> 00:05:15.749 align:start position:0%
this and this these four
are<00:05:13.360><c> just</c><00:05:13.759><c> repeats</c><00:05:14.560><c> of</c><00:05:14.639><c> the</c><00:05:14.960><c> previous</c><00:05:15.440><c> four</c>

00:05:15.749 --> 00:05:15.759 align:start position:0%
are just repeats of the previous four
 

00:05:15.759 --> 00:05:17.909 align:start position:0%
are just repeats of the previous four
that<00:05:15.840><c> we</c><00:05:16.000><c> calculated</c><00:05:16.720><c> right</c><00:05:17.039><c> because</c>

00:05:17.909 --> 00:05:17.919 align:start position:0%
that we calculated right because
 

00:05:17.919 --> 00:05:19.990 align:start position:0%
that we calculated right because
we're<00:05:18.320><c> you</c><00:05:18.400><c> know</c><00:05:18.479><c> we're</c><00:05:18.639><c> counting</c><00:05:19.039><c> zero</c><00:05:19.360><c> zero</c>

00:05:19.990 --> 00:05:20.000 align:start position:0%
we're you know we're counting zero zero
 

00:05:20.000 --> 00:05:21.029 align:start position:0%
we're you know we're counting zero zero
adding<00:05:20.320><c> a</c><00:05:20.479><c> one</c>

00:05:21.029 --> 00:05:21.039 align:start position:0%
adding a one
 

00:05:21.039 --> 00:05:22.710 align:start position:0%
adding a one
right<00:05:21.280><c> to</c><00:05:21.440><c> four</c><00:05:21.680><c> when</c><00:05:21.840><c> you</c><00:05:22.080><c> add</c><00:05:22.240><c> a</c><00:05:22.400><c> one</c><00:05:22.560><c> you</c>

00:05:22.710 --> 00:05:22.720 align:start position:0%
right to four when you add a one you
 

00:05:22.720 --> 00:05:24.790 align:start position:0%
right to four when you add a one you
just<00:05:22.880><c> change</c><00:05:23.120><c> it</c><00:05:23.199><c> to</c><00:05:23.360><c> this</c><00:05:23.919><c> from</c><00:05:24.240><c> four</c><00:05:24.479><c> when</c><00:05:24.639><c> we</c>

00:05:24.790 --> 00:05:24.800 align:start position:0%
just change it to this from four when we
 

00:05:24.800 --> 00:05:25.670 align:start position:0%
just change it to this from four when we
add<00:05:24.960><c> a</c><00:05:25.120><c> two</c>

00:05:25.670 --> 00:05:25.680 align:start position:0%
add a two
 

00:05:25.680 --> 00:05:27.670 align:start position:0%
add a two
we<00:05:25.840><c> get</c><00:05:26.400><c> this</c><00:05:26.800><c> which</c><00:05:27.039><c> is</c><00:05:27.199><c> basically</c><00:05:27.600><c> the</c>

00:05:27.670 --> 00:05:27.680 align:start position:0%
we get this which is basically the
 

00:05:27.680 --> 00:05:30.310 align:start position:0%
we get this which is basically the
binary<00:05:28.080><c> representation</c><00:05:28.800><c> of</c><00:05:29.039><c> two</c><00:05:29.440><c> itself</c>

00:05:30.310 --> 00:05:30.320 align:start position:0%
binary representation of two itself
 

00:05:30.320 --> 00:05:32.629 align:start position:0%
binary representation of two itself
right<00:05:31.039><c> and</c><00:05:31.120><c> then</c><00:05:31.360><c> you</c><00:05:31.440><c> get</c><00:05:31.600><c> a</c><00:05:31.680><c> one</c><00:05:32.000><c> zero</c><00:05:32.560><c> and</c>

00:05:32.629 --> 00:05:32.639 align:start position:0%
right and then you get a one zero and
 

00:05:32.639 --> 00:05:33.830 align:start position:0%
right and then you get a one zero and
then<00:05:32.800><c> you</c><00:05:32.880><c> get</c><00:05:33.039><c> a</c><00:05:33.199><c> one</c>

00:05:33.830 --> 00:05:33.840 align:start position:0%
then you get a one
 

00:05:33.840 --> 00:05:36.870 align:start position:0%
then you get a one
one<00:05:34.320><c> which</c><00:05:34.560><c> is</c><00:05:34.800><c> matching</c><00:05:35.520><c> over</c><00:05:35.840><c> here</c><00:05:36.479><c> so</c><00:05:36.639><c> now</c>

00:05:36.870 --> 00:05:36.880 align:start position:0%
one which is matching over here so now
 

00:05:36.880 --> 00:05:38.469 align:start position:0%
one which is matching over here so now
looking<00:05:37.199><c> at</c><00:05:37.360><c> it</c><00:05:37.520><c> this</c><00:05:37.759><c> is</c><00:05:37.919><c> the</c><00:05:38.080><c> binary</c>

00:05:38.469 --> 00:05:38.479 align:start position:0%
looking at it this is the binary
 

00:05:38.479 --> 00:05:39.510 align:start position:0%
looking at it this is the binary
representation<00:05:39.280><c> of</c>

00:05:39.510 --> 00:05:39.520 align:start position:0%
representation of
 

00:05:39.520 --> 00:05:41.909 align:start position:0%
representation of
four<00:05:39.840><c> right</c><00:05:40.080><c> there's</c><00:05:40.320><c> just</c><00:05:40.560><c> a</c><00:05:40.800><c> single</c><00:05:41.360><c> one</c><00:05:41.759><c> in</c>

00:05:41.909 --> 00:05:41.919 align:start position:0%
four right there's just a single one in
 

00:05:41.919 --> 00:05:43.029 align:start position:0%
four right there's just a single one in
this<00:05:42.240><c> position</c>

00:05:43.029 --> 00:05:43.039 align:start position:0%
this position
 

00:05:43.039 --> 00:05:45.830 align:start position:0%
this position
so<00:05:43.199><c> if</c><00:05:43.360><c> we</c><00:05:43.520><c> wanted</c><00:05:43.759><c> to</c><00:05:43.919><c> take</c><00:05:44.320><c> zero</c><00:05:44.960><c> and</c><00:05:45.280><c> add</c>

00:05:45.830 --> 00:05:45.840 align:start position:0%
so if we wanted to take zero and add
 

00:05:45.840 --> 00:05:47.350 align:start position:0%
so if we wanted to take zero and add
four<00:05:46.080><c> to</c><00:05:46.320><c> it</c><00:05:46.479><c> we</c><00:05:46.639><c> would</c><00:05:46.800><c> just</c>

00:05:47.350 --> 00:05:47.360 align:start position:0%
four to it we would just
 

00:05:47.360 --> 00:05:49.590 align:start position:0%
four to it we would just
to<00:05:47.680><c> take</c><00:05:47.919><c> this</c><00:05:48.080><c> position</c><00:05:48.560><c> and</c><00:05:48.720><c> add</c><00:05:48.960><c> a</c><00:05:49.120><c> one</c><00:05:49.360><c> here</c>

00:05:49.590 --> 00:05:49.600 align:start position:0%
to take this position and add a one here
 

00:05:49.600 --> 00:05:51.189 align:start position:0%
to take this position and add a one here
right<00:05:50.000><c> that</c><00:05:50.160><c> will</c><00:05:50.400><c> take</c><00:05:50.639><c> us</c>

00:05:51.189 --> 00:05:51.199 align:start position:0%
right that will take us
 

00:05:51.199 --> 00:05:54.150 align:start position:0%
right that will take us
four<00:05:51.600><c> positions</c><00:05:52.400><c> ahead</c><00:05:53.360><c> and</c><00:05:53.520><c> if</c><00:05:53.680><c> you</c><00:05:53.759><c> had</c><00:05:54.000><c> a</c>

00:05:54.150 --> 00:05:54.160 align:start position:0%
four positions ahead and if you had a
 

00:05:54.160 --> 00:05:54.629 align:start position:0%
four positions ahead and if you had a
one

00:05:54.629 --> 00:05:54.639 align:start position:0%
one
 

00:05:54.639 --> 00:05:56.550 align:start position:0%
one
and<00:05:54.720><c> you</c><00:05:55.120><c> and</c><00:05:55.199><c> you</c><00:05:55.360><c> changed</c><00:05:55.759><c> this</c><00:05:56.000><c> bit</c><00:05:56.240><c> to</c><00:05:56.400><c> a</c>

00:05:56.550 --> 00:05:56.560 align:start position:0%
and you and you changed this bit to a
 

00:05:56.560 --> 00:05:58.309 align:start position:0%
and you and you changed this bit to a
one<00:05:56.800><c> we're</c><00:05:57.039><c> adding</c><00:05:57.360><c> four</c><00:05:57.600><c> to</c><00:05:57.759><c> it</c><00:05:57.840><c> so</c><00:05:58.000><c> you</c><00:05:58.160><c> can</c>

00:05:58.309 --> 00:05:58.319 align:start position:0%
one we're adding four to it so you can
 

00:05:58.319 --> 00:05:58.629 align:start position:0%
one we're adding four to it so you can
take

00:05:58.629 --> 00:05:58.639 align:start position:0%
take
 

00:05:58.639 --> 00:06:01.350 align:start position:0%
take
a<00:05:58.880><c> one</c><00:05:59.199><c> and</c><00:05:59.440><c> change</c><00:05:59.759><c> it</c><00:05:59.840><c> to</c><00:06:00.000><c> a</c><00:06:00.240><c> five</c><00:06:00.800><c> by</c><00:06:00.960><c> taking</c>

00:06:01.350 --> 00:06:01.360 align:start position:0%
a one and change it to a five by taking
 

00:06:01.360 --> 00:06:01.990 align:start position:0%
a one and change it to a five by taking
that<00:06:01.600><c> bit</c>

00:06:01.990 --> 00:06:02.000 align:start position:0%
that bit
 

00:06:02.000 --> 00:06:05.110 align:start position:0%
that bit
so<00:06:02.319><c> similarly</c><00:06:03.360><c> when</c><00:06:03.520><c> we</c><00:06:03.759><c> get</c><00:06:04.000><c> to</c><00:06:04.400><c> four</c>

00:06:05.110 --> 00:06:05.120 align:start position:0%
so similarly when we get to four
 

00:06:05.120 --> 00:06:07.590 align:start position:0%
so similarly when we get to four
we<00:06:05.360><c> know</c><00:06:05.520><c> that</c><00:06:05.840><c> yes</c><00:06:06.160><c> we're</c><00:06:06.319><c> gonna</c><00:06:06.560><c> have</c><00:06:06.960><c> one</c>

00:06:07.590 --> 00:06:07.600 align:start position:0%
we know that yes we're gonna have one
 

00:06:07.600 --> 00:06:08.710 align:start position:0%
we know that yes we're gonna have one
extra<00:06:08.240><c> one</c>

00:06:08.710 --> 00:06:08.720 align:start position:0%
extra one
 

00:06:08.720 --> 00:06:10.870 align:start position:0%
extra one
in<00:06:08.960><c> this</c><00:06:09.280><c> position</c><00:06:09.759><c> right</c><00:06:09.919><c> because</c><00:06:10.160><c> we</c><00:06:10.400><c> just</c>

00:06:10.870 --> 00:06:10.880 align:start position:0%
in this position right because we just
 

00:06:10.880 --> 00:06:13.830 align:start position:0%
in this position right because we just
got<00:06:11.199><c> this</c><00:06:11.520><c> one</c><00:06:11.759><c> this</c><00:06:12.000><c> one</c><00:06:12.319><c> represents</c><00:06:13.120><c> a</c><00:06:13.360><c> four</c>

00:06:13.830 --> 00:06:13.840 align:start position:0%
got this one this one represents a four
 

00:06:13.840 --> 00:06:16.950 align:start position:0%
got this one this one represents a four
this<00:06:14.000><c> is</c><00:06:14.160><c> the</c><00:06:14.319><c> most</c><00:06:14.639><c> significant</c><00:06:15.520><c> bit</c><00:06:15.919><c> so</c><00:06:16.240><c> far</c>

00:06:16.950 --> 00:06:16.960 align:start position:0%
this is the most significant bit so far
 

00:06:16.960 --> 00:06:19.510 align:start position:0%
this is the most significant bit so far
but<00:06:17.199><c> for</c><00:06:17.360><c> the</c><00:06:17.520><c> remaining</c><00:06:18.400><c> ones</c><00:06:19.039><c> all</c><00:06:19.199><c> we</c><00:06:19.440><c> have</c>

00:06:19.510 --> 00:06:19.520 align:start position:0%
but for the remaining ones all we have
 

00:06:19.520 --> 00:06:19.990 align:start position:0%
but for the remaining ones all we have
to<00:06:19.759><c> do</c>

00:06:19.990 --> 00:06:20.000 align:start position:0%
to do
 

00:06:20.000 --> 00:06:23.350 align:start position:0%
to do
is<00:06:20.319><c> take</c><00:06:20.639><c> this</c><00:06:21.280><c> offset</c><00:06:21.919><c> it</c><00:06:22.160><c> by</c><00:06:22.720><c> four</c>

00:06:23.350 --> 00:06:23.360 align:start position:0%
is take this offset it by four
 

00:06:23.360 --> 00:06:25.189 align:start position:0%
is take this offset it by four
and<00:06:23.600><c> get</c><00:06:23.840><c> here</c><00:06:24.160><c> and</c><00:06:24.319><c> count</c><00:06:24.560><c> how</c><00:06:24.720><c> many</c><00:06:24.960><c> ones</c>

00:06:25.189 --> 00:06:25.199 align:start position:0%
and get here and count how many ones
 

00:06:25.199 --> 00:06:27.189 align:start position:0%
and get here and count how many ones
were<00:06:25.440><c> over</c><00:06:25.680><c> here</c><00:06:26.080><c> so</c><00:06:26.240><c> when</c><00:06:26.400><c> we're</c><00:06:26.639><c> calculating</c>

00:06:27.189 --> 00:06:27.199 align:start position:0%
were over here so when we're calculating
 

00:06:27.199 --> 00:06:27.990 align:start position:0%
were over here so when we're calculating
how<00:06:27.360><c> many</c><00:06:27.600><c> ones</c>

00:06:27.990 --> 00:06:28.000 align:start position:0%
how many ones
 

00:06:28.000 --> 00:06:31.749 align:start position:0%
how many ones
for<00:06:28.319><c> four</c><00:06:28.720><c> we're</c><00:06:28.960><c> just</c><00:06:29.199><c> saying</c><00:06:29.440><c> it's</c><00:06:29.840><c> one</c><00:06:30.639><c> plus</c>

00:06:31.749 --> 00:06:31.759 align:start position:0%
for four we're just saying it's one plus
 

00:06:31.759 --> 00:06:34.870 align:start position:0%
for four we're just saying it's one plus
the<00:06:32.000><c> number</c><00:06:32.479><c> of</c><00:06:32.880><c> bits</c><00:06:33.440><c> at</c><00:06:33.840><c> position</c>

00:06:34.870 --> 00:06:34.880 align:start position:0%
the number of bits at position
 

00:06:34.880 --> 00:06:37.670 align:start position:0%
the number of bits at position
zero<00:06:35.280><c> how</c><00:06:35.440><c> many</c><00:06:35.680><c> bits</c><00:06:36.319><c> how</c><00:06:36.479><c> many</c><00:06:36.800><c> ones</c><00:06:37.280><c> were</c><00:06:37.520><c> in</c>

00:06:37.670 --> 00:06:37.680 align:start position:0%
zero how many bits how many ones were in
 

00:06:37.680 --> 00:06:39.909 align:start position:0%
zero how many bits how many ones were in
position<00:06:38.080><c> zero</c><00:06:38.319><c> that's</c><00:06:38.639><c> our</c><00:06:38.960><c> dp</c><00:06:39.520><c> so</c><00:06:39.680><c> you</c><00:06:39.759><c> can</c>

00:06:39.909 --> 00:06:39.919 align:start position:0%
position zero that's our dp so you can
 

00:06:39.919 --> 00:06:41.830 align:start position:0%
position zero that's our dp so you can
see<00:06:40.160><c> this</c><00:06:40.400><c> is</c><00:06:40.479><c> a</c><00:06:40.639><c> dynamic</c><00:06:41.280><c> programming</c>

00:06:41.830 --> 00:06:41.840 align:start position:0%
see this is a dynamic programming
 

00:06:41.840 --> 00:06:43.749 align:start position:0%
see this is a dynamic programming
problem<00:06:42.160><c> because</c><00:06:42.400><c> we're</c><00:06:42.639><c> using</c><00:06:42.960><c> the</c><00:06:43.280><c> previous</c>

00:06:43.749 --> 00:06:43.759 align:start position:0%
problem because we're using the previous
 

00:06:43.759 --> 00:06:45.350 align:start position:0%
problem because we're using the previous
results<00:06:44.240><c> that</c><00:06:44.319><c> we</c><00:06:44.560><c> calculated</c>

00:06:45.350 --> 00:06:45.360 align:start position:0%
results that we calculated
 

00:06:45.360 --> 00:06:47.749 align:start position:0%
results that we calculated
to<00:06:45.600><c> compute</c><00:06:46.160><c> the</c><00:06:46.400><c> new</c><00:06:46.720><c> results</c><00:06:47.440><c> in</c><00:06:47.600><c> other</c>

00:06:47.749 --> 00:06:47.759 align:start position:0%
to compute the new results in other
 

00:06:47.759 --> 00:06:48.950 align:start position:0%
to compute the new results in other
words<00:06:48.000><c> this</c><00:06:48.160><c> is</c><00:06:48.240><c> going</c><00:06:48.319><c> to</c><00:06:48.400><c> be</c><00:06:48.639><c> 1</c>

00:06:48.950 --> 00:06:48.960 align:start position:0%
words this is going to be 1
 

00:06:48.960 --> 00:06:52.309 align:start position:0%
words this is going to be 1
plus<00:06:49.360><c> dp</c><00:06:50.240><c> of</c><00:06:50.800><c> n</c><00:06:51.440><c> minus</c>

00:06:52.309 --> 00:06:52.319 align:start position:0%
plus dp of n minus
 

00:06:52.319 --> 00:06:55.430 align:start position:0%
plus dp of n minus
4<00:06:52.880><c> and</c><00:06:53.199><c> actually</c><00:06:53.599><c> when</c><00:06:53.759><c> you</c><00:06:53.919><c> look</c><00:06:54.080><c> at</c><00:06:54.240><c> this</c><00:06:54.720><c> 5</c>

00:06:55.430 --> 00:06:55.440 align:start position:0%
4 and actually when you look at this 5
 

00:06:55.440 --> 00:06:58.790 align:start position:0%
4 and actually when you look at this 5
we're<00:06:55.680><c> also</c><00:06:56.160><c> offsetting</c><00:06:56.800><c> it</c><00:06:56.880><c> by</c><00:06:57.280><c> 4</c><00:06:57.919><c> to</c><00:06:58.160><c> get</c>

00:06:58.790 --> 00:06:58.800 align:start position:0%
we're also offsetting it by 4 to get
 

00:06:58.800 --> 00:07:01.110 align:start position:0%
we're also offsetting it by 4 to get
these<00:06:59.520><c> two</c><00:06:59.919><c> right</c><00:07:00.240><c> because</c><00:07:00.560><c> that's</c><00:07:00.880><c> what's</c>

00:07:01.110 --> 00:07:01.120 align:start position:0%
these two right because that's what's
 

00:07:01.120 --> 00:07:02.070 align:start position:0%
these two right because that's what's
going<00:07:01.199><c> to</c><00:07:01.360><c> match</c><00:07:01.599><c> up</c><00:07:01.680><c> with</c>

00:07:02.070 --> 00:07:02.080 align:start position:0%
going to match up with
 

00:07:02.080 --> 00:07:03.909 align:start position:0%
going to match up with
this<00:07:02.560><c> which</c><00:07:02.800><c> is</c><00:07:02.880><c> going</c><00:07:03.039><c> to</c><00:07:03.120><c> tell</c><00:07:03.280><c> us</c><00:07:03.440><c> how</c><00:07:03.599><c> many</c>

00:07:03.909 --> 00:07:03.919 align:start position:0%
this which is going to tell us how many
 

00:07:03.919 --> 00:07:05.589 align:start position:0%
this which is going to tell us how many
ones<00:07:04.240><c> are</c><00:07:04.400><c> going</c><00:07:04.479><c> to</c><00:07:04.560><c> go</c><00:07:04.880><c> here</c><00:07:05.120><c> right</c><00:07:05.280><c> so</c><00:07:05.440><c> and</c>

00:07:05.589 --> 00:07:05.599 align:start position:0%
ones are going to go here right so and
 

00:07:05.599 --> 00:07:06.150 align:start position:0%
ones are going to go here right so and
clearly

00:07:06.150 --> 00:07:06.160 align:start position:0%
clearly
 

00:07:06.160 --> 00:07:08.150 align:start position:0%
clearly
we<00:07:06.319><c> see</c><00:07:06.479><c> that</c><00:07:06.639><c> that's</c><00:07:06.880><c> a</c><00:07:07.120><c> 1.</c><00:07:07.599><c> so</c><00:07:07.759><c> here</c><00:07:08.000><c> we're</c>

00:07:08.150 --> 00:07:08.160 align:start position:0%
we see that that's a 1. so here we're
 

00:07:08.160 --> 00:07:09.189 align:start position:0%
we see that that's a 1. so here we're
going<00:07:08.240><c> to</c><00:07:08.400><c> compute</c>

00:07:09.189 --> 00:07:09.199 align:start position:0%
going to compute
 

00:07:09.199 --> 00:07:12.309 align:start position:0%
going to compute
1<00:07:09.680><c> plus</c><00:07:10.080><c> again</c><00:07:10.720><c> dp</c><00:07:11.280><c> of</c><00:07:11.680><c> n</c>

00:07:12.309 --> 00:07:12.319 align:start position:0%
1 plus again dp of n
 

00:07:12.319 --> 00:07:15.270 align:start position:0%
1 plus again dp of n
minus<00:07:13.039><c> 4.</c><00:07:13.680><c> and</c><00:07:13.919><c> similarly</c><00:07:14.479><c> for</c><00:07:14.720><c> here</c><00:07:14.960><c> we</c><00:07:15.039><c> would</c>

00:07:15.270 --> 00:07:15.280 align:start position:0%
minus 4. and similarly for here we would
 

00:07:15.280 --> 00:07:15.670 align:start position:0%
minus 4. and similarly for here we would
say

00:07:15.670 --> 00:07:15.680 align:start position:0%
say
 

00:07:15.680 --> 00:07:17.830 align:start position:0%
say
one<00:07:16.000><c> which</c><00:07:16.240><c> is</c><00:07:16.400><c> coming</c><00:07:16.720><c> from</c><00:07:16.880><c> here</c><00:07:17.199><c> plus</c><00:07:17.680><c> the</c>

00:07:17.830 --> 00:07:17.840 align:start position:0%
one which is coming from here plus the
 

00:07:17.840 --> 00:07:18.710 align:start position:0%
one which is coming from here plus the
number<00:07:18.080><c> of</c><00:07:18.240><c> ones</c>

00:07:18.710 --> 00:07:18.720 align:start position:0%
number of ones
 

00:07:18.720 --> 00:07:20.629 align:start position:0%
number of ones
in<00:07:18.880><c> this</c><00:07:19.120><c> binary</c><00:07:19.599><c> representation</c><00:07:20.240><c> which</c><00:07:20.479><c> we</c>

00:07:20.629 --> 00:07:20.639 align:start position:0%
in this binary representation which we
 

00:07:20.639 --> 00:07:22.230 align:start position:0%
in this binary representation which we
know<00:07:20.800><c> we</c><00:07:21.039><c> already</c><00:07:21.360><c> computed</c>

00:07:22.230 --> 00:07:22.240 align:start position:0%
know we already computed
 

00:07:22.240 --> 00:07:24.629 align:start position:0%
know we already computed
up<00:07:22.560><c> over</c><00:07:22.960><c> here</c><00:07:23.440><c> and</c><00:07:23.680><c> the</c><00:07:23.840><c> answer</c><00:07:24.080><c> to</c><00:07:24.240><c> that</c><00:07:24.400><c> was</c>

00:07:24.629 --> 00:07:24.639 align:start position:0%
up over here and the answer to that was
 

00:07:24.639 --> 00:07:25.909 align:start position:0%
up over here and the answer to that was
one<00:07:24.880><c> so</c><00:07:25.039><c> in</c><00:07:25.120><c> this</c><00:07:25.280><c> position</c>

00:07:25.909 --> 00:07:25.919 align:start position:0%
one so in this position
 

00:07:25.919 --> 00:07:29.029 align:start position:0%
one so in this position
really<00:07:26.240><c> there's</c><00:07:26.400><c> going</c><00:07:26.560><c> to</c><00:07:26.639><c> be</c><00:07:27.280><c> two</c><00:07:28.560><c> ones</c><00:07:28.960><c> in</c>

00:07:29.029 --> 00:07:29.039 align:start position:0%
really there's going to be two ones in
 

00:07:29.039 --> 00:07:30.870 align:start position:0%
really there's going to be two ones in
this<00:07:29.280><c> binary</c><00:07:29.599><c> representation</c><00:07:30.240><c> now</c><00:07:30.400><c> over</c><00:07:30.639><c> here</c>

00:07:30.870 --> 00:07:30.880 align:start position:0%
this binary representation now over here
 

00:07:30.880 --> 00:07:31.589 align:start position:0%
this binary representation now over here
once<00:07:31.199><c> again</c>

00:07:31.589 --> 00:07:31.599 align:start position:0%
once again
 

00:07:31.599 --> 00:07:33.110 align:start position:0%
once again
we<00:07:31.759><c> know</c><00:07:31.919><c> that</c><00:07:32.080><c> there's</c><00:07:32.240><c> at</c><00:07:32.319><c> least</c><00:07:32.639><c> one</c><00:07:32.880><c> from</c>

00:07:33.110 --> 00:07:33.120 align:start position:0%
we know that there's at least one from
 

00:07:33.120 --> 00:07:35.110 align:start position:0%
we know that there's at least one from
here<00:07:33.599><c> plus</c><00:07:33.919><c> how</c><00:07:34.080><c> many</c><00:07:34.240><c> were</c><00:07:34.400><c> in</c><00:07:34.560><c> this</c><00:07:34.720><c> binary</c>

00:07:35.110 --> 00:07:35.120 align:start position:0%
here plus how many were in this binary
 

00:07:35.120 --> 00:07:37.110 align:start position:0%
here plus how many were in this binary
representation<00:07:35.759><c> we</c><00:07:35.919><c> computed</c><00:07:36.479><c> that</c>

00:07:37.110 --> 00:07:37.120 align:start position:0%
representation we computed that
 

00:07:37.120 --> 00:07:39.589 align:start position:0%
representation we computed that
at<00:07:37.360><c> position</c><00:07:37.919><c> three</c><00:07:38.160><c> which</c><00:07:38.400><c> again</c><00:07:38.800><c> is</c><00:07:39.039><c> offset</c>

00:07:39.589 --> 00:07:39.599 align:start position:0%
at position three which again is offset
 

00:07:39.599 --> 00:07:40.550 align:start position:0%
at position three which again is offset
by<00:07:39.919><c> four</c>

00:07:40.550 --> 00:07:40.560 align:start position:0%
by four
 

00:07:40.560 --> 00:07:42.230 align:start position:0%
by four
so<00:07:40.720><c> this</c><00:07:40.880><c> is</c><00:07:41.039><c> going</c><00:07:41.120><c> to</c><00:07:41.199><c> be</c><00:07:41.360><c> one</c><00:07:41.599><c> plus</c><00:07:41.919><c> two</c>

00:07:42.230 --> 00:07:42.240 align:start position:0%
so this is going to be one plus two
 

00:07:42.240 --> 00:07:43.670 align:start position:0%
so this is going to be one plus two
which<00:07:42.400><c> is</c><00:07:42.479><c> going</c><00:07:42.560><c> to</c><00:07:42.639><c> be</c><00:07:42.960><c> 3.</c>

00:07:43.670 --> 00:07:43.680 align:start position:0%
which is going to be 3.
 

00:07:43.680 --> 00:07:46.469 align:start position:0%
which is going to be 3.
now<00:07:44.000><c> you</c><00:07:44.240><c> get</c><00:07:44.560><c> over</c><00:07:44.960><c> here</c><00:07:45.520><c> so</c><00:07:45.759><c> now</c><00:07:45.919><c> we</c><00:07:46.080><c> have</c><00:07:46.240><c> an</c>

00:07:46.469 --> 00:07:46.479 align:start position:0%
now you get over here so now we have an
 

00:07:46.479 --> 00:07:48.629 align:start position:0%
now you get over here so now we have an
even<00:07:46.879><c> more</c><00:07:47.199><c> significant</c><00:07:47.759><c> bit</c><00:07:48.000><c> last</c><00:07:48.319><c> time</c><00:07:48.479><c> the</c>

00:07:48.629 --> 00:07:48.639 align:start position:0%
even more significant bit last time the
 

00:07:48.639 --> 00:07:49.589 align:start position:0%
even more significant bit last time the
most<00:07:48.879><c> significant</c>

00:07:49.589 --> 00:07:49.599 align:start position:0%
most significant
 

00:07:49.599 --> 00:07:51.430 align:start position:0%
most significant
bit<00:07:49.919><c> was</c><00:07:50.160><c> in</c><00:07:50.319><c> this</c><00:07:50.560><c> position</c><00:07:50.960><c> and</c><00:07:51.039><c> we</c><00:07:51.199><c> know</c>

00:07:51.430 --> 00:07:51.440 align:start position:0%
bit was in this position and we know
 

00:07:51.440 --> 00:07:53.270 align:start position:0%
bit was in this position and we know
that<00:07:51.840><c> represents</c><00:07:52.479><c> the</c><00:07:52.639><c> integer</c>

00:07:53.270 --> 00:07:53.280 align:start position:0%
that represents the integer
 

00:07:53.280 --> 00:07:56.629 align:start position:0%
that represents the integer
4.<00:07:53.919><c> now</c><00:07:54.080><c> we</c><00:07:54.240><c> got</c><00:07:54.479><c> an</c><00:07:54.800><c> even</c><00:07:55.280><c> more</c><00:07:55.680><c> significant</c>

00:07:56.629 --> 00:07:56.639 align:start position:0%
4. now we got an even more significant
 

00:07:56.639 --> 00:07:57.029 align:start position:0%
4. now we got an even more significant
bit

00:07:57.029 --> 00:07:57.039 align:start position:0%
bit
 

00:07:57.039 --> 00:08:00.790 align:start position:0%
bit
which<00:07:57.360><c> represents</c><00:07:58.479><c> the</c><00:07:58.720><c> integer</c><00:07:59.440><c> a</c><00:08:00.000><c> so</c>

00:08:00.790 --> 00:08:00.800 align:start position:0%
which represents the integer a so
 

00:08:00.800 --> 00:08:02.070 align:start position:0%
which represents the integer a so
we<00:08:00.960><c> know</c><00:08:01.199><c> that</c><00:08:01.280><c> this</c><00:08:01.520><c> is</c><00:08:01.599><c> going</c><00:08:01.680><c> to</c><00:08:01.759><c> have</c><00:08:01.919><c> at</c>

00:08:02.070 --> 00:08:02.080 align:start position:0%
we know that this is going to have at
 

00:08:02.080 --> 00:08:04.309 align:start position:0%
we know that this is going to have at
least<00:08:02.639><c> one</c><00:08:03.039><c> occurrence</c><00:08:03.520><c> of</c><00:08:03.599><c> one</c><00:08:03.840><c> and</c><00:08:04.000><c> then</c><00:08:04.160><c> we</c>

00:08:04.309 --> 00:08:04.319 align:start position:0%
least one occurrence of one and then we
 

00:08:04.319 --> 00:08:05.510 align:start position:0%
least one occurrence of one and then we
want<00:08:04.479><c> to</c><00:08:04.560><c> know</c><00:08:04.720><c> how</c><00:08:04.879><c> many</c>

00:08:05.510 --> 00:08:05.520 align:start position:0%
want to know how many
 

00:08:05.520 --> 00:08:08.390 align:start position:0%
want to know how many
ones<00:08:05.919><c> are</c><00:08:06.160><c> in</c><00:08:06.639><c> this</c><00:08:06.960><c> binary</c><00:08:07.360><c> representation</c>

00:08:08.390 --> 00:08:08.400 align:start position:0%
ones are in this binary representation
 

00:08:08.400 --> 00:08:08.869 align:start position:0%
ones are in this binary representation
now

00:08:08.869 --> 00:08:08.879 align:start position:0%
now
 

00:08:08.879 --> 00:08:10.869 align:start position:0%
now
how<00:08:09.039><c> are</c><00:08:09.120><c> we</c><00:08:09.280><c> going</c><00:08:09.440><c> to</c><00:08:09.520><c> get</c><00:08:09.840><c> that</c><00:08:10.319><c> in</c><00:08:10.560><c> this</c>

00:08:10.869 --> 00:08:10.879 align:start position:0%
how are we going to get that in this
 

00:08:10.879 --> 00:08:11.990 align:start position:0%
how are we going to get that in this
case<00:08:11.199><c> you</c><00:08:11.280><c> can</c><00:08:11.520><c> tell</c>

00:08:11.990 --> 00:08:12.000 align:start position:0%
case you can tell
 

00:08:12.000 --> 00:08:14.710 align:start position:0%
case you can tell
the<00:08:12.319><c> the</c><00:08:12.479><c> offset</c><00:08:13.120><c> is</c><00:08:13.360><c> no</c><00:08:13.599><c> longer</c><00:08:14.240><c> four</c><00:08:14.560><c> because</c>

00:08:14.710 --> 00:08:14.720 align:start position:0%
the the offset is no longer four because
 

00:08:14.720 --> 00:08:16.710 align:start position:0%
the the offset is no longer four because
if<00:08:14.879><c> we</c><00:08:14.960><c> do</c><00:08:15.120><c> an</c><00:08:15.280><c> offset</c><00:08:15.680><c> of</c><00:08:15.759><c> four</c><00:08:16.000><c> we</c><00:08:16.240><c> get</c><00:08:16.400><c> to</c><00:08:16.560><c> the</c>

00:08:16.710 --> 00:08:16.720 align:start position:0%
if we do an offset of four we get to the
 

00:08:16.720 --> 00:08:18.070 align:start position:0%
if we do an offset of four we get to the
integer<00:08:17.120><c> four</c><00:08:17.360><c> that's</c><00:08:17.599><c> not</c><00:08:17.759><c> what</c><00:08:17.919><c> we're</c>

00:08:18.070 --> 00:08:18.080 align:start position:0%
integer four that's not what we're
 

00:08:18.080 --> 00:08:19.029 align:start position:0%
integer four that's not what we're
trying<00:08:18.319><c> to</c><00:08:18.400><c> do</c>

00:08:19.029 --> 00:08:19.039 align:start position:0%
trying to do
 

00:08:19.039 --> 00:08:21.350 align:start position:0%
trying to do
this<00:08:19.360><c> binary</c><00:08:19.759><c> representation</c><00:08:20.800><c> represents</c>

00:08:21.350 --> 00:08:21.360 align:start position:0%
this binary representation represents
 

00:08:21.360 --> 00:08:23.670 align:start position:0%
this binary representation represents
the<00:08:21.520><c> integer</c><00:08:22.000><c> zero</c><00:08:22.400><c> so</c><00:08:22.639><c> in</c><00:08:22.960><c> reality</c>

00:08:23.670 --> 00:08:23.680 align:start position:0%
the integer zero so in reality
 

00:08:23.680 --> 00:08:26.629 align:start position:0%
the integer zero so in reality
we<00:08:23.919><c> want</c><00:08:24.080><c> to</c><00:08:24.240><c> take</c><00:08:24.560><c> eight</c><00:08:25.039><c> offset</c><00:08:25.520><c> it</c><00:08:25.680><c> by</c><00:08:26.240><c> 8</c>

00:08:26.629 --> 00:08:26.639 align:start position:0%
we want to take eight offset it by 8
 

00:08:26.639 --> 00:08:28.150 align:start position:0%
we want to take eight offset it by 8
which<00:08:26.879><c> is</c><00:08:27.039><c> going</c><00:08:27.120><c> to</c><00:08:27.199><c> get</c><00:08:27.360><c> us</c><00:08:27.599><c> all</c><00:08:27.759><c> the</c><00:08:27.919><c> way</c>

00:08:28.150 --> 00:08:28.160 align:start position:0%
which is going to get us all the way
 

00:08:28.160 --> 00:08:29.029 align:start position:0%
which is going to get us all the way
over<00:08:28.560><c> here</c>

00:08:29.029 --> 00:08:29.039 align:start position:0%
over here
 

00:08:29.039 --> 00:08:31.189 align:start position:0%
over here
and<00:08:29.280><c> once</c><00:08:29.520><c> you</c><00:08:29.680><c> do</c><00:08:30.000><c> that</c><00:08:30.560><c> that's</c><00:08:30.879><c> when</c><00:08:31.039><c> you</c>

00:08:31.189 --> 00:08:31.199 align:start position:0%
and once you do that that's when you
 

00:08:31.199 --> 00:08:33.110 align:start position:0%
and once you do that that's when you
actually<00:08:31.680><c> notice</c><00:08:32.000><c> the</c><00:08:32.159><c> pattern</c><00:08:32.560><c> since</c><00:08:32.880><c> this</c>

00:08:33.110 --> 00:08:33.120 align:start position:0%
actually notice the pattern since this
 

00:08:33.120 --> 00:08:33.909 align:start position:0%
actually notice the pattern since this
is<00:08:33.200><c> going</c><00:08:33.360><c> to</c><00:08:33.440><c> be</c>

00:08:33.909 --> 00:08:33.919 align:start position:0%
is going to be
 

00:08:33.919 --> 00:08:36.949 align:start position:0%
is going to be
1<00:08:34.240><c> plus</c><00:08:34.640><c> dp</c><00:08:35.360><c> of</c><00:08:35.760><c> n</c><00:08:36.320><c> minus</c>

00:08:36.949 --> 00:08:36.959 align:start position:0%
1 plus dp of n minus
 

00:08:36.959 --> 00:08:40.149 align:start position:0%
1 plus dp of n minus
8<00:08:37.440><c> you</c><00:08:37.599><c> can</c><00:08:37.839><c> tell</c><00:08:38.399><c> that</c><00:08:38.959><c> for</c><00:08:39.200><c> each</c><00:08:39.599><c> value</c>

00:08:40.149 --> 00:08:40.159 align:start position:0%
8 you can tell that for each value
 

00:08:40.159 --> 00:08:41.990 align:start position:0%
8 you can tell that for each value
this<00:08:40.320><c> is</c><00:08:40.479><c> going</c><00:08:40.560><c> to</c><00:08:40.640><c> be</c><00:08:40.719><c> the</c><00:08:40.880><c> equation</c><00:08:41.360><c> 1</c><00:08:41.680><c> plus</c>

00:08:41.990 --> 00:08:42.000 align:start position:0%
this is going to be the equation 1 plus
 

00:08:42.000 --> 00:08:44.870 align:start position:0%
this is going to be the equation 1 plus
dp<00:08:42.479><c> of</c><00:08:42.719><c> n</c><00:08:43.120><c> minus</c><00:08:43.599><c> a</c><00:08:43.680><c> particular</c><00:08:44.399><c> integer</c>

00:08:44.870 --> 00:08:44.880 align:start position:0%
dp of n minus a particular integer
 

00:08:44.880 --> 00:08:46.949 align:start position:0%
dp of n minus a particular integer
and<00:08:45.040><c> that</c><00:08:45.360><c> integer</c><00:08:45.760><c> is</c><00:08:45.920><c> going</c><00:08:46.000><c> to</c><00:08:46.080><c> be</c><00:08:46.320><c> called</c>

00:08:46.949 --> 00:08:46.959 align:start position:0%
and that integer is going to be called
 

00:08:46.959 --> 00:08:48.070 align:start position:0%
and that integer is going to be called
the<00:08:47.360><c> offset</c>

00:08:48.070 --> 00:08:48.080 align:start position:0%
the offset
 

00:08:48.080 --> 00:08:50.949 align:start position:0%
the offset
and<00:08:48.240><c> the</c><00:08:48.560><c> offset</c><00:08:49.279><c> is</c><00:08:49.519><c> going</c><00:08:49.760><c> to</c><00:08:50.000><c> be</c><00:08:50.240><c> the</c><00:08:50.560><c> most</c>

00:08:50.949 --> 00:08:50.959 align:start position:0%
and the offset is going to be the most
 

00:08:50.959 --> 00:08:51.990 align:start position:0%
and the offset is going to be the most
significant

00:08:51.990 --> 00:08:52.000 align:start position:0%
significant
 

00:08:52.000 --> 00:08:55.269 align:start position:0%
significant
bit<00:08:52.240><c> that</c><00:08:52.560><c> we</c><00:08:52.800><c> have</c><00:08:53.040><c> reached</c><00:08:53.519><c> so</c><00:08:53.839><c> far</c><00:08:54.560><c> and</c><00:08:54.880><c> what</c>

00:08:55.269 --> 00:08:55.279 align:start position:0%
bit that we have reached so far and what
 

00:08:55.279 --> 00:08:57.590 align:start position:0%
bit that we have reached so far and what
are<00:08:55.519><c> the</c><00:08:55.680><c> most</c><00:08:55.920><c> significant</c><00:08:56.560><c> bits</c><00:08:56.880><c> well</c><00:08:57.279><c> the</c>

00:08:57.590 --> 00:08:57.600 align:start position:0%
are the most significant bits well the
 

00:08:57.600 --> 00:08:59.269 align:start position:0%
are the most significant bits well the
first<00:08:58.000><c> one</c><00:08:58.160><c> is</c><00:08:58.320><c> going</c><00:08:58.399><c> to</c><00:08:58.480><c> be</c><00:08:58.640><c> a</c><00:08:58.800><c> one</c>

00:08:59.269 --> 00:08:59.279 align:start position:0%
first one is going to be a one
 

00:08:59.279 --> 00:09:00.710 align:start position:0%
first one is going to be a one
the<00:08:59.440><c> next</c><00:08:59.680><c> one</c><00:08:59.839><c> is</c><00:09:00.000><c> going</c><00:09:00.080><c> to</c><00:09:00.160><c> be</c><00:09:00.240><c> a</c><00:09:00.399><c> two</c><00:09:00.640><c> the</c>

00:09:00.710 --> 00:09:00.720 align:start position:0%
the next one is going to be a two the
 

00:09:00.720 --> 00:09:02.710 align:start position:0%
the next one is going to be a two the
next<00:09:01.040><c> is</c><00:09:01.120><c> going</c><00:09:01.200><c> to</c><00:09:01.279><c> be</c><00:09:01.360><c> a</c><00:09:01.600><c> 4</c><00:09:02.160><c> 8</c>

00:09:02.710 --> 00:09:02.720 align:start position:0%
next is going to be a 4 8
 

00:09:02.720 --> 00:09:04.790 align:start position:0%
next is going to be a 4 8
16.<00:09:03.200><c> so</c><00:09:03.440><c> basically</c><00:09:03.920><c> they're</c><00:09:04.160><c> doubling</c><00:09:04.640><c> in</c>

00:09:04.790 --> 00:09:04.800 align:start position:0%
16. so basically they're doubling in
 

00:09:04.800 --> 00:09:06.870 align:start position:0%
16. so basically they're doubling in
size<00:09:05.200><c> every</c><00:09:05.360><c> time</c><00:09:05.600><c> because</c><00:09:05.839><c> we</c><00:09:06.000><c> know</c><00:09:06.320><c> a</c><00:09:06.480><c> bit</c><00:09:06.720><c> is</c>

00:09:06.870 --> 00:09:06.880 align:start position:0%
size every time because we know a bit is
 

00:09:06.880 --> 00:09:07.430 align:start position:0%
size every time because we know a bit is
just<00:09:07.200><c> a</c>

00:09:07.430 --> 00:09:07.440 align:start position:0%
just a
 

00:09:07.440 --> 00:09:09.350 align:start position:0%
just a
power<00:09:07.760><c> of</c><00:09:08.000><c> two</c><00:09:08.240><c> right</c><00:09:08.399><c> that's</c><00:09:08.640><c> what</c><00:09:08.800><c> binary</c>

00:09:09.350 --> 00:09:09.360 align:start position:0%
power of two right that's what binary
 

00:09:09.360 --> 00:09:11.990 align:start position:0%
power of two right that's what binary
represents<00:09:10.399><c> so</c><00:09:10.560><c> let's</c><00:09:10.880><c> clean</c><00:09:11.120><c> this</c><00:09:11.360><c> up</c><00:09:11.519><c> just</c><00:09:11.760><c> a</c>

00:09:11.990 --> 00:09:12.000 align:start position:0%
represents so let's clean this up just a
 

00:09:12.000 --> 00:09:13.110 align:start position:0%
represents so let's clean this up just a
tiny<00:09:12.399><c> bit</c>

00:09:13.110 --> 00:09:13.120 align:start position:0%
tiny bit
 

00:09:13.120 --> 00:09:14.790 align:start position:0%
tiny bit
so<00:09:13.279><c> we</c><00:09:13.440><c> know</c><00:09:13.600><c> that</c><00:09:13.760><c> this</c><00:09:14.000><c> is</c><00:09:14.080><c> kind</c><00:09:14.240><c> of</c><00:09:14.399><c> our</c><00:09:14.560><c> base</c>

00:09:14.790 --> 00:09:14.800 align:start position:0%
so we know that this is kind of our base
 

00:09:14.800 --> 00:09:16.710 align:start position:0%
so we know that this is kind of our base
case<00:09:15.040><c> zero</c><00:09:15.440><c> is</c><00:09:15.519><c> going</c><00:09:15.600><c> to</c><00:09:15.680><c> have</c><00:09:15.920><c> zero</c><00:09:16.320><c> ones</c><00:09:16.560><c> in</c>

00:09:16.710 --> 00:09:16.720 align:start position:0%
case zero is going to have zero ones in
 

00:09:16.720 --> 00:09:17.110 align:start position:0%
case zero is going to have zero ones in
it

00:09:17.110 --> 00:09:17.120 align:start position:0%
it
 

00:09:17.120 --> 00:09:19.509 align:start position:0%
it
now<00:09:17.600><c> in</c><00:09:17.760><c> the</c><00:09:18.000><c> next</c><00:09:18.320><c> position</c><00:09:18.800><c> what's</c><00:09:19.120><c> the</c><00:09:19.279><c> most</c>

00:09:19.509 --> 00:09:19.519 align:start position:0%
now in the next position what's the most
 

00:09:19.519 --> 00:09:21.430 align:start position:0%
now in the next position what's the most
significant<00:09:20.080><c> bit</c><00:09:20.320><c> we've</c><00:09:20.480><c> reached</c><00:09:20.720><c> so</c><00:09:21.040><c> far</c>

00:09:21.430 --> 00:09:21.440 align:start position:0%
significant bit we've reached so far
 

00:09:21.440 --> 00:09:23.269 align:start position:0%
significant bit we've reached so far
it's<00:09:21.600><c> in</c><00:09:21.680><c> the</c><00:09:22.080><c> ones</c><00:09:22.560><c> place</c><00:09:22.959><c> right</c><00:09:23.120><c> so</c>

00:09:23.269 --> 00:09:23.279 align:start position:0%
it's in the ones place right so
 

00:09:23.279 --> 00:09:24.710 align:start position:0%
it's in the ones place right so
therefore<00:09:23.680><c> it's</c><00:09:23.839><c> going</c><00:09:23.920><c> to</c><00:09:24.000><c> be</c><00:09:24.080><c> a</c><00:09:24.240><c> 1.</c><00:09:24.399><c> so</c><00:09:24.560><c> when</c>

00:09:24.710 --> 00:09:24.720 align:start position:0%
therefore it's going to be a 1. so when
 

00:09:24.720 --> 00:09:25.590 align:start position:0%
therefore it's going to be a 1. so when
we're<00:09:24.959><c> computing</c>

00:09:25.590 --> 00:09:25.600 align:start position:0%
we're computing
 

00:09:25.600 --> 00:09:29.430 align:start position:0%
we're computing
this<00:09:26.000><c> we're</c><00:09:26.160><c> going</c><00:09:26.240><c> to</c><00:09:26.399><c> compute</c><00:09:27.279><c> 1</c><00:09:27.920><c> plus</c><00:09:28.480><c> dp</c>

00:09:29.430 --> 00:09:29.440 align:start position:0%
this we're going to compute 1 plus dp
 

00:09:29.440 --> 00:09:31.910 align:start position:0%
this we're going to compute 1 plus dp
of<00:09:29.920><c> n</c><00:09:30.480><c> n</c><00:09:30.720><c> is</c><00:09:30.880><c> always</c><00:09:31.120><c> going</c><00:09:31.200><c> to</c><00:09:31.279><c> be</c><00:09:31.440><c> the</c><00:09:31.519><c> value</c>

00:09:31.910 --> 00:09:31.920 align:start position:0%
of n n is always going to be the value
 

00:09:31.920 --> 00:09:33.110 align:start position:0%
of n n is always going to be the value
we're<00:09:32.080><c> computing</c><00:09:32.480><c> right</c><00:09:32.640><c> now</c><00:09:32.800><c> so</c><00:09:32.959><c> that's</c>

00:09:33.110 --> 00:09:33.120 align:start position:0%
we're computing right now so that's
 

00:09:33.120 --> 00:09:34.310 align:start position:0%
we're computing right now so that's
going<00:09:33.200><c> to</c><00:09:33.279><c> be</c><00:09:33.440><c> a</c><00:09:33.600><c> 1</c>

00:09:34.310 --> 00:09:34.320 align:start position:0%
going to be a 1
 

00:09:34.320 --> 00:09:37.269 align:start position:0%
going to be a 1
minus<00:09:35.519><c> 1</c><00:09:35.920><c> because</c><00:09:36.320><c> 1</c><00:09:36.640><c> is</c><00:09:36.720><c> the</c><00:09:36.959><c> most</c>

00:09:37.269 --> 00:09:37.279 align:start position:0%
minus 1 because 1 is the most
 

00:09:37.279 --> 00:09:39.030 align:start position:0%
minus 1 because 1 is the most
significant<00:09:37.760><c> bit</c><00:09:38.000><c> we've</c><00:09:38.160><c> reached</c><00:09:38.399><c> so</c><00:09:38.640><c> far</c>

00:09:39.030 --> 00:09:39.040 align:start position:0%
significant bit we've reached so far
 

00:09:39.040 --> 00:09:41.269 align:start position:0%
significant bit we've reached so far
down<00:09:39.440><c> here</c><00:09:39.839><c> we</c><00:09:40.080><c> reached</c><00:09:40.399><c> a</c><00:09:40.560><c> new</c><00:09:40.800><c> significant</c>

00:09:41.269 --> 00:09:41.279 align:start position:0%
down here we reached a new significant
 

00:09:41.279 --> 00:09:42.870 align:start position:0%
down here we reached a new significant
bit<00:09:41.600><c> of</c><00:09:41.920><c> 2</c>

00:09:42.870 --> 00:09:42.880 align:start position:0%
bit of 2
 

00:09:42.880 --> 00:09:44.630 align:start position:0%
bit of 2
right<00:09:43.200><c> because</c><00:09:43.440><c> we've</c><00:09:43.680><c> gotten</c><00:09:43.920><c> to</c><00:09:44.080><c> the</c><00:09:44.160><c> value</c>

00:09:44.630 --> 00:09:44.640 align:start position:0%
right because we've gotten to the value
 

00:09:44.640 --> 00:09:46.470 align:start position:0%
right because we've gotten to the value
2<00:09:44.880><c> so</c><00:09:45.120><c> far</c><00:09:45.680><c> so</c>

00:09:46.470 --> 00:09:46.480 align:start position:0%
2 so far so
 

00:09:46.480 --> 00:09:49.269 align:start position:0%
2 so far so
for<00:09:46.640><c> here</c><00:09:46.880><c> we're</c><00:09:47.040><c> going</c><00:09:47.120><c> to</c><00:09:47.200><c> say</c><00:09:47.440><c> 1</c><00:09:47.760><c> plus</c><00:09:48.080><c> dp</c><00:09:48.880><c> of</c>

00:09:49.269 --> 00:09:49.279 align:start position:0%
for here we're going to say 1 plus dp of
 

00:09:49.279 --> 00:09:50.710 align:start position:0%
for here we're going to say 1 plus dp of
n<00:09:49.920><c> minus</c>

00:09:50.710 --> 00:09:50.720 align:start position:0%
n minus
 

00:09:50.720 --> 00:09:53.110 align:start position:0%
n minus
two<00:09:51.200><c> now</c><00:09:51.440><c> in</c><00:09:51.519><c> this</c><00:09:51.760><c> next</c><00:09:52.080><c> position</c><00:09:52.560><c> again</c><00:09:52.959><c> the</c>

00:09:53.110 --> 00:09:53.120 align:start position:0%
two now in this next position again the
 

00:09:53.120 --> 00:09:54.310 align:start position:0%
two now in this next position again the
most<00:09:53.360><c> significant</c><00:09:53.839><c> bit</c><00:09:54.080><c> is</c>

00:09:54.310 --> 00:09:54.320 align:start position:0%
most significant bit is
 

00:09:54.320 --> 00:09:56.630 align:start position:0%
most significant bit is
two<00:09:54.640><c> right</c><00:09:54.800><c> we</c><00:09:55.200><c> we</c><00:09:55.360><c> know</c><00:09:55.519><c> that</c><00:09:56.160><c> two</c><00:09:56.399><c> is</c><00:09:56.560><c> a</c>

00:09:56.630 --> 00:09:56.640 align:start position:0%
two right we we know that two is a
 

00:09:56.640 --> 00:09:57.509 align:start position:0%
two right we we know that two is a
significant<00:09:57.200><c> bit</c>

00:09:57.509 --> 00:09:57.519 align:start position:0%
significant bit
 

00:09:57.519 --> 00:09:59.350 align:start position:0%
significant bit
the<00:09:57.760><c> next</c><00:09:58.000><c> significant</c><00:09:58.560><c> bit</c><00:09:58.720><c> is</c><00:09:58.800><c> going</c><00:09:58.959><c> to</c><00:09:59.040><c> be</c>

00:09:59.350 --> 00:09:59.360 align:start position:0%
the next significant bit is going to be
 

00:09:59.360 --> 00:10:01.350 align:start position:0%
the next significant bit is going to be
four<00:09:59.760><c> because</c><00:10:00.000><c> that's</c><00:10:00.320><c> another</c><00:10:00.720><c> power</c><00:10:01.040><c> of</c><00:10:01.120><c> two</c>

00:10:01.350 --> 00:10:01.360 align:start position:0%
four because that's another power of two
 

00:10:01.360 --> 00:10:01.670 align:start position:0%
four because that's another power of two
so

00:10:01.670 --> 00:10:01.680 align:start position:0%
so
 

00:10:01.680 --> 00:10:04.069 align:start position:0%
so
three<00:10:02.000><c> is</c><00:10:02.320><c> not</c><00:10:02.560><c> a</c><00:10:03.360><c> it's</c><00:10:03.519><c> still</c><00:10:03.680><c> going</c><00:10:03.839><c> to</c><00:10:03.920><c> use</c>

00:10:04.069 --> 00:10:04.079 align:start position:0%
three is not a it's still going to use
 

00:10:04.079 --> 00:10:05.509 align:start position:0%
three is not a it's still going to use
the<00:10:04.240><c> previous</c><00:10:04.640><c> value</c>

00:10:05.509 --> 00:10:05.519 align:start position:0%
the previous value
 

00:10:05.519 --> 00:10:08.230 align:start position:0%
the previous value
so<00:10:05.760><c> from</c><00:10:06.079><c> here</c><00:10:06.480><c> we're</c><00:10:06.640><c> going</c><00:10:06.800><c> to</c><00:10:06.959><c> compute</c><00:10:07.760><c> 1</c>

00:10:08.230 --> 00:10:08.240 align:start position:0%
so from here we're going to compute 1
 

00:10:08.240 --> 00:10:09.590 align:start position:0%
so from here we're going to compute 1
plus<00:10:08.640><c> again</c><00:10:09.040><c> dp</c>

00:10:09.590 --> 00:10:09.600 align:start position:0%
plus again dp
 

00:10:09.600 --> 00:10:12.949 align:start position:0%
plus again dp
of<00:10:10.000><c> n</c><00:10:10.480><c> minus</c><00:10:11.120><c> 2.</c><00:10:11.600><c> now</c><00:10:11.839><c> once</c><00:10:12.079><c> you</c><00:10:12.160><c> get</c><00:10:12.480><c> here</c>

00:10:12.949 --> 00:10:12.959 align:start position:0%
of n minus 2. now once you get here
 

00:10:12.959 --> 00:10:15.509 align:start position:0%
of n minus 2. now once you get here
we<00:10:13.120><c> see</c><00:10:13.279><c> that</c><00:10:13.440><c> we've</c><00:10:13.680><c> reached</c><00:10:14.000><c> a</c><00:10:14.320><c> new</c><00:10:14.800><c> power</c><00:10:15.200><c> of</c>

00:10:15.509 --> 00:10:15.519 align:start position:0%
we see that we've reached a new power of
 

00:10:15.519 --> 00:10:16.310 align:start position:0%
we see that we've reached a new power of
2.

00:10:16.310 --> 00:10:16.320 align:start position:0%
2.
 

00:10:16.320 --> 00:10:18.630 align:start position:0%
2.
so<00:10:16.560><c> then</c><00:10:17.040><c> we're</c><00:10:17.279><c> gonna</c><00:10:17.440><c> be</c><00:10:17.680><c> modifying</c><00:10:18.160><c> this</c><00:10:18.399><c> to</c>

00:10:18.630 --> 00:10:18.640 align:start position:0%
so then we're gonna be modifying this to
 

00:10:18.640 --> 00:10:19.910 align:start position:0%
so then we're gonna be modifying this to
one<00:10:18.959><c> plus</c><00:10:19.360><c> dp</c>

00:10:19.910 --> 00:10:19.920 align:start position:0%
one plus dp
 

00:10:19.920 --> 00:10:23.350 align:start position:0%
one plus dp
of<00:10:20.160><c> n</c><00:10:20.720><c> minus</c><00:10:21.440><c> four</c><00:10:22.000><c> and</c><00:10:22.160><c> then</c><00:10:22.800><c> of</c><00:10:22.880><c> course</c><00:10:23.120><c> when</c>

00:10:23.350 --> 00:10:23.360 align:start position:0%
of n minus four and then of course when
 

00:10:23.360 --> 00:10:23.990 align:start position:0%
of n minus four and then of course when
we<00:10:23.440><c> got</c><00:10:23.600><c> to</c>

00:10:23.990 --> 00:10:24.000 align:start position:0%
we got to
 

00:10:24.000 --> 00:10:25.910 align:start position:0%
we got to
eight<00:10:24.320><c> we</c><00:10:24.480><c> know</c><00:10:24.640><c> we</c><00:10:24.800><c> reached</c><00:10:25.120><c> a</c><00:10:25.279><c> new</c><00:10:25.519><c> power</c><00:10:25.839><c> of</c>

00:10:25.910 --> 00:10:25.920 align:start position:0%
eight we know we reached a new power of
 

00:10:25.920 --> 00:10:28.470 align:start position:0%
eight we know we reached a new power of
two<00:10:26.160><c> so</c><00:10:26.320><c> we</c><00:10:26.480><c> were</c><00:10:26.880><c> gonna</c><00:10:27.040><c> do</c><00:10:27.279><c> one</c><00:10:27.519><c> plus</c><00:10:27.760><c> dp</c><00:10:28.079><c> of</c><00:10:28.240><c> n</c>

00:10:28.470 --> 00:10:28.480 align:start position:0%
two so we were gonna do one plus dp of n
 

00:10:28.480 --> 00:10:29.190 align:start position:0%
two so we were gonna do one plus dp of n
minus<00:10:28.800><c> eight</c>

00:10:29.190 --> 00:10:29.200 align:start position:0%
minus eight
 

00:10:29.200 --> 00:10:31.430 align:start position:0%
minus eight
how<00:10:29.360><c> do</c><00:10:29.440><c> you</c><00:10:29.680><c> know</c><00:10:29.920><c> if</c><00:10:30.000><c> you</c><00:10:30.240><c> reach</c><00:10:30.560><c> a</c><00:10:30.800><c> new</c><00:10:31.120><c> power</c>

00:10:31.430 --> 00:10:31.440 align:start position:0%
how do you know if you reach a new power
 

00:10:31.440 --> 00:10:33.750 align:start position:0%
how do you know if you reach a new power
of<00:10:31.600><c> two</c><00:10:32.079><c> well</c><00:10:32.320><c> you</c><00:10:32.399><c> can</c><00:10:32.640><c> take</c><00:10:32.880><c> the</c><00:10:33.120><c> previous</c>

00:10:33.750 --> 00:10:33.760 align:start position:0%
of two well you can take the previous
 

00:10:33.760 --> 00:10:35.590 align:start position:0%
of two well you can take the previous
power<00:10:34.000><c> of</c><00:10:34.160><c> two</c><00:10:34.399><c> for</c><00:10:34.560><c> example</c><00:10:34.959><c> it</c><00:10:35.040><c> was</c><00:10:35.279><c> two</c>

00:10:35.590 --> 00:10:35.600 align:start position:0%
power of two for example it was two
 

00:10:35.600 --> 00:10:35.990 align:start position:0%
power of two for example it was two
right

00:10:35.990 --> 00:10:36.000 align:start position:0%
right
 

00:10:36.000 --> 00:10:38.069 align:start position:0%
right
let's<00:10:36.160><c> say</c><00:10:36.720><c> the</c><00:10:37.040><c> current</c><00:10:37.360><c> power</c><00:10:37.600><c> of</c><00:10:37.680><c> two</c><00:10:37.920><c> is</c>

00:10:38.069 --> 00:10:38.079 align:start position:0%
let's say the current power of two is
 

00:10:38.079 --> 00:10:40.230 align:start position:0%
let's say the current power of two is
two<00:10:38.560><c> let's</c><00:10:38.720><c> say</c><00:10:38.959><c> we</c><00:10:39.200><c> multiply</c><00:10:39.839><c> it</c>

00:10:40.230 --> 00:10:40.240 align:start position:0%
two let's say we multiply it
 

00:10:40.240 --> 00:10:43.350 align:start position:0%
two let's say we multiply it
by<00:10:40.560><c> two</c><00:10:41.519><c> does</c><00:10:41.680><c> that</c><00:10:41.920><c> equal</c><00:10:42.240><c> the</c><00:10:42.480><c> current</c><00:10:43.120><c> uh</c>

00:10:43.350 --> 00:10:43.360 align:start position:0%
by two does that equal the current uh
 

00:10:43.360 --> 00:10:45.990 align:start position:0%
by two does that equal the current uh
value<00:10:43.680><c> where</c><00:10:44.000><c> if</c><00:10:44.320><c> we</c><00:10:44.399><c> got</c><00:10:44.560><c> to</c><00:10:45.040><c> three</c><00:10:45.440><c> n</c><00:10:45.600><c> equals</c>

00:10:45.990 --> 00:10:46.000 align:start position:0%
value where if we got to three n equals
 

00:10:46.000 --> 00:10:46.470 align:start position:0%
value where if we got to three n equals
three

00:10:46.470 --> 00:10:46.480 align:start position:0%
three
 

00:10:46.480 --> 00:10:48.710 align:start position:0%
three
we<00:10:46.640><c> would</c><00:10:46.800><c> check</c><00:10:47.120><c> does</c><00:10:47.360><c> two</c><00:10:47.839><c> times</c><00:10:48.160><c> two</c><00:10:48.399><c> equal</c>

00:10:48.710 --> 00:10:48.720 align:start position:0%
we would check does two times two equal
 

00:10:48.720 --> 00:10:50.630 align:start position:0%
we would check does two times two equal
three<00:10:48.959><c> no</c><00:10:49.200><c> it</c><00:10:49.279><c> does</c><00:10:49.440><c> not</c><00:10:49.600><c> so</c><00:10:49.760><c> we</c><00:10:49.920><c> did</c><00:10:50.160><c> not</c><00:10:50.399><c> reach</c>

00:10:50.630 --> 00:10:50.640 align:start position:0%
three no it does not so we did not reach
 

00:10:50.640 --> 00:10:51.829 align:start position:0%
three no it does not so we did not reach
a<00:10:50.800><c> new</c><00:10:51.040><c> power</c><00:10:51.279><c> of</c><00:10:51.440><c> two</c>

00:10:51.829 --> 00:10:51.839 align:start position:0%
a new power of two
 

00:10:51.839 --> 00:10:54.150 align:start position:0%
a new power of two
if<00:10:52.000><c> we</c><00:10:52.399><c> if</c><00:10:52.480><c> we</c><00:10:52.640><c> got</c><00:10:52.720><c> to</c><00:10:52.959><c> four</c><00:10:53.279><c> two</c><00:10:53.440><c> times</c><00:10:53.760><c> four</c>

00:10:54.150 --> 00:10:54.160 align:start position:0%
if we if we got to four two times four
 

00:10:54.160 --> 00:10:55.269 align:start position:0%
if we if we got to four two times four
that<00:10:54.480><c> does</c><00:10:54.800><c> equal</c>

00:10:55.269 --> 00:10:55.279 align:start position:0%
that does equal
 

00:10:55.279 --> 00:10:57.430 align:start position:0%
that does equal
four<00:10:55.680><c> so</c><00:10:55.920><c> now</c><00:10:56.079><c> we</c><00:10:56.240><c> reached</c><00:10:56.560><c> a</c><00:10:56.720><c> new</c><00:10:56.959><c> power</c><00:10:57.279><c> of</c>

00:10:57.430 --> 00:10:57.440 align:start position:0%
four so now we reached a new power of
 

00:10:57.440 --> 00:10:58.389 align:start position:0%
four so now we reached a new power of
two<00:10:57.920><c> and</c><00:10:58.079><c> then</c>

00:10:58.389 --> 00:10:58.399 align:start position:0%
two and then
 

00:10:58.399 --> 00:10:59.910 align:start position:0%
two and then
from<00:10:58.640><c> four</c><00:10:58.880><c> we</c><00:10:58.959><c> would</c><00:10:59.040><c> do</c><00:10:59.200><c> the</c><00:10:59.279><c> same</c><00:10:59.440><c> thing</c><00:10:59.600><c> so</c>

00:10:59.910 --> 00:10:59.920 align:start position:0%
from four we would do the same thing so
 

00:10:59.920 --> 00:11:01.670 align:start position:0%
from four we would do the same thing so
four<00:11:00.320><c> multiplied</c><00:11:00.880><c> by</c><00:11:01.120><c> two</c>

00:11:01.670 --> 00:11:01.680 align:start position:0%
four multiplied by two
 

00:11:01.680 --> 00:11:03.670 align:start position:0%
four multiplied by two
does<00:11:01.920><c> that</c><00:11:02.160><c> equal</c><00:11:02.480><c> to</c><00:11:02.800><c> seven</c><00:11:03.200><c> right</c><00:11:03.360><c> let's</c><00:11:03.519><c> say</c>

00:11:03.670 --> 00:11:03.680 align:start position:0%
does that equal to seven right let's say
 

00:11:03.680 --> 00:11:04.949 align:start position:0%
does that equal to seven right let's say
we<00:11:03.760><c> got</c><00:11:03.920><c> to</c><00:11:04.079><c> seven</c><00:11:04.399><c> and</c><00:11:04.480><c> we</c><00:11:04.640><c> were</c><00:11:04.720><c> trying</c><00:11:04.880><c> to</c>

00:11:04.949 --> 00:11:04.959 align:start position:0%
we got to seven and we were trying to
 

00:11:04.959 --> 00:11:05.269 align:start position:0%
we got to seven and we were trying to
see

00:11:05.269 --> 00:11:05.279 align:start position:0%
see
 

00:11:05.279 --> 00:11:08.069 align:start position:0%
see
is<00:11:05.440><c> this</c><00:11:05.600><c> a</c><00:11:05.680><c> power</c><00:11:06.000><c> of</c><00:11:06.160><c> two</c><00:11:06.800><c> no</c><00:11:07.519><c> this</c><00:11:07.760><c> does</c><00:11:07.920><c> not</c>

00:11:08.069 --> 00:11:08.079 align:start position:0%
is this a power of two no this does not
 

00:11:08.079 --> 00:11:09.829 align:start position:0%
is this a power of two no this does not
equal<00:11:08.399><c> seven</c><00:11:08.720><c> but</c><00:11:08.880><c> once</c><00:11:09.120><c> we</c><00:11:09.279><c> get</c><00:11:09.440><c> to</c>

00:11:09.829 --> 00:11:09.839 align:start position:0%
equal seven but once we get to
 

00:11:09.839 --> 00:11:12.389 align:start position:0%
equal seven but once we get to
eight<00:11:10.560><c> then</c><00:11:11.040><c> four</c><00:11:11.279><c> times</c><00:11:11.600><c> two</c><00:11:11.839><c> yes</c><00:11:12.160><c> that</c>

00:11:12.389 --> 00:11:12.399 align:start position:0%
eight then four times two yes that
 

00:11:12.399 --> 00:11:14.310 align:start position:0%
eight then four times two yes that
equals<00:11:12.720><c> eight</c><00:11:13.120><c> right</c><00:11:13.360><c> so</c><00:11:13.519><c> we</c><00:11:13.680><c> did</c><00:11:13.839><c> reach</c><00:11:14.079><c> a</c><00:11:14.160><c> new</c>

00:11:14.310 --> 00:11:14.320 align:start position:0%
equals eight right so we did reach a new
 

00:11:14.320 --> 00:11:15.829 align:start position:0%
equals eight right so we did reach a new
power<00:11:14.480><c> of</c><00:11:14.640><c> 2</c><00:11:14.800><c> and</c><00:11:14.880><c> we'd</c><00:11:15.040><c> do</c><00:11:15.200><c> the</c><00:11:15.279><c> exact</c><00:11:15.519><c> same</c>

00:11:15.829 --> 00:11:15.839 align:start position:0%
power of 2 and we'd do the exact same
 

00:11:15.839 --> 00:11:16.150 align:start position:0%
power of 2 and we'd do the exact same
thing

00:11:16.150 --> 00:11:16.160 align:start position:0%
thing
 

00:11:16.160 --> 00:11:17.670 align:start position:0%
thing
so<00:11:16.399><c> the</c><00:11:16.480><c> next</c><00:11:16.720><c> time</c><00:11:16.959><c> we</c><00:11:17.040><c> would</c><00:11:17.200><c> reach</c><00:11:17.360><c> a</c><00:11:17.440><c> new</c>

00:11:17.670 --> 00:11:17.680 align:start position:0%
so the next time we would reach a new
 

00:11:17.680 --> 00:11:20.310 align:start position:0%
so the next time we would reach a new
power<00:11:17.920><c> of</c><00:11:18.000><c> 2</c><00:11:18.240><c> is</c><00:11:18.399><c> would</c><00:11:18.640><c> be</c><00:11:19.120><c> 8</c><00:11:19.440><c> times</c><00:11:19.839><c> 2</c>

00:11:20.310 --> 00:11:20.320 align:start position:0%
power of 2 is would be 8 times 2
 

00:11:20.320 --> 00:11:22.870 align:start position:0%
power of 2 is would be 8 times 2
equals<00:11:21.040><c> 16.</c><00:11:21.440><c> so</c><00:11:21.600><c> next</c><00:11:21.760><c> time</c><00:11:21.920><c> we</c><00:11:22.079><c> reach</c><00:11:22.320><c> a</c><00:11:22.480><c> 16</c>

00:11:22.870 --> 00:11:22.880 align:start position:0%
equals 16. so next time we reach a 16
 

00:11:22.880 --> 00:11:24.949 align:start position:0%
equals 16. so next time we reach a 16
that's<00:11:23.200><c> going</c><00:11:23.279><c> to</c><00:11:23.360><c> be</c><00:11:23.440><c> a</c><00:11:23.519><c> new</c><00:11:23.760><c> power</c><00:11:24.000><c> of</c><00:11:24.160><c> 2</c>

00:11:24.949 --> 00:11:24.959 align:start position:0%
that's going to be a new power of 2
 

00:11:24.959 --> 00:11:28.230 align:start position:0%
that's going to be a new power of 2
and<00:11:25.120><c> 16</c><00:11:25.519><c> times</c><00:11:25.839><c> 2</c><00:11:26.079><c> is</c><00:11:26.160><c> 32</c><00:11:26.880><c> etc</c><00:11:27.519><c> etc</c><00:11:27.920><c> so</c><00:11:28.079><c> that's</c>

00:11:28.230 --> 00:11:28.240 align:start position:0%
and 16 times 2 is 32 etc etc so that's
 

00:11:28.240 --> 00:11:29.190 align:start position:0%
and 16 times 2 is 32 etc etc so that's
how<00:11:28.320><c> it's</c><00:11:28.480><c> going</c><00:11:28.560><c> to</c><00:11:28.720><c> work</c>

00:11:29.190 --> 00:11:29.200 align:start position:0%
how it's going to work
 

00:11:29.200 --> 00:11:31.269 align:start position:0%
how it's going to work
and<00:11:29.519><c> once</c><00:11:29.760><c> you</c><00:11:29.920><c> know</c><00:11:30.240><c> this</c><00:11:30.640><c> idea</c><00:11:30.959><c> it's</c><00:11:31.120><c> not</c>

00:11:31.269 --> 00:11:31.279 align:start position:0%
and once you know this idea it's not
 

00:11:31.279 --> 00:11:32.790 align:start position:0%
and once you know this idea it's not
super<00:11:31.600><c> intuitive</c><00:11:32.079><c> until</c><00:11:32.240><c> you</c><00:11:32.399><c> actually</c><00:11:32.640><c> kind</c>

00:11:32.790 --> 00:11:32.800 align:start position:0%
super intuitive until you actually kind
 

00:11:32.800 --> 00:11:33.670 align:start position:0%
super intuitive until you actually kind
of<00:11:32.959><c> draw</c><00:11:33.200><c> it</c><00:11:33.360><c> out</c>

00:11:33.670 --> 00:11:33.680 align:start position:0%
of draw it out
 

00:11:33.680 --> 00:11:35.509 align:start position:0%
of draw it out
but<00:11:33.839><c> once</c><00:11:34.079><c> you</c><00:11:34.160><c> do</c><00:11:34.640><c> the</c><00:11:34.800><c> code</c><00:11:35.120><c> is</c><00:11:35.200><c> actually</c>

00:11:35.509 --> 00:11:35.519 align:start position:0%
but once you do the code is actually
 

00:11:35.519 --> 00:11:37.750 align:start position:0%
but once you do the code is actually
pretty<00:11:35.760><c> easy</c><00:11:36.000><c> to</c><00:11:36.160><c> write</c><00:11:36.399><c> let</c><00:11:36.480><c> me</c><00:11:36.640><c> show</c><00:11:36.800><c> you</c><00:11:36.959><c> how</c>

00:11:37.750 --> 00:11:37.760 align:start position:0%
pretty easy to write let me show you how
 

00:11:37.760 --> 00:11:39.430 align:start position:0%
pretty easy to write let me show you how
so<00:11:38.160><c> our</c><00:11:38.320><c> dp</c><00:11:38.720><c> array</c><00:11:39.040><c> is</c><00:11:39.120><c> going</c><00:11:39.200><c> to</c><00:11:39.279><c> be</c>

00:11:39.430 --> 00:11:39.440 align:start position:0%
so our dp array is going to be
 

00:11:39.440 --> 00:11:41.350 align:start position:0%
so our dp array is going to be
initialized<00:11:39.920><c> to</c><00:11:40.079><c> all</c><00:11:40.320><c> zeros</c><00:11:40.959><c> and</c><00:11:41.120><c> it's</c><00:11:41.279><c> going</c>

00:11:41.350 --> 00:11:41.360 align:start position:0%
initialized to all zeros and it's going
 

00:11:41.360 --> 00:11:42.150 align:start position:0%
initialized to all zeros and it's going
to<00:11:41.440><c> be</c><00:11:41.680><c> length</c>

00:11:42.150 --> 00:11:42.160 align:start position:0%
to be length
 

00:11:42.160 --> 00:11:44.150 align:start position:0%
to be length
n<00:11:42.480><c> plus</c><00:11:42.800><c> 1</c><00:11:43.040><c> because</c><00:11:43.279><c> that's</c><00:11:43.519><c> how</c><00:11:43.680><c> many</c><00:11:44.000><c> we're</c>

00:11:44.150 --> 00:11:44.160 align:start position:0%
n plus 1 because that's how many we're
 

00:11:44.160 --> 00:11:45.509 align:start position:0%
n plus 1 because that's how many we're
trying<00:11:44.399><c> to</c><00:11:44.560><c> compute</c><00:11:44.959><c> and</c><00:11:45.040><c> we're</c><00:11:45.200><c> also</c><00:11:45.440><c> going</c>

00:11:45.509 --> 00:11:45.519 align:start position:0%
trying to compute and we're also going
 

00:11:45.519 --> 00:11:46.470 align:start position:0%
trying to compute and we're also going
to<00:11:45.600><c> have</c><00:11:45.760><c> an</c><00:11:45.920><c> answer</c>

00:11:46.470 --> 00:11:46.480 align:start position:0%
to have an answer
 

00:11:46.480 --> 00:11:48.310 align:start position:0%
to have an answer
array<00:11:47.200><c> which</c><00:11:47.440><c> is</c><00:11:47.519><c> initially</c><00:11:47.920><c> just</c><00:11:48.079><c> going</c><00:11:48.240><c> to</c>

00:11:48.310 --> 00:11:48.320 align:start position:0%
array which is initially just going to
 

00:11:48.320 --> 00:11:50.550 align:start position:0%
array which is initially just going to
have<00:11:48.560><c> a</c><00:11:48.720><c> single</c><00:11:49.120><c> zero</c><00:11:49.519><c> in</c><00:11:49.680><c> it</c><00:11:49.760><c> because</c><00:11:50.000><c> we</c><00:11:50.160><c> know</c>

00:11:50.550 --> 00:11:50.560 align:start position:0%
have a single zero in it because we know
 

00:11:50.560 --> 00:11:53.430 align:start position:0%
have a single zero in it because we know
n<00:11:51.120><c> is</c><00:11:51.279><c> going</c><00:11:51.440><c> to</c><00:11:51.519><c> be</c><00:11:51.680><c> at</c><00:11:51.839><c> least</c><00:11:52.320><c> zero</c><00:11:53.040><c> and</c><00:11:53.200><c> then</c>

00:11:53.430 --> 00:11:53.440 align:start position:0%
n is going to be at least zero and then
 

00:11:53.440 --> 00:11:54.790 align:start position:0%
n is going to be at least zero and then
we're<00:11:53.600><c> going</c><00:11:53.680><c> to</c><00:11:53.760><c> go</c><00:11:53.920><c> through</c><00:11:54.160><c> for</c><00:11:54.399><c> i</c>

00:11:54.790 --> 00:11:54.800 align:start position:0%
we're going to go through for i
 

00:11:54.800 --> 00:11:58.310 align:start position:0%
we're going to go through for i
in<00:11:55.200><c> range</c><00:11:55.839><c> all</c><00:11:56.000><c> the</c><00:11:56.079><c> way</c><00:11:56.240><c> from</c><00:11:56.560><c> one</c><00:11:56.959><c> up</c><00:11:57.120><c> until</c><00:11:57.600><c> n</c>

00:11:58.310 --> 00:11:58.320 align:start position:0%
in range all the way from one up until n
 

00:11:58.320 --> 00:12:00.389 align:start position:0%
in range all the way from one up until n
so<00:11:58.560><c> n</c><00:11:58.720><c> plus</c><00:11:59.040><c> one</c><00:11:59.200><c> this</c><00:11:59.360><c> is</c><00:11:59.519><c> non-inclusive</c><00:12:00.320><c> in</c>

00:12:00.389 --> 00:12:00.399 align:start position:0%
so n plus one this is non-inclusive in
 

00:12:00.399 --> 00:12:01.590 align:start position:0%
so n plus one this is non-inclusive in
python<00:12:00.720><c> so</c><00:12:00.880><c> we're</c><00:12:01.040><c> actually</c><00:12:01.360><c> going</c><00:12:01.440><c> to</c><00:12:01.519><c> be</c>

00:12:01.590 --> 00:12:01.600 align:start position:0%
python so we're actually going to be
 

00:12:01.600 --> 00:12:03.509 align:start position:0%
python so we're actually going to be
stopping<00:12:02.000><c> when</c><00:12:02.160><c> we</c><00:12:02.240><c> go</c><00:12:02.480><c> from</c><00:12:02.720><c> one</c><00:12:03.040><c> all</c><00:12:03.200><c> the</c><00:12:03.279><c> way</c>

00:12:03.509 --> 00:12:03.519 align:start position:0%
stopping when we go from one all the way
 

00:12:03.519 --> 00:12:04.790 align:start position:0%
stopping when we go from one all the way
up<00:12:03.680><c> until</c><00:12:04.079><c> n</c>

00:12:04.790 --> 00:12:04.800 align:start position:0%
up until n
 

00:12:04.800 --> 00:12:05.990 align:start position:0%
up until n
and<00:12:04.959><c> we're</c><00:12:05.120><c> going</c><00:12:05.200><c> to</c><00:12:05.279><c> be</c><00:12:05.360><c> keeping</c><00:12:05.680><c> track</c><00:12:05.920><c> of</c>

00:12:05.990 --> 00:12:06.000 align:start position:0%
and we're going to be keeping track of
 

00:12:06.000 --> 00:12:08.470 align:start position:0%
and we're going to be keeping track of
one<00:12:06.240><c> more</c><00:12:06.399><c> variable</c><00:12:06.800><c> the</c><00:12:07.040><c> offset</c><00:12:07.680><c> aka</c><00:12:08.320><c> the</c>

00:12:08.470 --> 00:12:08.480 align:start position:0%
one more variable the offset aka the
 

00:12:08.480 --> 00:12:10.710 align:start position:0%
one more variable the offset aka the
highest<00:12:08.959><c> power</c><00:12:09.200><c> of</c><00:12:09.360><c> two</c><00:12:09.600><c> so</c><00:12:09.839><c> far</c><00:12:10.079><c> so</c><00:12:10.240><c> initially</c>

00:12:10.710 --> 00:12:10.720 align:start position:0%
highest power of two so far so initially
 

00:12:10.720 --> 00:12:11.910 align:start position:0%
highest power of two so far so initially
that's<00:12:10.959><c> gonna</c><00:12:11.279><c> be</c>

00:12:11.910 --> 00:12:11.920 align:start position:0%
that's gonna be
 

00:12:11.920 --> 00:12:14.949 align:start position:0%
that's gonna be
one<00:12:12.720><c> so</c><00:12:12.959><c> before</c><00:12:13.360><c> we</c><00:12:13.519><c> actually</c><00:12:13.839><c> compute</c><00:12:14.320><c> the</c><00:12:14.480><c> dp</c>

00:12:14.949 --> 00:12:14.959 align:start position:0%
one so before we actually compute the dp
 

00:12:14.959 --> 00:12:16.710 align:start position:0%
one so before we actually compute the dp
or<00:12:15.120><c> the</c><00:12:15.279><c> number</c><00:12:15.519><c> of</c><00:12:15.680><c> bits</c><00:12:16.079><c> in</c><00:12:16.320><c> this</c>

00:12:16.710 --> 00:12:16.720 align:start position:0%
or the number of bits in this
 

00:12:16.720 --> 00:12:18.870 align:start position:0%
or the number of bits in this
integer<00:12:17.200><c> i's</c><00:12:17.600><c> binary</c><00:12:18.000><c> representation</c><00:12:18.639><c> first</c>

00:12:18.870 --> 00:12:18.880 align:start position:0%
integer i's binary representation first
 

00:12:18.880 --> 00:12:19.750 align:start position:0%
integer i's binary representation first
we're<00:12:18.959><c> going</c><00:12:19.040><c> to</c><00:12:19.200><c> check</c><00:12:19.440><c> how</c>

00:12:19.750 --> 00:12:19.760 align:start position:0%
we're going to check how
 

00:12:19.760 --> 00:12:21.509 align:start position:0%
we're going to check how
can<00:12:19.920><c> we</c><00:12:20.160><c> double</c><00:12:20.560><c> our</c><00:12:20.800><c> offset</c><00:12:21.200><c> we're</c><00:12:21.360><c> going</c><00:12:21.440><c> to</c>

00:12:21.509 --> 00:12:21.519 align:start position:0%
can we double our offset we're going to
 

00:12:21.519 --> 00:12:22.829 align:start position:0%
can we double our offset we're going to
check<00:12:22.079><c> if</c>

00:12:22.829 --> 00:12:22.839 align:start position:0%
check if
 

00:12:22.839 --> 00:12:26.470 align:start position:0%
check if
offset<00:12:24.079><c> multiplied</c><00:12:24.639><c> by</c><00:12:24.880><c> two</c><00:12:25.279><c> is</c><00:12:25.519><c> equal</c>

00:12:26.470 --> 00:12:26.480 align:start position:0%
offset multiplied by two is equal
 

00:12:26.480 --> 00:12:28.389 align:start position:0%
offset multiplied by two is equal
to<00:12:26.800><c> i</c><00:12:27.120><c> the</c><00:12:27.279><c> current</c><00:12:27.680><c> end</c><00:12:27.839><c> that</c><00:12:27.920><c> we</c><00:12:28.079><c> have</c><00:12:28.160><c> just</c>

00:12:28.389 --> 00:12:28.399 align:start position:0%
to i the current end that we have just
 

00:12:28.399 --> 00:12:30.230 align:start position:0%
to i the current end that we have just
reached<00:12:28.720><c> if</c><00:12:28.880><c> it</c><00:12:29.040><c> is</c><00:12:29.279><c> then</c><00:12:29.440><c> we</c><00:12:29.519><c> can</c><00:12:29.680><c> set</c>

00:12:30.230 --> 00:12:30.240 align:start position:0%
reached if it is then we can set
 

00:12:30.240 --> 00:12:32.710 align:start position:0%
reached if it is then we can set
offset<00:12:30.720><c> equal</c><00:12:31.040><c> to</c><00:12:31.200><c> i</c><00:12:31.600><c> otherwise</c><00:12:32.160><c> offset</c><00:12:32.639><c> is</c>

00:12:32.710 --> 00:12:32.720 align:start position:0%
offset equal to i otherwise offset is
 

00:12:32.720 --> 00:12:33.910 align:start position:0%
offset equal to i otherwise offset is
going<00:12:32.800><c> to</c><00:12:32.959><c> stay</c><00:12:33.120><c> the</c><00:12:33.360><c> same</c>

00:12:33.910 --> 00:12:33.920 align:start position:0%
going to stay the same
 

00:12:33.920 --> 00:12:35.509 align:start position:0%
going to stay the same
and<00:12:34.000><c> then</c><00:12:34.240><c> we</c><00:12:34.320><c> can</c><00:12:34.560><c> actually</c><00:12:34.800><c> compute</c><00:12:35.120><c> the</c><00:12:35.200><c> dp</c>

00:12:35.509 --> 00:12:35.519 align:start position:0%
and then we can actually compute the dp
 

00:12:35.519 --> 00:12:37.190 align:start position:0%
and then we can actually compute the dp
so<00:12:35.680><c> we're</c><00:12:35.839><c> trying</c><00:12:36.000><c> to</c><00:12:36.079><c> compute</c><00:12:36.399><c> dp</c><00:12:36.800><c> of</c><00:12:36.959><c> i</c>

00:12:37.190 --> 00:12:37.200 align:start position:0%
so we're trying to compute dp of i
 

00:12:37.200 --> 00:12:39.030 align:start position:0%
so we're trying to compute dp of i
which<00:12:37.360><c> is</c><00:12:37.519><c> basically</c><00:12:37.920><c> the</c><00:12:38.079><c> number</c><00:12:38.320><c> of</c><00:12:38.480><c> bits</c>

00:12:39.030 --> 00:12:39.040 align:start position:0%
which is basically the number of bits
 

00:12:39.040 --> 00:12:40.870 align:start position:0%
which is basically the number of bits
the<00:12:39.200><c> number</c><00:12:39.440><c> of</c><00:12:39.600><c> ones</c><00:12:40.000><c> in</c><00:12:40.160><c> i's</c><00:12:40.480><c> binary</c>

00:12:40.870 --> 00:12:40.880 align:start position:0%
the number of ones in i's binary
 

00:12:40.880 --> 00:12:42.230 align:start position:0%
the number of ones in i's binary
representation<00:12:41.600><c> we</c><00:12:41.760><c> know</c><00:12:41.920><c> that's</c><00:12:42.079><c> going</c><00:12:42.160><c> to</c>

00:12:42.230 --> 00:12:42.240 align:start position:0%
representation we know that's going to
 

00:12:42.240 --> 00:12:42.949 align:start position:0%
representation we know that's going to
be<00:12:42.399><c> at</c><00:12:42.480><c> least</c>

00:12:42.949 --> 00:12:42.959 align:start position:0%
be at least
 

00:12:42.959 --> 00:12:46.470 align:start position:0%
be at least
1<00:12:43.760><c> plus</c><00:12:44.560><c> dp</c><00:12:45.279><c> of</c><00:12:45.760><c> i</c>

00:12:46.470 --> 00:12:46.480 align:start position:0%
1 plus dp of i
 

00:12:46.480 --> 00:12:49.430 align:start position:0%
1 plus dp of i
minus<00:12:47.120><c> the</c><00:12:47.360><c> offset</c><00:12:48.399><c> and</c><00:12:48.560><c> actually</c><00:12:49.120><c> one</c><00:12:49.279><c> thing</c>

00:12:49.430 --> 00:12:49.440 align:start position:0%
minus the offset and actually one thing
 

00:12:49.440 --> 00:12:50.389 align:start position:0%
minus the offset and actually one thing
i<00:12:49.600><c> just</c><00:12:49.760><c> realized</c>

00:12:50.389 --> 00:12:50.399 align:start position:0%
i just realized
 

00:12:50.399 --> 00:12:52.470 align:start position:0%
i just realized
is<00:12:50.720><c> the</c><00:12:50.880><c> dp</c><00:12:51.360><c> and</c><00:12:51.440><c> the</c><00:12:51.680><c> answer</c><00:12:52.079><c> array</c><00:12:52.399><c> are</c>

00:12:52.470 --> 00:12:52.480 align:start position:0%
is the dp and the answer array are
 

00:12:52.480 --> 00:12:54.069 align:start position:0%
is the dp and the answer array are
actually<00:12:52.800><c> the</c><00:12:52.959><c> exact</c><00:12:53.279><c> same</c><00:12:53.519><c> i</c><00:12:53.600><c> don't</c><00:12:53.760><c> know</c><00:12:53.920><c> why</c>

00:12:54.069 --> 00:12:54.079 align:start position:0%
actually the exact same i don't know why
 

00:12:54.079 --> 00:12:55.910 align:start position:0%
actually the exact same i don't know why
i<00:12:54.240><c> even</c><00:12:54.480><c> created</c><00:12:54.959><c> an</c><00:12:55.120><c> answer</c><00:12:55.440><c> array</c><00:12:55.680><c> we</c><00:12:55.760><c> can</c>

00:12:55.910 --> 00:12:55.920 align:start position:0%
i even created an answer array we can
 

00:12:55.920 --> 00:12:58.230 align:start position:0%
i even created an answer array we can
get<00:12:56.000><c> rid</c><00:12:56.160><c> of</c><00:12:56.240><c> that</c><00:12:56.480><c> so</c><00:12:56.639><c> this</c><00:12:56.880><c> dp</c><00:12:57.279><c> is</c><00:12:57.440><c> basically</c>

00:12:58.230 --> 00:12:58.240 align:start position:0%
get rid of that so this dp is basically
 

00:12:58.240 --> 00:13:00.150 align:start position:0%
get rid of that so this dp is basically
our<00:12:58.480><c> answer</c><00:12:58.959><c> array</c><00:12:59.360><c> it's</c><00:12:59.519><c> going</c><00:12:59.600><c> to</c><00:12:59.680><c> give</c><00:12:59.839><c> us</c>

00:13:00.150 --> 00:13:00.160 align:start position:0%
our answer array it's going to give us
 

00:13:00.160 --> 00:13:02.230 align:start position:0%
our answer array it's going to give us
the<00:13:00.320><c> number</c><00:13:00.560><c> of</c><00:13:01.040><c> bits</c><00:13:01.360><c> the</c><00:13:01.519><c> number</c><00:13:01.680><c> of</c><00:13:01.920><c> one</c>

00:13:02.230 --> 00:13:02.240 align:start position:0%
the number of bits the number of one
 

00:13:02.240 --> 00:13:04.470 align:start position:0%
the number of bits the number of one
bits<00:13:02.800><c> in</c><00:13:03.040><c> each</c><00:13:03.279><c> integer's</c><00:13:04.000><c> binary</c>

00:13:04.470 --> 00:13:04.480 align:start position:0%
bits in each integer's binary
 

00:13:04.480 --> 00:13:05.910 align:start position:0%
bits in each integer's binary
representation<00:13:05.200><c> so</c><00:13:05.360><c> once</c>

00:13:05.910 --> 00:13:05.920 align:start position:0%
representation so once
 

00:13:05.920 --> 00:13:07.110 align:start position:0%
representation so once
once<00:13:06.160><c> we're</c><00:13:06.320><c> done</c><00:13:06.480><c> with</c><00:13:06.639><c> that</c><00:13:06.720><c> we</c><00:13:06.880><c> can</c><00:13:06.959><c> go</c>

00:13:07.110 --> 00:13:07.120 align:start position:0%
once we're done with that we can go
 

00:13:07.120 --> 00:13:09.509 align:start position:0%
once we're done with that we can go
ahead<00:13:07.200><c> and</c><00:13:07.360><c> just</c><00:13:07.519><c> return</c><00:13:08.160><c> this</c><00:13:08.399><c> dp</c><00:13:08.880><c> array</c>

00:13:09.509 --> 00:13:09.519 align:start position:0%
ahead and just return this dp array
 

00:13:09.519 --> 00:13:10.870 align:start position:0%
ahead and just return this dp array
so<00:13:09.680><c> as</c><00:13:09.839><c> you</c><00:13:09.920><c> can</c><00:13:10.079><c> see</c><00:13:10.240><c> this</c><00:13:10.480><c> is</c><00:13:10.560><c> a</c><00:13:10.639><c> pretty</c>

00:13:10.870 --> 00:13:10.880 align:start position:0%
so as you can see this is a pretty
 

00:13:10.880 --> 00:13:12.949 align:start position:0%
so as you can see this is a pretty
efficient<00:13:11.279><c> solution</c><00:13:11.760><c> this</c><00:13:12.079><c> is</c><00:13:12.240><c> the</c><00:13:12.480><c> linear</c>

00:13:12.949 --> 00:13:12.959 align:start position:0%
efficient solution this is the linear
 

00:13:12.959 --> 00:13:14.150 align:start position:0%
efficient solution this is the linear
time<00:13:13.200><c> big</c><00:13:13.440><c> o</c><00:13:13.680><c> of</c><00:13:13.839><c> n</c>

00:13:14.150 --> 00:13:14.160 align:start position:0%
time big o of n
 

00:13:14.160 --> 00:13:16.230 align:start position:0%
time big o of n
time<00:13:14.480><c> and</c><00:13:14.639><c> space</c><00:13:15.200><c> solution</c><00:13:15.680><c> i</c><00:13:15.760><c> hope</c><00:13:15.920><c> this</c><00:13:16.079><c> was</c>

00:13:16.230 --> 00:13:16.240 align:start position:0%
time and space solution i hope this was
 

00:13:16.240 --> 00:13:18.069 align:start position:0%
time and space solution i hope this was
helpful<00:13:16.800><c> if</c><00:13:16.959><c> it</c><00:13:17.120><c> was</c><00:13:17.440><c> please</c><00:13:17.760><c> like</c><00:13:18.000><c> and</c>

00:13:18.069 --> 00:13:18.079 align:start position:0%
helpful if it was please like and
 

00:13:18.079 --> 00:13:20.150 align:start position:0%
helpful if it was please like and
subscribe<00:13:18.560><c> it</c><00:13:18.720><c> supports</c><00:13:19.120><c> the</c><00:13:19.200><c> channel</c><00:13:19.600><c> a</c><00:13:19.760><c> lot</c>

00:13:20.150 --> 00:13:20.160 align:start position:0%
subscribe it supports the channel a lot
 

00:13:20.160 --> 00:13:22.389 align:start position:0%
subscribe it supports the channel a lot
and<00:13:20.320><c> i'll</c><00:13:20.480><c> hopefully</c><00:13:21.279><c> see</c><00:13:21.440><c> you</c><00:13:21.600><c> pretty</c><00:13:21.839><c> soon</c>

00:13:22.389 --> 00:13:22.399 align:start position:0%
and i'll hopefully see you pretty soon
 

00:13:22.399 --> 00:13:25.279 align:start position:0%
and i'll hopefully see you pretty soon
thanks<00:13:22.639><c> for</c><00:13:22.800><c> watching</c>

