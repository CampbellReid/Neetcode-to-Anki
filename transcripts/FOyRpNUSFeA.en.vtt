WEBVTT
Kind: captions
Language: en

00:00:00.040 --> 00:00:01.350 align:start position:0%
 
hey<00:00:00.199><c> everyone</c><00:00:00.560><c> welcome</c><00:00:00.880><c> back</c><00:00:01.040><c> and</c><00:00:01.199><c> let's</c>

00:00:01.350 --> 00:00:01.360 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.360 --> 00:00:03.110 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.520><c> some</c><00:00:01.680><c> more</c><00:00:01.839><c> neat</c><00:00:02.159><c> code</c><00:00:02.440><c> today</c><00:00:02.760><c> so</c><00:00:02.879><c> today</c>

00:00:03.110 --> 00:00:03.120 align:start position:0%
write some more neat code today so today
 

00:00:03.120 --> 00:00:05.110 align:start position:0%
write some more neat code today so today
let's<00:00:03.320><c> solve</c><00:00:03.560><c> the</c><00:00:03.760><c> problem</c><00:00:04.200><c> combination</c><00:00:04.799><c> sum</c>

00:00:05.110 --> 00:00:05.120 align:start position:0%
let's solve the problem combination sum
 

00:00:05.120 --> 00:00:07.230 align:start position:0%
let's solve the problem combination sum
2<00:00:05.759><c> this</c><00:00:05.839><c> is</c><00:00:06.040><c> actually</c><00:00:06.279><c> my</c><00:00:06.480><c> second</c><00:00:06.759><c> time</c><00:00:07.000><c> making</c>

00:00:07.230 --> 00:00:07.240 align:start position:0%
2 this is actually my second time making
 

00:00:07.240 --> 00:00:09.350 align:start position:0%
2 this is actually my second time making
a<00:00:07.399><c> solution</c><00:00:07.720><c> for</c><00:00:08.000><c> this</c><00:00:08.160><c> one</c><00:00:08.559><c> cuz</c><00:00:08.719><c> I</c><00:00:08.840><c> think</c><00:00:09.280><c> I</c>

00:00:09.350 --> 00:00:09.360 align:start position:0%
a solution for this one cuz I think I
 

00:00:09.360 --> 00:00:10.629 align:start position:0%
a solution for this one cuz I think I
could<00:00:09.480><c> do</c><00:00:09.639><c> a</c><00:00:09.719><c> little</c><00:00:09.880><c> bit</c><00:00:10.080><c> better</c><00:00:10.320><c> than</c><00:00:10.480><c> the</c>

00:00:10.629 --> 00:00:10.639 align:start position:0%
could do a little bit better than the
 

00:00:10.639 --> 00:00:12.830 align:start position:0%
could do a little bit better than the
first<00:00:10.960><c> time</c><00:00:11.240><c> I</c><00:00:11.400><c> explained</c><00:00:11.880><c> this</c><00:00:12.000><c> one</c><00:00:12.559><c> so</c>

00:00:12.830 --> 00:00:12.840 align:start position:0%
first time I explained this one so
 

00:00:12.840 --> 00:00:14.270 align:start position:0%
first time I explained this one so
before<00:00:13.080><c> we</c><00:00:13.200><c> start</c><00:00:13.480><c> I</c><00:00:13.559><c> want</c><00:00:13.679><c> to</c><00:00:13.839><c> mention</c><00:00:14.120><c> that</c>

00:00:14.270 --> 00:00:14.280 align:start position:0%
before we start I want to mention that
 

00:00:14.280 --> 00:00:16.349 align:start position:0%
before we start I want to mention that
this<00:00:14.400><c> is</c><00:00:14.639><c> part</c><00:00:14.879><c> two</c><00:00:15.240><c> of</c><00:00:15.360><c> the</c><00:00:15.519><c> combination</c><00:00:16.039><c> some</c>

00:00:16.349 --> 00:00:16.359 align:start position:0%
this is part two of the combination some
 

00:00:16.359 --> 00:00:18.670 align:start position:0%
this is part two of the combination some
series<00:00:16.880><c> I</c><00:00:16.920><c> would</c><00:00:17.119><c> definitely</c><00:00:17.600><c> watch</c><00:00:18.039><c> part</c><00:00:18.279><c> one</c>

00:00:18.670 --> 00:00:18.680 align:start position:0%
series I would definitely watch part one
 

00:00:18.680 --> 00:00:20.910 align:start position:0%
series I would definitely watch part one
of<00:00:18.920><c> this</c><00:00:19.439><c> I</c><00:00:19.520><c> have</c><00:00:19.640><c> a</c><00:00:19.800><c> very</c><00:00:20.000><c> good</c><00:00:20.160><c> video</c><00:00:20.480><c> on</c><00:00:20.720><c> this</c>

00:00:20.910 --> 00:00:20.920 align:start position:0%
of this I have a very good video on this
 

00:00:20.920 --> 00:00:23.790 align:start position:0%
of this I have a very good video on this
you<00:00:21.000><c> can</c><00:00:21.199><c> also</c><00:00:21.480><c> check</c><00:00:21.680><c> it</c><00:00:21.960><c> on</c><00:00:22.279><c> N</c><00:00:22.600><c> code</c><00:00:22.960><c> iio</c><00:00:23.680><c> if</c>

00:00:23.790 --> 00:00:23.800 align:start position:0%
you can also check it on N code iio if
 

00:00:23.800 --> 00:00:25.710 align:start position:0%
you can also check it on N code iio if
you<00:00:24.039><c> want</c><00:00:24.199><c> to</c><00:00:24.359><c> search</c><00:00:24.599><c> for</c><00:00:24.800><c> it</c><00:00:25.080><c> this</c><00:00:25.320><c> problem</c>

00:00:25.710 --> 00:00:25.720 align:start position:0%
you want to search for it this problem
 

00:00:25.720 --> 00:00:27.589 align:start position:0%
you want to search for it this problem
and<00:00:25.960><c> combination</c><00:00:26.439><c> someone</c><00:00:27.000><c> are</c><00:00:27.160><c> a</c><00:00:27.279><c> part</c><00:00:27.439><c> of</c>

00:00:27.589 --> 00:00:27.599 align:start position:0%
and combination someone are a part of
 

00:00:27.599 --> 00:00:29.550 align:start position:0%
and combination someone are a part of
the<00:00:27.679><c> neat</c><00:00:28.000><c> code</c><00:00:28.199><c> 150</c><00:00:28.720><c> list</c><00:00:29.000><c> which</c><00:00:29.119><c> is</c><00:00:29.240><c> a</c><00:00:29.359><c> very</c>

00:00:29.550 --> 00:00:29.560 align:start position:0%
the neat code 150 list which is a very
 

00:00:29.560 --> 00:00:31.749 align:start position:0%
the neat code 150 list which is a very
good<00:00:29.720><c> list</c><00:00:30.080><c> of</c><00:00:30.279><c> problems</c><00:00:30.640><c> to</c><00:00:31.080><c> understand</c><00:00:31.560><c> and</c>

00:00:31.749 --> 00:00:31.759 align:start position:0%
good list of problems to understand and
 

00:00:31.759 --> 00:00:33.270 align:start position:0%
good list of problems to understand and
actually<00:00:32.040><c> there's</c><00:00:32.320><c> another</c><00:00:32.759><c> problem</c><00:00:33.160><c> that</c>

00:00:33.270 --> 00:00:33.280 align:start position:0%
actually there's another problem that
 

00:00:33.280 --> 00:00:35.470 align:start position:0%
actually there's another problem that
will<00:00:33.559><c> help</c><00:00:33.840><c> you</c><00:00:34.600><c> understand</c><00:00:34.840><c> the</c><00:00:35.040><c> trick</c>

00:00:35.470 --> 00:00:35.480 align:start position:0%
will help you understand the trick
 

00:00:35.480 --> 00:00:37.310 align:start position:0%
will help you understand the trick
behind<00:00:35.920><c> this</c><00:00:36.160><c> problem</c><00:00:36.559><c> it's</c><00:00:36.840><c> actually</c><00:00:37.160><c> an</c>

00:00:37.310 --> 00:00:37.320 align:start position:0%
behind this problem it's actually an
 

00:00:37.320 --> 00:00:39.150 align:start position:0%
behind this problem it's actually an
array<00:00:37.760><c> problem</c><00:00:38.040><c> it's</c><00:00:38.239><c> called</c><00:00:38.480><c> threesome</c>

00:00:39.150 --> 00:00:39.160 align:start position:0%
array problem it's called threesome
 

00:00:39.160 --> 00:00:41.270 align:start position:0%
array problem it's called threesome
that's<00:00:39.440><c> also</c><00:00:39.760><c> a</c><00:00:39.879><c> part</c><00:00:40.039><c> of</c><00:00:40.160><c> the</c><00:00:40.280><c> N</c><00:00:40.520><c> code</c><00:00:40.719><c> 150</c>

00:00:41.270 --> 00:00:41.280 align:start position:0%
that's also a part of the N code 150
 

00:00:41.280 --> 00:00:43.750 align:start position:0%
that's also a part of the N code 150
list<00:00:41.760><c> and</c><00:00:42.200><c> it's</c><00:00:42.399><c> beneficial</c><00:00:43.120><c> to</c><00:00:43.280><c> know</c><00:00:43.520><c> for</c>

00:00:43.750 --> 00:00:43.760 align:start position:0%
list and it's beneficial to know for
 

00:00:43.760 --> 00:00:44.950 align:start position:0%
list and it's beneficial to know for
this<00:00:43.960><c> problem</c><00:00:44.239><c> because</c><00:00:44.520><c> we</c><00:00:44.640><c> kind</c><00:00:44.760><c> of</c>

00:00:44.950 --> 00:00:44.960 align:start position:0%
this problem because we kind of
 

00:00:44.960 --> 00:00:46.869 align:start position:0%
this problem because we kind of
eliminate<00:00:45.480><c> duplicate</c><00:00:46.000><c> Solutions</c><00:00:46.680><c> pretty</c>

00:00:46.869 --> 00:00:46.879 align:start position:0%
eliminate duplicate Solutions pretty
 

00:00:46.879 --> 00:00:48.670 align:start position:0%
eliminate duplicate Solutions pretty
much<00:00:47.160><c> the</c><00:00:47.280><c> same</c><00:00:47.600><c> way</c><00:00:47.840><c> except</c><00:00:48.079><c> we</c><00:00:48.239><c> do</c><00:00:48.399><c> so</c>

00:00:48.670 --> 00:00:48.680 align:start position:0%
much the same way except we do so
 

00:00:48.680 --> 00:00:51.229 align:start position:0%
much the same way except we do so
recursively<00:00:49.559><c> in</c><00:00:49.920><c> this</c><00:00:50.239><c> problem</c><00:00:50.559><c> so</c><00:00:50.760><c> let's</c><00:00:51.039><c> get</c>

00:00:51.229 --> 00:00:51.239 align:start position:0%
recursively in this problem so let's get
 

00:00:51.239 --> 00:00:54.430 align:start position:0%
recursively in this problem so let's get
into<00:00:51.520><c> it</c><00:00:51.960><c> the</c><00:00:52.120><c> idea</c><00:00:52.520><c> is</c><00:00:52.840><c> we're</c><00:00:53.120><c> given</c><00:00:53.559><c> a</c><00:00:53.960><c> list</c>

00:00:54.430 --> 00:00:54.440 align:start position:0%
into it the idea is we're given a list
 

00:00:54.440 --> 00:00:56.990 align:start position:0%
into it the idea is we're given a list
of<00:00:54.879><c> numbers</c><00:00:55.480><c> and</c><00:00:55.680><c> we</c><00:00:55.840><c> want</c><00:00:56.000><c> to</c><00:00:56.239><c> find</c><00:00:56.640><c> all</c>

00:00:56.990 --> 00:00:57.000 align:start position:0%
of numbers and we want to find all
 

00:00:57.000 --> 00:00:58.869 align:start position:0%
of numbers and we want to find all
combinations<00:00:57.760><c> from</c><00:00:58.039><c> this</c><00:00:58.239><c> set</c><00:00:58.399><c> of</c><00:00:58.519><c> numbers</c>

00:00:58.869 --> 00:00:58.879 align:start position:0%
combinations from this set of numbers
 

00:00:58.879 --> 00:01:01.549 align:start position:0%
combinations from this set of numbers
that<00:00:59.079><c> sum</c><00:00:59.399><c> up</c><00:00:59.559><c> to</c><00:01:00.199><c> so</c><00:01:00.440><c> similar</c><00:01:00.800><c> to</c><00:01:00.960><c> the</c><00:01:01.160><c> first</c>

00:01:01.549 --> 00:01:01.559 align:start position:0%
that sum up to so similar to the first
 

00:01:01.559 --> 00:01:05.429 align:start position:0%
that sum up to so similar to the first
question<00:01:02.280><c> so</c><00:01:02.680><c> one</c><00:01:02.920><c> way</c><00:01:03.160><c> would</c><00:01:03.280><c> be</c><00:01:03.920><c> 116</c><00:01:04.920><c> we</c><00:01:05.159><c> get</c>

00:01:05.429 --> 00:01:05.439 align:start position:0%
question so one way would be 116 we get
 

00:01:05.439 --> 00:01:07.350 align:start position:0%
question so one way would be 116 we get
this<00:01:05.600><c> one</c><00:01:06.000><c> we</c><00:01:06.159><c> get</c><00:01:06.360><c> this</c><00:01:06.560><c> six</c><00:01:06.840><c> and</c><00:01:06.960><c> we</c><00:01:07.080><c> get</c><00:01:07.240><c> this</c>

00:01:07.350 --> 00:01:07.360 align:start position:0%
this one we get this six and we get this
 

00:01:07.360 --> 00:01:09.109 align:start position:0%
this one we get this six and we get this
one<00:01:07.600><c> they</c><00:01:07.759><c> sum</c><00:01:08.000><c> up</c><00:01:08.119><c> to</c><00:01:08.280><c> eight</c><00:01:08.560><c> another</c><00:01:08.840><c> one</c>

00:01:09.109 --> 00:01:09.119 align:start position:0%
one they sum up to eight another one
 

00:01:09.119 --> 00:01:12.070 align:start position:0%
one they sum up to eight another one
would<00:01:09.320><c> be</c><00:01:09.960><c> 17</c><00:01:10.960><c> you</c><00:01:11.119><c> could</c><00:01:11.320><c> choose</c><00:01:11.759><c> this</c><00:01:11.880><c> one</c>

00:01:12.070 --> 00:01:12.080 align:start position:0%
would be 17 you could choose this one
 

00:01:12.080 --> 00:01:14.990 align:start position:0%
would be 17 you could choose this one
and<00:01:12.280><c> this</c><00:01:12.439><c> one</c><00:01:13.080><c> but</c><00:01:13.320><c> couldn't</c><00:01:13.560><c> we</c><00:01:13.759><c> make</c><00:01:13.960><c> up</c><00:01:14.240><c> 17</c>

00:01:14.990 --> 00:01:15.000 align:start position:0%
and this one but couldn't we make up 17
 

00:01:15.000 --> 00:01:16.789 align:start position:0%
and this one but couldn't we make up 17
multiple<00:01:15.479><c> ways</c><00:01:15.759><c> couldn't</c><00:01:16.040><c> we</c><00:01:16.280><c> also</c><00:01:16.600><c> have</c>

00:01:16.789 --> 00:01:16.799 align:start position:0%
multiple ways couldn't we also have
 

00:01:16.799 --> 00:01:19.149 align:start position:0%
multiple ways couldn't we also have
chosen<00:01:17.560><c> the</c><00:01:17.759><c> second</c><00:01:18.080><c> one</c><00:01:18.400><c> over</c><00:01:18.640><c> here</c><00:01:18.880><c> and</c><00:01:19.040><c> the</c>

00:01:19.149 --> 00:01:19.159 align:start position:0%
chosen the second one over here and the
 

00:01:19.159 --> 00:01:21.670 align:start position:0%
chosen the second one over here and the
Seven<00:01:19.799><c> well</c><00:01:20.000><c> technically</c><00:01:20.600><c> they</c><00:01:20.880><c> count</c><00:01:21.240><c> as</c><00:01:21.439><c> the</c>

00:01:21.670 --> 00:01:21.680 align:start position:0%
Seven well technically they count as the
 

00:01:21.680 --> 00:01:23.710 align:start position:0%
Seven well technically they count as the
same<00:01:22.079><c> combination</c><00:01:22.680><c> so</c><00:01:22.880><c> we</c><00:01:23.119><c> don't</c><00:01:23.400><c> want</c>

00:01:23.710 --> 00:01:23.720 align:start position:0%
same combination so we don't want
 

00:01:23.720 --> 00:01:26.190 align:start position:0%
same combination so we don't want
duplicate<00:01:24.439><c> combinations</c><00:01:25.240><c> in</c><00:01:25.520><c> the</c><00:01:25.680><c> solution</c>

00:01:26.190 --> 00:01:26.200 align:start position:0%
duplicate combinations in the solution
 

00:01:26.200 --> 00:01:29.310 align:start position:0%
duplicate combinations in the solution
set<00:01:26.759><c> and</c><00:01:27.119><c> another</c><00:01:27.680><c> difference</c><00:01:28.439><c> between</c><00:01:29.040><c> this</c>

00:01:29.310 --> 00:01:29.320 align:start position:0%
set and another difference between this
 

00:01:29.320 --> 00:01:31.310 align:start position:0%
set and another difference between this
problem<00:01:29.600><c> and</c><00:01:29.680><c> the</c><00:01:29.920><c> first</c><00:01:30.200><c> combination</c><00:01:30.759><c> sum</c><00:01:31.159><c> is</c>

00:01:31.310 --> 00:01:31.320 align:start position:0%
problem and the first combination sum is
 

00:01:31.320 --> 00:01:34.030 align:start position:0%
problem and the first combination sum is
that<00:01:31.680><c> we</c><00:01:31.960><c> cannot</c><00:01:32.439><c> use</c><00:01:32.880><c> the</c><00:01:33.079><c> same</c><00:01:33.439><c> number</c><00:01:33.799><c> in</c>

00:01:34.030 --> 00:01:34.040 align:start position:0%
that we cannot use the same number in
 

00:01:34.040 --> 00:01:36.030 align:start position:0%
that we cannot use the same number in
unlimited<00:01:34.759><c> amount</c><00:01:34.960><c> of</c><00:01:35.200><c> time</c><00:01:35.479><c> so</c><00:01:35.640><c> we</c><00:01:35.799><c> can't</c>

00:01:36.030 --> 00:01:36.040 align:start position:0%
unlimited amount of time so we can't
 

00:01:36.040 --> 00:01:38.749 align:start position:0%
unlimited amount of time so we can't
just<00:01:36.280><c> take</c><00:01:36.520><c> the</c><00:01:36.680><c> one</c><00:01:37.280><c> and</c><00:01:37.479><c> reuse</c><00:01:38.079><c> it</c><00:01:38.360><c> eight</c>

00:01:38.749 --> 00:01:38.759 align:start position:0%
just take the one and reuse it eight
 

00:01:38.759 --> 00:01:41.149 align:start position:0%
just take the one and reuse it eight
times<00:01:39.040><c> to</c><00:01:39.200><c> sum</c><00:01:39.439><c> up</c><00:01:39.560><c> to</c><00:01:39.720><c> the</c><00:01:39.880><c> Target</c><00:01:40.600><c> we</c><00:01:40.799><c> could</c>

00:01:41.149 --> 00:01:41.159 align:start position:0%
times to sum up to the Target we could
 

00:01:41.159 --> 00:01:42.990 align:start position:0%
times to sum up to the Target we could
though<00:01:41.399><c> use</c><00:01:41.720><c> the</c><00:01:41.880><c> same</c><00:01:42.159><c> element</c><00:01:42.560><c> multiple</c>

00:01:42.990 --> 00:01:43.000 align:start position:0%
though use the same element multiple
 

00:01:43.000 --> 00:01:45.990 align:start position:0%
though use the same element multiple
times<00:01:43.520><c> if</c><00:01:43.680><c> it</c><00:01:43.840><c> shows</c><00:01:44.399><c> up</c><00:01:44.840><c> multiple</c><00:01:45.360><c> times</c><00:01:45.719><c> in</c>

00:01:45.990 --> 00:01:46.000 align:start position:0%
times if it shows up multiple times in
 

00:01:46.000 --> 00:01:48.310 align:start position:0%
times if it shows up multiple times in
the<00:01:46.240><c> input</c><00:01:46.920><c> we</c><00:01:47.040><c> have</c><00:01:47.200><c> two</c><00:01:47.439><c> occurrences</c><00:01:47.920><c> of</c><00:01:48.079><c> one</c>

00:01:48.310 --> 00:01:48.320 align:start position:0%
the input we have two occurrences of one
 

00:01:48.320 --> 00:01:50.149 align:start position:0%
the input we have two occurrences of one
so<00:01:48.560><c> that's</c><00:01:48.759><c> the</c><00:01:49.040><c> max</c><00:01:49.360><c> number</c><00:01:49.600><c> of</c><00:01:49.759><c> times</c><00:01:50.040><c> that</c>

00:01:50.149 --> 00:01:50.159 align:start position:0%
so that's the max number of times that
 

00:01:50.159 --> 00:01:52.950 align:start position:0%
so that's the max number of times that
we<00:01:50.280><c> can</c><00:01:50.520><c> use</c><00:01:50.840><c> the</c><00:01:51.000><c> number</c><00:01:51.320><c> one</c><00:01:51.719><c> in</c><00:01:51.880><c> a</c><00:01:52.079><c> solution</c>

00:01:52.950 --> 00:01:52.960 align:start position:0%
we can use the number one in a solution
 

00:01:52.960 --> 00:01:55.190 align:start position:0%
we can use the number one in a solution
so<00:01:53.479><c> that's</c><00:01:53.719><c> what</c><00:01:54.040><c> makes</c><00:01:54.479><c> this</c><00:01:54.680><c> a</c><00:01:54.759><c> little</c><00:01:55.000><c> bit</c>

00:01:55.190 --> 00:01:55.200 align:start position:0%
so that's what makes this a little bit
 

00:01:55.200 --> 00:01:57.270 align:start position:0%
so that's what makes this a little bit
tricky<00:01:55.640><c> in</c><00:01:55.759><c> the</c><00:01:55.960><c> first</c><00:01:56.360><c> combination</c><00:01:56.880><c> sum</c><00:01:57.200><c> we</c>

00:01:57.270 --> 00:01:57.280 align:start position:0%
tricky in the first combination sum we
 

00:01:57.280 --> 00:02:00.029 align:start position:0%
tricky in the first combination sum we
were<00:01:57.520><c> given</c><00:01:57.840><c> a</c><00:01:58.079><c> distinct</c><00:01:58.759><c> set</c><00:01:58.960><c> of</c><00:01:59.200><c> numbers</c><00:01:59.920><c> and</c>

00:02:00.029 --> 00:02:00.039 align:start position:0%
were given a distinct set of numbers and
 

00:02:00.039 --> 00:02:01.630 align:start position:0%
were given a distinct set of numbers and
we<00:02:00.159><c> could</c><00:02:00.320><c> reuse</c><00:02:00.799><c> the</c><00:02:00.920><c> same</c><00:02:01.159><c> number</c><00:02:01.479><c> an</c>

00:02:01.630 --> 00:02:01.640 align:start position:0%
we could reuse the same number an
 

00:02:01.640 --> 00:02:03.550 align:start position:0%
we could reuse the same number an
unlimited<00:02:02.240><c> amount</c><00:02:02.479><c> of</c><00:02:02.640><c> times</c><00:02:02.920><c> so</c><00:02:03.119><c> in</c><00:02:03.280><c> the</c>

00:02:03.550 --> 00:02:03.560 align:start position:0%
unlimited amount of times so in the
 

00:02:03.560 --> 00:02:06.510 align:start position:0%
unlimited amount of times so in the
first<00:02:04.039><c> problem</c><00:02:04.680><c> we</c><00:02:05.000><c> had</c><00:02:05.360><c> the</c><00:02:05.560><c> input</c><00:02:06.280><c> and</c><00:02:06.399><c> we</c>

00:02:06.510 --> 00:02:06.520 align:start position:0%
first problem we had the input and we
 

00:02:06.520 --> 00:02:08.669 align:start position:0%
first problem we had the input and we
were<00:02:06.759><c> able</c><00:02:07.000><c> to</c><00:02:07.159><c> solve</c><00:02:07.439><c> it</c><00:02:07.640><c> very</c><00:02:08.080><c> simply</c><00:02:08.479><c> with</c>

00:02:08.669 --> 00:02:08.679 align:start position:0%
were able to solve it very simply with
 

00:02:08.679 --> 00:02:11.029 align:start position:0%
were able to solve it very simply with
recursion<00:02:09.319><c> for</c><00:02:09.759><c> a</c><00:02:09.879><c> given</c><00:02:10.160><c> element</c><00:02:10.560><c> either</c><00:02:10.840><c> you</c>

00:02:11.029 --> 00:02:11.039 align:start position:0%
recursion for a given element either you
 

00:02:11.039 --> 00:02:13.990 align:start position:0%
recursion for a given element either you
include<00:02:11.480><c> it</c><00:02:12.080><c> or</c><00:02:12.560><c> you</c><00:02:12.760><c> skip</c><00:02:13.080><c> it</c><00:02:13.319><c> so</c><00:02:13.760><c> we</c><00:02:13.840><c> would</c>

00:02:13.990 --> 00:02:14.000 align:start position:0%
include it or you skip it so we would
 

00:02:14.000 --> 00:02:16.070 align:start position:0%
include it or you skip it so we would
have<00:02:14.280><c> had</c><00:02:14.480><c> 10</c><00:02:14.840><c> or</c><00:02:15.000><c> we</c><00:02:15.080><c> would</c><00:02:15.239><c> have</c><00:02:15.400><c> skipped</c><00:02:15.760><c> 10</c>

00:02:16.070 --> 00:02:16.080 align:start position:0%
have had 10 or we would have skipped 10
 

00:02:16.080 --> 00:02:17.710 align:start position:0%
have had 10 or we would have skipped 10
and<00:02:16.239><c> then</c><00:02:16.400><c> from</c><00:02:16.640><c> here</c><00:02:16.920><c> we</c><00:02:17.040><c> would</c><00:02:17.160><c> have</c><00:02:17.360><c> chosen</c>

00:02:17.710 --> 00:02:17.720 align:start position:0%
and then from here we would have chosen
 

00:02:17.720 --> 00:02:19.110 align:start position:0%
and then from here we would have chosen
from<00:02:17.920><c> the</c><00:02:18.080><c> next</c><00:02:18.280><c> element</c><00:02:18.640><c> we</c><00:02:18.720><c> can</c><00:02:18.879><c> either</c>

00:02:19.110 --> 00:02:19.120 align:start position:0%
from the next element we can either
 

00:02:19.120 --> 00:02:22.470 align:start position:0%
from the next element we can either
include<00:02:19.599><c> one</c><00:02:20.160><c> or</c><00:02:20.360><c> we</c><00:02:20.480><c> can</c><00:02:20.760><c> skip</c><00:02:21.280><c> one</c><00:02:21.879><c> from</c><00:02:22.239><c> this</c>

00:02:22.470 --> 00:02:22.480 align:start position:0%
include one or we can skip one from this
 

00:02:22.480 --> 00:02:25.229 align:start position:0%
include one or we can skip one from this
side<00:02:22.879><c> though</c><00:02:23.319><c> we're</c><00:02:23.560><c> not</c><00:02:24.120><c> quite</c><00:02:24.440><c> at</c><00:02:24.640><c> one</c><00:02:25.000><c> yet</c>

00:02:25.229 --> 00:02:25.239 align:start position:0%
side though we're not quite at one yet
 

00:02:25.239 --> 00:02:27.229 align:start position:0%
side though we're not quite at one yet
we<00:02:25.360><c> can</c><00:02:25.560><c> actually</c><00:02:25.920><c> choose</c><00:02:26.239><c> to</c><00:02:26.599><c> continue</c>

00:02:27.229 --> 00:02:27.239 align:start position:0%
we can actually choose to continue
 

00:02:27.239 --> 00:02:29.869 align:start position:0%
we can actually choose to continue
including<00:02:27.920><c> 10</c><00:02:28.280><c> we</c><00:02:28.400><c> can</c><00:02:28.560><c> have</c><00:02:28.840><c> multiple</c>

00:02:29.869 --> 00:02:29.879 align:start position:0%
including 10 we can have multiple
 

00:02:29.879 --> 00:02:31.550 align:start position:0%
including 10 we can have multiple
occurrences<00:02:30.440><c> of</c><00:02:30.599><c> 10</c><00:02:30.959><c> or</c><00:02:31.120><c> we</c><00:02:31.280><c> could</c><00:02:31.400><c> have</c>

00:02:31.550 --> 00:02:31.560 align:start position:0%
occurrences of 10 or we could have
 

00:02:31.560 --> 00:02:34.070 align:start position:0%
occurrences of 10 or we could have
skipped<00:02:31.959><c> it</c><00:02:32.560><c> and</c><00:02:32.800><c> in</c><00:02:33.000><c> that</c><00:02:33.200><c> case</c><00:02:33.480><c> from</c><00:02:33.720><c> here</c><00:02:33.959><c> we</c>

00:02:34.070 --> 00:02:34.080 align:start position:0%
skipped it and in that case from here we
 

00:02:34.080 --> 00:02:35.910 align:start position:0%
skipped it and in that case from here we
would<00:02:34.200><c> have</c><00:02:34.400><c> started</c><00:02:34.800><c> choosing</c><00:02:35.200><c> from</c><00:02:35.400><c> one</c><00:02:35.680><c> so</c>

00:02:35.910 --> 00:02:35.920 align:start position:0%
would have started choosing from one so
 

00:02:35.920 --> 00:02:38.390 align:start position:0%
would have started choosing from one so
here<00:02:36.080><c> we</c><00:02:36.200><c> could</c><00:02:36.319><c> have</c><00:02:36.480><c> chosen</c><00:02:37.319><c> uh</c><00:02:37.480><c> one</c><00:02:38.040><c> or</c><00:02:38.280><c> we</c>

00:02:38.390 --> 00:02:38.400 align:start position:0%
here we could have chosen uh one or we
 

00:02:38.400 --> 00:02:40.390 align:start position:0%
here we could have chosen uh one or we
could<00:02:38.560><c> have</c><00:02:38.720><c> skipped</c><00:02:39.120><c> one</c><00:02:39.560><c> and</c><00:02:39.640><c> so</c><00:02:39.920><c> that</c><00:02:40.040><c> was</c><00:02:40.159><c> a</c>

00:02:40.390 --> 00:02:40.400 align:start position:0%
could have skipped one and so that was a
 

00:02:40.400 --> 00:02:44.350 align:start position:0%
could have skipped one and so that was a
very<00:02:40.840><c> simple</c><00:02:41.640><c> two</c><00:02:42.280><c> Branch</c><00:02:42.920><c> recursion</c><00:02:43.920><c> but</c><00:02:44.120><c> we</c>

00:02:44.350 --> 00:02:44.360 align:start position:0%
very simple two Branch recursion but we
 

00:02:44.360 --> 00:02:46.869 align:start position:0%
very simple two Branch recursion but we
can't<00:02:44.800><c> apply</c><00:02:45.400><c> the</c><00:02:45.519><c> same</c><00:02:45.959><c> here</c><00:02:46.239><c> and</c><00:02:46.360><c> the</c><00:02:46.560><c> reason</c>

00:02:46.869 --> 00:02:46.879 align:start position:0%
can't apply the same here and the reason
 

00:02:46.879 --> 00:02:49.589 align:start position:0%
can't apply the same here and the reason
for<00:02:47.159><c> that</c><00:02:47.440><c> is</c><00:02:47.959><c> at</c><00:02:48.239><c> some</c><00:02:48.560><c> point</c><00:02:48.959><c> with</c><00:02:49.360><c> this</c>

00:02:49.589 --> 00:02:49.599 align:start position:0%
for that is at some point with this
 

00:02:49.599 --> 00:02:52.070 align:start position:0%
for that is at some point with this
example<00:02:50.040><c> we</c><00:02:50.239><c> might</c><00:02:50.519><c> include</c><00:02:51.000><c> one</c><00:02:51.640><c> and</c><00:02:51.800><c> then</c>

00:02:52.070 --> 00:02:52.080 align:start position:0%
example we might include one and then
 

00:02:52.080 --> 00:02:53.710 align:start position:0%
example we might include one and then
eventually<00:02:52.640><c> we</c><00:02:52.760><c> might</c><00:02:52.959><c> get</c><00:02:53.080><c> to</c><00:02:53.280><c> seven</c><00:02:53.640><c> and</c>

00:02:53.710 --> 00:02:53.720 align:start position:0%
eventually we might get to seven and
 

00:02:53.720 --> 00:02:55.869 align:start position:0%
eventually we might get to seven and
then<00:02:53.879><c> we</c><00:02:54.040><c> might</c><00:02:54.239><c> include</c><00:02:54.680><c> seven</c><00:02:55.200><c> as</c><00:02:55.319><c> well</c><00:02:55.800><c> if</c>

00:02:55.869 --> 00:02:55.879 align:start position:0%
then we might include seven as well if
 

00:02:55.879 --> 00:02:57.589 align:start position:0%
then we might include seven as well if
we<00:02:56.000><c> were</c><00:02:56.159><c> to</c><00:02:56.319><c> have</c><00:02:56.480><c> skipped</c><00:02:56.959><c> this</c><00:02:57.120><c> one</c><00:02:57.480><c> we</c>

00:02:57.589 --> 00:02:57.599 align:start position:0%
we were to have skipped this one we
 

00:02:57.599 --> 00:02:59.190 align:start position:0%
we were to have skipped this one we
could<00:02:57.720><c> have</c><00:02:57.920><c> gone</c><00:02:58.200><c> down</c><00:02:58.519><c> this</c><00:02:58.760><c> path</c><00:02:59.000><c> we</c><00:02:59.080><c> could</c>

00:02:59.190 --> 00:02:59.200 align:start position:0%
could have gone down this path we could
 

00:02:59.200 --> 00:03:01.390 align:start position:0%
could have gone down this path we could
have<00:02:59.319><c> included</c><00:02:59.879><c> the</c><00:03:00.040><c> seven</c><00:03:00.640><c> and</c><00:03:00.840><c> then</c><00:03:01.239><c> we</c>

00:03:01.390 --> 00:03:01.400 align:start position:0%
have included the seven and then we
 

00:03:01.400 --> 00:03:03.390 align:start position:0%
have included the seven and then we
could<00:03:01.519><c> have</c><00:03:01.720><c> included</c><00:03:02.400><c> the</c><00:03:02.560><c> one</c><00:03:02.879><c> that</c><00:03:03.040><c> came</c>

00:03:03.390 --> 00:03:03.400 align:start position:0%
could have included the one that came
 

00:03:03.400 --> 00:03:05.149 align:start position:0%
could have included the one that came
after<00:03:03.640><c> it</c><00:03:03.879><c> and</c><00:03:04.000><c> we</c><00:03:04.120><c> would</c><00:03:04.239><c> have</c><00:03:04.400><c> ended</c><00:03:04.720><c> up</c><00:03:04.920><c> with</c>

00:03:05.149 --> 00:03:05.159 align:start position:0%
after it and we would have ended up with
 

00:03:05.159 --> 00:03:08.149 align:start position:0%
after it and we would have ended up with
duplicate<00:03:05.879><c> combinations</c><00:03:06.879><c> so</c><00:03:07.440><c> we</c><00:03:07.560><c> want</c><00:03:07.840><c> to</c>

00:03:08.149 --> 00:03:08.159 align:start position:0%
duplicate combinations so we want to
 

00:03:08.159 --> 00:03:10.670 align:start position:0%
duplicate combinations so we want to
avoid<00:03:08.680><c> this</c><00:03:08.959><c> case</c><00:03:09.480><c> and</c><00:03:09.640><c> we</c><00:03:09.760><c> can</c><00:03:10.080><c> believe</c><00:03:10.360><c> it</c><00:03:10.480><c> or</c>

00:03:10.670 --> 00:03:10.680 align:start position:0%
avoid this case and we can believe it or
 

00:03:10.680 --> 00:03:13.350 align:start position:0%
avoid this case and we can believe it or
not<00:03:11.000><c> still</c><00:03:11.440><c> do</c><00:03:11.720><c> so</c><00:03:12.280><c> with</c><00:03:12.519><c> two</c><00:03:12.920><c> Branch</c>

00:03:13.350 --> 00:03:13.360 align:start position:0%
not still do so with two Branch
 

00:03:13.360 --> 00:03:15.030 align:start position:0%
not still do so with two Branch
recursion<00:03:13.959><c> it's</c><00:03:14.080><c> going</c><00:03:14.159><c> to</c><00:03:14.319><c> be</c><00:03:14.519><c> similar</c><00:03:14.879><c> to</c>

00:03:15.030 --> 00:03:15.040 align:start position:0%
recursion it's going to be similar to
 

00:03:15.040 --> 00:03:17.470 align:start position:0%
recursion it's going to be similar to
how<00:03:15.159><c> we</c><00:03:15.319><c> eliminate</c><00:03:15.840><c> duplicates</c><00:03:16.400><c> in</c><00:03:16.599><c> threesome</c>

00:03:17.470 --> 00:03:17.480 align:start position:0%
how we eliminate duplicates in threesome
 

00:03:17.480 --> 00:03:20.190 align:start position:0%
how we eliminate duplicates in threesome
so<00:03:17.920><c> this</c><00:03:18.040><c> is</c><00:03:18.239><c> the</c><00:03:18.480><c> trick</c><00:03:19.080><c> behind</c><00:03:19.560><c> eliminating</c>

00:03:20.190 --> 00:03:20.200 align:start position:0%
so this is the trick behind eliminating
 

00:03:20.200 --> 00:03:23.149 align:start position:0%
so this is the trick behind eliminating
duplicates<00:03:21.120><c> the</c><00:03:21.319><c> issue</c><00:03:21.799><c> here</c><00:03:22.120><c> is</c><00:03:22.360><c> that</c><00:03:22.840><c> when</c>

00:03:23.149 --> 00:03:23.159 align:start position:0%
duplicates the issue here is that when
 

00:03:23.159 --> 00:03:26.190 align:start position:0%
duplicates the issue here is that when
we<00:03:23.640><c> choose</c><00:03:24.159><c> to</c><00:03:24.480><c> include</c><00:03:24.959><c> one</c><00:03:25.280><c> or</c><00:03:25.560><c> choose</c><00:03:25.920><c> to</c>

00:03:26.190 --> 00:03:26.200 align:start position:0%
we choose to include one or choose to
 

00:03:26.200 --> 00:03:29.149 align:start position:0%
we choose to include one or choose to
skip<00:03:26.560><c> one</c><00:03:27.080><c> we</c><00:03:27.360><c> don't</c><00:03:27.760><c> want</c><00:03:28.000><c> to</c><00:03:28.319><c> end</c><00:03:28.599><c> up</c><00:03:28.879><c> with</c>

00:03:29.149 --> 00:03:29.159 align:start position:0%
skip one we don't want to end up with
 

00:03:29.159 --> 00:03:32.110 align:start position:0%
skip one we don't want to end up with
another<00:03:29.840><c> one</c><00:03:30.200><c> on</c><00:03:30.480><c> the</c><00:03:30.720><c> same</c><00:03:31.280><c> path</c><00:03:31.640><c> where</c><00:03:31.840><c> we</c>

00:03:32.110 --> 00:03:32.120 align:start position:0%
another one on the same path where we
 

00:03:32.120 --> 00:03:35.190 align:start position:0%
another one on the same path where we
decided<00:03:32.640><c> to</c><00:03:33.000><c> skip</c><00:03:33.720><c> one</c><00:03:34.080><c> so</c><00:03:34.400><c> how</c><00:03:34.599><c> can</c><00:03:34.799><c> we</c><00:03:35.000><c> make</c>

00:03:35.190 --> 00:03:35.200 align:start position:0%
decided to skip one so how can we make
 

00:03:35.200 --> 00:03:38.030 align:start position:0%
decided to skip one so how can we make
it<00:03:35.319><c> so</c><00:03:35.519><c> that</c><00:03:35.640><c> we</c><00:03:35.840><c> never</c><00:03:36.200><c> see</c><00:03:36.920><c> another</c><00:03:37.400><c> one</c>

00:03:38.030 --> 00:03:38.040 align:start position:0%
it so that we never see another one
 

00:03:38.040 --> 00:03:41.030 align:start position:0%
it so that we never see another one
again<00:03:38.640><c> if</c><00:03:38.799><c> we</c><00:03:39.000><c> decided</c><00:03:39.400><c> to</c><00:03:39.640><c> skip</c><00:03:39.920><c> it</c><00:03:40.439><c> well</c><00:03:40.920><c> this</c>

00:03:41.030 --> 00:03:41.040 align:start position:0%
again if we decided to skip it well this
 

00:03:41.040 --> 00:03:44.390 align:start position:0%
again if we decided to skip it well this
is<00:03:41.239><c> the</c><00:03:41.400><c> trick</c><00:03:42.120><c> first</c><00:03:42.680><c> you</c><00:03:43.040><c> take</c><00:03:43.640><c> the</c><00:03:43.879><c> input</c>

00:03:44.390 --> 00:03:44.400 align:start position:0%
is the trick first you take the input
 

00:03:44.400 --> 00:03:47.229 align:start position:0%
is the trick first you take the input
array<00:03:45.239><c> and</c><00:03:45.599><c> you</c><00:03:45.959><c> sort</c><00:03:46.360><c> it</c><00:03:46.599><c> so</c><00:03:46.799><c> I'm</c><00:03:46.920><c> going</c><00:03:47.040><c> to</c>

00:03:47.229 --> 00:03:47.239 align:start position:0%
array and you sort it so I'm going to
 

00:03:47.239 --> 00:03:50.229 align:start position:0%
array and you sort it so I'm going to
redraw<00:03:47.879><c> this</c><00:03:48.200><c> in</c><00:03:48.400><c> sorted</c><00:03:48.920><c> order</c><00:03:49.720><c> now</c><00:03:50.040><c> it's</c>

00:03:50.229 --> 00:03:50.239 align:start position:0%
redraw this in sorted order now it's
 

00:03:50.239 --> 00:03:53.470 align:start position:0%
redraw this in sorted order now it's
sorted<00:03:51.239><c> why</c><00:03:51.480><c> did</c><00:03:51.680><c> I</c><00:03:51.959><c> put</c><00:03:52.159><c> it</c><00:03:52.360><c> in</c><00:03:52.560><c> sorted</c><00:03:52.959><c> order</c>

00:03:53.470 --> 00:03:53.480 align:start position:0%
sorted why did I put it in sorted order
 

00:03:53.480 --> 00:03:57.229 align:start position:0%
sorted why did I put it in sorted order
because<00:03:54.360><c> I</c><00:03:54.599><c> want</c><00:03:55.079><c> all</c><00:03:55.519><c> duplicate</c><00:03:56.200><c> elements</c><00:03:56.959><c> to</c>

00:03:57.229 --> 00:03:57.239 align:start position:0%
because I want all duplicate elements to
 

00:03:57.239 --> 00:03:59.830 align:start position:0%
because I want all duplicate elements to
be<00:03:57.640><c> adjacent</c><00:03:58.280><c> it's</c><00:03:58.560><c> not</c><00:03:59.000><c> necessarily</c>

00:03:59.830 --> 00:03:59.840 align:start position:0%
be adjacent it's not necessarily
 

00:03:59.840 --> 00:04:01.429 align:start position:0%
be adjacent it's not necessarily
important<00:04:00.239><c> that</c><00:04:00.400><c> we</c><00:04:00.680><c> go</c><00:04:00.959><c> through</c><00:04:01.239><c> the</c>

00:04:01.429 --> 00:04:01.439 align:start position:0%
important that we go through the
 

00:04:01.439 --> 00:04:03.589 align:start position:0%
important that we go through the
elements<00:04:02.000><c> in</c><00:04:02.159><c> sorted</c><00:04:02.640><c> order</c><00:04:03.000><c> that's</c><00:04:03.239><c> actually</c>

00:04:03.589 --> 00:04:03.599 align:start position:0%
elements in sorted order that's actually
 

00:04:03.599 --> 00:04:05.750 align:start position:0%
elements in sorted order that's actually
not<00:04:03.879><c> important</c><00:04:04.319><c> because</c><00:04:04.680><c> all</c><00:04:04.840><c> of</c><00:04:05.079><c> these</c><00:04:05.519><c> are</c>

00:04:05.750 --> 00:04:05.760 align:start position:0%
not important because all of these are
 

00:04:05.760 --> 00:04:08.550 align:start position:0%
not important because all of these are
going<00:04:05.959><c> to</c><00:04:06.120><c> be</c><00:04:06.519><c> positive</c><00:04:07.159><c> anyway</c><00:04:07.959><c> so</c><00:04:08.239><c> they're</c>

00:04:08.550 --> 00:04:08.560 align:start position:0%
going to be positive anyway so they're
 

00:04:08.560 --> 00:04:10.630 align:start position:0%
going to be positive anyway so they're
always<00:04:08.920><c> going</c><00:04:09.040><c> to</c><00:04:09.280><c> contribute</c><00:04:09.920><c> to</c><00:04:10.120><c> the</c><00:04:10.319><c> Target</c>

00:04:10.630 --> 00:04:10.640 align:start position:0%
always going to contribute to the Target
 

00:04:10.640 --> 00:04:12.110 align:start position:0%
always going to contribute to the Target
we're<00:04:10.799><c> never</c><00:04:11.000><c> going</c><00:04:11.079><c> to</c><00:04:11.239><c> deal</c><00:04:11.480><c> with</c><00:04:11.720><c> negative</c>

00:04:12.110 --> 00:04:12.120 align:start position:0%
we're never going to deal with negative
 

00:04:12.120 --> 00:04:14.110 align:start position:0%
we're never going to deal with negative
numbers<00:04:12.680><c> so</c><00:04:12.840><c> it</c><00:04:12.959><c> doesn't</c><00:04:13.239><c> matter</c><00:04:13.560><c> so</c><00:04:13.760><c> much</c><00:04:14.000><c> the</c>

00:04:14.110 --> 00:04:14.120 align:start position:0%
numbers so it doesn't matter so much the
 

00:04:14.120 --> 00:04:15.910 align:start position:0%
numbers so it doesn't matter so much the
order<00:04:14.400><c> that</c><00:04:14.519><c> we</c><00:04:14.640><c> go</c><00:04:14.840><c> through</c><00:04:15.079><c> them</c><00:04:15.519><c> but</c><00:04:15.680><c> it</c>

00:04:15.910 --> 00:04:15.920 align:start position:0%
order that we go through them but it
 

00:04:15.920 --> 00:04:18.270 align:start position:0%
order that we go through them but it
does<00:04:16.160><c> matter</c><00:04:16.680><c> that</c><00:04:16.840><c> we</c><00:04:17.120><c> group</c><00:04:17.799><c> similar</c>

00:04:18.270 --> 00:04:18.280 align:start position:0%
does matter that we group similar
 

00:04:18.280 --> 00:04:21.710 align:start position:0%
does matter that we group similar
elements<00:04:19.239><c> together</c><00:04:19.799><c> so</c><00:04:20.199><c> now</c><00:04:20.799><c> I'm</c><00:04:21.199><c> actually</c>

00:04:21.710 --> 00:04:21.720 align:start position:0%
elements together so now I'm actually
 

00:04:21.720 --> 00:04:24.629 align:start position:0%
elements together so now I'm actually
able<00:04:22.040><c> to</c><00:04:22.360><c> make</c><00:04:22.680><c> the</c><00:04:22.919><c> choice</c><00:04:23.600><c> I'm</c><00:04:23.840><c> going</c><00:04:23.919><c> to</c><00:04:24.160><c> say</c>

00:04:24.629 --> 00:04:24.639 align:start position:0%
able to make the choice I'm going to say
 

00:04:24.639 --> 00:04:28.270 align:start position:0%
able to make the choice I'm going to say
okay<00:04:24.919><c> either</c><00:04:25.440><c> I</c><00:04:25.759><c> include</c><00:04:26.560><c> one</c><00:04:27.160><c> in</c><00:04:27.560><c> my</c><00:04:27.759><c> solution</c>

00:04:28.270 --> 00:04:28.280 align:start position:0%
okay either I include one in my solution
 

00:04:28.280 --> 00:04:30.670 align:start position:0%
okay either I include one in my solution
set<00:04:28.560><c> so</c><00:04:28.960><c> this</c><00:04:29.360><c> brand</c><00:04:29.720><c> brch</c><00:04:30.199><c> is</c><00:04:30.400><c> going</c><00:04:30.479><c> to</c>

00:04:30.670 --> 00:04:30.680 align:start position:0%
set so this brand brch is going to
 

00:04:30.680 --> 00:04:33.990 align:start position:0%
set so this brand brch is going to
include<00:04:31.600><c> all</c><00:04:32.280><c> possible</c><00:04:32.800><c> combinations</c><00:04:33.800><c> that</c>

00:04:33.990 --> 00:04:34.000 align:start position:0%
include all possible combinations that
 

00:04:34.000 --> 00:04:36.950 align:start position:0%
include all possible combinations that
include<00:04:34.800><c> one</c><00:04:35.240><c> or</c><00:04:35.479><c> have</c><00:04:35.759><c> multiple</c><00:04:36.280><c> occurrences</c>

00:04:36.950 --> 00:04:36.960 align:start position:0%
include one or have multiple occurrences
 

00:04:36.960 --> 00:04:39.670 align:start position:0%
include one or have multiple occurrences
of<00:04:37.120><c> one</c><00:04:37.360><c> up</c><00:04:37.479><c> to</c><00:04:37.720><c> two</c><00:04:38.039><c> in</c><00:04:38.199><c> this</c><00:04:38.400><c> example</c><00:04:39.120><c> or</c><00:04:39.520><c> I'm</c>

00:04:39.670 --> 00:04:39.680 align:start position:0%
of one up to two in this example or I'm
 

00:04:39.680 --> 00:04:43.950 align:start position:0%
of one up to two in this example or I'm
going<00:04:39.800><c> to</c><00:04:40.039><c> decide</c><00:04:40.720><c> to</c><00:04:41.080><c> skip</c><00:04:41.520><c> one</c><00:04:42.160><c> on</c><00:04:42.840><c> this</c><00:04:43.280><c> side</c>

00:04:43.950 --> 00:04:43.960 align:start position:0%
going to decide to skip one on this side
 

00:04:43.960 --> 00:04:47.029 align:start position:0%
going to decide to skip one on this side
but<00:04:44.280><c> when</c><00:04:44.479><c> we</c><00:04:44.759><c> are</c><00:04:45.000><c> choosing</c><00:04:45.919><c> from</c><00:04:46.240><c> an</c><00:04:46.479><c> element</c>

00:04:47.029 --> 00:04:47.039 align:start position:0%
but when we are choosing from an element
 

00:04:47.039 --> 00:04:48.629 align:start position:0%
but when we are choosing from an element
we're<00:04:47.199><c> going</c><00:04:47.280><c> to</c><00:04:47.600><c> obviously</c><00:04:48.120><c> have</c><00:04:48.320><c> some</c><00:04:48.520><c> kind</c>

00:04:48.629 --> 00:04:48.639 align:start position:0%
we're going to obviously have some kind
 

00:04:48.639 --> 00:04:50.390 align:start position:0%
we're going to obviously have some kind
of<00:04:48.800><c> pointer</c><00:04:49.240><c> that</c><00:04:49.360><c> tells</c><00:04:49.639><c> us</c><00:04:49.840><c> the</c><00:04:50.000><c> current</c>

00:04:50.390 --> 00:04:50.400 align:start position:0%
of pointer that tells us the current
 

00:04:50.400 --> 00:04:52.510 align:start position:0%
of pointer that tells us the current
position<00:04:50.720><c> that</c><00:04:50.840><c> we're</c><00:04:51.039><c> at</c><00:04:51.280><c> let's</c><00:04:51.479><c> call</c><00:04:51.759><c> that</c><00:04:52.039><c> I</c>

00:04:52.510 --> 00:04:52.520 align:start position:0%
position that we're at let's call that I
 

00:04:52.520 --> 00:04:54.230 align:start position:0%
position that we're at let's call that I
so<00:04:52.800><c> here</c><00:04:53.120><c> I'm</c><00:04:53.240><c> choosing</c><00:04:53.759><c> between</c><00:04:54.080><c> this</c>

00:04:54.230 --> 00:04:54.240 align:start position:0%
so here I'm choosing between this
 

00:04:54.240 --> 00:04:56.550 align:start position:0%
so here I'm choosing between this
element<00:04:54.639><c> I</c><00:04:54.720><c> can</c><00:04:54.919><c> include</c><00:04:55.320><c> it</c><00:04:55.720><c> and</c><00:04:56.039><c> if</c><00:04:56.360><c> I</c>

00:04:56.550 --> 00:04:56.560 align:start position:0%
element I can include it and if I
 

00:04:56.560 --> 00:04:58.710 align:start position:0%
element I can include it and if I
include<00:04:56.960><c> it</c><00:04:57.160><c> here</c><00:04:57.600><c> I</c><00:04:57.759><c> definitely</c><00:04:58.240><c> need</c><00:04:58.479><c> to</c>

00:04:58.710 --> 00:04:58.720 align:start position:0%
include it here I definitely need to
 

00:04:58.720 --> 00:05:00.909 align:start position:0%
include it here I definitely need to
shift<00:04:59.120><c> my</c><00:04:59.280><c> pointer</c><00:04:59.759><c> because</c><00:05:00.000><c> I'm</c><00:05:00.240><c> not</c><00:05:00.560><c> allowed</c>

00:05:00.909 --> 00:05:00.919 align:start position:0%
shift my pointer because I'm not allowed
 

00:05:00.919 --> 00:05:03.350 align:start position:0%
shift my pointer because I'm not allowed
to<00:05:01.240><c> reuse</c><00:05:01.960><c> that</c><00:05:02.240><c> same</c><00:05:02.520><c> element</c><00:05:02.960><c> multiple</c>

00:05:03.350 --> 00:05:03.360 align:start position:0%
to reuse that same element multiple
 

00:05:03.360 --> 00:05:05.189 align:start position:0%
to reuse that same element multiple
times<00:05:03.600><c> so</c><00:05:03.720><c> I</c><00:05:03.840><c> do</c><00:05:04.000><c> have</c><00:05:04.080><c> to</c><00:05:04.240><c> shift</c><00:05:04.560><c> the</c><00:05:04.720><c> pointer</c>

00:05:05.189 --> 00:05:05.199 align:start position:0%
times so I do have to shift the pointer
 

00:05:05.199 --> 00:05:07.510 align:start position:0%
times so I do have to shift the pointer
here<00:05:05.600><c> so</c><00:05:06.000><c> it's</c><00:05:06.120><c> going</c><00:05:06.240><c> to</c><00:05:06.440><c> be</c><00:05:06.560><c> shifted</c><00:05:07.320><c> but</c>

00:05:07.510 --> 00:05:07.520 align:start position:0%
here so it's going to be shifted but
 

00:05:07.520 --> 00:05:10.150 align:start position:0%
here so it's going to be shifted but
what<00:05:07.759><c> about</c><00:05:08.479><c> this</c><00:05:08.720><c> case</c><00:05:09.240><c> where</c><00:05:09.479><c> I</c><00:05:09.639><c> decided</c><00:05:10.080><c> I</c>

00:05:10.150 --> 00:05:10.160 align:start position:0%
what about this case where I decided I
 

00:05:10.160 --> 00:05:12.830 align:start position:0%
what about this case where I decided I
want<00:05:10.280><c> to</c><00:05:10.520><c> skip</c><00:05:10.919><c> one</c><00:05:11.440><c> well</c><00:05:11.639><c> if</c><00:05:11.800><c> I</c><00:05:12.120><c> shift</c><00:05:12.400><c> it</c><00:05:12.639><c> by</c>

00:05:12.830 --> 00:05:12.840 align:start position:0%
want to skip one well if I shift it by
 

00:05:12.840 --> 00:05:16.070 align:start position:0%
want to skip one well if I shift it by
one<00:05:13.400><c> and</c><00:05:13.520><c> it</c><00:05:13.680><c> lands</c><00:05:14.240><c> over</c><00:05:14.560><c> here</c><00:05:14.960><c> I'm</c><00:05:15.280><c> still</c>

00:05:16.070 --> 00:05:16.080 align:start position:0%
one and it lands over here I'm still
 

00:05:16.080 --> 00:05:19.029 align:start position:0%
one and it lands over here I'm still
able<00:05:16.560><c> to</c><00:05:16.840><c> choose</c><00:05:17.360><c> from</c><00:05:17.680><c> one</c><00:05:18.240><c> but</c><00:05:18.440><c> I</c><00:05:18.520><c> wanted</c><00:05:18.840><c> to</c>

00:05:19.029 --> 00:05:19.039 align:start position:0%
able to choose from one but I wanted to
 

00:05:19.039 --> 00:05:21.510 align:start position:0%
able to choose from one but I wanted to
skip<00:05:19.319><c> it</c><00:05:19.479><c> all</c><00:05:19.960><c> together</c><00:05:20.479><c> so</c><00:05:20.800><c> this</c><00:05:20.919><c> is</c><00:05:21.319><c> where</c>

00:05:21.510 --> 00:05:21.520 align:start position:0%
skip it all together so this is where
 

00:05:21.520 --> 00:05:23.830 align:start position:0%
skip it all together so this is where
we're<00:05:21.680><c> going</c><00:05:21.759><c> to</c><00:05:21.960><c> use</c><00:05:22.680><c> something</c><00:05:23.199><c> called</c><00:05:23.680><c> a</c>

00:05:23.830 --> 00:05:23.840 align:start position:0%
we're going to use something called a
 

00:05:23.840 --> 00:05:26.070 align:start position:0%
we're going to use something called a
loop<00:05:24.400><c> I'm</c><00:05:24.520><c> going</c><00:05:24.639><c> to</c><00:05:24.800><c> use</c><00:05:25.039><c> a</c><00:05:25.280><c> while</c><00:05:25.600><c> loop</c><00:05:25.880><c> and</c>

00:05:26.070 --> 00:05:26.080 align:start position:0%
loop I'm going to use a while loop and
 

00:05:26.080 --> 00:05:28.390 align:start position:0%
loop I'm going to use a while loop and
what<00:05:26.199><c> we're</c><00:05:26.360><c> going</c><00:05:26.479><c> to</c><00:05:26.720><c> say</c><00:05:27.360><c> is</c><00:05:27.800><c> don't</c><00:05:28.160><c> just</c>

00:05:28.390 --> 00:05:28.400 align:start position:0%
what we're going to say is don't just
 

00:05:28.400 --> 00:05:33.150 align:start position:0%
what we're going to say is don't just
shift<00:05:28.880><c> I</c><00:05:29.400><c> by</c><00:05:29.840><c> 1</c><00:05:30.560><c> keep</c><00:05:31.000><c> shifting</c><00:05:31.600><c> it</c><00:05:32.240><c> while</c><00:05:32.919><c> the</c>

00:05:33.150 --> 00:05:33.160 align:start position:0%
shift I by 1 keep shifting it while the
 

00:05:33.160 --> 00:05:37.430 align:start position:0%
shift I by 1 keep shifting it while the
element<00:05:33.919><c> at</c><00:05:34.280><c> I</c><00:05:35.000><c> is</c><00:05:35.360><c> equal</c><00:05:36.039><c> to</c><00:05:36.440><c> its</c><00:05:36.720><c> neighbor</c><00:05:37.199><c> so</c>

00:05:37.430 --> 00:05:37.440 align:start position:0%
element at I is equal to its neighbor so
 

00:05:37.440 --> 00:05:39.790 align:start position:0%
element at I is equal to its neighbor so
while<00:05:37.960><c> these</c><00:05:38.160><c> two</c><00:05:38.319><c> are</c><00:05:38.520><c> equal</c><00:05:38.919><c> shift</c><00:05:39.319><c> I</c><00:05:39.600><c> so</c>

00:05:39.790 --> 00:05:39.800 align:start position:0%
while these two are equal shift I so
 

00:05:39.800 --> 00:05:41.629 align:start position:0%
while these two are equal shift I so
right<00:05:39.960><c> now</c><00:05:40.360><c> I</c><00:05:40.560><c> is</c><00:05:40.639><c> going</c><00:05:40.759><c> to</c><00:05:40.840><c> be</c><00:05:40.960><c> shifted</c><00:05:41.360><c> over</c>

00:05:41.629 --> 00:05:41.639 align:start position:0%
right now I is going to be shifted over
 

00:05:41.639 --> 00:05:44.469 align:start position:0%
right now I is going to be shifted over
here<00:05:42.080><c> and</c><00:05:42.319><c> right</c><00:05:42.520><c> now</c><00:05:43.160><c> this</c><00:05:43.560><c> value</c><00:05:43.919><c> is</c><00:05:44.120><c> not</c>

00:05:44.469 --> 00:05:44.479 align:start position:0%
here and right now this value is not
 

00:05:44.479 --> 00:05:46.590 align:start position:0%
here and right now this value is not
equal<00:05:44.800><c> to</c><00:05:45.000><c> its</c><00:05:45.199><c> next</c><00:05:45.440><c> neighbor</c><00:05:45.840><c> so</c><00:05:46.120><c> now</c><00:05:46.479><c> this</c>

00:05:46.590 --> 00:05:46.600 align:start position:0%
equal to its next neighbor so now this
 

00:05:46.600 --> 00:05:48.950 align:start position:0%
equal to its next neighbor so now this
is<00:05:46.720><c> where</c><00:05:47.000><c> I</c><00:05:47.199><c> is</c><00:05:47.360><c> going</c><00:05:47.560><c> to</c><00:05:47.759><c> land</c><00:05:48.440><c> and</c><00:05:48.600><c> when</c><00:05:48.759><c> we</c>

00:05:48.950 --> 00:05:48.960 align:start position:0%
is where I is going to land and when we
 

00:05:48.960 --> 00:05:51.070 align:start position:0%
is where I is going to land and when we
actually<00:05:49.240><c> make</c><00:05:49.520><c> the</c><00:05:49.680><c> recursive</c><00:05:50.240><c> call</c><00:05:50.720><c> we're</c>

00:05:51.070 --> 00:05:51.080 align:start position:0%
actually make the recursive call we're
 

00:05:51.080 --> 00:05:53.950 align:start position:0%
actually make the recursive call we're
always<00:05:51.360><c> going</c><00:05:51.479><c> to</c><00:05:51.639><c> be</c><00:05:51.880><c> passing</c><00:05:52.199><c> in</c><00:05:52.520><c> I</c><00:05:52.840><c> +</c><00:05:53.240><c> 1</c><00:05:53.720><c> into</c>

00:05:53.950 --> 00:05:53.960 align:start position:0%
always going to be passing in I + 1 into
 

00:05:53.960 --> 00:05:56.029 align:start position:0%
always going to be passing in I + 1 into
the<00:05:54.120><c> recursive</c><00:05:54.600><c> call</c><00:05:55.199><c> so</c><00:05:55.600><c> we</c><00:05:55.680><c> don't</c><00:05:55.880><c> really</c>

00:05:56.029 --> 00:05:56.039 align:start position:0%
the recursive call so we don't really
 

00:05:56.039 --> 00:05:57.590 align:start position:0%
the recursive call so we don't really
have<00:05:56.120><c> to</c><00:05:56.240><c> shift</c><00:05:56.479><c> it</c><00:05:56.720><c> again</c><00:05:57.039><c> here</c><00:05:57.280><c> so</c><00:05:57.440><c> it's</c>

00:05:57.590 --> 00:05:57.600 align:start position:0%
have to shift it again here so it's
 

00:05:57.600 --> 00:05:59.430 align:start position:0%
have to shift it again here so it's
already<00:05:57.880><c> going</c><00:05:57.960><c> to</c><00:05:58.120><c> be</c><00:05:58.319><c> passed</c><00:05:58.639><c> in</c><00:05:59.160><c> uh</c><00:05:59.240><c> when</c><00:05:59.319><c> we</c>

00:05:59.430 --> 00:05:59.440 align:start position:0%
already going to be passed in uh when we
 

00:05:59.440 --> 00:06:01.070 align:start position:0%
already going to be passed in uh when we
do<00:05:59.720><c> it</c><00:05:59.800><c> recursively</c><00:06:00.360><c> so</c><00:06:00.520><c> that'll</c><00:06:00.800><c> probably</c>

00:06:01.070 --> 00:06:01.080 align:start position:0%
do it recursively so that'll probably
 

00:06:01.080 --> 00:06:02.990 align:start position:0%
do it recursively so that'll probably
make<00:06:01.240><c> more</c><00:06:01.440><c> sense</c><00:06:01.720><c> when</c><00:06:01.840><c> we</c><00:06:01.960><c> get</c><00:06:02.080><c> to</c><00:06:02.199><c> the</c><00:06:02.360><c> code</c>

00:06:02.990 --> 00:06:03.000 align:start position:0%
make more sense when we get to the code
 

00:06:03.000 --> 00:06:04.790 align:start position:0%
make more sense when we get to the code
but<00:06:03.199><c> keep</c><00:06:03.360><c> in</c><00:06:03.479><c> mind</c><00:06:03.759><c> that</c><00:06:04.000><c> just</c><00:06:04.240><c> because</c><00:06:04.600><c> we</c>

00:06:04.790 --> 00:06:04.800 align:start position:0%
but keep in mind that just because we
 

00:06:04.800 --> 00:06:06.830 align:start position:0%
but keep in mind that just because we
have<00:06:04.960><c> a</c><00:06:05.120><c> loop</c><00:06:05.560><c> in</c><00:06:05.720><c> the</c><00:06:05.880><c> recursive</c><00:06:06.400><c> solution</c>

00:06:06.830 --> 00:06:06.840 align:start position:0%
have a loop in the recursive solution
 

00:06:06.840 --> 00:06:08.309 align:start position:0%
have a loop in the recursive solution
doesn't<00:06:07.080><c> mean</c><00:06:07.280><c> we're</c><00:06:07.440><c> going</c><00:06:07.560><c> to</c><00:06:07.880><c> be</c>

00:06:08.309 --> 00:06:08.319 align:start position:0%
doesn't mean we're going to be
 

00:06:08.319 --> 00:06:10.309 align:start position:0%
doesn't mean we're going to be
recursively<00:06:09.160><c> calling</c><00:06:09.639><c> the</c><00:06:09.800><c> function</c>

00:06:10.309 --> 00:06:10.319 align:start position:0%
recursively calling the function
 

00:06:10.319 --> 00:06:12.070 align:start position:0%
recursively calling the function
multiple<00:06:10.759><c> times</c><00:06:11.039><c> we're</c><00:06:11.240><c> still</c><00:06:11.520><c> only</c><00:06:11.800><c> doing</c>

00:06:12.070 --> 00:06:12.080 align:start position:0%
multiple times we're still only doing
 

00:06:12.080 --> 00:06:15.230 align:start position:0%
multiple times we're still only doing
two<00:06:12.440><c> Branch</c><00:06:12.880><c> recursion</c><00:06:13.759><c> so</c><00:06:14.400><c> with</c><00:06:14.639><c> this</c><00:06:15.039><c> I'll</c>

00:06:15.230 --> 00:06:15.240 align:start position:0%
two Branch recursion so with this I'll
 

00:06:15.240 --> 00:06:17.150 align:start position:0%
two Branch recursion so with this I'll
kind<00:06:15.400><c> of</c><00:06:15.599><c> run</c><00:06:15.800><c> through</c><00:06:16.039><c> the</c><00:06:16.199><c> quick</c><00:06:16.479><c> simulation</c>

00:06:17.150 --> 00:06:17.160 align:start position:0%
kind of run through the quick simulation
 

00:06:17.160 --> 00:06:18.950 align:start position:0%
kind of run through the quick simulation
here<00:06:17.599><c> and</c><00:06:17.720><c> then</c><00:06:17.880><c> we'll</c><00:06:18.120><c> get</c><00:06:18.280><c> into</c><00:06:18.479><c> the</c><00:06:18.639><c> code</c>

00:06:18.950 --> 00:06:18.960 align:start position:0%
here and then we'll get into the code
 

00:06:18.960 --> 00:06:20.589 align:start position:0%
here and then we'll get into the code
the<00:06:19.080><c> code</c><00:06:19.280><c> is</c><00:06:19.400><c> going</c><00:06:19.479><c> to</c><00:06:19.560><c> be</c><00:06:19.800><c> very</c><00:06:20.039><c> similar</c><00:06:20.400><c> to</c>

00:06:20.589 --> 00:06:20.599 align:start position:0%
the code is going to be very similar to
 

00:06:20.599 --> 00:06:22.629 align:start position:0%
the code is going to be very similar to
combination<00:06:21.120><c> some</c><00:06:21.440><c> one</c><00:06:21.960><c> just</c><00:06:22.199><c> the</c><00:06:22.360><c> fact</c><00:06:22.520><c> that</c>

00:06:22.629 --> 00:06:22.639 align:start position:0%
combination some one just the fact that
 

00:06:22.639 --> 00:06:24.350 align:start position:0%
combination some one just the fact that
we're<00:06:22.759><c> sorting</c><00:06:23.160><c> the</c><00:06:23.280><c> input</c><00:06:23.759><c> this</c><00:06:23.919><c> time</c><00:06:24.199><c> and</c>

00:06:24.350 --> 00:06:24.360 align:start position:0%
we're sorting the input this time and
 

00:06:24.360 --> 00:06:25.710 align:start position:0%
we're sorting the input this time and
that<00:06:24.440><c> we're</c><00:06:24.560><c> going</c><00:06:24.639><c> to</c><00:06:24.759><c> have</c><00:06:24.840><c> a</c><00:06:25.000><c> loop</c><00:06:25.440><c> inside</c>

00:06:25.710 --> 00:06:25.720 align:start position:0%
that we're going to have a loop inside
 

00:06:25.720 --> 00:06:28.629 align:start position:0%
that we're going to have a loop inside
of<00:06:25.840><c> our</c><00:06:26.039><c> recursive</c><00:06:26.560><c> function</c><00:06:27.039><c> so</c><00:06:27.599><c> here</c><00:06:28.000><c> we</c><00:06:28.240><c> can</c>

00:06:28.629 --> 00:06:28.639 align:start position:0%
of our recursive function so here we can
 

00:06:28.639 --> 00:06:30.150 align:start position:0%
of our recursive function so here we can
continue<00:06:29.000><c> to</c><00:06:29.160><c> include</c><00:06:29.599><c> one</c><00:06:29.759><c> we're</c><00:06:29.919><c> at</c><00:06:30.039><c> the</c>

00:06:30.150 --> 00:06:30.160 align:start position:0%
continue to include one we're at the
 

00:06:30.160 --> 00:06:31.270 align:start position:0%
continue to include one we're at the
second<00:06:30.360><c> one</c><00:06:30.560><c> so</c><00:06:30.759><c> here</c><00:06:30.919><c> we</c><00:06:31.039><c> could</c><00:06:31.160><c> have</c>

00:06:31.270 --> 00:06:31.280 align:start position:0%
second one so here we could have
 

00:06:31.280 --> 00:06:32.629 align:start position:0%
second one so here we could have
included<00:06:31.639><c> it</c><00:06:31.800><c> we</c><00:06:31.919><c> would</c><00:06:32.039><c> have</c><00:06:32.199><c> gotten</c><00:06:32.479><c> that</c>

00:06:32.629 --> 00:06:32.639 align:start position:0%
included it we would have gotten that
 

00:06:32.639 --> 00:06:35.189 align:start position:0%
included it we would have gotten that
one<00:06:32.919><c> one</c><00:06:33.599><c> or</c><00:06:33.880><c> we</c><00:06:34.000><c> could</c><00:06:34.120><c> have</c><00:06:34.280><c> skipped</c><00:06:34.680><c> it</c><00:06:35.080><c> in</c>

00:06:35.189 --> 00:06:35.199 align:start position:0%
one one or we could have skipped it in
 

00:06:35.199 --> 00:06:36.790 align:start position:0%
one one or we could have skipped it in
which<00:06:35.400><c> case</c><00:06:35.560><c> we're</c><00:06:35.759><c> over</c><00:06:36.000><c> here</c><00:06:36.360><c> so</c><00:06:36.560><c> we</c><00:06:36.680><c> would</c>

00:06:36.790 --> 00:06:36.800 align:start position:0%
which case we're over here so we would
 

00:06:36.800 --> 00:06:38.629 align:start position:0%
which case we're over here so we would
have<00:06:37.000><c> you</c><00:06:37.080><c> know</c><00:06:37.199><c> still</c><00:06:37.400><c> have</c><00:06:37.639><c> been</c><00:06:37.880><c> here</c><00:06:38.440><c> but</c>

00:06:38.629 --> 00:06:38.639 align:start position:0%
have you know still have been here but
 

00:06:38.639 --> 00:06:40.230 align:start position:0%
have you know still have been here but
just<00:06:38.840><c> keep</c><00:06:39.000><c> in</c><00:06:39.120><c> mind</c><00:06:39.319><c> that</c><00:06:39.440><c> I'm</c><00:06:39.520><c> not</c><00:06:39.680><c> drawing</c>

00:06:40.230 --> 00:06:40.240 align:start position:0%
just keep in mind that I'm not drawing
 

00:06:40.240 --> 00:06:42.350 align:start position:0%
just keep in mind that I'm not drawing
exactly<00:06:40.599><c> where</c><00:06:40.800><c> the</c><00:06:40.960><c> pointer</c><00:06:41.400><c> happens</c><00:06:41.680><c> to</c><00:06:41.880><c> be</c>

00:06:42.350 --> 00:06:42.360 align:start position:0%
exactly where the pointer happens to be
 

00:06:42.360 --> 00:06:45.309 align:start position:0%
exactly where the pointer happens to be
um<00:06:42.639><c> here</c><00:06:43.199><c> we</c><00:06:43.479><c> could</c><00:06:44.160><c> like</c><00:06:44.360><c> go</c><00:06:44.599><c> through</c><00:06:45.000><c> all</c>

00:06:45.309 --> 00:06:45.319 align:start position:0%
um here we could like go through all
 

00:06:45.319 --> 00:06:46.670 align:start position:0%
um here we could like go through all
combinations<00:06:46.039><c> obviously</c><00:06:46.360><c> that's</c><00:06:46.520><c> going</c><00:06:46.599><c> to</c>

00:06:46.670 --> 00:06:46.680 align:start position:0%
combinations obviously that's going to
 

00:06:46.680 --> 00:06:48.469 align:start position:0%
combinations obviously that's going to
be<00:06:46.800><c> a</c><00:06:46.919><c> very</c><00:06:47.120><c> large</c><00:06:47.400><c> tree</c><00:06:47.759><c> but</c><00:06:47.919><c> just</c><00:06:48.080><c> trust</c><00:06:48.319><c> me</c>

00:06:48.469 --> 00:06:48.479 align:start position:0%
be a very large tree but just trust me
 

00:06:48.479 --> 00:06:49.870 align:start position:0%
be a very large tree but just trust me
when<00:06:48.599><c> I</c><00:06:48.720><c> say</c><00:06:48.880><c> that</c><00:06:49.080><c> eventually</c><00:06:49.520><c> we</c><00:06:49.639><c> could</c><00:06:49.759><c> have</c>

00:06:49.870 --> 00:06:49.880 align:start position:0%
when I say that eventually we could have
 

00:06:49.880 --> 00:06:51.629 align:start position:0%
when I say that eventually we could have
skipped<00:06:50.240><c> two</c><00:06:50.520><c> we</c><00:06:50.639><c> could</c><00:06:50.720><c> have</c><00:06:50.840><c> skipped</c><00:06:51.440><c> five</c>

00:06:51.629 --> 00:06:51.639 align:start position:0%
skipped two we could have skipped five
 

00:06:51.639 --> 00:06:53.309 align:start position:0%
skipped two we could have skipped five
and<00:06:51.759><c> we</c><00:06:51.880><c> could</c><00:06:51.960><c> have</c><00:06:52.120><c> gotten</c><00:06:52.319><c> to</c><00:06:52.560><c> six</c><00:06:53.039><c> and</c><00:06:53.160><c> in</c>

00:06:53.309 --> 00:06:53.319 align:start position:0%
and we could have gotten to six and in
 

00:06:53.319 --> 00:06:55.469 align:start position:0%
and we could have gotten to six and in
that<00:06:53.479><c> case</c><00:06:53.880><c> this</c><00:06:54.000><c> would</c><00:06:54.160><c> have</c><00:06:54.319><c> been</c><00:06:54.720><c> one</c><00:06:55.080><c> valid</c>

00:06:55.469 --> 00:06:55.479 align:start position:0%
that case this would have been one valid
 

00:06:55.479 --> 00:06:57.830 align:start position:0%
that case this would have been one valid
combination<00:06:56.000><c> where</c><00:06:56.160><c> we</c><00:06:56.319><c> get</c><00:06:56.479><c> 11</c><00:06:57.039><c> six</c><00:06:57.639><c> so</c>

00:06:57.830 --> 00:06:57.840 align:start position:0%
combination where we get 11 six so
 

00:06:57.840 --> 00:06:59.589 align:start position:0%
combination where we get 11 six so
that's<00:06:58.000><c> going</c><00:06:58.080><c> to</c><00:06:58.199><c> be</c><00:06:58.400><c> valid</c><00:06:58.919><c> now</c><00:06:59.120><c> another</c>

00:06:59.589 --> 00:06:59.599 align:start position:0%
that's going to be valid now another
 

00:06:59.599 --> 00:07:00.909 align:start position:0%
that's going to be valid now another
base<00:06:59.840><c> case</c><00:07:00.080><c> could</c><00:07:00.199><c> have</c><00:07:00.319><c> been</c><00:07:00.520><c> where</c><00:07:00.639><c> we</c><00:07:00.759><c> have</c>

00:07:00.909 --> 00:07:00.919 align:start position:0%
base case could have been where we have
 

00:07:00.919 --> 00:07:05.070 align:start position:0%
base case could have been where we have
gotten<00:07:01.160><c> to</c><00:07:01.440><c> like</c><00:07:01.680><c> 1</c><00:07:02.360><c> 1</c><00:07:03.199><c> 7</c><00:07:04.000><c> clearly</c><00:07:04.520><c> in</c><00:07:04.800><c> this</c>

00:07:05.070 --> 00:07:05.080 align:start position:0%
gotten to like 1 1 7 clearly in this
 

00:07:05.080 --> 00:07:08.029 align:start position:0%
gotten to like 1 1 7 clearly in this
case<00:07:05.680><c> we</c><00:07:05.919><c> went</c><00:07:06.360><c> over</c><00:07:06.759><c> the</c><00:07:06.960><c> target</c><00:07:07.599><c> the</c><00:07:07.720><c> target</c>

00:07:08.029 --> 00:07:08.039 align:start position:0%
case we went over the target the target
 

00:07:08.039 --> 00:07:09.790 align:start position:0%
case we went over the target the target
should<00:07:08.240><c> be</c><00:07:08.440><c> eight</c><00:07:08.759><c> but</c><00:07:08.919><c> when</c><00:07:09.039><c> you</c><00:07:09.160><c> sum</c><00:07:09.520><c> all</c><00:07:09.639><c> of</c>

00:07:09.790 --> 00:07:09.800 align:start position:0%
should be eight but when you sum all of
 

00:07:09.800 --> 00:07:11.990 align:start position:0%
should be eight but when you sum all of
these<00:07:10.160><c> together</c><00:07:10.520><c> we're</c><00:07:10.680><c> going</c><00:07:10.759><c> to</c><00:07:10.960><c> get</c><00:07:11.240><c> nine</c>

00:07:11.990 --> 00:07:12.000 align:start position:0%
these together we're going to get nine
 

00:07:12.000 --> 00:07:13.950 align:start position:0%
these together we're going to get nine
so<00:07:12.319><c> at</c><00:07:12.479><c> that</c><00:07:12.680><c> point</c><00:07:12.919><c> we</c><00:07:13.000><c> can</c><00:07:13.199><c> actually</c><00:07:13.599><c> stop</c>

00:07:13.950 --> 00:07:13.960 align:start position:0%
so at that point we can actually stop
 

00:07:13.960 --> 00:07:16.150 align:start position:0%
so at that point we can actually stop
our<00:07:14.199><c> recursion</c><00:07:14.759><c> cuz</c><00:07:14.919><c> we</c><00:07:15.039><c> know</c><00:07:15.319><c> all</c><00:07:15.680><c> elements</c>

00:07:16.150 --> 00:07:16.160 align:start position:0%
our recursion cuz we know all elements
 

00:07:16.160 --> 00:07:18.150 align:start position:0%
our recursion cuz we know all elements
in<00:07:16.280><c> the</c><00:07:16.400><c> input</c><00:07:16.759><c> are</c><00:07:17.080><c> positive</c><00:07:17.639><c> so</c><00:07:17.800><c> we're</c><00:07:17.960><c> never</c>

00:07:18.150 --> 00:07:18.160 align:start position:0%
in the input are positive so we're never
 

00:07:18.160 --> 00:07:19.909 align:start position:0%
in the input are positive so we're never
going<00:07:18.240><c> to</c><00:07:18.360><c> get</c><00:07:18.479><c> a</c><00:07:18.639><c> lower</c><00:07:19.000><c> sum</c><00:07:19.280><c> if</c><00:07:19.360><c> our</c><00:07:19.520><c> sum</c><00:07:19.759><c> is</c>

00:07:19.909 --> 00:07:19.919 align:start position:0%
going to get a lower sum if our sum is
 

00:07:19.919 --> 00:07:21.710 align:start position:0%
going to get a lower sum if our sum is
nine<00:07:20.280><c> now</c><00:07:20.520><c> but</c><00:07:20.639><c> we're</c><00:07:20.800><c> looking</c><00:07:21.039><c> for</c><00:07:21.199><c> a</c><00:07:21.360><c> sum</c><00:07:21.560><c> of</c>

00:07:21.710 --> 00:07:21.720 align:start position:0%
nine now but we're looking for a sum of
 

00:07:21.720 --> 00:07:23.150 align:start position:0%
nine now but we're looking for a sum of
eight<00:07:22.240><c> well</c><00:07:22.360><c> we're</c><00:07:22.520><c> never</c><00:07:22.720><c> going</c><00:07:22.800><c> to</c><00:07:22.960><c> get</c>

00:07:23.150 --> 00:07:23.160 align:start position:0%
eight well we're never going to get
 

00:07:23.160 --> 00:07:25.270 align:start position:0%
eight well we're never going to get
there<00:07:23.319><c> at</c><00:07:23.599><c> this</c><00:07:23.840><c> point</c><00:07:24.360><c> that's</c><00:07:24.599><c> another</c><00:07:24.919><c> base</c>

00:07:25.270 --> 00:07:25.280 align:start position:0%
there at this point that's another base
 

00:07:25.280 --> 00:07:27.390 align:start position:0%
there at this point that's another base
case<00:07:25.599><c> now</c><00:07:25.919><c> from</c><00:07:26.319><c> here</c><00:07:26.759><c> you</c><00:07:26.879><c> could</c><00:07:27.120><c> imagine</c>

00:07:27.390 --> 00:07:27.400 align:start position:0%
case now from here you could imagine
 

00:07:27.400 --> 00:07:28.790 align:start position:0%
case now from here you could imagine
that<00:07:27.520><c> we</c><00:07:27.599><c> would</c><00:07:27.720><c> have</c><00:07:27.840><c> skipped</c><00:07:28.280><c> everything</c><00:07:28.639><c> in</c>

00:07:28.790 --> 00:07:28.800 align:start position:0%
that we would have skipped everything in
 

00:07:28.800 --> 00:07:30.230 align:start position:0%
that we would have skipped everything in
between<00:07:29.160><c> here</c><00:07:29.280><c> and</c><00:07:29.520><c> we</c><00:07:29.639><c> would</c><00:07:29.720><c> have</c><00:07:29.840><c> gotten</c><00:07:30.039><c> to</c>

00:07:30.230 --> 00:07:30.240 align:start position:0%
between here and we would have gotten to
 

00:07:30.240 --> 00:07:31.869 align:start position:0%
between here and we would have gotten to
seven<00:07:30.680><c> in</c><00:07:30.840><c> that</c><00:07:31.000><c> case</c><00:07:31.199><c> we</c><00:07:31.280><c> would</c><00:07:31.440><c> have</c><00:07:31.560><c> gotten</c>

00:07:31.869 --> 00:07:31.879 align:start position:0%
seven in that case we would have gotten
 

00:07:31.879 --> 00:07:36.110 align:start position:0%
seven in that case we would have gotten
1<00:07:32.520><c> 7</c><00:07:33.120><c> that's</c><00:07:33.440><c> another</c><00:07:34.199><c> a</c><00:07:34.440><c> valid</c><00:07:35.120><c> combination</c>

00:07:36.110 --> 00:07:36.120 align:start position:0%
1 7 that's another a valid combination
 

00:07:36.120 --> 00:07:37.550 align:start position:0%
1 7 that's another a valid combination
and<00:07:36.240><c> I</c><00:07:36.319><c> won't</c><00:07:36.560><c> draw</c><00:07:36.800><c> all</c><00:07:36.919><c> of</c><00:07:37.039><c> them</c><00:07:37.160><c> out</c><00:07:37.360><c> but</c>

00:07:37.550 --> 00:07:37.560 align:start position:0%
and I won't draw all of them out but
 

00:07:37.560 --> 00:07:40.710 align:start position:0%
and I won't draw all of them out but
here<00:07:37.759><c> we</c><00:07:37.840><c> could</c><00:07:37.960><c> have</c><00:07:38.080><c> gotten</c><00:07:38.319><c> to</c><00:07:38.560><c> 1</c><00:07:39.120><c> 2</c><00:07:39.960><c> five</c>

00:07:40.710 --> 00:07:40.720 align:start position:0%
here we could have gotten to 1 2 five
 

00:07:40.720 --> 00:07:42.909 align:start position:0%
here we could have gotten to 1 2 five
that's<00:07:40.960><c> another</c><00:07:41.520><c> valid</c><00:07:41.840><c> one</c><00:07:42.440><c> in</c><00:07:42.560><c> the</c><00:07:42.720><c> case</c>

00:07:42.909 --> 00:07:42.919 align:start position:0%
that's another valid one in the case
 

00:07:42.919 --> 00:07:44.790 align:start position:0%
that's another valid one in the case
where<00:07:43.080><c> we</c><00:07:43.240><c> skip</c><00:07:43.639><c> one</c><00:07:43.879><c> we</c><00:07:44.000><c> could</c><00:07:44.120><c> have</c><00:07:44.319><c> chosen</c>

00:07:44.790 --> 00:07:44.800 align:start position:0%
where we skip one we could have chosen
 

00:07:44.800 --> 00:07:47.149 align:start position:0%
where we skip one we could have chosen
two<00:07:45.199><c> and</c><00:07:45.319><c> then</c><00:07:45.560><c> eventually</c><00:07:45.919><c> chosen</c><00:07:46.440><c> six</c><00:07:46.879><c> so</c>

00:07:47.149 --> 00:07:47.159 align:start position:0%
two and then eventually chosen six so
 

00:07:47.159 --> 00:07:48.749 align:start position:0%
two and then eventually chosen six so
that<00:07:47.280><c> would</c><00:07:47.400><c> have</c><00:07:47.479><c> been</c><00:07:47.680><c> another</c><00:07:48.039><c> valid</c><00:07:48.360><c> one</c>

00:07:48.749 --> 00:07:48.759 align:start position:0%
that would have been another valid one
 

00:07:48.759 --> 00:07:50.350 align:start position:0%
that would have been another valid one
these<00:07:48.879><c> are</c><00:07:49.000><c> all</c><00:07:49.159><c> the</c><00:07:49.319><c> valid</c><00:07:49.599><c> ones</c><00:07:50.080><c> I</c><00:07:50.159><c> didn't</c>

00:07:50.350 --> 00:07:50.360 align:start position:0%
these are all the valid ones I didn't
 

00:07:50.360 --> 00:07:52.350 align:start position:0%
these are all the valid ones I didn't
draw<00:07:50.599><c> out</c><00:07:50.800><c> the</c><00:07:50.960><c> entire</c><00:07:51.280><c> recursion</c><00:07:51.759><c> tree</c><00:07:52.319><c> I</c>

00:07:52.350 --> 00:07:52.360 align:start position:0%
draw out the entire recursion tree I
 

00:07:52.360 --> 00:07:53.790 align:start position:0%
draw out the entire recursion tree I
would<00:07:52.520><c> encourage</c><00:07:52.879><c> you</c><00:07:53.000><c> to</c><00:07:53.120><c> do</c><00:07:53.280><c> that</c><00:07:53.520><c> as</c><00:07:53.639><c> an</c>

00:07:53.790 --> 00:07:53.800 align:start position:0%
would encourage you to do that as an
 

00:07:53.800 --> 00:07:55.270 align:start position:0%
would encourage you to do that as an
exercise<00:07:54.319><c> though</c><00:07:54.479><c> I</c><00:07:54.560><c> do</c><00:07:54.720><c> think</c><00:07:54.879><c> it'll</c><00:07:55.120><c> help</c>

00:07:55.270 --> 00:07:55.280 align:start position:0%
exercise though I do think it'll help
 

00:07:55.280 --> 00:07:57.390 align:start position:0%
exercise though I do think it'll help
you<00:07:55.720><c> understand</c><00:07:55.879><c> it</c><00:07:56.280><c> and</c><00:07:56.360><c> it</c><00:07:56.479><c> might</c><00:07:56.639><c> be</c><00:07:56.800><c> easier</c>

00:07:57.390 --> 00:07:57.400 align:start position:0%
you understand it and it might be easier
 

00:07:57.400 --> 00:07:59.629 align:start position:0%
you understand it and it might be easier
to<00:07:57.680><c> kind</c><00:07:57.800><c> of</c><00:07:57.960><c> do</c><00:07:58.240><c> the</c><00:07:58.720><c> drawing</c><00:07:59.240><c> after</c><00:07:59.479><c> after</c>

00:07:59.629 --> 00:07:59.639 align:start position:0%
to kind of do the drawing after after
 

00:07:59.639 --> 00:08:01.149 align:start position:0%
to kind of do the drawing after after
you<00:07:59.720><c> look</c><00:07:59.840><c> at</c><00:07:59.960><c> the</c><00:08:00.080><c> code</c><00:08:00.440><c> so</c><00:08:00.639><c> maybe</c><00:08:00.919><c> that'll</c>

00:08:01.149 --> 00:08:01.159 align:start position:0%
you look at the code so maybe that'll
 

00:08:01.159 --> 00:08:03.189 align:start position:0%
you look at the code so maybe that'll
help<00:08:01.360><c> you</c><00:08:01.479><c> out</c><00:08:01.879><c> keep</c><00:08:02.039><c> in</c><00:08:02.199><c> mind</c><00:08:02.639><c> the</c><00:08:02.800><c> overall</c>

00:08:03.189 --> 00:08:03.199 align:start position:0%
help you out keep in mind the overall
 

00:08:03.199 --> 00:08:04.869 align:start position:0%
help you out keep in mind the overall
time<00:08:03.440><c> complexity</c><00:08:03.919><c> of</c><00:08:04.039><c> this</c><00:08:04.240><c> is</c><00:08:04.400><c> going</c><00:08:04.560><c> to</c><00:08:04.680><c> be</c>

00:08:04.869 --> 00:08:04.879 align:start position:0%
time complexity of this is going to be
 

00:08:04.879 --> 00:08:07.390 align:start position:0%
time complexity of this is going to be
similar<00:08:05.360><c> to</c><00:08:05.840><c> combination</c><00:08:06.360><c> some</c><00:08:06.680><c> one</c><00:08:07.199><c> even</c>

00:08:07.390 --> 00:08:07.400 align:start position:0%
similar to combination some one even
 

00:08:07.400 --> 00:08:09.350 align:start position:0%
similar to combination some one even
though<00:08:07.599><c> we're</c><00:08:07.759><c> doing</c><00:08:08.039><c> sorting</c><00:08:08.560><c> and</c><00:08:08.759><c> log</c><00:08:09.039><c> in</c>

00:08:09.350 --> 00:08:09.360 align:start position:0%
though we're doing sorting and log in
 

00:08:09.360 --> 00:08:10.990 align:start position:0%
though we're doing sorting and log in
that's<00:08:09.599><c> not</c><00:08:09.759><c> going</c><00:08:09.879><c> to</c><00:08:10.000><c> be</c><00:08:10.120><c> the</c><00:08:10.240><c> bottleneck</c>

00:08:10.990 --> 00:08:11.000 align:start position:0%
that's not going to be the bottleneck
 

00:08:11.000 --> 00:08:12.550 align:start position:0%
that's not going to be the bottleneck
the<00:08:11.080><c> bottleneck</c><00:08:11.639><c> is</c><00:08:11.759><c> going</c><00:08:11.840><c> to</c><00:08:11.960><c> be</c><00:08:12.120><c> the</c><00:08:12.280><c> fact</c>

00:08:12.550 --> 00:08:12.560 align:start position:0%
the bottleneck is going to be the fact
 

00:08:12.560 --> 00:08:15.029 align:start position:0%
the bottleneck is going to be the fact
that<00:08:12.720><c> we</c><00:08:12.960><c> have</c><00:08:13.479><c> up</c><00:08:13.639><c> to</c><00:08:13.800><c> two</c><00:08:14.080><c> branches</c><00:08:14.599><c> at</c><00:08:14.800><c> every</c>

00:08:15.029 --> 00:08:15.039 align:start position:0%
that we have up to two branches at every
 

00:08:15.039 --> 00:08:17.189 align:start position:0%
that we have up to two branches at every
single<00:08:15.479><c> step</c><00:08:15.960><c> assuming</c><00:08:16.400><c> that</c><00:08:16.599><c> every</c><00:08:16.840><c> number</c>

00:08:17.189 --> 00:08:17.199 align:start position:0%
single step assuming that every number
 

00:08:17.199 --> 00:08:18.990 align:start position:0%
single step assuming that every number
would<00:08:17.360><c> be</c><00:08:17.599><c> distinct</c><00:08:18.120><c> in</c><00:08:18.240><c> the</c><00:08:18.400><c> input</c><00:08:18.759><c> we'll</c>

00:08:18.990 --> 00:08:19.000 align:start position:0%
would be distinct in the input we'll
 

00:08:19.000 --> 00:08:20.950 align:start position:0%
would be distinct in the input we'll
have<00:08:19.159><c> two</c><00:08:19.360><c> branches</c><00:08:20.120><c> so</c><00:08:20.319><c> the</c><00:08:20.440><c> overall</c><00:08:20.759><c> time</c>

00:08:20.950 --> 00:08:20.960 align:start position:0%
have two branches so the overall time
 

00:08:20.960 --> 00:08:22.029 align:start position:0%
have two branches so the overall time
complexity<00:08:21.360><c> is</c><00:08:21.440><c> going</c><00:08:21.520><c> to</c><00:08:21.599><c> be</c><00:08:21.680><c> something</c><00:08:21.919><c> like</c>

00:08:22.029 --> 00:08:22.039 align:start position:0%
complexity is going to be something like
 

00:08:22.039 --> 00:08:24.350 align:start position:0%
complexity is going to be something like
2<00:08:22.319><c> the^</c><00:08:22.720><c> of</c><00:08:22.879><c> n</c><00:08:23.479><c> that's</c><00:08:23.680><c> how</c><00:08:23.759><c> many</c><00:08:24.000><c> different</c>

00:08:24.350 --> 00:08:24.360 align:start position:0%
2 the^ of n that's how many different
 

00:08:24.360 --> 00:08:26.390 align:start position:0%
2 the^ of n that's how many different
combinations<00:08:25.039><c> we</c><00:08:25.159><c> could</c><00:08:25.319><c> have</c><00:08:25.479><c> ended</c><00:08:25.759><c> up</c><00:08:26.000><c> with</c>

00:08:26.390 --> 00:08:26.400 align:start position:0%
combinations we could have ended up with
 

00:08:26.400 --> 00:08:29.189 align:start position:0%
combinations we could have ended up with
when<00:08:26.560><c> we</c><00:08:27.080><c> add</c><00:08:27.360><c> these</c><00:08:27.639><c> to</c><00:08:27.919><c> the</c><00:08:28.240><c> result</c><00:08:28.960><c> we</c><00:08:29.080><c> are</c>

00:08:29.189 --> 00:08:29.199 align:start position:0%
when we add these to the result we are
 

00:08:29.199 --> 00:08:31.510 align:start position:0%
when we add these to the result we are
going<00:08:29.599><c> to</c><00:08:29.759><c> create</c><00:08:30.080><c> a</c><00:08:30.400><c> copy</c><00:08:30.840><c> of</c><00:08:31.000><c> every</c><00:08:31.199><c> single</c>

00:08:31.510 --> 00:08:31.520 align:start position:0%
going to create a copy of every single
 

00:08:31.520 --> 00:08:33.190 align:start position:0%
going to create a copy of every single
array<00:08:31.879><c> so</c><00:08:32.039><c> I</c><00:08:32.120><c> think</c><00:08:32.320><c> in</c><00:08:32.399><c> the</c><00:08:32.560><c> worst</c><00:08:32.839><c> case</c><00:08:33.080><c> the</c>

00:08:33.190 --> 00:08:33.200 align:start position:0%
array so I think in the worst case the
 

00:08:33.200 --> 00:08:36.469 align:start position:0%
array so I think in the worst case the
time<00:08:33.440><c> complexity</c><00:08:33.919><c> would</c><00:08:34.039><c> be</c><00:08:34.279><c> n</c><00:08:34.680><c> *</c><00:08:35.039><c> 2</c><00:08:35.360><c> ^</c><00:08:35.719><c> of</c><00:08:35.839><c> n</c><00:08:36.240><c> so</c>

00:08:36.469 --> 00:08:36.479 align:start position:0%
time complexity would be n * 2 ^ of n so
 

00:08:36.479 --> 00:08:38.750 align:start position:0%
time complexity would be n * 2 ^ of n so
not<00:08:36.800><c> very</c><00:08:37.080><c> efficient</c><00:08:37.880><c> but</c><00:08:38.120><c> given</c><00:08:38.440><c> that</c><00:08:38.640><c> this</c>

00:08:38.750 --> 00:08:38.760 align:start position:0%
not very efficient but given that this
 

00:08:38.760 --> 00:08:41.190 align:start position:0%
not very efficient but given that this
is<00:08:38.919><c> a</c><00:08:39.120><c> combination</c><00:08:39.839><c> problem</c><00:08:40.360><c> there's</c><00:08:40.640><c> no</c><00:08:40.880><c> way</c>

00:08:41.190 --> 00:08:41.200 align:start position:0%
is a combination problem there's no way
 

00:08:41.200 --> 00:08:42.909 align:start position:0%
is a combination problem there's no way
around<00:08:41.719><c> that</c><00:08:42.000><c> like</c><00:08:42.200><c> the</c><00:08:42.440><c> size</c><00:08:42.680><c> of</c><00:08:42.800><c> the</c>

00:08:42.909 --> 00:08:42.919 align:start position:0%
around that like the size of the
 

00:08:42.919 --> 00:08:44.350 align:start position:0%
around that like the size of the
solution<00:08:43.320><c> in</c><00:08:43.440><c> the</c><00:08:43.599><c> worst</c><00:08:43.880><c> case</c><00:08:44.039><c> is</c><00:08:44.159><c> going</c><00:08:44.240><c> to</c>

00:08:44.350 --> 00:08:44.360 align:start position:0%
solution in the worst case is going to
 

00:08:44.360 --> 00:08:47.509 align:start position:0%
solution in the worst case is going to
be<00:08:44.519><c> n</c><00:08:45.080><c> 2</c><00:08:45.440><c> the</c><00:08:45.560><c> Power</c><00:08:45.760><c> of</c><00:08:45.920><c> n</c><00:08:46.320><c> so</c><00:08:46.839><c> there's</c><00:08:47.080><c> no</c><00:08:47.399><c> like</c>

00:08:47.509 --> 00:08:47.519 align:start position:0%
be n 2 the Power of n so there's no like
 

00:08:47.519 --> 00:08:49.350 align:start position:0%
be n 2 the Power of n so there's no like
shortcut<00:08:48.040><c> in</c><00:08:48.160><c> terms</c><00:08:48.399><c> of</c><00:08:48.640><c> time</c><00:08:48.839><c> for</c><00:08:49.000><c> us</c><00:08:49.160><c> to</c>

00:08:49.350 --> 00:08:49.360 align:start position:0%
shortcut in terms of time for us to
 

00:08:49.360 --> 00:08:51.190 align:start position:0%
shortcut in terms of time for us to
achieve<00:08:49.839><c> the</c><00:08:50.040><c> correct</c><00:08:50.399><c> solution</c><00:08:50.839><c> in</c><00:08:51.000><c> this</c>

00:08:51.190 --> 00:08:51.200 align:start position:0%
achieve the correct solution in this
 

00:08:51.200 --> 00:08:53.190 align:start position:0%
achieve the correct solution in this
case<00:08:51.760><c> so</c><00:08:51.920><c> you</c><00:08:52.040><c> can't</c><00:08:52.279><c> really</c><00:08:52.480><c> apply</c><00:08:52.800><c> dynamic</c>

00:08:53.190 --> 00:08:53.200 align:start position:0%
case so you can't really apply dynamic
 

00:08:53.200 --> 00:08:54.550 align:start position:0%
case so you can't really apply dynamic
programming<00:08:53.720><c> to</c><00:08:53.880><c> this</c><00:08:54.040><c> it's</c><00:08:54.200><c> not</c><00:08:54.320><c> going</c><00:08:54.440><c> to</c>

00:08:54.550 --> 00:08:54.560 align:start position:0%
programming to this it's not going to
 

00:08:54.560 --> 00:08:56.430 align:start position:0%
programming to this it's not going to
help<00:08:54.760><c> you</c><00:08:54.920><c> out</c><00:08:55.360><c> in</c><00:08:55.440><c> terms</c><00:08:55.680><c> of</c><00:08:55.839><c> the</c><00:08:56.000><c> space</c><00:08:56.360><c> if</c>

00:08:56.430 --> 00:08:56.440 align:start position:0%
help you out in terms of the space if
 

00:08:56.440 --> 00:08:58.430 align:start position:0%
help you out in terms of the space if
you<00:08:56.519><c> don't</c><00:08:56.880><c> count</c><00:08:57.200><c> the</c><00:08:57.320><c> output</c><00:08:57.839><c> as</c><00:08:58.079><c> extra</c>

00:08:58.430 --> 00:08:58.440 align:start position:0%
you don't count the output as extra
 

00:08:58.440 --> 00:09:01.150 align:start position:0%
you don't count the output as extra
space<00:08:58.959><c> the</c><00:08:59.120><c> over</c><00:08:59.600><c> all</c><00:09:00.040><c> memory</c><00:09:00.480><c> is</c><00:09:00.640><c> going</c><00:09:00.800><c> to</c><00:09:00.959><c> be</c>

00:09:01.150 --> 00:09:01.160 align:start position:0%
space the over all memory is going to be
 

00:09:01.160 --> 00:09:04.350 align:start position:0%
space the over all memory is going to be
Big<00:09:01.440><c> O</c><00:09:01.680><c> of</c><00:09:01.880><c> n</c><00:09:02.320><c> for</c><00:09:02.600><c> an</c><00:09:02.800><c> individual</c><00:09:03.399><c> combination</c>

00:09:04.350 --> 00:09:04.360 align:start position:0%
Big O of n for an individual combination
 

00:09:04.360 --> 00:09:07.269 align:start position:0%
Big O of n for an individual combination
or<00:09:04.880><c> for</c><00:09:05.240><c> like</c><00:09:05.399><c> the</c><00:09:05.640><c> size</c><00:09:06.279><c> of</c><00:09:06.600><c> the</c><00:09:06.760><c> recursive</c>

00:09:07.269 --> 00:09:07.279 align:start position:0%
or for like the size of the recursive
 

00:09:07.279 --> 00:09:10.069 align:start position:0%
or for like the size of the recursive
call<00:09:07.640><c> stack</c><00:09:08.399><c> so</c><00:09:08.880><c> I'm</c><00:09:09.000><c> going</c><00:09:09.079><c> to</c><00:09:09.320><c> declare</c><00:09:09.880><c> the</c>

00:09:10.069 --> 00:09:10.079 align:start position:0%
call stack so I'm going to declare the
 

00:09:10.079 --> 00:09:11.990 align:start position:0%
call stack so I'm going to declare the
result<00:09:10.560><c> it's</c><00:09:10.680><c> going</c><00:09:10.800><c> to</c><00:09:10.920><c> be</c><00:09:11.040><c> an</c><00:09:11.200><c> array</c><00:09:11.640><c> of</c><00:09:11.800><c> the</c>

00:09:11.990 --> 00:09:12.000 align:start position:0%
result it's going to be an array of the
 

00:09:12.000 --> 00:09:13.670 align:start position:0%
result it's going to be an array of the
combinations<00:09:12.720><c> we</c><00:09:12.880><c> know</c><00:09:13.120><c> that</c><00:09:13.360><c> that's</c><00:09:13.560><c> what</c>

00:09:13.670 --> 00:09:13.680 align:start position:0%
combinations we know that that's what
 

00:09:13.680 --> 00:09:15.790 align:start position:0%
combinations we know that that's what
we're<00:09:13.880><c> ultimately</c><00:09:14.399><c> going</c><00:09:14.480><c> to</c><00:09:14.839><c> return</c><00:09:15.560><c> down</c>

00:09:15.790 --> 00:09:15.800 align:start position:0%
we're ultimately going to return down
 

00:09:15.800 --> 00:09:17.829 align:start position:0%
we're ultimately going to return down
here<00:09:16.079><c> so</c><00:09:16.240><c> I'm</c><00:09:16.399><c> just</c><00:09:16.519><c> going</c><00:09:16.600><c> to</c><00:09:16.839><c> put</c><00:09:17.079><c> that</c><00:09:17.320><c> there</c>

00:09:17.829 --> 00:09:17.839 align:start position:0%
here so I'm just going to put that there
 

00:09:17.839 --> 00:09:20.509 align:start position:0%
here so I'm just going to put that there
now<00:09:18.040><c> we</c><00:09:18.200><c> are</c><00:09:18.600><c> going</c><00:09:18.720><c> to</c><00:09:19.320><c> have</c><00:09:19.680><c> a</c><00:09:19.959><c> recursive</c>

00:09:20.509 --> 00:09:20.519 align:start position:0%
now we are going to have a recursive
 

00:09:20.519 --> 00:09:22.310 align:start position:0%
now we are going to have a recursive
function<00:09:20.920><c> you</c><00:09:21.000><c> could</c><00:09:21.160><c> call</c><00:09:21.320><c> it</c><00:09:21.480><c> DFS</c><00:09:22.079><c> or</c>

00:09:22.310 --> 00:09:22.320 align:start position:0%
function you could call it DFS or
 

00:09:22.320 --> 00:09:24.470 align:start position:0%
function you could call it DFS or
backtrack<00:09:22.880><c> I</c><00:09:22.959><c> guess</c><00:09:23.079><c> I'll</c><00:09:23.279><c> call</c><00:09:23.480><c> it</c><00:09:23.640><c> DFS</c><00:09:24.360><c> it</c>

00:09:24.470 --> 00:09:24.480 align:start position:0%
backtrack I guess I'll call it DFS it
 

00:09:24.480 --> 00:09:26.110 align:start position:0%
backtrack I guess I'll call it DFS it
doesn't<00:09:24.760><c> really</c><00:09:25.000><c> matter</c><00:09:25.680><c> we</c><00:09:25.800><c> know</c><00:09:26.000><c> that</c>

00:09:26.110 --> 00:09:26.120 align:start position:0%
doesn't really matter we know that
 

00:09:26.120 --> 00:09:27.430 align:start position:0%
doesn't really matter we know that
there's<00:09:26.320><c> a</c><00:09:26.440><c> few</c><00:09:26.640><c> things</c><00:09:26.839><c> we're</c><00:09:27.040><c> going</c><00:09:27.120><c> to</c><00:09:27.320><c> have</c>

00:09:27.430 --> 00:09:27.440 align:start position:0%
there's a few things we're going to have
 

00:09:27.440 --> 00:09:29.630 align:start position:0%
there's a few things we're going to have
to<00:09:27.600><c> keep</c><00:09:27.839><c> track</c><00:09:28.120><c> of</c><00:09:28.560><c> one</c><00:09:28.920><c> the</c><00:09:29.079><c> current</c>

00:09:29.630 --> 00:09:29.640 align:start position:0%
to keep track of one the current
 

00:09:29.640 --> 00:09:31.910 align:start position:0%
to keep track of one the current
position<00:09:30.000><c> that</c><00:09:30.120><c> we're</c><00:09:30.399><c> at</c><00:09:30.760><c> in</c><00:09:31.120><c> the</c><00:09:31.320><c> candidates</c>

00:09:31.910 --> 00:09:31.920 align:start position:0%
position that we're at in the candidates
 

00:09:31.920 --> 00:09:34.949 align:start position:0%
position that we're at in the candidates
array<00:09:32.519><c> two</c><00:09:33.040><c> is</c><00:09:33.279><c> the</c><00:09:33.560><c> current</c><00:09:34.200><c> combination</c>

00:09:34.949 --> 00:09:34.959 align:start position:0%
array two is the current combination
 

00:09:34.959 --> 00:09:37.150 align:start position:0%
array two is the current combination
I'll<00:09:35.160><c> just</c><00:09:35.360><c> call</c><00:09:35.600><c> that</c><00:09:35.880><c> curve</c><00:09:36.240><c> for</c><00:09:36.480><c> short</c><00:09:37.000><c> so</c>

00:09:37.150 --> 00:09:37.160 align:start position:0%
I'll just call that curve for short so
 

00:09:37.160 --> 00:09:38.990 align:start position:0%
I'll just call that curve for short so
those<00:09:37.360><c> are</c><00:09:37.560><c> the</c><00:09:37.680><c> elements</c><00:09:38.120><c> in</c><00:09:38.279><c> our</c><00:09:38.600><c> current</c>

00:09:38.990 --> 00:09:39.000 align:start position:0%
those are the elements in our current
 

00:09:39.000 --> 00:09:40.710 align:start position:0%
those are the elements in our current
combination<00:09:39.640><c> and</c><00:09:39.760><c> the</c><00:09:39.920><c> third</c><00:09:40.200><c> variable</c><00:09:40.600><c> is</c>

00:09:40.710 --> 00:09:40.720 align:start position:0%
combination and the third variable is
 

00:09:40.720 --> 00:09:42.949 align:start position:0%
combination and the third variable is
going<00:09:40.880><c> to</c><00:09:41.000><c> be</c><00:09:41.160><c> the</c><00:09:41.360><c> sum</c><00:09:41.760><c> or</c><00:09:41.959><c> the</c><00:09:42.160><c> total</c><00:09:42.720><c> of</c>

00:09:42.949 --> 00:09:42.959 align:start position:0%
going to be the sum or the total of
 

00:09:42.959 --> 00:09:44.630 align:start position:0%
going to be the sum or the total of
those<00:09:43.200><c> current</c><00:09:43.560><c> elements</c><00:09:44.000><c> so</c><00:09:44.160><c> that</c><00:09:44.279><c> we</c><00:09:44.399><c> can</c>

00:09:44.630 --> 00:09:44.640 align:start position:0%
those current elements so that we can
 

00:09:44.640 --> 00:09:46.829 align:start position:0%
those current elements so that we can
compare<00:09:45.440><c> once</c><00:09:45.640><c> the</c><00:09:45.760><c> total</c><00:09:46.160><c> has</c><00:09:46.320><c> reached</c><00:09:46.680><c> the</c>

00:09:46.829 --> 00:09:46.839 align:start position:0%
compare once the total has reached the
 

00:09:46.839 --> 00:09:49.630 align:start position:0%
compare once the total has reached the
target<00:09:47.200><c> amount</c><00:09:47.600><c> or</c><00:09:48.040><c> the</c><00:09:48.200><c> total</c><00:09:48.560><c> has</c><00:09:48.880><c> exceeded</c>

00:09:49.630 --> 00:09:49.640 align:start position:0%
target amount or the total has exceeded
 

00:09:49.640 --> 00:09:51.990 align:start position:0%
target amount or the total has exceeded
the<00:09:49.800><c> target</c><00:09:50.160><c> amount</c><00:09:50.560><c> so</c><00:09:50.880><c> before</c><00:09:51.120><c> you</c><00:09:51.360><c> even</c><00:09:51.760><c> get</c>

00:09:51.990 --> 00:09:52.000 align:start position:0%
the target amount so before you even get
 

00:09:52.000 --> 00:09:54.710 align:start position:0%
the target amount so before you even get
into<00:09:52.519><c> this</c><00:09:52.720><c> recursion</c><00:09:53.640><c> remember</c><00:09:54.320><c> that</c><00:09:54.480><c> our</c>

00:09:54.710 --> 00:09:54.720 align:start position:0%
into this recursion remember that our
 

00:09:54.720 --> 00:09:56.829 align:start position:0%
into this recursion remember that our
solution<00:09:55.320><c> only</c><00:09:55.680><c> is</c><00:09:55.839><c> going</c><00:09:56.040><c> to</c><00:09:56.279><c> eliminate</c>

00:09:56.829 --> 00:09:56.839 align:start position:0%
solution only is going to eliminate
 

00:09:56.839 --> 00:09:59.509 align:start position:0%
solution only is going to eliminate
duplicates<00:09:57.680><c> if</c><00:09:57.839><c> we</c><00:09:58.000><c> sort</c><00:09:58.600><c> the</c><00:09:58.760><c> input</c><00:09:59.079><c> array</c>

00:09:59.509 --> 00:09:59.519 align:start position:0%
duplicates if we sort the input array
 

00:09:59.519 --> 00:10:01.150 align:start position:0%
duplicates if we sort the input array
that's<00:09:59.640><c> the</c><00:09:59.760><c> easiest</c><00:10:00.120><c> way</c><00:10:00.240><c> to</c><00:10:00.360><c> do</c><00:10:00.519><c> it</c><00:10:00.680><c> so</c><00:10:00.959><c> make</c>

00:10:01.150 --> 00:10:01.160 align:start position:0%
that's the easiest way to do it so make
 

00:10:01.160 --> 00:10:04.430 align:start position:0%
that's the easiest way to do it so make
sure<00:10:01.640><c> to</c><00:10:01.959><c> call</c><00:10:02.519><c> sort</c><00:10:03.079><c> on</c><00:10:03.480><c> the</c><00:10:03.640><c> input</c><00:10:03.959><c> array</c><00:10:04.320><c> in</c>

00:10:04.430 --> 00:10:04.440 align:start position:0%
sure to call sort on the input array in
 

00:10:04.440 --> 00:10:06.230 align:start position:0%
sure to call sort on the input array in
your<00:10:04.680><c> language</c><00:10:05.000><c> of</c><00:10:05.200><c> choice</c><00:10:05.560><c> it's</c><00:10:05.720><c> pretty</c><00:10:05.959><c> easy</c>

00:10:06.230 --> 00:10:06.240 align:start position:0%
your language of choice it's pretty easy
 

00:10:06.240 --> 00:10:08.269 align:start position:0%
your language of choice it's pretty easy
in<00:10:06.440><c> Python</c><00:10:06.839><c> so</c><00:10:07.000><c> I</c><00:10:07.079><c> would</c><00:10:07.240><c> highly</c><00:10:07.640><c> recommend</c>

00:10:08.269 --> 00:10:08.279 align:start position:0%
in Python so I would highly recommend
 

00:10:08.279 --> 00:10:10.470 align:start position:0%
in Python so I would highly recommend
using<00:10:08.720><c> python</c><00:10:09.480><c> I</c><00:10:09.600><c> have</c><00:10:09.880><c> a</c><00:10:09.959><c> couple</c><00:10:10.279><c> good</c>

00:10:10.470 --> 00:10:10.480 align:start position:0%
using python I have a couple good
 

00:10:10.480 --> 00:10:12.550 align:start position:0%
using python I have a couple good
courses<00:10:11.120><c> for</c><00:10:11.399><c> that</c><00:10:11.680><c> python</c><00:10:12.000><c> for</c><00:10:12.200><c> beginners</c>

00:10:12.550 --> 00:10:12.560 align:start position:0%
courses for that python for beginners
 

00:10:12.560 --> 00:10:14.550 align:start position:0%
courses for that python for beginners
and<00:10:12.760><c> python</c><00:10:13.079><c> for</c><00:10:13.240><c> coding</c><00:10:13.480><c> interviews</c><00:10:14.320><c> now</c>

00:10:14.550 --> 00:10:14.560 align:start position:0%
and python for coding interviews now
 

00:10:14.560 --> 00:10:16.269 align:start position:0%
and python for coding interviews now
let's<00:10:14.800><c> start</c><00:10:15.040><c> with</c><00:10:15.200><c> the</c><00:10:15.360><c> base</c><00:10:15.720><c> cases</c><00:10:16.040><c> they're</c>

00:10:16.269 --> 00:10:16.279 align:start position:0%
let's start with the base cases they're
 

00:10:16.279 --> 00:10:19.069 align:start position:0%
let's start with the base cases they're
pretty<00:10:16.560><c> simple</c><00:10:17.000><c> one</c><00:10:17.560><c> we</c><00:10:17.800><c> either</c><00:10:18.440><c> reach</c><00:10:18.920><c> the</c>

00:10:19.069 --> 00:10:19.079 align:start position:0%
pretty simple one we either reach the
 

00:10:19.079 --> 00:10:21.430 align:start position:0%
pretty simple one we either reach the
target<00:10:19.440><c> amount</c><00:10:19.760><c> total</c><00:10:20.200><c> is</c><00:10:20.440><c> equal</c><00:10:21.000><c> to</c><00:10:21.279><c> the</c>

00:10:21.430 --> 00:10:21.440 align:start position:0%
target amount total is equal to the
 

00:10:21.440 --> 00:10:25.430 align:start position:0%
target amount total is equal to the
Target<00:10:21.760><c> amount</c><00:10:22.320><c> two</c><00:10:23.120><c> is</c><00:10:23.800><c> the</c><00:10:23.959><c> total</c><00:10:24.640><c> exceeds</c>

00:10:25.430 --> 00:10:25.440 align:start position:0%
Target amount two is the total exceeds
 

00:10:25.440 --> 00:10:27.230 align:start position:0%
Target amount two is the total exceeds
the<00:10:25.600><c> target</c><00:10:25.959><c> amount</c><00:10:26.320><c> there's</c><00:10:26.600><c> actually</c><00:10:27.000><c> one</c>

00:10:27.230 --> 00:10:27.240 align:start position:0%
the target amount there's actually one
 

00:10:27.240 --> 00:10:29.310 align:start position:0%
the target amount there's actually one
more<00:10:27.519><c> base</c><00:10:27.920><c> case</c><00:10:28.240><c> though</c><00:10:28.480><c> and</c><00:10:28.680><c> that's</c><00:10:29.079><c> what</c>

00:10:29.310 --> 00:10:29.320 align:start position:0%
more base case though and that's what
 

00:10:29.320 --> 00:10:31.870 align:start position:0%
more base case though and that's what
what<00:10:29.440><c> if</c><00:10:29.600><c> we</c><00:10:30.040><c> run</c><00:10:30.399><c> out</c><00:10:30.640><c> of</c><00:10:30.920><c> candidates</c><00:10:31.720><c> that</c>

00:10:31.870 --> 00:10:31.880 align:start position:0%
what if we run out of candidates that
 

00:10:31.880 --> 00:10:34.350 align:start position:0%
what if we run out of candidates that
would<00:10:32.040><c> mean</c><00:10:32.360><c> our</c><00:10:32.680><c> ey</c><00:10:32.959><c> pointer</c><00:10:33.720><c> is</c><00:10:34.040><c> out</c><00:10:34.200><c> of</c>

00:10:34.350 --> 00:10:34.360 align:start position:0%
would mean our ey pointer is out of
 

00:10:34.360 --> 00:10:38.870 align:start position:0%
would mean our ey pointer is out of
bounds<00:10:34.880><c> so</c><00:10:35.279><c> either</c><00:10:35.720><c> this</c><00:10:36.000><c> is</c><00:10:36.240><c> true</c><00:10:36.880><c> or</c><00:10:37.560><c> I</c><00:10:38.399><c> is</c>

00:10:38.870 --> 00:10:38.880 align:start position:0%
bounds so either this is true or I is
 

00:10:38.880 --> 00:10:40.509 align:start position:0%
bounds so either this is true or I is
greater<00:10:39.240><c> than</c><00:10:39.360><c> or</c><00:10:39.519><c> equal</c><00:10:39.760><c> to</c><00:10:39.920><c> candidates</c><00:10:40.399><c> and</c>

00:10:40.509 --> 00:10:40.519 align:start position:0%
greater than or equal to candidates and
 

00:10:40.519 --> 00:10:42.509 align:start position:0%
greater than or equal to candidates and
it<00:10:40.680><c> will</c><00:10:40.920><c> usually</c><00:10:41.279><c> just</c><00:10:41.440><c> be</c><00:10:41.800><c> equal</c><00:10:42.079><c> to</c><00:10:42.399><c> the</c>

00:10:42.509 --> 00:10:42.519 align:start position:0%
it will usually just be equal to the
 

00:10:42.519 --> 00:10:44.230 align:start position:0%
it will usually just be equal to the
length<00:10:42.760><c> of</c><00:10:42.959><c> candidates</c><00:10:43.440><c> so</c><00:10:43.560><c> we</c><00:10:43.680><c> can</c><00:10:43.839><c> just</c><00:10:44.000><c> put</c>

00:10:44.230 --> 00:10:44.240 align:start position:0%
length of candidates so we can just put
 

00:10:44.240 --> 00:10:45.990 align:start position:0%
length of candidates so we can just put
that<00:10:44.480><c> there</c><00:10:44.920><c> so</c><00:10:45.160><c> these</c><00:10:45.320><c> are</c><00:10:45.480><c> the</c><00:10:45.560><c> two</c><00:10:45.720><c> base</c>

00:10:45.990 --> 00:10:46.000 align:start position:0%
that there so these are the two base
 

00:10:46.000 --> 00:10:47.750 align:start position:0%
that there so these are the two base
cases<00:10:46.399><c> the</c><00:10:46.519><c> second</c><00:10:46.720><c> one</c><00:10:46.880><c> is</c><00:10:47.040><c> simple</c><00:10:47.480><c> that's</c>

00:10:47.750 --> 00:10:47.760 align:start position:0%
cases the second one is simple that's
 

00:10:47.760 --> 00:10:50.110 align:start position:0%
cases the second one is simple that's
when<00:10:48.040><c> we</c><00:10:48.200><c> just</c><00:10:48.560><c> return</c><00:10:49.120><c> we</c><00:10:49.240><c> do</c><00:10:49.399><c> not</c><00:10:49.680><c> have</c><00:10:49.920><c> a</c>

00:10:50.110 --> 00:10:50.120 align:start position:0%
when we just return we do not have a
 

00:10:50.120 --> 00:10:52.269 align:start position:0%
when we just return we do not have a
valid<00:10:50.519><c> combination</c><00:10:51.079><c> and</c><00:10:51.200><c> we</c><00:10:51.360><c> never</c><00:10:51.600><c> will</c><00:10:52.040><c> at</c>

00:10:52.269 --> 00:10:52.279 align:start position:0%
valid combination and we never will at
 

00:10:52.279 --> 00:10:54.430 align:start position:0%
valid combination and we never will at
this<00:10:52.480><c> point</c><00:10:52.959><c> this</c><00:10:53.079><c> is</c><00:10:53.360><c> where</c><00:10:53.519><c> we</c><00:10:53.639><c> do</c><00:10:54.000><c> have</c><00:10:54.240><c> a</c>

00:10:54.430 --> 00:10:54.440 align:start position:0%
this point this is where we do have a
 

00:10:54.440 --> 00:10:56.190 align:start position:0%
this point this is where we do have a
valid<00:10:54.760><c> combination</c><00:10:55.240><c> so</c><00:10:55.399><c> what</c><00:10:55.480><c> do</c><00:10:55.639><c> we</c><00:10:55.760><c> do</c><00:10:56.040><c> well</c>

00:10:56.190 --> 00:10:56.200 align:start position:0%
valid combination so what do we do well
 

00:10:56.200 --> 00:10:57.949 align:start position:0%
valid combination so what do we do well
clearly<00:10:56.519><c> we</c><00:10:56.639><c> have</c><00:10:56.760><c> to</c><00:10:56.880><c> update</c><00:10:57.240><c> the</c><00:10:57.399><c> result</c><00:10:57.800><c> so</c>

00:10:57.949 --> 00:10:57.959 align:start position:0%
clearly we have to update the result so
 

00:10:57.959 --> 00:11:00.750 align:start position:0%
clearly we have to update the result so
I'm<00:10:58.040><c> going</c><00:10:58.120><c> to</c><00:10:58.279><c> say</c><00:10:58.560><c> result.</c><00:10:59.440><c> pen</c><00:10:59.639><c> to</c><00:10:59.839><c> it</c><00:11:00.360><c> not</c>

00:11:00.750 --> 00:11:00.760 align:start position:0%
I'm going to say result. pen to it not
 

00:11:00.760 --> 00:11:02.550 align:start position:0%
I'm going to say result. pen to it not
just<00:11:01.040><c> the</c><00:11:01.200><c> current</c><00:11:01.639><c> combination</c><00:11:02.279><c> cuz</c><00:11:02.399><c> that's</c>

00:11:02.550 --> 00:11:02.560 align:start position:0%
just the current combination cuz that's
 

00:11:02.560 --> 00:11:03.829 align:start position:0%
just the current combination cuz that's
going<00:11:02.680><c> to</c><00:11:02.760><c> be</c><00:11:02.920><c> a</c><00:11:03.079><c> variable</c><00:11:03.519><c> that</c><00:11:03.639><c> we're</c>

00:11:03.829 --> 00:11:03.839 align:start position:0%
going to be a variable that we're
 

00:11:03.839 --> 00:11:06.470 align:start position:0%
going to be a variable that we're
passing<00:11:04.200><c> around</c><00:11:04.600><c> by</c><00:11:04.880><c> reference</c><00:11:05.760><c> so</c><00:11:06.240><c> we</c><00:11:06.360><c> want</c>

00:11:06.470 --> 00:11:06.480 align:start position:0%
passing around by reference so we want
 

00:11:06.480 --> 00:11:08.430 align:start position:0%
passing around by reference so we want
to<00:11:06.680><c> actually</c><00:11:06.959><c> create</c><00:11:07.279><c> a</c><00:11:07.480><c> copy</c><00:11:07.800><c> of</c><00:11:08.000><c> this</c><00:11:08.279><c> one</c>

00:11:08.430 --> 00:11:08.440 align:start position:0%
to actually create a copy of this one
 

00:11:08.440 --> 00:11:11.069 align:start position:0%
to actually create a copy of this one
way<00:11:08.560><c> to</c><00:11:08.720><c> do</c><00:11:08.880><c> that</c><00:11:09.000><c> in</c><00:11:09.200><c> Python</c><00:11:09.680><c> is</c><00:11:09.880><c> like</c><00:11:10.160><c> this</c><00:11:10.600><c> do</c>

00:11:11.069 --> 00:11:11.079 align:start position:0%
way to do that in Python is like this do
 

00:11:11.079 --> 00:11:13.269 align:start position:0%
way to do that in Python is like this do
copy<00:11:11.760><c> again</c><00:11:12.079><c> python</c><00:11:12.399><c> is</c><00:11:12.519><c> such</c><00:11:12.680><c> a</c><00:11:12.839><c> readable</c>

00:11:13.269 --> 00:11:13.279 align:start position:0%
copy again python is such a readable
 

00:11:13.279 --> 00:11:14.949 align:start position:0%
copy again python is such a readable
language<00:11:13.680><c> such</c><00:11:13.800><c> an</c><00:11:13.959><c> easy</c><00:11:14.240><c> language</c><00:11:14.560><c> to</c><00:11:14.720><c> use</c>

00:11:14.949 --> 00:11:14.959 align:start position:0%
language such an easy language to use
 

00:11:14.959 --> 00:11:17.069 align:start position:0%
language such an easy language to use
isn't<00:11:15.160><c> it</c><00:11:15.600><c> now</c><00:11:15.839><c> don't</c><00:11:16.000><c> forget</c><00:11:16.600><c> within</c><00:11:16.920><c> this</c>

00:11:17.069 --> 00:11:17.079 align:start position:0%
isn't it now don't forget within this
 

00:11:17.079 --> 00:11:19.470 align:start position:0%
isn't it now don't forget within this
base<00:11:17.480><c> case</c><00:11:17.720><c> to</c><00:11:18.200><c> return</c><00:11:18.760><c> I</c><00:11:18.800><c> mean</c><00:11:19.040><c> I</c><00:11:19.160><c> guess</c><00:11:19.360><c> if</c>

00:11:19.470 --> 00:11:19.480 align:start position:0%
base case to return I mean I guess if
 

00:11:19.480 --> 00:11:21.430 align:start position:0%
base case to return I mean I guess if
you<00:11:19.639><c> didn't</c><00:11:19.920><c> have</c><00:11:20.079><c> the</c><00:11:20.360><c> return</c><00:11:20.959><c> it</c><00:11:21.160><c> probably</c>

00:11:21.430 --> 00:11:21.440 align:start position:0%
you didn't have the return it probably
 

00:11:21.440 --> 00:11:23.870 align:start position:0%
you didn't have the return it probably
wouldn't<00:11:21.800><c> hurt</c><00:11:22.399><c> but</c><00:11:22.839><c> given</c><00:11:23.200><c> that</c><00:11:23.639><c> all</c>

00:11:23.870 --> 00:11:23.880 align:start position:0%
wouldn't hurt but given that all
 

00:11:23.880 --> 00:11:25.829 align:start position:0%
wouldn't hurt but given that all
elements<00:11:24.279><c> in</c><00:11:24.480><c> candidates</c><00:11:24.880><c> are</c><00:11:25.160><c> positive</c><00:11:25.680><c> if</c>

00:11:25.829 --> 00:11:25.839 align:start position:0%
elements in candidates are positive if
 

00:11:25.839 --> 00:11:27.710 align:start position:0%
elements in candidates are positive if
we've<00:11:26.160><c> reached</c><00:11:26.519><c> the</c><00:11:26.639><c> total</c><00:11:26.959><c> sum</c><00:11:27.360><c> everything</c>

00:11:27.710 --> 00:11:27.720 align:start position:0%
we've reached the total sum everything
 

00:11:27.720 --> 00:11:29.430 align:start position:0%
we've reached the total sum everything
after<00:11:28.040><c> this</c><00:11:28.240><c> is</c><00:11:28.399><c> just</c><00:11:28.519><c> going</c><00:11:28.639><c> to</c><00:11:28.760><c> increase</c>

00:11:29.430 --> 00:11:29.440 align:start position:0%
after this is just going to increase
 

00:11:29.440 --> 00:11:31.150 align:start position:0%
after this is just going to increase
that<00:11:29.680><c> so</c><00:11:30.200><c> might</c><00:11:30.360><c> as</c><00:11:30.480><c> well</c><00:11:30.639><c> just</c><00:11:30.760><c> put</c><00:11:30.920><c> the</c>

00:11:31.150 --> 00:11:31.160 align:start position:0%
that so might as well just put the
 

00:11:31.160 --> 00:11:33.590 align:start position:0%
that so might as well just put the
return<00:11:31.440><c> here</c><00:11:31.680><c> early</c><00:11:32.360><c> now</c><00:11:32.560><c> for</c><00:11:32.839><c> the</c><00:11:33.040><c> recursive</c>

00:11:33.590 --> 00:11:33.600 align:start position:0%
return here early now for the recursive
 

00:11:33.600 --> 00:11:35.590 align:start position:0%
return here early now for the recursive
case<00:11:34.200><c> and</c><00:11:34.600><c> this</c><00:11:34.800><c> is</c><00:11:35.040><c> probably</c><00:11:35.240><c> going</c><00:11:35.360><c> to</c><00:11:35.480><c> be</c>

00:11:35.590 --> 00:11:35.600 align:start position:0%
case and this is probably going to be
 

00:11:35.600 --> 00:11:37.190 align:start position:0%
case and this is probably going to be
the<00:11:35.760><c> complicated</c><00:11:36.279><c> part</c><00:11:36.480><c> so</c><00:11:36.639><c> let</c><00:11:36.760><c> me</c><00:11:36.920><c> go</c><00:11:37.079><c> a</c>

00:11:37.190 --> 00:11:37.200 align:start position:0%
the complicated part so let me go a
 

00:11:37.200 --> 00:11:40.870 align:start position:0%
the complicated part so let me go a
little<00:11:37.440><c> bit</c><00:11:37.600><c> slow</c><00:11:38.360><c> one</c><00:11:39.040><c> is</c><00:11:39.440><c> where</c><00:11:39.639><c> we</c><00:11:39.920><c> include</c>

00:11:40.870 --> 00:11:40.880 align:start position:0%
little bit slow one is where we include
 

00:11:40.880 --> 00:11:43.110 align:start position:0%
little bit slow one is where we include
the<00:11:41.120><c> element</c><00:11:41.600><c> at</c><00:11:41.839><c> indexi</c><00:11:42.519><c> let's</c><00:11:42.680><c> call</c><00:11:42.920><c> that</c>

00:11:43.110 --> 00:11:43.120 align:start position:0%
the element at indexi let's call that
 

00:11:43.120 --> 00:11:45.150 align:start position:0%
the element at indexi let's call that
candidates<00:11:43.560><c> at</c><00:11:43.720><c> indexi</c><00:11:44.519><c> and</c><00:11:44.639><c> the</c><00:11:44.760><c> other</c><00:11:45.000><c> is</c>

00:11:45.150 --> 00:11:45.160 align:start position:0%
candidates at indexi and the other is
 

00:11:45.160 --> 00:11:48.910 align:start position:0%
candidates at indexi and the other is
where<00:11:45.399><c> we</c><00:11:45.560><c> skip</c><00:11:46.279><c> candidates</c><00:11:47.120><c> at</c><00:11:47.480><c> index</c><00:11:47.959><c> I</c><00:11:48.440><c> so</c>

00:11:48.910 --> 00:11:48.920 align:start position:0%
where we skip candidates at index I so
 

00:11:48.920 --> 00:11:50.710 align:start position:0%
where we skip candidates at index I so
this<00:11:49.240><c> first</c><00:11:49.560><c> case</c><00:11:49.760><c> is</c><00:11:49.959><c> pretty</c><00:11:50.200><c> simple</c><00:11:50.519><c> it's</c>

00:11:50.710 --> 00:11:50.720 align:start position:0%
this first case is pretty simple it's
 

00:11:50.720 --> 00:11:52.829 align:start position:0%
this first case is pretty simple it's
similar<00:11:51.079><c> to</c><00:11:51.399><c> combination</c><00:11:51.880><c> some</c><00:11:52.200><c> one</c><00:11:52.760><c> what</c>

00:11:52.829 --> 00:11:52.839 align:start position:0%
similar to combination some one what
 

00:11:52.839 --> 00:11:55.110 align:start position:0%
similar to combination some one what
we're<00:11:53.000><c> going</c><00:11:53.079><c> to</c><00:11:53.279><c> do</c><00:11:53.680><c> is</c><00:11:54.000><c> update</c><00:11:54.440><c> our</c><00:11:54.720><c> current</c>

00:11:55.110 --> 00:11:55.120 align:start position:0%
we're going to do is update our current
 

00:11:55.120 --> 00:11:57.030 align:start position:0%
we're going to do is update our current
elements<00:11:55.639><c> we're</c><00:11:55.800><c> going</c><00:11:55.880><c> to</c><00:11:56.120><c> include</c><00:11:56.880><c> the</c>

00:11:57.030 --> 00:11:57.040 align:start position:0%
elements we're going to include the
 

00:11:57.040 --> 00:11:59.470 align:start position:0%
elements we're going to include the
element<00:11:57.720><c> at</c><00:11:57.920><c> index</c><00:11:58.320><c> I</c><00:11:58.800><c> and</c><00:11:58.959><c> then</c><00:11:59.279><c> we're</c><00:11:59.399><c> going</c>

00:11:59.470 --> 00:11:59.480 align:start position:0%
element at index I and then we're going
 

00:11:59.480 --> 00:12:03.150 align:start position:0%
element at index I and then we're going
to<00:11:59.560><c> run</c><00:11:59.839><c> DFS</c><00:12:00.839><c> now</c><00:12:01.279><c> for</c><00:12:01.519><c> the</c><00:12:01.760><c> index</c><00:12:02.480><c> we're</c><00:12:02.800><c> not</c>

00:12:03.150 --> 00:12:03.160 align:start position:0%
to run DFS now for the index we're not
 

00:12:03.160 --> 00:12:05.590 align:start position:0%
to run DFS now for the index we're not
going<00:12:03.279><c> to</c><00:12:03.519><c> pass</c><00:12:03.920><c> index</c><00:12:04.360><c> I</c><00:12:04.959><c> because</c><00:12:05.279><c> that</c><00:12:05.440><c> would</c>

00:12:05.590 --> 00:12:05.600 align:start position:0%
going to pass index I because that would
 

00:12:05.600 --> 00:12:08.350 align:start position:0%
going to pass index I because that would
mean<00:12:05.920><c> we're</c><00:12:06.200><c> able</c><00:12:06.480><c> to</c><00:12:06.800><c> reuse</c><00:12:07.639><c> the</c><00:12:07.800><c> element</c><00:12:08.160><c> at</c>

00:12:08.350 --> 00:12:08.360 align:start position:0%
mean we're able to reuse the element at
 

00:12:08.360 --> 00:12:10.829 align:start position:0%
mean we're able to reuse the element at
index<00:12:08.760><c> I</c><00:12:09.320><c> but</c><00:12:09.560><c> in</c><00:12:09.760><c> this</c><00:12:10.000><c> problem</c><00:12:10.320><c> we're</c><00:12:10.560><c> not</c>

00:12:10.829 --> 00:12:10.839 align:start position:0%
index I but in this problem we're not
 

00:12:10.839 --> 00:12:13.110 align:start position:0%
index I but in this problem we're not
allowed<00:12:11.200><c> to</c><00:12:11.480><c> reuse</c><00:12:11.959><c> the</c><00:12:12.120><c> same</c><00:12:12.360><c> element</c><00:12:12.720><c> so</c><00:12:12.920><c> we</c>

00:12:13.110 --> 00:12:13.120 align:start position:0%
allowed to reuse the same element so we
 

00:12:13.120 --> 00:12:14.990 align:start position:0%
allowed to reuse the same element so we
have<00:12:13.240><c> to</c><00:12:13.440><c> put</c><00:12:13.560><c> a</c><00:12:13.800><c> plus</c><00:12:14.000><c> one</c><00:12:14.320><c> here</c><00:12:14.519><c> we</c><00:12:14.680><c> cannot</c>

00:12:14.990 --> 00:12:15.000 align:start position:0%
have to put a plus one here we cannot
 

00:12:15.000 --> 00:12:17.710 align:start position:0%
have to put a plus one here we cannot
reuse<00:12:15.639><c> candidates</c><00:12:16.079><c> at</c><00:12:16.279><c> indexi</c><00:12:17.240><c> second</c><00:12:17.600><c> we're</c>

00:12:17.710 --> 00:12:17.720 align:start position:0%
reuse candidates at indexi second we're
 

00:12:17.720 --> 00:12:19.790 align:start position:0%
reuse candidates at indexi second we're
going<00:12:17.839><c> to</c><00:12:18.040><c> pass</c><00:12:18.240><c> in</c><00:12:18.600><c> the</c><00:12:18.760><c> current</c><00:12:19.160><c> combination</c>

00:12:19.790 --> 00:12:19.800 align:start position:0%
going to pass in the current combination
 

00:12:19.800 --> 00:12:21.870 align:start position:0%
going to pass in the current combination
that's<00:12:20.040><c> pretty</c><00:12:20.360><c> straightforward</c><00:12:21.360><c> and</c><00:12:21.600><c> third</c>

00:12:21.870 --> 00:12:21.880 align:start position:0%
that's pretty straightforward and third
 

00:12:21.880 --> 00:12:24.069 align:start position:0%
that's pretty straightforward and third
we're<00:12:22.040><c> going</c><00:12:22.120><c> to</c><00:12:22.320><c> pass</c><00:12:22.519><c> in</c><00:12:22.800><c> the</c><00:12:22.959><c> new</c><00:12:23.320><c> Total</c><00:12:23.920><c> the</c>

00:12:24.069 --> 00:12:24.079 align:start position:0%
we're going to pass in the new Total the
 

00:12:24.079 --> 00:12:26.310 align:start position:0%
we're going to pass in the new Total the
total<00:12:24.480><c> is</c><00:12:24.639><c> just</c><00:12:24.800><c> going</c><00:12:24.920><c> to</c><00:12:25.079><c> be</c><00:12:25.600><c> the</c><00:12:25.839><c> previous</c>

00:12:26.310 --> 00:12:26.320 align:start position:0%
total is just going to be the previous
 

00:12:26.320 --> 00:12:29.509 align:start position:0%
total is just going to be the previous
total<00:12:27.160><c> plus</c><00:12:28.040><c> this</c><00:12:28.320><c> element</c><00:12:28.760><c> whatever</c><00:12:29.360><c> this</c>

00:12:29.509 --> 00:12:29.519 align:start position:0%
total plus this element whatever this
 

00:12:29.519 --> 00:12:31.790 align:start position:0%
total plus this element whatever this
element<00:12:29.959><c> contributed</c><00:12:30.800><c> to</c><00:12:31.040><c> the</c><00:12:31.160><c> total</c><00:12:31.639><c> there</c>

00:12:31.790 --> 00:12:31.800 align:start position:0%
element contributed to the total there
 

00:12:31.800 --> 00:12:33.949 align:start position:0%
element contributed to the total there
you<00:12:32.000><c> go</c><00:12:32.519><c> now</c><00:12:32.800><c> after</c><00:12:33.040><c> we're</c><00:12:33.320><c> done</c><00:12:33.600><c> with</c><00:12:33.760><c> this</c>

00:12:33.949 --> 00:12:33.959 align:start position:0%
you go now after we're done with this
 

00:12:33.959 --> 00:12:36.670 align:start position:0%
you go now after we're done with this
recursive<00:12:34.480><c> call</c><00:12:35.079><c> we're</c><00:12:35.279><c> going</c><00:12:35.519><c> to</c><00:12:35.959><c> have</c><00:12:36.120><c> to</c>

00:12:36.670 --> 00:12:36.680 align:start position:0%
recursive call we're going to have to
 

00:12:36.680 --> 00:12:38.750 align:start position:0%
recursive call we're going to have to
undo<00:12:37.160><c> the</c><00:12:37.360><c> work</c><00:12:37.600><c> that</c><00:12:37.720><c> we</c><00:12:37.880><c> just</c><00:12:38.079><c> did</c><00:12:38.560><c> and</c>

00:12:38.750 --> 00:12:38.760 align:start position:0%
undo the work that we just did and
 

00:12:38.760 --> 00:12:40.990 align:start position:0%
undo the work that we just did and
that's<00:12:39.000><c> pretty</c><00:12:39.199><c> much</c><00:12:39.440><c> as</c><00:12:39.600><c> simple</c><00:12:39.920><c> as</c><00:12:40.160><c> removing</c>

00:12:40.990 --> 00:12:41.000 align:start position:0%
that's pretty much as simple as removing
 

00:12:41.000 --> 00:12:43.189 align:start position:0%
that's pretty much as simple as removing
the<00:12:41.160><c> element</c><00:12:41.519><c> that</c><00:12:41.639><c> we</c><00:12:41.800><c> just</c><00:12:42.079><c> appended</c><00:12:42.800><c> to</c><00:12:43.040><c> the</c>

00:12:43.189 --> 00:12:43.199 align:start position:0%
the element that we just appended to the
 

00:12:43.199 --> 00:12:46.269 align:start position:0%
the element that we just appended to the
current<00:12:43.680><c> so</c><00:12:43.880><c> we</c><00:12:43.959><c> can</c><00:12:44.120><c> say</c><00:12:44.720><c> current.</c><00:12:45.720><c> pop</c>

00:12:46.269 --> 00:12:46.279 align:start position:0%
current so we can say current. pop
 

00:12:46.279 --> 00:12:47.750 align:start position:0%
current so we can say current. pop
because<00:12:46.519><c> of</c><00:12:46.680><c> course</c><00:12:46.959><c> in</c><00:12:47.040><c> the</c><00:12:47.199><c> next</c><00:12:47.440><c> case</c><00:12:47.639><c> we</c>

00:12:47.750 --> 00:12:47.760 align:start position:0%
because of course in the next case we
 

00:12:47.760 --> 00:12:49.470 align:start position:0%
because of course in the next case we
want<00:12:47.880><c> to</c><00:12:48.040><c> skip</c><00:12:48.399><c> that</c><00:12:48.600><c> element</c><00:12:48.959><c> so</c><00:12:49.120><c> we</c><00:12:49.240><c> have</c><00:12:49.320><c> to</c>

00:12:49.470 --> 00:12:49.480 align:start position:0%
want to skip that element so we have to
 

00:12:49.480 --> 00:12:51.350 align:start position:0%
want to skip that element so we have to
remove<00:12:49.800><c> it</c><00:12:49.959><c> from</c><00:12:50.160><c> the</c><00:12:50.320><c> current</c><00:12:51.000><c> set</c><00:12:51.199><c> of</c>

00:12:51.350 --> 00:12:51.360 align:start position:0%
remove it from the current set of
 

00:12:51.360 --> 00:12:54.829 align:start position:0%
remove it from the current set of
elements<00:12:52.160><c> now</c><00:12:52.600><c> the</c><00:12:52.800><c> next</c><00:12:53.160><c> part</c><00:12:53.760><c> I</c><00:12:53.959><c> wish</c><00:12:54.240><c> it</c><00:12:54.440><c> was</c>

00:12:54.829 --> 00:12:54.839 align:start position:0%
elements now the next part I wish it was
 

00:12:54.839 --> 00:12:56.949 align:start position:0%
elements now the next part I wish it was
as<00:12:55.040><c> easy</c><00:12:55.360><c> as</c><00:12:55.480><c> doing</c><00:12:55.839><c> this</c><00:12:56.160><c> as</c><00:12:56.320><c> easy</c><00:12:56.600><c> as</c><00:12:56.800><c> just</c>

00:12:56.949 --> 00:12:56.959 align:start position:0%
as easy as doing this as easy as just
 

00:12:56.959 --> 00:12:59.910 align:start position:0%
as easy as doing this as easy as just
calling<00:12:57.360><c> DFS</c><00:12:58.160><c> on</c><00:12:58.440><c> I</c><00:12:58.680><c> +1</c>

00:12:59.910 --> 00:12:59.920 align:start position:0%
calling DFS on I +1
 

00:12:59.920 --> 00:13:02.949 align:start position:0%
calling DFS on I +1
with<00:13:00.560><c> the</c><00:13:00.760><c> current</c><00:13:01.399><c> combination</c><00:13:02.399><c> with</c><00:13:02.720><c> the</c>

00:13:02.949 --> 00:13:02.959 align:start position:0%
with the current combination with the
 

00:13:02.959 --> 00:13:04.870 align:start position:0%
with the current combination with the
previous<00:13:03.519><c> total</c><00:13:04.040><c> since</c><00:13:04.240><c> we're</c><00:13:04.399><c> skipping</c><00:13:04.760><c> the</c>

00:13:04.870 --> 00:13:04.880 align:start position:0%
previous total since we're skipping the
 

00:13:04.880 --> 00:13:06.870 align:start position:0%
previous total since we're skipping the
element<00:13:05.320><c> there's</c><00:13:05.639><c> no</c><00:13:05.920><c> need</c><00:13:06.199><c> to</c><00:13:06.399><c> update</c><00:13:06.760><c> the</c>

00:13:06.870 --> 00:13:06.880 align:start position:0%
element there's no need to update the
 

00:13:06.880 --> 00:13:09.310 align:start position:0%
element there's no need to update the
total<00:13:07.320><c> I</c><00:13:07.399><c> wish</c><00:13:07.600><c> it</c><00:13:07.760><c> was</c><00:13:08.000><c> this</c><00:13:08.199><c> simple</c><00:13:08.920><c> but</c><00:13:09.079><c> it's</c>

00:13:09.310 --> 00:13:09.320 align:start position:0%
total I wish it was this simple but it's
 

00:13:09.320 --> 00:13:12.710 align:start position:0%
total I wish it was this simple but it's
not<00:13:09.920><c> we</c><00:13:10.199><c> require</c><00:13:10.959><c> two</c><00:13:11.320><c> more</c><00:13:11.680><c> lines</c><00:13:11.959><c> of</c><00:13:12.199><c> code</c>

00:13:12.710 --> 00:13:12.720 align:start position:0%
not we require two more lines of code
 

00:13:12.720 --> 00:13:14.750 align:start position:0%
not we require two more lines of code
and<00:13:12.959><c> that</c><00:13:13.120><c> is</c><00:13:13.279><c> the</c><00:13:13.480><c> loop</c><00:13:13.920><c> that</c><00:13:14.079><c> I</c><00:13:14.199><c> was</c><00:13:14.399><c> talking</c>

00:13:14.750 --> 00:13:14.760 align:start position:0%
and that is the loop that I was talking
 

00:13:14.760 --> 00:13:18.910 align:start position:0%
and that is the loop that I was talking
about<00:13:15.399><c> we</c><00:13:15.639><c> want</c><00:13:15.920><c> to</c><00:13:16.199><c> say</c><00:13:17.040><c> while</c><00:13:17.760><c> the</c><00:13:18.000><c> candidate</c>

00:13:18.910 --> 00:13:18.920 align:start position:0%
about we want to say while the candidate
 

00:13:18.920 --> 00:13:22.750 align:start position:0%
about we want to say while the candidate
is<00:13:19.240><c> at</c><00:13:19.399><c> index</c><00:13:19.800><c> I</c><00:13:20.120><c> is</c><00:13:20.399><c> equal</c><00:13:21.160><c> to</c><00:13:21.720><c> the</c><00:13:22.040><c> candidate</c>

00:13:22.750 --> 00:13:22.760 align:start position:0%
is at index I is equal to the candidate
 

00:13:22.760 --> 00:13:25.790 align:start position:0%
is at index I is equal to the candidate
at<00:13:22.959><c> index</c><00:13:23.440><c> I</c><00:13:23.720><c> +</c><00:13:24.000><c> 1</c><00:13:24.519><c> while</c><00:13:24.839><c> that's</c><00:13:25.120><c> the</c><00:13:25.279><c> case</c>

00:13:25.790 --> 00:13:25.800 align:start position:0%
at index I + 1 while that's the case
 

00:13:25.800 --> 00:13:28.350 align:start position:0%
at index I + 1 while that's the case
increment<00:13:26.519><c> the</c><00:13:26.680><c> pointer</c><00:13:27.360><c> because</c><00:13:27.639><c> I</c><00:13:27.880><c> don't</c>

00:13:28.350 --> 00:13:28.360 align:start position:0%
increment the pointer because I don't
 

00:13:28.360 --> 00:13:31.030 align:start position:0%
increment the pointer because I don't
want<00:13:28.600><c> to</c><00:13:28.920><c> use</c><00:13:29.160><c> use</c><00:13:29.480><c> the</c><00:13:29.600><c> element</c><00:13:30.000><c> at</c><00:13:30.160><c> index</c><00:13:30.600><c> I</c>

00:13:31.030 --> 00:13:31.040 align:start position:0%
want to use use the element at index I
 

00:13:31.040 --> 00:13:33.230 align:start position:0%
want to use use the element at index I
and<00:13:31.199><c> I</c><00:13:31.320><c> don't</c><00:13:31.519><c> want</c><00:13:31.639><c> to</c><00:13:31.839><c> use</c><00:13:32.160><c> any</c><00:13:32.519><c> duplicates</c>

00:13:33.230 --> 00:13:33.240 align:start position:0%
and I don't want to use any duplicates
 

00:13:33.240 --> 00:13:35.750 align:start position:0%
and I don't want to use any duplicates
of<00:13:33.480><c> that</c><00:13:33.680><c> element</c><00:13:34.240><c> either</c><00:13:34.839><c> I</c><00:13:34.920><c> want</c><00:13:35.040><c> to</c><00:13:35.320><c> skip</c>

00:13:35.750 --> 00:13:35.760 align:start position:0%
of that element either I want to skip
 

00:13:35.760 --> 00:13:38.189 align:start position:0%
of that element either I want to skip
this<00:13:35.959><c> element</c><00:13:36.440><c> all</c><00:13:36.880><c> together</c><00:13:37.560><c> and</c><00:13:37.720><c> the</c><00:13:37.839><c> way</c><00:13:38.000><c> to</c>

00:13:38.189 --> 00:13:38.199 align:start position:0%
this element all together and the way to
 

00:13:38.199 --> 00:13:40.470 align:start position:0%
this element all together and the way to
do<00:13:38.440><c> that</c><00:13:38.680><c> is</c><00:13:38.920><c> with</c><00:13:39.120><c> this</c><00:13:39.279><c> Loop</c><00:13:39.880><c> like</c><00:13:40.079><c> I</c><00:13:40.199><c> showed</c>

00:13:40.470 --> 00:13:40.480 align:start position:0%
do that is with this Loop like I showed
 

00:13:40.480 --> 00:13:42.389 align:start position:0%
do that is with this Loop like I showed
you<00:13:40.680><c> the</c><00:13:40.839><c> example</c><00:13:41.279><c> where</c><00:13:41.440><c> we</c><00:13:41.639><c> had</c><00:13:41.920><c> multiple</c>

00:13:42.389 --> 00:13:42.399 align:start position:0%
you the example where we had multiple
 

00:13:42.399 --> 00:13:44.790 align:start position:0%
you the example where we had multiple
ones<00:13:42.800><c> where</c><00:13:42.920><c> we</c><00:13:43.079><c> had</c><00:13:43.240><c> one</c><00:13:43.800><c> one</c><00:13:44.440><c> and</c><00:13:44.560><c> then</c><00:13:44.680><c> we</c>

00:13:44.790 --> 00:13:44.800 align:start position:0%
ones where we had one one and then we
 

00:13:44.800 --> 00:13:46.269 align:start position:0%
ones where we had one one and then we
had<00:13:44.920><c> a</c><00:13:45.079><c> two</c><00:13:45.360><c> after</c><00:13:45.600><c> it</c><00:13:45.800><c> but</c><00:13:45.920><c> it</c><00:13:46.040><c> could</c><00:13:46.160><c> have</c>

00:13:46.269 --> 00:13:46.279 align:start position:0%
had a two after it but it could have
 

00:13:46.279 --> 00:13:48.389 align:start position:0%
had a two after it but it could have
been<00:13:46.440><c> the</c><00:13:46.600><c> case</c><00:13:46.839><c> that</c><00:13:47.000><c> we</c><00:13:47.199><c> had</c><00:13:47.760><c> more</c><00:13:48.000><c> than</c><00:13:48.199><c> that</c>

00:13:48.389 --> 00:13:48.399 align:start position:0%
been the case that we had more than that
 

00:13:48.399 --> 00:13:50.550 align:start position:0%
been the case that we had more than that
we<00:13:48.519><c> could</c><00:13:48.600><c> have</c><00:13:48.800><c> had</c><00:13:49.040><c> like</c><00:13:49.240><c> four</c><00:13:49.600><c> ones</c><00:13:49.959><c> or</c><00:13:50.240><c> five</c>

00:13:50.550 --> 00:13:50.560 align:start position:0%
we could have had like four ones or five
 

00:13:50.560 --> 00:13:53.790 align:start position:0%
we could have had like four ones or five
ones<00:13:51.199><c> so</c><00:13:51.639><c> we</c><00:13:51.839><c> already</c><00:13:52.440><c> recursively</c><00:13:53.240><c> did</c><00:13:53.560><c> the</c>

00:13:53.790 --> 00:13:53.800 align:start position:0%
ones so we already recursively did the
 

00:13:53.800 --> 00:13:56.910 align:start position:0%
ones so we already recursively did the
path<00:13:54.360><c> where</c><00:13:54.560><c> we</c><00:13:54.839><c> include</c><00:13:55.519><c> one</c><00:13:55.720><c> or</c><00:13:55.920><c> more</c><00:13:56.199><c> ones</c>

00:13:56.910 --> 00:13:56.920 align:start position:0%
path where we include one or more ones
 

00:13:56.920 --> 00:13:58.710 align:start position:0%
path where we include one or more ones
now<00:13:57.120><c> I</c><00:13:57.199><c> want</c><00:13:57.320><c> to</c><00:13:57.440><c> do</c><00:13:57.600><c> the</c><00:13:57.800><c> path</c><00:13:58.040><c> where</c><00:13:58.160><c> we</c><00:13:58.320><c> skip</c>

00:13:58.710 --> 00:13:58.720 align:start position:0%
now I want to do the path where we skip
 

00:13:58.720 --> 00:14:01.030 align:start position:0%
now I want to do the path where we skip
all<00:13:59.240><c> of</c><00:13:59.440><c> these</c><00:13:59.680><c> ones</c><00:14:00.120><c> so</c><00:14:00.440><c> that's</c><00:14:00.600><c> why</c><00:14:00.759><c> we</c><00:14:00.880><c> need</c>

00:14:01.030 --> 00:14:01.040 align:start position:0%
all of these ones so that's why we need
 

00:14:01.040 --> 00:14:02.829 align:start position:0%
all of these ones so that's why we need
the<00:14:01.160><c> loop</c><00:14:01.480><c> don't</c><00:14:01.680><c> just</c><00:14:01.800><c> skip</c><00:14:02.120><c> this</c><00:14:02.240><c> one</c><00:14:02.440><c> skip</c>

00:14:02.829 --> 00:14:02.839 align:start position:0%
the loop don't just skip this one skip
 

00:14:02.839 --> 00:14:04.870 align:start position:0%
the loop don't just skip this one skip
this<00:14:03.160><c> this</c><00:14:03.480><c> this</c><00:14:03.759><c> this</c><00:14:04.000><c> and</c><00:14:04.279><c> this</c><00:14:04.480><c> so</c><00:14:04.639><c> that</c><00:14:04.759><c> we</c>

00:14:04.870 --> 00:14:04.880 align:start position:0%
this this this this and this so that we
 

00:14:04.880 --> 00:14:07.629 align:start position:0%
this this this this and this so that we
have<00:14:05.000><c> a</c><00:14:05.240><c> fresh</c><00:14:05.680><c> choice</c><00:14:06.079><c> to</c><00:14:06.320><c> make</c><00:14:06.880><c> there's</c><00:14:07.199><c> one</c>

00:14:07.629 --> 00:14:07.639 align:start position:0%
have a fresh choice to make there's one
 

00:14:07.639 --> 00:14:10.030 align:start position:0%
have a fresh choice to make there's one
issue<00:14:07.959><c> with</c><00:14:08.160><c> this</c><00:14:08.680><c> what</c><00:14:08.839><c> if</c><00:14:09.199><c> we</c><00:14:09.360><c> had</c><00:14:09.519><c> an</c><00:14:09.639><c> array</c>

00:14:10.030 --> 00:14:10.040 align:start position:0%
issue with this what if we had an array
 

00:14:10.040 --> 00:14:12.230 align:start position:0%
issue with this what if we had an array
like<00:14:10.279><c> this</c><00:14:10.839><c> well</c><00:14:11.120><c> I</c><00:14:11.360><c> is</c><00:14:11.639><c> always</c><00:14:11.920><c> going</c><00:14:12.000><c> to</c><00:14:12.120><c> be</c>

00:14:12.230 --> 00:14:12.240 align:start position:0%
like this well I is always going to be
 

00:14:12.240 --> 00:14:13.670 align:start position:0%
like this well I is always going to be
equal<00:14:12.440><c> to</c><00:14:12.600><c> the</c><00:14:12.720><c> next</c><00:14:12.959><c> element</c><00:14:13.320><c> and</c><00:14:13.440><c> then</c><00:14:13.560><c> we're</c>

00:14:13.670 --> 00:14:13.680 align:start position:0%
equal to the next element and then we're
 

00:14:13.680 --> 00:14:15.350 align:start position:0%
equal to the next element and then we're
going<00:14:13.759><c> to</c><00:14:13.880><c> end</c><00:14:14.040><c> up</c><00:14:14.199><c> with</c><00:14:14.279><c> a</c><00:14:14.440><c> comparison</c><00:14:15.199><c> where</c>

00:14:15.350 --> 00:14:15.360 align:start position:0%
going to end up with a comparison where
 

00:14:15.360 --> 00:14:17.230 align:start position:0%
going to end up with a comparison where
we<00:14:15.519><c> compare</c><00:14:15.920><c> this</c><00:14:16.040><c> to</c><00:14:16.199><c> the</c><00:14:16.399><c> next</c><00:14:16.680><c> element</c><00:14:17.120><c> but</c>

00:14:17.230 --> 00:14:17.240 align:start position:0%
we compare this to the next element but
 

00:14:17.240 --> 00:14:19.629 align:start position:0%
we compare this to the next element but
it<00:14:17.360><c> doesn't</c><00:14:17.720><c> exist</c><00:14:18.320><c> make</c><00:14:18.480><c> sure</c><00:14:18.720><c> you</c><00:14:18.920><c> have</c><00:14:19.199><c> this</c>

00:14:19.629 --> 00:14:19.639 align:start position:0%
it doesn't exist make sure you have this
 

00:14:19.639 --> 00:14:24.550 align:start position:0%
it doesn't exist make sure you have this
I<00:14:20.279><c> +</c><00:14:20.759><c> 1</c><00:14:21.519><c> is</c><00:14:22.519><c> inbounds</c><00:14:23.519><c> so</c><00:14:23.720><c> that</c><00:14:23.880><c> we</c><00:14:24.000><c> don't</c><00:14:24.399><c> get</c>

00:14:24.550 --> 00:14:24.560 align:start position:0%
I + 1 is inbounds so that we don't get
 

00:14:24.560 --> 00:14:26.790 align:start position:0%
I + 1 is inbounds so that we don't get
an<00:14:24.839><c> index</c><00:14:25.279><c> out</c><00:14:25.440><c> of</c><00:14:25.600><c> bounds</c><00:14:26.000><c> error</c><00:14:26.399><c> when</c><00:14:26.560><c> we</c>

00:14:26.790 --> 00:14:26.800 align:start position:0%
an index out of bounds error when we
 

00:14:26.800 --> 00:14:29.189 align:start position:0%
an index out of bounds error when we
execute<00:14:27.440><c> this</c><00:14:27.720><c> part</c><00:14:28.120><c> so</c><00:14:28.560><c> that's</c><00:14:28.720><c> very</c>

00:14:29.189 --> 00:14:29.199 align:start position:0%
execute this part so that's very
 

00:14:29.199 --> 00:14:32.790 align:start position:0%
execute this part so that's very
important<00:14:29.880><c> now</c><00:14:30.399><c> this</c><00:14:30.680><c> is</c><00:14:31.160><c> the</c><00:14:31.519><c> entire</c><00:14:32.120><c> code</c>

00:14:32.790 --> 00:14:32.800 align:start position:0%
important now this is the entire code
 

00:14:32.800 --> 00:14:33.870 align:start position:0%
important now this is the entire code
well<00:14:33.000><c> I</c><00:14:33.079><c> guess</c><00:14:33.240><c> there's</c><00:14:33.440><c> one</c><00:14:33.639><c> thing</c><00:14:33.759><c> that</c>

00:14:33.870 --> 00:14:33.880 align:start position:0%
well I guess there's one thing that
 

00:14:33.880 --> 00:14:35.189 align:start position:0%
well I guess there's one thing that
we're<00:14:34.040><c> missing</c><00:14:34.360><c> if</c><00:14:34.440><c> you're</c><00:14:34.560><c> smart</c><00:14:34.880><c> you'll</c><00:14:35.079><c> be</c>

00:14:35.189 --> 00:14:35.199 align:start position:0%
we're missing if you're smart you'll be
 

00:14:35.199 --> 00:14:37.509 align:start position:0%
we're missing if you're smart you'll be
able<00:14:35.360><c> to</c><00:14:35.519><c> notice</c><00:14:35.839><c> it</c><00:14:36.240><c> we</c><00:14:36.440><c> defined</c><00:14:36.839><c> our</c><00:14:37.079><c> DFS</c>

00:14:37.509 --> 00:14:37.519 align:start position:0%
able to notice it we defined our DFS
 

00:14:37.519 --> 00:14:39.189 align:start position:0%
able to notice it we defined our DFS
function<00:14:37.920><c> but</c><00:14:38.040><c> we</c><00:14:38.160><c> never</c><00:14:38.440><c> called</c><00:14:38.759><c> it</c><00:14:38.920><c> so</c><00:14:39.079><c> let</c>

00:14:39.189 --> 00:14:39.199 align:start position:0%
function but we never called it so let
 

00:14:39.199 --> 00:14:41.430 align:start position:0%
function but we never called it so let
me<00:14:39.360><c> do</c><00:14:39.519><c> that</c><00:14:39.720><c> down</c><00:14:40.000><c> here</c><00:14:40.320><c> DFS</c><00:14:41.160><c> what</c><00:14:41.240><c> do</c><00:14:41.320><c> you</c>

00:14:41.430 --> 00:14:41.440 align:start position:0%
me do that down here DFS what do you
 

00:14:41.440 --> 00:14:42.949 align:start position:0%
me do that down here DFS what do you
think<00:14:41.560><c> the</c><00:14:41.720><c> parameters</c><00:14:42.160><c> are</c><00:14:42.279><c> going</c><00:14:42.360><c> to</c><00:14:42.519><c> be</c>

00:14:42.949 --> 00:14:42.959 align:start position:0%
think the parameters are going to be
 

00:14:42.959 --> 00:14:44.470 align:start position:0%
think the parameters are going to be
well<00:14:43.079><c> we're</c><00:14:43.199><c> going</c><00:14:43.320><c> to</c><00:14:43.399><c> start</c><00:14:43.639><c> at</c><00:14:43.800><c> index</c><00:14:44.160><c> zero</c>

00:14:44.470 --> 00:14:44.480 align:start position:0%
well we're going to start at index zero
 

00:14:44.480 --> 00:14:46.470 align:start position:0%
well we're going to start at index zero
let's<00:14:44.680><c> put</c><00:14:44.880><c> that</c><00:14:45.399><c> the</c><00:14:45.600><c> current</c><00:14:45.959><c> combination</c>

00:14:46.470 --> 00:14:46.480 align:start position:0%
let's put that the current combination
 

00:14:46.480 --> 00:14:48.189 align:start position:0%
let's put that the current combination
initially<00:14:46.880><c> is</c><00:14:47.000><c> going</c><00:14:47.079><c> to</c><00:14:47.199><c> be</c><00:14:47.360><c> empty</c><00:14:47.759><c> so</c><00:14:47.920><c> we</c><00:14:48.000><c> can</c>

00:14:48.189 --> 00:14:48.199 align:start position:0%
initially is going to be empty so we can
 

00:14:48.199 --> 00:14:50.910 align:start position:0%
initially is going to be empty so we can
have<00:14:48.399><c> an</c><00:14:48.600><c> empty</c><00:14:48.920><c> array</c><00:14:49.360><c> here</c><00:14:50.000><c> and</c><00:14:50.279><c> lastly</c><00:14:50.639><c> our</c>

00:14:50.910 --> 00:14:50.920 align:start position:0%
have an empty array here and lastly our
 

00:14:50.920 --> 00:14:52.710 align:start position:0%
have an empty array here and lastly our
total<00:14:51.279><c> sum</c><00:14:51.680><c> initially</c><00:14:52.079><c> is</c><00:14:52.199><c> just</c><00:14:52.320><c> going</c><00:14:52.440><c> to</c><00:14:52.519><c> be</c>

00:14:52.710 --> 00:14:52.720 align:start position:0%
total sum initially is just going to be
 

00:14:52.720 --> 00:14:54.870 align:start position:0%
total sum initially is just going to be
zero<00:14:53.079><c> so</c><00:14:53.199><c> let</c><00:14:53.320><c> me</c><00:14:53.440><c> put</c><00:14:53.560><c> a</c><00:14:53.720><c> zero</c><00:14:54.079><c> there</c><00:14:54.560><c> after</c><00:14:54.759><c> we</c>

00:14:54.870 --> 00:14:54.880 align:start position:0%
zero so let me put a zero there after we
 

00:14:54.880 --> 00:14:57.470 align:start position:0%
zero so let me put a zero there after we
call<00:14:55.160><c> this</c><00:14:55.360><c> function</c><00:14:55.839><c> our</c><00:14:56.160><c> result</c><00:14:56.720><c> should</c><00:14:57.199><c> be</c>

00:14:57.470 --> 00:14:57.480 align:start position:0%
call this function our result should be
 

00:14:57.480 --> 00:14:59.749 align:start position:0%
call this function our result should be
updated<00:14:58.120><c> and</c><00:14:58.279><c> then</c><00:14:58.600><c> we</c><00:14:58.759><c> can</c><00:14:59.040><c> and</c><00:14:59.360><c> return</c><00:14:59.639><c> the</c>

00:14:59.749 --> 00:14:59.759 align:start position:0%
updated and then we can and return the
 

00:14:59.759 --> 00:15:01.990 align:start position:0%
updated and then we can and return the
final<00:15:00.040><c> result</c><00:15:00.320><c> so</c><00:15:00.480><c> let</c><00:15:00.560><c> me</c><00:15:00.800><c> execute</c><00:15:01.279><c> this</c><00:15:01.800><c> and</c>

00:15:01.990 --> 00:15:02.000 align:start position:0%
final result so let me execute this and
 

00:15:02.000 --> 00:15:03.710 align:start position:0%
final result so let me execute this and
as<00:15:02.120><c> you</c><00:15:02.199><c> can</c><00:15:02.320><c> see</c><00:15:02.600><c> here</c><00:15:02.839><c> it</c><00:15:02.959><c> works</c><00:15:03.399><c> it</c><00:15:03.480><c> is</c>

00:15:03.710 --> 00:15:03.720 align:start position:0%
as you can see here it works it is
 

00:15:03.720 --> 00:15:05.189 align:start position:0%
as you can see here it works it is
efficient<00:15:04.120><c> even</c><00:15:04.320><c> though</c><00:15:04.480><c> these</c><00:15:04.639><c> run</c><00:15:04.920><c> times</c>

00:15:05.189 --> 00:15:05.199 align:start position:0%
efficient even though these run times
 

00:15:05.199 --> 00:15:06.829 align:start position:0%
efficient even though these run times
are<00:15:05.440><c> pretty</c><00:15:05.720><c> random</c><00:15:06.160><c> maybe</c><00:15:06.360><c> there</c><00:15:06.480><c> are</c><00:15:06.639><c> some</c>

00:15:06.829 --> 00:15:06.839 align:start position:0%
are pretty random maybe there are some
 

00:15:06.839 --> 00:15:08.949 align:start position:0%
are pretty random maybe there are some
hacky<00:15:07.320><c> ways</c><00:15:07.639><c> that</c><00:15:07.800><c> we</c><00:15:07.959><c> can</c><00:15:08.440><c> improve</c><00:15:08.800><c> the</c>

00:15:08.949 --> 00:15:08.959 align:start position:0%
hacky ways that we can improve the
 

00:15:08.959 --> 00:15:11.150 align:start position:0%
hacky ways that we can improve the
execution<00:15:09.480><c> time</c><00:15:09.759><c> but</c><00:15:09.920><c> in</c><00:15:10.040><c> terms</c><00:15:10.320><c> of</c><00:15:10.560><c> Big</c><00:15:10.800><c> O</c>

00:15:11.150 --> 00:15:11.160 align:start position:0%
execution time but in terms of Big O
 

00:15:11.160 --> 00:15:14.150 align:start position:0%
execution time but in terms of Big O
complexity<00:15:12.079><c> this</c><00:15:12.399><c> is</c><00:15:12.720><c> the</c><00:15:12.920><c> final</c><00:15:13.279><c> solution</c><00:15:14.000><c> it</c>

00:15:14.150 --> 00:15:14.160 align:start position:0%
complexity this is the final solution it
 

00:15:14.160 --> 00:15:16.110 align:start position:0%
complexity this is the final solution it
is<00:15:14.440><c> the</c><00:15:14.600><c> most</c><00:15:15.000><c> optimal</c><00:15:15.560><c> if</c><00:15:15.639><c> you</c><00:15:15.759><c> found</c><00:15:15.959><c> this</c>

00:15:16.110 --> 00:15:16.120 align:start position:0%
is the most optimal if you found this
 

00:15:16.120 --> 00:15:18.670 align:start position:0%
is the most optimal if you found this
helpful<00:15:16.680><c> check</c><00:15:16.880><c> out</c><00:15:17.000><c> n</c><00:15:17.279><c> code.</c><00:15:18.000><c> for</c><00:15:18.240><c> a</c><00:15:18.399><c> very</c>

00:15:18.670 --> 00:15:18.680 align:start position:0%
helpful check out n code. for a very
 

00:15:18.680 --> 00:15:20.470 align:start position:0%
helpful check out n code. for a very
comprehensive<00:15:19.279><c> road</c><00:15:19.600><c> map</c><00:15:19.959><c> and</c><00:15:20.079><c> for</c><00:15:20.199><c> a</c><00:15:20.320><c> bunch</c>

00:15:20.470 --> 00:15:20.480 align:start position:0%
comprehensive road map and for a bunch
 

00:15:20.480 --> 00:15:22.189 align:start position:0%
comprehensive road map and for a bunch
of<00:15:20.600><c> courses</c><00:15:21.079><c> that</c><00:15:21.199><c> will</c><00:15:21.399><c> make</c><00:15:21.560><c> your</c><00:15:21.800><c> life</c><00:15:22.079><c> a</c>

00:15:22.189 --> 00:15:22.199 align:start position:0%
of courses that will make your life a
 

00:15:22.199 --> 00:15:23.870 align:start position:0%
of courses that will make your life a
lot<00:15:22.399><c> easier</c><00:15:22.920><c> thanks</c><00:15:23.160><c> for</c><00:15:23.320><c> watching</c><00:15:23.639><c> and</c><00:15:23.759><c> I'll</c>

00:15:23.870 --> 00:15:23.880 align:start position:0%
lot easier thanks for watching and I'll
 

00:15:23.880 --> 00:15:26.600 align:start position:0%
lot easier thanks for watching and I'll
see<00:15:24.040><c> you</c><00:15:24.160><c> soon</c>

