WEBVTT
Kind: captions
Language: en

00:00:00.080 --> 00:00:01.829 align:start position:0%
 
hey<00:00:00.320><c> everyone</c><00:00:00.799><c> welcome</c><00:00:01.280><c> back</c><00:00:01.520><c> and</c><00:00:01.599><c> let's</c>

00:00:01.829 --> 00:00:01.839 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.839 --> 00:00:03.750 align:start position:0%
hey everyone welcome back and let's
write<00:00:02.080><c> some</c><00:00:02.240><c> more</c><00:00:02.480><c> neat</c><00:00:02.720><c> code</c><00:00:03.040><c> today</c><00:00:03.280><c> so</c><00:00:03.439><c> today</c>

00:00:03.750 --> 00:00:03.760 align:start position:0%
write some more neat code today so today
 

00:00:03.760 --> 00:00:06.550 align:start position:0%
write some more neat code today so today
let's<00:00:04.000><c> solve</c><00:00:04.560><c> interleaving</c><00:00:05.440><c> string</c><00:00:06.240><c> so</c><00:00:06.399><c> in</c>

00:00:06.550 --> 00:00:06.560 align:start position:0%
let's solve interleaving string so in
 

00:00:06.560 --> 00:00:08.950 align:start position:0%
let's solve interleaving string so in
this<00:00:06.799><c> problem</c><00:00:07.200><c> we're</c><00:00:07.440><c> given</c><00:00:07.759><c> a</c><00:00:07.919><c> list</c><00:00:08.240><c> of</c><00:00:08.559><c> three</c>

00:00:08.950 --> 00:00:08.960 align:start position:0%
this problem we're given a list of three
 

00:00:08.960 --> 00:00:10.549 align:start position:0%
this problem we're given a list of three
strings<00:00:09.360><c> well</c><00:00:09.519><c> not</c><00:00:09.679><c> really</c><00:00:09.920><c> a</c><00:00:10.080><c> list</c><00:00:10.320><c> but</c><00:00:10.400><c> we're</c>

00:00:10.549 --> 00:00:10.559 align:start position:0%
strings well not really a list but we're
 

00:00:10.559 --> 00:00:14.390 align:start position:0%
strings well not really a list but we're
given<00:00:10.880><c> three</c><00:00:11.120><c> strings</c><00:00:11.599><c> s1</c><00:00:12.240><c> s2</c><00:00:12.880><c> and</c><00:00:13.200><c> s3</c><00:00:13.840><c> and</c><00:00:14.000><c> we</c>

00:00:14.390 --> 00:00:14.400 align:start position:0%
given three strings s1 s2 and s3 and we
 

00:00:14.400 --> 00:00:17.189 align:start position:0%
given three strings s1 s2 and s3 and we
just<00:00:14.719><c> want</c><00:00:14.880><c> to</c><00:00:15.040><c> know</c><00:00:15.440><c> a</c><00:00:15.599><c> simple</c><00:00:15.920><c> question</c><00:00:16.800><c> can</c>

00:00:17.189 --> 00:00:17.199 align:start position:0%
just want to know a simple question can
 

00:00:17.199 --> 00:00:21.750 align:start position:0%
just want to know a simple question can
we<00:00:17.680><c> form</c><00:00:18.160><c> the</c><00:00:18.400><c> string</c><00:00:19.039><c> s3</c><00:00:20.000><c> by</c><00:00:20.439><c> interleaving</c>

00:00:21.750 --> 00:00:21.760 align:start position:0%
we form the string s3 by interleaving
 

00:00:21.760 --> 00:00:25.910 align:start position:0%
we form the string s3 by interleaving
the<00:00:22.080><c> strings</c><00:00:22.720><c> s1</c><00:00:23.600><c> and</c><00:00:23.840><c> s2</c><00:00:24.800><c> an</c><00:00:25.119><c> interleaving</c>

00:00:25.910 --> 00:00:25.920 align:start position:0%
the strings s1 and s2 an interleaving
 

00:00:25.920 --> 00:00:28.710 align:start position:0%
the strings s1 and s2 an interleaving
string<00:00:26.800><c> is</c><00:00:27.039><c> basically</c><00:00:27.599><c> when</c><00:00:27.760><c> you</c><00:00:27.920><c> take</c><00:00:28.400><c> two</c>

00:00:28.710 --> 00:00:28.720 align:start position:0%
string is basically when you take two
 

00:00:28.720 --> 00:00:32.229 align:start position:0%
string is basically when you take two
strings<00:00:29.359><c> and</c><00:00:29.760><c> split</c><00:00:30.320><c> them</c><00:00:30.720><c> up</c><00:00:31.279><c> into</c><00:00:31.920><c> you</c><00:00:32.000><c> know</c>

00:00:32.229 --> 00:00:32.239 align:start position:0%
strings and split them up into you know
 

00:00:32.239 --> 00:00:34.389 align:start position:0%
strings and split them up into you know
sub<00:00:32.559><c> strings</c><00:00:33.280><c> and</c><00:00:33.360><c> then</c><00:00:33.600><c> you</c><00:00:33.920><c> add</c><00:00:34.239><c> them</c>

00:00:34.389 --> 00:00:34.399 align:start position:0%
sub strings and then you add them
 

00:00:34.399 --> 00:00:36.470 align:start position:0%
sub strings and then you add them
together<00:00:34.880><c> now</c><00:00:35.040><c> they</c><00:00:35.360><c> have</c><00:00:35.600><c> a</c><00:00:35.760><c> description</c>

00:00:36.470 --> 00:00:36.480 align:start position:0%
together now they have a description
 

00:00:36.480 --> 00:00:38.790 align:start position:0%
together now they have a description
over<00:00:36.800><c> here</c><00:00:37.200><c> but</c><00:00:37.440><c> i</c><00:00:37.680><c> kind</c><00:00:37.920><c> of</c><00:00:38.079><c> feel</c><00:00:38.320><c> like</c><00:00:38.559><c> this</c>

00:00:38.790 --> 00:00:38.800 align:start position:0%
over here but i kind of feel like this
 

00:00:38.800 --> 00:00:40.310 align:start position:0%
over here but i kind of feel like this
description<00:00:39.360><c> actually</c><00:00:39.680><c> just</c><00:00:39.840><c> made</c><00:00:40.079><c> things</c>

00:00:40.310 --> 00:00:40.320 align:start position:0%
description actually just made things
 

00:00:40.320 --> 00:00:41.910 align:start position:0%
description actually just made things
more<00:00:40.640><c> complicated</c><00:00:41.200><c> for</c><00:00:41.360><c> me</c><00:00:41.440><c> like</c><00:00:41.600><c> with</c><00:00:41.760><c> the</c>

00:00:41.910 --> 00:00:41.920 align:start position:0%
more complicated for me like with the
 

00:00:41.920 --> 00:00:44.150 align:start position:0%
more complicated for me like with the
absolute<00:00:42.399><c> value</c><00:00:42.800><c> difference</c><00:00:43.280><c> being</c><00:00:43.520><c> at</c><00:00:43.680><c> most</c>

00:00:44.150 --> 00:00:44.160 align:start position:0%
absolute value difference being at most
 

00:00:44.160 --> 00:00:46.549 align:start position:0%
absolute value difference being at most
one<00:00:44.719><c> you</c><00:00:44.879><c> know</c><00:00:45.039><c> taking</c><00:00:45.680><c> these</c><00:00:45.920><c> strings</c>

00:00:46.549 --> 00:00:46.559 align:start position:0%
one you know taking these strings
 

00:00:46.559 --> 00:00:48.310 align:start position:0%
one you know taking these strings
forming<00:00:46.960><c> them</c><00:00:47.120><c> together</c><00:00:47.680><c> basically</c><00:00:48.160><c> what</c>

00:00:48.310 --> 00:00:48.320 align:start position:0%
forming them together basically what
 

00:00:48.320 --> 00:00:50.950 align:start position:0%
forming them together basically what
we're<00:00:48.559><c> saying</c><00:00:48.960><c> is</c><00:00:49.440><c> can</c><00:00:49.760><c> we</c><00:00:50.079><c> take</c>

00:00:50.950 --> 00:00:50.960 align:start position:0%
we're saying is can we take
 

00:00:50.960 --> 00:00:52.069 align:start position:0%
we're saying is can we take
the<00:00:51.199><c> string</c>

00:00:52.069 --> 00:00:52.079 align:start position:0%
the string
 

00:00:52.079 --> 00:00:54.869 align:start position:0%
the string
one<00:00:52.399><c> and</c><00:00:52.640><c> string</c><00:00:53.039><c> two</c><00:00:53.680><c> split</c><00:00:54.079><c> them</c><00:00:54.320><c> into</c><00:00:54.640><c> sub</c>

00:00:54.869 --> 00:00:54.879 align:start position:0%
one and string two split them into sub
 

00:00:54.879 --> 00:00:57.110 align:start position:0%
one and string two split them into sub
strings<00:00:55.199><c> like</c><00:00:55.360><c> you</c><00:00:55.440><c> can</c><00:00:55.600><c> see</c><00:00:56.320><c> a</c><00:00:56.480><c> string</c><00:00:56.800><c> one</c><00:00:57.039><c> is</c>

00:00:57.110 --> 00:00:57.120 align:start position:0%
strings like you can see a string one is
 

00:00:57.120 --> 00:00:59.189 align:start position:0%
strings like you can see a string one is
split<00:00:57.440><c> into</c><00:00:57.760><c> this</c><00:00:58.000><c> one</c><00:00:58.399><c> this</c><00:00:58.640><c> one</c><00:00:58.879><c> and</c><00:00:59.039><c> this</c>

00:00:59.189 --> 00:00:59.199 align:start position:0%
split into this one this one and this
 

00:00:59.199 --> 00:01:01.750 align:start position:0%
split into this one this one and this
one<00:00:59.440><c> and</c><00:00:59.680><c> notice</c><00:01:00.079><c> how</c><00:01:00.239><c> the</c><00:01:00.480><c> relative</c><00:01:01.120><c> order</c><00:01:01.520><c> of</c>

00:01:01.750 --> 00:01:01.760 align:start position:0%
one and notice how the relative order of
 

00:01:01.760 --> 00:01:04.070 align:start position:0%
one and notice how the relative order of
these<00:01:02.079><c> three</c><00:01:02.480><c> is</c><00:01:02.719><c> maintained</c><00:01:03.359><c> that's</c><00:01:03.680><c> very</c>

00:01:04.070 --> 00:01:04.080 align:start position:0%
these three is maintained that's very
 

00:01:04.080 --> 00:01:06.630 align:start position:0%
these three is maintained that's very
important<00:01:04.720><c> and</c><00:01:05.199><c> this</c><00:01:05.519><c> other</c><00:01:05.760><c> string</c><00:01:06.080><c> was</c><00:01:06.240><c> also</c>

00:01:06.630 --> 00:01:06.640 align:start position:0%
important and this other string was also
 

00:01:06.640 --> 00:01:09.910 align:start position:0%
important and this other string was also
split<00:01:07.439><c> into</c><00:01:07.840><c> two</c><00:01:08.080><c> portions</c><00:01:08.560><c> this</c><00:01:08.799><c> one</c><00:01:09.439><c> and</c>

00:01:09.910 --> 00:01:09.920 align:start position:0%
split into two portions this one and
 

00:01:09.920 --> 00:01:12.070 align:start position:0%
split into two portions this one and
this<00:01:10.159><c> one</c><00:01:10.400><c> and</c><00:01:10.479><c> the</c><00:01:10.640><c> relative</c><00:01:11.200><c> order</c><00:01:11.760><c> of</c><00:01:11.920><c> the</c>

00:01:12.070 --> 00:01:12.080 align:start position:0%
this one and the relative order of the
 

00:01:12.080 --> 00:01:13.990 align:start position:0%
this one and the relative order of the
characters<00:01:12.640><c> was</c><00:01:12.799><c> maintained</c><00:01:13.439><c> you</c><00:01:13.600><c> can</c><00:01:13.760><c> see</c>

00:01:13.990 --> 00:01:14.000 align:start position:0%
characters was maintained you can see
 

00:01:14.000 --> 00:01:15.070 align:start position:0%
characters was maintained you can see
that<00:01:14.240><c> this</c>

00:01:15.070 --> 00:01:15.080 align:start position:0%
that this
 

00:01:15.080 --> 00:01:19.510 align:start position:0%
that this
dbc<00:01:16.400><c> goes</c><00:01:16.799><c> in</c><00:01:16.960><c> the</c><00:01:17.119><c> front</c><00:01:17.680><c> and</c><00:01:18.000><c> the</c><00:01:18.320><c> a</c><00:01:18.960><c> goes</c><00:01:19.360><c> at</c>

00:01:19.510 --> 00:01:19.520 align:start position:0%
dbc goes in the front and the a goes at
 

00:01:19.520 --> 00:01:21.510 align:start position:0%
dbc goes in the front and the a goes at
the<00:01:19.840><c> end</c><00:01:20.240><c> so</c><00:01:20.400><c> the</c><00:01:20.560><c> relative</c><00:01:20.960><c> order</c><00:01:21.360><c> is</c>

00:01:21.510 --> 00:01:21.520 align:start position:0%
the end so the relative order is
 

00:01:21.520 --> 00:01:23.590 align:start position:0%
the end so the relative order is
important<00:01:21.840><c> but</c><00:01:22.000><c> that's</c><00:01:22.320><c> it</c><00:01:22.720><c> we</c><00:01:22.880><c> can</c><00:01:23.119><c> split</c><00:01:23.439><c> the</c>

00:01:23.590 --> 00:01:23.600 align:start position:0%
important but that's it we can split the
 

00:01:23.600 --> 00:01:26.149 align:start position:0%
important but that's it we can split the
strings<00:01:24.080><c> in</c><00:01:24.400><c> any</c><00:01:24.720><c> way</c><00:01:24.960><c> that</c><00:01:25.119><c> we</c><00:01:25.439><c> want</c><00:01:25.680><c> and</c><00:01:25.840><c> then</c>

00:01:26.149 --> 00:01:26.159 align:start position:0%
strings in any way that we want and then
 

00:01:26.159 --> 00:01:28.230 align:start position:0%
strings in any way that we want and then
add<00:01:26.400><c> them</c><00:01:26.640><c> together</c><00:01:27.439><c> and</c><00:01:27.680><c> we</c><00:01:27.840><c> just</c><00:01:28.000><c> want</c><00:01:28.159><c> to</c>

00:01:28.230 --> 00:01:28.240 align:start position:0%
add them together and we just want to
 

00:01:28.240 --> 00:01:31.990 align:start position:0%
add them together and we just want to
know<00:01:28.640><c> doing</c><00:01:29.119><c> that</c><00:01:29.840><c> can</c><00:01:30.159><c> we</c><00:01:30.400><c> form</c><00:01:31.040><c> the</c><00:01:31.280><c> third</c>

00:01:31.990 --> 00:01:32.000 align:start position:0%
know doing that can we form the third
 

00:01:32.000 --> 00:01:33.910 align:start position:0%
know doing that can we form the third
string<00:01:32.560><c> so</c><00:01:33.040><c> the</c><00:01:33.200><c> first</c><00:01:33.439><c> thing</c><00:01:33.680><c> you</c><00:01:33.759><c> might</c>

00:01:33.910 --> 00:01:33.920 align:start position:0%
string so the first thing you might
 

00:01:33.920 --> 00:01:35.830 align:start position:0%
string so the first thing you might
notice<00:01:34.320><c> is</c><00:01:34.640><c> well</c><00:01:34.960><c> if</c><00:01:35.040><c> we're</c><00:01:35.360><c> taking</c><00:01:35.600><c> the</c>

00:01:35.830 --> 00:01:35.840 align:start position:0%
notice is well if we're taking the
 

00:01:35.840 --> 00:01:37.350 align:start position:0%
notice is well if we're taking the
string<00:01:36.159><c> splitting</c><00:01:36.479><c> them</c><00:01:36.880><c> of</c><00:01:36.960><c> course</c><00:01:37.200><c> the</c>

00:01:37.350 --> 00:01:37.360 align:start position:0%
string splitting them of course the
 

00:01:37.360 --> 00:01:39.429 align:start position:0%
string splitting them of course the
total<00:01:37.680><c> number</c><00:01:37.920><c> of</c><00:01:38.000><c> characters</c><00:01:38.479><c> has</c><00:01:38.720><c> to</c><00:01:38.960><c> match</c>

00:01:39.429 --> 00:01:39.439 align:start position:0%
total number of characters has to match
 

00:01:39.439 --> 00:01:41.749 align:start position:0%
total number of characters has to match
the<00:01:39.600><c> total</c><00:01:39.840><c> number</c><00:01:40.320><c> of</c><00:01:40.479><c> characters</c><00:01:41.119><c> in</c><00:01:41.360><c> string</c>

00:01:41.749 --> 00:01:41.759 align:start position:0%
the total number of characters in string
 

00:01:41.759 --> 00:01:44.149 align:start position:0%
the total number of characters in string
three<00:01:42.079><c> and</c><00:01:42.320><c> yes</c><00:01:42.560><c> that's</c><00:01:42.960><c> true</c><00:01:43.600><c> it</c><00:01:43.759><c> will</c><00:01:44.000><c> have</c>

00:01:44.149 --> 00:01:44.159 align:start position:0%
three and yes that's true it will have
 

00:01:44.159 --> 00:01:45.749 align:start position:0%
three and yes that's true it will have
to<00:01:44.320><c> match</c><00:01:44.560><c> and</c><00:01:44.720><c> in</c><00:01:44.799><c> this</c><00:01:44.960><c> case</c><00:01:45.280><c> it</c><00:01:45.439><c> does</c><00:01:45.680><c> we</c>

00:01:45.749 --> 00:01:45.759 align:start position:0%
to match and in this case it does we
 

00:01:45.759 --> 00:01:47.590 align:start position:0%
to match and in this case it does we
have<00:01:46.000><c> ten</c><00:01:46.240><c> characters</c><00:01:46.799><c> and</c><00:01:46.880><c> the</c><00:01:47.040><c> output</c><00:01:47.439><c> in</c>

00:01:47.590 --> 00:01:47.600 align:start position:0%
have ten characters and the output in
 

00:01:47.600 --> 00:01:49.830 align:start position:0%
have ten characters and the output in
each<00:01:47.759><c> of</c><00:01:47.920><c> these</c><00:01:48.159><c> strings</c><00:01:48.479><c> is</c><00:01:48.720><c> five</c><00:01:49.280><c> five</c><00:01:49.600><c> plus</c>

00:01:49.830 --> 00:01:49.840 align:start position:0%
each of these strings is five five plus
 

00:01:49.840 --> 00:01:52.550 align:start position:0%
each of these strings is five five plus
five<00:01:50.159><c> equals</c><00:01:50.640><c> ten</c><00:01:51.280><c> so</c><00:01:51.520><c> once</c><00:01:51.840><c> you</c><00:01:52.000><c> kind</c><00:01:52.240><c> of</c>

00:01:52.550 --> 00:01:52.560 align:start position:0%
five equals ten so once you kind of
 

00:01:52.560 --> 00:01:54.630 align:start position:0%
five equals ten so once you kind of
understand<00:01:53.200><c> what</c><00:01:53.439><c> an</c><00:01:53.600><c> interleaving</c><00:01:54.240><c> string</c>

00:01:54.630 --> 00:01:54.640 align:start position:0%
understand what an interleaving string
 

00:01:54.640 --> 00:01:56.709 align:start position:0%
understand what an interleaving string
actually<00:01:55.119><c> is</c><00:01:55.280><c> the</c><00:01:55.520><c> logic</c><00:01:56.000><c> of</c><00:01:56.079><c> this</c><00:01:56.320><c> problem</c>

00:01:56.709 --> 00:01:56.719 align:start position:0%
actually is the logic of this problem
 

00:01:56.719 --> 00:01:59.510 align:start position:0%
actually is the logic of this problem
isn't<00:01:57.119><c> too</c><00:01:57.439><c> complicated</c><00:01:58.079><c> right</c><00:01:58.560><c> for</c><00:01:58.799><c> example</c>

00:01:59.510 --> 00:01:59.520 align:start position:0%
isn't too complicated right for example
 

00:01:59.520 --> 00:02:01.510 align:start position:0%
isn't too complicated right for example
we<00:01:59.840><c> see</c><00:02:00.079><c> that</c><00:02:00.240><c> the</c><00:02:00.399><c> first</c><00:02:00.799><c> character</c><00:02:01.280><c> in</c>

00:02:01.510 --> 00:02:01.520 align:start position:0%
we see that the first character in
 

00:02:01.520 --> 00:02:05.030 align:start position:0%
we see that the first character in
string<00:02:02.079><c> three</c><00:02:02.560><c> is</c><00:02:02.880><c> a</c><00:02:03.280><c> right</c><00:02:03.680><c> so</c><00:02:04.000><c> for</c><00:02:04.240><c> sure</c><00:02:04.799><c> we</c>

00:02:05.030 --> 00:02:05.040 align:start position:0%
string three is a right so for sure we
 

00:02:05.040 --> 00:02:07.429 align:start position:0%
string three is a right so for sure we
need<00:02:05.439><c> at</c><00:02:05.600><c> least</c><00:02:06.079><c> one</c><00:02:06.320><c> of</c><00:02:06.399><c> the</c><00:02:06.560><c> characters</c><00:02:07.200><c> from</c>

00:02:07.429 --> 00:02:07.439 align:start position:0%
need at least one of the characters from
 

00:02:07.439 --> 00:02:10.790 align:start position:0%
need at least one of the characters from
s1<00:02:08.080><c> or</c><00:02:08.319><c> s2</c><00:02:08.879><c> to</c><00:02:09.280><c> start</c><00:02:09.759><c> with</c><00:02:10.000><c> an</c><00:02:10.239><c> a</c><00:02:10.560><c> right</c>

00:02:10.790 --> 00:02:10.800 align:start position:0%
s1 or s2 to start with an a right
 

00:02:10.800 --> 00:02:12.630 align:start position:0%
s1 or s2 to start with an a right
because<00:02:11.039><c> we</c><00:02:11.120><c> can't</c><00:02:11.360><c> just</c><00:02:11.599><c> take</c><00:02:11.840><c> an</c><00:02:12.000><c> a</c><00:02:12.239><c> from</c><00:02:12.400><c> the</c>

00:02:12.630 --> 00:02:12.640 align:start position:0%
because we can't just take an a from the
 

00:02:12.640 --> 00:02:14.470 align:start position:0%
because we can't just take an a from the
middle<00:02:12.959><c> of</c><00:02:13.120><c> one</c><00:02:13.280><c> of</c><00:02:13.440><c> these</c><00:02:13.680><c> strings</c><00:02:14.160><c> and</c><00:02:14.239><c> then</c>

00:02:14.470 --> 00:02:14.480 align:start position:0%
middle of one of these strings and then
 

00:02:14.480 --> 00:02:16.390 align:start position:0%
middle of one of these strings and then
say<00:02:14.720><c> okay</c><00:02:14.959><c> we'll</c><00:02:15.120><c> put</c><00:02:15.360><c> that</c><00:02:15.520><c> at</c><00:02:15.680><c> the</c><00:02:15.760><c> beginning</c>

00:02:16.390 --> 00:02:16.400 align:start position:0%
say okay we'll put that at the beginning
 

00:02:16.400 --> 00:02:18.229 align:start position:0%
say okay we'll put that at the beginning
because<00:02:16.640><c> remember</c><00:02:17.040><c> the</c><00:02:17.200><c> relative</c><00:02:17.760><c> order</c><00:02:18.080><c> of</c>

00:02:18.229 --> 00:02:18.239 align:start position:0%
because remember the relative order of
 

00:02:18.239 --> 00:02:20.309 align:start position:0%
because remember the relative order of
each<00:02:18.400><c> of</c><00:02:18.480><c> these</c><00:02:18.720><c> strings</c><00:02:19.360><c> has</c><00:02:19.599><c> to</c><00:02:19.760><c> be</c>

00:02:20.309 --> 00:02:20.319 align:start position:0%
each of these strings has to be
 

00:02:20.319 --> 00:02:22.229 align:start position:0%
each of these strings has to be
maintained<00:02:20.879><c> so</c><00:02:21.040><c> at</c><00:02:21.120><c> least</c><00:02:21.520><c> one</c><00:02:21.680><c> of</c><00:02:21.840><c> them</c><00:02:22.080><c> has</c>

00:02:22.229 --> 00:02:22.239 align:start position:0%
maintained so at least one of them has
 

00:02:22.239 --> 00:02:24.150 align:start position:0%
maintained so at least one of them has
to<00:02:22.400><c> start</c><00:02:22.640><c> with</c><00:02:22.800><c> an</c><00:02:23.040><c> a</c><00:02:23.440><c> and</c><00:02:23.599><c> we</c><00:02:23.680><c> can</c><00:02:23.840><c> see</c><00:02:24.000><c> that</c>

00:02:24.150 --> 00:02:24.160 align:start position:0%
to start with an a and we can see that
 

00:02:24.160 --> 00:02:26.229 align:start position:0%
to start with an a and we can see that
the<00:02:24.319><c> first</c><00:02:24.560><c> string</c><00:02:24.959><c> over</c><00:02:25.120><c> here</c><00:02:25.599><c> does</c><00:02:25.920><c> start</c>

00:02:26.229 --> 00:02:26.239 align:start position:0%
the first string over here does start
 

00:02:26.239 --> 00:02:28.150 align:start position:0%
the first string over here does start
with<00:02:26.400><c> an</c><00:02:26.640><c> a</c><00:02:27.040><c> right</c><00:02:27.280><c> so</c><00:02:27.440><c> it's</c><00:02:27.599><c> kind</c><00:02:27.760><c> of</c><00:02:27.840><c> brute</c>

00:02:28.150 --> 00:02:28.160 align:start position:0%
with an a right so it's kind of brute
 

00:02:28.160 --> 00:02:29.830 align:start position:0%
with an a right so it's kind of brute
force<00:02:28.400><c> we're</c><00:02:28.560><c> just</c><00:02:28.800><c> comparing</c><00:02:29.280><c> the</c><00:02:29.440><c> first</c>

00:02:29.830 --> 00:02:29.840 align:start position:0%
force we're just comparing the first
 

00:02:29.840 --> 00:02:32.070 align:start position:0%
force we're just comparing the first
positions<00:02:30.400><c> of</c><00:02:30.640><c> each</c><00:02:30.879><c> of</c><00:02:31.040><c> the</c><00:02:31.200><c> charac</c><00:02:31.599><c> of</c><00:02:31.760><c> the</c>

00:02:32.070 --> 00:02:32.080 align:start position:0%
positions of each of the charac of the
 

00:02:32.080 --> 00:02:34.150 align:start position:0%
positions of each of the charac of the
input<00:02:32.319><c> strings</c><00:02:32.640><c> right</c><00:02:32.800><c> so</c><00:02:33.040><c> now</c><00:02:33.200><c> we</c><00:02:33.360><c> have</c><00:02:33.519><c> a</c><00:02:33.680><c> d</c>

00:02:34.150 --> 00:02:34.160 align:start position:0%
input strings right so now we have a d
 

00:02:34.160 --> 00:02:36.550 align:start position:0%
input strings right so now we have a d
and<00:02:34.400><c> we</c><00:02:34.480><c> can</c><00:02:34.640><c> choose</c><00:02:35.120><c> between</c><00:02:35.519><c> an</c><00:02:35.680><c> a</c><00:02:36.000><c> and</c><00:02:36.160><c> a</c><00:02:36.239><c> d</c>

00:02:36.550 --> 00:02:36.560 align:start position:0%
and we can choose between an a and a d
 

00:02:36.560 --> 00:02:38.550 align:start position:0%
and we can choose between an a and a d
in<00:02:36.720><c> either</c><00:02:36.959><c> of</c><00:02:37.120><c> the</c><00:02:37.280><c> strings</c><00:02:38.000><c> but</c><00:02:38.160><c> we're</c>

00:02:38.550 --> 00:02:38.560 align:start position:0%
in either of the strings but we're
 

00:02:38.560 --> 00:02:40.710 align:start position:0%
in either of the strings but we're
looking<00:02:38.879><c> for</c><00:02:39.200><c> an</c><00:02:39.440><c> a</c><00:02:39.760><c> in</c><00:02:39.920><c> the</c><00:02:40.000><c> target</c><00:02:40.319><c> string</c><00:02:40.560><c> so</c>

00:02:40.710 --> 00:02:40.720 align:start position:0%
looking for an a in the target string so
 

00:02:40.720 --> 00:02:42.550 align:start position:0%
looking for an a in the target string so
we're<00:02:40.879><c> going</c><00:02:40.959><c> to</c><00:02:41.120><c> again</c><00:02:41.519><c> pick</c><00:02:41.760><c> from</c><00:02:42.080><c> the</c><00:02:42.319><c> first</c>

00:02:42.550 --> 00:02:42.560 align:start position:0%
we're going to again pick from the first
 

00:02:42.560 --> 00:02:45.430 align:start position:0%
we're going to again pick from the first
string<00:02:43.440><c> and</c><00:02:44.000><c> we</c><00:02:44.160><c> can</c><00:02:44.400><c> cross</c><00:02:44.720><c> that</c><00:02:44.959><c> out</c><00:02:45.120><c> so</c><00:02:45.280><c> now</c>

00:02:45.430 --> 00:02:45.440 align:start position:0%
string and we can cross that out so now
 

00:02:45.440 --> 00:02:48.229 align:start position:0%
string and we can cross that out so now
we<00:02:45.680><c> have</c><00:02:46.160><c> another</c><00:02:46.879><c> sub</c><00:02:47.200><c> problem</c><00:02:47.760><c> we</c><00:02:47.920><c> have</c><00:02:48.080><c> the</c>

00:02:48.229 --> 00:02:48.239 align:start position:0%
we have another sub problem we have the
 

00:02:48.239 --> 00:02:50.390 align:start position:0%
we have another sub problem we have the
remaining<00:02:48.720><c> portion</c><00:02:49.120><c> of</c><00:02:49.280><c> this</c><00:02:49.680><c> and</c><00:02:49.840><c> the</c><00:02:50.239><c> and</c>

00:02:50.390 --> 00:02:50.400 align:start position:0%
remaining portion of this and the and
 

00:02:50.400 --> 00:02:53.190 align:start position:0%
remaining portion of this and the and
the<00:02:50.640><c> entire</c><00:02:51.200><c> portion</c><00:02:51.680><c> of</c><00:02:52.080><c> this</c><00:02:52.319><c> string</c><00:02:52.959><c> right</c>

00:02:53.190 --> 00:02:53.200 align:start position:0%
the entire portion of this string right
 

00:02:53.200 --> 00:02:55.509 align:start position:0%
the entire portion of this string right
so<00:02:53.440><c> and</c><00:02:53.519><c> we're</c><00:02:53.760><c> kind</c><00:02:53.920><c> of</c><00:02:54.080><c> just</c><00:02:54.560><c> brute</c><00:02:55.040><c> forcing</c>

00:02:55.509 --> 00:02:55.519 align:start position:0%
so and we're kind of just brute forcing
 

00:02:55.519 --> 00:02:57.270 align:start position:0%
so and we're kind of just brute forcing
it<00:02:55.840><c> obviously</c><00:02:56.319><c> if</c><00:02:56.480><c> we</c><00:02:56.560><c> got</c><00:02:56.720><c> to</c><00:02:56.879><c> a</c><00:02:56.959><c> character</c>

00:02:57.270 --> 00:02:57.280 align:start position:0%
it obviously if we got to a character
 

00:02:57.280 --> 00:02:58.790 align:start position:0%
it obviously if we got to a character
such<00:02:57.599><c> you</c><00:02:57.760><c> know</c><00:02:57.840><c> let's</c><00:02:58.000><c> say</c><00:02:58.159><c> at</c><00:02:58.239><c> this</c><00:02:58.400><c> position</c>

00:02:58.790 --> 00:02:58.800 align:start position:0%
such you know let's say at this position
 

00:02:58.800 --> 00:03:00.869 align:start position:0%
such you know let's say at this position
we<00:02:58.879><c> had</c><00:02:59.040><c> a</c><00:02:59.200><c> z</c><00:02:59.760><c> but</c><00:03:00.080><c> you</c><00:03:00.159><c> know</c><00:03:00.400><c> when</c><00:03:00.560><c> you</c><00:03:00.640><c> look</c><00:03:00.800><c> at</c>

00:03:00.869 --> 00:03:00.879 align:start position:0%
we had a z but you know when you look at
 

00:03:00.879 --> 00:03:02.550 align:start position:0%
we had a z but you know when you look at
both<00:03:01.120><c> of</c><00:03:01.440><c> the</c><00:03:01.519><c> strings</c><00:03:01.840><c> that</c><00:03:02.000><c> we</c><00:03:02.080><c> have</c><00:03:02.239><c> neither</c>

00:03:02.550 --> 00:03:02.560 align:start position:0%
both of the strings that we have neither
 

00:03:02.560 --> 00:03:04.229 align:start position:0%
both of the strings that we have neither
of<00:03:02.640><c> them</c><00:03:02.800><c> have</c><00:03:02.959><c> a</c><00:03:03.120><c> z</c><00:03:03.360><c> in</c><00:03:03.440><c> that</c><00:03:03.680><c> case</c><00:03:03.920><c> it</c><00:03:04.080><c> would</c>

00:03:04.229 --> 00:03:04.239 align:start position:0%
of them have a z in that case it would
 

00:03:04.239 --> 00:03:06.710 align:start position:0%
of them have a z in that case it would
basically<00:03:04.640><c> mean</c><00:03:04.959><c> it's</c><00:03:05.280><c> impossible</c><00:03:06.239><c> for</c><00:03:06.480><c> us</c><00:03:06.640><c> to</c>

00:03:06.710 --> 00:03:06.720 align:start position:0%
basically mean it's impossible for us to
 

00:03:06.720 --> 00:03:09.030 align:start position:0%
basically mean it's impossible for us to
continue<00:03:07.280><c> at</c><00:03:07.360><c> this</c><00:03:07.599><c> point</c><00:03:08.239><c> but</c><00:03:08.560><c> what</c><00:03:08.800><c> if</c><00:03:08.879><c> we</c>

00:03:09.030 --> 00:03:09.040 align:start position:0%
continue at this point but what if we
 

00:03:09.040 --> 00:03:11.830 align:start position:0%
continue at this point but what if we
had<00:03:09.200><c> the</c><00:03:09.440><c> opposite</c><00:03:09.840><c> what</c><00:03:10.000><c> if</c><00:03:10.080><c> we</c><00:03:10.239><c> had</c><00:03:10.480><c> a</c><00:03:10.800><c> b</c><00:03:11.440><c> over</c>

00:03:11.830 --> 00:03:11.840 align:start position:0%
had the opposite what if we had a b over
 

00:03:11.840 --> 00:03:13.750 align:start position:0%
had the opposite what if we had a b over
here<00:03:12.239><c> and</c><00:03:12.480><c> you</c><00:03:12.560><c> can</c><00:03:12.720><c> see</c><00:03:12.879><c> that</c><00:03:13.040><c> this</c><00:03:13.280><c> position</c>

00:03:13.750 --> 00:03:13.760 align:start position:0%
here and you can see that this position
 

00:03:13.760 --> 00:03:16.470 align:start position:0%
here and you can see that this position
is<00:03:14.080><c> also</c><00:03:14.560><c> a</c><00:03:14.720><c> b</c><00:03:15.040><c> right</c><00:03:15.200><c> and</c><00:03:15.280><c> let's</c><00:03:15.519><c> say</c><00:03:16.159><c> we</c><00:03:16.239><c> were</c>

00:03:16.470 --> 00:03:16.480 align:start position:0%
is also a b right and let's say we were
 

00:03:16.480 --> 00:03:18.390 align:start position:0%
is also a b right and let's say we were
looking<00:03:16.800><c> for</c><00:03:17.040><c> a</c><00:03:17.200><c> b</c><00:03:17.440><c> right</c><00:03:17.599><c> so</c><00:03:17.760><c> then</c><00:03:17.920><c> which</c><00:03:18.159><c> one</c>

00:03:18.390 --> 00:03:18.400 align:start position:0%
looking for a b right so then which one
 

00:03:18.400 --> 00:03:19.830 align:start position:0%
looking for a b right so then which one
of<00:03:18.480><c> these</c><00:03:18.720><c> are</c><00:03:18.800><c> we</c><00:03:18.959><c> gonna</c><00:03:19.200><c> take</c><00:03:19.440><c> are</c><00:03:19.519><c> we</c><00:03:19.680><c> gonna</c>

00:03:19.830 --> 00:03:19.840 align:start position:0%
of these are we gonna take are we gonna
 

00:03:19.840 --> 00:03:22.229 align:start position:0%
of these are we gonna take are we gonna
take<00:03:20.000><c> the</c><00:03:20.159><c> b</c><00:03:20.400><c> from</c><00:03:20.720><c> string</c><00:03:21.120><c> two</c><00:03:21.440><c> or</c><00:03:21.599><c> the</c><00:03:21.760><c> b</c><00:03:22.000><c> from</c>

00:03:22.229 --> 00:03:22.239 align:start position:0%
take the b from string two or the b from
 

00:03:22.239 --> 00:03:24.789 align:start position:0%
take the b from string two or the b from
string<00:03:22.560><c> one</c><00:03:23.040><c> that's</c><00:03:23.440><c> the</c><00:03:23.680><c> back</c><00:03:24.000><c> tracking</c><00:03:24.560><c> or</c>

00:03:24.789 --> 00:03:24.799 align:start position:0%
string one that's the back tracking or
 

00:03:24.799 --> 00:03:26.390 align:start position:0%
string one that's the back tracking or
the<00:03:25.040><c> brute</c><00:03:25.280><c> force</c><00:03:25.599><c> portion</c><00:03:25.920><c> right</c><00:03:26.159><c> we</c><00:03:26.239><c> could</c>

00:03:26.390 --> 00:03:26.400 align:start position:0%
the brute force portion right we could
 

00:03:26.400 --> 00:03:28.550 align:start position:0%
the brute force portion right we could
take<00:03:26.640><c> either</c><00:03:27.040><c> of</c><00:03:27.200><c> them</c><00:03:27.440><c> so</c><00:03:27.599><c> we</c><00:03:28.080><c> pretty</c><00:03:28.319><c> much</c>

00:03:28.550 --> 00:03:28.560 align:start position:0%
take either of them so we pretty much
 

00:03:28.560 --> 00:03:30.229 align:start position:0%
take either of them so we pretty much
have<00:03:28.720><c> to</c><00:03:28.799><c> make</c><00:03:29.040><c> a</c><00:03:29.120><c> decision</c><00:03:29.599><c> in</c><00:03:29.680><c> our</c><00:03:29.840><c> decision</c>

00:03:30.229 --> 00:03:30.239 align:start position:0%
have to make a decision in our decision
 

00:03:30.239 --> 00:03:31.750 align:start position:0%
have to make a decision in our decision
tree<00:03:30.400><c> that</c><00:03:30.560><c> we</c><00:03:30.720><c> are</c><00:03:30.799><c> gonna</c><00:03:31.040><c> choose</c><00:03:31.360><c> both</c><00:03:31.599><c> we're</c>

00:03:31.750 --> 00:03:31.760 align:start position:0%
tree that we are gonna choose both we're
 

00:03:31.760 --> 00:03:34.070 align:start position:0%
tree that we are gonna choose both we're
going<00:03:31.840><c> to</c><00:03:31.920><c> see</c><00:03:32.319><c> if</c><00:03:32.560><c> we</c><00:03:32.720><c> do</c><00:03:32.959><c> it</c><00:03:33.120><c> either</c><00:03:33.519><c> of</c><00:03:33.760><c> these</c>

00:03:34.070 --> 00:03:34.080 align:start position:0%
going to see if we do it either of these
 

00:03:34.080 --> 00:03:36.630 align:start position:0%
going to see if we do it either of these
ways<00:03:34.720><c> is</c><00:03:34.879><c> it</c><00:03:35.040><c> possible</c><00:03:35.519><c> for</c><00:03:35.680><c> us</c><00:03:36.000><c> to</c><00:03:36.159><c> take</c><00:03:36.400><c> these</c>

00:03:36.630 --> 00:03:36.640 align:start position:0%
ways is it possible for us to take these
 

00:03:36.640 --> 00:03:39.030 align:start position:0%
ways is it possible for us to take these
two<00:03:36.879><c> strings</c><00:03:37.519><c> interleave</c><00:03:38.159><c> them</c><00:03:38.400><c> together</c><00:03:38.799><c> to</c>

00:03:39.030 --> 00:03:39.040 align:start position:0%
two strings interleave them together to
 

00:03:39.040 --> 00:03:40.550 align:start position:0%
two strings interleave them together to
build<00:03:39.280><c> the</c><00:03:39.440><c> output</c><00:03:39.760><c> string</c><00:03:40.159><c> right</c><00:03:40.319><c> because</c>

00:03:40.550 --> 00:03:40.560 align:start position:0%
build the output string right because
 

00:03:40.560 --> 00:03:42.710 align:start position:0%
build the output string right because
maybe<00:03:40.959><c> one</c><00:03:41.120><c> of</c><00:03:41.200><c> the</c><00:03:41.360><c> ways</c><00:03:41.840><c> works</c><00:03:42.319><c> but</c><00:03:42.480><c> the</c>

00:03:42.710 --> 00:03:42.720 align:start position:0%
maybe one of the ways works but the
 

00:03:42.720 --> 00:03:44.869 align:start position:0%
maybe one of the ways works but the
other<00:03:42.959><c> way</c><00:03:43.280><c> doesn't</c><00:03:43.680><c> we</c><00:03:43.840><c> do</c><00:03:44.000><c> have</c><00:03:44.159><c> to</c><00:03:44.319><c> try</c><00:03:44.640><c> both</c>

00:03:44.869 --> 00:03:44.879 align:start position:0%
other way doesn't we do have to try both
 

00:03:44.879 --> 00:03:47.350 align:start position:0%
other way doesn't we do have to try both
of<00:03:45.040><c> the</c><00:03:45.120><c> ways</c><00:03:45.519><c> but</c><00:03:45.760><c> it</c><00:03:45.840><c> turns</c><00:03:46.159><c> out</c><00:03:46.400><c> we</c><00:03:46.560><c> can</c><00:03:46.879><c> use</c>

00:03:47.350 --> 00:03:47.360 align:start position:0%
of the ways but it turns out we can use
 

00:03:47.360 --> 00:03:49.509 align:start position:0%
of the ways but it turns out we can use
a<00:03:47.519><c> dynamic</c><00:03:48.000><c> programming</c><00:03:48.560><c> technique</c><00:03:49.120><c> called</c>

00:03:49.509 --> 00:03:49.519 align:start position:0%
a dynamic programming technique called
 

00:03:49.519 --> 00:03:52.229 align:start position:0%
a dynamic programming technique called
caching<00:03:50.400><c> where</c><00:03:50.640><c> we</c><00:03:50.879><c> can</c><00:03:51.360><c> eliminate</c><00:03:51.840><c> a</c><00:03:51.920><c> bunch</c>

00:03:52.229 --> 00:03:52.239 align:start position:0%
caching where we can eliminate a bunch
 

00:03:52.239 --> 00:03:54.309 align:start position:0%
caching where we can eliminate a bunch
of<00:03:52.319><c> repeated</c><00:03:52.799><c> work</c><00:03:53.040><c> so</c><00:03:53.280><c> therefore</c><00:03:53.840><c> the</c><00:03:54.080><c> time</c>

00:03:54.309 --> 00:03:54.319 align:start position:0%
of repeated work so therefore the time
 

00:03:54.319 --> 00:03:55.750 align:start position:0%
of repeated work so therefore the time
complexity<00:03:54.799><c> of</c><00:03:54.879><c> the</c><00:03:54.959><c> solution</c><00:03:55.280><c> can</c><00:03:55.439><c> actually</c>

00:03:55.750 --> 00:03:55.760 align:start position:0%
complexity of the solution can actually
 

00:03:55.760 --> 00:03:59.270 align:start position:0%
complexity of the solution can actually
be<00:03:55.920><c> broken</c><00:03:56.239><c> down</c><00:03:56.400><c> to</c><00:03:56.720><c> m</c><00:03:57.280><c> times</c><00:03:58.080><c> n</c><00:03:58.640><c> where</c><00:03:58.959><c> m</c><00:03:59.200><c> is</c>

00:03:59.270 --> 00:03:59.280 align:start position:0%
be broken down to m times n where m is
 

00:03:59.280 --> 00:04:01.589 align:start position:0%
be broken down to m times n where m is
the<00:03:59.439><c> size</c><00:03:59.760><c> of</c><00:03:59.920><c> one</c><00:04:00.159><c> string</c><00:04:00.480><c> and</c><00:04:00.720><c> n</c><00:04:00.959><c> is</c><00:04:01.040><c> the</c><00:04:01.280><c> size</c>

00:04:01.589 --> 00:04:01.599 align:start position:0%
the size of one string and n is the size
 

00:04:01.599 --> 00:04:04.309 align:start position:0%
the size of one string and n is the size
of<00:04:01.680><c> the</c><00:04:01.920><c> other</c><00:04:02.159><c> string</c><00:04:02.799><c> and</c><00:04:03.200><c> you</c><00:04:03.280><c> can</c><00:04:03.519><c> actually</c>

00:04:04.309 --> 00:04:04.319 align:start position:0%
of the other string and you can actually
 

00:04:04.319 --> 00:04:05.670 align:start position:0%
of the other string and you can actually
instead<00:04:04.640><c> of</c><00:04:04.720><c> doing</c><00:04:05.040><c> caching</c><00:04:05.439><c> you</c><00:04:05.519><c> can</c>

00:04:05.670 --> 00:04:05.680 align:start position:0%
instead of doing caching you can
 

00:04:05.680 --> 00:04:07.670 align:start position:0%
instead of doing caching you can
actually<00:04:05.920><c> do</c><00:04:06.159><c> a</c><00:04:06.319><c> true</c><00:04:06.640><c> dynamic</c><00:04:07.120><c> programming</c>

00:04:07.670 --> 00:04:07.680 align:start position:0%
actually do a true dynamic programming
 

00:04:07.680 --> 00:04:09.589 align:start position:0%
actually do a true dynamic programming
solution<00:04:08.319><c> that</c><00:04:08.480><c> will</c><00:04:08.720><c> also</c><00:04:09.040><c> give</c><00:04:09.200><c> you</c><00:04:09.360><c> this</c>

00:04:09.589 --> 00:04:09.599 align:start position:0%
solution that will also give you this
 

00:04:09.599 --> 00:04:11.270 align:start position:0%
solution that will also give you this
time<00:04:09.840><c> complexity</c><00:04:10.400><c> i'll</c><00:04:10.560><c> explain</c><00:04:10.959><c> a</c><00:04:11.120><c> little</c>

00:04:11.270 --> 00:04:11.280 align:start position:0%
time complexity i'll explain a little
 

00:04:11.280 --> 00:04:13.589 align:start position:0%
time complexity i'll explain a little
bit<00:04:11.439><c> about</c><00:04:11.760><c> both</c><00:04:12.000><c> of</c><00:04:12.159><c> those</c><00:04:12.879><c> so</c><00:04:13.120><c> let</c><00:04:13.280><c> me</c><00:04:13.439><c> just</c>

00:04:13.589 --> 00:04:13.599 align:start position:0%
bit about both of those so let me just
 

00:04:13.599 --> 00:04:15.190 align:start position:0%
bit about both of those so let me just
kind<00:04:13.760><c> of</c><00:04:13.920><c> show</c><00:04:14.080><c> you</c><00:04:14.159><c> what</c><00:04:14.319><c> the</c><00:04:14.480><c> decision</c><00:04:14.959><c> tree</c>

00:04:15.190 --> 00:04:15.200 align:start position:0%
kind of show you what the decision tree
 

00:04:15.200 --> 00:04:16.550 align:start position:0%
kind of show you what the decision tree
for<00:04:15.360><c> this</c><00:04:15.599><c> problem</c><00:04:15.920><c> would</c><00:04:16.079><c> look</c><00:04:16.320><c> like</c><00:04:16.479><c> and</c>

00:04:16.550 --> 00:04:16.560 align:start position:0%
for this problem would look like and
 

00:04:16.560 --> 00:04:17.990 align:start position:0%
for this problem would look like and
then<00:04:16.720><c> how</c><00:04:16.880><c> we're</c><00:04:17.040><c> actually</c><00:04:17.359><c> going</c><00:04:17.519><c> to</c><00:04:17.600><c> do</c><00:04:17.759><c> the</c>

00:04:17.990 --> 00:04:18.000 align:start position:0%
then how we're actually going to do the
 

00:04:18.000 --> 00:04:20.469 align:start position:0%
then how we're actually going to do the
caching<00:04:18.799><c> so</c><00:04:19.120><c> notice</c><00:04:19.600><c> how</c><00:04:20.079><c> we're</c><00:04:20.239><c> going</c><00:04:20.400><c> to</c>

00:04:20.469 --> 00:04:20.479 align:start position:0%
caching so notice how we're going to
 

00:04:20.479 --> 00:04:22.550 align:start position:0%
caching so notice how we're going to
start<00:04:20.720><c> at</c><00:04:20.799><c> the</c><00:04:20.959><c> beginning</c><00:04:21.440><c> of</c><00:04:21.840><c> both</c><00:04:22.240><c> of</c><00:04:22.400><c> the</c>

00:04:22.550 --> 00:04:22.560 align:start position:0%
start at the beginning of both of the
 

00:04:22.560 --> 00:04:23.830 align:start position:0%
start at the beginning of both of the
strings<00:04:22.880><c> and</c><00:04:22.960><c> we're</c><00:04:23.120><c> also</c><00:04:23.360><c> going</c><00:04:23.440><c> to</c><00:04:23.520><c> start</c><00:04:23.759><c> at</c>

00:04:23.830 --> 00:04:23.840 align:start position:0%
strings and we're also going to start at
 

00:04:23.840 --> 00:04:25.110 align:start position:0%
strings and we're also going to start at
the<00:04:23.919><c> beginning</c><00:04:24.240><c> of</c><00:04:24.320><c> the</c><00:04:24.479><c> third</c><00:04:24.720><c> string</c><00:04:24.960><c> right</c>

00:04:25.110 --> 00:04:25.120 align:start position:0%
the beginning of the third string right
 

00:04:25.120 --> 00:04:27.270 align:start position:0%
the beginning of the third string right
we're<00:04:25.440><c> looking</c><00:04:25.919><c> for</c><00:04:26.160><c> this</c><00:04:26.479><c> character</c><00:04:26.880><c> can</c><00:04:27.040><c> we</c>

00:04:27.270 --> 00:04:27.280 align:start position:0%
we're looking for this character can we
 

00:04:27.280 --> 00:04:29.830 align:start position:0%
we're looking for this character can we
get<00:04:27.440><c> it</c><00:04:27.520><c> from</c><00:04:27.840><c> either</c><00:04:28.560><c> of</c><00:04:28.960><c> string</c><00:04:29.360><c> one</c><00:04:29.600><c> or</c>

00:04:29.830 --> 00:04:29.840 align:start position:0%
get it from either of string one or
 

00:04:29.840 --> 00:04:31.270 align:start position:0%
get it from either of string one or
string<00:04:30.160><c> two</c><00:04:30.400><c> right</c><00:04:30.560><c> so</c><00:04:30.720><c> that's</c><00:04:30.880><c> kind</c><00:04:31.040><c> of</c><00:04:31.120><c> how</c>

00:04:31.270 --> 00:04:31.280 align:start position:0%
string two right so that's kind of how
 

00:04:31.280 --> 00:04:33.189 align:start position:0%
string two right so that's kind of how
our<00:04:31.440><c> decision</c><00:04:31.840><c> tree</c><00:04:32.080><c> is</c><00:04:32.240><c> gonna</c><00:04:32.479><c> work</c><00:04:33.040><c> we're</c>

00:04:33.189 --> 00:04:33.199 align:start position:0%
our decision tree is gonna work we're
 

00:04:33.199 --> 00:04:35.670 align:start position:0%
our decision tree is gonna work we're
gonna<00:04:33.360><c> have</c><00:04:33.600><c> one</c><00:04:33.840><c> pointer</c><00:04:34.240><c> let's</c><00:04:34.400><c> call</c><00:04:34.639><c> it</c><00:04:34.800><c> i1</c>

00:04:35.670 --> 00:04:35.680 align:start position:0%
gonna have one pointer let's call it i1
 

00:04:35.680 --> 00:04:36.790 align:start position:0%
gonna have one pointer let's call it i1
which<00:04:35.919><c> is</c><00:04:36.080><c> going</c><00:04:36.160><c> to</c><00:04:36.240><c> represent</c><00:04:36.639><c> what</c>

00:04:36.790 --> 00:04:36.800 align:start position:0%
which is going to represent what
 

00:04:36.800 --> 00:04:38.790 align:start position:0%
which is going to represent what
position<00:04:37.199><c> we're</c><00:04:37.440><c> at</c><00:04:37.680><c> in</c><00:04:37.919><c> s1</c><00:04:38.479><c> and</c><00:04:38.560><c> we're</c><00:04:38.720><c> gonna</c>

00:04:38.790 --> 00:04:38.800 align:start position:0%
position we're at in s1 and we're gonna
 

00:04:38.800 --> 00:04:41.670 align:start position:0%
position we're at in s1 and we're gonna
have<00:04:38.960><c> another</c><00:04:39.280><c> pointer</c><00:04:39.600><c> let's</c><00:04:39.840><c> call</c><00:04:40.080><c> it</c><00:04:40.560><c> i</c><00:04:41.360><c> two</c>

00:04:41.670 --> 00:04:41.680 align:start position:0%
have another pointer let's call it i two
 

00:04:41.680 --> 00:04:43.430 align:start position:0%
have another pointer let's call it i two
it's<00:04:41.919><c> a</c><00:04:41.919><c> little</c><00:04:42.080><c> bit</c><00:04:42.240><c> messy</c><00:04:42.560><c> but</c><00:04:42.720><c> i2</c><00:04:43.120><c> is</c><00:04:43.199><c> gonna</c>

00:04:43.430 --> 00:04:43.440 align:start position:0%
it's a little bit messy but i2 is gonna
 

00:04:43.440 --> 00:04:45.110 align:start position:0%
it's a little bit messy but i2 is gonna
represent<00:04:43.759><c> the</c><00:04:43.919><c> position</c><00:04:44.240><c> we're</c><00:04:44.400><c> at</c><00:04:44.720><c> in</c>

00:04:45.110 --> 00:04:45.120 align:start position:0%
represent the position we're at in
 

00:04:45.120 --> 00:04:47.510 align:start position:0%
represent the position we're at in
string<00:04:45.600><c> two</c><00:04:46.080><c> and</c><00:04:46.560><c> we're</c><00:04:46.720><c> gonna</c><00:04:46.880><c> have</c><00:04:47.040><c> a</c><00:04:47.199><c> third</c>

00:04:47.510 --> 00:04:47.520 align:start position:0%
string two and we're gonna have a third
 

00:04:47.520 --> 00:04:50.310 align:start position:0%
string two and we're gonna have a third
pointer<00:04:48.000><c> over</c><00:04:48.240><c> here</c><00:04:48.639><c> let's</c><00:04:48.880><c> call</c><00:04:49.040><c> it</c><00:04:49.199><c> i3</c><00:04:49.919><c> right</c>

00:04:50.310 --> 00:04:50.320 align:start position:0%
pointer over here let's call it i3 right
 

00:04:50.320 --> 00:04:53.670 align:start position:0%
pointer over here let's call it i3 right
but<00:04:50.880><c> do</c><00:04:51.040><c> you</c><00:04:51.280><c> notice</c><00:04:52.000><c> that</c><00:04:52.320><c> this</c><00:04:52.720><c> pointer</c><00:04:53.360><c> is</c>

00:04:53.670 --> 00:04:53.680 align:start position:0%
but do you notice that this pointer is
 

00:04:53.680 --> 00:04:56.550 align:start position:0%
but do you notice that this pointer is
always<00:04:54.160><c> going</c><00:04:54.320><c> to</c><00:04:54.479><c> be</c><00:04:54.720><c> the</c><00:04:54.880><c> addition</c><00:04:55.440><c> of</c><00:04:55.680><c> i1</c>

00:04:56.550 --> 00:04:56.560 align:start position:0%
always going to be the addition of i1
 

00:04:56.560 --> 00:04:59.030 align:start position:0%
always going to be the addition of i1
and<00:04:56.720><c> i2</c><00:04:57.440><c> if</c><00:04:57.520><c> we</c><00:04:57.759><c> add</c><00:04:58.080><c> these</c><00:04:58.320><c> pointers</c><00:04:58.720><c> together</c>

00:04:59.030 --> 00:04:59.040 align:start position:0%
and i2 if we add these pointers together
 

00:04:59.040 --> 00:05:00.390 align:start position:0%
and i2 if we add these pointers together
we're<00:04:59.280><c> always</c><00:04:59.520><c> going</c><00:04:59.600><c> to</c><00:04:59.680><c> get</c><00:04:59.840><c> this</c><00:05:00.000><c> one</c><00:05:00.240><c> right</c>

00:05:00.390 --> 00:05:00.400 align:start position:0%
we're always going to get this one right
 

00:05:00.400 --> 00:05:02.870 align:start position:0%
we're always going to get this one right
because<00:05:00.720><c> notice</c><00:05:01.120><c> how</c><00:05:01.759><c> you</c><00:05:01.919><c> know</c><00:05:02.320><c> they're</c><00:05:02.560><c> both</c>

00:05:02.870 --> 00:05:02.880 align:start position:0%
because notice how you know they're both
 

00:05:02.880 --> 00:05:05.029 align:start position:0%
because notice how you know they're both
initially<00:05:03.360><c> at</c><00:05:03.600><c> zero</c><00:05:03.919><c> right</c><00:05:04.160><c> zero</c><00:05:04.479><c> plus</c><00:05:04.639><c> zero</c>

00:05:05.029 --> 00:05:05.039 align:start position:0%
initially at zero right zero plus zero
 

00:05:05.039 --> 00:05:06.310 align:start position:0%
initially at zero right zero plus zero
is<00:05:05.120><c> going</c><00:05:05.199><c> to</c><00:05:05.360><c> equal</c><00:05:05.680><c> zero</c><00:05:05.919><c> which</c><00:05:06.080><c> is</c><00:05:06.240><c> the</c>

00:05:06.310 --> 00:05:06.320 align:start position:0%
is going to equal zero which is the
 

00:05:06.320 --> 00:05:08.150 align:start position:0%
is going to equal zero which is the
first<00:05:06.560><c> one</c><00:05:06.800><c> here</c><00:05:07.039><c> if</c><00:05:07.120><c> we</c><00:05:07.360><c> increment</c><00:05:07.840><c> one</c><00:05:08.080><c> of</c>

00:05:08.150 --> 00:05:08.160 align:start position:0%
first one here if we increment one of
 

00:05:08.160 --> 00:05:10.230 align:start position:0%
first one here if we increment one of
them<00:05:08.560><c> right</c><00:05:08.800><c> if</c><00:05:08.880><c> we</c><00:05:09.039><c> take</c><00:05:09.520><c> this</c><00:05:09.759><c> pointer</c><00:05:10.080><c> and</c>

00:05:10.230 --> 00:05:10.240 align:start position:0%
them right if we take this pointer and
 

00:05:10.240 --> 00:05:12.230 align:start position:0%
them right if we take this pointer and
shift<00:05:10.479><c> it</c><00:05:10.639><c> over</c><00:05:10.800><c> here</c><00:05:10.960><c> this</c><00:05:11.199><c> is</c><00:05:11.280><c> gonna</c><00:05:11.440><c> be</c><00:05:11.680><c> one</c>

00:05:12.230 --> 00:05:12.240 align:start position:0%
shift it over here this is gonna be one
 

00:05:12.240 --> 00:05:15.029 align:start position:0%
shift it over here this is gonna be one
so<00:05:12.560><c> we're</c><00:05:12.720><c> gonna</c><00:05:12.880><c> take</c><00:05:13.199><c> one</c><00:05:13.600><c> plus</c><00:05:14.240><c> zero</c><00:05:14.720><c> add</c><00:05:14.960><c> it</c>

00:05:15.029 --> 00:05:15.039 align:start position:0%
so we're gonna take one plus zero add it
 

00:05:15.039 --> 00:05:16.310 align:start position:0%
so we're gonna take one plus zero add it
together<00:05:15.360><c> and</c><00:05:15.440><c> we're</c><00:05:15.600><c> gonna</c><00:05:15.759><c> get</c><00:05:16.000><c> at</c><00:05:16.160><c> the</c>

00:05:16.310 --> 00:05:16.320 align:start position:0%
together and we're gonna get at the
 

00:05:16.320 --> 00:05:18.150 align:start position:0%
together and we're gonna get at the
position<00:05:16.800><c> one</c><00:05:17.120><c> which</c><00:05:17.360><c> is</c><00:05:17.440><c> gonna</c><00:05:17.600><c> be</c><00:05:17.759><c> over</c><00:05:18.000><c> here</c>

00:05:18.150 --> 00:05:18.160 align:start position:0%
position one which is gonna be over here
 

00:05:18.160 --> 00:05:19.749 align:start position:0%
position one which is gonna be over here
and<00:05:18.240><c> that</c><00:05:18.400><c> makes</c><00:05:18.639><c> sense</c><00:05:18.880><c> because</c><00:05:19.120><c> if</c><00:05:19.199><c> we</c><00:05:19.440><c> use</c><00:05:19.680><c> a</c>

00:05:19.749 --> 00:05:19.759 align:start position:0%
and that makes sense because if we use a
 

00:05:19.759 --> 00:05:22.070 align:start position:0%
and that makes sense because if we use a
character<00:05:20.160><c> from</c><00:05:20.479><c> here</c><00:05:20.960><c> that's</c><00:05:21.280><c> gonna</c><00:05:21.520><c> take</c><00:05:21.840><c> up</c>

00:05:22.070 --> 00:05:22.080 align:start position:0%
character from here that's gonna take up
 

00:05:22.080 --> 00:05:23.830 align:start position:0%
character from here that's gonna take up
the<00:05:22.240><c> character</c><00:05:22.639><c> that's</c><00:05:22.960><c> over</c><00:05:23.199><c> here</c><00:05:23.440><c> so</c><00:05:23.600><c> that's</c>

00:05:23.830 --> 00:05:23.840 align:start position:0%
the character that's over here so that's
 

00:05:23.840 --> 00:05:25.510 align:start position:0%
the character that's over here so that's
kind<00:05:24.000><c> of</c><00:05:24.080><c> how</c><00:05:24.320><c> the</c><00:05:24.479><c> math</c><00:05:24.720><c> works</c><00:05:25.039><c> out</c><00:05:25.199><c> so</c><00:05:25.440><c> in</c>

00:05:25.510 --> 00:05:25.520 align:start position:0%
kind of how the math works out so in
 

00:05:25.520 --> 00:05:27.029 align:start position:0%
kind of how the math works out so in
reality<00:05:25.919><c> we</c><00:05:26.080><c> just</c><00:05:26.240><c> have</c><00:05:26.320><c> to</c><00:05:26.400><c> keep</c><00:05:26.639><c> track</c><00:05:26.880><c> of</c>

00:05:27.029 --> 00:05:27.039 align:start position:0%
reality we just have to keep track of
 

00:05:27.039 --> 00:05:28.950 align:start position:0%
reality we just have to keep track of
two<00:05:27.280><c> pointers</c><00:05:27.840><c> the</c><00:05:28.000><c> third</c><00:05:28.320><c> pointer</c><00:05:28.639><c> can</c><00:05:28.800><c> be</c>

00:05:28.950 --> 00:05:28.960 align:start position:0%
two pointers the third pointer can be
 

00:05:28.960 --> 00:05:30.870 align:start position:0%
two pointers the third pointer can be
calculated<00:05:29.840><c> for</c><00:05:30.000><c> the</c><00:05:30.160><c> position</c><00:05:30.560><c> of</c><00:05:30.639><c> this</c>

00:05:30.870 --> 00:05:30.880 align:start position:0%
calculated for the position of this
 

00:05:30.880 --> 00:05:33.270 align:start position:0%
calculated for the position of this
string<00:05:31.440><c> so</c><00:05:31.840><c> we</c><00:05:32.080><c> start</c><00:05:32.320><c> at</c><00:05:32.400><c> the</c><00:05:32.479><c> position</c><00:05:32.880><c> zero</c>

00:05:33.270 --> 00:05:33.280 align:start position:0%
string so we start at the position zero
 

00:05:33.280 --> 00:05:35.590 align:start position:0%
string so we start at the position zero
zero<00:05:33.680><c> the</c><00:05:33.840><c> first</c><00:05:34.320><c> zero</c><00:05:35.039><c> indicates</c><00:05:35.440><c> what</c>

00:05:35.590 --> 00:05:35.600 align:start position:0%
zero the first zero indicates what
 

00:05:35.600 --> 00:05:37.189 align:start position:0%
zero the first zero indicates what
position<00:05:35.919><c> we're</c><00:05:36.080><c> at</c><00:05:36.240><c> over</c><00:05:36.479><c> here</c><00:05:36.880><c> second</c>

00:05:37.189 --> 00:05:37.199 align:start position:0%
position we're at over here second
 

00:05:37.199 --> 00:05:38.710 align:start position:0%
position we're at over here second
pointer<00:05:37.520><c> indicates</c><00:05:37.919><c> where</c><00:05:38.080><c> we're</c><00:05:38.320><c> at</c><00:05:38.479><c> over</c>

00:05:38.710 --> 00:05:38.720 align:start position:0%
pointer indicates where we're at over
 

00:05:38.720 --> 00:05:39.590 align:start position:0%
pointer indicates where we're at over
here

00:05:39.590 --> 00:05:39.600 align:start position:0%
here
 

00:05:39.600 --> 00:05:41.909 align:start position:0%
here
and<00:05:39.919><c> we're</c><00:05:40.080><c> going</c><00:05:40.240><c> to</c><00:05:40.320><c> compare</c><00:05:41.120><c> so</c><00:05:41.360><c> does</c><00:05:41.680><c> this</c>

00:05:41.909 --> 00:05:41.919 align:start position:0%
and we're going to compare so does this
 

00:05:41.919 --> 00:05:43.909 align:start position:0%
and we're going to compare so does this
equal<00:05:42.639><c> this</c><00:05:42.800><c> character</c><00:05:43.199><c> of</c><00:05:43.280><c> course</c><00:05:43.600><c> it</c><00:05:43.680><c> does</c>

00:05:43.909 --> 00:05:43.919 align:start position:0%
equal this character of course it does
 

00:05:43.919 --> 00:05:46.310 align:start position:0%
equal this character of course it does
write<00:05:44.160><c> d</c><00:05:44.400><c> does</c><00:05:44.560><c> not</c><00:05:44.800><c> equal</c><00:05:45.120><c> a</c><00:05:45.280><c> but</c><00:05:45.520><c> a</c><00:05:45.840><c> equals</c><00:05:46.160><c> a</c>

00:05:46.310 --> 00:05:46.320 align:start position:0%
write d does not equal a but a equals a
 

00:05:46.320 --> 00:05:48.390 align:start position:0%
write d does not equal a but a equals a
so<00:05:46.479><c> we</c><00:05:46.560><c> can</c><00:05:47.199><c> shift</c><00:05:47.520><c> our</c><00:05:47.600><c> pointer</c><00:05:48.000><c> over</c><00:05:48.160><c> here</c>

00:05:48.390 --> 00:05:48.400 align:start position:0%
so we can shift our pointer over here
 

00:05:48.400 --> 00:05:50.870 align:start position:0%
so we can shift our pointer over here
and<00:05:48.560><c> shift</c><00:05:48.880><c> our</c><00:05:48.960><c> pointer</c><00:05:49.360><c> over</c><00:05:49.680><c> here</c><00:05:50.320><c> so</c><00:05:50.800><c> in</c>

00:05:50.870 --> 00:05:50.880 align:start position:0%
and shift our pointer over here so in
 

00:05:50.880 --> 00:05:52.230 align:start position:0%
and shift our pointer over here so in
this<00:05:51.039><c> case</c><00:05:51.280><c> we</c><00:05:51.360><c> didn't</c><00:05:51.600><c> have</c><00:05:51.680><c> to</c><00:05:51.759><c> make</c><00:05:52.000><c> two</c>

00:05:52.230 --> 00:05:52.240 align:start position:0%
this case we didn't have to make two
 

00:05:52.240 --> 00:05:54.230 align:start position:0%
this case we didn't have to make two
decisions<00:05:52.720><c> we</c><00:05:52.800><c> just</c><00:05:52.960><c> had</c><00:05:53.120><c> an</c><00:05:53.360><c> easy</c><00:05:53.840><c> job</c><00:05:54.080><c> we</c>

00:05:54.230 --> 00:05:54.240 align:start position:0%
decisions we just had an easy job we
 

00:05:54.240 --> 00:05:55.830 align:start position:0%
decisions we just had an easy job we
just<00:05:54.400><c> had</c><00:05:54.479><c> to</c><00:05:54.560><c> make</c><00:05:54.800><c> one</c><00:05:55.039><c> decision</c><00:05:55.360><c> so</c><00:05:55.600><c> let's</c>

00:05:55.830 --> 00:05:55.840 align:start position:0%
just had to make one decision so let's
 

00:05:55.840 --> 00:05:58.710 align:start position:0%
just had to make one decision so let's
call<00:05:56.080><c> that</c><00:05:56.720><c> uh</c><00:05:57.199><c> one</c><00:05:57.520><c> zero</c><00:05:57.919><c> because</c><00:05:58.160><c> we</c><00:05:58.319><c> shifted</c>

00:05:58.710 --> 00:05:58.720 align:start position:0%
call that uh one zero because we shifted
 

00:05:58.720 --> 00:06:00.950 align:start position:0%
call that uh one zero because we shifted
our<00:05:58.880><c> first</c><00:05:59.199><c> pointer</c><00:05:59.520><c> to</c><00:05:59.759><c> the</c><00:05:59.919><c> position</c><00:06:00.400><c> one</c>

00:06:00.950 --> 00:06:00.960 align:start position:0%
our first pointer to the position one
 

00:06:00.960 --> 00:06:02.230 align:start position:0%
our first pointer to the position one
and<00:06:01.120><c> now</c><00:06:01.280><c> i'm</c><00:06:01.360><c> going</c><00:06:01.440><c> to</c><00:06:01.520><c> go</c><00:06:01.680><c> kind</c><00:06:01.840><c> of</c><00:06:01.919><c> fast</c>

00:06:02.230 --> 00:06:02.240 align:start position:0%
and now i'm going to go kind of fast
 

00:06:02.240 --> 00:06:03.590 align:start position:0%
and now i'm going to go kind of fast
because<00:06:02.479><c> i</c><00:06:02.560><c> think</c><00:06:02.720><c> you</c><00:06:02.800><c> probably</c><00:06:03.120><c> get</c><00:06:03.360><c> what</c>

00:06:03.590 --> 00:06:03.600 align:start position:0%
because i think you probably get what
 

00:06:03.600 --> 00:06:05.510 align:start position:0%
because i think you probably get what
we're<00:06:03.759><c> going</c><00:06:03.840><c> to</c><00:06:03.919><c> do</c><00:06:04.160><c> so</c><00:06:04.319><c> once</c><00:06:04.560><c> again</c><00:06:05.039><c> this</c><00:06:05.360><c> is</c>

00:06:05.510 --> 00:06:05.520 align:start position:0%
we're going to do so once again this is
 

00:06:05.520 --> 00:06:06.390 align:start position:0%
we're going to do so once again this is
the<00:06:05.600><c> character</c>

00:06:06.390 --> 00:06:06.400 align:start position:0%
the character
 

00:06:06.400 --> 00:06:08.469 align:start position:0%
the character
that<00:06:06.639><c> matches</c><00:06:07.280><c> in</c><00:06:07.440><c> string</c><00:06:07.759><c> three</c><00:06:08.080><c> so</c><00:06:08.240><c> we</c><00:06:08.319><c> can</c>

00:06:08.469 --> 00:06:08.479 align:start position:0%
that matches in string three so we can
 

00:06:08.479 --> 00:06:10.550 align:start position:0%
that matches in string three so we can
shift<00:06:08.720><c> both</c><00:06:08.960><c> of</c><00:06:09.120><c> our</c><00:06:09.280><c> pointers</c><00:06:09.919><c> to</c><00:06:10.160><c> the</c><00:06:10.319><c> next</c>

00:06:10.550 --> 00:06:10.560 align:start position:0%
shift both of our pointers to the next
 

00:06:10.560 --> 00:06:12.950 align:start position:0%
shift both of our pointers to the next
position<00:06:11.440><c> and</c><00:06:11.759><c> once</c><00:06:12.000><c> again</c><00:06:12.240><c> we</c><00:06:12.400><c> incremented</c>

00:06:12.950 --> 00:06:12.960 align:start position:0%
position and once again we incremented
 

00:06:12.960 --> 00:06:14.309 align:start position:0%
position and once again we incremented
the<00:06:13.120><c> first</c><00:06:13.360><c> pointer</c><00:06:13.680><c> so</c><00:06:13.840><c> we're</c><00:06:14.000><c> going</c><00:06:14.080><c> to</c><00:06:14.160><c> be</c>

00:06:14.309 --> 00:06:14.319 align:start position:0%
the first pointer so we're going to be
 

00:06:14.319 --> 00:06:15.749 align:start position:0%
the first pointer so we're going to be
at<00:06:14.639><c> two</c>

00:06:15.749 --> 00:06:15.759 align:start position:0%
at two
 

00:06:15.759 --> 00:06:18.790 align:start position:0%
at two
zero<00:06:16.639><c> and</c><00:06:16.880><c> in</c><00:06:16.960><c> this</c><00:06:17.120><c> case</c><00:06:17.520><c> b</c><00:06:17.759><c> does</c><00:06:17.919><c> not</c><00:06:18.160><c> match</c><00:06:18.479><c> d</c>

00:06:18.790 --> 00:06:18.800 align:start position:0%
zero and in this case b does not match d
 

00:06:18.800 --> 00:06:21.029 align:start position:0%
zero and in this case b does not match d
but<00:06:19.120><c> this</c><00:06:19.680><c> character</c><00:06:20.160><c> does</c><00:06:20.400><c> so</c><00:06:20.560><c> once</c><00:06:20.800><c> again</c>

00:06:21.029 --> 00:06:21.039 align:start position:0%
but this character does so once again
 

00:06:21.039 --> 00:06:24.550 align:start position:0%
but this character does so once again
let's<00:06:21.360><c> shift</c><00:06:21.840><c> our</c><00:06:22.560><c> pointers</c><00:06:23.440><c> by</c><00:06:23.759><c> one</c><00:06:24.319><c> and</c><00:06:24.479><c> in</c>

00:06:24.550 --> 00:06:24.560 align:start position:0%
let's shift our pointers by one and in
 

00:06:24.560 --> 00:06:26.309 align:start position:0%
let's shift our pointers by one and in
this<00:06:24.720><c> case</c><00:06:24.960><c> we</c><00:06:25.120><c> shifted</c><00:06:25.440><c> the</c><00:06:25.600><c> second</c><00:06:25.919><c> pointer</c>

00:06:26.309 --> 00:06:26.319 align:start position:0%
this case we shifted the second pointer
 

00:06:26.319 --> 00:06:29.270 align:start position:0%
this case we shifted the second pointer
so<00:06:26.639><c> let's</c><00:06:27.039><c> call</c><00:06:27.360><c> that</c><00:06:28.240><c> two</c>

00:06:29.270 --> 00:06:29.280 align:start position:0%
so let's call that two
 

00:06:29.280 --> 00:06:31.270 align:start position:0%
so let's call that two
one<00:06:29.680><c> i</c><00:06:29.759><c> don't</c><00:06:29.919><c> really</c><00:06:30.160><c> know</c><00:06:30.400><c> why</c><00:06:30.720><c> i'm</c><00:06:30.960><c> drawing</c>

00:06:31.270 --> 00:06:31.280 align:start position:0%
one i don't really know why i'm drawing
 

00:06:31.280 --> 00:06:33.430 align:start position:0%
one i don't really know why i'm drawing
the<00:06:31.360><c> decision</c><00:06:31.759><c> tree</c><00:06:32.000><c> like</c><00:06:32.160><c> this</c><00:06:32.479><c> but</c><00:06:33.120><c> let's</c>

00:06:33.430 --> 00:06:33.440 align:start position:0%
the decision tree like this but let's
 

00:06:33.440 --> 00:06:36.070 align:start position:0%
the decision tree like this but let's
continue<00:06:34.319><c> so</c><00:06:34.560><c> in</c><00:06:34.800><c> this</c><00:06:35.120><c> case</c><00:06:35.600><c> you</c><00:06:35.759><c> can</c><00:06:35.840><c> see</c>

00:06:36.070 --> 00:06:36.080 align:start position:0%
continue so in this case you can see
 

00:06:36.080 --> 00:06:37.990 align:start position:0%
continue so in this case you can see
we're<00:06:36.240><c> looking</c><00:06:36.479><c> for</c><00:06:36.639><c> a</c><00:06:36.800><c> b</c><00:06:37.039><c> and</c><00:06:37.199><c> we</c><00:06:37.280><c> can</c><00:06:37.440><c> get</c><00:06:37.600><c> a</c><00:06:37.680><c> b</c>

00:06:37.990 --> 00:06:38.000 align:start position:0%
we're looking for a b and we can get a b
 

00:06:38.000 --> 00:06:40.629 align:start position:0%
we're looking for a b and we can get a b
from<00:06:38.160><c> this</c><00:06:38.400><c> one</c><00:06:38.800><c> or</c><00:06:39.360><c> from</c><00:06:39.600><c> this</c><00:06:39.919><c> one</c><00:06:40.160><c> right</c><00:06:40.479><c> so</c>

00:06:40.629 --> 00:06:40.639 align:start position:0%
from this one or from this one right so
 

00:06:40.639 --> 00:06:42.390 align:start position:0%
from this one or from this one right so
that's<00:06:40.960><c> gonna</c><00:06:41.120><c> be</c><00:06:41.360><c> two</c><00:06:41.600><c> different</c><00:06:41.919><c> decisions</c>

00:06:42.390 --> 00:06:42.400 align:start position:0%
that's gonna be two different decisions
 

00:06:42.400 --> 00:06:43.990 align:start position:0%
that's gonna be two different decisions
we<00:06:42.560><c> finally</c><00:06:42.880><c> have</c><00:06:43.039><c> two</c><00:06:43.280><c> different</c><00:06:43.520><c> decisions</c>

00:06:43.990 --> 00:06:44.000 align:start position:0%
we finally have two different decisions
 

00:06:44.000 --> 00:06:47.510 align:start position:0%
we finally have two different decisions
we<00:06:44.080><c> can</c><00:06:44.240><c> either</c><00:06:44.479><c> do</c><00:06:45.039><c> three</c><00:06:45.520><c> one</c><00:06:46.240><c> or</c><00:06:46.479><c> we</c><00:06:46.639><c> can</c><00:06:46.800><c> do</c>

00:06:47.510 --> 00:06:47.520 align:start position:0%
we can either do three one or we can do
 

00:06:47.520 --> 00:06:48.550 align:start position:0%
we can either do three one or we can do
two

00:06:48.550 --> 00:06:48.560 align:start position:0%
two
 

00:06:48.560 --> 00:06:51.029 align:start position:0%
two
two<00:06:49.199><c> depending</c><00:06:49.759><c> on</c><00:06:50.000><c> how</c><00:06:50.160><c> we</c><00:06:50.319><c> do</c><00:06:50.479><c> it</c><00:06:50.560><c> so</c><00:06:50.720><c> this</c><00:06:50.960><c> is</c>

00:06:51.029 --> 00:06:51.039 align:start position:0%
two depending on how we do it so this is
 

00:06:51.039 --> 00:06:52.950 align:start position:0%
two depending on how we do it so this is
kind<00:06:51.199><c> of</c><00:06:51.360><c> where</c><00:06:51.759><c> the</c><00:06:51.919><c> complexity</c><00:06:52.560><c> is</c><00:06:52.720><c> going</c><00:06:52.800><c> to</c>

00:06:52.950 --> 00:06:52.960 align:start position:0%
kind of where the complexity is going to
 

00:06:52.960 --> 00:06:55.350 align:start position:0%
kind of where the complexity is going to
come<00:06:53.520><c> right</c><00:06:54.080><c> and</c><00:06:54.240><c> the</c><00:06:54.400><c> worst</c><00:06:54.720><c> case</c><00:06:55.039><c> would</c><00:06:55.199><c> be</c>

00:06:55.350 --> 00:06:55.360 align:start position:0%
come right and the worst case would be
 

00:06:55.360 --> 00:06:57.029 align:start position:0%
come right and the worst case would be
that<00:06:55.520><c> we</c><00:06:55.599><c> could</c><00:06:55.759><c> make</c><00:06:56.000><c> two</c><00:06:56.240><c> decisions</c><00:06:56.720><c> every</c>

00:06:57.029 --> 00:06:57.039 align:start position:0%
that we could make two decisions every
 

00:06:57.039 --> 00:06:58.629 align:start position:0%
that we could make two decisions every
single<00:06:57.360><c> time</c><00:06:57.599><c> so</c><00:06:57.759><c> you</c><00:06:57.840><c> can</c><00:06:58.000><c> see</c><00:06:58.160><c> that</c><00:06:58.400><c> if</c><00:06:58.479><c> we</c>

00:06:58.629 --> 00:06:58.639 align:start position:0%
single time so you can see that if we
 

00:06:58.639 --> 00:07:00.629 align:start position:0%
single time so you can see that if we
continue<00:06:59.039><c> drawing</c><00:06:59.360><c> this</c><00:06:59.599><c> out</c><00:07:00.000><c> the</c><00:07:00.160><c> worst</c><00:07:00.400><c> case</c>

00:07:00.629 --> 00:07:00.639 align:start position:0%
continue drawing this out the worst case
 

00:07:00.639 --> 00:07:02.870 align:start position:0%
continue drawing this out the worst case
time<00:07:00.880><c> complexity</c><00:07:01.440><c> for</c><00:07:01.599><c> a</c><00:07:01.759><c> particular</c><00:07:02.639><c> uh</c>

00:07:02.870 --> 00:07:02.880 align:start position:0%
time complexity for a particular uh
 

00:07:02.880 --> 00:07:04.950 align:start position:0%
time complexity for a particular uh
decision<00:07:03.280><c> tree</c><00:07:03.440><c> could</c><00:07:03.599><c> be</c><00:07:03.759><c> 2</c><00:07:04.000><c> to</c><00:07:04.160><c> the</c><00:07:04.240><c> power</c><00:07:04.639><c> of</c>

00:07:04.950 --> 00:07:04.960 align:start position:0%
decision tree could be 2 to the power of
 

00:07:04.960 --> 00:07:07.990 align:start position:0%
decision tree could be 2 to the power of
n<00:07:05.599><c> plus</c><00:07:06.160><c> m</c><00:07:06.560><c> basically</c><00:07:07.120><c> the</c><00:07:07.360><c> total</c><00:07:07.680><c> number</c><00:07:07.840><c> of</c>

00:07:07.990 --> 00:07:08.000 align:start position:0%
n plus m basically the total number of
 

00:07:08.000 --> 00:07:10.629 align:start position:0%
n plus m basically the total number of
characters<00:07:08.400><c> that</c><00:07:08.560><c> we</c><00:07:08.720><c> have</c><00:07:09.360><c> but</c><00:07:09.840><c> you</c><00:07:10.000><c> can</c><00:07:10.319><c> see</c>

00:07:10.629 --> 00:07:10.639 align:start position:0%
characters that we have but you can see
 

00:07:10.639 --> 00:07:12.629 align:start position:0%
characters that we have but you can see
that<00:07:10.880><c> we</c><00:07:11.120><c> might</c><00:07:11.360><c> be</c><00:07:11.520><c> repeating</c><00:07:11.919><c> the</c><00:07:12.080><c> same</c><00:07:12.400><c> sub</c>

00:07:12.629 --> 00:07:12.639 align:start position:0%
that we might be repeating the same sub
 

00:07:12.639 --> 00:07:15.110 align:start position:0%
that we might be repeating the same sub
problem<00:07:13.039><c> multiple</c><00:07:13.599><c> times</c><00:07:14.319><c> right</c><00:07:14.560><c> how</c><00:07:14.800><c> many</c>

00:07:15.110 --> 00:07:15.120 align:start position:0%
problem multiple times right how many
 

00:07:15.120 --> 00:07:17.990 align:start position:0%
problem multiple times right how many
different<00:07:15.599><c> possible</c><00:07:16.319><c> pairs</c><00:07:17.039><c> of</c><00:07:17.280><c> values</c><00:07:17.759><c> could</c>

00:07:17.990 --> 00:07:18.000 align:start position:0%
different possible pairs of values could
 

00:07:18.000 --> 00:07:20.710 align:start position:0%
different possible pairs of values could
we<00:07:18.240><c> even</c><00:07:18.720><c> have</c><00:07:19.120><c> like</c><00:07:19.440><c> this</c><00:07:19.919><c> well</c><00:07:20.400><c> we</c><00:07:20.560><c> could</c>

00:07:20.710 --> 00:07:20.720 align:start position:0%
we even have like this well we could
 

00:07:20.720 --> 00:07:22.550 align:start position:0%
we even have like this well we could
only<00:07:20.960><c> have</c><00:07:21.280><c> n</c><00:07:21.599><c> different</c><00:07:21.919><c> values</c><00:07:22.400><c> in</c><00:07:22.479><c> the</c>

00:07:22.550 --> 00:07:22.560 align:start position:0%
only have n different values in the
 

00:07:22.560 --> 00:07:24.390 align:start position:0%
only have n different values in the
first<00:07:22.800><c> position</c><00:07:23.199><c> we</c><00:07:23.280><c> could</c><00:07:23.360><c> have</c><00:07:23.759><c> m</c><00:07:24.000><c> different</c>

00:07:24.390 --> 00:07:24.400 align:start position:0%
first position we could have m different
 

00:07:24.400 --> 00:07:25.830 align:start position:0%
first position we could have m different
values<00:07:24.800><c> in</c><00:07:24.880><c> the</c><00:07:24.960><c> second</c><00:07:25.280><c> position</c><00:07:25.599><c> that's</c>

00:07:25.830 --> 00:07:25.840 align:start position:0%
values in the second position that's
 

00:07:25.840 --> 00:07:28.390 align:start position:0%
values in the second position that's
where<00:07:26.000><c> the</c><00:07:26.080><c> time</c><00:07:26.319><c> complexity</c><00:07:27.039><c> n</c><00:07:27.440><c> by</c><00:07:27.840><c> m</c><00:07:28.080><c> comes</c>

00:07:28.390 --> 00:07:28.400 align:start position:0%
where the time complexity n by m comes
 

00:07:28.400 --> 00:07:30.710 align:start position:0%
where the time complexity n by m comes
from<00:07:28.639><c> so</c><00:07:28.800><c> we</c><00:07:28.960><c> can</c><00:07:29.120><c> do</c><00:07:29.280><c> this</c><00:07:29.680><c> by</c><00:07:30.080><c> caching</c><00:07:30.639><c> i'm</c>

00:07:30.710 --> 00:07:30.720 align:start position:0%
from so we can do this by caching i'm
 

00:07:30.720 --> 00:07:31.909 align:start position:0%
from so we can do this by caching i'm
going<00:07:30.800><c> to</c><00:07:30.880><c> show</c><00:07:31.039><c> you</c><00:07:31.199><c> how</c><00:07:31.360><c> we</c><00:07:31.440><c> can</c><00:07:31.520><c> do</c><00:07:31.680><c> that</c><00:07:31.840><c> in</c>

00:07:31.909 --> 00:07:31.919 align:start position:0%
going to show you how we can do that in
 

00:07:31.919 --> 00:07:34.150 align:start position:0%
going to show you how we can do that in
the<00:07:32.080><c> coding</c><00:07:32.560><c> portion</c><00:07:33.440><c> so</c><00:07:33.599><c> this</c><00:07:33.840><c> will</c><00:07:34.000><c> make</c>

00:07:34.150 --> 00:07:34.160 align:start position:0%
the coding portion so this will make
 

00:07:34.160 --> 00:07:36.390 align:start position:0%
the coding portion so this will make
sure<00:07:34.400><c> that</c><00:07:34.639><c> we</c><00:07:34.800><c> have</c><00:07:35.199><c> this</c><00:07:35.520><c> many</c><00:07:35.840><c> sub</c><00:07:36.080><c> problems</c>

00:07:36.390 --> 00:07:36.400 align:start position:0%
sure that we have this many sub problems
 

00:07:36.400 --> 00:07:38.150 align:start position:0%
sure that we have this many sub problems
and<00:07:36.560><c> if</c><00:07:36.639><c> we</c><00:07:36.720><c> repeat</c><00:07:37.120><c> the</c><00:07:37.199><c> same</c><00:07:37.440><c> sum</c><00:07:37.680><c> problem</c><00:07:38.000><c> we</c>

00:07:38.150 --> 00:07:38.160 align:start position:0%
and if we repeat the same sum problem we
 

00:07:38.160 --> 00:07:39.909 align:start position:0%
and if we repeat the same sum problem we
can<00:07:38.240><c> just</c><00:07:38.400><c> do</c><00:07:38.560><c> it</c><00:07:38.720><c> in</c><00:07:38.880><c> o</c><00:07:39.120><c> of</c><00:07:39.280><c> one</c><00:07:39.520><c> time</c><00:07:39.759><c> because</c>

00:07:39.909 --> 00:07:39.919 align:start position:0%
can just do it in o of one time because
 

00:07:39.919 --> 00:07:41.589 align:start position:0%
can just do it in o of one time because
we're<00:07:40.080><c> going</c><00:07:40.160><c> to</c><00:07:40.240><c> be</c><00:07:40.400><c> caching</c><00:07:40.800><c> the</c><00:07:40.960><c> result</c><00:07:41.440><c> of</c>

00:07:41.589 --> 00:07:41.599 align:start position:0%
we're going to be caching the result of
 

00:07:41.599 --> 00:07:43.990 align:start position:0%
we're going to be caching the result of
that<00:07:41.840><c> now</c><00:07:42.000><c> what</c><00:07:42.240><c> exactly</c><00:07:42.800><c> is</c><00:07:43.360><c> the</c><00:07:43.520><c> value</c><00:07:43.919><c> that</c>

00:07:43.990 --> 00:07:44.000 align:start position:0%
that now what exactly is the value that
 

00:07:44.000 --> 00:07:45.350 align:start position:0%
that now what exactly is the value that
we're<00:07:44.160><c> going</c><00:07:44.240><c> to</c><00:07:44.319><c> be</c><00:07:44.400><c> caching</c><00:07:44.800><c> well</c><00:07:44.960><c> for</c><00:07:45.120><c> any</c>

00:07:45.350 --> 00:07:45.360 align:start position:0%
we're going to be caching well for any
 

00:07:45.360 --> 00:07:47.749 align:start position:0%
we're going to be caching well for any
particular<00:07:46.000><c> sub</c><00:07:46.319><c> problem</c><00:07:46.879><c> like</c><00:07:47.280><c> for</c><00:07:47.440><c> either</c>

00:07:47.749 --> 00:07:47.759 align:start position:0%
particular sub problem like for either
 

00:07:47.759 --> 00:07:49.909 align:start position:0%
particular sub problem like for either
of<00:07:47.919><c> these</c><00:07:48.240><c> branches</c><00:07:49.120><c> we</c><00:07:49.280><c> want</c><00:07:49.520><c> to</c><00:07:49.680><c> know</c>

00:07:49.909 --> 00:07:49.919 align:start position:0%
of these branches we want to know
 

00:07:49.919 --> 00:07:52.469 align:start position:0%
of these branches we want to know
ultimately<00:07:50.639><c> from</c><00:07:51.039><c> here</c><00:07:51.599><c> are</c><00:07:51.759><c> we</c><00:07:52.000><c> actually</c>

00:07:52.469 --> 00:07:52.479 align:start position:0%
ultimately from here are we actually
 

00:07:52.479 --> 00:07:55.189 align:start position:0%
ultimately from here are we actually
able<00:07:52.720><c> to</c><00:07:52.879><c> form</c><00:07:53.199><c> the</c><00:07:53.280><c> remaining</c><00:07:53.919><c> portion</c><00:07:54.720><c> of</c>

00:07:55.189 --> 00:07:55.199 align:start position:0%
able to form the remaining portion of
 

00:07:55.199 --> 00:07:57.029 align:start position:0%
able to form the remaining portion of
the<00:07:55.520><c> result</c><00:07:55.919><c> string</c><00:07:56.240><c> so</c><00:07:56.479><c> either</c><00:07:56.800><c> it's</c><00:07:56.960><c> going</c>

00:07:57.029 --> 00:07:57.039 align:start position:0%
the result string so either it's going
 

00:07:57.039 --> 00:07:59.909 align:start position:0%
the result string so either it's going
to<00:07:57.120><c> be</c><00:07:57.440><c> true</c><00:07:58.160><c> or</c><00:07:58.800><c> false</c><00:07:59.199><c> right</c><00:07:59.360><c> we're</c><00:07:59.520><c> not</c>

00:07:59.909 --> 00:07:59.919 align:start position:0%
to be true or false right we're not
 

00:07:59.919 --> 00:08:01.990 align:start position:0%
to be true or false right we're not
storing<00:08:00.479><c> a</c><00:08:00.720><c> value</c><00:08:01.199><c> like</c><00:08:01.440><c> a</c><00:08:01.520><c> number</c><00:08:01.919><c> or</c>

00:08:01.990 --> 00:08:02.000 align:start position:0%
storing a value like a number or
 

00:08:02.000 --> 00:08:03.350 align:start position:0%
storing a value like a number or
anything<00:08:02.319><c> we're</c><00:08:02.479><c> going</c><00:08:02.560><c> to</c><00:08:02.639><c> be</c><00:08:02.720><c> storing</c><00:08:03.120><c> true</c>

00:08:03.350 --> 00:08:03.360 align:start position:0%
anything we're going to be storing true
 

00:08:03.360 --> 00:08:05.830 align:start position:0%
anything we're going to be storing true
or<00:08:03.520><c> false</c><00:08:03.840><c> for</c><00:08:04.080><c> any</c><00:08:04.319><c> of</c><00:08:04.560><c> these</c><00:08:05.120><c> and</c><00:08:05.440><c> actually</c>

00:08:05.830 --> 00:08:05.840 align:start position:0%
or false for any of these and actually
 

00:08:05.840 --> 00:08:08.230 align:start position:0%
or false for any of these and actually
if<00:08:05.919><c> we</c><00:08:06.160><c> find</c><00:08:06.479><c> a</c><00:08:06.720><c> single</c><00:08:07.199><c> true</c><00:08:07.680><c> then</c><00:08:07.919><c> we</c><00:08:08.080><c> don't</c>

00:08:08.230 --> 00:08:08.240 align:start position:0%
if we find a single true then we don't
 

00:08:08.240 --> 00:08:09.909 align:start position:0%
if we find a single true then we don't
have<00:08:08.400><c> to</c><00:08:08.560><c> cache</c><00:08:08.879><c> it</c><00:08:09.039><c> because</c><00:08:09.199><c> if</c><00:08:09.360><c> we</c><00:08:09.440><c> find</c><00:08:09.759><c> a</c>

00:08:09.909 --> 00:08:09.919 align:start position:0%
have to cache it because if we find a
 

00:08:09.919 --> 00:08:11.909 align:start position:0%
have to cache it because if we find a
single<00:08:10.240><c> true</c><00:08:10.479><c> that</c><00:08:10.560><c> means</c><00:08:10.800><c> we</c><00:08:11.039><c> are</c><00:08:11.280><c> able</c><00:08:11.520><c> to</c>

00:08:11.909 --> 00:08:11.919 align:start position:0%
single true that means we are able to
 

00:08:11.919 --> 00:08:13.430 align:start position:0%
single true that means we are able to
form<00:08:12.160><c> the</c><00:08:12.319><c> result</c><00:08:12.639><c> string</c><00:08:12.879><c> and</c><00:08:12.960><c> then</c><00:08:13.120><c> we</c><00:08:13.199><c> can</c>

00:08:13.430 --> 00:08:13.440 align:start position:0%
form the result string and then we can
 

00:08:13.440 --> 00:08:16.550 align:start position:0%
form the result string and then we can
immediately<00:08:14.319><c> return</c><00:08:14.800><c> true</c><00:08:15.520><c> by</c><00:08:15.759><c> going</c><00:08:16.080><c> back</c><00:08:16.400><c> up</c>

00:08:16.550 --> 00:08:16.560 align:start position:0%
immediately return true by going back up
 

00:08:16.560 --> 00:08:18.390 align:start position:0%
immediately return true by going back up
to<00:08:16.720><c> the</c><00:08:16.960><c> root</c><00:08:17.520><c> that</c><00:08:17.680><c> we</c><00:08:17.840><c> called</c><00:08:18.160><c> this</c>

00:08:18.390 --> 00:08:18.400 align:start position:0%
to the root that we called this
 

00:08:18.400 --> 00:08:20.710 align:start position:0%
to the root that we called this
recursive<00:08:18.960><c> function</c><00:08:19.360><c> from</c><00:08:19.840><c> so</c><00:08:20.080><c> we</c><00:08:20.240><c> discussed</c>

00:08:20.710 --> 00:08:20.720 align:start position:0%
recursive function from so we discussed
 

00:08:20.720 --> 00:08:22.550 align:start position:0%
recursive function from so we discussed
the<00:08:20.879><c> memoization</c><00:08:21.599><c> solution</c><00:08:22.000><c> but</c><00:08:22.160><c> let's</c><00:08:22.319><c> go</c>

00:08:22.550 --> 00:08:22.560 align:start position:0%
the memoization solution but let's go
 

00:08:22.560 --> 00:08:24.230 align:start position:0%
the memoization solution but let's go
over<00:08:22.800><c> the</c><00:08:22.960><c> true</c><00:08:23.280><c> dynamic</c><00:08:23.759><c> programming</c>

00:08:24.230 --> 00:08:24.240 align:start position:0%
over the true dynamic programming
 

00:08:24.240 --> 00:08:25.430 align:start position:0%
over the true dynamic programming
solution<00:08:24.560><c> which</c><00:08:24.800><c> is</c><00:08:24.879><c> going</c><00:08:24.960><c> to</c><00:08:25.039><c> be</c><00:08:25.199><c> pretty</c>

00:08:25.430 --> 00:08:25.440 align:start position:0%
solution which is going to be pretty
 

00:08:25.440 --> 00:08:27.830 align:start position:0%
solution which is going to be pretty
similar<00:08:25.759><c> to</c><00:08:26.000><c> what</c><00:08:26.160><c> we</c><00:08:26.319><c> just</c><00:08:26.560><c> talked</c><00:08:26.879><c> about</c><00:08:27.440><c> so</c>

00:08:27.830 --> 00:08:27.840 align:start position:0%
similar to what we just talked about so
 

00:08:27.840 --> 00:08:29.670 align:start position:0%
similar to what we just talked about so
just<00:08:28.080><c> to</c><00:08:28.240><c> quickly</c><00:08:28.560><c> go</c><00:08:28.800><c> over</c><00:08:29.039><c> what</c><00:08:29.199><c> was</c><00:08:29.440><c> the</c>

00:08:29.670 --> 00:08:29.680 align:start position:0%
just to quickly go over what was the
 

00:08:29.680 --> 00:08:31.589 align:start position:0%
just to quickly go over what was the
base<00:08:30.000><c> case</c><00:08:30.319><c> in</c><00:08:30.479><c> our</c><00:08:30.560><c> recursive</c><00:08:31.120><c> solution</c><00:08:31.520><c> that</c>

00:08:31.589 --> 00:08:31.599 align:start position:0%
base case in our recursive solution that
 

00:08:31.599 --> 00:08:34.149 align:start position:0%
base case in our recursive solution that
we<00:08:31.759><c> went</c><00:08:32.000><c> over</c><00:08:32.320><c> well</c><00:08:32.959><c> what</c><00:08:33.440><c> what</c><00:08:33.680><c> would</c><00:08:33.839><c> happen</c>

00:08:34.149 --> 00:08:34.159 align:start position:0%
we went over well what what would happen
 

00:08:34.159 --> 00:08:36.870 align:start position:0%
we went over well what what would happen
if<00:08:34.320><c> let's</c><00:08:34.560><c> say</c><00:08:34.719><c> the</c><00:08:35.039><c> the</c><00:08:35.360><c> last</c><00:08:35.760><c> uh</c><00:08:36.080><c> pointer</c><00:08:36.560><c> in</c>

00:08:36.870 --> 00:08:36.880 align:start position:0%
if let's say the the last uh pointer in
 

00:08:36.880 --> 00:08:39.029 align:start position:0%
if let's say the the last uh pointer in
the<00:08:37.039><c> first</c><00:08:37.279><c> string</c><00:08:37.680><c> reached</c><00:08:38.320><c> this</c><00:08:38.560><c> position</c>

00:08:39.029 --> 00:08:39.039 align:start position:0%
the first string reached this position
 

00:08:39.039 --> 00:08:41.990 align:start position:0%
the first string reached this position
out<00:08:39.200><c> of</c><00:08:39.360><c> bounds</c><00:08:39.919><c> and</c><00:08:40.479><c> the</c><00:08:40.640><c> pointer</c><00:08:41.120><c> of</c><00:08:41.279><c> string2</c>

00:08:41.990 --> 00:08:42.000 align:start position:0%
out of bounds and the pointer of string2
 

00:08:42.000 --> 00:08:43.909 align:start position:0%
out of bounds and the pointer of string2
reached<00:08:42.479><c> this</c><00:08:42.719><c> position</c><00:08:43.279><c> that</c><00:08:43.440><c> would</c><00:08:43.599><c> mean</c><00:08:43.839><c> if</c>

00:08:43.909 --> 00:08:43.919 align:start position:0%
reached this position that would mean if
 

00:08:43.919 --> 00:08:46.310 align:start position:0%
reached this position that would mean if
we<00:08:44.159><c> added</c><00:08:44.480><c> them</c><00:08:44.720><c> together</c><00:08:45.279><c> we</c><00:08:45.440><c> would</c><00:08:45.760><c> get</c><00:08:46.160><c> to</c>

00:08:46.310 --> 00:08:46.320 align:start position:0%
we added them together we would get to
 

00:08:46.320 --> 00:08:48.630 align:start position:0%
we added them together we would get to
the<00:08:46.480><c> out</c><00:08:46.640><c> of</c><00:08:46.800><c> bounds</c><00:08:47.120><c> position</c><00:08:47.600><c> in</c><00:08:47.839><c> s3</c><00:08:48.480><c> right</c>

00:08:48.630 --> 00:08:48.640 align:start position:0%
the out of bounds position in s3 right
 

00:08:48.640 --> 00:08:51.190 align:start position:0%
the out of bounds position in s3 right
so<00:08:48.880><c> basically</c><00:08:49.760><c> if</c><00:08:50.000><c> both</c><00:08:50.320><c> of</c><00:08:50.399><c> the</c><00:08:50.560><c> pointers</c>

00:08:51.190 --> 00:08:51.200 align:start position:0%
so basically if both of the pointers
 

00:08:51.200 --> 00:08:54.070 align:start position:0%
so basically if both of the pointers
become<00:08:51.760><c> out</c><00:08:52.000><c> of</c><00:08:52.160><c> bound</c><00:08:52.720><c> that's</c><00:08:53.120><c> how</c><00:08:53.279><c> you</c><00:08:53.600><c> know</c>

00:08:54.070 --> 00:08:54.080 align:start position:0%
become out of bound that's how you know
 

00:08:54.080 --> 00:08:55.670 align:start position:0%
become out of bound that's how you know
we<00:08:54.240><c> have</c><00:08:54.399><c> reached</c><00:08:54.720><c> the</c><00:08:54.880><c> base</c><00:08:55.120><c> case</c><00:08:55.440><c> and</c><00:08:55.519><c> in</c>

00:08:55.670 --> 00:08:55.680 align:start position:0%
we have reached the base case and in
 

00:08:55.680 --> 00:08:57.190 align:start position:0%
we have reached the base case and in
that<00:08:55.839><c> case</c><00:08:56.240><c> that</c><00:08:56.399><c> means</c><00:08:56.560><c> we</c><00:08:56.800><c> built</c><00:08:57.040><c> the</c>

00:08:57.190 --> 00:08:57.200 align:start position:0%
that case that means we built the
 

00:08:57.200 --> 00:08:59.350 align:start position:0%
that case that means we built the
resulting<00:08:57.760><c> string</c><00:08:58.080><c> and</c><00:08:58.160><c> we</c><00:08:58.320><c> can</c><00:08:58.480><c> return</c><00:08:58.880><c> true</c>

00:08:59.350 --> 00:08:59.360 align:start position:0%
resulting string and we can return true
 

00:08:59.360 --> 00:09:01.110 align:start position:0%
resulting string and we can return true
so<00:08:59.519><c> when</c><00:08:59.680><c> we</c><00:08:59.920><c> go</c><00:09:00.160><c> over</c><00:09:00.320><c> to</c><00:09:00.480><c> the</c><00:09:00.640><c> dynamic</c>

00:09:01.110 --> 00:09:01.120 align:start position:0%
so when we go over to the dynamic
 

00:09:01.120 --> 00:09:03.350 align:start position:0%
so when we go over to the dynamic
programming<00:09:01.680><c> solution</c><00:09:02.320><c> take</c><00:09:02.560><c> a</c><00:09:02.720><c> look</c><00:09:02.959><c> at</c><00:09:03.040><c> this</c>

00:09:03.350 --> 00:09:03.360 align:start position:0%
programming solution take a look at this
 

00:09:03.360 --> 00:09:05.670 align:start position:0%
programming solution take a look at this
grid<00:09:03.680><c> that</c><00:09:03.839><c> i've</c><00:09:04.240><c> drawn</c><00:09:04.640><c> you</c><00:09:04.800><c> might</c><00:09:05.120><c> recognize</c>

00:09:05.670 --> 00:09:05.680 align:start position:0%
grid that i've drawn you might recognize
 

00:09:05.680 --> 00:09:07.590 align:start position:0%
grid that i've drawn you might recognize
this<00:09:05.920><c> as</c><00:09:06.080><c> a</c><00:09:06.240><c> regular</c><00:09:06.720><c> dynamic</c><00:09:07.120><c> programming</c>

00:09:07.590 --> 00:09:07.600 align:start position:0%
this as a regular dynamic programming
 

00:09:07.600 --> 00:09:09.990 align:start position:0%
this as a regular dynamic programming
grid<00:09:08.000><c> this</c><00:09:08.240><c> is</c><00:09:08.399><c> string</c><00:09:08.800><c> one</c><00:09:09.279><c> this</c><00:09:09.519><c> is</c><00:09:09.680><c> string</c>

00:09:09.990 --> 00:09:10.000 align:start position:0%
grid this is string one this is string
 

00:09:10.000 --> 00:09:12.070 align:start position:0%
grid this is string one this is string
two<00:09:10.320><c> we</c><00:09:10.560><c> multiplied</c><00:09:11.200><c> them</c><00:09:11.360><c> together</c><00:09:11.760><c> because</c>

00:09:12.070 --> 00:09:12.080 align:start position:0%
two we multiplied them together because
 

00:09:12.080 --> 00:09:14.870 align:start position:0%
two we multiplied them together because
remember<00:09:12.720><c> it's</c><00:09:12.959><c> m</c><00:09:13.200><c> by</c><00:09:13.600><c> n</c><00:09:13.760><c> that's</c><00:09:14.000><c> what</c><00:09:14.160><c> our</c>

00:09:14.870 --> 00:09:14.880 align:start position:0%
remember it's m by n that's what our
 

00:09:14.880 --> 00:09:16.150 align:start position:0%
remember it's m by n that's what our
cache<00:09:15.279><c> is</c><00:09:15.360><c> going</c><00:09:15.440><c> to</c><00:09:15.519><c> look</c><00:09:15.760><c> like</c><00:09:15.920><c> so</c><00:09:16.080><c> i'm</c>

00:09:16.150 --> 00:09:16.160 align:start position:0%
cache is going to look like so i'm
 

00:09:16.160 --> 00:09:18.070 align:start position:0%
cache is going to look like so i'm
basically<00:09:16.720><c> drawing</c><00:09:17.040><c> what</c><00:09:17.200><c> the</c><00:09:17.360><c> cache</c><00:09:17.839><c> looks</c>

00:09:18.070 --> 00:09:18.080 align:start position:0%
basically drawing what the cache looks
 

00:09:18.080 --> 00:09:20.790 align:start position:0%
basically drawing what the cache looks
like<00:09:18.480><c> but</c><00:09:18.640><c> you</c><00:09:18.800><c> can</c><00:09:19.040><c> see</c><00:09:19.519><c> that</c><00:09:19.760><c> this</c><00:09:20.240><c> is</c><00:09:20.640><c> the</c>

00:09:20.790 --> 00:09:20.800 align:start position:0%
like but you can see that this is the
 

00:09:20.800 --> 00:09:23.509 align:start position:0%
like but you can see that this is the
dimensions<00:09:21.440><c> but</c><00:09:21.600><c> i</c><00:09:21.680><c> have</c><00:09:22.000><c> one</c><00:09:22.320><c> extra</c><00:09:22.959><c> layer</c>

00:09:23.509 --> 00:09:23.519 align:start position:0%
dimensions but i have one extra layer
 

00:09:23.519 --> 00:09:25.990 align:start position:0%
dimensions but i have one extra layer
out<00:09:24.000><c> here</c><00:09:24.560><c> which</c><00:09:24.880><c> is</c><00:09:25.120><c> important</c><00:09:25.680><c> in</c><00:09:25.839><c> this</c>

00:09:25.990 --> 00:09:26.000 align:start position:0%
out here which is important in this
 

00:09:26.000 --> 00:09:27.990 align:start position:0%
out here which is important in this
problem<00:09:26.399><c> remember</c><00:09:26.800><c> what</c><00:09:26.959><c> i</c><00:09:27.040><c> just</c><00:09:27.279><c> said</c><00:09:27.600><c> if</c>

00:09:27.990 --> 00:09:28.000 align:start position:0%
problem remember what i just said if
 

00:09:28.000 --> 00:09:30.230 align:start position:0%
problem remember what i just said if
this<00:09:28.640><c> if</c><00:09:28.800><c> we're</c><00:09:29.040><c> out</c><00:09:29.120><c> of</c><00:09:29.360><c> bounds</c><00:09:29.839><c> in</c><00:09:30.000><c> this</c>

00:09:30.230 --> 00:09:30.240 align:start position:0%
this if we're out of bounds in this
 

00:09:30.240 --> 00:09:31.910 align:start position:0%
this if we're out of bounds in this
string<00:09:30.640><c> and</c><00:09:30.880><c> we're</c><00:09:31.120><c> out</c><00:09:31.279><c> of</c><00:09:31.360><c> bounds</c><00:09:31.680><c> in</c><00:09:31.760><c> this</c>

00:09:31.910 --> 00:09:31.920 align:start position:0%
string and we're out of bounds in this
 

00:09:31.920 --> 00:09:33.750 align:start position:0%
string and we're out of bounds in this
string<00:09:32.480><c> that's</c><00:09:32.720><c> going</c><00:09:32.880><c> to</c><00:09:32.959><c> lead</c><00:09:33.200><c> us</c><00:09:33.279><c> to</c><00:09:33.519><c> this</c>

00:09:33.750 --> 00:09:33.760 align:start position:0%
string that's going to lead us to this
 

00:09:33.760 --> 00:09:35.590 align:start position:0%
string that's going to lead us to this
position<00:09:34.160><c> so</c><00:09:34.320><c> that's</c><00:09:34.640><c> our</c><00:09:34.800><c> base</c><00:09:35.040><c> case</c><00:09:35.279><c> we</c><00:09:35.440><c> want</c>

00:09:35.590 --> 00:09:35.600 align:start position:0%
position so that's our base case we want
 

00:09:35.600 --> 00:09:38.870 align:start position:0%
position so that's our base case we want
to<00:09:35.760><c> initialize</c><00:09:36.399><c> this</c><00:09:36.720><c> with</c><00:09:36.959><c> a</c><00:09:37.120><c> t</c><00:09:37.519><c> for</c><00:09:37.920><c> true</c><00:09:38.640><c> and</c>

00:09:38.870 --> 00:09:38.880 align:start position:0%
to initialize this with a t for true and
 

00:09:38.880 --> 00:09:40.949 align:start position:0%
to initialize this with a t for true and
a<00:09:38.959><c> particular</c><00:09:39.680><c> value</c><00:09:40.160><c> in</c><00:09:40.320><c> this</c><00:09:40.480><c> grid</c><00:09:40.800><c> for</c>

00:09:40.949 --> 00:09:40.959 align:start position:0%
a particular value in this grid for
 

00:09:40.959 --> 00:09:43.430 align:start position:0%
a particular value in this grid for
example<00:09:41.440><c> this</c><00:09:41.760><c> one</c><00:09:42.240><c> means</c><00:09:42.640><c> that</c><00:09:42.880><c> let's</c><00:09:43.040><c> say</c><00:09:43.200><c> we</c>

00:09:43.430 --> 00:09:43.440 align:start position:0%
example this one means that let's say we
 

00:09:43.440 --> 00:09:45.829 align:start position:0%
example this one means that let's say we
had<00:09:43.760><c> this</c><00:09:44.160><c> remaining</c><00:09:44.720><c> portion</c><00:09:45.120><c> of</c><00:09:45.200><c> the</c><00:09:45.360><c> string</c>

00:09:45.829 --> 00:09:45.839 align:start position:0%
had this remaining portion of the string
 

00:09:45.839 --> 00:09:47.829 align:start position:0%
had this remaining portion of the string
and<00:09:46.080><c> we</c><00:09:46.240><c> had</c><00:09:46.640><c> this</c><00:09:46.880><c> remaining</c><00:09:47.279><c> portion</c><00:09:47.600><c> of</c><00:09:47.760><c> the</c>

00:09:47.829 --> 00:09:47.839 align:start position:0%
and we had this remaining portion of the
 

00:09:47.839 --> 00:09:49.910 align:start position:0%
and we had this remaining portion of the
string<00:09:48.080><c> you</c><00:09:48.240><c> can</c><00:09:48.320><c> see</c><00:09:48.480><c> that</c><00:09:48.800><c> both</c><00:09:49.120><c> of</c><00:09:49.279><c> these</c>

00:09:49.910 --> 00:09:49.920 align:start position:0%
string you can see that both of these
 

00:09:49.920 --> 00:09:52.630 align:start position:0%
string you can see that both of these
together<00:09:50.720><c> form</c><00:09:51.120><c> a</c><00:09:51.200><c> str</c><00:09:51.760><c> form</c><00:09:52.080><c> two</c><00:09:52.320><c> different</c>

00:09:52.630 --> 00:09:52.640 align:start position:0%
together form a str form two different
 

00:09:52.640 --> 00:09:54.310 align:start position:0%
together form a str form two different
characters<00:09:53.120><c> right</c><00:09:53.279><c> two</c><00:09:53.519><c> characters</c><00:09:53.920><c> in</c><00:09:54.080><c> total</c>

00:09:54.310 --> 00:09:54.320 align:start position:0%
characters right two characters in total
 

00:09:54.320 --> 00:09:56.230 align:start position:0%
characters right two characters in total
so<00:09:54.480><c> what</c><00:09:54.640><c> we're</c><00:09:54.880><c> asking</c><00:09:55.279><c> is</c><00:09:55.600><c> if</c><00:09:55.760><c> you</c><00:09:55.920><c> look</c><00:09:56.080><c> at</c>

00:09:56.230 --> 00:09:56.240 align:start position:0%
so what we're asking is if you look at
 

00:09:56.240 --> 00:09:58.550 align:start position:0%
so what we're asking is if you look at
the<00:09:56.480><c> last</c><00:09:56.880><c> two</c><00:09:57.200><c> characters</c><00:09:57.760><c> in</c><00:09:57.920><c> our</c><00:09:58.160><c> resulting</c>

00:09:58.550 --> 00:09:58.560 align:start position:0%
the last two characters in our resulting
 

00:09:58.560 --> 00:10:00.550 align:start position:0%
the last two characters in our resulting
string<00:09:58.880><c> we</c><00:09:59.040><c> want</c><00:09:59.200><c> to</c><00:09:59.279><c> know</c><00:09:59.760><c> can</c><00:10:00.000><c> these</c><00:10:00.320><c> two</c>

00:10:00.550 --> 00:10:00.560 align:start position:0%
string we want to know can these two
 

00:10:00.560 --> 00:10:04.389 align:start position:0%
string we want to know can these two
characters<00:10:01.279><c> a</c><00:10:01.600><c> and</c><00:10:01.839><c> c</c><00:10:02.240><c> form</c><00:10:02.959><c> this</c><00:10:03.440><c> string</c>

00:10:04.389 --> 00:10:04.399 align:start position:0%
characters a and c form this string
 

00:10:04.399 --> 00:10:06.630 align:start position:0%
characters a and c form this string
a<00:10:05.040><c> c</c><00:10:05.279><c> right</c><00:10:05.440><c> that's</c><00:10:05.680><c> the</c><00:10:05.920><c> target</c><00:10:06.240><c> string</c><00:10:06.560><c> that</c>

00:10:06.630 --> 00:10:06.640 align:start position:0%
a c right that's the target string that
 

00:10:06.640 --> 00:10:07.990 align:start position:0%
a c right that's the target string that
we're<00:10:06.800><c> looking</c><00:10:07.040><c> for</c><00:10:07.360><c> can</c><00:10:07.600><c> these</c><00:10:07.760><c> two</c>

00:10:07.990 --> 00:10:08.000 align:start position:0%
we're looking for can these two
 

00:10:08.000 --> 00:10:09.910 align:start position:0%
we're looking for can these two
characters<00:10:08.399><c> form</c><00:10:08.640><c> it</c><00:10:08.880><c> of</c><00:10:08.959><c> course</c><00:10:09.360><c> by</c><00:10:09.680><c> looking</c>

00:10:09.910 --> 00:10:09.920 align:start position:0%
characters form it of course by looking
 

00:10:09.920 --> 00:10:12.389 align:start position:0%
characters form it of course by looking
at<00:10:10.079><c> them</c><00:10:10.320><c> you</c><00:10:10.399><c> can</c><00:10:10.560><c> tell</c><00:10:10.959><c> yes</c><00:10:11.440><c> they</c><00:10:11.760><c> can</c><00:10:12.079><c> form</c>

00:10:12.389 --> 00:10:12.399 align:start position:0%
at them you can tell yes they can form
 

00:10:12.399 --> 00:10:14.389 align:start position:0%
at them you can tell yes they can form
this<00:10:12.640><c> string</c><00:10:13.040><c> right</c><00:10:13.519><c> but</c><00:10:13.680><c> that's</c><00:10:14.000><c> basically</c>

00:10:14.389 --> 00:10:14.399 align:start position:0%
this string right but that's basically
 

00:10:14.399 --> 00:10:15.670 align:start position:0%
this string right but that's basically
what<00:10:14.560><c> we're</c><00:10:14.720><c> going</c><00:10:14.800><c> to</c><00:10:14.880><c> be</c><00:10:15.040><c> computing</c><00:10:15.519><c> we're</c>

00:10:15.670 --> 00:10:15.680 align:start position:0%
what we're going to be computing we're
 

00:10:15.680 --> 00:10:17.590 align:start position:0%
what we're going to be computing we're
going<00:10:15.760><c> to</c><00:10:15.839><c> be</c><00:10:15.920><c> doing</c><00:10:16.160><c> that</c><00:10:16.320><c> for</c><00:10:16.560><c> every</c><00:10:16.880><c> single</c>

00:10:17.590 --> 00:10:17.600 align:start position:0%
going to be doing that for every single
 

00:10:17.600 --> 00:10:21.190 align:start position:0%
going to be doing that for every single
cell<00:10:18.160><c> in</c><00:10:18.320><c> this</c><00:10:18.880><c> 2d</c><00:10:19.440><c> grid</c><00:10:20.000><c> and</c><00:10:20.399><c> yes</c><00:10:20.720><c> we're</c><00:10:20.959><c> even</c>

00:10:21.190 --> 00:10:21.200 align:start position:0%
cell in this 2d grid and yes we're even
 

00:10:21.200 --> 00:10:22.790 align:start position:0%
cell in this 2d grid and yes we're even
gonna<00:10:21.360><c> have</c><00:10:21.440><c> to</c><00:10:21.600><c> calculate</c><00:10:22.079><c> these</c><00:10:22.399><c> out</c><00:10:22.560><c> of</c>

00:10:22.790 --> 00:10:22.800 align:start position:0%
gonna have to calculate these out of
 

00:10:22.800 --> 00:10:24.790 align:start position:0%
gonna have to calculate these out of
bounds<00:10:23.200><c> positions</c><00:10:23.839><c> why</c><00:10:24.160><c> is</c><00:10:24.320><c> it</c><00:10:24.399><c> that</c><00:10:24.560><c> we</c><00:10:24.720><c> have</c>

00:10:24.790 --> 00:10:24.800 align:start position:0%
bounds positions why is it that we have
 

00:10:24.800 --> 00:10:26.310 align:start position:0%
bounds positions why is it that we have
to<00:10:24.959><c> do</c><00:10:25.120><c> that</c><00:10:25.360><c> because</c><00:10:25.680><c> they're</c><00:10:25.920><c> actually</c>

00:10:26.310 --> 00:10:26.320 align:start position:0%
to do that because they're actually
 

00:10:26.320 --> 00:10:28.230 align:start position:0%
to do that because they're actually
valid<00:10:26.800><c> positions</c><00:10:27.360><c> take</c><00:10:27.519><c> a</c><00:10:27.600><c> look</c><00:10:27.760><c> at</c><00:10:27.920><c> this</c>

00:10:28.230 --> 00:10:28.240 align:start position:0%
valid positions take a look at this
 

00:10:28.240 --> 00:10:30.389 align:start position:0%
valid positions take a look at this
position<00:10:28.880><c> this</c><00:10:29.200><c> means</c><00:10:29.519><c> if</c><00:10:29.600><c> we</c><00:10:29.760><c> had</c><00:10:30.000><c> zero</c>

00:10:30.389 --> 00:10:30.399 align:start position:0%
position this means if we had zero
 

00:10:30.399 --> 00:10:32.389 align:start position:0%
position this means if we had zero
characters<00:10:30.880><c> from</c><00:10:31.040><c> string</c><00:10:31.360><c> one</c><00:10:31.680><c> but</c><00:10:31.839><c> we</c><00:10:32.000><c> had</c><00:10:32.160><c> a</c>

00:10:32.389 --> 00:10:32.399 align:start position:0%
characters from string one but we had a
 

00:10:32.399 --> 00:10:34.790 align:start position:0%
characters from string one but we had a
single<00:10:32.800><c> character</c><00:10:33.360><c> from</c><00:10:33.600><c> string</c><00:10:34.000><c> two</c><00:10:34.399><c> meaning</c>

00:10:34.790 --> 00:10:34.800 align:start position:0%
single character from string two meaning
 

00:10:34.800 --> 00:10:37.190 align:start position:0%
single character from string two meaning
you<00:10:34.959><c> know</c><00:10:35.120><c> the</c><00:10:35.200><c> character</c><00:10:35.680><c> a</c><00:10:36.160><c> can</c><00:10:36.399><c> we</c><00:10:36.640><c> form</c><00:10:36.959><c> the</c>

00:10:37.190 --> 00:10:37.200 align:start position:0%
you know the character a can we form the
 

00:10:37.200 --> 00:10:39.430 align:start position:0%
you know the character a can we form the
last<00:10:37.600><c> character</c><00:10:38.240><c> of</c><00:10:38.399><c> the</c><00:10:38.560><c> target</c><00:10:38.959><c> string</c><00:10:39.279><c> well</c>

00:10:39.430 --> 00:10:39.440 align:start position:0%
last character of the target string well
 

00:10:39.440 --> 00:10:41.110 align:start position:0%
last character of the target string well
the<00:10:39.680><c> last</c><00:10:39.920><c> character</c><00:10:40.240><c> on</c><00:10:40.320><c> the</c><00:10:40.399><c> target</c><00:10:40.720><c> string</c>

00:10:41.110 --> 00:10:41.120 align:start position:0%
the last character on the target string
 

00:10:41.120 --> 00:10:41.990 align:start position:0%
the last character on the target string
is<00:10:41.279><c> c</c>

00:10:41.990 --> 00:10:42.000 align:start position:0%
is c
 

00:10:42.000 --> 00:10:45.110 align:start position:0%
is c
this<00:10:42.240><c> character</c><00:10:42.959><c> is</c><00:10:43.440><c> a</c><00:10:44.000><c> so</c><00:10:44.240><c> therefore</c><00:10:44.800><c> we</c>

00:10:45.110 --> 00:10:45.120 align:start position:0%
this character is a so therefore we
 

00:10:45.120 --> 00:10:47.509 align:start position:0%
this character is a so therefore we
can't<00:10:45.519><c> do</c><00:10:45.760><c> that</c><00:10:46.079><c> right</c><00:10:46.320><c> so</c><00:10:46.480><c> we</c><00:10:46.640><c> have</c><00:10:46.720><c> to</c><00:10:46.880><c> put</c><00:10:47.120><c> a</c>

00:10:47.509 --> 00:10:47.519 align:start position:0%
can't do that right so we have to put a
 

00:10:47.519 --> 00:10:51.110 align:start position:0%
can't do that right so we have to put a
false<00:10:48.320><c> over</c><00:10:48.959><c> here</c><00:10:49.519><c> and</c><00:10:49.839><c> similarly</c><00:10:50.480><c> from</c><00:10:50.800><c> this</c>

00:10:51.110 --> 00:10:51.120 align:start position:0%
false over here and similarly from this
 

00:10:51.120 --> 00:10:52.550 align:start position:0%
false over here and similarly from this
position<00:10:51.519><c> we're</c><00:10:51.680><c> looking</c><00:10:51.920><c> at</c><00:10:52.079><c> just</c><00:10:52.320><c> these</c>

00:10:52.550 --> 00:10:52.560 align:start position:0%
position we're looking at just these
 

00:10:52.560 --> 00:10:55.430 align:start position:0%
position we're looking at just these
last<00:10:52.800><c> two</c><00:10:52.959><c> characters</c><00:10:53.760><c> c</c><00:10:54.160><c> a</c><00:10:54.800><c> using</c><00:10:55.120><c> these</c>

00:10:55.430 --> 00:10:55.440 align:start position:0%
last two characters c a using these
 

00:10:55.440 --> 00:10:57.670 align:start position:0%
last two characters c a using these
characters<00:10:55.839><c> can</c><00:10:56.079><c> we</c><00:10:56.240><c> form</c><00:10:56.480><c> the</c><00:10:56.640><c> target</c><00:10:56.959><c> string</c>

00:10:57.670 --> 00:10:57.680 align:start position:0%
characters can we form the target string
 

00:10:57.680 --> 00:11:00.230 align:start position:0%
characters can we form the target string
a<00:10:58.240><c> c</c><00:10:58.560><c> you</c><00:10:58.640><c> might</c><00:10:58.880><c> think</c><00:10:59.200><c> yes</c><00:10:59.519><c> but</c><00:10:59.760><c> no</c><00:10:59.920><c> we</c><00:11:00.079><c> can't</c>

00:11:00.230 --> 00:11:00.240 align:start position:0%
a c you might think yes but no we can't
 

00:11:00.240 --> 00:11:01.910 align:start position:0%
a c you might think yes but no we can't
because<00:11:00.480><c> remember</c><00:11:00.800><c> the</c><00:11:01.040><c> relative</c><00:11:01.519><c> order</c><00:11:01.839><c> of</c>

00:11:01.910 --> 00:11:01.920 align:start position:0%
because remember the relative order of
 

00:11:01.920 --> 00:11:03.829 align:start position:0%
because remember the relative order of
these<00:11:02.160><c> characters</c><00:11:02.560><c> has</c><00:11:02.720><c> to</c><00:11:02.880><c> match</c><00:11:03.360><c> this</c><00:11:03.600><c> first</c>

00:11:03.829 --> 00:11:03.839 align:start position:0%
these characters has to match this first
 

00:11:03.839 --> 00:11:06.150 align:start position:0%
these characters has to match this first
character<00:11:04.320><c> c</c><00:11:04.640><c> has</c><00:11:04.880><c> to</c><00:11:05.120><c> match</c><00:11:05.600><c> this</c><00:11:05.839><c> character</c>

00:11:06.150 --> 00:11:06.160 align:start position:0%
character c has to match this character
 

00:11:06.160 --> 00:11:08.150 align:start position:0%
character c has to match this character
but<00:11:06.399><c> it</c><00:11:06.560><c> doesn't</c><00:11:06.959><c> so</c><00:11:07.120><c> this</c><00:11:07.360><c> is</c><00:11:07.600><c> also</c><00:11:07.920><c> going</c><00:11:08.079><c> to</c>

00:11:08.150 --> 00:11:08.160 align:start position:0%
but it doesn't so this is also going to
 

00:11:08.160 --> 00:11:10.389 align:start position:0%
but it doesn't so this is also going to
be<00:11:08.320><c> a</c><00:11:08.480><c> false</c><00:11:09.279><c> right</c><00:11:09.519><c> and</c><00:11:09.760><c> of</c><00:11:09.839><c> course</c><00:11:10.079><c> we</c><00:11:10.240><c> would</c>

00:11:10.389 --> 00:11:10.399 align:start position:0%
be a false right and of course we would
 

00:11:10.399 --> 00:11:12.389 align:start position:0%
be a false right and of course we would
do<00:11:10.560><c> the</c><00:11:10.640><c> same</c><00:11:10.880><c> thing</c><00:11:11.360><c> for</c><00:11:11.760><c> this</c><00:11:12.000><c> position</c>

00:11:12.389 --> 00:11:12.399 align:start position:0%
do the same thing for this position
 

00:11:12.399 --> 00:11:14.550 align:start position:0%
do the same thing for this position
right<00:11:12.640><c> computing</c><00:11:13.200><c> this</c><00:11:13.680><c> if</c><00:11:13.760><c> we</c><00:11:13.920><c> had</c><00:11:14.079><c> a</c><00:11:14.160><c> c</c><00:11:14.399><c> from</c>

00:11:14.550 --> 00:11:14.560 align:start position:0%
right computing this if we had a c from
 

00:11:14.560 --> 00:11:15.990 align:start position:0%
right computing this if we had a c from
here<00:11:14.720><c> but</c><00:11:14.880><c> we</c><00:11:15.040><c> had</c><00:11:15.200><c> nothing</c><00:11:15.440><c> from</c><00:11:15.680><c> here</c><00:11:15.920><c> in</c>

00:11:15.990 --> 00:11:16.000 align:start position:0%
here but we had nothing from here in
 

00:11:16.000 --> 00:11:17.670 align:start position:0%
here but we had nothing from here in
that<00:11:16.160><c> case</c><00:11:16.399><c> this</c><00:11:16.560><c> is</c><00:11:16.640><c> actually</c><00:11:16.959><c> going</c><00:11:17.040><c> to</c><00:11:17.120><c> be</c><00:11:17.360><c> a</c>

00:11:17.670 --> 00:11:17.680 align:start position:0%
that case this is actually going to be a
 

00:11:17.680 --> 00:11:21.829 align:start position:0%
that case this is actually going to be a
true<00:11:18.320><c> because</c><00:11:19.120><c> we</c><00:11:19.360><c> have</c><00:11:20.079><c> a</c><00:11:20.560><c> value</c><00:11:20.880><c> here</c><00:11:21.360><c> for</c><00:11:21.680><c> an</c>

00:11:21.829 --> 00:11:21.839 align:start position:0%
true because we have a value here for an
 

00:11:21.839 --> 00:11:23.750 align:start position:0%
true because we have a value here for an
arbitrary<00:11:22.560><c> position</c><00:11:22.959><c> like</c><00:11:23.200><c> this</c><00:11:23.360><c> let</c><00:11:23.519><c> me</c><00:11:23.600><c> just</c>

00:11:23.750 --> 00:11:23.760 align:start position:0%
arbitrary position like this let me just
 

00:11:23.760 --> 00:11:24.949 align:start position:0%
arbitrary position like this let me just
show<00:11:23.920><c> you</c><00:11:24.000><c> what's</c><00:11:24.160><c> going</c><00:11:24.240><c> to</c><00:11:24.320><c> happen</c>

00:11:24.949 --> 00:11:24.959 align:start position:0%
show you what's going to happen
 

00:11:24.959 --> 00:11:27.590 align:start position:0%
show you what's going to happen
obviously<00:11:25.360><c> this</c><00:11:25.600><c> mat</c><00:11:25.839><c> this</c><00:11:26.079><c> is</c><00:11:26.399><c> a</c><00:11:26.800><c> b</c><00:11:27.040><c> here</c><00:11:27.519><c> and</c>

00:11:27.590 --> 00:11:27.600 align:start position:0%
obviously this mat this is a b here and
 

00:11:27.600 --> 00:11:30.069 align:start position:0%
obviously this mat this is a b here and
we<00:11:27.760><c> have</c><00:11:28.079><c> a</c><00:11:28.320><c> b</c><00:11:28.560><c> in</c><00:11:28.640><c> this</c><00:11:28.880><c> portion</c><00:11:29.600><c> as</c><00:11:29.680><c> well</c><00:11:29.920><c> so</c>

00:11:30.069 --> 00:11:30.079 align:start position:0%
we have a b in this portion as well so
 

00:11:30.079 --> 00:11:31.670 align:start position:0%
we have a b in this portion as well so
if<00:11:30.160><c> we</c><00:11:30.240><c> take</c><00:11:30.399><c> the</c><00:11:30.640><c> indices</c><00:11:31.040><c> of</c><00:11:31.120><c> these</c><00:11:31.360><c> which</c><00:11:31.519><c> is</c>

00:11:31.670 --> 00:11:31.680 align:start position:0%
if we take the indices of these which is
 

00:11:31.680 --> 00:11:34.790 align:start position:0%
if we take the indices of these which is
two<00:11:32.000><c> plus</c><00:11:32.320><c> two</c><00:11:32.720><c> we</c><00:11:32.880><c> get</c><00:11:33.120><c> to</c><00:11:33.600><c> index</c><00:11:34.160><c> four</c><00:11:34.560><c> in</c><00:11:34.640><c> our</c>

00:11:34.790 --> 00:11:34.800 align:start position:0%
two plus two we get to index four in our
 

00:11:34.800 --> 00:11:37.110 align:start position:0%
two plus two we get to index four in our
target<00:11:35.200><c> string</c><00:11:35.519><c> which</c><00:11:35.680><c> is</c><00:11:36.160><c> this</c><00:11:36.720><c> target</c>

00:11:37.110 --> 00:11:37.120 align:start position:0%
target string which is this target
 

00:11:37.120 --> 00:11:38.949 align:start position:0%
target string which is this target
character<00:11:37.519><c> right</c><00:11:37.760><c> we're</c><00:11:37.920><c> looking</c><00:11:38.240><c> for</c><00:11:38.399><c> a</c><00:11:38.560><c> b</c>

00:11:38.949 --> 00:11:38.959 align:start position:0%
character right we're looking for a b
 

00:11:38.959 --> 00:11:41.509 align:start position:0%
character right we're looking for a b
now<00:11:39.200><c> notice</c><00:11:39.519><c> how</c><00:11:39.760><c> either</c><00:11:40.079><c> of</c><00:11:40.240><c> these</c><00:11:40.800><c> can</c><00:11:41.279><c> get</c>

00:11:41.509 --> 00:11:41.519 align:start position:0%
now notice how either of these can get
 

00:11:41.519 --> 00:11:45.430 align:start position:0%
now notice how either of these can get
there<00:11:42.160><c> if</c><00:11:42.399><c> we</c><00:11:42.720><c> used</c><00:11:43.200><c> the</c><00:11:43.360><c> b</c><00:11:44.000><c> from</c>

00:11:45.430 --> 00:11:45.440 align:start position:0%
there if we used the b from
 

00:11:45.440 --> 00:11:46.710 align:start position:0%
there if we used the b from
this<00:11:45.680><c> position</c>

00:11:46.710 --> 00:11:46.720 align:start position:0%
this position
 

00:11:46.720 --> 00:11:48.949 align:start position:0%
this position
like<00:11:47.120><c> this</c><00:11:47.360><c> b</c><00:11:48.000><c> what</c><00:11:48.160><c> would</c><00:11:48.320><c> we</c><00:11:48.480><c> do</c><00:11:48.720><c> in</c><00:11:48.800><c> that</c>

00:11:48.949 --> 00:11:48.959 align:start position:0%
like this b what would we do in that
 

00:11:48.959 --> 00:11:51.269 align:start position:0%
like this b what would we do in that
case<00:11:49.200><c> well</c><00:11:49.360><c> then</c><00:11:49.519><c> we'd</c><00:11:49.760><c> want</c><00:11:50.000><c> to</c><00:11:50.160><c> know</c><00:11:50.399><c> okay</c><00:11:50.959><c> we</c>

00:11:51.269 --> 00:11:51.279 align:start position:0%
case well then we'd want to know okay we
 

00:11:51.279 --> 00:11:53.590 align:start position:0%
case well then we'd want to know okay we
if<00:11:51.600><c> we</c><00:11:51.760><c> were</c><00:11:52.000><c> able</c><00:11:52.160><c> to</c><00:11:52.320><c> get</c><00:11:52.480><c> a</c><00:11:52.560><c> b</c><00:11:52.959><c> now</c><00:11:53.279><c> does</c><00:11:53.519><c> the</c>

00:11:53.590 --> 00:11:53.600 align:start position:0%
if we were able to get a b now does the
 

00:11:53.600 --> 00:11:56.550 align:start position:0%
if we were able to get a b now does the
result<00:11:54.399><c> in</c><00:11:54.480><c> the</c><00:11:54.639><c> bottom</c><00:11:54.959><c> position</c><00:11:55.600><c> equal</c><00:11:56.240><c> true</c>

00:11:56.550 --> 00:11:56.560 align:start position:0%
result in the bottom position equal true
 

00:11:56.560 --> 00:11:57.750 align:start position:0%
result in the bottom position equal true
why<00:11:56.720><c> are</c><00:11:56.800><c> we</c><00:11:56.959><c> looking</c><00:11:57.200><c> in</c><00:11:57.360><c> the</c><00:11:57.440><c> bottom</c>

00:11:57.750 --> 00:11:57.760 align:start position:0%
why are we looking in the bottom
 

00:11:57.760 --> 00:12:00.150 align:start position:0%
why are we looking in the bottom
position<00:11:58.079><c> because</c><00:11:58.320><c> we</c><00:11:58.480><c> just</c><00:11:58.800><c> used</c><00:11:59.360><c> this</c><00:11:59.680><c> b</c><00:11:59.920><c> so</c>

00:12:00.150 --> 00:12:00.160 align:start position:0%
position because we just used this b so
 

00:12:00.160 --> 00:12:01.670 align:start position:0%
position because we just used this b so
we<00:12:00.320><c> can't</c><00:12:00.480><c> use</c><00:12:00.720><c> it</c><00:12:00.800><c> again</c><00:12:01.120><c> we</c><00:12:01.200><c> have</c><00:12:01.360><c> to</c><00:12:01.440><c> use</c>

00:12:01.670 --> 00:12:01.680 align:start position:0%
we can't use it again we have to use
 

00:12:01.680 --> 00:12:04.310 align:start position:0%
we can't use it again we have to use
these<00:12:01.920><c> last</c><00:12:02.160><c> two</c><00:12:02.320><c> characters</c><00:12:02.880><c> but</c><00:12:03.120><c> we</c><00:12:03.360><c> can</c><00:12:03.760><c> use</c>

00:12:04.310 --> 00:12:04.320 align:start position:0%
these last two characters but we can use
 

00:12:04.320 --> 00:12:06.470 align:start position:0%
these last two characters but we can use
this<00:12:04.639><c> first</c><00:12:05.040><c> b</c><00:12:05.360><c> if</c><00:12:05.519><c> we</c><00:12:05.760><c> want</c><00:12:06.000><c> to</c><00:12:06.160><c> because</c><00:12:06.399><c> we</c>

00:12:06.470 --> 00:12:06.480 align:start position:0%
this first b if we want to because we
 

00:12:06.480 --> 00:12:07.990 align:start position:0%
this first b if we want to because we
didn't<00:12:06.720><c> use</c><00:12:06.959><c> it</c><00:12:07.040><c> yet</c><00:12:07.200><c> so</c><00:12:07.360><c> in</c><00:12:07.440><c> that</c><00:12:07.600><c> case</c><00:12:07.839><c> we</c>

00:12:07.990 --> 00:12:08.000 align:start position:0%
didn't use it yet so in that case we
 

00:12:08.000 --> 00:12:10.550 align:start position:0%
didn't use it yet so in that case we
would<00:12:08.160><c> go</c><00:12:08.399><c> down</c><00:12:08.959><c> in</c><00:12:09.120><c> the</c><00:12:09.360><c> opposite</c><00:12:09.839><c> case</c><00:12:10.240><c> if</c><00:12:10.399><c> we</c>

00:12:10.550 --> 00:12:10.560 align:start position:0%
would go down in the opposite case if we
 

00:12:10.560 --> 00:12:13.350 align:start position:0%
would go down in the opposite case if we
used<00:12:11.040><c> this</c><00:12:11.360><c> b</c><00:12:11.760><c> we</c><00:12:12.000><c> cross</c><00:12:12.320><c> it</c><00:12:12.480><c> out</c><00:12:12.800><c> we</c><00:12:12.959><c> can</c><00:12:13.120><c> still</c>

00:12:13.350 --> 00:12:13.360 align:start position:0%
used this b we cross it out we can still
 

00:12:13.360 --> 00:12:15.269 align:start position:0%
used this b we cross it out we can still
use<00:12:13.680><c> this</c><00:12:13.920><c> one</c><00:12:14.240><c> but</c><00:12:14.399><c> we</c><00:12:14.480><c> can</c><00:12:14.639><c> only</c><00:12:14.800><c> use</c><00:12:15.040><c> two</c>

00:12:15.269 --> 00:12:15.279 align:start position:0%
use this one but we can only use two
 

00:12:15.279 --> 00:12:16.870 align:start position:0%
use this one but we can only use two
characters<00:12:15.680><c> from</c><00:12:15.839><c> here</c><00:12:16.079><c> so</c><00:12:16.240><c> in</c><00:12:16.399><c> that</c><00:12:16.480><c> case</c><00:12:16.720><c> we</c>

00:12:16.870 --> 00:12:16.880 align:start position:0%
characters from here so in that case we
 

00:12:16.880 --> 00:12:18.710 align:start position:0%
characters from here so in that case we
would<00:12:17.040><c> go</c><00:12:17.200><c> to</c><00:12:17.360><c> the</c><00:12:17.519><c> right</c><00:12:17.839><c> now</c><00:12:18.079><c> if</c><00:12:18.240><c> either</c><00:12:18.560><c> of</c>

00:12:18.710 --> 00:12:18.720 align:start position:0%
would go to the right now if either of
 

00:12:18.720 --> 00:12:20.550 align:start position:0%
would go to the right now if either of
these<00:12:19.200><c> in</c><00:12:19.360><c> this</c><00:12:19.519><c> case</c><00:12:19.680><c> we</c><00:12:19.839><c> can</c><00:12:19.920><c> go</c><00:12:20.160><c> in</c><00:12:20.240><c> both</c>

00:12:20.550 --> 00:12:20.560 align:start position:0%
these in this case we can go in both
 

00:12:20.560 --> 00:12:22.470 align:start position:0%
these in this case we can go in both
directions<00:12:21.040><c> if</c><00:12:21.279><c> either</c><00:12:21.600><c> the</c><00:12:21.760><c> bottom</c><00:12:22.079><c> neighbor</c>

00:12:22.470 --> 00:12:22.480 align:start position:0%
directions if either the bottom neighbor
 

00:12:22.480 --> 00:12:24.790 align:start position:0%
directions if either the bottom neighbor
is<00:12:22.639><c> true</c><00:12:23.120><c> or</c><00:12:23.600><c> the</c><00:12:23.839><c> right</c><00:12:24.079><c> neighbor</c><00:12:24.480><c> is</c><00:12:24.560><c> true</c>

00:12:24.790 --> 00:12:24.800 align:start position:0%
is true or the right neighbor is true
 

00:12:24.800 --> 00:12:27.590 align:start position:0%
is true or the right neighbor is true
then<00:12:25.040><c> we</c><00:12:25.200><c> can</c><00:12:25.360><c> put</c><00:12:25.839><c> true</c><00:12:26.320><c> in</c><00:12:26.720><c> this</c><00:12:26.959><c> position</c><00:12:27.440><c> if</c>

00:12:27.590 --> 00:12:27.600 align:start position:0%
then we can put true in this position if
 

00:12:27.600 --> 00:12:29.590 align:start position:0%
then we can put true in this position if
they<00:12:27.680><c> were</c><00:12:27.920><c> both</c><00:12:28.240><c> false</c><00:12:28.720><c> then</c><00:12:28.959><c> we</c><00:12:29.120><c> can't</c><00:12:29.440><c> put</c>

00:12:29.590 --> 00:12:29.600 align:start position:0%
they were both false then we can't put
 

00:12:29.600 --> 00:12:31.750 align:start position:0%
they were both false then we can't put
false<00:12:29.920><c> if</c><00:12:30.079><c> only</c><00:12:30.639><c> then</c><00:12:30.800><c> we</c><00:12:30.880><c> can't</c><00:12:31.120><c> put</c><00:12:31.279><c> true</c><00:12:31.600><c> if</c>

00:12:31.750 --> 00:12:31.760 align:start position:0%
false if only then we can't put true if
 

00:12:31.760 --> 00:12:33.670 align:start position:0%
false if only then we can't put true if
only<00:12:32.000><c> one</c><00:12:32.160><c> of</c><00:12:32.320><c> them</c><00:12:32.480><c> was</c><00:12:32.639><c> true</c><00:12:32.959><c> then</c><00:12:33.200><c> we</c><00:12:33.360><c> can</c>

00:12:33.670 --> 00:12:33.680 align:start position:0%
only one of them was true then we can
 

00:12:33.680 --> 00:12:36.069 align:start position:0%
only one of them was true then we can
also<00:12:34.000><c> put</c><00:12:34.240><c> true</c><00:12:34.880><c> now</c><00:12:35.040><c> let's</c><00:12:35.360><c> dive</c><00:12:35.760><c> into</c><00:12:36.000><c> the</c>

00:12:36.069 --> 00:12:36.079 align:start position:0%
also put true now let's dive into the
 

00:12:36.079 --> 00:12:37.990 align:start position:0%
also put true now let's dive into the
coding<00:12:36.480><c> portion</c><00:12:36.880><c> so</c><00:12:37.120><c> in</c><00:12:37.279><c> the</c><00:12:37.440><c> interest</c><00:12:37.839><c> of</c>

00:12:37.990 --> 00:12:38.000 align:start position:0%
coding portion so in the interest of
 

00:12:38.000 --> 00:12:39.910 align:start position:0%
coding portion so in the interest of
time<00:12:38.320><c> i'm</c><00:12:38.480><c> just</c><00:12:38.639><c> going</c><00:12:38.800><c> to</c><00:12:38.959><c> skip</c><00:12:39.360><c> and</c><00:12:39.519><c> show</c><00:12:39.680><c> you</c>

00:12:39.910 --> 00:12:39.920 align:start position:0%
time i'm just going to skip and show you
 

00:12:39.920 --> 00:12:42.629 align:start position:0%
time i'm just going to skip and show you
what<00:12:40.240><c> the</c><00:12:40.800><c> memoization</c><00:12:41.680><c> recursive</c><00:12:42.240><c> solution</c>

00:12:42.629 --> 00:12:42.639 align:start position:0%
what the memoization recursive solution
 

00:12:42.639 --> 00:12:43.910 align:start position:0%
what the memoization recursive solution
looks<00:12:42.880><c> like</c><00:12:43.040><c> and</c><00:12:43.120><c> then</c><00:12:43.279><c> we're</c><00:12:43.440><c> going</c><00:12:43.519><c> to</c><00:12:43.680><c> code</c>

00:12:43.910 --> 00:12:43.920 align:start position:0%
looks like and then we're going to code
 

00:12:43.920 --> 00:12:45.509 align:start position:0%
looks like and then we're going to code
up<00:12:44.000><c> the</c><00:12:44.079><c> dynamic</c><00:12:44.560><c> programming</c><00:12:45.040><c> solution</c><00:12:45.360><c> so</c>

00:12:45.509 --> 00:12:45.519 align:start position:0%
up the dynamic programming solution so
 

00:12:45.519 --> 00:12:47.190 align:start position:0%
up the dynamic programming solution so
we<00:12:45.680><c> do</c><00:12:45.839><c> have</c><00:12:46.000><c> a</c><00:12:46.160><c> cache</c><00:12:46.560><c> in</c><00:12:46.639><c> this</c><00:12:46.800><c> case</c><00:12:47.040><c> it's</c>

00:12:47.190 --> 00:12:47.200 align:start position:0%
we do have a cache in this case it's
 

00:12:47.200 --> 00:12:48.870 align:start position:0%
we do have a cache in this case it's
going<00:12:47.279><c> to</c><00:12:47.440><c> be</c><00:12:47.600><c> a</c><00:12:47.680><c> hashmap</c><00:12:48.399><c> and</c><00:12:48.480><c> you</c><00:12:48.639><c> can</c><00:12:48.720><c> see</c>

00:12:48.870 --> 00:12:48.880 align:start position:0%
going to be a hashmap and you can see
 

00:12:48.880 --> 00:12:51.269 align:start position:0%
going to be a hashmap and you can see
we're<00:12:49.120><c> passing</c><00:12:49.440><c> in</c><00:12:49.600><c> two</c><00:12:49.920><c> pointers</c><00:12:50.720><c> into</c><00:12:51.120><c> our</c>

00:12:51.269 --> 00:12:51.279 align:start position:0%
we're passing in two pointers into our
 

00:12:51.279 --> 00:12:52.949 align:start position:0%
we're passing in two pointers into our
function<00:12:51.600><c> just</c><00:12:51.760><c> like</c><00:12:52.000><c> we</c><00:12:52.079><c> did</c><00:12:52.320><c> in</c><00:12:52.399><c> the</c><00:12:52.560><c> drawing</c>

00:12:52.949 --> 00:12:52.959 align:start position:0%
function just like we did in the drawing
 

00:12:52.959 --> 00:12:56.310 align:start position:0%
function just like we did in the drawing
right<00:12:53.200><c> and</c><00:12:53.279><c> our</c><00:12:53.440><c> base</c><00:12:53.760><c> case</c><00:12:54.240><c> is</c><00:12:54.480><c> yes</c><00:12:54.959><c> if</c><00:12:55.440><c> i</c><00:12:56.079><c> and</c>

00:12:56.310 --> 00:12:56.320 align:start position:0%
right and our base case is yes if i and
 

00:12:56.320 --> 00:12:58.550 align:start position:0%
right and our base case is yes if i and
j<00:12:56.639><c> are</c><00:12:56.880><c> out</c><00:12:57.040><c> of</c><00:12:57.200><c> bounds</c><00:12:57.680><c> then</c><00:12:57.839><c> we</c><00:12:58.000><c> can</c><00:12:58.160><c> return</c>

00:12:58.550 --> 00:12:58.560 align:start position:0%
j are out of bounds then we can return
 

00:12:58.560 --> 00:13:00.870 align:start position:0%
j are out of bounds then we can return
true<00:12:58.959><c> that's</c><00:12:59.200><c> one</c><00:12:59.440><c> base</c><00:12:59.760><c> case</c><00:13:00.160><c> another</c><00:13:00.560><c> base</c>

00:13:00.870 --> 00:13:00.880 align:start position:0%
true that's one base case another base
 

00:13:00.880 --> 00:13:03.110 align:start position:0%
true that's one base case another base
case<00:13:01.200><c> is</c><00:13:01.440><c> if</c><00:13:01.760><c> this</c><00:13:02.000><c> position</c><00:13:02.480><c> has</c><00:13:02.720><c> already</c>

00:13:03.110 --> 00:13:03.120 align:start position:0%
case is if this position has already
 

00:13:03.120 --> 00:13:05.190 align:start position:0%
case is if this position has already
been<00:13:03.279><c> computed</c><00:13:04.079><c> meaning</c><00:13:04.399><c> it's</c><00:13:04.720><c> already</c><00:13:05.120><c> in</c>

00:13:05.190 --> 00:13:05.200 align:start position:0%
been computed meaning it's already in
 

00:13:05.200 --> 00:13:07.750 align:start position:0%
been computed meaning it's already in
the<00:13:05.360><c> dynamic</c><00:13:05.920><c> programming</c><00:13:06.880><c> cache</c><00:13:07.440><c> then</c><00:13:07.680><c> we</c>

00:13:07.750 --> 00:13:07.760 align:start position:0%
the dynamic programming cache then we
 

00:13:07.760 --> 00:13:10.150 align:start position:0%
the dynamic programming cache then we
can<00:13:07.920><c> just</c><00:13:08.079><c> return</c><00:13:08.480><c> the</c><00:13:08.560><c> result</c><00:13:09.519><c> now</c><00:13:09.760><c> if</c><00:13:09.920><c> that's</c>

00:13:10.150 --> 00:13:10.160 align:start position:0%
can just return the result now if that's
 

00:13:10.160 --> 00:13:11.990 align:start position:0%
can just return the result now if that's
not<00:13:10.399><c> the</c><00:13:10.560><c> case</c><00:13:10.880><c> then</c><00:13:11.040><c> we</c><00:13:11.200><c> have</c><00:13:11.279><c> to</c><00:13:11.440><c> go</c><00:13:11.680><c> into</c><00:13:11.920><c> our</c>

00:13:11.990 --> 00:13:12.000 align:start position:0%
not the case then we have to go into our
 

00:13:12.000 --> 00:13:13.910 align:start position:0%
not the case then we have to go into our
recursive<00:13:12.639><c> case</c><00:13:13.040><c> you</c><00:13:13.200><c> might</c><00:13:13.360><c> not</c><00:13:13.519><c> be</c><00:13:13.600><c> able</c><00:13:13.760><c> to</c>

00:13:13.910 --> 00:13:13.920 align:start position:0%
recursive case you might not be able to
 

00:13:13.920 --> 00:13:15.910 align:start position:0%
recursive case you might not be able to
tell<00:13:14.160><c> but</c><00:13:14.399><c> yes</c><00:13:14.639><c> this</c><00:13:14.880><c> is</c><00:13:14.959><c> recursion</c><00:13:15.519><c> because</c>

00:13:15.910 --> 00:13:15.920 align:start position:0%
tell but yes this is recursion because
 

00:13:15.920 --> 00:13:19.110 align:start position:0%
tell but yes this is recursion because
we're<00:13:16.160><c> checking</c><00:13:16.880><c> if</c><00:13:17.279><c> i</c><00:13:17.920><c> is</c><00:13:18.320><c> still</c><00:13:18.639><c> in</c><00:13:18.800><c> bounds</c>

00:13:19.110 --> 00:13:19.120 align:start position:0%
we're checking if i is still in bounds
 

00:13:19.120 --> 00:13:20.550 align:start position:0%
we're checking if i is still in bounds
right<00:13:19.279><c> because</c><00:13:19.600><c> technically</c><00:13:20.160><c> one</c><00:13:20.320><c> of</c><00:13:20.399><c> the</c>

00:13:20.550 --> 00:13:20.560 align:start position:0%
right because technically one of the
 

00:13:20.560 --> 00:13:23.030 align:start position:0%
right because technically one of the
strings<00:13:21.040><c> could</c><00:13:21.279><c> be</c><00:13:21.519><c> out</c><00:13:21.680><c> of</c><00:13:21.760><c> bounds</c><00:13:22.079><c> so</c><00:13:22.320><c> if</c><00:13:22.639><c> i</c>

00:13:23.030 --> 00:13:23.040 align:start position:0%
strings could be out of bounds so if i
 

00:13:23.040 --> 00:13:24.870 align:start position:0%
strings could be out of bounds so if i
is<00:13:23.200><c> in</c><00:13:23.360><c> bounds</c><00:13:23.680><c> then</c><00:13:23.839><c> we're</c><00:13:24.000><c> gonna</c><00:13:24.240><c> check</c><00:13:24.639><c> does</c>

00:13:24.870 --> 00:13:24.880 align:start position:0%
is in bounds then we're gonna check does
 

00:13:24.880 --> 00:13:27.990 align:start position:0%
is in bounds then we're gonna check does
the<00:13:25.040><c> character</c><00:13:25.680><c> in</c><00:13:26.160><c> string</c><00:13:26.560><c> one</c><00:13:27.200><c> i</c><00:13:27.600><c> basically</c>

00:13:27.990 --> 00:13:28.000 align:start position:0%
the character in string one i basically
 

00:13:28.000 --> 00:13:29.829 align:start position:0%
the character in string one i basically
is<00:13:28.079><c> the</c><00:13:28.240><c> pointer</c><00:13:28.480><c> for</c><00:13:28.639><c> string</c><00:13:28.959><c> one</c><00:13:29.360><c> does</c><00:13:29.600><c> that</c>

00:13:29.829 --> 00:13:29.839 align:start position:0%
is the pointer for string one does that
 

00:13:29.839 --> 00:13:31.910 align:start position:0%
is the pointer for string one does that
character<00:13:30.320><c> match</c><00:13:30.959><c> the</c><00:13:31.200><c> target</c><00:13:31.519><c> position</c>

00:13:31.910 --> 00:13:31.920 align:start position:0%
character match the target position
 

00:13:31.920 --> 00:13:34.069 align:start position:0%
character match the target position
we're<00:13:32.079><c> looking</c><00:13:32.320><c> at</c><00:13:32.560><c> in</c><00:13:32.720><c> string</c><00:13:33.040><c> three</c><00:13:33.680><c> like</c><00:13:33.920><c> i</c>

00:13:34.069 --> 00:13:34.079 align:start position:0%
we're looking at in string three like i
 

00:13:34.079 --> 00:13:36.310 align:start position:0%
we're looking at in string three like i
said<00:13:34.320><c> we're</c><00:13:34.480><c> taking</c><00:13:34.880><c> i</c><00:13:35.200><c> plus</c><00:13:35.680><c> j</c><00:13:35.920><c> the</c><00:13:36.079><c> two</c>

00:13:36.310 --> 00:13:36.320 align:start position:0%
said we're taking i plus j the two
 

00:13:36.320 --> 00:13:38.389 align:start position:0%
said we're taking i plus j the two
pointers<00:13:36.800><c> adding</c><00:13:37.040><c> them</c><00:13:37.200><c> together</c><00:13:37.760><c> to</c><00:13:38.079><c> find</c>

00:13:38.389 --> 00:13:38.399 align:start position:0%
pointers adding them together to find
 

00:13:38.399 --> 00:13:40.790 align:start position:0%
pointers adding them together to find
the<00:13:38.560><c> target</c><00:13:39.040><c> character</c><00:13:39.519><c> in</c><00:13:39.680><c> string</c><00:13:40.160><c> three</c><00:13:40.560><c> so</c>

00:13:40.790 --> 00:13:40.800 align:start position:0%
the target character in string three so
 

00:13:40.800 --> 00:13:42.550 align:start position:0%
the target character in string three so
if<00:13:40.959><c> the</c><00:13:41.040><c> characters</c><00:13:41.519><c> match</c><00:13:42.000><c> then</c><00:13:42.240><c> we're</c><00:13:42.399><c> gonna</c>

00:13:42.550 --> 00:13:42.560 align:start position:0%
if the characters match then we're gonna
 

00:13:42.560 --> 00:13:45.110 align:start position:0%
if the characters match then we're gonna
take<00:13:43.040><c> i</c><00:13:43.600><c> and</c><00:13:43.920><c> increment</c><00:13:44.480><c> it</c><00:13:44.560><c> by</c><00:13:44.720><c> one</c><00:13:44.959><c> right</c>

00:13:45.110 --> 00:13:45.120 align:start position:0%
take i and increment it by one right
 

00:13:45.120 --> 00:13:46.629 align:start position:0%
take i and increment it by one right
we're<00:13:45.360><c> incrementing</c><00:13:45.920><c> it</c><00:13:46.000><c> by</c><00:13:46.160><c> one</c><00:13:46.399><c> because</c>

00:13:46.629 --> 00:13:46.639 align:start position:0%
we're incrementing it by one because
 

00:13:46.639 --> 00:13:48.710 align:start position:0%
we're incrementing it by one because
we're<00:13:46.880><c> saying</c><00:13:47.199><c> we</c><00:13:47.360><c> just</c><00:13:47.680><c> used</c><00:13:48.079><c> the</c><00:13:48.240><c> character</c>

00:13:48.710 --> 00:13:48.720 align:start position:0%
we're saying we just used the character
 

00:13:48.720 --> 00:13:51.030 align:start position:0%
we're saying we just used the character
from<00:13:48.959><c> string</c><00:13:49.279><c> one</c><00:13:49.680><c> now</c><00:13:50.079><c> the</c><00:13:50.320><c> next</c><00:13:50.560><c> two</c><00:13:50.800><c> lines</c>

00:13:51.030 --> 00:13:51.040 align:start position:0%
from string one now the next two lines
 

00:13:51.040 --> 00:13:53.269 align:start position:0%
from string one now the next two lines
of<00:13:51.199><c> code</c><00:13:51.440><c> are</c><00:13:51.600><c> the</c><00:13:51.760><c> exact</c><00:13:52.240><c> opposite</c><00:13:52.959><c> if</c><00:13:53.120><c> the</c>

00:13:53.269 --> 00:13:53.279 align:start position:0%
of code are the exact opposite if the
 

00:13:53.279 --> 00:13:55.590 align:start position:0%
of code are the exact opposite if the
string<00:13:53.920><c> if</c><00:13:54.079><c> the</c><00:13:54.240><c> character</c><00:13:54.720><c> if</c><00:13:54.880><c> the</c><00:13:55.120><c> pointer</c>

00:13:55.590 --> 00:13:55.600 align:start position:0%
string if the character if the pointer
 

00:13:55.600 --> 00:13:57.670 align:start position:0%
string if the character if the pointer
in<00:13:55.680><c> string</c><00:13:56.079><c> two</c><00:13:56.320><c> is</c><00:13:56.560><c> inbounds</c><00:13:57.279><c> and</c><00:13:57.519><c> that</c>

00:13:57.670 --> 00:13:57.680 align:start position:0%
in string two is inbounds and that
 

00:13:57.680 --> 00:13:59.829 align:start position:0%
in string two is inbounds and that
character<00:13:58.480><c> in</c><00:13:58.639><c> string</c><00:13:58.959><c> two</c><00:13:59.279><c> matches</c><00:13:59.680><c> the</c>

00:13:59.829 --> 00:13:59.839 align:start position:0%
character in string two matches the
 

00:13:59.839 --> 00:14:01.590 align:start position:0%
character in string two matches the
target<00:14:00.240><c> character</c><00:14:00.639><c> then</c><00:14:00.800><c> we're</c><00:14:00.959><c> gonna</c><00:14:01.199><c> take</c>

00:14:01.590 --> 00:14:01.600 align:start position:0%
target character then we're gonna take
 

00:14:01.600 --> 00:14:04.790 align:start position:0%
target character then we're gonna take
dfs<00:14:02.320><c> and</c><00:14:02.720><c> increment</c><00:14:03.360><c> j</c><00:14:03.680><c> by</c><00:14:03.920><c> one</c><00:14:04.320><c> saying</c><00:14:04.639><c> we</c>

00:14:04.790 --> 00:14:04.800 align:start position:0%
dfs and increment j by one saying we
 

00:14:04.800 --> 00:14:07.269 align:start position:0%
dfs and increment j by one saying we
just<00:14:05.120><c> used</c><00:14:05.519><c> the</c><00:14:05.680><c> character</c><00:14:06.240><c> in</c><00:14:06.560><c> string</c><00:14:06.880><c> two</c>

00:14:07.269 --> 00:14:07.279 align:start position:0%
just used the character in string two
 

00:14:07.279 --> 00:14:09.430 align:start position:0%
just used the character in string two
and<00:14:07.600><c> if</c><00:14:07.760><c> that</c><00:14:07.920><c> returns</c><00:14:08.399><c> true</c><00:14:08.800><c> then</c><00:14:09.040><c> we</c><00:14:09.279><c> can</c>

00:14:09.430 --> 00:14:09.440 align:start position:0%
and if that returns true then we can
 

00:14:09.440 --> 00:14:11.910 align:start position:0%
and if that returns true then we can
return<00:14:09.839><c> true</c><00:14:10.160><c> in</c><00:14:10.399><c> either</c><00:14:10.639><c> of</c><00:14:10.720><c> these</c><00:14:11.360><c> cases</c><00:14:11.760><c> we</c>

00:14:11.910 --> 00:14:11.920 align:start position:0%
return true in either of these cases we
 

00:14:11.920 --> 00:14:13.430 align:start position:0%
return true in either of these cases we
don't<00:14:12.079><c> have</c><00:14:12.160><c> to</c><00:14:12.399><c> cache</c><00:14:12.720><c> that</c><00:14:12.880><c> because</c><00:14:13.120><c> if</c><00:14:13.199><c> we</c>

00:14:13.430 --> 00:14:13.440 align:start position:0%
don't have to cache that because if we
 

00:14:13.440 --> 00:14:15.670 align:start position:0%
don't have to cache that because if we
find<00:14:13.760><c> one</c><00:14:14.160><c> valid</c><00:14:14.720><c> result</c><00:14:15.199><c> then</c><00:14:15.360><c> we</c><00:14:15.440><c> can</c>

00:14:15.670 --> 00:14:15.680 align:start position:0%
find one valid result then we can
 

00:14:15.680 --> 00:14:17.990 align:start position:0%
find one valid result then we can
immediately<00:14:16.240><c> return</c><00:14:16.639><c> true</c><00:14:17.199><c> from</c><00:14:17.440><c> the</c><00:14:17.680><c> root</c>

00:14:17.990 --> 00:14:18.000 align:start position:0%
immediately return true from the root
 

00:14:18.000 --> 00:14:20.629 align:start position:0%
immediately return true from the root
function<00:14:18.639><c> if</c><00:14:18.959><c> neither</c><00:14:19.279><c> of</c><00:14:19.440><c> them</c><00:14:19.600><c> return</c><00:14:20.079><c> true</c>

00:14:20.629 --> 00:14:20.639 align:start position:0%
function if neither of them return true
 

00:14:20.639 --> 00:14:23.990 align:start position:0%
function if neither of them return true
then<00:14:20.880><c> we</c><00:14:21.120><c> have</c><00:14:21.279><c> to</c><00:14:21.519><c> dp</c><00:14:22.079><c> cache</c><00:14:22.480><c> this</c><00:14:23.040><c> as</c><00:14:23.360><c> false</c>

00:14:23.990 --> 00:14:24.000 align:start position:0%
then we have to dp cache this as false
 

00:14:24.000 --> 00:14:26.150 align:start position:0%
then we have to dp cache this as false
and<00:14:24.079><c> then</c><00:14:24.320><c> return</c><00:14:24.880><c> false</c><00:14:25.440><c> because</c><00:14:25.680><c> we</c><00:14:25.839><c> don't</c>

00:14:26.150 --> 00:14:26.160 align:start position:0%
and then return false because we don't
 

00:14:26.160 --> 00:14:28.550 align:start position:0%
and then return false because we don't
have<00:14:26.320><c> to</c><00:14:26.480><c> repeat</c><00:14:26.959><c> the</c><00:14:27.199><c> work</c><00:14:27.600><c> again</c><00:14:28.160><c> so</c><00:14:28.320><c> that's</c>

00:14:28.550 --> 00:14:28.560 align:start position:0%
have to repeat the work again so that's
 

00:14:28.560 --> 00:14:30.310 align:start position:0%
have to repeat the work again so that's
the<00:14:28.720><c> entire</c><00:14:29.040><c> function</c><00:14:29.519><c> i</c><00:14:29.680><c> bet</c><00:14:29.839><c> it's</c><00:14:30.079><c> a</c><00:14:30.160><c> little</c>

00:14:30.310 --> 00:14:30.320 align:start position:0%
the entire function i bet it's a little
 

00:14:30.320 --> 00:14:32.230 align:start position:0%
the entire function i bet it's a little
bit<00:14:30.480><c> easier</c><00:14:30.800><c> than</c><00:14:30.959><c> you</c><00:14:31.120><c> expected</c><00:14:31.839><c> and</c><00:14:32.000><c> then</c>

00:14:32.230 --> 00:14:32.240 align:start position:0%
bit easier than you expected and then
 

00:14:32.240 --> 00:14:34.389 align:start position:0%
bit easier than you expected and then
all<00:14:32.399><c> we</c><00:14:32.560><c> have</c><00:14:32.639><c> to</c><00:14:32.720><c> do</c><00:14:32.880><c> is</c><00:14:33.040><c> call</c><00:14:33.279><c> dfs</c><00:14:33.920><c> starting</c>

00:14:34.389 --> 00:14:34.399 align:start position:0%
all we have to do is call dfs starting
 

00:14:34.399 --> 00:14:37.670 align:start position:0%
all we have to do is call dfs starting
at<00:14:34.720><c> the</c><00:14:34.959><c> beginning</c><00:14:35.440><c> of</c><00:14:35.600><c> both</c><00:14:35.839><c> strings</c><00:14:36.480><c> 0</c><00:14:36.800><c> 0.</c><00:14:37.440><c> so</c>

00:14:37.670 --> 00:14:37.680 align:start position:0%
at the beginning of both strings 0 0. so
 

00:14:37.680 --> 00:14:39.670 align:start position:0%
at the beginning of both strings 0 0. so
now<00:14:37.839><c> let's</c><00:14:38.079><c> do</c><00:14:38.240><c> the</c><00:14:38.320><c> dp</c><00:14:38.720><c> portion</c><00:14:39.360><c> and</c><00:14:39.600><c> the</c>

00:14:39.670 --> 00:14:39.680 align:start position:0%
now let's do the dp portion and the
 

00:14:39.680 --> 00:14:40.870 align:start position:0%
now let's do the dp portion and the
first<00:14:39.920><c> thing</c><00:14:40.079><c> i'm</c><00:14:40.160><c> going</c><00:14:40.240><c> to</c><00:14:40.320><c> do</c><00:14:40.480><c> is</c><00:14:40.560><c> just</c><00:14:40.720><c> make</c>

00:14:40.870 --> 00:14:40.880 align:start position:0%
first thing i'm going to do is just make
 

00:14:40.880 --> 00:14:42.710 align:start position:0%
first thing i'm going to do is just make
sure<00:14:41.040><c> that</c><00:14:41.199><c> the</c><00:14:41.440><c> length</c><00:14:41.760><c> of</c><00:14:41.839><c> the</c><00:14:42.000><c> strings</c><00:14:42.480><c> add</c>

00:14:42.710 --> 00:14:42.720 align:start position:0%
sure that the length of the strings add
 

00:14:42.720 --> 00:14:44.629 align:start position:0%
sure that the length of the strings add
up<00:14:42.880><c> to</c><00:14:43.040><c> the</c><00:14:43.199><c> length</c><00:14:43.600><c> of</c><00:14:43.760><c> the</c><00:14:43.920><c> target</c><00:14:44.240><c> string</c><00:14:44.480><c> so</c>

00:14:44.629 --> 00:14:44.639 align:start position:0%
up to the length of the target string so
 

00:14:44.639 --> 00:14:47.350 align:start position:0%
up to the length of the target string so
if<00:14:44.800><c> length</c><00:14:45.199><c> of</c><00:14:45.680><c> string</c><00:14:46.160><c> two</c><00:14:46.480><c> and</c><00:14:46.560><c> string</c><00:14:46.959><c> three</c>

00:14:47.350 --> 00:14:47.360 align:start position:0%
if length of string two and string three
 

00:14:47.360 --> 00:14:49.350 align:start position:0%
if length of string two and string three
add<00:14:47.760><c> up</c><00:14:47.920><c> to</c><00:14:48.079><c> the</c><00:14:48.160><c> length</c><00:14:48.480><c> of</c><00:14:48.560><c> string</c><00:14:48.880><c> one</c><00:14:49.120><c> then</c>

00:14:49.350 --> 00:14:49.360 align:start position:0%
add up to the length of string one then
 

00:14:49.360 --> 00:14:51.030 align:start position:0%
add up to the length of string one then
we<00:14:49.519><c> can</c><00:14:49.760><c> return</c>

00:14:51.030 --> 00:14:51.040 align:start position:0%
we can return
 

00:14:51.040 --> 00:14:52.870 align:start position:0%
we can return
false<00:14:51.360><c> if</c><00:14:51.440><c> they</c><00:14:51.680><c> don't</c><00:14:52.000><c> add</c><00:14:52.240><c> up</c><00:14:52.320><c> let</c><00:14:52.480><c> me</c><00:14:52.720><c> make</c>

00:14:52.870 --> 00:14:52.880 align:start position:0%
false if they don't add up let me make
 

00:14:52.880 --> 00:14:54.150 align:start position:0%
false if they don't add up let me make
that<00:14:53.040><c> correction</c><00:14:53.440><c> if</c><00:14:53.519><c> they</c><00:14:53.680><c> don't</c><00:14:53.839><c> add</c><00:14:54.079><c> up</c>

00:14:54.150 --> 00:14:54.160 align:start position:0%
that correction if they don't add up
 

00:14:54.160 --> 00:14:55.829 align:start position:0%
that correction if they don't add up
then<00:14:54.320><c> we</c><00:14:54.480><c> return</c><00:14:54.800><c> false</c><00:14:55.120><c> otherwise</c><00:14:55.600><c> we</c><00:14:55.680><c> can</c>

00:14:55.829 --> 00:14:55.839 align:start position:0%
then we return false otherwise we can
 

00:14:55.839 --> 00:14:59.189 align:start position:0%
then we return false otherwise we can
continue<00:14:56.720><c> so</c><00:14:57.040><c> otherwise</c><00:14:57.760><c> we</c><00:14:58.000><c> can</c><00:14:58.240><c> actually</c><00:14:58.720><c> uh</c>

00:14:59.189 --> 00:14:59.199 align:start position:0%
continue so otherwise we can actually uh
 

00:14:59.199 --> 00:15:01.430 align:start position:0%
continue so otherwise we can actually uh
basically<00:14:59.760><c> so</c><00:15:00.079><c> otherwise</c><00:15:00.480><c> we</c><00:15:00.639><c> can</c><00:15:00.800><c> initialize</c>

00:15:01.430 --> 00:15:01.440 align:start position:0%
basically so otherwise we can initialize
 

00:15:01.440 --> 00:15:03.670 align:start position:0%
basically so otherwise we can initialize
our<00:15:01.600><c> dp</c><00:15:02.240><c> two-dimensional</c><00:15:03.040><c> array</c><00:15:03.440><c> i'm</c><00:15:03.519><c> just</c>

00:15:03.670 --> 00:15:03.680 align:start position:0%
our dp two-dimensional array i'm just
 

00:15:03.680 --> 00:15:05.269 align:start position:0%
our dp two-dimensional array i'm just
going<00:15:03.760><c> to</c><00:15:03.920><c> copy</c><00:15:04.240><c> paste</c><00:15:04.560><c> that</c><00:15:04.720><c> in</c><00:15:04.800><c> the</c><00:15:04.959><c> interest</c>

00:15:05.269 --> 00:15:05.279 align:start position:0%
going to copy paste that in the interest
 

00:15:05.279 --> 00:15:07.509 align:start position:0%
going to copy paste that in the interest
of<00:15:05.519><c> time</c><00:15:05.920><c> so</c><00:15:06.399><c> remember</c><00:15:06.880><c> we're</c><00:15:07.120><c> just</c><00:15:07.279><c> gonna</c>

00:15:07.509 --> 00:15:07.519 align:start position:0%
of time so remember we're just gonna
 

00:15:07.519 --> 00:15:09.910 align:start position:0%
of time so remember we're just gonna
initialize<00:15:08.160><c> this</c><00:15:08.560><c> as</c><00:15:08.720><c> basically</c><00:15:09.360><c> empty</c><00:15:09.760><c> in</c>

00:15:09.910 --> 00:15:09.920 align:start position:0%
initialize this as basically empty in
 

00:15:09.920 --> 00:15:11.030 align:start position:0%
initialize this as basically empty in
other<00:15:10.079><c> words</c><00:15:10.240><c> we're</c><00:15:10.480><c> gonna</c><00:15:10.639><c> initialize</c>

00:15:11.030 --> 00:15:11.040 align:start position:0%
other words we're gonna initialize
 

00:15:11.040 --> 00:15:12.870 align:start position:0%
other words we're gonna initialize
everything<00:15:11.360><c> as</c><00:15:11.600><c> false</c><00:15:12.079><c> and</c><00:15:12.240><c> the</c><00:15:12.320><c> dimensions</c>

00:15:12.870 --> 00:15:12.880 align:start position:0%
everything as false and the dimensions
 

00:15:12.880 --> 00:15:14.629 align:start position:0%
everything as false and the dimensions
are<00:15:13.040><c> going</c><00:15:13.120><c> to</c><00:15:13.199><c> be</c><00:15:13.360><c> basically</c><00:15:13.839><c> the</c><00:15:14.079><c> length</c><00:15:14.480><c> of</c>

00:15:14.629 --> 00:15:14.639 align:start position:0%
are going to be basically the length of
 

00:15:14.639 --> 00:15:17.430 align:start position:0%
are going to be basically the length of
string<00:15:15.040><c> one</c><00:15:15.440><c> and</c><00:15:15.600><c> string</c><00:15:16.000><c> two</c><00:15:16.480><c> plus</c><00:15:17.040><c> one</c>

00:15:17.430 --> 00:15:17.440 align:start position:0%
string one and string two plus one
 

00:15:17.440 --> 00:15:19.509 align:start position:0%
string one and string two plus one
remember<00:15:17.760><c> because</c><00:15:18.000><c> we</c><00:15:18.160><c> do</c><00:15:18.399><c> need</c><00:15:18.639><c> that</c><00:15:18.880><c> outside</c>

00:15:19.509 --> 00:15:19.519 align:start position:0%
remember because we do need that outside
 

00:15:19.519 --> 00:15:21.189 align:start position:0%
remember because we do need that outside
layer<00:15:19.920><c> so</c><00:15:20.079><c> that's</c><00:15:20.320><c> just</c><00:15:20.480><c> what</c><00:15:20.639><c> this</c><00:15:20.880><c> is</c><00:15:20.959><c> doing</c>

00:15:21.189 --> 00:15:21.199 align:start position:0%
layer so that's just what this is doing
 

00:15:21.199 --> 00:15:22.629 align:start position:0%
layer so that's just what this is doing
you<00:15:21.279><c> could</c><00:15:21.440><c> do</c><00:15:21.600><c> this</c><00:15:21.839><c> differently</c><00:15:22.240><c> in</c><00:15:22.399><c> other</c>

00:15:22.629 --> 00:15:22.639 align:start position:0%
you could do this differently in other
 

00:15:22.639 --> 00:15:25.509 align:start position:0%
you could do this differently in other
languages<00:15:23.360><c> and</c><00:15:23.920><c> for</c><00:15:24.240><c> the</c><00:15:24.720><c> out</c><00:15:24.959><c> of</c><00:15:25.120><c> bounds</c>

00:15:25.509 --> 00:15:25.519 align:start position:0%
languages and for the out of bounds
 

00:15:25.519 --> 00:15:27.350 align:start position:0%
languages and for the out of bounds
position<00:15:26.240><c> like</c><00:15:26.399><c> the</c><00:15:26.560><c> out</c><00:15:26.720><c> of</c><00:15:26.800><c> bounds</c><00:15:27.040><c> position</c>

00:15:27.350 --> 00:15:27.360 align:start position:0%
position like the out of bounds position
 

00:15:27.360 --> 00:15:30.069 align:start position:0%
position like the out of bounds position
in<00:15:27.519><c> both</c><00:15:27.760><c> strings</c><00:15:28.399><c> string</c><00:15:28.880><c> one</c><00:15:29.360><c> and</c><00:15:29.680><c> string</c>

00:15:30.069 --> 00:15:30.079 align:start position:0%
in both strings string one and string
 

00:15:30.079 --> 00:15:32.790 align:start position:0%
in both strings string one and string
two<00:15:30.720><c> we</c><00:15:30.959><c> want</c><00:15:31.120><c> to</c><00:15:31.279><c> initialize</c><00:15:31.839><c> that</c><00:15:32.240><c> corner</c>

00:15:32.790 --> 00:15:32.800 align:start position:0%
two we want to initialize that corner
 

00:15:32.800 --> 00:15:35.269 align:start position:0%
two we want to initialize that corner
value<00:15:33.279><c> as</c><00:15:33.680><c> true</c><00:15:34.079><c> remember</c><00:15:34.480><c> just</c><00:15:34.720><c> like</c><00:15:34.959><c> in</c><00:15:35.120><c> the</c>

00:15:35.269 --> 00:15:35.279 align:start position:0%
value as true remember just like in the
 

00:15:35.279 --> 00:15:38.470 align:start position:0%
value as true remember just like in the
drawing<00:15:36.000><c> position</c><00:15:36.880><c> the</c><00:15:36.959><c> drawing</c><00:15:37.360><c> picture</c><00:15:38.079><c> and</c>

00:15:38.470 --> 00:15:38.480 align:start position:0%
drawing position the drawing picture and
 

00:15:38.480 --> 00:15:39.910 align:start position:0%
drawing position the drawing picture and
i<00:15:38.639><c> don't</c><00:15:38.720><c> know</c><00:15:38.880><c> if</c><00:15:39.040><c> i</c><00:15:39.120><c> mentioned</c><00:15:39.440><c> this</c><00:15:39.600><c> in</c><00:15:39.759><c> the</c>

00:15:39.910 --> 00:15:39.920 align:start position:0%
i don't know if i mentioned this in the
 

00:15:39.920 --> 00:15:41.350 align:start position:0%
i don't know if i mentioned this in the
drawing<00:15:40.160><c> but</c><00:15:40.320><c> we</c><00:15:40.480><c> are</c><00:15:40.560><c> going</c><00:15:40.639><c> to</c><00:15:40.800><c> start</c><00:15:41.040><c> at</c><00:15:41.199><c> the</c>

00:15:41.350 --> 00:15:41.360 align:start position:0%
drawing but we are going to start at the
 

00:15:41.360 --> 00:15:43.110 align:start position:0%
drawing but we are going to start at the
bottom<00:15:41.759><c> right</c><00:15:42.000><c> corner</c><00:15:42.399><c> and</c><00:15:42.480><c> then</c><00:15:42.720><c> work</c><00:15:42.959><c> our</c>

00:15:43.110 --> 00:15:43.120 align:start position:0%
bottom right corner and then work our
 

00:15:43.120 --> 00:15:45.749 align:start position:0%
bottom right corner and then work our
way<00:15:43.279><c> to</c><00:15:43.440><c> the</c><00:15:43.759><c> left</c><00:15:44.160><c> and</c><00:15:44.240><c> then</c><00:15:44.480><c> work</c><00:15:44.720><c> our</c><00:15:44.880><c> way</c><00:15:45.279><c> up</c>

00:15:45.749 --> 00:15:45.759 align:start position:0%
way to the left and then work our way up
 

00:15:45.759 --> 00:15:48.470 align:start position:0%
way to the left and then work our way up
row<00:15:46.000><c> by</c><00:15:46.240><c> row</c><00:15:46.480><c> so</c><00:15:46.720><c> that's</c><00:15:46.959><c> what</c><00:15:47.120><c> these</c><00:15:47.519><c> two</c><00:15:47.920><c> are</c>

00:15:48.470 --> 00:15:48.480 align:start position:0%
row by row so that's what these two are
 

00:15:48.480 --> 00:15:50.629 align:start position:0%
row by row so that's what these two are
uh<00:15:48.880><c> these</c><00:15:49.120><c> two</c><00:15:49.519><c> for</c><00:15:49.759><c> loops</c><00:15:50.079><c> are</c><00:15:50.240><c> indicating</c>

00:15:50.629 --> 00:15:50.639 align:start position:0%
uh these two for loops are indicating
 

00:15:50.639 --> 00:15:52.150 align:start position:0%
uh these two for loops are indicating
it's<00:15:50.800><c> a</c><00:15:50.880><c> nested</c><00:15:51.279><c> loop</c><00:15:51.440><c> we're</c><00:15:51.600><c> starting</c><00:15:51.920><c> at</c><00:15:52.000><c> the</c>

00:15:52.150 --> 00:15:52.160 align:start position:0%
it's a nested loop we're starting at the
 

00:15:52.160 --> 00:15:54.230 align:start position:0%
it's a nested loop we're starting at the
bottom<00:15:52.560><c> right</c><00:15:52.800><c> working</c><00:15:53.120><c> our</c><00:15:53.199><c> way</c><00:15:53.440><c> to</c><00:15:53.600><c> the</c><00:15:53.680><c> top</c>

00:15:54.230 --> 00:15:54.240 align:start position:0%
bottom right working our way to the top
 

00:15:54.240 --> 00:15:56.230 align:start position:0%
bottom right working our way to the top
left<00:15:54.639><c> now</c><00:15:54.800><c> the</c><00:15:55.040><c> rest</c><00:15:55.360><c> of</c><00:15:55.519><c> this</c><00:15:55.839><c> code</c><00:15:56.079><c> is</c>

00:15:56.230 --> 00:15:56.240 align:start position:0%
left now the rest of this code is
 

00:15:56.240 --> 00:15:58.470 align:start position:0%
left now the rest of this code is
actually<00:15:56.480><c> going</c><00:15:56.639><c> to</c><00:15:56.720><c> be</c><00:15:56.959><c> very</c><00:15:57.279><c> much</c><00:15:57.759><c> borrowed</c>

00:15:58.470 --> 00:15:58.480 align:start position:0%
actually going to be very much borrowed
 

00:15:58.480 --> 00:16:00.230 align:start position:0%
actually going to be very much borrowed
from<00:15:58.639><c> what</c><00:15:58.800><c> we</c><00:15:58.959><c> just</c><00:15:59.199><c> did</c><00:15:59.440><c> in</c><00:15:59.519><c> the</c><00:15:59.680><c> recursive</c>

00:16:00.230 --> 00:16:00.240 align:start position:0%
from what we just did in the recursive
 

00:16:00.240 --> 00:16:02.310 align:start position:0%
from what we just did in the recursive
solution<00:16:00.959><c> so</c><00:16:01.360><c> i'm</c><00:16:01.600><c> actually</c><00:16:01.839><c> just</c><00:16:02.000><c> going</c><00:16:02.160><c> to</c>

00:16:02.310 --> 00:16:02.320 align:start position:0%
solution so i'm actually just going to
 

00:16:02.320 --> 00:16:04.230 align:start position:0%
solution so i'm actually just going to
copy<00:16:02.639><c> and</c><00:16:02.720><c> paste</c><00:16:03.040><c> these</c><00:16:03.360><c> two</c><00:16:03.600><c> lines</c><00:16:03.920><c> to</c><00:16:04.079><c> show</c>

00:16:04.230 --> 00:16:04.240 align:start position:0%
copy and paste these two lines to show
 

00:16:04.240 --> 00:16:05.990 align:start position:0%
copy and paste these two lines to show
you<00:16:04.480><c> it's</c><00:16:04.720><c> actually</c><00:16:05.120><c> very</c><00:16:05.440><c> similar</c><00:16:05.759><c> to</c><00:16:05.920><c> the</c>

00:16:05.990 --> 00:16:06.000 align:start position:0%
you it's actually very similar to the
 

00:16:06.000 --> 00:16:08.629 align:start position:0%
you it's actually very similar to the
recursive<00:16:06.480><c> solution</c><00:16:07.120><c> so</c><00:16:07.680><c> what</c><00:16:07.920><c> exactly</c><00:16:08.320><c> do</c><00:16:08.560><c> we</c>

00:16:08.629 --> 00:16:08.639 align:start position:0%
recursive solution so what exactly do we
 

00:16:08.639 --> 00:16:11.189 align:start position:0%
recursive solution so what exactly do we
need<00:16:08.800><c> to</c><00:16:09.040><c> change</c><00:16:09.519><c> the</c><00:16:09.759><c> same</c><00:16:10.000><c> thing</c><00:16:10.240><c> is</c><00:16:10.480><c> true</c><00:16:10.800><c> if</c>

00:16:11.189 --> 00:16:11.199 align:start position:0%
need to change the same thing is true if
 

00:16:11.199 --> 00:16:13.910 align:start position:0%
need to change the same thing is true if
i<00:16:11.680><c> is</c><00:16:12.000><c> in</c><00:16:12.240><c> bounds</c><00:16:12.800><c> because</c><00:16:13.120><c> remember</c><00:16:13.600><c> one</c><00:16:13.839><c> of</c>

00:16:13.910 --> 00:16:13.920 align:start position:0%
i is in bounds because remember one of
 

00:16:13.920 --> 00:16:15.430 align:start position:0%
i is in bounds because remember one of
these<00:16:14.079><c> strings</c><00:16:14.560><c> could</c><00:16:14.720><c> be</c><00:16:14.959><c> one</c><00:16:15.120><c> of</c><00:16:15.199><c> these</c>

00:16:15.430 --> 00:16:15.440 align:start position:0%
these strings could be one of these
 

00:16:15.440 --> 00:16:17.509 align:start position:0%
these strings could be one of these
pointers<00:16:15.839><c> could</c><00:16:16.000><c> be</c><00:16:16.240><c> out</c><00:16:16.399><c> of</c><00:16:16.560><c> bounds</c><00:16:17.199><c> because</c>

00:16:17.509 --> 00:16:17.519 align:start position:0%
pointers could be out of bounds because
 

00:16:17.519 --> 00:16:19.670 align:start position:0%
pointers could be out of bounds because
we<00:16:17.759><c> are</c><00:16:18.399><c> uh</c><00:16:18.639><c> computing</c><00:16:19.199><c> some</c><00:16:19.360><c> of</c><00:16:19.440><c> those</c>

00:16:19.670 --> 00:16:19.680 align:start position:0%
we are uh computing some of those
 

00:16:19.680 --> 00:16:21.509 align:start position:0%
we are uh computing some of those
out-of-bound<00:16:20.399><c> corner</c><00:16:20.800><c> positions</c><00:16:21.279><c> right</c><00:16:21.440><c> so</c>

00:16:21.509 --> 00:16:21.519 align:start position:0%
out-of-bound corner positions right so
 

00:16:21.519 --> 00:16:23.910 align:start position:0%
out-of-bound corner positions right so
if<00:16:21.759><c> i</c><00:16:22.079><c> is</c><00:16:22.240><c> still</c><00:16:22.720><c> in</c><00:16:22.959><c> bounds</c><00:16:23.279><c> then</c><00:16:23.519><c> we</c><00:16:23.600><c> want</c><00:16:23.759><c> to</c>

00:16:23.910 --> 00:16:23.920 align:start position:0%
if i is still in bounds then we want to
 

00:16:23.920 --> 00:16:26.230 align:start position:0%
if i is still in bounds then we want to
check<00:16:24.399><c> okay</c><00:16:24.639><c> does</c><00:16:24.880><c> that</c><00:16:25.040><c> character</c><00:16:25.680><c> equal</c><00:16:26.079><c> to</c>

00:16:26.230 --> 00:16:26.240 align:start position:0%
check okay does that character equal to
 

00:16:26.240 --> 00:16:27.829 align:start position:0%
check okay does that character equal to
the<00:16:26.399><c> target</c><00:16:26.720><c> character</c><00:16:27.040><c> we're</c><00:16:27.199><c> looking</c><00:16:27.440><c> for</c>

00:16:27.829 --> 00:16:27.839 align:start position:0%
the target character we're looking for
 

00:16:27.839 --> 00:16:30.790 align:start position:0%
the target character we're looking for
if<00:16:28.079><c> it</c><00:16:28.399><c> does</c><00:16:29.120><c> we</c><00:16:29.279><c> don't</c><00:16:29.519><c> want</c><00:16:29.680><c> to</c><00:16:29.759><c> compute</c><00:16:30.240><c> dfs</c>

00:16:30.790 --> 00:16:30.800 align:start position:0%
if it does we don't want to compute dfs
 

00:16:30.800 --> 00:16:32.629 align:start position:0%
if it does we don't want to compute dfs
right<00:16:30.959><c> but</c><00:16:31.120><c> we</c><00:16:31.279><c> want</c><00:16:31.519><c> to</c><00:16:31.680><c> know</c><00:16:31.920><c> if</c><00:16:32.079><c> the</c><00:16:32.160><c> result</c>

00:16:32.629 --> 00:16:32.639 align:start position:0%
right but we want to know if the result
 

00:16:32.639 --> 00:16:34.949 align:start position:0%
right but we want to know if the result
of<00:16:32.720><c> this</c><00:16:32.959><c> is</c><00:16:33.199><c> true</c><00:16:33.839><c> but</c><00:16:34.079><c> we</c><00:16:34.240><c> can</c><00:16:34.399><c> do</c><00:16:34.560><c> that</c><00:16:34.720><c> from</c>

00:16:34.949 --> 00:16:34.959 align:start position:0%
of this is true but we can do that from
 

00:16:34.959 --> 00:16:36.790 align:start position:0%
of this is true but we can do that from
our<00:16:35.120><c> dp</c><00:16:35.519><c> right</c><00:16:35.680><c> we're</c><00:16:35.920><c> not</c><00:16:36.000><c> doing</c><00:16:36.240><c> recursion</c>

00:16:36.790 --> 00:16:36.800 align:start position:0%
our dp right we're not doing recursion
 

00:16:36.800 --> 00:16:39.430 align:start position:0%
our dp right we're not doing recursion
we're<00:16:37.040><c> just</c><00:16:37.199><c> using</c><00:16:37.600><c> our</c><00:16:37.759><c> dp</c><00:16:38.320><c> value</c><00:16:38.959><c> and</c><00:16:39.199><c> since</c>

00:16:39.430 --> 00:16:39.440 align:start position:0%
we're just using our dp value and since
 

00:16:39.440 --> 00:16:41.509 align:start position:0%
we're just using our dp value and since
we're<00:16:39.600><c> computing</c><00:16:40.000><c> this</c><00:16:40.320><c> bottom</c><00:16:40.800><c> up</c><00:16:41.199><c> we</c><00:16:41.360><c> know</c>

00:16:41.509 --> 00:16:41.519 align:start position:0%
we're computing this bottom up we know
 

00:16:41.519 --> 00:16:43.910 align:start position:0%
we're computing this bottom up we know
that<00:16:41.759><c> the</c><00:16:41.920><c> result</c><00:16:42.399><c> of</c><00:16:42.560><c> this</c><00:16:42.800><c> will</c><00:16:43.120><c> already</c><00:16:43.680><c> be</c>

00:16:43.910 --> 00:16:43.920 align:start position:0%
that the result of this will already be
 

00:16:43.920 --> 00:16:46.310 align:start position:0%
that the result of this will already be
computed<00:16:44.399><c> so</c><00:16:44.560><c> instead</c><00:16:44.880><c> of</c><00:16:45.040><c> saying</c><00:16:45.279><c> dfs</c><00:16:46.000><c> let's</c>

00:16:46.310 --> 00:16:46.320 align:start position:0%
computed so instead of saying dfs let's
 

00:16:46.320 --> 00:16:50.230 align:start position:0%
computed so instead of saying dfs let's
change<00:16:46.639><c> this</c><00:16:46.800><c> to</c><00:16:47.040><c> dp</c><00:16:48.000><c> of</c><00:16:48.639><c> i</c><00:16:48.959><c> plus</c><00:16:49.279><c> 1</c>

00:16:50.230 --> 00:16:50.240 align:start position:0%
change this to dp of i plus 1
 

00:16:50.240 --> 00:16:51.749 align:start position:0%
change this to dp of i plus 1
and<00:16:50.959><c> j</c>

00:16:51.749 --> 00:16:51.759 align:start position:0%
and j
 

00:16:51.759 --> 00:16:54.069 align:start position:0%
and j
so<00:16:52.160><c> if</c><00:16:52.480><c> this</c><00:16:52.800><c> happens</c><00:16:53.199><c> to</c><00:16:53.279><c> be</c><00:16:53.440><c> true</c><00:16:53.759><c> then</c><00:16:53.920><c> what</c>

00:16:54.069 --> 00:16:54.079 align:start position:0%
so if this happens to be true then what
 

00:16:54.079 --> 00:16:55.110 align:start position:0%
so if this happens to be true then what
are<00:16:54.160><c> we</c><00:16:54.240><c> going</c><00:16:54.320><c> to</c><00:16:54.399><c> do</c><00:16:54.560><c> we're</c><00:16:54.720><c> not</c><00:16:54.880><c> going</c><00:16:54.959><c> to</c>

00:16:55.110 --> 00:16:55.120 align:start position:0%
are we going to do we're not going to
 

00:16:55.120 --> 00:16:57.189 align:start position:0%
are we going to do we're not going to
return<00:16:55.759><c> true</c><00:16:56.160><c> right</c><00:16:56.560><c> because</c><00:16:56.880><c> we're</c><00:16:57.040><c> not</c>

00:16:57.189 --> 00:16:57.199 align:start position:0%
return true right because we're not
 

00:16:57.199 --> 00:16:58.790 align:start position:0%
return true right because we're not
doing<00:16:57.360><c> this</c><00:16:57.519><c> recursively</c><00:16:58.399><c> we're</c><00:16:58.560><c> going</c><00:16:58.720><c> to</c>

00:16:58.790 --> 00:16:58.800 align:start position:0%
doing this recursively we're going to
 

00:16:58.800 --> 00:17:02.069 align:start position:0%
doing this recursively we're going to
set<00:16:59.040><c> dp</c><00:16:59.839><c> of</c><00:17:00.320><c> i</c><00:17:00.720><c> and</c><00:17:00.880><c> j</c><00:17:01.440><c> whatever</c><00:17:01.839><c> we're</c>

00:17:02.069 --> 00:17:02.079 align:start position:0%
set dp of i and j whatever we're
 

00:17:02.079 --> 00:17:03.990 align:start position:0%
set dp of i and j whatever we're
currently<00:17:02.639><c> at</c><00:17:02.880><c> in</c><00:17:02.959><c> this</c><00:17:03.199><c> for</c><00:17:03.440><c> loop</c><00:17:03.680><c> and</c><00:17:03.759><c> then</c>

00:17:03.990 --> 00:17:04.000 align:start position:0%
currently at in this for loop and then
 

00:17:04.000 --> 00:17:06.710 align:start position:0%
currently at in this for loop and then
set<00:17:04.240><c> it</c><00:17:04.400><c> equal</c><00:17:04.720><c> to</c><00:17:04.880><c> true</c><00:17:05.360><c> right</c><00:17:06.079><c> again</c><00:17:06.559><c> for</c>

00:17:06.710 --> 00:17:06.720 align:start position:0%
set it equal to true right again for
 

00:17:06.720 --> 00:17:08.150 align:start position:0%
set it equal to true right again for
these<00:17:06.959><c> bottom</c><00:17:07.280><c> two</c><00:17:07.439><c> lines</c><00:17:07.679><c> we're</c><00:17:07.839><c> going</c><00:17:07.919><c> to</c><00:17:08.000><c> do</c>

00:17:08.150 --> 00:17:08.160 align:start position:0%
these bottom two lines we're going to do
 

00:17:08.160 --> 00:17:11.110 align:start position:0%
these bottom two lines we're going to do
the<00:17:08.319><c> exact</c><00:17:08.799><c> same</c><00:17:09.120><c> so</c><00:17:09.360><c> instead</c><00:17:09.600><c> of</c><00:17:09.839><c> calling</c><00:17:10.160><c> dfs</c>

00:17:11.110 --> 00:17:11.120 align:start position:0%
the exact same so instead of calling dfs
 

00:17:11.120 --> 00:17:12.949 align:start position:0%
the exact same so instead of calling dfs
if<00:17:11.360><c> j</c><00:17:11.679><c> is</c><00:17:11.839><c> still</c><00:17:12.000><c> in</c><00:17:12.160><c> bounds</c><00:17:12.640><c> and</c><00:17:12.880><c> the</c>

00:17:12.949 --> 00:17:12.959 align:start position:0%
if j is still in bounds and the
 

00:17:12.959 --> 00:17:14.630 align:start position:0%
if j is still in bounds and the
character<00:17:13.439><c> at</c><00:17:13.600><c> j</c><00:17:13.919><c> equals</c><00:17:14.240><c> the</c><00:17:14.319><c> character</c>

00:17:14.630 --> 00:17:14.640 align:start position:0%
character at j equals the character
 

00:17:14.640 --> 00:17:15.510 align:start position:0%
character at j equals the character
we're<00:17:14.799><c> looking</c><00:17:14.959><c> for</c><00:17:15.120><c> we're</c><00:17:15.280><c> not</c><00:17:15.439><c> going</c><00:17:15.439><c> to</c>

00:17:15.510 --> 00:17:15.520 align:start position:0%
we're looking for we're not going to
 

00:17:15.520 --> 00:17:19.110 align:start position:0%
we're looking for we're not going to
call<00:17:15.679><c> dfs</c><00:17:16.240><c> we</c><00:17:16.400><c> want</c><00:17:16.559><c> to</c><00:17:16.720><c> know</c><00:17:17.199><c> is</c><00:17:17.760><c> dp</c><00:17:18.640><c> of</c><00:17:18.880><c> these</c>

00:17:19.110 --> 00:17:19.120 align:start position:0%
call dfs we want to know is dp of these
 

00:17:19.120 --> 00:17:21.110 align:start position:0%
call dfs we want to know is dp of these
two<00:17:19.360><c> pointers</c><00:17:20.079><c> still</c>

00:17:21.110 --> 00:17:21.120 align:start position:0%
two pointers still
 

00:17:21.120 --> 00:17:24.150 align:start position:0%
two pointers still
true<00:17:21.600><c> so</c><00:17:21.760><c> we're</c><00:17:21.919><c> going</c><00:17:22.000><c> to</c><00:17:22.160><c> say</c><00:17:22.480><c> i</c><00:17:23.120><c> dp</c><00:17:23.520><c> of</c><00:17:23.679><c> i</c><00:17:24.000><c> and</c>

00:17:24.150 --> 00:17:24.160 align:start position:0%
true so we're going to say i dp of i and
 

00:17:24.160 --> 00:17:27.669 align:start position:0%
true so we're going to say i dp of i and
dp<00:17:24.720><c> of</c><00:17:24.959><c> j</c><00:17:25.360><c> plus</c><00:17:25.919><c> 1.</c><00:17:26.640><c> if</c><00:17:26.799><c> that's</c><00:17:27.039><c> true</c><00:17:27.360><c> then</c><00:17:27.520><c> we</c>

00:17:27.669 --> 00:17:27.679 align:start position:0%
dp of j plus 1. if that's true then we
 

00:17:27.679 --> 00:17:30.070 align:start position:0%
dp of j plus 1. if that's true then we
can<00:17:27.839><c> set</c><00:17:28.079><c> our</c><00:17:28.240><c> dp</c><00:17:28.720><c> position</c><00:17:29.360><c> to</c><00:17:29.600><c> true</c><00:17:29.919><c> it's</c>

00:17:30.070 --> 00:17:30.080 align:start position:0%
can set our dp position to true it's
 

00:17:30.080 --> 00:17:31.830 align:start position:0%
can set our dp position to true it's
possible<00:17:30.480><c> that</c><00:17:30.720><c> both</c><00:17:30.960><c> of</c><00:17:31.120><c> these</c><00:17:31.679><c> if</c>

00:17:31.830 --> 00:17:31.840 align:start position:0%
possible that both of these if
 

00:17:31.840 --> 00:17:33.669 align:start position:0%
possible that both of these if
statements<00:17:32.240><c> will</c><00:17:32.480><c> execute</c><00:17:33.039><c> that</c><00:17:33.280><c> isn't</c><00:17:33.600><c> a</c>

00:17:33.669 --> 00:17:33.679 align:start position:0%
statements will execute that isn't a
 

00:17:33.679 --> 00:17:35.190 align:start position:0%
statements will execute that isn't a
problem<00:17:34.000><c> for</c><00:17:34.160><c> us</c><00:17:34.320><c> right</c><00:17:34.480><c> we'll</c><00:17:34.799><c> set</c><00:17:34.960><c> it</c><00:17:35.039><c> to</c>

00:17:35.190 --> 00:17:35.200 align:start position:0%
problem for us right we'll set it to
 

00:17:35.200 --> 00:17:37.909 align:start position:0%
problem for us right we'll set it to
true<00:17:35.520><c> either</c><00:17:35.840><c> way</c><00:17:36.160><c> now</c><00:17:36.720><c> if</c><00:17:37.039><c> neither</c><00:17:37.440><c> of</c><00:17:37.600><c> these</c>

00:17:37.909 --> 00:17:37.919 align:start position:0%
true either way now if neither of these
 

00:17:37.919 --> 00:17:40.230 align:start position:0%
true either way now if neither of these
if<00:17:38.080><c> statements</c><00:17:38.640><c> executes</c><00:17:39.360><c> we</c><00:17:39.600><c> want</c><00:17:39.760><c> to</c><00:17:40.000><c> set</c>

00:17:40.230 --> 00:17:40.240 align:start position:0%
if statements executes we want to set
 

00:17:40.240 --> 00:17:42.470 align:start position:0%
if statements executes we want to set
our<00:17:40.400><c> dp</c><00:17:40.960><c> position</c><00:17:41.440><c> equal</c><00:17:41.679><c> to</c><00:17:41.840><c> false</c><00:17:42.320><c> but</c>

00:17:42.470 --> 00:17:42.480 align:start position:0%
our dp position equal to false but
 

00:17:42.480 --> 00:17:44.710 align:start position:0%
our dp position equal to false but
notice<00:17:42.880><c> how</c><00:17:43.039><c> we</c><00:17:43.280><c> already</c><00:17:43.760><c> initialized</c><00:17:44.480><c> the</c>

00:17:44.710 --> 00:17:44.720 align:start position:0%
notice how we already initialized the
 

00:17:44.720 --> 00:17:47.430 align:start position:0%
notice how we already initialized the
entire<00:17:45.120><c> 2d</c><00:17:45.679><c> grid</c><00:17:46.320><c> to</c><00:17:46.640><c> false</c><00:17:47.039><c> right</c><00:17:47.200><c> so</c><00:17:47.360><c> we</c>

00:17:47.430 --> 00:17:47.440 align:start position:0%
entire 2d grid to false right so we
 

00:17:47.440 --> 00:17:49.830 align:start position:0%
entire 2d grid to false right so we
actually<00:17:47.840><c> don't</c><00:17:48.160><c> need</c><00:17:48.320><c> to</c><00:17:48.559><c> do</c><00:17:48.799><c> that</c><00:17:49.120><c> third</c>

00:17:49.830 --> 00:17:49.840 align:start position:0%
actually don't need to do that third
 

00:17:49.840 --> 00:17:50.870 align:start position:0%
actually don't need to do that third
condition

00:17:50.870 --> 00:17:50.880 align:start position:0%
condition
 

00:17:50.880 --> 00:17:52.789 align:start position:0%
condition
and<00:17:51.200><c> i</c><00:17:51.360><c> know</c><00:17:51.600><c> i</c><00:17:51.760><c> kind</c><00:17:51.919><c> of</c><00:17:52.080><c> pretty</c><00:17:52.240><c> much</c><00:17:52.480><c> just</c>

00:17:52.789 --> 00:17:52.799 align:start position:0%
and i know i kind of pretty much just
 

00:17:52.799 --> 00:17:54.549 align:start position:0%
and i know i kind of pretty much just
cheated<00:17:53.200><c> by</c><00:17:53.520><c> copy</c><00:17:53.760><c> and</c><00:17:53.919><c> pasting</c><00:17:54.240><c> a</c><00:17:54.320><c> bunch</c><00:17:54.480><c> of</c>

00:17:54.549 --> 00:17:54.559 align:start position:0%
cheated by copy and pasting a bunch of
 

00:17:54.559 --> 00:17:56.470 align:start position:0%
cheated by copy and pasting a bunch of
this<00:17:54.720><c> but</c><00:17:54.880><c> that's</c><00:17:55.200><c> the</c><00:17:55.440><c> entire</c><00:17:55.840><c> code</c><00:17:56.160><c> i'm</c><00:17:56.240><c> not</c>

00:17:56.470 --> 00:17:56.480 align:start position:0%
this but that's the entire code i'm not
 

00:17:56.480 --> 00:17:58.710 align:start position:0%
this but that's the entire code i'm not
kidding<00:17:56.960><c> so</c><00:17:57.120><c> once</c><00:17:57.360><c> you</c><00:17:57.600><c> do</c><00:17:57.840><c> that</c>

00:17:58.710 --> 00:17:58.720 align:start position:0%
kidding so once you do that
 

00:17:58.720 --> 00:18:00.870 align:start position:0%
kidding so once you do that
nested<00:17:59.120><c> for</c><00:17:59.360><c> loop</c><00:17:59.840><c> we</c><00:18:00.000><c> can</c><00:18:00.160><c> just</c><00:18:00.320><c> return</c><00:18:00.720><c> the</c>

00:18:00.870 --> 00:18:00.880 align:start position:0%
nested for loop we can just return the
 

00:18:00.880 --> 00:18:04.230 align:start position:0%
nested for loop we can just return the
result<00:18:01.360><c> of</c><00:18:01.520><c> dp</c><00:18:02.080><c> at</c><00:18:02.240><c> position</c><00:18:02.960><c> zero</c><00:18:03.679><c> zero</c>

00:18:04.230 --> 00:18:04.240 align:start position:0%
result of dp at position zero zero
 

00:18:04.240 --> 00:18:05.909 align:start position:0%
result of dp at position zero zero
that's<00:18:04.480><c> the</c><00:18:04.640><c> entire</c><00:18:04.960><c> code</c><00:18:05.200><c> so</c><00:18:05.440><c> yes</c><00:18:05.760><c> this</c>

00:18:05.909 --> 00:18:05.919 align:start position:0%
that's the entire code so yes this
 

00:18:05.919 --> 00:18:07.669 align:start position:0%
that's the entire code so yes this
solution<00:18:06.400><c> works</c><00:18:06.720><c> it's</c><00:18:06.960><c> efficient</c><00:18:07.360><c> and</c><00:18:07.520><c> we</c>

00:18:07.669 --> 00:18:07.679 align:start position:0%
solution works it's efficient and we
 

00:18:07.679 --> 00:18:09.510 align:start position:0%
solution works it's efficient and we
just<00:18:08.160><c> and</c><00:18:08.320><c> i</c><00:18:08.400><c> just</c><00:18:08.559><c> showed</c><00:18:08.799><c> you</c><00:18:08.960><c> how</c><00:18:09.120><c> to</c><00:18:09.280><c> solve</c>

00:18:09.510 --> 00:18:09.520 align:start position:0%
just and i just showed you how to solve
 

00:18:09.520 --> 00:18:11.190 align:start position:0%
just and i just showed you how to solve
it<00:18:09.679><c> in</c><00:18:09.840><c> two</c><00:18:10.080><c> different</c><00:18:10.320><c> ways</c><00:18:10.559><c> so</c><00:18:10.720><c> i</c><00:18:10.799><c> hope</c><00:18:11.039><c> this</c>

00:18:11.190 --> 00:18:11.200 align:start position:0%
it in two different ways so i hope this
 

00:18:11.200 --> 00:18:13.270 align:start position:0%
it in two different ways so i hope this
was<00:18:11.360><c> helpful</c><00:18:11.840><c> if</c><00:18:12.000><c> it</c><00:18:12.160><c> was</c><00:18:12.559><c> please</c><00:18:12.880><c> like</c><00:18:13.120><c> and</c>

00:18:13.270 --> 00:18:13.280 align:start position:0%
was helpful if it was please like and
 

00:18:13.280 --> 00:18:15.350 align:start position:0%
was helpful if it was please like and
subscribe<00:18:13.760><c> it</c><00:18:13.919><c> supports</c><00:18:14.320><c> the</c><00:18:14.480><c> channel</c><00:18:14.799><c> a</c><00:18:15.039><c> lot</c>

00:18:15.350 --> 00:18:15.360 align:start position:0%
subscribe it supports the channel a lot
 

00:18:15.360 --> 00:18:17.350 align:start position:0%
subscribe it supports the channel a lot
and<00:18:15.520><c> i'll</c><00:18:15.679><c> hopefully</c><00:18:16.240><c> see</c><00:18:16.400><c> you</c><00:18:16.640><c> pretty</c><00:18:16.880><c> soon</c>

00:18:17.350 --> 00:18:17.360 align:start position:0%
and i'll hopefully see you pretty soon
 

00:18:17.360 --> 00:18:20.640 align:start position:0%
and i'll hopefully see you pretty soon
thanks<00:18:17.600><c> for</c><00:18:17.760><c> watching</c>

