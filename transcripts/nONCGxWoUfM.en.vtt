WEBVTT
Kind: captions
Language: en

00:00:00.080 --> 00:00:01.829 align:start position:0%
 
everyone<00:00:00.560><c> welcome</c><00:00:00.960><c> back</c><00:00:01.199><c> and</c><00:00:01.360><c> let's</c><00:00:01.599><c> write</c>

00:00:01.829 --> 00:00:01.839 align:start position:0%
everyone welcome back and let's write
 

00:00:01.839 --> 00:00:03.669 align:start position:0%
everyone welcome back and let's write
some<00:00:02.000><c> more</c><00:00:02.240><c> neat</c><00:00:02.480><c> code</c><00:00:02.720><c> today</c><00:00:03.040><c> so</c><00:00:03.199><c> today</c><00:00:03.439><c> let's</c>

00:00:03.669 --> 00:00:03.679 align:start position:0%
some more neat code today so today let's
 

00:00:03.679 --> 00:00:05.910 align:start position:0%
some more neat code today so today let's
solve<00:00:03.919><c> the</c><00:00:04.080><c> problem</c><00:00:04.839><c> non-overlapping</c>

00:00:05.910 --> 00:00:05.920 align:start position:0%
solve the problem non-overlapping
 

00:00:05.920 --> 00:00:07.909 align:start position:0%
solve the problem non-overlapping
intervals<00:00:06.399><c> and</c><00:00:06.560><c> this</c><00:00:06.720><c> is</c><00:00:06.879><c> actually</c><00:00:07.279><c> a</c><00:00:07.440><c> problem</c>

00:00:07.909 --> 00:00:07.919 align:start position:0%
intervals and this is actually a problem
 

00:00:07.919 --> 00:00:11.030 align:start position:0%
intervals and this is actually a problem
from<00:00:08.160><c> the</c><00:00:08.400><c> blind</c><00:00:09.200><c> 75</c><00:00:09.920><c> list</c><00:00:10.240><c> of</c><00:00:10.400><c> questions</c><00:00:10.880><c> that</c>

00:00:11.030 --> 00:00:11.040 align:start position:0%
from the blind 75 list of questions that
 

00:00:11.040 --> 00:00:13.030 align:start position:0%
from the blind 75 list of questions that
we've<00:00:11.280><c> been</c><00:00:11.440><c> working</c><00:00:11.840><c> on</c><00:00:12.400><c> and</c><00:00:12.559><c> we've</c><00:00:12.799><c> actually</c>

00:00:13.030 --> 00:00:13.040 align:start position:0%
we've been working on and we've actually
 

00:00:13.040 --> 00:00:15.030 align:start position:0%
we've been working on and we've actually
been<00:00:13.280><c> tracking</c><00:00:13.679><c> that</c><00:00:14.000><c> list</c><00:00:14.240><c> of</c><00:00:14.400><c> questions</c><00:00:14.880><c> on</c>

00:00:15.030 --> 00:00:15.040 align:start position:0%
been tracking that list of questions on
 

00:00:15.040 --> 00:00:16.950 align:start position:0%
been tracking that list of questions on
this<00:00:15.200><c> spreadsheet</c><00:00:15.679><c> you</c><00:00:15.759><c> can</c><00:00:15.920><c> see</c><00:00:16.080><c> that</c><00:00:16.320><c> i</c><00:00:16.720><c> do</c>

00:00:16.950 --> 00:00:16.960 align:start position:0%
this spreadsheet you can see that i do
 

00:00:16.960 --> 00:00:19.029 align:start position:0%
this spreadsheet you can see that i do
have<00:00:17.119><c> a</c><00:00:17.279><c> video</c><00:00:17.680><c> solution</c><00:00:18.240><c> on</c><00:00:18.400><c> the</c><00:00:18.560><c> left</c><00:00:18.800><c> side</c>

00:00:19.029 --> 00:00:19.039 align:start position:0%
have a video solution on the left side
 

00:00:19.039 --> 00:00:20.710 align:start position:0%
have a video solution on the left side
over<00:00:19.279><c> here</c><00:00:19.439><c> for</c><00:00:19.680><c> pretty</c><00:00:19.840><c> much</c><00:00:20.080><c> every</c><00:00:20.400><c> single</c>

00:00:20.710 --> 00:00:20.720 align:start position:0%
over here for pretty much every single
 

00:00:20.720 --> 00:00:22.550 align:start position:0%
over here for pretty much every single
problem<00:00:21.119><c> in</c><00:00:21.199><c> this</c><00:00:21.359><c> list</c><00:00:21.760><c> except</c><00:00:22.000><c> for</c><00:00:22.160><c> a</c><00:00:22.240><c> couple</c>

00:00:22.550 --> 00:00:22.560 align:start position:0%
problem in this list except for a couple
 

00:00:22.560 --> 00:00:24.310 align:start position:0%
problem in this list except for a couple
that<00:00:22.640><c> we</c><00:00:22.800><c> haven't</c><00:00:23.039><c> gotten</c><00:00:23.279><c> to</c><00:00:23.519><c> yet</c><00:00:23.840><c> so</c><00:00:24.000><c> today</c>

00:00:24.310 --> 00:00:24.320 align:start position:0%
that we haven't gotten to yet so today
 

00:00:24.320 --> 00:00:26.230 align:start position:0%
that we haven't gotten to yet so today
we<00:00:24.480><c> will</c><00:00:24.640><c> be</c><00:00:24.800><c> doing</c><00:00:25.039><c> the</c><00:00:25.199><c> last</c><00:00:25.680><c> interval</c>

00:00:26.230 --> 00:00:26.240 align:start position:0%
we will be doing the last interval
 

00:00:26.240 --> 00:00:28.470 align:start position:0%
we will be doing the last interval
problem<00:00:26.880><c> in</c><00:00:27.119><c> this</c><00:00:27.359><c> list</c><00:00:27.760><c> you</c><00:00:27.840><c> can</c><00:00:28.000><c> see</c><00:00:28.160><c> i</c>

00:00:28.470 --> 00:00:28.480 align:start position:0%
problem in this list you can see i
 

00:00:28.480 --> 00:00:30.390 align:start position:0%
problem in this list you can see i
solved<00:00:28.800><c> the</c><00:00:29.039><c> other</c><00:00:29.519><c> interval</c><00:00:29.920><c> related</c>

00:00:30.390 --> 00:00:30.400 align:start position:0%
solved the other interval related
 

00:00:30.400 --> 00:00:32.470 align:start position:0%
solved the other interval related
problems<00:00:30.880><c> already</c><00:00:31.439><c> there's</c><00:00:31.679><c> about</c><00:00:31.920><c> like</c><00:00:32.079><c> 70</c>

00:00:32.470 --> 00:00:32.480 align:start position:0%
problems already there's about like 70
 

00:00:32.480 --> 00:00:34.229 align:start position:0%
problems already there's about like 70
people<00:00:32.880><c> viewing</c><00:00:33.200><c> it</c><00:00:33.360><c> right</c><00:00:33.520><c> now</c><00:00:33.760><c> so</c><00:00:33.920><c> i</c><00:00:34.000><c> hope</c>

00:00:34.229 --> 00:00:34.239 align:start position:0%
people viewing it right now so i hope
 

00:00:34.239 --> 00:00:36.310 align:start position:0%
people viewing it right now so i hope
that<00:00:34.640><c> you</c><00:00:34.800><c> guys</c><00:00:35.040><c> are</c><00:00:35.200><c> finding</c><00:00:35.520><c> it</c><00:00:35.600><c> helpful</c><00:00:36.160><c> and</c>

00:00:36.310 --> 00:00:36.320 align:start position:0%
that you guys are finding it helpful and
 

00:00:36.320 --> 00:00:37.750 align:start position:0%
that you guys are finding it helpful and
you<00:00:36.480><c> can</c><00:00:36.559><c> see</c><00:00:36.719><c> conveniently</c><00:00:37.360><c> i</c><00:00:37.440><c> made</c><00:00:37.600><c> a</c>

00:00:37.750 --> 00:00:37.760 align:start position:0%
you can see conveniently i made a
 

00:00:37.760 --> 00:00:40.150 align:start position:0%
you can see conveniently i made a
youtube<00:00:38.160><c> playlist</c><00:00:38.640><c> for</c><00:00:38.879><c> all</c><00:00:39.120><c> the</c><00:00:39.280><c> blind</c><00:00:39.600><c> 75</c>

00:00:40.150 --> 00:00:40.160 align:start position:0%
youtube playlist for all the blind 75
 

00:00:40.160 --> 00:00:42.069 align:start position:0%
youtube playlist for all the blind 75
solutions<00:00:40.879><c> link</c><00:00:41.120><c> to</c><00:00:41.280><c> that</c><00:00:41.440><c> will</c><00:00:41.680><c> be</c><00:00:41.920><c> in</c><00:00:42.000><c> the</c>

00:00:42.069 --> 00:00:42.079 align:start position:0%
solutions link to that will be in the
 

00:00:42.079 --> 00:00:43.910 align:start position:0%
solutions link to that will be in the
description<00:00:42.719><c> as</c><00:00:42.960><c> well</c><00:00:43.280><c> if</c><00:00:43.360><c> you</c><00:00:43.520><c> do</c><00:00:43.680><c> want</c><00:00:43.840><c> to</c>

00:00:43.910 --> 00:00:43.920 align:start position:0%
description as well if you do want to
 

00:00:43.920 --> 00:00:45.750 align:start position:0%
description as well if you do want to
take<00:00:44.079><c> a</c><00:00:44.160><c> look</c><00:00:44.399><c> so</c><00:00:44.640><c> now</c><00:00:44.879><c> let's</c><00:00:45.120><c> continue</c><00:00:45.600><c> with</c>

00:00:45.750 --> 00:00:45.760 align:start position:0%
take a look so now let's continue with
 

00:00:45.760 --> 00:00:48.150 align:start position:0%
take a look so now let's continue with
the<00:00:45.840><c> video</c><00:00:46.559><c> so</c><00:00:46.719><c> this</c><00:00:47.039><c> problem</c><00:00:47.440><c> is</c><00:00:47.600><c> definitely</c>

00:00:48.150 --> 00:00:48.160 align:start position:0%
the video so this problem is definitely
 

00:00:48.160 --> 00:00:50.389 align:start position:0%
the video so this problem is definitely
like<00:00:48.559><c> most</c><00:00:48.960><c> interval</c><00:00:49.440><c> problems</c><00:00:49.920><c> in</c><00:00:50.079><c> that</c><00:00:50.320><c> if</c>

00:00:50.389 --> 00:00:50.399 align:start position:0%
like most interval problems in that if
 

00:00:50.399 --> 00:00:51.990 align:start position:0%
like most interval problems in that if
you've<00:00:50.640><c> solved</c><00:00:51.039><c> other</c><00:00:51.199><c> interval</c><00:00:51.600><c> problems</c>

00:00:51.990 --> 00:00:52.000 align:start position:0%
you've solved other interval problems
 

00:00:52.000 --> 00:00:53.510 align:start position:0%
you've solved other interval problems
before<00:00:52.320><c> this</c><00:00:52.559><c> one</c><00:00:52.800><c> shouldn't</c><00:00:53.120><c> be</c><00:00:53.280><c> too</c>

00:00:53.510 --> 00:00:53.520 align:start position:0%
before this one shouldn't be too
 

00:00:53.520 --> 00:00:55.270 align:start position:0%
before this one shouldn't be too
difficult<00:00:53.920><c> but</c><00:00:54.079><c> if</c><00:00:54.160><c> you're</c><00:00:54.399><c> new</c><00:00:54.640><c> to</c><00:00:54.879><c> interval</c>

00:00:55.270 --> 00:00:55.280 align:start position:0%
difficult but if you're new to interval
 

00:00:55.280 --> 00:00:57.990 align:start position:0%
difficult but if you're new to interval
problems<00:00:55.920><c> this</c><00:00:56.160><c> one</c><00:00:56.559><c> is</c><00:00:56.800><c> kind</c><00:00:57.039><c> of</c><00:00:57.280><c> challenging</c>

00:00:57.990 --> 00:00:58.000 align:start position:0%
problems this one is kind of challenging
 

00:00:58.000 --> 00:01:00.069 align:start position:0%
problems this one is kind of challenging
so<00:00:58.160><c> we're</c><00:00:58.399><c> given</c><00:00:58.800><c> an</c><00:00:58.960><c> array</c><00:00:59.359><c> of</c><00:00:59.600><c> intervals</c>

00:01:00.069 --> 00:01:00.079 align:start position:0%
so we're given an array of intervals
 

00:01:00.079 --> 00:01:02.310 align:start position:0%
so we're given an array of intervals
where<00:01:00.239><c> each</c><00:01:00.559><c> interval</c><00:01:00.960><c> has</c><00:01:01.199><c> a</c><00:01:01.359><c> start</c><00:01:01.760><c> value</c>

00:01:02.310 --> 00:01:02.320 align:start position:0%
where each interval has a start value
 

00:01:02.320 --> 00:01:05.429 align:start position:0%
where each interval has a start value
and<00:01:02.640><c> an</c><00:01:02.960><c> end</c><00:01:03.280><c> value</c><00:01:04.000><c> and</c><00:01:04.320><c> we</c><00:01:04.559><c> want</c><00:01:04.720><c> to</c><00:01:04.960><c> return</c>

00:01:05.429 --> 00:01:05.439 align:start position:0%
and an end value and we want to return
 

00:01:05.439 --> 00:01:07.830 align:start position:0%
and an end value and we want to return
the<00:01:05.680><c> minimum</c><00:01:06.240><c> number</c><00:01:06.640><c> of</c><00:01:06.960><c> intervals</c><00:01:07.520><c> that</c><00:01:07.680><c> we</c>

00:01:07.830 --> 00:01:07.840 align:start position:0%
the minimum number of intervals that we
 

00:01:07.840 --> 00:01:10.469 align:start position:0%
the minimum number of intervals that we
have<00:01:08.000><c> to</c><00:01:08.159><c> remove</c><00:01:09.040><c> from</c><00:01:09.200><c> the</c><00:01:09.520><c> list</c><00:01:10.080><c> to</c><00:01:10.240><c> make</c>

00:01:10.469 --> 00:01:10.479 align:start position:0%
have to remove from the list to make
 

00:01:10.479 --> 00:01:13.230 align:start position:0%
have to remove from the list to make
sure<00:01:10.720><c> that</c><00:01:10.880><c> the</c><00:01:11.119><c> rest</c><00:01:11.439><c> of</c><00:01:11.520><c> the</c><00:01:11.760><c> intervals</c><00:01:12.400><c> are</c>

00:01:13.230 --> 00:01:13.240 align:start position:0%
sure that the rest of the intervals are
 

00:01:13.240 --> 00:01:15.590 align:start position:0%
sure that the rest of the intervals are
non-overlapping<00:01:14.400><c> so</c><00:01:14.720><c> first</c><00:01:15.040><c> question</c><00:01:15.439><c> you</c>

00:01:15.590 --> 00:01:15.600 align:start position:0%
non-overlapping so first question you
 

00:01:15.600 --> 00:01:17.429 align:start position:0%
non-overlapping so first question you
should<00:01:15.840><c> ask</c><00:01:16.080><c> is</c><00:01:16.159><c> what</c><00:01:16.320><c> exactly</c><00:01:16.799><c> is</c><00:01:17.200><c> a</c>

00:01:17.429 --> 00:01:17.439 align:start position:0%
should ask is what exactly is a
 

00:01:17.439 --> 00:01:19.749 align:start position:0%
should ask is what exactly is a
overlapping<00:01:18.240><c> interval</c><00:01:18.640><c> well</c><00:01:19.200><c> assuming</c><00:01:19.600><c> an</c>

00:01:19.749 --> 00:01:19.759 align:start position:0%
overlapping interval well assuming an
 

00:01:19.759 --> 00:01:21.670 align:start position:0%
overlapping interval well assuming an
interval<00:01:20.159><c> looks</c><00:01:20.400><c> something</c><00:01:20.799><c> like</c><00:01:21.119><c> this</c><00:01:21.520><c> right</c>

00:01:21.670 --> 00:01:21.680 align:start position:0%
interval looks something like this right
 

00:01:21.680 --> 00:01:23.270 align:start position:0%
interval looks something like this right
it<00:01:21.759><c> has</c><00:01:21.920><c> some</c><00:01:22.080><c> start</c><00:01:22.400><c> value</c><00:01:22.720><c> maybe</c><00:01:22.960><c> the</c><00:01:23.040><c> start</c>

00:01:23.270 --> 00:01:23.280 align:start position:0%
it has some start value maybe the start
 

00:01:23.280 --> 00:01:25.830 align:start position:0%
it has some start value maybe the start
value<00:01:23.520><c> is</c><00:01:23.680><c> 1</c><00:01:24.080><c> and</c><00:01:24.320><c> the</c><00:01:24.479><c> end</c><00:01:24.720><c> value</c><00:01:25.280><c> is</c><00:01:25.600><c> two</c>

00:01:25.830 --> 00:01:25.840 align:start position:0%
value is 1 and the end value is two
 

00:01:25.840 --> 00:01:28.230 align:start position:0%
value is 1 and the end value is two
right<00:01:26.400><c> maybe</c><00:01:26.720><c> we</c><00:01:26.880><c> have</c><00:01:27.280><c> another</c><00:01:27.759><c> interval</c>

00:01:28.230 --> 00:01:28.240 align:start position:0%
right maybe we have another interval
 

00:01:28.240 --> 00:01:30.469 align:start position:0%
right maybe we have another interval
that<00:01:28.479><c> starts</c><00:01:28.799><c> at</c><00:01:29.040><c> three</c><00:01:29.680><c> and</c><00:01:29.920><c> goes</c><00:01:30.240><c> all</c><00:01:30.400><c> the</c>

00:01:30.469 --> 00:01:30.479 align:start position:0%
that starts at three and goes all the
 

00:01:30.479 --> 00:01:32.710 align:start position:0%
that starts at three and goes all the
way<00:01:30.799><c> to</c><00:01:30.960><c> four</c><00:01:31.439><c> so</c><00:01:31.680><c> definitely</c><00:01:32.240><c> these</c><00:01:32.479><c> two</c>

00:01:32.710 --> 00:01:32.720 align:start position:0%
way to four so definitely these two
 

00:01:32.720 --> 00:01:35.270 align:start position:0%
way to four so definitely these two
intervals<00:01:33.280><c> are</c><00:01:33.600><c> not</c><00:01:34.000><c> overlapping</c><00:01:34.880><c> but</c><00:01:35.119><c> what</c>

00:01:35.270 --> 00:01:35.280 align:start position:0%
intervals are not overlapping but what
 

00:01:35.280 --> 00:01:38.230 align:start position:0%
intervals are not overlapping but what
if<00:01:35.439><c> we</c><00:01:35.680><c> had</c><00:01:36.240><c> uh</c><00:01:36.560><c> the</c><00:01:36.799><c> interval</c><00:01:37.360><c> starting</c><00:01:37.840><c> over</c>

00:01:38.230 --> 00:01:38.240 align:start position:0%
if we had uh the interval starting over
 

00:01:38.240 --> 00:01:40.710 align:start position:0%
if we had uh the interval starting over
here<00:01:38.479><c> maybe</c><00:01:38.960><c> the</c><00:01:39.280><c> end</c><00:01:39.520><c> point</c><00:01:39.759><c> is</c><00:01:39.920><c> 3</c><00:01:40.240><c> but</c><00:01:40.479><c> the</c>

00:01:40.710 --> 00:01:40.720 align:start position:0%
here maybe the end point is 3 but the
 

00:01:40.720 --> 00:01:43.910 align:start position:0%
here maybe the end point is 3 but the
starting<00:01:41.119><c> point</c><00:01:41.360><c> is</c><00:01:41.520><c> maybe</c><00:01:41.920><c> 1.5</c><00:01:43.360><c> right</c>

00:01:43.910 --> 00:01:43.920 align:start position:0%
starting point is maybe 1.5 right
 

00:01:43.920 --> 00:01:45.749 align:start position:0%
starting point is maybe 1.5 right
obviously<00:01:44.479><c> in</c><00:01:44.640><c> this</c><00:01:44.880><c> case</c><00:01:45.280><c> these</c><00:01:45.520><c> two</c>

00:01:45.749 --> 00:01:45.759 align:start position:0%
obviously in this case these two
 

00:01:45.759 --> 00:01:47.910 align:start position:0%
obviously in this case these two
intervals<00:01:46.320><c> are</c><00:01:46.640><c> overlapping</c><00:01:47.520><c> right</c><00:01:47.680><c> you</c><00:01:47.840><c> can</c>

00:01:47.910 --> 00:01:47.920 align:start position:0%
intervals are overlapping right you can
 

00:01:47.920 --> 00:01:49.830 align:start position:0%
intervals are overlapping right you can
see<00:01:48.320><c> you</c><00:01:48.479><c> know</c><00:01:48.640><c> right</c><00:01:48.799><c> over</c><00:01:48.960><c> here</c><00:01:49.360><c> this</c><00:01:49.520><c> is</c><00:01:49.600><c> the</c>

00:01:49.830 --> 00:01:49.840 align:start position:0%
see you know right over here this is the
 

00:01:49.840 --> 00:01:51.910 align:start position:0%
see you know right over here this is the
region<00:01:50.159><c> that</c><00:01:50.320><c> they're</c><00:01:50.560><c> overlapping</c><00:01:51.200><c> at</c><00:01:51.600><c> but</c>

00:01:51.910 --> 00:01:51.920 align:start position:0%
region that they're overlapping at but
 

00:01:51.920 --> 00:01:54.310 align:start position:0%
region that they're overlapping at but
the<00:01:52.079><c> edge</c><00:01:52.399><c> case</c><00:01:52.720><c> comes</c><00:01:53.280><c> when</c><00:01:53.520><c> we</c><00:01:53.680><c> have</c><00:01:54.079><c> a</c>

00:01:54.310 --> 00:01:54.320 align:start position:0%
the edge case comes when we have a
 

00:01:54.320 --> 00:01:56.950 align:start position:0%
the edge case comes when we have a
interval<00:01:54.799><c> let's</c><00:01:54.960><c> say</c><00:01:55.520><c> like</c><00:01:56.079><c> this</c><00:01:56.320><c> one</c><00:01:56.719><c> that's</c>

00:01:56.950 --> 00:01:56.960 align:start position:0%
interval let's say like this one that's
 

00:01:56.960 --> 00:01:58.950 align:start position:0%
interval let's say like this one that's
going<00:01:57.360><c> maybe</c><00:01:57.680><c> starting</c><00:01:58.000><c> from</c><00:01:58.240><c> two</c><00:01:58.560><c> and</c><00:01:58.640><c> going</c>

00:01:58.950 --> 00:01:58.960 align:start position:0%
going maybe starting from two and going
 

00:01:58.960 --> 00:02:00.950 align:start position:0%
going maybe starting from two and going
all<00:01:59.040><c> the</c><00:01:59.119><c> way</c><00:01:59.360><c> to</c><00:01:59.520><c> three</c><00:01:59.840><c> are</c><00:02:00.000><c> these</c><00:02:00.399><c> intervals</c>

00:02:00.950 --> 00:02:00.960 align:start position:0%
all the way to three are these intervals
 

00:02:00.960 --> 00:02:02.789 align:start position:0%
all the way to three are these intervals
overlapping<00:02:01.680><c> technically</c><00:02:02.159><c> you</c><00:02:02.240><c> know</c><00:02:02.399><c> this</c>

00:02:02.789 --> 00:02:02.799 align:start position:0%
overlapping technically you know this
 

00:02:02.799 --> 00:02:06.149 align:start position:0%
overlapping technically you know this
point<00:02:03.439><c> at</c><00:02:03.840><c> position</c><00:02:04.399><c> two</c><00:02:04.880><c> is</c><00:02:05.119><c> overlapping</c><00:02:06.000><c> but</c>

00:02:06.149 --> 00:02:06.159 align:start position:0%
point at position two is overlapping but
 

00:02:06.159 --> 00:02:08.550 align:start position:0%
point at position two is overlapping but
technically<00:02:07.119><c> these</c><00:02:07.520><c> intervals</c><00:02:08.000><c> are</c><00:02:08.239><c> not</c>

00:02:08.550 --> 00:02:08.560 align:start position:0%
technically these intervals are not
 

00:02:08.560 --> 00:02:10.949 align:start position:0%
technically these intervals are not
considered<00:02:09.280><c> overlapping</c><00:02:10.319><c> right</c><00:02:10.560><c> so</c><00:02:10.720><c> if</c><00:02:10.800><c> they</c>

00:02:10.949 --> 00:02:10.959 align:start position:0%
considered overlapping right so if they
 

00:02:10.959 --> 00:02:12.790 align:start position:0%
considered overlapping right so if they
have<00:02:11.200><c> the</c><00:02:11.280><c> same</c><00:02:11.599><c> edge</c><00:02:12.000><c> point</c><00:02:12.239><c> they</c><00:02:12.400><c> do</c><00:02:12.560><c> not</c>

00:02:12.790 --> 00:02:12.800 align:start position:0%
have the same edge point they do not
 

00:02:12.800 --> 00:02:14.790 align:start position:0%
have the same edge point they do not
count<00:02:13.120><c> as</c><00:02:13.360><c> overlapping</c><00:02:14.000><c> this</c><00:02:14.160><c> edge</c><00:02:14.400><c> case</c><00:02:14.640><c> is</c>

00:02:14.790 --> 00:02:14.800 align:start position:0%
count as overlapping this edge case is
 

00:02:14.800 --> 00:02:16.630 align:start position:0%
count as overlapping this edge case is
very<00:02:15.040><c> important</c><00:02:15.440><c> to</c><00:02:15.680><c> understand</c><00:02:16.160><c> to</c><00:02:16.319><c> solve</c>

00:02:16.630 --> 00:02:16.640 align:start position:0%
very important to understand to solve
 

00:02:16.640 --> 00:02:18.949 align:start position:0%
very important to understand to solve
this<00:02:16.879><c> problem</c><00:02:17.760><c> okay</c><00:02:18.000><c> so</c><00:02:18.160><c> let's</c><00:02:18.400><c> take</c><00:02:18.640><c> a</c><00:02:18.720><c> look</c>

00:02:18.949 --> 00:02:18.959 align:start position:0%
this problem okay so let's take a look
 

00:02:18.959 --> 00:02:21.030 align:start position:0%
this problem okay so let's take a look
at<00:02:19.120><c> the</c><00:02:19.360><c> first</c><00:02:19.680><c> example</c><00:02:20.239><c> actually</c><00:02:20.560><c> so</c><00:02:20.720><c> you</c><00:02:20.879><c> can</c>

00:02:21.030 --> 00:02:21.040 align:start position:0%
at the first example actually so you can
 

00:02:21.040 --> 00:02:23.670 align:start position:0%
at the first example actually so you can
see<00:02:21.360><c> i've</c><00:02:21.599><c> drawn</c><00:02:22.080><c> a</c><00:02:22.239><c> few</c><00:02:22.560><c> of</c><00:02:22.640><c> the</c><00:02:22.879><c> intervals</c>

00:02:23.670 --> 00:02:23.680 align:start position:0%
see i've drawn a few of the intervals
 

00:02:23.680 --> 00:02:25.910 align:start position:0%
see i've drawn a few of the intervals
and<00:02:23.840><c> you</c><00:02:23.920><c> can</c><00:02:24.000><c> see</c><00:02:24.319><c> so</c><00:02:24.560><c> far</c><00:02:24.959><c> these</c><00:02:25.280><c> three</c><00:02:25.680><c> are</c>

00:02:25.910 --> 00:02:25.920 align:start position:0%
and you can see so far these three are
 

00:02:25.920 --> 00:02:28.309 align:start position:0%
and you can see so far these three are
not<00:02:26.239><c> overlapping</c><00:02:26.959><c> right</c><00:02:27.280><c> but</c><00:02:27.599><c> we're</c><00:02:27.840><c> about</c><00:02:28.080><c> to</c>

00:02:28.309 --> 00:02:28.319 align:start position:0%
not overlapping right but we're about to
 

00:02:28.319 --> 00:02:31.430 align:start position:0%
not overlapping right but we're about to
insert<00:02:28.800><c> the</c><00:02:29.200><c> last</c><00:02:29.599><c> and</c><00:02:29.840><c> fourth</c><00:02:30.239><c> interval</c><00:02:30.879><c> one</c>

00:02:31.430 --> 00:02:31.440 align:start position:0%
insert the last and fourth interval one
 

00:02:31.440 --> 00:02:34.309 align:start position:0%
insert the last and fourth interval one
three<00:02:31.840><c> so</c><00:02:32.400><c> it</c><00:02:32.640><c> starts</c><00:02:32.959><c> at</c><00:02:33.200><c> one</c><00:02:33.519><c> and</c><00:02:33.680><c> goes</c><00:02:34.160><c> all</c>

00:02:34.309 --> 00:02:34.319 align:start position:0%
three so it starts at one and goes all
 

00:02:34.319 --> 00:02:37.910 align:start position:0%
three so it starts at one and goes all
the<00:02:34.480><c> way</c><00:02:34.959><c> until</c><00:02:36.000><c> three</c><00:02:36.640><c> so</c><00:02:36.959><c> now</c><00:02:37.200><c> you</c><00:02:37.360><c> can</c><00:02:37.519><c> see</c>

00:02:37.910 --> 00:02:37.920 align:start position:0%
the way until three so now you can see
 

00:02:37.920 --> 00:02:39.990 align:start position:0%
the way until three so now you can see
that<00:02:38.160><c> they</c><00:02:38.480><c> are</c><00:02:38.800><c> overlapping</c><00:02:39.599><c> with</c><00:02:39.760><c> the</c>

00:02:39.990 --> 00:02:40.000 align:start position:0%
that they are overlapping with the
 

00:02:40.000 --> 00:02:42.390 align:start position:0%
that they are overlapping with the
introduction<00:02:40.640><c> of</c><00:02:40.800><c> this</c><00:02:41.200><c> interval</c><00:02:41.840><c> and</c><00:02:42.000><c> things</c>

00:02:42.390 --> 00:02:42.400 align:start position:0%
introduction of this interval and things
 

00:02:42.400 --> 00:02:44.309 align:start position:0%
introduction of this interval and things
become<00:02:42.959><c> really</c><00:02:43.280><c> simple</c><00:02:43.680><c> when</c><00:02:43.840><c> you</c><00:02:43.920><c> draw</c><00:02:44.160><c> a</c>

00:02:44.309 --> 00:02:44.319 align:start position:0%
become really simple when you draw a
 

00:02:44.319 --> 00:02:46.150 align:start position:0%
become really simple when you draw a
picture<00:02:44.640><c> which</c><00:02:44.879><c> is</c><00:02:44.959><c> why</c><00:02:45.200><c> i</c><00:02:45.440><c> always</c><00:02:45.760><c> recommend</c>

00:02:46.150 --> 00:02:46.160 align:start position:0%
picture which is why i always recommend
 

00:02:46.160 --> 00:02:48.070 align:start position:0%
picture which is why i always recommend
drawing<00:02:46.480><c> a</c><00:02:46.560><c> picture</c><00:02:47.040><c> for</c><00:02:47.440><c> complicated</c>

00:02:48.070 --> 00:02:48.080 align:start position:0%
drawing a picture for complicated
 

00:02:48.080 --> 00:02:50.869 align:start position:0%
drawing a picture for complicated
problems<00:02:48.879><c> so</c><00:02:49.120><c> now</c><00:02:49.280><c> we</c><00:02:49.519><c> want</c><00:02:49.760><c> to</c><00:02:50.160><c> eliminate</c>

00:02:50.869 --> 00:02:50.879 align:start position:0%
problems so now we want to eliminate
 

00:02:50.879 --> 00:02:52.550 align:start position:0%
problems so now we want to eliminate
intervals<00:02:51.519><c> we</c><00:02:51.680><c> want</c><00:02:51.920><c> to</c><00:02:52.000><c> eliminate</c><00:02:52.400><c> the</c>

00:02:52.550 --> 00:02:52.560 align:start position:0%
intervals we want to eliminate the
 

00:02:52.560 --> 00:02:54.710 align:start position:0%
intervals we want to eliminate the
minimum<00:02:52.959><c> number</c><00:02:53.440><c> it's</c><00:02:53.680><c> obvious</c><00:02:54.000><c> that</c><00:02:54.400><c> we</c><00:02:54.560><c> can</c>

00:02:54.710 --> 00:02:54.720 align:start position:0%
minimum number it's obvious that we can
 

00:02:54.720 --> 00:02:56.470 align:start position:0%
minimum number it's obvious that we can
just<00:02:54.959><c> remove</c><00:02:55.360><c> a</c><00:02:55.519><c> single</c><00:02:55.840><c> interval</c><00:02:56.160><c> this</c><00:02:56.319><c> one</c>

00:02:56.470 --> 00:02:56.480 align:start position:0%
just remove a single interval this one
 

00:02:56.480 --> 00:02:58.229 align:start position:0%
just remove a single interval this one
that<00:02:56.560><c> we</c><00:02:56.720><c> just</c><00:02:56.959><c> inserted</c><00:02:57.440><c> to</c><00:02:57.599><c> make</c><00:02:57.760><c> the</c><00:02:58.000><c> rest</c>

00:02:58.229 --> 00:02:58.239 align:start position:0%
that we just inserted to make the rest
 

00:02:58.239 --> 00:03:00.309 align:start position:0%
that we just inserted to make the rest
non-overlapping<00:02:59.280><c> but</c><00:02:59.440><c> of</c><00:02:59.519><c> course</c><00:02:59.840><c> that's</c><00:03:00.080><c> not</c>

00:03:00.309 --> 00:03:00.319 align:start position:0%
non-overlapping but of course that's not
 

00:03:00.319 --> 00:03:02.790 align:start position:0%
non-overlapping but of course that's not
the<00:03:00.560><c> only</c><00:03:01.040><c> way</c><00:03:01.280><c> we</c><00:03:01.519><c> could</c><00:03:01.760><c> do</c><00:03:02.000><c> it</c><00:03:02.159><c> we</c><00:03:02.400><c> could</c>

00:03:02.790 --> 00:03:02.800 align:start position:0%
the only way we could do it we could
 

00:03:02.800 --> 00:03:05.990 align:start position:0%
the only way we could do it we could
instead<00:03:03.519><c> remove</c><00:03:04.000><c> this</c><00:03:04.319><c> interval</c><00:03:05.040><c> and</c><00:03:05.599><c> remove</c>

00:03:05.990 --> 00:03:06.000 align:start position:0%
instead remove this interval and remove
 

00:03:06.000 --> 00:03:07.830 align:start position:0%
instead remove this interval and remove
this<00:03:06.239><c> interval</c><00:03:06.560><c> so</c><00:03:06.720><c> instead</c><00:03:07.040><c> we'd</c><00:03:07.280><c> remove</c><00:03:07.599><c> two</c>

00:03:07.830 --> 00:03:07.840 align:start position:0%
this interval so instead we'd remove two
 

00:03:07.840 --> 00:03:09.670 align:start position:0%
this interval so instead we'd remove two
intervals<00:03:08.400><c> that's</c><00:03:08.720><c> clearly</c><00:03:09.280><c> not</c><00:03:09.519><c> the</c>

00:03:09.670 --> 00:03:09.680 align:start position:0%
intervals that's clearly not the
 

00:03:09.680 --> 00:03:11.670 align:start position:0%
intervals that's clearly not the
solution<00:03:10.400><c> but</c><00:03:10.560><c> there</c><00:03:10.800><c> are</c><00:03:10.959><c> multiple</c><00:03:11.360><c> ways</c><00:03:11.599><c> to</c>

00:03:11.670 --> 00:03:11.680 align:start position:0%
solution but there are multiple ways to
 

00:03:11.680 --> 00:03:13.750 align:start position:0%
solution but there are multiple ways to
do<00:03:11.840><c> it</c><00:03:11.920><c> which</c><00:03:12.080><c> is</c><00:03:12.239><c> why</c><00:03:12.720><c> writing</c><00:03:13.040><c> the</c><00:03:13.280><c> algorithm</c>

00:03:13.750 --> 00:03:13.760 align:start position:0%
do it which is why writing the algorithm
 

00:03:13.760 --> 00:03:15.830 align:start position:0%
do it which is why writing the algorithm
for<00:03:13.920><c> this</c><00:03:14.080><c> problem</c><00:03:14.480><c> can</c><00:03:14.640><c> be</c><00:03:14.800><c> kind</c><00:03:14.959><c> of</c><00:03:15.120><c> tricky</c>

00:03:15.830 --> 00:03:15.840 align:start position:0%
for this problem can be kind of tricky
 

00:03:15.840 --> 00:03:17.830 align:start position:0%
for this problem can be kind of tricky
one<00:03:16.159><c> definitely</c><00:03:16.720><c> possible</c><00:03:17.120><c> way</c><00:03:17.360><c> to</c><00:03:17.440><c> do</c><00:03:17.599><c> this</c>

00:03:17.830 --> 00:03:17.840 align:start position:0%
one definitely possible way to do this
 

00:03:17.840 --> 00:03:19.589 align:start position:0%
one definitely possible way to do this
problem<00:03:18.239><c> is</c><00:03:18.560><c> brute</c><00:03:18.879><c> force</c><00:03:19.120><c> it</c><00:03:19.200><c> right</c><00:03:19.440><c> go</c>

00:03:19.589 --> 00:03:19.599 align:start position:0%
problem is brute force it right go
 

00:03:19.599 --> 00:03:21.110 align:start position:0%
problem is brute force it right go
through<00:03:19.840><c> every</c><00:03:20.080><c> single</c><00:03:20.400><c> combination</c><00:03:20.959><c> right</c>

00:03:21.110 --> 00:03:21.120 align:start position:0%
through every single combination right
 

00:03:21.120 --> 00:03:23.030 align:start position:0%
through every single combination right
for<00:03:21.280><c> every</c><00:03:21.519><c> single</c><00:03:21.840><c> interval</c><00:03:22.319><c> we</c><00:03:22.480><c> can</c><00:03:22.640><c> choose</c>

00:03:23.030 --> 00:03:23.040 align:start position:0%
for every single interval we can choose
 

00:03:23.040 --> 00:03:25.670 align:start position:0%
for every single interval we can choose
to<00:03:23.200><c> remove</c><00:03:23.599><c> this</c><00:03:23.840><c> interval</c><00:03:24.400><c> or</c><00:03:24.879><c> to</c><00:03:25.120><c> keep</c><00:03:25.360><c> this</c>

00:03:25.670 --> 00:03:25.680 align:start position:0%
to remove this interval or to keep this
 

00:03:25.680 --> 00:03:27.509 align:start position:0%
to remove this interval or to keep this
interval<00:03:26.080><c> and</c><00:03:26.239><c> if</c><00:03:26.319><c> we</c><00:03:26.480><c> have</c><00:03:26.640><c> two</c><00:03:26.879><c> choices</c><00:03:27.360><c> for</c>

00:03:27.509 --> 00:03:27.519 align:start position:0%
interval and if we have two choices for
 

00:03:27.519 --> 00:03:29.670 align:start position:0%
interval and if we have two choices for
every<00:03:27.680><c> single</c><00:03:28.000><c> interval</c><00:03:28.480><c> inside</c><00:03:29.040><c> the</c><00:03:29.280><c> list</c><00:03:29.519><c> of</c>

00:03:29.670 --> 00:03:29.680 align:start position:0%
every single interval inside the list of
 

00:03:29.680 --> 00:03:31.350 align:start position:0%
every single interval inside the list of
intervals<00:03:30.400><c> then</c><00:03:30.799><c> you</c><00:03:30.959><c> know</c><00:03:31.040><c> the</c><00:03:31.200><c> time</c>

00:03:31.350 --> 00:03:31.360 align:start position:0%
intervals then you know the time
 

00:03:31.360 --> 00:03:33.350 align:start position:0%
intervals then you know the time
complexity<00:03:32.159><c> to</c><00:03:32.480><c> check</c><00:03:32.799><c> every</c><00:03:33.040><c> single</c>

00:03:33.350 --> 00:03:33.360 align:start position:0%
complexity to check every single
 

00:03:33.360 --> 00:03:34.949 align:start position:0%
complexity to check every single
possibility<00:03:34.080><c> is</c><00:03:34.159><c> going</c><00:03:34.239><c> to</c><00:03:34.319><c> be</c><00:03:34.400><c> 2</c><00:03:34.640><c> times</c><00:03:34.799><c> 2</c>

00:03:34.949 --> 00:03:34.959 align:start position:0%
possibility is going to be 2 times 2
 

00:03:34.959 --> 00:03:37.830 align:start position:0%
possibility is going to be 2 times 2
times<00:03:35.280><c> 2</c><00:03:35.680><c> basically</c><00:03:36.400><c> 2</c><00:03:36.640><c> to</c><00:03:36.799><c> the</c><00:03:36.879><c> power</c><00:03:37.200><c> of</c><00:03:37.440><c> n</c>

00:03:37.830 --> 00:03:37.840 align:start position:0%
times 2 basically 2 to the power of n
 

00:03:37.840 --> 00:03:39.990 align:start position:0%
times 2 basically 2 to the power of n
where<00:03:38.159><c> n</c><00:03:38.480><c> is</c><00:03:38.640><c> the</c><00:03:38.879><c> size</c><00:03:39.200><c> of</c><00:03:39.360><c> the</c><00:03:39.519><c> input</c><00:03:39.840><c> so</c>

00:03:39.990 --> 00:03:40.000 align:start position:0%
where n is the size of the input so
 

00:03:40.000 --> 00:03:42.390 align:start position:0%
where n is the size of the input so
that's<00:03:40.319><c> obviously</c><00:03:40.799><c> not</c><00:03:41.040><c> very</c><00:03:41.360><c> efficient</c><00:03:42.159><c> but</c>

00:03:42.390 --> 00:03:42.400 align:start position:0%
that's obviously not very efficient but
 

00:03:42.400 --> 00:03:45.270 align:start position:0%
that's obviously not very efficient but
can<00:03:42.720><c> we</c><00:03:42.959><c> do</c><00:03:43.280><c> better</c><00:03:44.000><c> and</c><00:03:44.159><c> we</c><00:03:44.319><c> definitely</c><00:03:44.799><c> can</c>

00:03:45.270 --> 00:03:45.280 align:start position:0%
can we do better and we definitely can
 

00:03:45.280 --> 00:03:48.229 align:start position:0%
can we do better and we definitely can
and<00:03:45.440><c> it</c><00:03:45.599><c> takes</c><00:03:45.920><c> a</c><00:03:46.159><c> greedy</c><00:03:46.640><c> approach</c><00:03:47.440><c> to</c><00:03:48.000><c> solve</c>

00:03:48.229 --> 00:03:48.239 align:start position:0%
and it takes a greedy approach to solve
 

00:03:48.239 --> 00:03:50.550 align:start position:0%
and it takes a greedy approach to solve
this<00:03:48.560><c> problem</c><00:03:49.120><c> when</c><00:03:49.280><c> we're</c><00:03:49.519><c> actually</c><00:03:50.000><c> given</c>

00:03:50.550 --> 00:03:50.560 align:start position:0%
this problem when we're actually given
 

00:03:50.560 --> 00:03:52.630 align:start position:0%
this problem when we're actually given
this<00:03:50.799><c> list</c><00:03:51.120><c> of</c><00:03:51.280><c> intervals</c><00:03:51.840><c> the</c><00:03:52.080><c> ordering</c><00:03:52.560><c> of</c>

00:03:52.630 --> 00:03:52.640 align:start position:0%
this list of intervals the ordering of
 

00:03:52.640 --> 00:03:54.550 align:start position:0%
this list of intervals the ordering of
them<00:03:52.879><c> could</c><00:03:53.120><c> be</c><00:03:53.280><c> pretty</c><00:03:53.680><c> random</c><00:03:54.080><c> right</c><00:03:54.239><c> but</c>

00:03:54.550 --> 00:03:54.560 align:start position:0%
them could be pretty random right but
 

00:03:54.560 --> 00:03:56.070 align:start position:0%
them could be pretty random right but
you<00:03:54.640><c> can</c><00:03:54.799><c> see</c><00:03:55.040><c> when</c><00:03:55.200><c> we</c><00:03:55.439><c> actually</c><00:03:55.680><c> draw</c><00:03:55.920><c> the</c>

00:03:56.070 --> 00:03:56.080 align:start position:0%
you can see when we actually draw the
 

00:03:56.080 --> 00:03:58.229 align:start position:0%
you can see when we actually draw the
picture<00:03:56.720><c> you</c><00:03:56.879><c> know</c><00:03:57.040><c> why</c><00:03:57.200><c> would</c><00:03:57.360><c> we</c><00:03:57.599><c> want</c><00:03:57.840><c> to</c><00:03:58.000><c> go</c>

00:03:58.229 --> 00:03:58.239 align:start position:0%
picture you know why would we want to go
 

00:03:58.239 --> 00:03:59.589 align:start position:0%
picture you know why would we want to go
through<00:03:58.400><c> these</c><00:03:58.640><c> intervals</c><00:03:59.040><c> in</c><00:03:59.120><c> a</c><00:03:59.200><c> random</c>

00:03:59.589 --> 00:03:59.599 align:start position:0%
through these intervals in a random
 

00:03:59.599 --> 00:04:01.030 align:start position:0%
through these intervals in a random
order<00:03:59.920><c> why</c><00:04:00.080><c> would</c><00:04:00.239><c> we</c><00:04:00.400><c> want</c><00:04:00.480><c> to</c><00:04:00.560><c> look</c><00:04:00.799><c> at</c><00:04:00.879><c> this</c>

00:04:01.030 --> 00:04:01.040 align:start position:0%
order why would we want to look at this
 

00:04:01.040 --> 00:04:02.630 align:start position:0%
order why would we want to look at this
one<00:04:01.200><c> then</c><00:04:01.360><c> look</c><00:04:01.519><c> at</c><00:04:01.599><c> this</c><00:04:01.760><c> one</c><00:04:02.000><c> then</c><00:04:02.159><c> this</c><00:04:02.400><c> one</c>

00:04:02.630 --> 00:04:02.640 align:start position:0%
one then look at this one then this one
 

00:04:02.640 --> 00:04:04.390 align:start position:0%
one then look at this one then this one
yeah<00:04:02.799><c> right</c><00:04:03.040><c> like</c><00:04:03.280><c> in</c><00:04:03.439><c> just</c><00:04:03.760><c> a</c><00:04:03.920><c> completely</c>

00:04:04.390 --> 00:04:04.400 align:start position:0%
yeah right like in just a completely
 

00:04:04.400 --> 00:04:06.149 align:start position:0%
yeah right like in just a completely
random<00:04:04.720><c> order</c><00:04:05.360><c> when</c><00:04:05.519><c> you</c><00:04:05.680><c> look</c><00:04:05.760><c> at</c><00:04:05.920><c> it</c><00:04:06.000><c> this</c>

00:04:06.149 --> 00:04:06.159 align:start position:0%
random order when you look at it this
 

00:04:06.159 --> 00:04:08.149 align:start position:0%
random order when you look at it this
way<00:04:06.319><c> it</c><00:04:06.400><c> kind</c><00:04:06.560><c> of</c><00:04:06.640><c> makes</c><00:04:06.879><c> sense</c><00:04:07.200><c> to</c><00:04:07.599><c> want</c><00:04:07.760><c> to</c><00:04:07.840><c> go</c>

00:04:08.149 --> 00:04:08.159 align:start position:0%
way it kind of makes sense to want to go
 

00:04:08.159 --> 00:04:10.869 align:start position:0%
way it kind of makes sense to want to go
left<00:04:08.400><c> to</c><00:04:08.640><c> right</c><00:04:09.040><c> right</c><00:04:09.280><c> to</c><00:04:09.439><c> see</c><00:04:09.760><c> okay</c><00:04:10.319><c> here</c><00:04:10.720><c> are</c>

00:04:10.869 --> 00:04:10.879 align:start position:0%
left to right right to see okay here are
 

00:04:10.879 --> 00:04:12.470 align:start position:0%
left to right right to see okay here are
they<00:04:11.120><c> overlapping</c><00:04:12.000><c> here</c><00:04:12.239><c> are</c><00:04:12.319><c> they</c>

00:04:12.470 --> 00:04:12.480 align:start position:0%
they overlapping here are they
 

00:04:12.480 --> 00:04:15.830 align:start position:0%
they overlapping here are they
overlapping<00:04:13.040><c> etc</c><00:04:13.519><c> etc</c><00:04:14.400><c> and</c><00:04:14.799><c> the</c><00:04:14.959><c> easiest</c><00:04:15.439><c> way</c>

00:04:15.830 --> 00:04:15.840 align:start position:0%
overlapping etc etc and the easiest way
 

00:04:15.840 --> 00:04:18.229 align:start position:0%
overlapping etc etc and the easiest way
to<00:04:16.000><c> do</c><00:04:16.160><c> that</c><00:04:16.479><c> is</c><00:04:16.720><c> to</c><00:04:17.280><c> to</c><00:04:17.440><c> iterate</c><00:04:17.840><c> through</c><00:04:18.000><c> them</c>

00:04:18.229 --> 00:04:18.239 align:start position:0%
to do that is to to iterate through them
 

00:04:18.239 --> 00:04:20.310 align:start position:0%
to do that is to to iterate through them
in<00:04:18.400><c> some</c><00:04:18.560><c> kind</c><00:04:18.720><c> of</c><00:04:18.880><c> sorted</c><00:04:19.359><c> order</c><00:04:20.000><c> you</c><00:04:20.160><c> can</c>

00:04:20.310 --> 00:04:20.320 align:start position:0%
in some kind of sorted order you can
 

00:04:20.320 --> 00:04:22.469 align:start position:0%
in some kind of sorted order you can
probably<00:04:20.720><c> do</c><00:04:20.880><c> it</c><00:04:21.199><c> sorted</c><00:04:21.600><c> by</c><00:04:21.840><c> the</c><00:04:22.000><c> starting</c>

00:04:22.469 --> 00:04:22.479 align:start position:0%
probably do it sorted by the starting
 

00:04:22.479 --> 00:04:24.710 align:start position:0%
probably do it sorted by the starting
point<00:04:22.800><c> or</c><00:04:23.120><c> sorted</c><00:04:23.520><c> by</c><00:04:23.759><c> the</c><00:04:24.000><c> ending</c><00:04:24.320><c> point</c><00:04:24.639><c> i'm</c>

00:04:24.710 --> 00:04:24.720 align:start position:0%
point or sorted by the ending point i'm
 

00:04:24.720 --> 00:04:26.230 align:start position:0%
point or sorted by the ending point i'm
just<00:04:24.880><c> going</c><00:04:24.960><c> to</c><00:04:25.040><c> stick</c><00:04:25.360><c> with</c><00:04:25.600><c> sorted</c><00:04:25.919><c> by</c><00:04:26.080><c> the</c>

00:04:26.230 --> 00:04:26.240 align:start position:0%
just going to stick with sorted by the
 

00:04:26.240 --> 00:04:27.990 align:start position:0%
just going to stick with sorted by the
starting<00:04:26.720><c> point</c><00:04:27.360><c> just</c><00:04:27.600><c> because</c><00:04:27.840><c> it's</c><00:04:28.000><c> a</c>

00:04:27.990 --> 00:04:28.000 align:start position:0%
starting point just because it's a
 

00:04:28.000 --> 00:04:29.590 align:start position:0%
starting point just because it's a
little<00:04:28.160><c> bit</c><00:04:28.320><c> simpler</c><00:04:28.639><c> for</c><00:04:28.800><c> me</c><00:04:29.199><c> but</c><00:04:29.360><c> i</c><00:04:29.440><c> know</c>

00:04:29.590 --> 00:04:29.600 align:start position:0%
little bit simpler for me but i know
 

00:04:29.600 --> 00:04:31.670 align:start position:0%
little bit simpler for me but i know
that<00:04:29.759><c> it</c><00:04:29.840><c> works</c><00:04:30.160><c> in</c><00:04:30.320><c> both</c><00:04:30.560><c> ways</c><00:04:31.199><c> for</c><00:04:31.360><c> this</c>

00:04:31.670 --> 00:04:31.680 align:start position:0%
that it works in both ways for this
 

00:04:31.680 --> 00:04:33.830 align:start position:0%
that it works in both ways for this
problem<00:04:32.000><c> at</c><00:04:32.160><c> least</c><00:04:32.639><c> so</c><00:04:33.040><c> when</c><00:04:33.280><c> we</c><00:04:33.440><c> iterate</c>

00:04:33.830 --> 00:04:33.840 align:start position:0%
problem at least so when we iterate
 

00:04:33.840 --> 00:04:35.670 align:start position:0%
problem at least so when we iterate
through<00:04:34.000><c> these</c><00:04:34.320><c> in</c><00:04:34.479><c> sorted</c><00:04:34.880><c> order</c><00:04:35.440><c> first</c>

00:04:35.670 --> 00:04:35.680 align:start position:0%
through these in sorted order first
 

00:04:35.680 --> 00:04:37.670 align:start position:0%
through these in sorted order first
we're<00:04:35.840><c> going</c><00:04:36.000><c> to</c><00:04:36.080><c> compare</c><00:04:36.800><c> these</c><00:04:37.360><c> two</c>

00:04:37.670 --> 00:04:37.680 align:start position:0%
we're going to compare these two
 

00:04:37.680 --> 00:04:39.270 align:start position:0%
we're going to compare these two
intervals<00:04:38.160><c> right</c><00:04:38.320><c> we</c><00:04:38.400><c> want</c><00:04:38.560><c> to</c><00:04:38.639><c> compare</c>

00:04:39.270 --> 00:04:39.280 align:start position:0%
intervals right we want to compare
 

00:04:39.280 --> 00:04:41.670 align:start position:0%
intervals right we want to compare
adjacent<00:04:40.160><c> pairs</c><00:04:40.560><c> of</c><00:04:40.720><c> intervals</c><00:04:41.360><c> right</c><00:04:41.600><c> and</c>

00:04:41.670 --> 00:04:41.680 align:start position:0%
adjacent pairs of intervals right and
 

00:04:41.680 --> 00:04:43.430 align:start position:0%
adjacent pairs of intervals right and
let's<00:04:42.160><c> actually</c><00:04:42.479><c> ignore</c><00:04:42.800><c> this</c><00:04:42.960><c> example</c><00:04:43.280><c> for</c>

00:04:43.430 --> 00:04:43.440 align:start position:0%
let's actually ignore this example for
 

00:04:43.440 --> 00:04:45.590 align:start position:0%
let's actually ignore this example for
just<00:04:43.680><c> a</c><00:04:43.759><c> second</c><00:04:44.320><c> suppose</c><00:04:44.639><c> we</c><00:04:44.800><c> had</c><00:04:45.120><c> just</c><00:04:45.360><c> two</c>

00:04:45.590 --> 00:04:45.600 align:start position:0%
just a second suppose we had just two
 

00:04:45.600 --> 00:04:47.189 align:start position:0%
just a second suppose we had just two
intervals<00:04:46.000><c> right</c><00:04:46.240><c> one</c><00:04:46.479><c> interval</c><00:04:46.800><c> like</c><00:04:46.960><c> this</c>

00:04:47.189 --> 00:04:47.199 align:start position:0%
intervals right one interval like this
 

00:04:47.199 --> 00:04:49.909 align:start position:0%
intervals right one interval like this
and<00:04:47.440><c> one</c><00:04:47.680><c> interval</c><00:04:48.320><c> like</c><00:04:48.800><c> this</c><00:04:49.360><c> okay</c><00:04:49.680><c> they're</c>

00:04:49.909 --> 00:04:49.919 align:start position:0%
and one interval like this okay they're
 

00:04:49.919 --> 00:04:51.670 align:start position:0%
and one interval like this okay they're
in<00:04:50.000><c> sorted</c><00:04:50.400><c> order</c><00:04:50.880><c> right</c><00:04:51.360><c> and</c><00:04:51.520><c> we're</c>

00:04:51.670 --> 00:04:51.680 align:start position:0%
in sorted order right and we're
 

00:04:51.680 --> 00:04:53.189 align:start position:0%
in sorted order right and we're
comparing<00:04:52.160><c> adjacent</c><00:04:52.639><c> pairs</c><00:04:52.880><c> so</c><00:04:53.040><c> we're</c><00:04:53.120><c> going</c>

00:04:53.189 --> 00:04:53.199 align:start position:0%
comparing adjacent pairs so we're going
 

00:04:53.199 --> 00:04:54.870 align:start position:0%
comparing adjacent pairs so we're going
to<00:04:53.280><c> look</c><00:04:53.440><c> at</c><00:04:53.520><c> this</c><00:04:53.680><c> one</c><00:04:53.919><c> and</c><00:04:54.080><c> look</c><00:04:54.320><c> at</c><00:04:54.400><c> this</c><00:04:54.560><c> one</c>

00:04:54.870 --> 00:04:54.880 align:start position:0%
to look at this one and look at this one
 

00:04:54.880 --> 00:04:58.070 align:start position:0%
to look at this one and look at this one
how<00:04:55.040><c> do</c><00:04:55.199><c> we</c><00:04:55.440><c> know</c><00:04:55.759><c> if</c><00:04:56.160><c> they</c><00:04:56.479><c> are</c><00:04:56.880><c> overlapping</c>

00:04:58.070 --> 00:04:58.080 align:start position:0%
how do we know if they are overlapping
 

00:04:58.080 --> 00:05:00.230 align:start position:0%
how do we know if they are overlapping
well<00:04:58.320><c> if</c><00:04:58.479><c> they're</c><00:04:58.720><c> sorted</c><00:04:59.360><c> by</c><00:04:59.600><c> the</c><00:04:59.840><c> starting</c>

00:05:00.230 --> 00:05:00.240 align:start position:0%
well if they're sorted by the starting
 

00:05:00.240 --> 00:05:02.790 align:start position:0%
well if they're sorted by the starting
point<00:05:00.639><c> we</c><00:05:00.800><c> know</c><00:05:01.039><c> that</c><00:05:01.360><c> either</c><00:05:01.919><c> they</c><00:05:02.240><c> both</c><00:05:02.560><c> have</c>

00:05:02.790 --> 00:05:02.800 align:start position:0%
point we know that either they both have
 

00:05:02.800 --> 00:05:05.029 align:start position:0%
point we know that either they both have
the<00:05:02.960><c> exact</c><00:05:03.360><c> same</c><00:05:03.680><c> starting</c><00:05:04.080><c> point</c><00:05:04.400><c> or</c><00:05:04.880><c> the</c>

00:05:05.029 --> 00:05:05.039 align:start position:0%
the exact same starting point or the
 

00:05:05.039 --> 00:05:07.029 align:start position:0%
the exact same starting point or the
second<00:05:05.360><c> one</c><00:05:05.600><c> has</c><00:05:05.840><c> a</c><00:05:05.919><c> starting</c><00:05:06.400><c> point</c><00:05:06.639><c> that's</c>

00:05:07.029 --> 00:05:07.039 align:start position:0%
second one has a starting point that's
 

00:05:07.039 --> 00:05:09.270 align:start position:0%
second one has a starting point that's
after<00:05:07.600><c> the</c><00:05:07.759><c> first</c><00:05:08.160><c> one's</c><00:05:08.639><c> starting</c><00:05:08.960><c> point</c><00:05:09.199><c> and</c>

00:05:09.270 --> 00:05:09.280 align:start position:0%
after the first one's starting point and
 

00:05:09.280 --> 00:05:11.110 align:start position:0%
after the first one's starting point and
that's<00:05:09.520><c> the</c><00:05:09.680><c> case</c><00:05:10.240><c> here</c>

00:05:11.110 --> 00:05:11.120 align:start position:0%
that's the case here
 

00:05:11.120 --> 00:05:13.189 align:start position:0%
that's the case here
but<00:05:11.680><c> again</c><00:05:12.080><c> how</c><00:05:12.240><c> do</c><00:05:12.400><c> we</c><00:05:12.560><c> know</c><00:05:12.800><c> if</c><00:05:12.960><c> they're</c>

00:05:13.189 --> 00:05:13.199 align:start position:0%
but again how do we know if they're
 

00:05:13.199 --> 00:05:15.749 align:start position:0%
but again how do we know if they're
overlapping<00:05:13.840><c> or</c><00:05:14.080><c> not</c><00:05:14.560><c> well</c><00:05:14.960><c> the</c><00:05:15.120><c> easiest</c><00:05:15.600><c> way</c>

00:05:15.749 --> 00:05:15.759 align:start position:0%
overlapping or not well the easiest way
 

00:05:15.759 --> 00:05:18.550 align:start position:0%
overlapping or not well the easiest way
to<00:05:15.919><c> check</c><00:05:16.320><c> is</c><00:05:16.880><c> they're</c><00:05:17.199><c> not</c><00:05:17.520><c> overlapping</c><00:05:18.320><c> if</c>

00:05:18.550 --> 00:05:18.560 align:start position:0%
to check is they're not overlapping if
 

00:05:18.560 --> 00:05:23.029 align:start position:0%
to check is they're not overlapping if
this<00:05:18.960><c> one</c><00:05:19.440><c> starts</c><00:05:20.479><c> after</c><00:05:21.360><c> this</c><00:05:21.759><c> one</c><00:05:22.400><c> ends</c>

00:05:23.029 --> 00:05:23.039 align:start position:0%
this one starts after this one ends
 

00:05:23.039 --> 00:05:25.270 align:start position:0%
this one starts after this one ends
right<00:05:23.280><c> if</c><00:05:23.440><c> the</c><00:05:23.600><c> second</c><00:05:23.919><c> one</c><00:05:24.320><c> starts</c><00:05:24.800><c> after</c><00:05:25.120><c> the</c>

00:05:25.270 --> 00:05:25.280 align:start position:0%
right if the second one starts after the
 

00:05:25.280 --> 00:05:27.590 align:start position:0%
right if the second one starts after the
first<00:05:25.600><c> one</c><00:05:25.919><c> ends</c><00:05:26.479><c> then</c><00:05:26.639><c> they're</c><00:05:26.960><c> definitely</c>

00:05:27.590 --> 00:05:27.600 align:start position:0%
first one ends then they're definitely
 

00:05:27.600 --> 00:05:30.790 align:start position:0%
first one ends then they're definitely
not<00:05:28.000><c> overlapping</c><00:05:29.120><c> but</c><00:05:29.440><c> on</c><00:05:29.600><c> the</c><00:05:29.840><c> other</c><00:05:30.080><c> hand</c><00:05:30.639><c> if</c>

00:05:30.790 --> 00:05:30.800 align:start position:0%
not overlapping but on the other hand if
 

00:05:30.800 --> 00:05:33.909 align:start position:0%
not overlapping but on the other hand if
the<00:05:30.960><c> second</c><00:05:31.360><c> one</c><00:05:31.919><c> starts</c><00:05:32.560><c> before</c><00:05:33.280><c> the</c><00:05:33.520><c> first</c>

00:05:33.909 --> 00:05:33.919 align:start position:0%
the second one starts before the first
 

00:05:33.919 --> 00:05:35.990 align:start position:0%
the second one starts before the first
one<00:05:34.160><c> ends</c><00:05:34.720><c> then</c><00:05:34.880><c> they're</c><00:05:35.280><c> definitely</c>

00:05:35.990 --> 00:05:36.000 align:start position:0%
one ends then they're definitely
 

00:05:36.000 --> 00:05:37.590 align:start position:0%
one ends then they're definitely
overlapping<00:05:36.639><c> right</c><00:05:36.800><c> you</c><00:05:36.880><c> can</c><00:05:37.039><c> see</c><00:05:37.199><c> that</c><00:05:37.360><c> this</c>

00:05:37.590 --> 00:05:37.600 align:start position:0%
overlapping right you can see that this
 

00:05:37.600 --> 00:05:39.510 align:start position:0%
overlapping right you can see that this
is<00:05:37.680><c> the</c><00:05:37.919><c> point</c><00:05:38.160><c> that</c><00:05:38.240><c> they're</c><00:05:38.400><c> overlapping</c><00:05:39.039><c> at</c>

00:05:39.510 --> 00:05:39.520 align:start position:0%
is the point that they're overlapping at
 

00:05:39.520 --> 00:05:41.909 align:start position:0%
is the point that they're overlapping at
okay<00:05:39.840><c> so</c><00:05:40.000><c> does</c><00:05:40.160><c> that</c><00:05:40.400><c> cover</c><00:05:40.880><c> all</c><00:05:41.199><c> of</c><00:05:41.360><c> the</c><00:05:41.520><c> cases</c>

00:05:41.909 --> 00:05:41.919 align:start position:0%
okay so does that cover all of the cases
 

00:05:41.919 --> 00:05:43.749 align:start position:0%
okay so does that cover all of the cases
well<00:05:42.080><c> there's</c><00:05:42.320><c> one</c><00:05:42.560><c> more</c><00:05:42.800><c> case</c><00:05:43.360><c> technically</c>

00:05:43.749 --> 00:05:43.759 align:start position:0%
well there's one more case technically
 

00:05:43.759 --> 00:05:45.270 align:start position:0%
well there's one more case technically
that's<00:05:44.000><c> slightly</c><00:05:44.479><c> different</c><00:05:44.720><c> what</c><00:05:44.880><c> if</c><00:05:45.120><c> you</c>

00:05:45.270 --> 00:05:45.280 align:start position:0%
that's slightly different what if you
 

00:05:45.280 --> 00:05:47.110 align:start position:0%
that's slightly different what if you
know<00:05:45.360><c> the</c><00:05:45.520><c> first</c><00:05:45.840><c> one</c><00:05:46.160><c> is</c><00:05:46.320><c> really</c><00:05:46.639><c> long</c><00:05:47.039><c> and</c>

00:05:47.110 --> 00:05:47.120 align:start position:0%
know the first one is really long and
 

00:05:47.120 --> 00:05:49.590 align:start position:0%
know the first one is really long and
the<00:05:47.280><c> second</c><00:05:47.520><c> one</c><00:05:48.080><c> starts</c><00:05:48.800><c> here</c><00:05:49.120><c> right</c><00:05:49.280><c> so</c><00:05:49.520><c> it</c>

00:05:49.590 --> 00:05:49.600 align:start position:0%
the second one starts here right so it
 

00:05:49.600 --> 00:05:52.790 align:start position:0%
the second one starts here right so it
does<00:05:49.759><c> come</c><00:05:50.080><c> after</c><00:05:50.639><c> this</c><00:05:50.880><c> one</c><00:05:51.520><c> but</c><00:05:51.840><c> it</c><00:05:52.160><c> ends</c>

00:05:52.790 --> 00:05:52.800 align:start position:0%
does come after this one but it ends
 

00:05:52.800 --> 00:05:55.590 align:start position:0%
does come after this one but it ends
before<00:05:53.680><c> the</c><00:05:53.840><c> first</c><00:05:54.160><c> one</c><00:05:54.479><c> ends</c><00:05:55.039><c> this</c><00:05:55.280><c> is</c><00:05:55.360><c> a</c>

00:05:55.590 --> 00:05:55.600 align:start position:0%
before the first one ends this is a
 

00:05:55.600 --> 00:05:57.749 align:start position:0%
before the first one ends this is a
slightly<00:05:56.080><c> different</c><00:05:56.479><c> edge</c><00:05:56.720><c> case</c><00:05:57.120><c> again</c><00:05:57.520><c> they</c>

00:05:57.749 --> 00:05:57.759 align:start position:0%
slightly different edge case again they
 

00:05:57.759 --> 00:05:59.749 align:start position:0%
slightly different edge case again they
are<00:05:58.000><c> overlapping</c><00:05:58.639><c> we</c><00:05:58.800><c> can</c><00:05:58.880><c> detect</c><00:05:59.360><c> that</c><00:05:59.520><c> with</c>

00:05:59.749 --> 00:05:59.759 align:start position:0%
are overlapping we can detect that with
 

00:05:59.759 --> 00:06:01.510 align:start position:0%
are overlapping we can detect that with
the<00:05:59.840><c> same</c><00:06:00.080><c> condition</c><00:06:00.479><c> this</c><00:06:00.720><c> one</c><00:06:00.960><c> starts</c>

00:06:01.510 --> 00:06:01.520 align:start position:0%
the same condition this one starts
 

00:06:01.520 --> 00:06:03.670 align:start position:0%
the same condition this one starts
before<00:06:01.919><c> this</c><00:06:02.160><c> one</c><00:06:02.479><c> ends</c><00:06:03.039><c> so</c><00:06:03.199><c> yes</c><00:06:03.440><c> they're</c>

00:06:03.670 --> 00:06:03.680 align:start position:0%
before this one ends so yes they're
 

00:06:03.680 --> 00:06:06.230 align:start position:0%
before this one ends so yes they're
overlapping<00:06:04.400><c> but</c><00:06:04.639><c> now</c><00:06:05.039><c> suppose</c><00:06:05.440><c> we</c><00:06:05.600><c> had</c><00:06:05.919><c> a</c>

00:06:06.230 --> 00:06:06.240 align:start position:0%
overlapping but now suppose we had a
 

00:06:06.240 --> 00:06:09.430 align:start position:0%
overlapping but now suppose we had a
third<00:06:06.880><c> interval</c><00:06:07.600><c> that</c><00:06:07.840><c> comes</c><00:06:08.319><c> next</c><00:06:09.120><c> remember</c>

00:06:09.430 --> 00:06:09.440 align:start position:0%
third interval that comes next remember
 

00:06:09.440 --> 00:06:11.350 align:start position:0%
third interval that comes next remember
we<00:06:09.680><c> are</c><00:06:09.759><c> traversing</c><00:06:10.319><c> these</c><00:06:10.639><c> in</c><00:06:10.720><c> sorted</c><00:06:11.120><c> order</c>

00:06:11.350 --> 00:06:11.360 align:start position:0%
we are traversing these in sorted order
 

00:06:11.360 --> 00:06:13.350 align:start position:0%
we are traversing these in sorted order
so<00:06:11.520><c> first</c><00:06:11.759><c> we're</c><00:06:11.919><c> gonna</c><00:06:12.319><c> compare</c><00:06:12.800><c> this</c><00:06:12.960><c> one</c><00:06:13.199><c> is</c>

00:06:13.350 --> 00:06:13.360 align:start position:0%
so first we're gonna compare this one is
 

00:06:13.360 --> 00:06:14.950 align:start position:0%
so first we're gonna compare this one is
first<00:06:13.759><c> this</c><00:06:13.919><c> one</c><00:06:14.160><c> is</c><00:06:14.240><c> second</c><00:06:14.479><c> so</c><00:06:14.639><c> then</c><00:06:14.800><c> we're</c>

00:06:14.950 --> 00:06:14.960 align:start position:0%
first this one is second so then we're
 

00:06:14.960 --> 00:06:17.350 align:start position:0%
first this one is second so then we're
gonna<00:06:15.120><c> compare</c><00:06:15.440><c> these</c><00:06:15.680><c> two</c><00:06:15.919><c> together</c><00:06:16.639><c> next</c>

00:06:17.350 --> 00:06:17.360 align:start position:0%
gonna compare these two together next
 

00:06:17.360 --> 00:06:19.430 align:start position:0%
gonna compare these two together next
are<00:06:17.520><c> we</c><00:06:17.600><c> gonna</c><00:06:17.759><c> be</c><00:06:17.919><c> looking</c><00:06:18.240><c> at</c><00:06:18.400><c> this</c><00:06:18.639><c> one</c><00:06:19.039><c> and</c>

00:06:19.430 --> 00:06:19.440 align:start position:0%
are we gonna be looking at this one and
 

00:06:19.440 --> 00:06:20.390 align:start position:0%
are we gonna be looking at this one and
this<00:06:19.680><c> one</c>

00:06:20.390 --> 00:06:20.400 align:start position:0%
this one
 

00:06:20.400 --> 00:06:23.350 align:start position:0%
this one
in<00:06:20.560><c> this</c><00:06:20.880><c> case</c><00:06:21.600><c> yes</c><00:06:22.160><c> because</c><00:06:22.479><c> remember</c><00:06:23.199><c> if</c>

00:06:23.350 --> 00:06:23.360 align:start position:0%
in this case yes because remember if
 

00:06:23.360 --> 00:06:25.590 align:start position:0%
in this case yes because remember if
these<00:06:23.680><c> two</c><00:06:23.840><c> are</c><00:06:24.000><c> overlapping</c><00:06:24.800><c> we</c><00:06:25.120><c> don't</c><00:06:25.360><c> have</c>

00:06:25.590 --> 00:06:25.600 align:start position:0%
these two are overlapping we don't have
 

00:06:25.600 --> 00:06:28.150 align:start position:0%
these two are overlapping we don't have
to<00:06:25.759><c> remove</c><00:06:26.560><c> both</c><00:06:26.800><c> of</c><00:06:26.880><c> them</c><00:06:27.120><c> we</c><00:06:27.360><c> only</c><00:06:27.759><c> have</c><00:06:28.000><c> to</c>

00:06:28.150 --> 00:06:28.160 align:start position:0%
to remove both of them we only have to
 

00:06:28.160 --> 00:06:30.230 align:start position:0%
to remove both of them we only have to
remove<00:06:28.800><c> one</c><00:06:29.039><c> of</c><00:06:29.120><c> them</c><00:06:29.360><c> so</c><00:06:29.520><c> the</c><00:06:29.680><c> choice</c><00:06:30.000><c> is</c><00:06:30.160><c> are</c>

00:06:30.230 --> 00:06:30.240 align:start position:0%
remove one of them so the choice is are
 

00:06:30.240 --> 00:06:31.830 align:start position:0%
remove one of them so the choice is are
we<00:06:30.400><c> going</c><00:06:30.479><c> to</c><00:06:30.560><c> remove</c><00:06:30.880><c> this</c><00:06:31.039><c> one</c><00:06:31.360><c> or</c><00:06:31.600><c> are</c><00:06:31.680><c> we</c>

00:06:31.830 --> 00:06:31.840 align:start position:0%
we going to remove this one or are we
 

00:06:31.840 --> 00:06:34.550 align:start position:0%
we going to remove this one or are we
going<00:06:31.919><c> to</c><00:06:32.080><c> remove</c><00:06:32.639><c> this</c><00:06:32.960><c> one</c><00:06:33.360><c> well</c><00:06:34.160><c> which</c><00:06:34.400><c> one</c>

00:06:34.550 --> 00:06:34.560 align:start position:0%
going to remove this one well which one
 

00:06:34.560 --> 00:06:36.390 align:start position:0%
going to remove this one well which one
do<00:06:34.720><c> you</c><00:06:34.960><c> think</c><00:06:35.120><c> we</c><00:06:35.280><c> would</c><00:06:35.440><c> rather</c><00:06:35.759><c> remove</c>

00:06:36.390 --> 00:06:36.400 align:start position:0%
do you think we would rather remove
 

00:06:36.400 --> 00:06:37.830 align:start position:0%
do you think we would rather remove
would<00:06:36.639><c> we</c><00:06:36.720><c> want</c><00:06:36.880><c> to</c><00:06:36.960><c> remove</c><00:06:37.280><c> the</c><00:06:37.440><c> one</c><00:06:37.600><c> that</c>

00:06:37.830 --> 00:06:37.840 align:start position:0%
would we want to remove the one that
 

00:06:37.840 --> 00:06:40.150 align:start position:0%
would we want to remove the one that
ends<00:06:38.240><c> first</c><00:06:38.560><c> or</c><00:06:38.720><c> the</c><00:06:38.880><c> one</c><00:06:39.039><c> that</c><00:06:39.280><c> ends</c><00:06:39.680><c> second</c>

00:06:40.150 --> 00:06:40.160 align:start position:0%
ends first or the one that ends second
 

00:06:40.160 --> 00:06:41.749 align:start position:0%
ends first or the one that ends second
of<00:06:40.240><c> course</c><00:06:40.560><c> we'd</c><00:06:40.720><c> want</c><00:06:40.880><c> to</c><00:06:40.960><c> remove</c><00:06:41.440><c> the</c><00:06:41.600><c> one</c>

00:06:41.749 --> 00:06:41.759 align:start position:0%
of course we'd want to remove the one
 

00:06:41.759 --> 00:06:43.510 align:start position:0%
of course we'd want to remove the one
that<00:06:42.000><c> ends</c><00:06:42.400><c> first</c><00:06:42.880><c> because</c><00:06:43.120><c> then</c><00:06:43.280><c> it's</c>

00:06:43.510 --> 00:06:43.520 align:start position:0%
that ends first because then it's
 

00:06:43.520 --> 00:06:44.870 align:start position:0%
that ends first because then it's
there's<00:06:43.840><c> less</c><00:06:44.080><c> of</c><00:06:44.160><c> a</c><00:06:44.240><c> chance</c><00:06:44.560><c> that</c><00:06:44.720><c> it's</c><00:06:44.800><c> going</c>

00:06:44.870 --> 00:06:44.880 align:start position:0%
there's less of a chance that it's going
 

00:06:44.880 --> 00:06:47.430 align:start position:0%
there's less of a chance that it's going
to<00:06:45.039><c> overlap</c><00:06:45.680><c> with</c><00:06:45.919><c> the</c><00:06:46.160><c> following</c><00:06:46.960><c> intervals</c>

00:06:47.430 --> 00:06:47.440 align:start position:0%
to overlap with the following intervals
 

00:06:47.440 --> 00:06:49.830 align:start position:0%
to overlap with the following intervals
that<00:06:47.520><c> come</c><00:06:47.840><c> after</c><00:06:48.160><c> and</c><00:06:48.319><c> remember</c><00:06:48.720><c> we</c><00:06:48.960><c> want</c><00:06:49.199><c> to</c>

00:06:49.830 --> 00:06:49.840 align:start position:0%
that come after and remember we want to
 

00:06:49.840 --> 00:06:51.670 align:start position:0%
that come after and remember we want to
minimize<00:06:50.400><c> the</c><00:06:50.560><c> number</c><00:06:50.800><c> of</c><00:06:51.039><c> intervals</c><00:06:51.440><c> that</c><00:06:51.520><c> we</c>

00:06:51.670 --> 00:06:51.680 align:start position:0%
minimize the number of intervals that we
 

00:06:51.680 --> 00:06:53.589 align:start position:0%
minimize the number of intervals that we
have<00:06:51.919><c> to</c><00:06:52.080><c> delete</c><00:06:52.639><c> in</c><00:06:52.800><c> this</c><00:06:53.039><c> example</c><00:06:53.360><c> with</c>

00:06:53.589 --> 00:06:53.599 align:start position:0%
have to delete in this example with
 

00:06:53.599 --> 00:06:55.189 align:start position:0%
have to delete in this example with
these<00:06:53.840><c> three</c><00:06:54.080><c> intervals</c><00:06:54.479><c> it</c><00:06:54.639><c> doesn't</c><00:06:54.880><c> matter</c>

00:06:55.189 --> 00:06:55.199 align:start position:0%
these three intervals it doesn't matter
 

00:06:55.199 --> 00:06:56.950 align:start position:0%
these three intervals it doesn't matter
we<00:06:55.280><c> could</c><00:06:55.440><c> remove</c><00:06:55.759><c> this</c><00:06:55.919><c> one</c><00:06:56.160><c> or</c><00:06:56.400><c> remove</c><00:06:56.800><c> this</c>

00:06:56.950 --> 00:06:56.960 align:start position:0%
we could remove this one or remove this
 

00:06:56.960 --> 00:06:59.029 align:start position:0%
we could remove this one or remove this
one<00:06:57.199><c> but</c><00:06:57.360><c> let's</c><00:06:57.599><c> look</c><00:06:57.759><c> at</c><00:06:57.919><c> another</c><00:06:58.240><c> example</c>

00:06:59.029 --> 00:06:59.039 align:start position:0%
one but let's look at another example
 

00:06:59.039 --> 00:07:01.589 align:start position:0%
one but let's look at another example
what<00:06:59.280><c> if</c><00:06:59.360><c> the</c><00:06:59.599><c> third</c><00:06:59.919><c> interval</c><00:07:00.319><c> was</c><00:07:00.479><c> like</c><00:07:01.039><c> this</c>

00:07:01.589 --> 00:07:01.599 align:start position:0%
what if the third interval was like this
 

00:07:01.599 --> 00:07:03.510 align:start position:0%
what if the third interval was like this
right<00:07:01.840><c> it's</c><00:07:02.080><c> overlapping</c><00:07:02.639><c> with</c><00:07:02.880><c> this</c><00:07:03.120><c> one</c>

00:07:03.510 --> 00:07:03.520 align:start position:0%
right it's overlapping with this one
 

00:07:03.520 --> 00:07:05.589 align:start position:0%
right it's overlapping with this one
then<00:07:03.759><c> it</c><00:07:03.840><c> becomes</c><00:07:04.240><c> pretty</c><00:07:04.639><c> obvious</c><00:07:05.199><c> we</c><00:07:05.360><c> would</c>

00:07:05.589 --> 00:07:05.599 align:start position:0%
then it becomes pretty obvious we would
 

00:07:05.599 --> 00:07:08.230 align:start position:0%
then it becomes pretty obvious we would
want<00:07:05.919><c> to</c><00:07:06.560><c> remove</c><00:07:06.960><c> this</c><00:07:07.360><c> bottom</c><00:07:07.759><c> interval</c>

00:07:08.230 --> 00:07:08.240 align:start position:0%
want to remove this bottom interval
 

00:07:08.240 --> 00:07:10.469 align:start position:0%
want to remove this bottom interval
rather<00:07:08.479><c> than</c><00:07:08.720><c> this</c><00:07:09.280><c> top</c><00:07:09.599><c> interval</c><00:07:10.160><c> and</c><00:07:10.319><c> it</c>

00:07:10.469 --> 00:07:10.479 align:start position:0%
rather than this top interval and it
 

00:07:10.479 --> 00:07:13.189 align:start position:0%
rather than this top interval and it
depends<00:07:10.960><c> on</c><00:07:11.120><c> which</c><00:07:11.360><c> one</c><00:07:11.520><c> of</c><00:07:11.599><c> these</c><00:07:12.080><c> ends</c><00:07:12.560><c> first</c>

00:07:13.189 --> 00:07:13.199 align:start position:0%
depends on which one of these ends first
 

00:07:13.199 --> 00:07:14.390 align:start position:0%
depends on which one of these ends first
so<00:07:13.360><c> that's</c><00:07:13.520><c> how</c><00:07:13.680><c> we're</c><00:07:13.840><c> going</c><00:07:13.919><c> to</c><00:07:14.000><c> decide</c>

00:07:14.390 --> 00:07:14.400 align:start position:0%
so that's how we're going to decide
 

00:07:14.400 --> 00:07:16.550 align:start position:0%
so that's how we're going to decide
which<00:07:14.639><c> one</c><00:07:14.880><c> to</c><00:07:15.039><c> remove</c><00:07:15.680><c> and</c><00:07:15.840><c> just</c><00:07:16.080><c> to</c><00:07:16.240><c> look</c><00:07:16.400><c> at</c>

00:07:16.550 --> 00:07:16.560 align:start position:0%
which one to remove and just to look at
 

00:07:16.560 --> 00:07:18.790 align:start position:0%
which one to remove and just to look at
a<00:07:16.720><c> third</c><00:07:17.120><c> example</c><00:07:17.919><c> so</c><00:07:18.240><c> what</c><00:07:18.400><c> if</c><00:07:18.560><c> they</c><00:07:18.639><c> were</c>

00:07:18.790 --> 00:07:18.800 align:start position:0%
a third example so what if they were
 

00:07:18.800 --> 00:07:21.270 align:start position:0%
a third example so what if they were
inter<00:07:19.280><c> overlapping</c><00:07:19.840><c> like</c><00:07:20.080><c> this</c><00:07:20.800><c> right</c><00:07:21.120><c> of</c>

00:07:21.270 --> 00:07:21.280 align:start position:0%
inter overlapping like this right of
 

00:07:21.280 --> 00:07:22.469 align:start position:0%
inter overlapping like this right of
course<00:07:21.520><c> we're</c><00:07:21.680><c> going</c><00:07:21.759><c> to</c><00:07:21.840><c> first</c><00:07:22.080><c> compare</c>

00:07:22.469 --> 00:07:22.479 align:start position:0%
course we're going to first compare
 

00:07:22.479 --> 00:07:24.230 align:start position:0%
course we're going to first compare
these<00:07:22.720><c> two</c><00:07:22.960><c> intervals</c><00:07:23.520><c> okay</c><00:07:23.759><c> yes</c><00:07:24.000><c> they're</c>

00:07:24.230 --> 00:07:24.240 align:start position:0%
these two intervals okay yes they're
 

00:07:24.240 --> 00:07:25.670 align:start position:0%
these two intervals okay yes they're
overlapping<00:07:24.800><c> and</c><00:07:24.880><c> we</c><00:07:25.039><c> can</c><00:07:25.120><c> detect</c><00:07:25.520><c> that</c>

00:07:25.670 --> 00:07:25.680 align:start position:0%
overlapping and we can detect that
 

00:07:25.680 --> 00:07:27.510 align:start position:0%
overlapping and we can detect that
because<00:07:25.919><c> this</c><00:07:26.080><c> one</c><00:07:26.319><c> starts</c><00:07:26.720><c> before</c><00:07:27.039><c> this</c><00:07:27.280><c> one</c>

00:07:27.510 --> 00:07:27.520 align:start position:0%
because this one starts before this one
 

00:07:27.520 --> 00:07:29.029 align:start position:0%
because this one starts before this one
ends<00:07:27.919><c> so</c><00:07:28.080><c> now</c><00:07:28.240><c> we</c><00:07:28.400><c> have</c><00:07:28.479><c> a</c><00:07:28.560><c> choice</c><00:07:28.800><c> do</c><00:07:28.960><c> we</c>

00:07:29.029 --> 00:07:29.039 align:start position:0%
ends so now we have a choice do we
 

00:07:29.039 --> 00:07:31.110 align:start position:0%
ends so now we have a choice do we
remove<00:07:29.360><c> this</c><00:07:29.520><c> one</c><00:07:29.759><c> or</c><00:07:30.000><c> do</c><00:07:30.160><c> we</c><00:07:30.240><c> remove</c><00:07:30.639><c> this</c><00:07:30.800><c> one</c>

00:07:31.110 --> 00:07:31.120 align:start position:0%
remove this one or do we remove this one
 

00:07:31.120 --> 00:07:33.430 align:start position:0%
remove this one or do we remove this one
again<00:07:31.520><c> we're</c><00:07:31.759><c> moving</c><00:07:32.000><c> the</c><00:07:32.160><c> one</c><00:07:32.400><c> that</c><00:07:32.720><c> ends</c>

00:07:33.430 --> 00:07:33.440 align:start position:0%
again we're moving the one that ends
 

00:07:33.440 --> 00:07:35.430 align:start position:0%
again we're moving the one that ends
first<00:07:33.840><c> so</c><00:07:34.080><c> we're</c><00:07:34.240><c> going</c><00:07:34.319><c> to</c><00:07:34.400><c> remove</c><00:07:34.800><c> this</c><00:07:35.039><c> one</c>

00:07:35.430 --> 00:07:35.440 align:start position:0%
first so we're going to remove this one
 

00:07:35.440 --> 00:07:36.710 align:start position:0%
first so we're going to remove this one
and<00:07:35.599><c> you</c><00:07:35.680><c> can</c><00:07:35.919><c> see</c>

00:07:36.710 --> 00:07:36.720 align:start position:0%
and you can see
 

00:07:36.720 --> 00:07:39.670 align:start position:0%
and you can see
exactly<00:07:37.199><c> why</c><00:07:37.680><c> because</c><00:07:38.080><c> now</c><00:07:38.400><c> these</c><00:07:38.720><c> two</c><00:07:39.039><c> do</c><00:07:39.280><c> not</c>

00:07:39.670 --> 00:07:39.680 align:start position:0%
exactly why because now these two do not
 

00:07:39.680 --> 00:07:42.070 align:start position:0%
exactly why because now these two do not
overlap<00:07:40.479><c> but</c><00:07:40.720><c> what</c><00:07:40.880><c> if</c><00:07:41.120><c> instead</c><00:07:41.520><c> we</c><00:07:41.680><c> decided</c>

00:07:42.070 --> 00:07:42.080 align:start position:0%
overlap but what if instead we decided
 

00:07:42.080 --> 00:07:44.230 align:start position:0%
overlap but what if instead we decided
to<00:07:42.240><c> remove</c><00:07:42.479><c> this</c><00:07:42.720><c> one</c><00:07:43.039><c> well</c><00:07:43.520><c> we</c><00:07:43.759><c> removed</c><00:07:44.160><c> it</c>

00:07:44.230 --> 00:07:44.240 align:start position:0%
to remove this one well we removed it
 

00:07:44.240 --> 00:07:45.909 align:start position:0%
to remove this one well we removed it
but<00:07:44.400><c> it</c><00:07:44.479><c> didn't</c><00:07:44.720><c> help</c><00:07:44.960><c> us</c><00:07:45.120><c> because</c><00:07:45.440><c> these</c><00:07:45.680><c> two</c>

00:07:45.909 --> 00:07:45.919 align:start position:0%
but it didn't help us because these two
 

00:07:45.919 --> 00:07:47.990 align:start position:0%
but it didn't help us because these two
are<00:07:46.160><c> still</c><00:07:46.639><c> overlapping</c><00:07:47.360><c> we</c><00:07:47.520><c> want</c><00:07:47.759><c> to</c>

00:07:47.990 --> 00:07:48.000 align:start position:0%
are still overlapping we want to
 

00:07:48.000 --> 00:07:50.309 align:start position:0%
are still overlapping we want to
minimize<00:07:48.479><c> that</c><00:07:48.960><c> so</c>

00:07:50.309 --> 00:07:50.319 align:start position:0%
minimize that so
 

00:07:50.319 --> 00:07:51.830 align:start position:0%
minimize that so
basically<00:07:50.720><c> i</c><00:07:50.800><c> just</c><00:07:51.039><c> explained</c><00:07:51.440><c> to</c><00:07:51.520><c> you</c><00:07:51.680><c> the</c>

00:07:51.830 --> 00:07:51.840 align:start position:0%
basically i just explained to you the
 

00:07:51.840 --> 00:07:53.350 align:start position:0%
basically i just explained to you the
exact<00:07:52.240><c> algorithm</c><00:07:52.720><c> that</c><00:07:52.879><c> we're</c><00:07:53.039><c> going</c><00:07:53.120><c> to</c><00:07:53.199><c> be</c>

00:07:53.350 --> 00:07:53.360 align:start position:0%
exact algorithm that we're going to be
 

00:07:53.360 --> 00:07:55.350 align:start position:0%
exact algorithm that we're going to be
using<00:07:54.000><c> we're</c><00:07:54.160><c> going</c><00:07:54.319><c> to</c><00:07:54.479><c> sort</c><00:07:54.800><c> the</c><00:07:54.960><c> entire</c>

00:07:55.350 --> 00:07:55.360 align:start position:0%
using we're going to sort the entire
 

00:07:55.360 --> 00:07:57.110 align:start position:0%
using we're going to sort the entire
array<00:07:55.680><c> based</c><00:07:56.000><c> on</c><00:07:56.080><c> the</c><00:07:56.240><c> starting</c><00:07:56.560><c> value</c><00:07:56.960><c> then</c>

00:07:57.110 --> 00:07:57.120 align:start position:0%
array based on the starting value then
 

00:07:57.120 --> 00:07:59.670 align:start position:0%
array based on the starting value then
we're<00:07:57.280><c> going</c><00:07:57.360><c> to</c><00:07:57.520><c> compare</c><00:07:58.080><c> adjacent</c><00:07:59.039><c> pairs</c>

00:07:59.670 --> 00:07:59.680 align:start position:0%
we're going to compare adjacent pairs
 

00:07:59.680 --> 00:08:01.350 align:start position:0%
we're going to compare adjacent pairs
and<00:07:59.759><c> then</c><00:08:00.000><c> use</c><00:08:00.240><c> the</c><00:08:00.400><c> conditions</c><00:08:00.879><c> that</c><00:08:01.039><c> i</c><00:08:01.120><c> just</c>

00:08:01.350 --> 00:08:01.360 align:start position:0%
and then use the conditions that i just
 

00:08:01.360 --> 00:08:03.110 align:start position:0%
and then use the conditions that i just
mentioned<00:08:01.759><c> now</c><00:08:01.919><c> what's</c><00:08:02.160><c> the</c><00:08:02.319><c> time</c><00:08:02.479><c> complexity</c>

00:08:03.110 --> 00:08:03.120 align:start position:0%
mentioned now what's the time complexity
 

00:08:03.120 --> 00:08:05.029 align:start position:0%
mentioned now what's the time complexity
of<00:08:03.199><c> this</c><00:08:03.680><c> well</c><00:08:04.240><c> we're</c><00:08:04.400><c> going</c><00:08:04.479><c> to</c><00:08:04.639><c> sort</c><00:08:04.960><c> and</c>

00:08:05.029 --> 00:08:05.039 align:start position:0%
of this well we're going to sort and
 

00:08:05.039 --> 00:08:06.230 align:start position:0%
of this well we're going to sort and
then<00:08:05.199><c> we're</c><00:08:05.360><c> just</c><00:08:05.520><c> going</c><00:08:05.599><c> to</c><00:08:05.759><c> iterate</c><00:08:06.080><c> through</c>

00:08:06.230 --> 00:08:06.240 align:start position:0%
then we're just going to iterate through
 

00:08:06.240 --> 00:08:08.309 align:start position:0%
then we're just going to iterate through
the<00:08:06.400><c> array</c><00:08:06.960><c> a</c><00:08:07.120><c> single</c><00:08:07.520><c> pass</c><00:08:07.840><c> right</c><00:08:08.000><c> so</c><00:08:08.160><c> the</c>

00:08:08.309 --> 00:08:08.319 align:start position:0%
the array a single pass right so the
 

00:08:08.319 --> 00:08:10.869 align:start position:0%
the array a single pass right so the
iterating<00:08:09.120><c> is</c><00:08:09.520><c> simple</c><00:08:09.840><c> it's</c><00:08:10.000><c> just</c><00:08:10.319><c> big</c><00:08:10.560><c> o</c><00:08:10.639><c> of</c><00:08:10.800><c> n</c>

00:08:10.869 --> 00:08:10.879 align:start position:0%
iterating is simple it's just big o of n
 

00:08:10.879 --> 00:08:11.909 align:start position:0%
iterating is simple it's just big o of n
we're<00:08:11.039><c> just</c><00:08:11.120><c> going</c><00:08:11.199><c> to</c><00:08:11.360><c> iterate</c><00:08:11.599><c> through</c><00:08:11.840><c> the</c>

00:08:11.909 --> 00:08:11.919 align:start position:0%
we're just going to iterate through the
 

00:08:11.919 --> 00:08:13.670 align:start position:0%
we're just going to iterate through the
entire<00:08:12.319><c> array</c><00:08:12.639><c> but</c><00:08:12.800><c> the</c><00:08:12.960><c> sorting</c><00:08:13.440><c> is</c><00:08:13.520><c> where</c>

00:08:13.670 --> 00:08:13.680 align:start position:0%
entire array but the sorting is where
 

00:08:13.680 --> 00:08:15.670 align:start position:0%
entire array but the sorting is where
the<00:08:13.840><c> bottleneck</c><00:08:14.479><c> is</c><00:08:14.879><c> so</c><00:08:15.120><c> that's</c><00:08:15.360><c> what</c><00:08:15.520><c> the</c>

00:08:15.670 --> 00:08:15.680 align:start position:0%
the bottleneck is so that's what the
 

00:08:15.680 --> 00:08:17.270 align:start position:0%
the bottleneck is so that's what the
overall<00:08:16.000><c> time</c><00:08:16.240><c> complexity</c><00:08:16.720><c> is</c><00:08:16.800><c> going</c><00:08:16.879><c> to</c><00:08:16.960><c> be</c>

00:08:17.270 --> 00:08:17.280 align:start position:0%
overall time complexity is going to be
 

00:08:17.280 --> 00:08:18.710 align:start position:0%
overall time complexity is going to be
big<00:08:17.599><c> o</c><00:08:17.840><c> log</c>

00:08:18.710 --> 00:08:18.720 align:start position:0%
big o log
 

00:08:18.720 --> 00:08:21.589 align:start position:0%
big o log
n<00:08:18.879><c> log</c><00:08:19.199><c> n</c><00:08:19.680><c> and</c><00:08:19.840><c> just</c><00:08:20.000><c> to</c><00:08:20.240><c> run</c><00:08:20.879><c> the</c><00:08:21.120><c> algorithm</c>

00:08:21.589 --> 00:08:21.599 align:start position:0%
n log n and just to run the algorithm
 

00:08:21.599 --> 00:08:23.830 align:start position:0%
n log n and just to run the algorithm
that<00:08:21.680><c> i</c><00:08:21.840><c> explained</c><00:08:22.319><c> on</c><00:08:22.720><c> this</c><00:08:22.960><c> input</c><00:08:23.280><c> example</c>

00:08:23.830 --> 00:08:23.840 align:start position:0%
that i explained on this input example
 

00:08:23.840 --> 00:08:25.350 align:start position:0%
that i explained on this input example
because<00:08:24.080><c> they</c><00:08:24.240><c> have</c><00:08:24.400><c> the</c><00:08:24.479><c> first</c><00:08:24.720><c> two</c><00:08:24.960><c> starting</c>

00:08:25.350 --> 00:08:25.360 align:start position:0%
because they have the first two starting
 

00:08:25.360 --> 00:08:27.270 align:start position:0%
because they have the first two starting
values<00:08:26.080><c> so</c><00:08:26.240><c> we're</c><00:08:26.400><c> going</c><00:08:26.479><c> to</c><00:08:26.560><c> have</c><00:08:26.720><c> this</c><00:08:26.960><c> array</c>

00:08:27.270 --> 00:08:27.280 align:start position:0%
values so we're going to have this array
 

00:08:27.280 --> 00:08:29.189 align:start position:0%
values so we're going to have this array
in<00:08:27.360><c> sorted</c><00:08:27.759><c> order</c><00:08:28.000><c> based</c><00:08:28.319><c> on</c><00:08:28.639><c> the</c><00:08:28.800><c> start</c>

00:08:29.189 --> 00:08:29.199 align:start position:0%
in sorted order based on the start
 

00:08:29.199 --> 00:08:31.189 align:start position:0%
in sorted order based on the start
values<00:08:29.680><c> we're</c><00:08:29.919><c> actually</c><00:08:30.160><c> going</c><00:08:30.240><c> to</c><00:08:30.479><c> take</c><00:08:30.960><c> the</c>

00:08:31.189 --> 00:08:31.199 align:start position:0%
values we're actually going to take the
 

00:08:31.199 --> 00:08:34.070 align:start position:0%
values we're actually going to take the
first<00:08:31.599><c> interval</c><00:08:32.240><c> and</c><00:08:32.399><c> just</c><00:08:32.800><c> take</c><00:08:33.360><c> its</c><00:08:33.760><c> end</c>

00:08:34.070 --> 00:08:34.080 align:start position:0%
first interval and just take its end
 

00:08:34.080 --> 00:08:36.230 align:start position:0%
first interval and just take its end
value<00:08:34.479><c> and</c><00:08:34.560><c> then</c><00:08:34.800><c> keep</c><00:08:35.039><c> track</c><00:08:35.360><c> of</c><00:08:35.599><c> it</c><00:08:35.919><c> because</c>

00:08:36.230 --> 00:08:36.240 align:start position:0%
value and then keep track of it because
 

00:08:36.240 --> 00:08:37.589 align:start position:0%
value and then keep track of it because
since<00:08:36.479><c> this</c><00:08:36.640><c> is</c><00:08:36.719><c> the</c><00:08:36.800><c> first</c><00:08:37.120><c> interval</c><00:08:37.440><c> there's</c>

00:08:37.589 --> 00:08:37.599 align:start position:0%
since this is the first interval there's
 

00:08:37.599 --> 00:08:39.509 align:start position:0%
since this is the first interval there's
nothing<00:08:37.919><c> going</c><00:08:38.000><c> to</c><00:08:38.080><c> be</c><00:08:38.240><c> that</c><00:08:38.479><c> comes</c><00:08:38.880><c> before</c><00:08:39.279><c> it</c>

00:08:39.509 --> 00:08:39.519 align:start position:0%
nothing going to be that comes before it
 

00:08:39.519 --> 00:08:41.269 align:start position:0%
nothing going to be that comes before it
on<00:08:39.599><c> the</c><00:08:39.839><c> left</c><00:08:40.399><c> okay</c><00:08:40.560><c> so</c><00:08:40.719><c> now</c><00:08:40.880><c> we're</c><00:08:41.039><c> going</c><00:08:41.120><c> to</c>

00:08:41.269 --> 00:08:41.279 align:start position:0%
on the left okay so now we're going to
 

00:08:41.279 --> 00:08:43.269 align:start position:0%
on the left okay so now we're going to
iterate<00:08:41.760><c> through</c><00:08:42.240><c> the</c><00:08:42.479><c> intervals</c><00:08:42.959><c> that</c><00:08:43.039><c> come</c>

00:08:43.269 --> 00:08:43.279 align:start position:0%
iterate through the intervals that come
 

00:08:43.279 --> 00:08:45.509 align:start position:0%
iterate through the intervals that come
after<00:08:43.599><c> this</c><00:08:43.760><c> one</c><00:08:44.000><c> so</c><00:08:44.399><c> the</c><00:08:44.560><c> first</c><00:08:44.800><c> interval</c><00:08:45.279><c> is</c>

00:08:45.509 --> 00:08:45.519 align:start position:0%
after this one so the first interval is
 

00:08:45.519 --> 00:08:47.910 align:start position:0%
after this one so the first interval is
this<00:08:45.760><c> one</c><00:08:46.000><c> it</c><00:08:46.160><c> has</c><00:08:46.399><c> the</c><00:08:46.720><c> next</c><00:08:46.959><c> start</c><00:08:47.279><c> value</c><00:08:47.760><c> so</c>

00:08:47.910 --> 00:08:47.920 align:start position:0%
this one it has the next start value so
 

00:08:47.920 --> 00:08:49.990 align:start position:0%
this one it has the next start value so
we're<00:08:48.080><c> going</c><00:08:48.160><c> to</c><00:08:48.320><c> check</c><00:08:48.560><c> is</c><00:08:48.640><c> the</c><00:08:48.800><c> start</c><00:08:49.040><c> value</c>

00:08:49.990 --> 00:08:50.000 align:start position:0%
we're going to check is the start value
 

00:08:50.000 --> 00:08:51.110 align:start position:0%
we're going to check is the start value
less<00:08:50.240><c> than</c>

00:08:51.110 --> 00:08:51.120 align:start position:0%
less than
 

00:08:51.120 --> 00:08:53.190 align:start position:0%
less than
this<00:08:51.360><c> ones</c><00:08:52.160><c> yes</c><00:08:52.399><c> they</c><00:08:52.640><c> are</c><00:08:52.800><c> so</c><00:08:52.959><c> they're</c>

00:08:53.190 --> 00:08:53.200 align:start position:0%
this ones yes they are so they're
 

00:08:53.200 --> 00:08:54.790 align:start position:0%
this ones yes they are so they're
overlapping<00:08:53.920><c> so</c><00:08:54.080><c> which</c><00:08:54.240><c> one</c><00:08:54.399><c> are</c><00:08:54.480><c> we</c><00:08:54.640><c> going</c><00:08:54.720><c> to</c>

00:08:54.790 --> 00:08:54.800 align:start position:0%
overlapping so which one are we going to
 

00:08:54.800 --> 00:08:57.190 align:start position:0%
overlapping so which one are we going to
delete<00:08:55.120><c> the</c><00:08:55.200><c> one</c><00:08:55.360><c> with</c><00:08:55.600><c> the</c><00:08:56.080><c> larger</c><00:08:56.560><c> end</c><00:08:56.800><c> value</c>

00:08:57.190 --> 00:08:57.200 align:start position:0%
delete the one with the larger end value
 

00:08:57.200 --> 00:08:59.350 align:start position:0%
delete the one with the larger end value
so<00:08:57.440><c> we're</c><00:08:57.600><c> going</c><00:08:57.680><c> to</c><00:08:57.760><c> delete</c><00:08:58.399><c> this</c><00:08:58.640><c> one</c><00:08:59.040><c> we</c><00:08:59.200><c> can</c>

00:08:59.350 --> 00:08:59.360 align:start position:0%
so we're going to delete this one we can
 

00:08:59.360 --> 00:09:01.990 align:start position:0%
so we're going to delete this one we can
leave<00:08:59.680><c> this</c><00:08:59.920><c> interval</c><00:09:00.320><c> as</c><00:09:00.720><c> is</c><00:09:01.040><c> and</c><00:09:01.360><c> save</c><00:09:01.760><c> its</c>

00:09:01.990 --> 00:09:02.000 align:start position:0%
leave this interval as is and save its
 

00:09:02.000 --> 00:09:03.829 align:start position:0%
leave this interval as is and save its
end<00:09:02.160><c> value</c><00:09:02.640><c> so</c><00:09:02.800><c> that</c><00:09:02.880><c> we</c><00:09:03.040><c> can</c><00:09:03.200><c> compare</c><00:09:03.519><c> it</c><00:09:03.680><c> with</c>

00:09:03.829 --> 00:09:03.839 align:start position:0%
end value so that we can compare it with
 

00:09:03.839 --> 00:09:05.670 align:start position:0%
end value so that we can compare it with
the<00:09:03.920><c> following</c><00:09:04.399><c> intervals</c><00:09:05.040><c> so</c><00:09:05.200><c> this</c><00:09:05.440><c> is</c><00:09:05.519><c> the</c>

00:09:05.670 --> 00:09:05.680 align:start position:0%
the following intervals so this is the
 

00:09:05.680 --> 00:09:07.590 align:start position:0%
the following intervals so this is the
interval<00:09:06.000><c> that</c><00:09:06.080><c> comes</c><00:09:06.399><c> next</c><00:09:06.880><c> is</c><00:09:07.040><c> its</c><00:09:07.279><c> start</c>

00:09:07.590 --> 00:09:07.600 align:start position:0%
interval that comes next is its start
 

00:09:07.600 --> 00:09:09.829 align:start position:0%
interval that comes next is its start
value<00:09:08.320><c> less</c><00:09:08.560><c> than</c><00:09:08.800><c> the</c><00:09:08.959><c> end</c><00:09:09.200><c> value</c><00:09:09.600><c> of</c><00:09:09.760><c> the</c>

00:09:09.829 --> 00:09:09.839 align:start position:0%
value less than the end value of the
 

00:09:09.839 --> 00:09:12.710 align:start position:0%
value less than the end value of the
previous<00:09:10.320><c> one</c><00:09:10.880><c> no</c><00:09:11.279><c> it's</c><00:09:11.600><c> not</c><00:09:12.160><c> so</c><00:09:12.320><c> we</c><00:09:12.480><c> don't</c>

00:09:12.710 --> 00:09:12.720 align:start position:0%
previous one no it's not so we don't
 

00:09:12.720 --> 00:09:15.590 align:start position:0%
previous one no it's not so we don't
delete<00:09:13.279><c> either</c><00:09:13.680><c> of</c><00:09:13.920><c> these</c><00:09:14.320><c> intervals</c><00:09:15.120><c> but</c>

00:09:15.590 --> 00:09:15.600 align:start position:0%
delete either of these intervals but
 

00:09:15.600 --> 00:09:17.110 align:start position:0%
delete either of these intervals but
since<00:09:15.839><c> we</c><00:09:16.000><c> didn't</c><00:09:16.240><c> delete</c><00:09:16.640><c> either</c><00:09:16.880><c> of</c><00:09:16.959><c> these</c>

00:09:17.110 --> 00:09:17.120 align:start position:0%
since we didn't delete either of these
 

00:09:17.120 --> 00:09:18.630 align:start position:0%
since we didn't delete either of these
intervals<00:09:17.519><c> and</c><00:09:17.680><c> since</c><00:09:17.920><c> we</c><00:09:18.000><c> know</c><00:09:18.160><c> this</c><00:09:18.320><c> one</c>

00:09:18.630 --> 00:09:18.640 align:start position:0%
intervals and since we know this one
 

00:09:18.640 --> 00:09:20.710 align:start position:0%
intervals and since we know this one
started<00:09:19.120><c> after</c><00:09:19.440><c> this</c><00:09:19.600><c> one</c><00:09:19.920><c> ended</c><00:09:20.399><c> we</c><00:09:20.560><c> know</c>

00:09:20.710 --> 00:09:20.720 align:start position:0%
started after this one ended we know
 

00:09:20.720 --> 00:09:22.550 align:start position:0%
started after this one ended we know
that<00:09:20.880><c> this</c><00:09:21.040><c> one</c><00:09:21.279><c> is</c><00:09:21.440><c> going</c><00:09:21.519><c> to</c><00:09:21.600><c> have</c><00:09:21.839><c> a</c><00:09:22.080><c> larger</c>

00:09:22.550 --> 00:09:22.560 align:start position:0%
that this one is going to have a larger
 

00:09:22.560 --> 00:09:24.630 align:start position:0%
that this one is going to have a larger
end<00:09:22.800><c> value</c><00:09:23.279><c> so</c><00:09:23.680><c> we're</c><00:09:23.839><c> not</c><00:09:24.000><c> going</c><00:09:24.160><c> to</c><00:09:24.240><c> be</c><00:09:24.399><c> using</c>

00:09:24.630 --> 00:09:24.640 align:start position:0%
end value so we're not going to be using
 

00:09:24.640 --> 00:09:26.150 align:start position:0%
end value so we're not going to be using
this<00:09:24.800><c> one</c><00:09:24.959><c> to</c><00:09:25.120><c> compare</c><00:09:25.600><c> anymore</c><00:09:25.920><c> we're</c><00:09:26.080><c> going</c>

00:09:26.150 --> 00:09:26.160 align:start position:0%
this one to compare anymore we're going
 

00:09:26.160 --> 00:09:28.150 align:start position:0%
this one to compare anymore we're going
to<00:09:26.240><c> be</c><00:09:26.320><c> using</c><00:09:26.560><c> this</c><00:09:26.880><c> end</c><00:09:27.040><c> value</c><00:09:27.519><c> to</c><00:09:27.680><c> compare</c><00:09:28.080><c> to</c>

00:09:28.150 --> 00:09:28.160 align:start position:0%
to be using this end value to compare to
 

00:09:28.160 --> 00:09:29.990 align:start position:0%
to be using this end value to compare to
the<00:09:28.320><c> following</c><00:09:28.800><c> intervals</c><00:09:29.440><c> on</c><00:09:29.519><c> the</c><00:09:29.680><c> right</c>

00:09:29.990 --> 00:09:30.000 align:start position:0%
the following intervals on the right
 

00:09:30.000 --> 00:09:32.150 align:start position:0%
the following intervals on the right
side<00:09:30.640><c> okay</c><00:09:30.880><c> so</c><00:09:31.040><c> now</c><00:09:31.200><c> let's</c><00:09:31.440><c> look</c><00:09:31.600><c> at</c><00:09:31.839><c> this</c>

00:09:32.150 --> 00:09:32.160 align:start position:0%
side okay so now let's look at this
 

00:09:32.160 --> 00:09:34.070 align:start position:0%
side okay so now let's look at this
interval<00:09:32.880><c> and</c><00:09:33.200><c> the</c><00:09:33.279><c> next</c><00:09:33.519><c> interval</c><00:09:33.839><c> that's</c>

00:09:34.070 --> 00:09:34.080 align:start position:0%
interval and the next interval that's
 

00:09:34.080 --> 00:09:35.910 align:start position:0%
interval and the next interval that's
coming<00:09:34.320><c> up</c><00:09:34.560><c> is</c><00:09:34.720><c> this</c><00:09:34.880><c> one</c><00:09:35.120><c> so</c><00:09:35.360><c> is</c><00:09:35.440><c> this</c><00:09:35.600><c> one</c>

00:09:35.910 --> 00:09:35.920 align:start position:0%
coming up is this one so is this one
 

00:09:35.920 --> 00:09:37.990 align:start position:0%
coming up is this one so is this one
starting<00:09:36.240><c> before</c><00:09:36.560><c> this</c><00:09:36.720><c> one</c><00:09:37.040><c> ends</c><00:09:37.519><c> nope</c><00:09:37.839><c> it</c>

00:09:37.990 --> 00:09:38.000 align:start position:0%
starting before this one ends nope it
 

00:09:38.000 --> 00:09:39.750 align:start position:0%
starting before this one ends nope it
does<00:09:38.240><c> not</c><00:09:38.480><c> so</c><00:09:38.640><c> we</c><00:09:38.800><c> don't</c><00:09:39.040><c> delete</c><00:09:39.360><c> either</c><00:09:39.680><c> of</c>

00:09:39.750 --> 00:09:39.760 align:start position:0%
does not so we don't delete either of
 

00:09:39.760 --> 00:09:41.190 align:start position:0%
does not so we don't delete either of
these<00:09:40.399><c> and</c>

00:09:41.190 --> 00:09:41.200 align:start position:0%
these and
 

00:09:41.200 --> 00:09:44.070 align:start position:0%
these and
uh<00:09:41.680><c> we</c><00:09:42.320><c> just</c><00:09:42.560><c> set</c><00:09:42.800><c> this</c><00:09:42.959><c> to</c><00:09:43.120><c> the</c><00:09:43.279><c> new</c><00:09:43.519><c> end</c><00:09:43.760><c> value</c>

00:09:44.070 --> 00:09:44.080 align:start position:0%
uh we just set this to the new end value
 

00:09:44.080 --> 00:09:45.110 align:start position:0%
uh we just set this to the new end value
that<00:09:44.160><c> we're</c><00:09:44.320><c> going</c><00:09:44.320><c> to</c><00:09:44.399><c> keep</c><00:09:44.640><c> track</c><00:09:44.880><c> of</c><00:09:45.040><c> but</c>

00:09:45.110 --> 00:09:45.120 align:start position:0%
that we're going to keep track of but
 

00:09:45.120 --> 00:09:46.550 align:start position:0%
that we're going to keep track of but
there's<00:09:45.360><c> nothing</c><00:09:45.600><c> that</c><00:09:45.760><c> comes</c><00:09:46.080><c> after</c><00:09:46.320><c> it</c><00:09:46.399><c> so</c>

00:09:46.550 --> 00:09:46.560 align:start position:0%
there's nothing that comes after it so
 

00:09:46.560 --> 00:09:48.630 align:start position:0%
there's nothing that comes after it so
we're<00:09:46.720><c> done</c><00:09:47.040><c> here</c><00:09:47.360><c> we</c><00:09:47.600><c> only</c><00:09:47.839><c> had</c><00:09:48.000><c> to</c><00:09:48.160><c> remove</c>

00:09:48.630 --> 00:09:48.640 align:start position:0%
we're done here we only had to remove
 

00:09:48.640 --> 00:09:50.470 align:start position:0%
we're done here we only had to remove
one<00:09:48.880><c> interval</c><00:09:49.279><c> as</c><00:09:49.440><c> you</c><00:09:49.519><c> can</c><00:09:49.680><c> see</c><00:09:50.080><c> so</c><00:09:50.240><c> the</c>

00:09:50.470 --> 00:09:50.480 align:start position:0%
one interval as you can see so the
 

00:09:50.480 --> 00:09:52.310 align:start position:0%
one interval as you can see so the
answer<00:09:50.720><c> in</c><00:09:50.800><c> this</c><00:09:50.959><c> case</c><00:09:51.279><c> is</c><00:09:51.440><c> one</c><00:09:51.839><c> which</c><00:09:52.080><c> is</c><00:09:52.160><c> what</c>

00:09:52.310 --> 00:09:52.320 align:start position:0%
answer in this case is one which is what
 

00:09:52.320 --> 00:09:54.389 align:start position:0%
answer in this case is one which is what
they<00:09:52.560><c> also</c><00:09:52.880><c> had</c><00:09:53.120><c> in</c><00:09:53.200><c> the</c><00:09:53.360><c> output</c><00:09:54.000><c> so</c><00:09:54.160><c> that's</c>

00:09:54.389 --> 00:09:54.399 align:start position:0%
they also had in the output so that's
 

00:09:54.399 --> 00:09:56.550 align:start position:0%
they also had in the output so that's
the<00:09:54.560><c> entire</c><00:09:54.880><c> algorithm</c><00:09:55.600><c> now</c><00:09:55.760><c> we</c><00:09:55.920><c> can</c><00:09:56.160><c> actually</c>

00:09:56.550 --> 00:09:56.560 align:start position:0%
the entire algorithm now we can actually
 

00:09:56.560 --> 00:09:59.030 align:start position:0%
the entire algorithm now we can actually
code<00:09:56.880><c> it</c><00:09:57.120><c> up</c><00:09:57.279><c> it's</c><00:09:57.600><c> not</c><00:09:57.920><c> too</c><00:09:58.160><c> bad</c>

00:09:59.030 --> 00:09:59.040 align:start position:0%
code it up it's not too bad
 

00:09:59.040 --> 00:10:00.870 align:start position:0%
code it up it's not too bad
okay<00:09:59.279><c> so</c><00:09:59.440><c> now</c><00:09:59.600><c> let's</c><00:09:59.839><c> get</c><00:10:00.080><c> into</c><00:10:00.399><c> everybody's</c>

00:10:00.870 --> 00:10:00.880 align:start position:0%
okay so now let's get into everybody's
 

00:10:00.880 --> 00:10:02.870 align:start position:0%
okay so now let's get into everybody's
favorite<00:10:01.279><c> part</c><00:10:01.600><c> writing</c><00:10:02.000><c> out</c><00:10:02.160><c> the</c><00:10:02.320><c> code</c><00:10:02.640><c> so</c>

00:10:02.870 --> 00:10:02.880 align:start position:0%
favorite part writing out the code so
 

00:10:02.880 --> 00:10:04.310 align:start position:0%
favorite part writing out the code so
remember<00:10:03.279><c> the</c><00:10:03.360><c> first</c><00:10:03.519><c> thing</c><00:10:03.680><c> we</c><00:10:03.839><c> want</c><00:10:04.000><c> to</c><00:10:04.079><c> do</c>

00:10:04.310 --> 00:10:04.320 align:start position:0%
remember the first thing we want to do
 

00:10:04.320 --> 00:10:06.310 align:start position:0%
remember the first thing we want to do
is<00:10:04.560><c> sort</c><00:10:04.880><c> the</c><00:10:05.040><c> list</c><00:10:05.279><c> of</c><00:10:05.440><c> intervals</c><00:10:06.000><c> so</c><00:10:06.160><c> in</c>

00:10:06.310 --> 00:10:06.320 align:start position:0%
is sort the list of intervals so in
 

00:10:06.320 --> 00:10:08.470 align:start position:0%
is sort the list of intervals so in
python<00:10:06.720><c> i</c><00:10:06.800><c> can</c><00:10:06.959><c> just</c><00:10:07.200><c> say</c><00:10:07.519><c> sort</c><00:10:08.000><c> and</c><00:10:08.160><c> it'll</c>

00:10:08.470 --> 00:10:08.480 align:start position:0%
python i can just say sort and it'll
 

00:10:08.480 --> 00:10:10.389 align:start position:0%
python i can just say sort and it'll
actually<00:10:08.800><c> sort</c><00:10:09.040><c> it</c><00:10:09.200><c> based</c><00:10:09.600><c> on</c>

00:10:10.389 --> 00:10:10.399 align:start position:0%
actually sort it based on
 

00:10:10.399 --> 00:10:12.310 align:start position:0%
actually sort it based on
the<00:10:10.720><c> entire</c><00:10:11.120><c> pair</c><00:10:11.440><c> it'll</c><00:10:11.680><c> first</c><00:10:12.000><c> sort</c><00:10:12.240><c> it</c>

00:10:12.310 --> 00:10:12.320 align:start position:0%
the entire pair it'll first sort it
 

00:10:12.320 --> 00:10:14.150 align:start position:0%
the entire pair it'll first sort it
based<00:10:12.560><c> on</c><00:10:12.720><c> the</c><00:10:12.800><c> start</c><00:10:13.120><c> value</c><00:10:13.440><c> and</c><00:10:13.600><c> then</c><00:10:13.839><c> sort</c>

00:10:14.150 --> 00:10:14.160 align:start position:0%
based on the start value and then sort
 

00:10:14.160 --> 00:10:15.990 align:start position:0%
based on the start value and then sort
it<00:10:14.240><c> based</c><00:10:14.560><c> on</c><00:10:14.720><c> the</c><00:10:14.959><c> end</c><00:10:15.200><c> value</c><00:10:15.519><c> if</c><00:10:15.600><c> there's</c><00:10:15.839><c> a</c>

00:10:15.990 --> 00:10:16.000 align:start position:0%
it based on the end value if there's a
 

00:10:16.000 --> 00:10:18.310 align:start position:0%
it based on the end value if there's a
tie<00:10:16.320><c> between</c><00:10:16.640><c> the</c><00:10:16.720><c> start</c><00:10:17.440><c> but</c><00:10:17.920><c> you</c><00:10:18.079><c> know</c><00:10:18.160><c> in</c>

00:10:18.310 --> 00:10:18.320 align:start position:0%
tie between the start but you know in
 

00:10:18.320 --> 00:10:20.150 align:start position:0%
tie between the start but you know in
java<00:10:18.640><c> and</c><00:10:18.720><c> stuff</c><00:10:18.959><c> you</c><00:10:19.040><c> can</c><00:10:19.200><c> specify</c><00:10:19.760><c> the</c><00:10:19.920><c> key</c>

00:10:20.150 --> 00:10:20.160 align:start position:0%
java and stuff you can specify the key
 

00:10:20.160 --> 00:10:22.150 align:start position:0%
java and stuff you can specify the key
is<00:10:20.320><c> just</c><00:10:20.560><c> the</c><00:10:20.720><c> start</c><00:10:21.200><c> or</c><00:10:21.440><c> you</c><00:10:21.519><c> can</c><00:10:21.680><c> use</c><00:10:21.920><c> just</c>

00:10:22.150 --> 00:10:22.160 align:start position:0%
is just the start or you can use just
 

00:10:22.160 --> 00:10:24.310 align:start position:0%
is just the start or you can use just
the<00:10:22.399><c> end</c><00:10:22.640><c> if</c><00:10:22.800><c> you</c><00:10:22.880><c> want</c><00:10:23.120><c> to</c><00:10:23.279><c> and</c><00:10:23.360><c> then</c>

00:10:24.310 --> 00:10:24.320 align:start position:0%
the end if you want to and then
 

00:10:24.320 --> 00:10:26.230 align:start position:0%
the end if you want to and then
you<00:10:24.480><c> can</c><00:10:24.880><c> slightly</c><00:10:25.360><c> change</c><00:10:25.600><c> your</c><00:10:25.760><c> algorithm</c>

00:10:26.230 --> 00:10:26.240 align:start position:0%
you can slightly change your algorithm
 

00:10:26.240 --> 00:10:28.069 align:start position:0%
you can slightly change your algorithm
if<00:10:26.320><c> you're</c><00:10:26.480><c> sorting</c><00:10:26.800><c> by</c><00:10:26.959><c> the</c><00:10:27.040><c> end</c><00:10:27.279><c> value</c><00:10:27.600><c> but</c>

00:10:28.069 --> 00:10:28.079 align:start position:0%
if you're sorting by the end value but
 

00:10:28.079 --> 00:10:29.269 align:start position:0%
if you're sorting by the end value but
the<00:10:28.320><c> result</c><00:10:28.640><c> that</c><00:10:28.800><c> we're</c><00:10:28.880><c> going</c><00:10:28.959><c> to</c><00:10:29.040><c> keep</c>

00:10:29.269 --> 00:10:29.279 align:start position:0%
the result that we're going to keep
 

00:10:29.279 --> 00:10:31.910 align:start position:0%
the result that we're going to keep
track<00:10:29.519><c> of</c><00:10:29.760><c> is</c><00:10:29.920><c> just</c><00:10:30.240><c> the</c><00:10:30.560><c> entire</c><00:10:30.959><c> count</c><00:10:31.760><c> that</c>

00:10:31.910 --> 00:10:31.920 align:start position:0%
track of is just the entire count that
 

00:10:31.920 --> 00:10:33.350 align:start position:0%
track of is just the entire count that
we<00:10:32.079><c> have</c><00:10:32.160><c> to</c><00:10:32.320><c> remove</c><00:10:32.720><c> so</c><00:10:32.880><c> initially</c><00:10:33.279><c> it's</c>

00:10:33.350 --> 00:10:33.360 align:start position:0%
we have to remove so initially it's
 

00:10:33.360 --> 00:10:35.030 align:start position:0%
we have to remove so initially it's
going<00:10:33.440><c> to</c><00:10:33.519><c> be</c><00:10:33.600><c> set</c><00:10:33.839><c> to</c><00:10:34.000><c> zero</c><00:10:34.480><c> and</c><00:10:34.720><c> remember</c>

00:10:35.030 --> 00:10:35.040 align:start position:0%
going to be set to zero and remember
 

00:10:35.040 --> 00:10:36.630 align:start position:0%
going to be set to zero and remember
we're<00:10:35.200><c> going</c><00:10:35.279><c> to</c><00:10:35.440><c> initially</c><00:10:35.839><c> keep</c><00:10:36.079><c> track</c><00:10:36.480><c> of</c>

00:10:36.630 --> 00:10:36.640 align:start position:0%
we're going to initially keep track of
 

00:10:36.640 --> 00:10:39.430 align:start position:0%
we're going to initially keep track of
the<00:10:36.880><c> first</c><00:10:37.440><c> end</c><00:10:37.680><c> value</c><00:10:38.480><c> in</c><00:10:38.800><c> our</c><00:10:39.040><c> sorted</c>

00:10:39.430 --> 00:10:39.440 align:start position:0%
the first end value in our sorted
 

00:10:39.440 --> 00:10:41.670 align:start position:0%
the first end value in our sorted
intervals<00:10:39.920><c> so</c><00:10:40.079><c> we</c><00:10:40.240><c> can</c><00:10:40.399><c> get</c><00:10:40.560><c> that</c><00:10:41.120><c> just</c><00:10:41.440><c> like</c>

00:10:41.670 --> 00:10:41.680 align:start position:0%
intervals so we can get that just like
 

00:10:41.680 --> 00:10:44.069 align:start position:0%
intervals so we can get that just like
this<00:10:42.000><c> intervals</c><00:10:42.800><c> the</c><00:10:43.040><c> first</c><00:10:43.440><c> interval</c><00:10:43.839><c> and</c><00:10:43.920><c> we</c>

00:10:44.069 --> 00:10:44.079 align:start position:0%
this intervals the first interval and we
 

00:10:44.079 --> 00:10:47.030 align:start position:0%
this intervals the first interval and we
want<00:10:44.240><c> its</c><00:10:44.560><c> end</c><00:10:44.800><c> value</c><00:10:45.120><c> which</c><00:10:45.279><c> is</c><00:10:45.440><c> at</c><00:10:45.600><c> index</c><00:10:46.079><c> one</c>

00:10:47.030 --> 00:10:47.040 align:start position:0%
want its end value which is at index one
 

00:10:47.040 --> 00:10:48.630 align:start position:0%
want its end value which is at index one
then<00:10:47.440><c> we're</c><00:10:47.600><c> going</c><00:10:47.680><c> to</c><00:10:47.839><c> iterate</c><00:10:48.240><c> through</c><00:10:48.480><c> the</c>

00:10:48.630 --> 00:10:48.640 align:start position:0%
then we're going to iterate through the
 

00:10:48.640 --> 00:10:50.949 align:start position:0%
then we're going to iterate through the
remaining<00:10:49.279><c> list</c><00:10:49.600><c> of</c><00:10:49.839><c> intervals</c><00:10:50.320><c> so</c><00:10:50.480><c> we</c><00:10:50.640><c> can</c>

00:10:50.949 --> 00:10:50.959 align:start position:0%
remaining list of intervals so we can
 

00:10:50.959 --> 00:10:52.870 align:start position:0%
remaining list of intervals so we can
iterate<00:10:51.360><c> through</c><00:10:51.519><c> the</c><00:10:51.680><c> start</c><00:10:52.000><c> and</c><00:10:52.160><c> end</c><00:10:52.399><c> value</c>

00:10:52.870 --> 00:10:52.880 align:start position:0%
iterate through the start and end value
 

00:10:52.880 --> 00:10:56.150 align:start position:0%
iterate through the start and end value
of<00:10:53.040><c> the</c><00:10:53.200><c> remaining</c><00:10:53.760><c> intervals</c><00:10:54.560><c> like</c><00:10:55.279><c> this</c><00:10:55.920><c> and</c>

00:10:56.150 --> 00:10:56.160 align:start position:0%
of the remaining intervals like this and
 

00:10:56.160 --> 00:10:58.470 align:start position:0%
of the remaining intervals like this and
we<00:10:56.399><c> want</c><00:10:56.640><c> to</c><00:10:56.880><c> start</c><00:10:57.200><c> at</c><00:10:57.440><c> index</c><00:10:57.839><c> one</c><00:10:58.079><c> so</c><00:10:58.240><c> we</c><00:10:58.320><c> can</c>

00:10:58.470 --> 00:10:58.480 align:start position:0%
we want to start at index one so we can
 

00:10:58.480 --> 00:11:01.990 align:start position:0%
we want to start at index one so we can
specify<00:10:59.120><c> like</c><00:10:59.360><c> that</c><00:10:59.600><c> in</c><00:10:59.839><c> python</c><00:11:00.880><c> and</c><00:11:01.519><c> now</c><00:11:01.839><c> we</c>

00:11:01.990 --> 00:11:02.000 align:start position:0%
specify like that in python and now we
 

00:11:02.000 --> 00:11:04.310 align:start position:0%
specify like that in python and now we
get<00:11:02.240><c> to</c><00:11:02.640><c> our</c><00:11:02.959><c> if-else</c><00:11:03.519><c> case</c><00:11:03.839><c> because</c><00:11:04.079><c> we</c><00:11:04.160><c> want</c>

00:11:04.310 --> 00:11:04.320 align:start position:0%
get to our if-else case because we want
 

00:11:04.320 --> 00:11:07.350 align:start position:0%
get to our if-else case because we want
to<00:11:04.399><c> know</c><00:11:04.640><c> are</c><00:11:04.800><c> they</c><00:11:05.040><c> overlapping</c><00:11:05.839><c> or</c><00:11:06.240><c> not</c><00:11:06.800><c> so</c>

00:11:07.350 --> 00:11:07.360 align:start position:0%
to know are they overlapping or not so
 

00:11:07.360 --> 00:11:09.590 align:start position:0%
to know are they overlapping or not so
they're<00:11:07.680><c> not</c><00:11:08.000><c> overlapping</c><00:11:08.720><c> if</c><00:11:08.959><c> the</c><00:11:09.200><c> start</c>

00:11:09.590 --> 00:11:09.600 align:start position:0%
they're not overlapping if the start
 

00:11:09.600 --> 00:11:11.590 align:start position:0%
they're not overlapping if the start
value<00:11:10.320><c> of</c><00:11:10.480><c> the</c><00:11:10.640><c> interval</c><00:11:10.959><c> that</c><00:11:11.120><c> we're</c><00:11:11.279><c> looking</c>

00:11:11.590 --> 00:11:11.600 align:start position:0%
value of the interval that we're looking
 

00:11:11.600 --> 00:11:15.750 align:start position:0%
value of the interval that we're looking
at<00:11:12.079><c> is</c><00:11:12.720><c> greater</c><00:11:13.279><c> than</c><00:11:13.839><c> or</c><00:11:14.240><c> equal</c><00:11:15.120><c> to</c><00:11:15.440><c> the</c>

00:11:15.750 --> 00:11:15.760 align:start position:0%
at is greater than or equal to the
 

00:11:15.760 --> 00:11:18.470 align:start position:0%
at is greater than or equal to the
previous<00:11:16.640><c> end</c><00:11:17.040><c> value</c><00:11:17.760><c> and</c><00:11:17.920><c> remember</c><00:11:18.320><c> the</c>

00:11:18.470 --> 00:11:18.480 align:start position:0%
previous end value and remember the
 

00:11:18.480 --> 00:11:20.550 align:start position:0%
previous end value and remember the
equal<00:11:18.959><c> is</c><00:11:19.120><c> very</c><00:11:19.440><c> important</c><00:11:19.839><c> that's</c><00:11:20.079><c> the</c><00:11:20.320><c> edge</c>

00:11:20.550 --> 00:11:20.560 align:start position:0%
equal is very important that's the edge
 

00:11:20.560 --> 00:11:22.550 align:start position:0%
equal is very important that's the edge
case<00:11:20.880><c> we</c><00:11:21.040><c> talked</c><00:11:21.279><c> about</c><00:11:21.600><c> at</c><00:11:21.760><c> the</c><00:11:21.839><c> beginning</c><00:11:22.480><c> if</c>

00:11:22.550 --> 00:11:22.560 align:start position:0%
case we talked about at the beginning if
 

00:11:22.560 --> 00:11:24.389 align:start position:0%
case we talked about at the beginning if
they're<00:11:22.800><c> equal</c><00:11:23.279><c> they're</c><00:11:23.519><c> technically</c><00:11:24.079><c> not</c>

00:11:24.389 --> 00:11:24.399 align:start position:0%
they're equal they're technically not
 

00:11:24.399 --> 00:11:26.790 align:start position:0%
they're equal they're technically not
overlapping<00:11:25.440><c> and</c><00:11:25.760><c> if</c><00:11:26.000><c> they</c><00:11:26.240><c> are</c><00:11:26.480><c> not</c>

00:11:26.790 --> 00:11:26.800 align:start position:0%
overlapping and if they are not
 

00:11:26.800 --> 00:11:29.110 align:start position:0%
overlapping and if they are not
overlapping<00:11:27.680><c> the</c><00:11:27.920><c> only</c><00:11:28.240><c> thing</c><00:11:28.480><c> we</c><00:11:28.640><c> need</c><00:11:28.800><c> to</c><00:11:28.880><c> do</c>

00:11:29.110 --> 00:11:29.120 align:start position:0%
overlapping the only thing we need to do
 

00:11:29.120 --> 00:11:32.230 align:start position:0%
overlapping the only thing we need to do
is<00:11:29.360><c> update</c><00:11:29.839><c> our</c><00:11:30.160><c> previous</c><00:11:30.959><c> end</c><00:11:31.600><c> set</c><00:11:31.839><c> it</c><00:11:31.920><c> to</c><00:11:32.079><c> the</c>

00:11:32.230 --> 00:11:32.240 align:start position:0%
is update our previous end set it to the
 

00:11:32.240 --> 00:11:34.069 align:start position:0%
is update our previous end set it to the
new<00:11:32.640><c> end</c><00:11:32.959><c> value</c>

00:11:34.069 --> 00:11:34.079 align:start position:0%
new end value
 

00:11:34.079 --> 00:11:36.069 align:start position:0%
new end value
because<00:11:34.480><c> we</c><00:11:34.640><c> know</c><00:11:34.800><c> that</c><00:11:34.959><c> the</c><00:11:35.120><c> new</c><00:11:35.440><c> end</c><00:11:35.600><c> value</c>

00:11:36.069 --> 00:11:36.079 align:start position:0%
because we know that the new end value
 

00:11:36.079 --> 00:11:38.790 align:start position:0%
because we know that the new end value
is<00:11:36.240><c> going</c><00:11:36.320><c> to</c><00:11:36.399><c> be</c><00:11:36.640><c> greater</c><00:11:37.360><c> than</c><00:11:38.000><c> the</c><00:11:38.320><c> previous</c>

00:11:38.790 --> 00:11:38.800 align:start position:0%
is going to be greater than the previous
 

00:11:38.800 --> 00:11:41.670 align:start position:0%
is going to be greater than the previous
one<00:11:39.440><c> and</c><00:11:39.600><c> the</c><00:11:39.760><c> else</c><00:11:40.160><c> case</c><00:11:40.480><c> is</c><00:11:40.720><c> if</c><00:11:40.959><c> they</c><00:11:41.279><c> are</c>

00:11:41.670 --> 00:11:41.680 align:start position:0%
one and the else case is if they are
 

00:11:41.680 --> 00:11:43.829 align:start position:0%
one and the else case is if they are
actually<00:11:42.240><c> overlapping</c><00:11:43.120><c> and</c><00:11:43.279><c> if</c><00:11:43.360><c> they</c><00:11:43.600><c> are</c>

00:11:43.829 --> 00:11:43.839 align:start position:0%
actually overlapping and if they are
 

00:11:43.839 --> 00:11:47.030 align:start position:0%
actually overlapping and if they are
overlapping<00:11:44.480><c> then</c><00:11:44.800><c> we</c><00:11:45.040><c> need</c><00:11:45.360><c> to</c><00:11:46.079><c> remove</c><00:11:46.800><c> one</c>

00:11:47.030 --> 00:11:47.040 align:start position:0%
overlapping then we need to remove one
 

00:11:47.040 --> 00:11:48.790 align:start position:0%
overlapping then we need to remove one
of<00:11:47.120><c> the</c><00:11:47.279><c> intervals</c><00:11:47.760><c> so</c><00:11:48.000><c> definitely</c><00:11:48.480><c> we</c><00:11:48.640><c> are</c>

00:11:48.790 --> 00:11:48.800 align:start position:0%
of the intervals so definitely we are
 

00:11:48.800 --> 00:11:50.870 align:start position:0%
of the intervals so definitely we are
going<00:11:48.880><c> to</c><00:11:49.040><c> increment</c><00:11:49.680><c> our</c><00:11:49.839><c> result</c><00:11:50.320><c> count</c><00:11:50.639><c> by</c>

00:11:50.870 --> 00:11:50.880 align:start position:0%
going to increment our result count by
 

00:11:50.880 --> 00:11:52.629 align:start position:0%
going to increment our result count by
one<00:11:51.200><c> because</c><00:11:51.440><c> we</c><00:11:51.600><c> have</c><00:11:51.760><c> to</c><00:11:51.920><c> remove</c><00:11:52.320><c> one</c><00:11:52.560><c> of</c>

00:11:52.629 --> 00:11:52.639 align:start position:0%
one because we have to remove one of
 

00:11:52.639 --> 00:11:54.790 align:start position:0%
one because we have to remove one of
these<00:11:53.120><c> now</c><00:11:53.279><c> the</c><00:11:53.519><c> question</c><00:11:53.839><c> is</c><00:11:54.079><c> which</c><00:11:54.399><c> one</c><00:11:54.720><c> are</c>

00:11:54.790 --> 00:11:54.800 align:start position:0%
these now the question is which one are
 

00:11:54.800 --> 00:11:56.550 align:start position:0%
these now the question is which one are
we<00:11:54.959><c> going</c><00:11:55.120><c> to</c><00:11:55.200><c> remove</c><00:11:55.760><c> and</c><00:11:56.000><c> how</c><00:11:56.240><c> are</c><00:11:56.320><c> we</c>

00:11:56.550 --> 00:11:56.560 align:start position:0%
we going to remove and how are we
 

00:11:56.560 --> 00:11:58.389 align:start position:0%
we going to remove and how are we
actually<00:11:56.959><c> even</c><00:11:57.200><c> going</c><00:11:57.360><c> to</c><00:11:57.519><c> handle</c><00:11:57.920><c> that</c><00:11:58.240><c> well</c>

00:11:58.389 --> 00:11:58.399 align:start position:0%
actually even going to handle that well
 

00:11:58.399 --> 00:11:59.910 align:start position:0%
actually even going to handle that well
the<00:11:58.560><c> only</c><00:11:58.800><c> thing</c><00:11:59.040><c> we</c><00:11:59.200><c> actually</c><00:11:59.600><c> need</c><00:11:59.760><c> to</c>

00:11:59.910 --> 00:11:59.920 align:start position:0%
the only thing we actually need to
 

00:11:59.920 --> 00:12:02.470 align:start position:0%
the only thing we actually need to
update<00:12:00.399><c> is</c><00:12:00.800><c> our</c><00:12:01.040><c> previous</c><00:12:01.839><c> end</c><00:12:02.240><c> because</c>

00:12:02.470 --> 00:12:02.480 align:start position:0%
update is our previous end because
 

00:12:02.480 --> 00:12:03.670 align:start position:0%
update is our previous end because
remember<00:12:02.880><c> we</c><00:12:03.040><c> don't</c><00:12:03.200><c> actually</c><00:12:03.440><c> have</c><00:12:03.519><c> to</c>

00:12:03.670 --> 00:12:03.680 align:start position:0%
remember we don't actually have to
 

00:12:03.680 --> 00:12:05.670 align:start position:0%
remember we don't actually have to
delete<00:12:04.000><c> the</c><00:12:04.160><c> interval</c><00:12:04.639><c> in</c><00:12:04.720><c> the</c><00:12:04.880><c> array</c><00:12:05.440><c> we</c><00:12:05.600><c> just</c>

00:12:05.670 --> 00:12:05.680 align:start position:0%
delete the interval in the array we just
 

00:12:05.680 --> 00:12:07.750 align:start position:0%
delete the interval in the array we just
have<00:12:05.839><c> to</c><00:12:05.920><c> count</c><00:12:06.160><c> how</c><00:12:06.320><c> many</c><00:12:06.560><c> we</c><00:12:06.720><c> delete</c><00:12:07.440><c> but</c><00:12:07.600><c> we</c>

00:12:07.750 --> 00:12:07.760 align:start position:0%
have to count how many we delete but we
 

00:12:07.760 --> 00:12:09.430 align:start position:0%
have to count how many we delete but we
have<00:12:08.000><c> we</c><00:12:08.079><c> do</c><00:12:08.240><c> have</c><00:12:08.320><c> to</c><00:12:08.480><c> update</c><00:12:08.800><c> the</c><00:12:08.880><c> previous</c>

00:12:09.430 --> 00:12:09.440 align:start position:0%
have we do have to update the previous
 

00:12:09.440 --> 00:12:11.509 align:start position:0%
have we do have to update the previous
end<00:12:09.920><c> uh</c><00:12:10.079><c> remember</c><00:12:10.399><c> which</c><00:12:10.639><c> one</c><00:12:10.880><c> of</c><00:12:10.959><c> these</c><00:12:11.279><c> end</c>

00:12:11.509 --> 00:12:11.519 align:start position:0%
end uh remember which one of these end
 

00:12:11.519 --> 00:12:12.949 align:start position:0%
end uh remember which one of these end
values<00:12:12.000><c> are</c><00:12:12.160><c> we</c><00:12:12.320><c> actually</c><00:12:12.560><c> going</c><00:12:12.639><c> to</c><00:12:12.720><c> keep</c>

00:12:12.949 --> 00:12:12.959 align:start position:0%
values are we actually going to keep
 

00:12:12.959 --> 00:12:14.230 align:start position:0%
values are we actually going to keep
which<00:12:13.120><c> one</c><00:12:13.279><c> of</c><00:12:13.360><c> the</c><00:12:13.519><c> intervals</c><00:12:13.920><c> are</c><00:12:14.000><c> we</c><00:12:14.160><c> going</c>

00:12:14.230 --> 00:12:14.240 align:start position:0%
which one of the intervals are we going
 

00:12:14.240 --> 00:12:15.829 align:start position:0%
which one of the intervals are we going
to<00:12:14.320><c> keep</c><00:12:14.560><c> we're</c><00:12:14.800><c> going</c><00:12:14.880><c> to</c><00:12:14.959><c> keep</c><00:12:15.200><c> the</c><00:12:15.360><c> one</c><00:12:15.680><c> that</c>

00:12:15.829 --> 00:12:15.839 align:start position:0%
to keep we're going to keep the one that
 

00:12:15.839 --> 00:12:17.829 align:start position:0%
to keep we're going to keep the one that
has<00:12:16.000><c> the</c><00:12:16.240><c> minimum</c><00:12:16.800><c> end</c><00:12:17.120><c> value</c><00:12:17.519><c> so</c><00:12:17.680><c> we're</c><00:12:17.760><c> going</c>

00:12:17.829 --> 00:12:17.839 align:start position:0%
has the minimum end value so we're going
 

00:12:17.839 --> 00:12:20.150 align:start position:0%
has the minimum end value so we're going
to<00:12:18.000><c> set</c><00:12:18.160><c> previous</c><00:12:18.639><c> end</c><00:12:18.880><c> equal</c><00:12:19.200><c> to</c><00:12:19.360><c> the</c><00:12:19.440><c> minimum</c>

00:12:20.150 --> 00:12:20.160 align:start position:0%
to set previous end equal to the minimum
 

00:12:20.160 --> 00:12:23.990 align:start position:0%
to set previous end equal to the minimum
of<00:12:20.480><c> end</c><00:12:21.120><c> and</c><00:12:21.519><c> itself</c><00:12:22.399><c> previous</c><00:12:22.959><c> end</c><00:12:23.440><c> so</c><00:12:23.600><c> that</c>

00:12:23.990 --> 00:12:24.000 align:start position:0%
of end and itself previous end so that
 

00:12:24.000 --> 00:12:25.670 align:start position:0%
of end and itself previous end so that
once<00:12:24.240><c> we've</c><00:12:24.480><c> updated</c><00:12:24.800><c> this</c><00:12:24.959><c> we</c><00:12:25.120><c> can</c><00:12:25.200><c> use</c><00:12:25.440><c> this</c>

00:12:25.670 --> 00:12:25.680 align:start position:0%
once we've updated this we can use this
 

00:12:25.680 --> 00:12:27.910 align:start position:0%
once we've updated this we can use this
new<00:12:25.920><c> end</c><00:12:26.160><c> value</c><00:12:26.880><c> uh</c><00:12:27.200><c> in</c><00:12:27.360><c> the</c><00:12:27.519><c> future</c>

00:12:27.910 --> 00:12:27.920 align:start position:0%
new end value uh in the future
 

00:12:27.920 --> 00:12:29.670 align:start position:0%
new end value uh in the future
iterations<00:12:28.639><c> of</c><00:12:28.800><c> the</c><00:12:29.040><c> loop</c><00:12:29.279><c> but</c><00:12:29.360><c> that's</c>

00:12:29.670 --> 00:12:29.680 align:start position:0%
iterations of the loop but that's
 

00:12:29.680 --> 00:12:31.430 align:start position:0%
iterations of the loop but that's
actually<00:12:29.920><c> the</c><00:12:30.079><c> entire</c><00:12:30.480><c> algorithm</c><00:12:31.040><c> once</c><00:12:31.279><c> we've</c>

00:12:31.430 --> 00:12:31.440 align:start position:0%
actually the entire algorithm once we've
 

00:12:31.440 --> 00:12:33.910 align:start position:0%
actually the entire algorithm once we've
done<00:12:31.600><c> that</c><00:12:31.839><c> we</c><00:12:32.000><c> just</c><00:12:32.160><c> have</c><00:12:32.240><c> to</c><00:12:32.399><c> return</c><00:12:33.040><c> the</c><00:12:33.440><c> the</c>

00:12:33.910 --> 00:12:33.920 align:start position:0%
done that we just have to return the the
 

00:12:33.920 --> 00:12:35.990 align:start position:0%
done that we just have to return the the
count<00:12:34.160><c> of</c><00:12:34.240><c> how</c><00:12:34.399><c> many</c><00:12:34.639><c> we</c><00:12:34.800><c> deleted</c><00:12:35.519><c> and</c><00:12:35.680><c> then</c>

00:12:35.990 --> 00:12:36.000 align:start position:0%
count of how many we deleted and then
 

00:12:36.000 --> 00:12:37.910 align:start position:0%
count of how many we deleted and then
run<00:12:36.160><c> the</c><00:12:36.320><c> code</c><00:12:36.639><c> and</c><00:12:36.720><c> make</c><00:12:36.880><c> sure</c><00:12:37.040><c> that</c><00:12:37.200><c> it</c><00:12:37.360><c> works</c>

00:12:37.910 --> 00:12:37.920 align:start position:0%
run the code and make sure that it works
 

00:12:37.920 --> 00:12:39.910 align:start position:0%
run the code and make sure that it works
and<00:12:38.160><c> as</c><00:12:38.399><c> you</c><00:12:38.480><c> can</c><00:12:38.560><c> see</c><00:12:38.880><c> yes</c><00:12:39.120><c> it</c><00:12:39.279><c> does</c><00:12:39.519><c> work</c><00:12:39.760><c> and</c>

00:12:39.910 --> 00:12:39.920 align:start position:0%
and as you can see yes it does work and
 

00:12:39.920 --> 00:12:41.750 align:start position:0%
and as you can see yes it does work and
it<00:12:40.079><c> is</c><00:12:40.320><c> pretty</c><00:12:40.639><c> efficient</c><00:12:41.040><c> so</c><00:12:41.200><c> i</c><00:12:41.360><c> really</c><00:12:41.600><c> hope</c>

00:12:41.750 --> 00:12:41.760 align:start position:0%
it is pretty efficient so i really hope
 

00:12:41.760 --> 00:12:43.750 align:start position:0%
it is pretty efficient so i really hope
that<00:12:41.920><c> this</c><00:12:42.079><c> was</c><00:12:42.240><c> helpful</c><00:12:42.800><c> if</c><00:12:42.959><c> it</c><00:12:43.120><c> was</c><00:12:43.440><c> please</c>

00:12:43.750 --> 00:12:43.760 align:start position:0%
that this was helpful if it was please
 

00:12:43.760 --> 00:12:45.430 align:start position:0%
that this was helpful if it was please
like<00:12:43.920><c> and</c><00:12:44.079><c> subscribe</c><00:12:44.560><c> it</c><00:12:44.720><c> really</c><00:12:44.959><c> supports</c>

00:12:45.430 --> 00:12:45.440 align:start position:0%
like and subscribe it really supports
 

00:12:45.440 --> 00:12:46.949 align:start position:0%
like and subscribe it really supports
the<00:12:45.519><c> channel</c><00:12:45.839><c> a</c><00:12:45.920><c> lot</c><00:12:46.160><c> consider</c><00:12:46.560><c> checking</c><00:12:46.880><c> out</c>

00:12:46.949 --> 00:12:46.959 align:start position:0%
the channel a lot consider checking out
 

00:12:46.959 --> 00:12:48.470 align:start position:0%
the channel a lot consider checking out
my<00:12:47.120><c> patreon</c><00:12:47.519><c> where</c><00:12:47.680><c> you</c><00:12:47.760><c> can</c><00:12:47.839><c> further</c><00:12:48.160><c> support</c>

00:12:48.470 --> 00:12:48.480 align:start position:0%
my patreon where you can further support
 

00:12:48.480 --> 00:12:50.150 align:start position:0%
my patreon where you can further support
the<00:12:48.639><c> channel</c><00:12:49.040><c> and</c><00:12:49.200><c> hopefully</c><00:12:49.680><c> i'll</c><00:12:49.920><c> see</c><00:12:50.000><c> you</c>

00:12:50.150 --> 00:12:50.160 align:start position:0%
the channel and hopefully i'll see you
 

00:12:50.160 --> 00:12:53.839 align:start position:0%
the channel and hopefully i'll see you
pretty<00:12:50.399><c> soon</c><00:12:50.800><c> thanks</c><00:12:51.040><c> for</c><00:12:51.200><c> watching</c>

