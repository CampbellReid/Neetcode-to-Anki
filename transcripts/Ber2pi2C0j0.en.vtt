WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.750 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.719><c> welcome</c><00:00:01.199><c> back</c><00:00:01.439><c> and</c><00:00:01.520><c> let's</c>

00:00:01.750 --> 00:00:01.760 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.760 --> 00:00:03.830 align:start position:0%
hey everyone welcome back and let's
write<00:00:02.000><c> some</c><00:00:02.159><c> more</c><00:00:02.399><c> neat</c><00:00:02.639><c> code</c><00:00:02.960><c> today</c><00:00:03.280><c> so</c><00:00:03.439><c> today</c>

00:00:03.830 --> 00:00:03.840 align:start position:0%
write some more neat code today so today
 

00:00:03.840 --> 00:00:07.110 align:start position:0%
write some more neat code today so today
let's<00:00:04.160><c> solve</c><00:00:04.640><c> search</c><00:00:05.120><c> a</c><00:00:05.359><c> 2d</c><00:00:06.000><c> matrix</c><00:00:06.799><c> and</c><00:00:06.960><c> i</c>

00:00:07.110 --> 00:00:07.120 align:start position:0%
let's solve search a 2d matrix and i
 

00:00:07.120 --> 00:00:08.950 align:start position:0%
let's solve search a 2d matrix and i
really<00:00:07.520><c> like</c><00:00:07.680><c> this</c><00:00:07.919><c> problem</c><00:00:08.559><c> because</c><00:00:08.800><c> it's</c>

00:00:08.950 --> 00:00:08.960 align:start position:0%
really like this problem because it's
 

00:00:08.960 --> 00:00:10.549 align:start position:0%
really like this problem because it's
not<00:00:09.200><c> one</c><00:00:09.360><c> of</c><00:00:09.440><c> those</c><00:00:09.679><c> problems</c><00:00:10.080><c> that</c><00:00:10.240><c> you</c><00:00:10.320><c> need</c>

00:00:10.549 --> 00:00:10.559 align:start position:0%
not one of those problems that you need
 

00:00:10.559 --> 00:00:12.629 align:start position:0%
not one of those problems that you need
a<00:00:10.639><c> fancy</c><00:00:11.120><c> trick</c><00:00:11.519><c> for</c><00:00:11.759><c> you</c><00:00:11.920><c> can</c><00:00:12.080><c> actually</c><00:00:12.400><c> solve</c>

00:00:12.629 --> 00:00:12.639 align:start position:0%
a fancy trick for you can actually solve
 

00:00:12.639 --> 00:00:15.589 align:start position:0%
a fancy trick for you can actually solve
this<00:00:12.880><c> problem</c><00:00:13.280><c> just</c><00:00:13.519><c> by</c><00:00:13.759><c> using</c><00:00:14.240><c> logic</c><00:00:14.960><c> so</c><00:00:15.440><c> we</c>

00:00:15.589 --> 00:00:15.599 align:start position:0%
this problem just by using logic so we
 

00:00:15.599 --> 00:00:17.990 align:start position:0%
this problem just by using logic so we
are<00:00:15.759><c> tasked</c><00:00:16.240><c> with</c><00:00:16.480><c> creating</c><00:00:17.119><c> an</c><00:00:17.279><c> efficient</c>

00:00:17.990 --> 00:00:18.000 align:start position:0%
are tasked with creating an efficient
 

00:00:18.000 --> 00:00:20.790 align:start position:0%
are tasked with creating an efficient
algorithm<00:00:18.880><c> for</c><00:00:19.119><c> searching</c><00:00:19.600><c> for</c><00:00:19.840><c> a</c><00:00:20.160><c> single</c>

00:00:20.790 --> 00:00:20.800 align:start position:0%
algorithm for searching for a single
 

00:00:20.800 --> 00:00:25.830 align:start position:0%
algorithm for searching for a single
value<00:00:21.680><c> in</c><00:00:22.080><c> an</c><00:00:22.400><c> m</c><00:00:22.720><c> by</c><00:00:23.039><c> n</c><00:00:23.439><c> matrix</c><00:00:24.320><c> the</c><00:00:24.560><c> matrix</c><00:00:25.119><c> has</c>

00:00:25.830 --> 00:00:25.840 align:start position:0%
value in an m by n matrix the matrix has
 

00:00:25.840 --> 00:00:29.189 align:start position:0%
value in an m by n matrix the matrix has
two<00:00:26.240><c> properties</c><00:00:27.119><c> in</c><00:00:27.439><c> every</c><00:00:27.840><c> single</c><00:00:28.400><c> row</c><00:00:28.960><c> the</c>

00:00:29.189 --> 00:00:29.199 align:start position:0%
two properties in every single row the
 

00:00:29.199 --> 00:00:32.310 align:start position:0%
two properties in every single row the
integers<00:00:29.679><c> are</c><00:00:30.000><c> sorted</c><00:00:30.560><c> from</c><00:00:30.960><c> left</c><00:00:31.279><c> to</c><00:00:31.519><c> right</c>

00:00:32.310 --> 00:00:32.320 align:start position:0%
integers are sorted from left to right
 

00:00:32.320 --> 00:00:35.830 align:start position:0%
integers are sorted from left to right
and<00:00:32.960><c> the</c><00:00:33.360><c> first</c><00:00:33.840><c> integer</c><00:00:34.399><c> of</c><00:00:34.719><c> each</c><00:00:35.120><c> row</c><00:00:35.680><c> for</c>

00:00:35.830 --> 00:00:35.840 align:start position:0%
and the first integer of each row for
 

00:00:35.840 --> 00:00:39.030 align:start position:0%
and the first integer of each row for
example<00:00:36.320><c> this</c><00:00:36.719><c> 10</c><00:00:37.440><c> is</c><00:00:37.840><c> always</c><00:00:38.399><c> going</c><00:00:38.640><c> to</c><00:00:38.800><c> be</c>

00:00:39.030 --> 00:00:39.040 align:start position:0%
example this 10 is always going to be
 

00:00:39.040 --> 00:00:41.350 align:start position:0%
example this 10 is always going to be
greater<00:00:39.600><c> than</c><00:00:39.760><c> the</c><00:00:40.079><c> last</c><00:00:40.559><c> integer</c><00:00:41.040><c> of</c><00:00:41.120><c> the</c>

00:00:41.350 --> 00:00:41.360 align:start position:0%
greater than the last integer of the
 

00:00:41.360 --> 00:00:44.549 align:start position:0%
greater than the last integer of the
previous<00:00:42.000><c> row</c><00:00:42.559><c> so</c><00:00:43.120><c> greater</c><00:00:43.440><c> than</c><00:00:43.600><c> this</c><00:00:43.760><c> one</c><00:00:44.079><c> so</c>

00:00:44.549 --> 00:00:44.559 align:start position:0%
previous row so greater than this one so
 

00:00:44.559 --> 00:00:47.510 align:start position:0%
previous row so greater than this one so
in<00:00:44.800><c> other</c><00:00:45.120><c> words</c><00:00:45.680><c> we</c><00:00:45.920><c> know</c><00:00:46.160><c> that</c><00:00:46.399><c> each</c><00:00:46.960><c> row</c><00:00:47.360><c> is</c>

00:00:47.510 --> 00:00:47.520 align:start position:0%
in other words we know that each row is
 

00:00:47.520 --> 00:00:50.470 align:start position:0%
in other words we know that each row is
sorted<00:00:48.399><c> and</c><00:00:48.879><c> then</c><00:00:49.039><c> the</c><00:00:49.280><c> next</c><00:00:49.680><c> row</c><00:00:50.000><c> is</c><00:00:50.160><c> going</c><00:00:50.320><c> to</c>

00:00:50.470 --> 00:00:50.480 align:start position:0%
sorted and then the next row is going to
 

00:00:50.480 --> 00:00:53.510 align:start position:0%
sorted and then the next row is going to
be<00:00:50.719><c> greater</c><00:00:51.440><c> than</c><00:00:51.760><c> that</c><00:00:52.079><c> so</c><00:00:52.480><c> technically</c><00:00:53.280><c> each</c>

00:00:53.510 --> 00:00:53.520 align:start position:0%
be greater than that so technically each
 

00:00:53.520 --> 00:00:55.590 align:start position:0%
be greater than that so technically each
value<00:00:54.079><c> in</c><00:00:54.320><c> total</c><00:00:54.719><c> throughout</c><00:00:55.120><c> the</c><00:00:55.280><c> entire</c>

00:00:55.590 --> 00:00:55.600 align:start position:0%
value in total throughout the entire
 

00:00:55.600 --> 00:00:57.910 align:start position:0%
value in total throughout the entire
matrix<00:00:56.079><c> is</c><00:00:56.239><c> going</c><00:00:56.480><c> to</c><00:00:56.640><c> be</c><00:00:56.879><c> in</c><00:00:57.039><c> sorted</c><00:00:57.440><c> order</c><00:00:57.680><c> so</c>

00:00:57.910 --> 00:00:57.920 align:start position:0%
matrix is going to be in sorted order so
 

00:00:57.920 --> 00:01:00.630 align:start position:0%
matrix is going to be in sorted order so
that's<00:00:58.160><c> pretty</c><00:00:58.480><c> good</c><00:00:59.039><c> in</c><00:00:59.199><c> this</c><00:00:59.520><c> example</c><00:01:00.480><c> we</c>

00:01:00.630 --> 00:01:00.640 align:start position:0%
that's pretty good in this example we
 

00:01:00.640 --> 00:01:02.790 align:start position:0%
that's pretty good in this example we
were<00:01:00.800><c> given</c><00:01:01.039><c> a</c><00:01:01.120><c> target</c><00:01:01.600><c> 3</c><00:01:02.000><c> so</c><00:01:02.160><c> if</c><00:01:02.320><c> we</c><00:01:02.480><c> search</c>

00:01:02.790 --> 00:01:02.800 align:start position:0%
were given a target 3 so if we search
 

00:01:02.800 --> 00:01:04.549 align:start position:0%
were given a target 3 so if we search
for<00:01:02.960><c> the</c><00:01:03.120><c> target</c><00:01:03.520><c> we</c><00:01:03.680><c> will</c><00:01:03.840><c> find</c><00:01:04.159><c> it</c><00:01:04.320><c> right</c>

00:01:04.549 --> 00:01:04.559 align:start position:0%
for the target we will find it right
 

00:01:04.559 --> 00:01:06.550 align:start position:0%
for the target we will find it right
here<00:01:04.879><c> so</c><00:01:05.040><c> then</c><00:01:05.280><c> we</c><00:01:05.360><c> can</c><00:01:05.519><c> return</c><00:01:05.920><c> true</c><00:01:06.240><c> that</c><00:01:06.400><c> it</c>

00:01:06.550 --> 00:01:06.560 align:start position:0%
here so then we can return true that it
 

00:01:06.560 --> 00:01:09.030 align:start position:0%
here so then we can return true that it
does<00:01:06.799><c> exist</c><00:01:07.600><c> if</c><00:01:07.760><c> it</c><00:01:07.840><c> does</c><00:01:08.080><c> not</c><00:01:08.320><c> exist</c><00:01:08.720><c> then</c><00:01:08.880><c> we</c>

00:01:09.030 --> 00:01:09.040 align:start position:0%
does exist if it does not exist then we
 

00:01:09.040 --> 00:01:11.670 align:start position:0%
does exist if it does not exist then we
simply<00:01:09.439><c> return</c><00:01:10.000><c> false</c><00:01:10.560><c> so</c><00:01:10.799><c> how</c><00:01:11.040><c> can</c><00:01:11.200><c> we</c><00:01:11.439><c> solve</c>

00:01:11.670 --> 00:01:11.680 align:start position:0%
simply return false so how can we solve
 

00:01:11.680 --> 00:01:13.830 align:start position:0%
simply return false so how can we solve
this<00:01:12.080><c> problem</c><00:01:12.400><c> the</c><00:01:12.560><c> key</c><00:01:12.799><c> word</c><00:01:13.040><c> here</c><00:01:13.360><c> is</c><00:01:13.520><c> create</c>

00:01:13.830 --> 00:01:13.840 align:start position:0%
this problem the key word here is create
 

00:01:13.840 --> 00:01:15.510 align:start position:0%
this problem the key word here is create
an<00:01:14.000><c> efficient</c><00:01:14.400><c> algorithm</c><00:01:14.880><c> what</c><00:01:15.040><c> would</c><00:01:15.200><c> be</c><00:01:15.360><c> the</c>

00:01:15.510 --> 00:01:15.520 align:start position:0%
an efficient algorithm what would be the
 

00:01:15.520 --> 00:01:17.990 align:start position:0%
an efficient algorithm what would be the
brute<00:01:15.920><c> force</c><00:01:16.479><c> of</c><00:01:16.720><c> course</c><00:01:17.280><c> we</c><00:01:17.439><c> could</c><00:01:17.600><c> do</c><00:01:17.759><c> an</c>

00:01:17.990 --> 00:01:18.000 align:start position:0%
brute force of course we could do an
 

00:01:18.000 --> 00:01:21.190 align:start position:0%
brute force of course we could do an
algorithm<00:01:18.560><c> o</c><00:01:18.799><c> of</c><00:01:19.119><c> m</c><00:01:19.360><c> by</c><00:01:19.920><c> n</c><00:01:20.479><c> basically</c><00:01:20.960><c> by</c>

00:01:21.190 --> 00:01:21.200 align:start position:0%
algorithm o of m by n basically by
 

00:01:21.200 --> 00:01:24.390 align:start position:0%
algorithm o of m by n basically by
searching<00:01:21.840><c> every</c><00:01:22.320><c> single</c><00:01:23.040><c> value</c><00:01:23.759><c> in</c><00:01:24.080><c> the</c>

00:01:24.390 --> 00:01:24.400 align:start position:0%
searching every single value in the
 

00:01:24.400 --> 00:01:27.109 align:start position:0%
searching every single value in the
input<00:01:24.880><c> array</c><00:01:25.280><c> right</c><00:01:25.759><c> that's</c><00:01:26.000><c> a</c><00:01:26.159><c> pretty</c><00:01:26.799><c> easy</c>

00:01:27.109 --> 00:01:27.119 align:start position:0%
input array right that's a pretty easy
 

00:01:27.119 --> 00:01:29.030 align:start position:0%
input array right that's a pretty easy
algorithm<00:01:27.600><c> to</c><00:01:27.759><c> do</c><00:01:28.080><c> on</c><00:01:28.240><c> a</c><00:01:28.320><c> two-dimensional</c>

00:01:29.030 --> 00:01:29.040 align:start position:0%
algorithm to do on a two-dimensional
 

00:01:29.040 --> 00:01:31.670 align:start position:0%
algorithm to do on a two-dimensional
matrix<00:01:29.520><c> but</c><00:01:29.680><c> can</c><00:01:29.920><c> we</c><00:01:30.159><c> do</c><00:01:30.479><c> better</c><00:01:31.040><c> of</c><00:01:31.200><c> course</c><00:01:31.520><c> we</c>

00:01:31.670 --> 00:01:31.680 align:start position:0%
matrix but can we do better of course we
 

00:01:31.680 --> 00:01:33.429 align:start position:0%
matrix but can we do better of course we
can<00:01:32.000><c> because</c><00:01:32.320><c> they</c><00:01:32.560><c> gave</c><00:01:32.799><c> us</c><00:01:32.960><c> a</c><00:01:33.040><c> couple</c>

00:01:33.429 --> 00:01:33.439 align:start position:0%
can because they gave us a couple
 

00:01:33.439 --> 00:01:36.230 align:start position:0%
can because they gave us a couple
properties<00:01:34.400><c> that</c><00:01:34.720><c> this</c><00:01:35.200><c> matrix</c><00:01:35.759><c> has</c><00:01:36.000><c> some</c>

00:01:36.230 --> 00:01:36.240 align:start position:0%
properties that this matrix has some
 

00:01:36.240 --> 00:01:39.190 align:start position:0%
properties that this matrix has some
sorting<00:01:36.880><c> already</c><00:01:37.520><c> applied</c><00:01:38.079><c> to</c><00:01:38.320><c> it</c><00:01:38.720><c> assume</c>

00:01:39.190 --> 00:01:39.200 align:start position:0%
sorting already applied to it assume
 

00:01:39.200 --> 00:01:41.270 align:start position:0%
sorting already applied to it assume
that<00:01:39.360><c> we</c><00:01:39.520><c> just</c><00:01:39.759><c> had</c><00:01:40.000><c> a</c><00:01:40.240><c> single</c><00:01:40.799><c> row</c><00:01:41.119><c> like</c>

00:01:41.270 --> 00:01:41.280 align:start position:0%
that we just had a single row like
 

00:01:41.280 --> 00:01:43.109 align:start position:0%
that we just had a single row like
forget<00:01:41.600><c> that</c><00:01:41.759><c> we</c><00:01:41.840><c> had</c><00:01:42.000><c> a</c><00:01:42.159><c> matrix</c><00:01:42.640><c> if</c><00:01:42.720><c> we</c><00:01:42.880><c> just</c>

00:01:43.109 --> 00:01:43.119 align:start position:0%
forget that we had a matrix if we just
 

00:01:43.119 --> 00:01:46.710 align:start position:0%
forget that we had a matrix if we just
had<00:01:43.360><c> a</c><00:01:43.600><c> single</c><00:01:44.320><c> row</c><00:01:45.040><c> like</c><00:01:45.360><c> this</c><00:01:45.680><c> one</c><00:01:46.159><c> and</c><00:01:46.399><c> we</c>

00:01:46.710 --> 00:01:46.720 align:start position:0%
had a single row like this one and we
 

00:01:46.720 --> 00:01:49.429 align:start position:0%
had a single row like this one and we
know<00:01:46.960><c> it's</c><00:01:47.200><c> in</c><00:01:47.360><c> sorted</c><00:01:47.920><c> order</c><00:01:48.479><c> do</c><00:01:48.720><c> you</c><00:01:49.040><c> know</c><00:01:49.280><c> an</c>

00:01:49.429 --> 00:01:49.439 align:start position:0%
know it's in sorted order do you know an
 

00:01:49.439 --> 00:01:51.749 align:start position:0%
know it's in sorted order do you know an
algorithm<00:01:49.920><c> that</c><00:01:50.079><c> can</c><00:01:50.320><c> search</c><00:01:50.640><c> for</c><00:01:50.880><c> a</c><00:01:51.119><c> target</c>

00:01:51.749 --> 00:01:51.759 align:start position:0%
algorithm that can search for a target
 

00:01:51.759 --> 00:01:54.389 align:start position:0%
algorithm that can search for a target
value<00:01:52.640><c> in</c><00:01:52.880><c> a</c><00:01:53.119><c> sorted</c><00:01:53.600><c> array</c>

00:01:54.389 --> 00:01:54.399 align:start position:0%
value in a sorted array
 

00:01:54.399 --> 00:01:57.190 align:start position:0%
value in a sorted array
i<00:01:54.640><c> know</c><00:01:54.799><c> of</c><00:01:54.960><c> one</c><00:01:55.360><c> called</c><00:01:55.840><c> binary</c><00:01:56.479><c> search</c><00:01:56.960><c> right</c>

00:01:57.190 --> 00:01:57.200 align:start position:0%
i know of one called binary search right
 

00:01:57.200 --> 00:01:59.429 align:start position:0%
i know of one called binary search right
and<00:01:57.360><c> how</c><00:01:57.680><c> efficient</c><00:01:58.240><c> is</c><00:01:58.399><c> binary</c><00:01:58.960><c> search</c><00:01:59.200><c> well</c>

00:01:59.429 --> 00:01:59.439 align:start position:0%
and how efficient is binary search well
 

00:01:59.439 --> 00:02:00.709 align:start position:0%
and how efficient is binary search well
let's<00:01:59.759><c> say</c>

00:02:00.709 --> 00:02:00.719 align:start position:0%
let's say
 

00:02:00.719 --> 00:02:03.830 align:start position:0%
let's say
the<00:02:01.040><c> size</c><00:02:01.360><c> of</c><00:02:01.520><c> this</c><00:02:01.920><c> array</c><00:02:02.399><c> is</c><00:02:02.799><c> n</c><00:02:03.200><c> we</c><00:02:03.360><c> could</c><00:02:03.600><c> do</c>

00:02:03.830 --> 00:02:03.840 align:start position:0%
the size of this array is n we could do
 

00:02:03.840 --> 00:02:08.150 align:start position:0%
the size of this array is n we could do
a<00:02:04.000><c> binary</c><00:02:04.399><c> search</c><00:02:05.040><c> in</c><00:02:05.600><c> log</c><00:02:06.159><c> n</c><00:02:06.560><c> time</c><00:02:07.280><c> right</c><00:02:07.840><c> but</c>

00:02:08.150 --> 00:02:08.160 align:start position:0%
a binary search in log n time right but
 

00:02:08.160 --> 00:02:10.790 align:start position:0%
a binary search in log n time right but
of<00:02:08.319><c> course</c><00:02:08.720><c> we</c><00:02:08.959><c> know</c><00:02:09.119><c> that</c><00:02:09.280><c> we</c><00:02:09.520><c> actually</c><00:02:10.000><c> have</c>

00:02:10.790 --> 00:02:10.800 align:start position:0%
of course we know that we actually have
 

00:02:10.800 --> 00:02:11.510 align:start position:0%
of course we know that we actually have
m

00:02:11.510 --> 00:02:11.520 align:start position:0%
m
 

00:02:11.520 --> 00:02:14.949 align:start position:0%
m
different<00:02:12.319><c> rows</c><00:02:13.120><c> right</c><00:02:13.440><c> so</c><00:02:13.760><c> let's</c><00:02:14.000><c> say</c><00:02:14.239><c> we</c><00:02:14.560><c> ran</c>

00:02:14.949 --> 00:02:14.959 align:start position:0%
different rows right so let's say we ran
 

00:02:14.959 --> 00:02:17.910 align:start position:0%
different rows right so let's say we ran
a<00:02:15.120><c> binary</c><00:02:15.680><c> search</c><00:02:16.080><c> on</c><00:02:16.480><c> every</c><00:02:17.040><c> single</c><00:02:17.520><c> row</c>

00:02:17.910 --> 00:02:17.920 align:start position:0%
a binary search on every single row
 

00:02:17.920 --> 00:02:21.350 align:start position:0%
a binary search on every single row
until<00:02:18.400><c> we</c><00:02:18.720><c> found</c><00:02:19.360><c> the</c><00:02:19.680><c> input</c><00:02:20.480><c> target</c><00:02:20.879><c> value</c>

00:02:21.350 --> 00:02:21.360 align:start position:0%
until we found the input target value
 

00:02:21.360 --> 00:02:23.110 align:start position:0%
until we found the input target value
right<00:02:21.599><c> what</c><00:02:21.840><c> would</c><00:02:22.000><c> the</c><00:02:22.160><c> time</c><00:02:22.400><c> complexity</c><00:02:22.879><c> be</c>

00:02:23.110 --> 00:02:23.120 align:start position:0%
right what would the time complexity be
 

00:02:23.120 --> 00:02:26.390 align:start position:0%
right what would the time complexity be
well<00:02:23.360><c> log</c><00:02:23.760><c> n</c><00:02:24.160><c> multiplied</c><00:02:25.120><c> by</c><00:02:25.520><c> m</c><00:02:26.000><c> is</c><00:02:26.160><c> going</c><00:02:26.319><c> to</c>

00:02:26.390 --> 00:02:26.400 align:start position:0%
well log n multiplied by m is going to
 

00:02:26.400 --> 00:02:28.869 align:start position:0%
well log n multiplied by m is going to
give<00:02:26.560><c> us</c><00:02:26.800><c> a</c><00:02:26.879><c> solution</c><00:02:27.440><c> like</c><00:02:27.760><c> that</c><00:02:28.080><c> so</c><00:02:28.400><c> that's</c>

00:02:28.869 --> 00:02:28.879 align:start position:0%
give us a solution like that so that's
 

00:02:28.879 --> 00:02:31.430 align:start position:0%
give us a solution like that so that's
using<00:02:29.280><c> the</c><00:02:29.599><c> first</c><00:02:30.080><c> property</c><00:02:30.879><c> knowing</c><00:02:31.200><c> that</c>

00:02:31.430 --> 00:02:31.440 align:start position:0%
using the first property knowing that
 

00:02:31.440 --> 00:02:34.630 align:start position:0%
using the first property knowing that
each<00:02:31.840><c> rows</c><00:02:32.560><c> integers</c><00:02:33.120><c> are</c><00:02:33.360><c> sorted</c><00:02:34.000><c> but</c><00:02:34.480><c> and</c>

00:02:34.630 --> 00:02:34.640 align:start position:0%
each rows integers are sorted but and
 

00:02:34.640 --> 00:02:36.470 align:start position:0%
each rows integers are sorted but and
this<00:02:34.800><c> is</c><00:02:34.879><c> a</c><00:02:35.040><c> pretty</c><00:02:35.200><c> good</c><00:02:35.440><c> solution</c><00:02:35.920><c> but</c><00:02:36.160><c> can</c>

00:02:36.470 --> 00:02:36.480 align:start position:0%
this is a pretty good solution but can
 

00:02:36.480 --> 00:02:39.270 align:start position:0%
this is a pretty good solution but can
we<00:02:36.720><c> do</c><00:02:37.200><c> even</c><00:02:37.840><c> better</c><00:02:38.160><c> than</c><00:02:38.400><c> this</c><00:02:38.879><c> i'll</c><00:02:39.120><c> give</c>

00:02:39.270 --> 00:02:39.280 align:start position:0%
we do even better than this i'll give
 

00:02:39.280 --> 00:02:41.030 align:start position:0%
we do even better than this i'll give
you<00:02:39.440><c> a</c><00:02:39.519><c> hint</c><00:02:39.920><c> we're</c><00:02:40.160><c> definitely</c><00:02:40.640><c> gonna</c><00:02:40.879><c> have</c>

00:02:41.030 --> 00:02:41.040 align:start position:0%
you a hint we're definitely gonna have
 

00:02:41.040 --> 00:02:43.750 align:start position:0%
you a hint we're definitely gonna have
to<00:02:41.200><c> use</c><00:02:41.519><c> this</c><00:02:42.080><c> second</c><00:02:42.560><c> property</c><00:02:43.360><c> that</c><00:02:43.519><c> they</c>

00:02:43.750 --> 00:02:43.760 align:start position:0%
to use this second property that they
 

00:02:43.760 --> 00:02:47.430 align:start position:0%
to use this second property that they
told<00:02:44.080><c> us</c><00:02:44.480><c> each</c><00:02:45.120><c> row</c><00:02:45.599><c> itself</c><00:02:46.560><c> is</c><00:02:46.720><c> actually</c><00:02:47.280><c> in</c>

00:02:47.430 --> 00:02:47.440 align:start position:0%
told us each row itself is actually in
 

00:02:47.440 --> 00:02:49.270 align:start position:0%
told us each row itself is actually in
sorted<00:02:47.920><c> order</c><00:02:48.239><c> as</c><00:02:48.480><c> in</c><00:02:48.640><c> we</c><00:02:48.800><c> know</c><00:02:48.959><c> that</c><00:02:49.200><c> the</c>

00:02:49.270 --> 00:02:49.280 align:start position:0%
sorted order as in we know that the
 

00:02:49.280 --> 00:02:50.790 align:start position:0%
sorted order as in we know that the
values<00:02:49.760><c> in</c><00:02:49.840><c> this</c><00:02:50.080><c> row</c><00:02:50.319><c> are</c><00:02:50.480><c> going</c><00:02:50.560><c> to</c><00:02:50.640><c> be</c>

00:02:50.790 --> 00:02:50.800 align:start position:0%
values in this row are going to be
 

00:02:50.800 --> 00:02:52.869 align:start position:0%
values in this row are going to be
smaller<00:02:51.200><c> than</c><00:02:51.519><c> all</c><00:02:51.680><c> of</c><00:02:51.760><c> the</c><00:02:51.920><c> values</c><00:02:52.400><c> in</c><00:02:52.560><c> this</c>

00:02:52.869 --> 00:02:52.879 align:start position:0%
smaller than all of the values in this
 

00:02:52.879 --> 00:02:55.110 align:start position:0%
smaller than all of the values in this
row<00:02:53.440><c> and</c><00:02:53.840><c> all</c><00:02:54.080><c> the</c><00:02:54.239><c> values</c><00:02:54.640><c> in</c><00:02:54.720><c> this</c><00:02:54.879><c> row</c><00:02:55.040><c> are</c>

00:02:55.110 --> 00:02:55.120 align:start position:0%
row and all the values in this row are
 

00:02:55.120 --> 00:02:56.550 align:start position:0%
row and all the values in this row are
going<00:02:55.200><c> to</c><00:02:55.280><c> be</c><00:02:55.360><c> smaller</c><00:02:55.680><c> than</c><00:02:55.920><c> all</c><00:02:56.080><c> the</c><00:02:56.239><c> values</c>

00:02:56.550 --> 00:02:56.560 align:start position:0%
going to be smaller than all the values
 

00:02:56.560 --> 00:02:59.110 align:start position:0%
going to be smaller than all the values
in<00:02:56.640><c> this</c><00:02:56.879><c> row</c><00:02:57.200><c> so</c><00:02:57.360><c> can</c><00:02:57.599><c> we</c><00:02:57.680><c> use</c><00:02:58.080><c> that</c><00:02:58.400><c> property</c>

00:02:59.110 --> 00:02:59.120 align:start position:0%
in this row so can we use that property
 

00:02:59.120 --> 00:03:01.190 align:start position:0%
in this row so can we use that property
to<00:02:59.440><c> instead</c><00:02:59.760><c> of</c><00:03:00.000><c> searching</c><00:03:00.480><c> through</c><00:03:00.800><c> every</c>

00:03:01.190 --> 00:03:01.200 align:start position:0%
to instead of searching through every
 

00:03:01.200 --> 00:03:04.070 align:start position:0%
to instead of searching through every
one<00:03:01.360><c> of</c><00:03:01.440><c> these</c><00:03:02.000><c> m</c><00:03:02.319><c> rows</c><00:03:03.040><c> maybe</c><00:03:03.680><c> we</c><00:03:03.840><c> can</c>

00:03:04.070 --> 00:03:04.080 align:start position:0%
one of these m rows maybe we can
 

00:03:04.080 --> 00:03:06.630 align:start position:0%
one of these m rows maybe we can
actually<00:03:04.480><c> do</c><00:03:04.640><c> a</c><00:03:04.879><c> binary</c><00:03:05.519><c> search</c><00:03:06.080><c> just</c><00:03:06.319><c> to</c>

00:03:06.630 --> 00:03:06.640 align:start position:0%
actually do a binary search just to
 

00:03:06.640 --> 00:03:09.350 align:start position:0%
actually do a binary search just to
figure<00:03:07.120><c> out</c><00:03:07.599><c> which</c><00:03:08.000><c> one</c><00:03:08.159><c> of</c><00:03:08.319><c> these</c><00:03:08.720><c> rows</c><00:03:09.120><c> to</c>

00:03:09.350 --> 00:03:09.360 align:start position:0%
figure out which one of these rows to
 

00:03:09.360 --> 00:03:11.350 align:start position:0%
figure out which one of these rows to
search<00:03:09.760><c> in</c><00:03:09.920><c> the</c><00:03:10.080><c> first</c><00:03:10.400><c> place</c><00:03:10.640><c> because</c><00:03:11.200><c> for</c>

00:03:11.350 --> 00:03:11.360 align:start position:0%
search in the first place because for
 

00:03:11.360 --> 00:03:12.949 align:start position:0%
search in the first place because for
example<00:03:11.680><c> if</c><00:03:11.840><c> we're</c><00:03:12.000><c> looking</c><00:03:12.239><c> for</c><00:03:12.400><c> a</c><00:03:12.560><c> target</c>

00:03:12.949 --> 00:03:12.959 align:start position:0%
example if we're looking for a target
 

00:03:12.959 --> 00:03:15.990 align:start position:0%
example if we're looking for a target
value<00:03:13.360><c> 3</c><00:03:14.000><c> let's</c><00:03:14.239><c> take</c><00:03:14.400><c> a</c><00:03:14.480><c> look</c><00:03:14.640><c> at</c><00:03:14.800><c> this</c><00:03:15.120><c> row</c>

00:03:15.990 --> 00:03:16.000 align:start position:0%
value 3 let's take a look at this row
 

00:03:16.000 --> 00:03:18.790 align:start position:0%
value 3 let's take a look at this row
this<00:03:16.319><c> row</c><00:03:16.560><c> could</c><00:03:16.800><c> have</c><00:03:17.120><c> any</c><00:03:17.440><c> values</c><00:03:18.159><c> between</c>

00:03:18.790 --> 00:03:18.800 align:start position:0%
this row could have any values between
 

00:03:18.800 --> 00:03:21.350 align:start position:0%
this row could have any values between
10<00:03:19.120><c> which</c><00:03:19.360><c> is</c><00:03:19.519><c> the</c><00:03:19.680><c> lower</c><00:03:20.000><c> bound</c><00:03:20.560><c> and</c><00:03:20.800><c> between</c>

00:03:21.350 --> 00:03:21.360 align:start position:0%
10 which is the lower bound and between
 

00:03:21.360 --> 00:03:24.470 align:start position:0%
10 which is the lower bound and between
20.<00:03:22.080><c> so</c><00:03:22.480><c> obviously</c><00:03:23.120><c> the</c><00:03:23.280><c> target</c><00:03:23.599><c> value</c><00:03:24.000><c> 3</c><00:03:24.319><c> is</c>

00:03:24.470 --> 00:03:24.480 align:start position:0%
20. so obviously the target value 3 is
 

00:03:24.480 --> 00:03:26.630 align:start position:0%
20. so obviously the target value 3 is
not<00:03:24.640><c> going</c><00:03:24.799><c> to</c><00:03:25.040><c> fall</c><00:03:25.280><c> within</c><00:03:25.760><c> that</c><00:03:26.159><c> range</c>

00:03:26.630 --> 00:03:26.640 align:start position:0%
not going to fall within that range
 

00:03:26.640 --> 00:03:29.750 align:start position:0%
not going to fall within that range
between<00:03:27.200><c> 10</c><00:03:27.599><c> and</c><00:03:27.920><c> 20</c><00:03:28.480><c> right</c><00:03:29.040><c> so</c><00:03:29.440><c> then</c><00:03:29.599><c> the</c>

00:03:29.750 --> 00:03:29.760 align:start position:0%
between 10 and 20 right so then the
 

00:03:29.760 --> 00:03:32.390 align:start position:0%
between 10 and 20 right so then the
question<00:03:30.239><c> is</c><00:03:30.640><c> okay</c><00:03:30.959><c> if</c><00:03:31.120><c> the</c><00:03:31.440><c> if</c><00:03:31.840><c> the</c><00:03:32.000><c> target</c>

00:03:32.390 --> 00:03:32.400 align:start position:0%
question is okay if the if the target
 

00:03:32.400 --> 00:03:35.190 align:start position:0%
question is okay if the if the target
value<00:03:32.799><c> is</c><00:03:33.120><c> definitely</c><00:03:33.920><c> not</c><00:03:34.319><c> in</c><00:03:34.480><c> this</c><00:03:34.799><c> row</c><00:03:35.040><c> we</c>

00:03:35.190 --> 00:03:35.200 align:start position:0%
value is definitely not in this row we
 

00:03:35.200 --> 00:03:37.509 align:start position:0%
value is definitely not in this row we
can<00:03:35.360><c> cross</c><00:03:35.760><c> this</c><00:03:36.080><c> row</c><00:03:36.400><c> out</c><00:03:36.799><c> but</c><00:03:36.959><c> then</c><00:03:37.200><c> which</c>

00:03:37.509 --> 00:03:37.519 align:start position:0%
can cross this row out but then which
 

00:03:37.519 --> 00:03:38.949 align:start position:0%
can cross this row out but then which
direction<00:03:38.080><c> are</c><00:03:38.159><c> we</c><00:03:38.319><c> going</c><00:03:38.400><c> to</c><00:03:38.480><c> go</c><00:03:38.720><c> are</c><00:03:38.879><c> we</c>

00:03:38.949 --> 00:03:38.959 align:start position:0%
direction are we going to go are we
 

00:03:38.959 --> 00:03:41.030 align:start position:0%
direction are we going to go are we
going<00:03:39.120><c> to</c><00:03:39.200><c> look</c><00:03:39.360><c> at</c><00:03:39.440><c> the</c><00:03:39.599><c> row</c><00:03:39.920><c> above</c><00:03:40.319><c> it</c><00:03:40.640><c> or</c><00:03:40.879><c> are</c>

00:03:41.030 --> 00:03:41.040 align:start position:0%
going to look at the row above it or are
 

00:03:41.040 --> 00:03:43.430 align:start position:0%
going to look at the row above it or are
we<00:03:41.120><c> going</c><00:03:41.280><c> to</c><00:03:41.360><c> look</c><00:03:41.519><c> at</c><00:03:41.599><c> the</c><00:03:41.840><c> row</c><00:03:42.319><c> below</c><00:03:42.879><c> it</c><00:03:43.200><c> of</c>

00:03:43.430 --> 00:03:43.440 align:start position:0%
we going to look at the row below it of
 

00:03:43.440 --> 00:03:44.949 align:start position:0%
we going to look at the row below it of
course<00:03:43.760><c> we</c><00:03:43.920><c> would</c><00:03:44.080><c> want</c><00:03:44.239><c> to</c><00:03:44.319><c> look</c><00:03:44.480><c> at</c><00:03:44.560><c> the</c><00:03:44.720><c> one</c>

00:03:44.949 --> 00:03:44.959 align:start position:0%
course we would want to look at the one
 

00:03:44.959 --> 00:03:48.070 align:start position:0%
course we would want to look at the one
above<00:03:45.519><c> right</c><00:03:45.680><c> because</c><00:03:46.080><c> above</c><00:03:46.959><c> the</c><00:03:47.280><c> top</c><00:03:47.599><c> row</c><00:03:48.000><c> is</c>

00:03:48.070 --> 00:03:48.080 align:start position:0%
above right because above the top row is
 

00:03:48.080 --> 00:03:50.390 align:start position:0%
above right because above the top row is
going<00:03:48.239><c> to</c><00:03:48.319><c> have</c><00:03:48.720><c> smaller</c><00:03:49.200><c> values</c><00:03:49.920><c> than</c><00:03:50.080><c> the</c>

00:03:50.390 --> 00:03:50.400 align:start position:0%
going to have smaller values than the
 

00:03:50.400 --> 00:03:52.789 align:start position:0%
going to have smaller values than the
bottom<00:03:50.799><c> row</c><00:03:51.120><c> right</c><00:03:51.440><c> so</c><00:03:51.599><c> when</c><00:03:51.760><c> we</c><00:03:52.000><c> cross</c><00:03:52.480><c> this</c>

00:03:52.789 --> 00:03:52.799 align:start position:0%
bottom row right so when we cross this
 

00:03:52.799 --> 00:03:55.670 align:start position:0%
bottom row right so when we cross this
row<00:03:53.040><c> out</c><00:03:53.360><c> we</c><00:03:53.519><c> can</c><00:03:53.760><c> also</c><00:03:54.159><c> say</c><00:03:54.799><c> that</c><00:03:55.280><c> you</c><00:03:55.439><c> know</c>

00:03:55.670 --> 00:03:55.680 align:start position:0%
row out we can also say that you know
 

00:03:55.680 --> 00:03:57.990 align:start position:0%
row out we can also say that you know
let's<00:03:55.920><c> cross</c><00:03:56.560><c> this</c><00:03:56.879><c> row</c><00:03:57.200><c> out</c><00:03:57.439><c> too</c><00:03:57.680><c> because</c><00:03:57.920><c> of</c>

00:03:57.990 --> 00:03:58.000 align:start position:0%
let's cross this row out too because of
 

00:03:58.000 --> 00:03:59.509 align:start position:0%
let's cross this row out too because of
course<00:03:58.239><c> this</c><00:03:58.480><c> row</c><00:03:58.720><c> is</c><00:03:58.799><c> going</c><00:03:58.879><c> to</c><00:03:58.959><c> have</c><00:03:59.120><c> greater</c>

00:03:59.509 --> 00:03:59.519 align:start position:0%
course this row is going to have greater
 

00:03:59.519 --> 00:04:01.670 align:start position:0%
course this row is going to have greater
values<00:04:00.080><c> that's</c><00:04:00.400><c> how</c><00:04:00.560><c> the</c><00:04:00.799><c> binary</c><00:04:01.280><c> search</c><00:04:01.599><c> is</c>

00:04:01.670 --> 00:04:01.680 align:start position:0%
values that's how the binary search is
 

00:04:01.680 --> 00:04:03.509 align:start position:0%
values that's how the binary search is
going<00:04:01.840><c> to</c><00:04:01.920><c> work</c><00:04:02.319><c> to</c><00:04:02.480><c> even</c><00:04:02.879><c> figure</c><00:04:03.120><c> out</c><00:04:03.280><c> which</c>

00:04:03.509 --> 00:04:03.519 align:start position:0%
going to work to even figure out which
 

00:04:03.519 --> 00:04:06.149 align:start position:0%
going to work to even figure out which
one<00:04:03.680><c> of</c><00:04:03.760><c> these</c><00:04:04.239><c> m</c><00:04:04.799><c> rows</c><00:04:05.439><c> we're</c><00:04:05.599><c> going</c><00:04:05.760><c> to</c><00:04:05.840><c> need</c>

00:04:06.149 --> 00:04:06.159 align:start position:0%
one of these m rows we're going to need
 

00:04:06.159 --> 00:04:08.869 align:start position:0%
one of these m rows we're going to need
to<00:04:06.720><c> search</c><00:04:07.120><c> right</c><00:04:07.360><c> so</c><00:04:07.680><c> we</c><00:04:07.840><c> can</c><00:04:08.000><c> reduce</c><00:04:08.560><c> instead</c>

00:04:08.869 --> 00:04:08.879 align:start position:0%
to search right so we can reduce instead
 

00:04:08.879 --> 00:04:12.390 align:start position:0%
to search right so we can reduce instead
of<00:04:09.200><c> m</c><00:04:09.599><c> we</c><00:04:09.760><c> can</c><00:04:09.920><c> do</c><00:04:10.159><c> a</c><00:04:10.480><c> log</c><00:04:10.959><c> m</c><00:04:11.360><c> by</c><00:04:11.599><c> running</c><00:04:11.920><c> binary</c>

00:04:12.390 --> 00:04:12.400 align:start position:0%
of m we can do a log m by running binary
 

00:04:12.400 --> 00:04:15.589 align:start position:0%
of m we can do a log m by running binary
search<00:04:13.040><c> after</c><00:04:13.439><c> we've</c><00:04:13.680><c> ran</c><00:04:14.080><c> that</c><00:04:14.400><c> log</c><00:04:14.879><c> m</c><00:04:15.200><c> search</c>

00:04:15.589 --> 00:04:15.599 align:start position:0%
search after we've ran that log m search
 

00:04:15.599 --> 00:04:17.909 align:start position:0%
search after we've ran that log m search
then<00:04:15.840><c> we</c><00:04:16.000><c> know</c><00:04:16.239><c> okay</c><00:04:16.560><c> this</c><00:04:16.799><c> is</c><00:04:16.880><c> the</c><00:04:17.040><c> row</c><00:04:17.680><c> that</c>

00:04:17.909 --> 00:04:17.919 align:start position:0%
then we know okay this is the row that
 

00:04:17.919 --> 00:04:20.310 align:start position:0%
then we know okay this is the row that
we<00:04:18.160><c> have</c><00:04:18.239><c> to</c><00:04:18.479><c> do</c><00:04:18.959><c> our</c><00:04:19.280><c> second</c><00:04:19.600><c> binary</c><00:04:20.000><c> search</c>

00:04:20.310 --> 00:04:20.320 align:start position:0%
we have to do our second binary search
 

00:04:20.320 --> 00:04:21.909 align:start position:0%
we have to do our second binary search
on<00:04:20.400><c> so</c><00:04:20.639><c> after</c><00:04:20.880><c> we're</c><00:04:21.040><c> done</c><00:04:21.199><c> with</c><00:04:21.359><c> that</c><00:04:21.680><c> we're</c>

00:04:21.909 --> 00:04:21.919 align:start position:0%
on so after we're done with that we're
 

00:04:21.919 --> 00:04:23.510 align:start position:0%
on so after we're done with that we're
going<00:04:22.000><c> to</c><00:04:22.079><c> do</c><00:04:22.320><c> another</c><00:04:22.800><c> binary</c><00:04:23.199><c> search</c><00:04:23.360><c> so</c>

00:04:23.510 --> 00:04:23.520 align:start position:0%
going to do another binary search so
 

00:04:23.520 --> 00:04:26.070 align:start position:0%
going to do another binary search so
let's<00:04:24.000><c> plus</c><00:04:24.479><c> here</c><00:04:25.120><c> log</c>

00:04:26.070 --> 00:04:26.080 align:start position:0%
let's plus here log
 

00:04:26.080 --> 00:04:26.870 align:start position:0%
let's plus here log
n

00:04:26.870 --> 00:04:26.880 align:start position:0%
n
 

00:04:26.880 --> 00:04:28.550 align:start position:0%
n
right<00:04:27.199><c> log</c><00:04:27.680><c> n</c>

00:04:28.550 --> 00:04:28.560 align:start position:0%
right log n
 

00:04:28.560 --> 00:04:31.590 align:start position:0%
right log n
for<00:04:28.960><c> binary</c><00:04:29.440><c> searching</c><00:04:29.759><c> the</c><00:04:30.000><c> row</c><00:04:30.479><c> itself</c><00:04:31.199><c> so</c>

00:04:31.590 --> 00:04:31.600 align:start position:0%
for binary searching the row itself so
 

00:04:31.600 --> 00:04:34.230 align:start position:0%
for binary searching the row itself so
that's<00:04:32.240><c> a</c><00:04:32.560><c> better</c><00:04:32.880><c> time</c><00:04:33.199><c> complexity</c><00:04:33.919><c> than</c><00:04:34.080><c> we</c>

00:04:34.230 --> 00:04:34.240 align:start position:0%
that's a better time complexity than we
 

00:04:34.240 --> 00:04:37.830 align:start position:0%
that's a better time complexity than we
had<00:04:34.639><c> previously</c><00:04:35.199><c> right</c><00:04:35.520><c> log</c><00:04:36.000><c> m</c><00:04:36.560><c> plus</c><00:04:37.120><c> log</c><00:04:37.600><c> n</c>

00:04:37.830 --> 00:04:37.840 align:start position:0%
had previously right log m plus log n
 

00:04:37.840 --> 00:04:40.469 align:start position:0%
had previously right log m plus log n
that's<00:04:38.160><c> pretty</c><00:04:38.560><c> dang</c><00:04:38.960><c> good</c><00:04:39.520><c> so</c><00:04:39.919><c> once</c><00:04:40.160><c> we</c><00:04:40.320><c> get</c>

00:04:40.469 --> 00:04:40.479 align:start position:0%
that's pretty dang good so once we get
 

00:04:40.479 --> 00:04:42.150 align:start position:0%
that's pretty dang good so once we get
to<00:04:40.639><c> this</c><00:04:40.800><c> row</c><00:04:41.040><c> we're</c><00:04:41.120><c> going</c><00:04:41.280><c> to</c><00:04:41.360><c> say</c><00:04:41.520><c> okay</c><00:04:41.840><c> 3</c><00:04:42.080><c> is</c>

00:04:42.150 --> 00:04:42.160 align:start position:0%
to this row we're going to say okay 3 is
 

00:04:42.160 --> 00:04:43.830 align:start position:0%
to this row we're going to say okay 3 is
what<00:04:42.320><c> we're</c><00:04:42.479><c> looking</c><00:04:42.720><c> for</c><00:04:42.880><c> does</c><00:04:43.040><c> that</c><00:04:43.360><c> fall</c><00:04:43.759><c> in</c>

00:04:43.830 --> 00:04:43.840 align:start position:0%
what we're looking for does that fall in
 

00:04:43.840 --> 00:04:46.870 align:start position:0%
what we're looking for does that fall in
the<00:04:44.080><c> range</c><00:04:44.400><c> between</c><00:04:45.120><c> 1</c><00:04:45.680><c> and</c><00:04:45.840><c> between</c><00:04:46.479><c> 7</c><00:04:46.800><c> of</c>

00:04:46.870 --> 00:04:46.880 align:start position:0%
the range between 1 and between 7 of
 

00:04:46.880 --> 00:04:49.110 align:start position:0%
the range between 1 and between 7 of
course<00:04:47.199><c> it</c><00:04:47.360><c> does</c><00:04:47.680><c> so</c><00:04:48.000><c> either</c><00:04:48.560><c> our</c><00:04:48.800><c> target</c>

00:04:49.110 --> 00:04:49.120 align:start position:0%
course it does so either our target
 

00:04:49.120 --> 00:04:52.310 align:start position:0%
course it does so either our target
value<00:04:49.600><c> exists</c><00:04:50.240><c> in</c><00:04:50.400><c> this</c><00:04:50.720><c> row</c><00:04:51.360><c> or</c><00:04:51.680><c> it</c><00:04:51.840><c> doesn't</c>

00:04:52.310 --> 00:04:52.320 align:start position:0%
value exists in this row or it doesn't
 

00:04:52.320 --> 00:04:54.790 align:start position:0%
value exists in this row or it doesn't
exist<00:04:52.960><c> at</c><00:04:53.280><c> all</c><00:04:53.440><c> so</c><00:04:53.600><c> let's</c><00:04:53.840><c> run</c><00:04:54.080><c> binary</c><00:04:54.479><c> search</c>

00:04:54.790 --> 00:04:54.800 align:start position:0%
exist at all so let's run binary search
 

00:04:54.800 --> 00:04:56.469 align:start position:0%
exist at all so let's run binary search
here<00:04:55.040><c> so</c><00:04:55.520><c> of</c><00:04:55.600><c> course</c><00:04:55.840><c> we're</c><00:04:56.000><c> gonna</c><00:04:56.080><c> have</c><00:04:56.240><c> two</c>

00:04:56.469 --> 00:04:56.479 align:start position:0%
here so of course we're gonna have two
 

00:04:56.479 --> 00:04:59.590 align:start position:0%
here so of course we're gonna have two
pointers<00:04:57.040><c> left</c><00:04:57.360><c> pointer</c><00:04:58.000><c> and</c><00:04:58.639><c> right</c><00:04:58.960><c> pointer</c>

00:04:59.590 --> 00:04:59.600 align:start position:0%
pointers left pointer and right pointer
 

00:04:59.600 --> 00:05:01.909 align:start position:0%
pointers left pointer and right pointer
then<00:04:59.759><c> we're</c><00:04:59.919><c> gonna</c><00:05:00.160><c> check</c><00:05:00.400><c> the</c><00:05:00.560><c> middle</c><00:05:00.960><c> value</c>

00:05:01.909 --> 00:05:01.919 align:start position:0%
then we're gonna check the middle value
 

00:05:01.919 --> 00:05:03.670 align:start position:0%
then we're gonna check the middle value
in<00:05:02.080><c> this</c><00:05:02.320><c> case</c><00:05:02.639><c> i</c><00:05:02.720><c> think</c><00:05:02.880><c> the</c><00:05:02.960><c> middle</c><00:05:03.199><c> value</c><00:05:03.600><c> is</c>

00:05:03.670 --> 00:05:03.680 align:start position:0%
in this case i think the middle value is
 

00:05:03.680 --> 00:05:05.270 align:start position:0%
in this case i think the middle value is
gonna<00:05:03.840><c> end</c><00:05:04.000><c> up</c><00:05:04.080><c> being</c><00:05:04.320><c> this</c><00:05:04.479><c> one</c><00:05:04.720><c> because</c><00:05:04.960><c> zero</c>

00:05:05.270 --> 00:05:05.280 align:start position:0%
gonna end up being this one because zero
 

00:05:05.280 --> 00:05:07.270 align:start position:0%
gonna end up being this one because zero
plus<00:05:05.520><c> three</c><00:05:05.759><c> is</c><00:05:05.919><c> gonna</c><00:05:06.080><c> become</c><00:05:06.560><c> index</c><00:05:06.960><c> one</c><00:05:07.199><c> but</c>

00:05:07.270 --> 00:05:07.280 align:start position:0%
plus three is gonna become index one but
 

00:05:07.280 --> 00:05:09.189 align:start position:0%
plus three is gonna become index one but
let's<00:05:07.440><c> just</c><00:05:07.600><c> say</c><00:05:07.759><c> it</c><00:05:07.919><c> became</c><00:05:08.240><c> this</c><00:05:08.479><c> one</c><00:05:08.880><c> just</c>

00:05:09.189 --> 00:05:09.199 align:start position:0%
let's just say it became this one just
 

00:05:09.199 --> 00:05:10.469 align:start position:0%
let's just say it became this one just
to<00:05:09.360><c> kind</c><00:05:09.520><c> of</c><00:05:09.600><c> show</c><00:05:09.759><c> you</c><00:05:09.919><c> what</c><00:05:10.080><c> it's</c><00:05:10.240><c> going</c><00:05:10.320><c> to</c>

00:05:10.469 --> 00:05:10.479 align:start position:0%
to kind of show you what it's going to
 

00:05:10.479 --> 00:05:12.150 align:start position:0%
to kind of show you what it's going to
look<00:05:10.639><c> like</c><00:05:11.039><c> let's</c><00:05:11.199><c> say</c><00:05:11.360><c> our</c><00:05:11.440><c> middle</c><00:05:11.680><c> value</c><00:05:12.080><c> is</c>

00:05:12.150 --> 00:05:12.160 align:start position:0%
look like let's say our middle value is
 

00:05:12.160 --> 00:05:13.909 align:start position:0%
look like let's say our middle value is
here<00:05:12.320><c> we're</c><00:05:12.479><c> going</c><00:05:12.560><c> to</c><00:05:12.639><c> check</c><00:05:12.880><c> okay</c><00:05:13.199><c> 5</c><00:05:13.520><c> is</c><00:05:13.680><c> that</c>

00:05:13.909 --> 00:05:13.919 align:start position:0%
here we're going to check okay 5 is that
 

00:05:13.919 --> 00:05:16.790 align:start position:0%
here we're going to check okay 5 is that
3<00:05:14.240><c> nope</c><00:05:14.639><c> 3</c><00:05:15.039><c> is</c><00:05:15.440><c> less</c><00:05:15.759><c> than</c><00:05:16.000><c> 5.</c><00:05:16.240><c> so</c><00:05:16.400><c> what</c><00:05:16.639><c> we</c><00:05:16.720><c> can</c>

00:05:16.790 --> 00:05:16.800 align:start position:0%
3 nope 3 is less than 5. so what we can
 

00:05:16.800 --> 00:05:18.710 align:start position:0%
3 nope 3 is less than 5. so what we can
do<00:05:16.960><c> in</c><00:05:17.120><c> our</c><00:05:17.199><c> binary</c><00:05:17.520><c> search</c><00:05:17.759><c> is</c><00:05:18.000><c> cross</c><00:05:18.479><c> out</c>

00:05:18.710 --> 00:05:18.720 align:start position:0%
do in our binary search is cross out
 

00:05:18.720 --> 00:05:21.270 align:start position:0%
do in our binary search is cross out
these<00:05:19.039><c> values</c><00:05:19.759><c> cross</c><00:05:20.160><c> out</c><00:05:20.320><c> our</c><00:05:20.479><c> pointers</c><00:05:21.039><c> now</c>

00:05:21.270 --> 00:05:21.280 align:start position:0%
these values cross out our pointers now
 

00:05:21.280 --> 00:05:23.029 align:start position:0%
these values cross out our pointers now
our<00:05:21.440><c> right</c><00:05:21.680><c> pointer</c><00:05:22.080><c> is</c><00:05:22.160><c> going</c><00:05:22.240><c> to</c><00:05:22.320><c> be</c><00:05:22.479><c> over</c>

00:05:23.029 --> 00:05:23.039 align:start position:0%
our right pointer is going to be over
 

00:05:23.039 --> 00:05:24.950 align:start position:0%
our right pointer is going to be over
here<00:05:23.600><c> and</c><00:05:23.680><c> let's</c><00:05:23.840><c> say</c><00:05:24.000><c> we</c><00:05:24.160><c> ran</c><00:05:24.400><c> binary</c><00:05:24.720><c> search</c>

00:05:24.950 --> 00:05:24.960 align:start position:0%
here and let's say we ran binary search
 

00:05:24.960 --> 00:05:27.590 align:start position:0%
here and let's say we ran binary search
again<00:05:25.600><c> we</c><00:05:25.759><c> compute</c><00:05:26.160><c> the</c><00:05:26.320><c> mid</c><00:05:26.560><c> to</c><00:05:26.720><c> be</c><00:05:26.880><c> over</c><00:05:27.120><c> here</c>

00:05:27.590 --> 00:05:27.600 align:start position:0%
again we compute the mid to be over here
 

00:05:27.600 --> 00:05:30.710 align:start position:0%
again we compute the mid to be over here
we<00:05:27.759><c> check</c><00:05:28.080><c> is</c><00:05:28.320><c> this</c><00:05:28.880><c> 3</c><00:05:29.280><c> nope</c><00:05:29.680><c> 3</c><00:05:30.080><c> is</c><00:05:30.320><c> greater</c>

00:05:30.710 --> 00:05:30.720 align:start position:0%
we check is this 3 nope 3 is greater
 

00:05:30.720 --> 00:05:33.350 align:start position:0%
we check is this 3 nope 3 is greater
than<00:05:30.880><c> this</c><00:05:31.039><c> so</c><00:05:31.199><c> we</c><00:05:31.360><c> cross</c><00:05:31.919><c> this</c><00:05:32.240><c> out</c><00:05:32.720><c> and</c><00:05:33.120><c> we</c>

00:05:33.350 --> 00:05:33.360 align:start position:0%
than this so we cross this out and we
 

00:05:33.360 --> 00:05:35.189 align:start position:0%
than this so we cross this out and we
shift<00:05:33.600><c> our</c><00:05:33.759><c> left</c><00:05:34.000><c> pointer</c><00:05:34.400><c> over</c><00:05:34.639><c> here</c><00:05:34.960><c> left</c>

00:05:35.189 --> 00:05:35.199 align:start position:0%
shift our left pointer over here left
 

00:05:35.199 --> 00:05:36.790 align:start position:0%
shift our left pointer over here left
and<00:05:35.360><c> right</c><00:05:35.520><c> are</c><00:05:35.680><c> both</c><00:05:35.919><c> here</c><00:05:36.240><c> middle</c><00:05:36.560><c> is</c><00:05:36.720><c> going</c>

00:05:36.790 --> 00:05:36.800 align:start position:0%
and right are both here middle is going
 

00:05:36.800 --> 00:05:38.390 align:start position:0%
and right are both here middle is going
to<00:05:36.880><c> be</c><00:05:37.039><c> here</c><00:05:37.280><c> as</c><00:05:37.360><c> well</c><00:05:37.600><c> we're</c><00:05:37.759><c> gonna</c><00:05:37.919><c> see</c><00:05:38.080><c> okay</c>

00:05:38.390 --> 00:05:38.400 align:start position:0%
to be here as well we're gonna see okay
 

00:05:38.400 --> 00:05:40.550 align:start position:0%
to be here as well we're gonna see okay
either<00:05:38.639><c> this</c><00:05:38.800><c> has</c><00:05:39.039><c> to</c><00:05:39.120><c> be</c><00:05:39.280><c> three</c><00:05:39.600><c> or</c><00:05:39.840><c> nothing</c>

00:05:40.550 --> 00:05:40.560 align:start position:0%
either this has to be three or nothing
 

00:05:40.560 --> 00:05:42.070 align:start position:0%
either this has to be three or nothing
or<00:05:40.800><c> three</c><00:05:41.039><c> just</c><00:05:41.199><c> doesn't</c><00:05:41.520><c> exist</c><00:05:41.840><c> of</c><00:05:41.919><c> course</c>

00:05:42.070 --> 00:05:42.080 align:start position:0%
or three just doesn't exist of course
 

00:05:42.080 --> 00:05:44.150 align:start position:0%
or three just doesn't exist of course
this<00:05:42.320><c> is</c><00:05:42.479><c> three</c><00:05:42.960><c> so</c><00:05:43.120><c> we</c><00:05:43.280><c> found</c><00:05:43.600><c> it</c><00:05:43.840><c> we</c><00:05:44.000><c> can</c>

00:05:44.150 --> 00:05:44.160 align:start position:0%
this is three so we found it we can
 

00:05:44.160 --> 00:05:45.110 align:start position:0%
this is three so we found it we can
return

00:05:45.110 --> 00:05:45.120 align:start position:0%
return
 

00:05:45.120 --> 00:05:48.150 align:start position:0%
return
true<00:05:46.080><c> and</c><00:05:46.639><c> that's</c><00:05:46.880><c> the</c><00:05:47.039><c> entire</c><00:05:47.520><c> solution</c><00:05:47.919><c> so</c>

00:05:48.150 --> 00:05:48.160 align:start position:0%
true and that's the entire solution so
 

00:05:48.160 --> 00:05:50.390 align:start position:0%
true and that's the entire solution so
it's<00:05:48.240><c> just</c><00:05:48.479><c> a</c><00:05:48.639><c> double</c><00:05:49.039><c> binary</c><00:05:49.600><c> search</c><00:05:50.080><c> and</c><00:05:50.240><c> we</c>

00:05:50.390 --> 00:05:50.400 align:start position:0%
it's just a double binary search and we
 

00:05:50.400 --> 00:05:52.710 align:start position:0%
it's just a double binary search and we
can<00:05:50.639><c> implement</c><00:05:51.120><c> that</c><00:05:51.520><c> pretty</c><00:05:52.080><c> easily</c><00:05:52.479><c> once</c>

00:05:52.710 --> 00:05:52.720 align:start position:0%
can implement that pretty easily once
 

00:05:52.720 --> 00:05:54.710 align:start position:0%
can implement that pretty easily once
you<00:05:52.800><c> kind</c><00:05:52.960><c> of</c><00:05:53.039><c> know</c><00:05:53.280><c> how</c><00:05:53.440><c> to</c><00:05:53.600><c> do</c><00:05:53.840><c> binary</c><00:05:54.240><c> search</c>

00:05:54.710 --> 00:05:54.720 align:start position:0%
you kind of know how to do binary search
 

00:05:54.720 --> 00:05:55.909 align:start position:0%
you kind of know how to do binary search
and<00:05:54.880><c> if</c><00:05:55.039><c> you</c><00:05:55.120><c> don't</c><00:05:55.360><c> i'm</c><00:05:55.520><c> going</c><00:05:55.600><c> to</c><00:05:55.680><c> show</c><00:05:55.840><c> you</c>

00:05:55.909 --> 00:05:55.919 align:start position:0%
and if you don't i'm going to show you
 

00:05:55.919 --> 00:05:57.590 align:start position:0%
and if you don't i'm going to show you
how<00:05:56.000><c> to</c><00:05:56.080><c> do</c><00:05:56.240><c> it</c><00:05:56.400><c> right</c><00:05:56.560><c> now</c><00:05:56.800><c> so</c><00:05:56.960><c> now</c><00:05:57.199><c> let's</c><00:05:57.440><c> get</c>

00:05:57.590 --> 00:05:57.600 align:start position:0%
how to do it right now so now let's get
 

00:05:57.600 --> 00:05:59.430 align:start position:0%
how to do it right now so now let's get
into<00:05:57.840><c> the</c><00:05:58.080><c> code</c><00:05:58.400><c> so</c><00:05:58.560><c> the</c><00:05:58.720><c> first</c><00:05:59.039><c> thing</c><00:05:59.199><c> i</c><00:05:59.280><c> like</c>

00:05:59.430 --> 00:05:59.440 align:start position:0%
into the code so the first thing i like
 

00:05:59.440 --> 00:06:01.189 align:start position:0%
into the code so the first thing i like
to<00:05:59.600><c> do</c><00:05:59.759><c> is</c><00:05:59.919><c> actually</c><00:06:00.240><c> get</c><00:06:00.400><c> the</c><00:06:00.560><c> dimensions</c><00:06:01.120><c> of</c>

00:06:01.189 --> 00:06:01.199 align:start position:0%
to do is actually get the dimensions of
 

00:06:01.199 --> 00:06:03.510 align:start position:0%
to do is actually get the dimensions of
the<00:06:01.360><c> matrix</c><00:06:01.759><c> so</c><00:06:01.919><c> let's</c><00:06:02.080><c> get</c><00:06:02.240><c> the</c><00:06:02.479><c> rows</c><00:06:03.199><c> and</c><00:06:03.360><c> the</c>

00:06:03.510 --> 00:06:03.520 align:start position:0%
the matrix so let's get the rows and the
 

00:06:03.520 --> 00:06:05.510 align:start position:0%
the matrix so let's get the rows and the
number<00:06:03.759><c> of</c><00:06:04.000><c> columns</c><00:06:04.560><c> in</c><00:06:04.639><c> this</c><00:06:04.880><c> matrix</c><00:06:05.360><c> we</c><00:06:05.440><c> can</c>

00:06:05.510 --> 00:06:05.520 align:start position:0%
number of columns in this matrix we can
 

00:06:05.520 --> 00:06:07.270 align:start position:0%
number of columns in this matrix we can
do<00:06:05.680><c> that</c><00:06:05.919><c> pretty</c><00:06:06.319><c> easily</c><00:06:06.639><c> because</c><00:06:06.880><c> we</c><00:06:07.039><c> know</c>

00:06:07.270 --> 00:06:07.280 align:start position:0%
do that pretty easily because we know
 

00:06:07.280 --> 00:06:09.350 align:start position:0%
do that pretty easily because we know
for<00:06:07.520><c> sure</c><00:06:07.759><c> that</c><00:06:07.919><c> the</c><00:06:08.000><c> matrix</c><00:06:08.560><c> is</c><00:06:08.720><c> always</c><00:06:09.120><c> going</c>

00:06:09.350 --> 00:06:09.360 align:start position:0%
for sure that the matrix is always going
 

00:06:09.360 --> 00:06:12.230 align:start position:0%
for sure that the matrix is always going
to<00:06:09.600><c> be</c><00:06:10.240><c> non-empty</c><00:06:11.360><c> and</c><00:06:11.520><c> now</c><00:06:11.759><c> we're</c><00:06:12.000><c> going</c><00:06:12.080><c> to</c>

00:06:12.230 --> 00:06:12.240 align:start position:0%
to be non-empty and now we're going to
 

00:06:12.240 --> 00:06:14.150 align:start position:0%
to be non-empty and now we're going to
do<00:06:12.400><c> the</c><00:06:12.720><c> first</c><00:06:13.120><c> binary</c><00:06:13.600><c> search</c><00:06:13.919><c> we're</c><00:06:14.080><c> going</c>

00:06:14.150 --> 00:06:14.160 align:start position:0%
do the first binary search we're going
 

00:06:14.160 --> 00:06:16.550 align:start position:0%
do the first binary search we're going
to<00:06:14.319><c> look</c><00:06:14.639><c> for</c><00:06:14.800><c> the</c><00:06:15.199><c> row</c><00:06:15.600><c> that</c><00:06:15.759><c> we</c><00:06:15.919><c> need</c><00:06:16.160><c> to</c><00:06:16.319><c> find</c>

00:06:16.550 --> 00:06:16.560 align:start position:0%
to look for the row that we need to find
 

00:06:16.560 --> 00:06:18.309 align:start position:0%
to look for the row that we need to find
so<00:06:16.800><c> i'm</c><00:06:16.880><c> going</c><00:06:16.880><c> to</c><00:06:17.039><c> have</c><00:06:17.199><c> two</c><00:06:17.440><c> pointers</c><00:06:18.080><c> one</c>

00:06:18.309 --> 00:06:18.319 align:start position:0%
so i'm going to have two pointers one
 

00:06:18.319 --> 00:06:20.790 align:start position:0%
so i'm going to have two pointers one
for<00:06:18.479><c> the</c><00:06:18.720><c> top</c><00:06:19.039><c> row</c><00:06:19.600><c> and</c><00:06:19.759><c> one</c><00:06:20.000><c> for</c><00:06:20.160><c> the</c><00:06:20.400><c> bottom</c>

00:06:20.790 --> 00:06:20.800 align:start position:0%
for the top row and one for the bottom
 

00:06:20.800 --> 00:06:23.590 align:start position:0%
for the top row and one for the bottom
row<00:06:21.280><c> top</c><00:06:21.600><c> row</c><00:06:21.919><c> is</c><00:06:22.160><c> zero</c><00:06:22.639><c> the</c><00:06:22.800><c> bottom</c><00:06:23.199><c> row</c><00:06:23.440><c> is</c>

00:06:23.590 --> 00:06:23.600 align:start position:0%
row top row is zero the bottom row is
 

00:06:23.600 --> 00:06:26.230 align:start position:0%
row top row is zero the bottom row is
going<00:06:23.680><c> to</c><00:06:23.759><c> be</c><00:06:24.319><c> the</c><00:06:24.479><c> number</c><00:06:24.720><c> of</c><00:06:24.800><c> rows</c><00:06:25.280><c> minus</c><00:06:25.759><c> one</c>

00:06:26.230 --> 00:06:26.240 align:start position:0%
going to be the number of rows minus one
 

00:06:26.240 --> 00:06:27.670 align:start position:0%
going to be the number of rows minus one
so<00:06:26.400><c> now</c><00:06:26.560><c> we're</c><00:06:26.720><c> just</c><00:06:26.880><c> going</c><00:06:27.039><c> to</c><00:06:27.199><c> continue</c><00:06:27.600><c> to</c>

00:06:27.670 --> 00:06:27.680 align:start position:0%
so now we're just going to continue to
 

00:06:27.680 --> 00:06:30.629 align:start position:0%
so now we're just going to continue to
do<00:06:27.840><c> the</c><00:06:28.000><c> binary</c><00:06:28.319><c> search</c><00:06:28.639><c> until</c><00:06:29.039><c> we</c><00:06:29.680><c> can</c><00:06:30.160><c> either</c>

00:06:30.629 --> 00:06:30.639 align:start position:0%
do the binary search until we can either
 

00:06:30.639 --> 00:06:33.670 align:start position:0%
do the binary search until we can either
find<00:06:30.960><c> the</c><00:06:31.120><c> target</c><00:06:31.600><c> row</c><00:06:31.919><c> or</c><00:06:32.479><c> we</c><00:06:33.120><c> we</c><00:06:33.280><c> figure</c><00:06:33.600><c> out</c>

00:06:33.670 --> 00:06:33.680 align:start position:0%
find the target row or we we figure out
 

00:06:33.680 --> 00:06:36.390 align:start position:0%
find the target row or we we figure out
that<00:06:33.840><c> the</c><00:06:34.000><c> target</c><00:06:34.479><c> row</c><00:06:34.880><c> does</c><00:06:35.120><c> not</c><00:06:35.360><c> even</c><00:06:35.680><c> exist</c>

00:06:36.390 --> 00:06:36.400 align:start position:0%
that the target row does not even exist
 

00:06:36.400 --> 00:06:39.749 align:start position:0%
that the target row does not even exist
in<00:06:36.639><c> the</c><00:06:36.800><c> binary</c><00:06:37.280><c> search</c><00:06:37.840><c> so</c><00:06:38.319><c> one</c><00:06:38.800><c> case</c><00:06:39.280><c> is</c><00:06:39.520><c> that</c>

00:06:39.749 --> 00:06:39.759 align:start position:0%
in the binary search so one case is that
 

00:06:39.759 --> 00:06:43.110 align:start position:0%
in the binary search so one case is that
the<00:06:40.080><c> target</c><00:06:40.720><c> value</c><00:06:41.520><c> is</c><00:06:41.840><c> even</c><00:06:42.479><c> greater</c><00:06:42.960><c> than</c>

00:06:43.110 --> 00:06:43.120 align:start position:0%
the target value is even greater than
 

00:06:43.120 --> 00:06:46.230 align:start position:0%
the target value is even greater than
the<00:06:43.440><c> largest</c><00:06:44.000><c> value</c><00:06:44.560><c> in</c><00:06:44.960><c> this</c><00:06:45.360><c> row</c><00:06:45.680><c> so</c><00:06:45.919><c> let's</c>

00:06:46.230 --> 00:06:46.240 align:start position:0%
the largest value in this row so let's
 

00:06:46.240 --> 00:06:48.469 align:start position:0%
the largest value in this row so let's
go<00:06:46.479><c> to</c><00:06:46.639><c> that</c><00:06:46.960><c> row</c><00:06:47.280><c> okay</c><00:06:47.520><c> first</c><00:06:48.000><c> before</c><00:06:48.240><c> i</c><00:06:48.319><c> do</c>

00:06:48.469 --> 00:06:48.479 align:start position:0%
go to that row okay first before i do
 

00:06:48.479 --> 00:06:50.790 align:start position:0%
go to that row okay first before i do
that<00:06:48.560><c> let</c><00:06:48.639><c> me</c><00:06:48.800><c> actually</c><00:06:49.039><c> compute</c><00:06:49.520><c> the</c><00:06:49.680><c> row</c><00:06:50.160><c> so</c>

00:06:50.790 --> 00:06:50.800 align:start position:0%
that let me actually compute the row so
 

00:06:50.800 --> 00:06:52.870 align:start position:0%
that let me actually compute the row so
we<00:06:51.039><c> want</c><00:06:51.280><c> the</c><00:06:51.520><c> middle</c><00:06:51.919><c> row</c><00:06:52.400><c> in</c><00:06:52.479><c> this</c><00:06:52.639><c> case</c>

00:06:52.870 --> 00:06:52.880 align:start position:0%
we want the middle row in this case
 

00:06:52.880 --> 00:06:55.909 align:start position:0%
we want the middle row in this case
we'll<00:06:53.120><c> take</c><00:06:53.280><c> the</c><00:06:53.520><c> top</c><00:06:54.160><c> and</c><00:06:54.479><c> bottom</c><00:06:55.199><c> and</c><00:06:55.520><c> divide</c>

00:06:55.909 --> 00:06:55.919 align:start position:0%
we'll take the top and bottom and divide
 

00:06:55.919 --> 00:06:57.189 align:start position:0%
we'll take the top and bottom and divide
it<00:06:56.080><c> by</c><00:06:56.400><c> two</c>

00:06:57.189 --> 00:06:57.199 align:start position:0%
it by two
 

00:06:57.199 --> 00:06:59.110 align:start position:0%
it by two
that's<00:06:57.440><c> kind</c><00:06:57.599><c> of</c><00:06:57.680><c> how</c><00:06:57.919><c> binary</c><00:06:58.240><c> search</c><00:06:58.560><c> usually</c>

00:06:59.110 --> 00:06:59.120 align:start position:0%
that's kind of how binary search usually
 

00:06:59.120 --> 00:07:02.150 align:start position:0%
that's kind of how binary search usually
goes<00:06:59.520><c> right</c><00:06:59.759><c> so</c><00:07:00.400><c> and</c><00:07:00.560><c> then</c><00:07:01.360><c> we</c><00:07:01.520><c> have</c><00:07:01.680><c> that</c><00:07:01.919><c> row</c>

00:07:02.150 --> 00:07:02.160 align:start position:0%
goes right so and then we have that row
 

00:07:02.160 --> 00:07:03.510 align:start position:0%
goes right so and then we have that row
so<00:07:02.319><c> in</c><00:07:02.400><c> our</c><00:07:02.560><c> matrix</c><00:07:02.960><c> we're</c><00:07:03.039><c> going</c><00:07:03.120><c> to</c><00:07:03.280><c> look</c><00:07:03.440><c> at</c>

00:07:03.510 --> 00:07:03.520 align:start position:0%
so in our matrix we're going to look at
 

00:07:03.520 --> 00:07:05.029 align:start position:0%
so in our matrix we're going to look at
that<00:07:03.759><c> row</c><00:07:04.000><c> and</c><00:07:04.160><c> we're</c><00:07:04.319><c> going</c><00:07:04.400><c> to</c><00:07:04.479><c> look</c><00:07:04.639><c> at</c><00:07:04.800><c> the</c>

00:07:05.029 --> 00:07:05.039 align:start position:0%
that row and we're going to look at the
 

00:07:05.039 --> 00:07:06.950 align:start position:0%
that row and we're going to look at the
right<00:07:05.360><c> most</c><00:07:05.680><c> value</c><00:07:06.080><c> in</c><00:07:06.160><c> python</c><00:07:06.639><c> you</c><00:07:06.720><c> can</c><00:07:06.800><c> do</c>

00:07:06.950 --> 00:07:06.960 align:start position:0%
right most value in python you can do
 

00:07:06.960 --> 00:07:08.790 align:start position:0%
right most value in python you can do
that<00:07:07.120><c> with</c><00:07:07.280><c> negative</c><00:07:07.759><c> 1</c><00:07:08.160><c> but</c><00:07:08.319><c> we</c><00:07:08.400><c> could</c><00:07:08.560><c> also</c>

00:07:08.790 --> 00:07:08.800 align:start position:0%
that with negative 1 but we could also
 

00:07:08.800 --> 00:07:11.430 align:start position:0%
that with negative 1 but we could also
just<00:07:08.960><c> do</c><00:07:09.199><c> number</c><00:07:09.520><c> of</c><00:07:09.759><c> rows</c><00:07:10.400><c> minus</c><00:07:11.199><c> or</c><00:07:11.360><c> the</c>

00:07:11.430 --> 00:07:11.440 align:start position:0%
just do number of rows minus or the
 

00:07:11.440 --> 00:07:13.909 align:start position:0%
just do number of rows minus or the
number<00:07:11.680><c> of</c><00:07:11.840><c> columns</c><00:07:12.319><c> minus</c><00:07:12.720><c> 1</c><00:07:12.960><c> but</c><00:07:13.360><c> in</c><00:07:13.520><c> python</c>

00:07:13.909 --> 00:07:13.919 align:start position:0%
number of columns minus 1 but in python
 

00:07:13.919 --> 00:07:15.029 align:start position:0%
number of columns minus 1 but in python
it's<00:07:14.080><c> a</c><00:07:14.160><c> little</c><00:07:14.319><c> bit</c><00:07:14.479><c> easier</c><00:07:14.720><c> so</c><00:07:14.880><c> we're</c><00:07:14.960><c> going</c>

00:07:15.029 --> 00:07:15.039 align:start position:0%
it's a little bit easier so we're going
 

00:07:15.039 --> 00:07:17.029 align:start position:0%
it's a little bit easier so we're going
to<00:07:15.199><c> check</c><00:07:15.440><c> is</c><00:07:15.520><c> this</c><00:07:15.680><c> target</c><00:07:16.000><c> value</c><00:07:16.639><c> greater</c>

00:07:17.029 --> 00:07:17.039 align:start position:0%
to check is this target value greater
 

00:07:17.039 --> 00:07:19.830 align:start position:0%
to check is this target value greater
than<00:07:17.199><c> the</c><00:07:17.360><c> largest</c><00:07:17.759><c> value</c><00:07:18.319><c> in</c><00:07:18.639><c> this</c><00:07:19.039><c> row</c><00:07:19.599><c> if</c>

00:07:19.830 --> 00:07:19.840 align:start position:0%
than the largest value in this row if
 

00:07:19.840 --> 00:07:21.749 align:start position:0%
than the largest value in this row if
that's<00:07:20.160><c> the</c><00:07:20.319><c> case</c><00:07:20.720><c> what</c><00:07:20.960><c> are</c><00:07:21.039><c> we</c><00:07:21.120><c> going</c><00:07:21.280><c> to</c><00:07:21.440><c> do</c>

00:07:21.749 --> 00:07:21.759 align:start position:0%
that's the case what are we going to do
 

00:07:21.759 --> 00:07:23.670 align:start position:0%
that's the case what are we going to do
well<00:07:22.000><c> then</c><00:07:22.160><c> we</c><00:07:22.319><c> need</c><00:07:22.479><c> to</c><00:07:22.560><c> look</c><00:07:22.800><c> at</c><00:07:22.960><c> rows</c><00:07:23.440><c> with</c>

00:07:23.670 --> 00:07:23.680 align:start position:0%
well then we need to look at rows with
 

00:07:23.680 --> 00:07:25.670 align:start position:0%
well then we need to look at rows with
even<00:07:24.080><c> larger</c><00:07:24.560><c> values</c><00:07:25.120><c> so</c><00:07:25.280><c> what</c><00:07:25.440><c> we're</c><00:07:25.599><c> going</c>

00:07:25.670 --> 00:07:25.680 align:start position:0%
even larger values so what we're going
 

00:07:25.680 --> 00:07:28.230 align:start position:0%
even larger values so what we're going
to<00:07:25.759><c> say</c><00:07:26.080><c> is</c><00:07:26.319><c> our</c><00:07:26.960><c> bottom</c><00:07:27.360><c> row</c><00:07:27.680><c> is</c><00:07:27.840><c> going</c><00:07:27.919><c> to</c><00:07:28.080><c> end</c>

00:07:28.230 --> 00:07:28.240 align:start position:0%
to say is our bottom row is going to end
 

00:07:28.240 --> 00:07:31.270 align:start position:0%
to say is our bottom row is going to end
up<00:07:28.400><c> being</c><00:07:29.039><c> the</c><00:07:29.360><c> the</c><00:07:29.599><c> current</c><00:07:30.000><c> row</c><00:07:30.479><c> plus</c><00:07:30.960><c> one</c>

00:07:31.270 --> 00:07:31.280 align:start position:0%
up being the the current row plus one
 

00:07:31.280 --> 00:07:33.270 align:start position:0%
up being the the current row plus one
because<00:07:31.520><c> now</c><00:07:31.680><c> we</c><00:07:31.840><c> want</c><00:07:31.919><c> to</c><00:07:32.080><c> look</c><00:07:32.240><c> at</c><00:07:32.400><c> rows</c><00:07:32.960><c> that</c>

00:07:33.270 --> 00:07:33.280 align:start position:0%
because now we want to look at rows that
 

00:07:33.280 --> 00:07:36.710 align:start position:0%
because now we want to look at rows that
are<00:07:33.840><c> uh</c><00:07:34.080><c> larger</c><00:07:34.479><c> than</c><00:07:34.639><c> this</c><00:07:34.880><c> row</c><00:07:35.440><c> else</c><00:07:36.080><c> if</c><00:07:36.479><c> the</c>

00:07:36.710 --> 00:07:36.720 align:start position:0%
are uh larger than this row else if the
 

00:07:36.720 --> 00:07:38.710 align:start position:0%
are uh larger than this row else if the
exact<00:07:37.120><c> opposite</c><00:07:37.680><c> happens</c><00:07:37.919><c> so</c><00:07:38.080><c> let</c><00:07:38.240><c> me</c><00:07:38.400><c> copy</c>

00:07:38.710 --> 00:07:38.720 align:start position:0%
exact opposite happens so let me copy
 

00:07:38.720 --> 00:07:40.550 align:start position:0%
exact opposite happens so let me copy
and<00:07:38.800><c> paste</c><00:07:39.039><c> this</c><00:07:39.280><c> if</c><00:07:39.440><c> the</c><00:07:39.599><c> target</c><00:07:39.919><c> value</c><00:07:40.319><c> was</c>

00:07:40.550 --> 00:07:40.560 align:start position:0%
and paste this if the target value was
 

00:07:40.560 --> 00:07:44.710 align:start position:0%
and paste this if the target value was
even<00:07:41.120><c> less</c><00:07:41.919><c> than</c><00:07:42.639><c> the</c><00:07:43.199><c> leftmost</c><00:07:44.000><c> value</c><00:07:44.479><c> in</c><00:07:44.560><c> the</c>

00:07:44.710 --> 00:07:44.720 align:start position:0%
even less than the leftmost value in the
 

00:07:44.720 --> 00:07:47.350 align:start position:0%
even less than the leftmost value in the
array<00:07:45.199><c> aka</c><00:07:45.680><c> the</c><00:07:45.840><c> target</c><00:07:46.160><c> value</c><00:07:46.479><c> was</c><00:07:46.720><c> smaller</c>

00:07:47.350 --> 00:07:47.360 align:start position:0%
array aka the target value was smaller
 

00:07:47.360 --> 00:07:49.749 align:start position:0%
array aka the target value was smaller
than<00:07:47.599><c> the</c><00:07:47.759><c> smallest</c><00:07:48.400><c> value</c><00:07:48.879><c> in</c><00:07:48.960><c> this</c><00:07:49.280><c> row</c><00:07:49.599><c> and</c>

00:07:49.749 --> 00:07:49.759 align:start position:0%
than the smallest value in this row and
 

00:07:49.759 --> 00:07:51.909 align:start position:0%
than the smallest value in this row and
that's<00:07:50.240><c> in</c><00:07:50.400><c> that</c><00:07:50.560><c> case</c><00:07:51.039><c> we</c><00:07:51.199><c> need</c><00:07:51.360><c> to</c><00:07:51.520><c> look</c><00:07:51.680><c> at</c>

00:07:51.909 --> 00:07:51.919 align:start position:0%
that's in that case we need to look at
 

00:07:51.919 --> 00:07:53.990 align:start position:0%
that's in that case we need to look at
rows<00:07:52.400><c> with</c><00:07:52.720><c> smaller</c><00:07:53.280><c> values</c><00:07:53.680><c> so</c><00:07:53.759><c> we're</c><00:07:53.919><c> going</c>

00:07:53.990 --> 00:07:54.000 align:start position:0%
rows with smaller values so we're going
 

00:07:54.000 --> 00:07:56.070 align:start position:0%
rows with smaller values so we're going
to<00:07:54.080><c> shift</c><00:07:54.400><c> our</c><00:07:54.639><c> top</c><00:07:55.120><c> pointer</c><00:07:55.680><c> actually</c><00:07:56.000><c> i</c>

00:07:56.070 --> 00:07:56.080 align:start position:0%
to shift our top pointer actually i
 

00:07:56.080 --> 00:07:58.230 align:start position:0%
to shift our top pointer actually i
think<00:07:56.240><c> i</c><00:07:56.319><c> just</c><00:07:56.400><c> did</c><00:07:56.639><c> it</c><00:07:56.720><c> backwards</c><00:07:57.199><c> so</c><00:07:57.759><c> when</c><00:07:58.000><c> we</c>

00:07:58.230 --> 00:07:58.240 align:start position:0%
think i just did it backwards so when we
 

00:07:58.240 --> 00:07:59.990 align:start position:0%
think i just did it backwards so when we
look<00:07:58.479><c> for</c><00:07:58.720><c> larger</c><00:07:59.120><c> values</c><00:07:59.520><c> we</c><00:07:59.599><c> actually</c><00:07:59.840><c> want</c>

00:07:59.990 --> 00:08:00.000 align:start position:0%
look for larger values we actually want
 

00:08:00.000 --> 00:08:01.990 align:start position:0%
look for larger values we actually want
to<00:08:00.080><c> take</c><00:08:00.319><c> our</c><00:08:00.479><c> top</c><00:08:00.720><c> pointer</c><00:08:01.360><c> and</c><00:08:01.440><c> then</c><00:08:01.680><c> shift</c>

00:08:01.990 --> 00:08:02.000 align:start position:0%
to take our top pointer and then shift
 

00:08:02.000 --> 00:08:04.309 align:start position:0%
to take our top pointer and then shift
it<00:08:02.240><c> down</c><00:08:02.720><c> because</c><00:08:03.199><c> when</c><00:08:03.360><c> you</c><00:08:03.440><c> go</c><00:08:03.759><c> down</c><00:08:04.080><c> in</c><00:08:04.160><c> the</c>

00:08:04.309 --> 00:08:04.319 align:start position:0%
it down because when you go down in the
 

00:08:04.319 --> 00:08:06.230 align:start position:0%
it down because when you go down in the
matrix<00:08:04.800><c> is</c><00:08:04.879><c> when</c><00:08:05.039><c> you</c><00:08:05.199><c> actually</c><00:08:05.520><c> get</c><00:08:05.840><c> larger</c>

00:08:06.230 --> 00:08:06.240 align:start position:0%
matrix is when you actually get larger
 

00:08:06.240 --> 00:08:08.309 align:start position:0%
matrix is when you actually get larger
values<00:08:06.960><c> and</c><00:08:07.360><c> when</c><00:08:07.520><c> we</c><00:08:07.759><c> if</c><00:08:07.840><c> we</c><00:08:08.000><c> want</c><00:08:08.080><c> to</c><00:08:08.160><c> look</c>

00:08:08.309 --> 00:08:08.319 align:start position:0%
values and when we if we want to look
 

00:08:08.319 --> 00:08:09.990 align:start position:0%
values and when we if we want to look
for<00:08:08.560><c> smaller</c><00:08:09.039><c> values</c><00:08:09.520><c> we're</c><00:08:09.599><c> going</c><00:08:09.680><c> to</c><00:08:09.759><c> take</c>

00:08:09.990 --> 00:08:10.000 align:start position:0%
for smaller values we're going to take
 

00:08:10.000 --> 00:08:12.950 align:start position:0%
for smaller values we're going to take
our<00:08:10.319><c> bottom</c><00:08:10.720><c> pointer</c><00:08:11.280><c> and</c><00:08:11.440><c> then</c><00:08:11.680><c> shift</c><00:08:12.080><c> it</c><00:08:12.479><c> up</c>

00:08:12.950 --> 00:08:12.960 align:start position:0%
our bottom pointer and then shift it up
 

00:08:12.960 --> 00:08:14.950 align:start position:0%
our bottom pointer and then shift it up
in<00:08:13.120><c> that</c><00:08:13.360><c> case</c><00:08:13.599><c> we</c><00:08:13.759><c> would</c><00:08:13.919><c> want</c><00:08:14.080><c> to</c><00:08:14.479><c> set</c><00:08:14.720><c> it</c><00:08:14.800><c> to</c>

00:08:14.950 --> 00:08:14.960 align:start position:0%
in that case we would want to set it to
 

00:08:14.960 --> 00:08:18.390 align:start position:0%
in that case we would want to set it to
be<00:08:15.120><c> row</c><00:08:15.759><c> minus</c><00:08:16.560><c> one</c><00:08:17.199><c> so</c><00:08:17.360><c> that's</c><00:08:17.599><c> the</c><00:08:17.759><c> case</c><00:08:18.160><c> if</c>

00:08:18.390 --> 00:08:18.400 align:start position:0%
be row minus one so that's the case if
 

00:08:18.400 --> 00:08:20.710 align:start position:0%
be row minus one so that's the case if
the<00:08:18.560><c> target</c><00:08:18.960><c> value</c><00:08:19.599><c> was</c><00:08:19.840><c> either</c><00:08:20.080><c> too</c><00:08:20.240><c> big</c><00:08:20.560><c> or</c>

00:08:20.710 --> 00:08:20.720 align:start position:0%
the target value was either too big or
 

00:08:20.720 --> 00:08:22.950 align:start position:0%
the target value was either too big or
too<00:08:20.879><c> small</c><00:08:21.280><c> if</c><00:08:21.440><c> neither</c><00:08:21.840><c> of</c><00:08:22.000><c> those</c><00:08:22.319><c> evaluates</c>

00:08:22.950 --> 00:08:22.960 align:start position:0%
too small if neither of those evaluates
 

00:08:22.960 --> 00:08:25.430 align:start position:0%
too small if neither of those evaluates
to<00:08:23.199><c> true</c><00:08:23.440><c> that</c><00:08:23.680><c> means</c><00:08:24.240><c> that</c><00:08:24.479><c> the</c><00:08:24.639><c> target</c><00:08:25.039><c> value</c>

00:08:25.430 --> 00:08:25.440 align:start position:0%
to true that means that the target value
 

00:08:25.440 --> 00:08:26.550 align:start position:0%
to true that means that the target value
is<00:08:25.599><c> actually</c>

00:08:26.550 --> 00:08:26.560 align:start position:0%
is actually
 

00:08:26.560 --> 00:08:29.029 align:start position:0%
is actually
actually<00:08:26.960><c> does</c><00:08:27.440><c> fall</c><00:08:27.759><c> within</c><00:08:28.319><c> this</c><00:08:28.639><c> current</c>

00:08:29.029 --> 00:08:29.039 align:start position:0%
actually does fall within this current
 

00:08:29.039 --> 00:08:31.430 align:start position:0%
actually does fall within this current
row<00:08:29.360><c> in</c><00:08:29.440><c> that</c><00:08:29.599><c> case</c><00:08:29.840><c> we</c><00:08:30.000><c> just</c><00:08:30.160><c> want</c><00:08:30.319><c> to</c><00:08:30.639><c> break</c>

00:08:31.430 --> 00:08:31.440 align:start position:0%
row in that case we just want to break
 

00:08:31.440 --> 00:08:34.310 align:start position:0%
row in that case we just want to break
out<00:08:31.680><c> of</c><00:08:31.919><c> this</c><00:08:32.560><c> while</c><00:08:32.959><c> loop</c><00:08:33.680><c> and</c><00:08:33.839><c> then</c><00:08:34.080><c> we</c><00:08:34.159><c> can</c>

00:08:34.310 --> 00:08:34.320 align:start position:0%
out of this while loop and then we can
 

00:08:34.320 --> 00:08:36.550 align:start position:0%
out of this while loop and then we can
do<00:08:34.479><c> the</c><00:08:34.800><c> second</c><00:08:35.279><c> portion</c><00:08:35.680><c> of</c><00:08:35.839><c> the</c><00:08:36.000><c> binary</c>

00:08:36.550 --> 00:08:36.560 align:start position:0%
do the second portion of the binary
 

00:08:36.560 --> 00:08:39.829 align:start position:0%
do the second portion of the binary
search<00:08:37.039><c> now</c><00:08:37.200><c> it's</c><00:08:37.599><c> possible</c><00:08:38.159><c> that</c><00:08:38.479><c> if</c><00:08:38.880><c> we</c><00:08:39.519><c> uh</c>

00:08:39.829 --> 00:08:39.839 align:start position:0%
search now it's possible that if we uh
 

00:08:39.839 --> 00:08:42.469 align:start position:0%
search now it's possible that if we uh
did<00:08:40.000><c> not</c><00:08:40.240><c> break</c><00:08:40.560><c> out</c><00:08:41.120><c> maybe</c><00:08:41.440><c> we</c><00:08:41.599><c> just</c><00:08:42.080><c> created</c>

00:08:42.469 --> 00:08:42.479 align:start position:0%
did not break out maybe we just created
 

00:08:42.479 --> 00:08:44.870 align:start position:0%
did not break out maybe we just created
an<00:08:42.719><c> invalid</c><00:08:43.279><c> condition</c><00:08:43.839><c> where</c><00:08:44.080><c> we</c><00:08:44.480><c> figured</c>

00:08:44.870 --> 00:08:44.880 align:start position:0%
an invalid condition where we figured
 

00:08:44.880 --> 00:08:46.550 align:start position:0%
an invalid condition where we figured
out<00:08:44.959><c> that</c><00:08:45.120><c> the</c><00:08:45.279><c> top</c><00:08:45.600><c> and</c><00:08:45.680><c> bottom</c>

00:08:46.550 --> 00:08:46.560 align:start position:0%
out that the top and bottom
 

00:08:46.560 --> 00:08:48.230 align:start position:0%
out that the top and bottom
pointers<00:08:46.959><c> are</c><00:08:47.200><c> invalid</c><00:08:47.680><c> right</c><00:08:47.839><c> then</c><00:08:48.080><c> our</c>

00:08:48.230 --> 00:08:48.240 align:start position:0%
pointers are invalid right then our
 

00:08:48.240 --> 00:08:49.670 align:start position:0%
pointers are invalid right then our
while<00:08:48.480><c> loop</c><00:08:48.640><c> would</c><00:08:48.880><c> stop</c><00:08:49.120><c> and</c><00:08:49.279><c> what</c><00:08:49.440><c> that</c>

00:08:49.670 --> 00:08:49.680 align:start position:0%
while loop would stop and what that
 

00:08:49.680 --> 00:08:51.990 align:start position:0%
while loop would stop and what that
would<00:08:49.920><c> tell</c><00:08:50.240><c> us</c><00:08:50.560><c> is</c><00:08:50.720><c> that</c><00:08:50.880><c> we</c><00:08:51.040><c> crossed</c><00:08:51.600><c> out</c>

00:08:51.990 --> 00:08:52.000 align:start position:0%
would tell us is that we crossed out
 

00:08:52.000 --> 00:08:54.150 align:start position:0%
would tell us is that we crossed out
every<00:08:52.399><c> single</c><00:08:52.800><c> row</c><00:08:53.120><c> in</c><00:08:53.200><c> the</c><00:08:53.279><c> matrix</c><00:08:53.760><c> and</c><00:08:53.920><c> none</c>

00:08:54.150 --> 00:08:54.160 align:start position:0%
every single row in the matrix and none
 

00:08:54.160 --> 00:08:56.630 align:start position:0%
every single row in the matrix and none
of<00:08:54.240><c> the</c><00:08:54.480><c> rows</c><00:08:55.200><c> contained</c><00:08:55.760><c> the</c><00:08:55.920><c> target</c><00:08:56.320><c> value</c>

00:08:56.630 --> 00:08:56.640 align:start position:0%
of the rows contained the target value
 

00:08:56.640 --> 00:08:59.110 align:start position:0%
of the rows contained the target value
in<00:08:56.800><c> that</c><00:08:57.120><c> case</c><00:08:57.839><c> we</c><00:08:58.080><c> have</c><00:08:58.240><c> to</c><00:08:58.320><c> return</c><00:08:58.800><c> false</c>

00:08:59.110 --> 00:08:59.120 align:start position:0%
in that case we have to return false
 

00:08:59.120 --> 00:09:01.910 align:start position:0%
in that case we have to return false
immediately<00:08:59.680><c> so</c><00:08:59.920><c> basically</c><00:09:00.320><c> if</c><00:09:00.640><c> not</c><00:09:01.200><c> top</c><00:09:01.680><c> is</c>

00:09:01.910 --> 00:09:01.920 align:start position:0%
immediately so basically if not top is
 

00:09:01.920 --> 00:09:05.030 align:start position:0%
immediately so basically if not top is
less<00:09:02.160><c> than</c><00:09:02.480><c> or</c><00:09:02.800><c> equal</c><00:09:03.519><c> to</c><00:09:03.839><c> bottom</c><00:09:04.560><c> that</c><00:09:04.720><c> means</c>

00:09:05.030 --> 00:09:05.040 align:start position:0%
less than or equal to bottom that means
 

00:09:05.040 --> 00:09:07.670 align:start position:0%
less than or equal to bottom that means
that<00:09:05.440><c> none</c><00:09:05.839><c> of</c><00:09:06.000><c> the</c><00:09:06.240><c> rows</c><00:09:06.800><c> contain</c><00:09:07.200><c> the</c><00:09:07.279><c> target</c>

00:09:07.670 --> 00:09:07.680 align:start position:0%
that none of the rows contain the target
 

00:09:07.680 --> 00:09:09.030 align:start position:0%
that none of the rows contain the target
value<00:09:07.920><c> and</c><00:09:08.000><c> then</c><00:09:08.160><c> we</c><00:09:08.240><c> can</c><00:09:08.399><c> just</c><00:09:08.560><c> immediately</c>

00:09:09.030 --> 00:09:09.040 align:start position:0%
value and then we can just immediately
 

00:09:09.040 --> 00:09:11.750 align:start position:0%
value and then we can just immediately
return<00:09:09.440><c> false</c><00:09:10.160><c> if</c><00:09:10.240><c> that's</c><00:09:10.560><c> not</c><00:09:10.800><c> the</c><00:09:10.959><c> case</c><00:09:11.600><c> then</c>

00:09:11.750 --> 00:09:11.760 align:start position:0%
return false if that's not the case then
 

00:09:11.760 --> 00:09:13.350 align:start position:0%
return false if that's not the case then
we're<00:09:12.000><c> going</c><00:09:12.080><c> to</c><00:09:12.160><c> move</c><00:09:12.399><c> on</c><00:09:12.560><c> to</c><00:09:12.720><c> the</c><00:09:12.880><c> second</c>

00:09:13.350 --> 00:09:13.360 align:start position:0%
we're going to move on to the second
 

00:09:13.360 --> 00:09:16.630 align:start position:0%
we're going to move on to the second
binary<00:09:13.839><c> search</c><00:09:14.240><c> portion</c><00:09:15.200><c> and</c><00:09:15.839><c> we're</c><00:09:16.000><c> going</c><00:09:16.160><c> to</c>

00:09:16.630 --> 00:09:16.640 align:start position:0%
binary search portion and we're going to
 

00:09:16.640 --> 00:09:18.949 align:start position:0%
binary search portion and we're going to
run<00:09:16.880><c> binary</c><00:09:17.279><c> search</c><00:09:17.680><c> on</c><00:09:17.920><c> the</c><00:09:18.080><c> current</c><00:09:18.640><c> row</c>

00:09:18.949 --> 00:09:18.959 align:start position:0%
run binary search on the current row
 

00:09:18.959 --> 00:09:21.030 align:start position:0%
run binary search on the current row
that<00:09:19.120><c> we</c><00:09:19.360><c> found</c><00:09:19.839><c> from</c><00:09:20.080><c> the</c><00:09:20.320><c> top</c><00:09:20.560><c> and</c><00:09:20.720><c> bottom</c>

00:09:21.030 --> 00:09:21.040 align:start position:0%
that we found from the top and bottom
 

00:09:21.040 --> 00:09:22.389 align:start position:0%
that we found from the top and bottom
pointer<00:09:21.279><c> so</c><00:09:21.440><c> let</c><00:09:21.519><c> me</c><00:09:21.600><c> just</c><00:09:21.760><c> copy</c><00:09:22.080><c> and</c><00:09:22.160><c> paste</c>

00:09:22.389 --> 00:09:22.399 align:start position:0%
pointer so let me just copy and paste
 

00:09:22.399 --> 00:09:23.590 align:start position:0%
pointer so let me just copy and paste
that<00:09:22.560><c> this</c><00:09:22.720><c> is</c><00:09:22.800><c> the</c><00:09:22.959><c> row</c><00:09:23.200><c> that</c><00:09:23.279><c> we're</c><00:09:23.440><c> going</c><00:09:23.519><c> to</c>

00:09:23.590 --> 00:09:23.600 align:start position:0%
that this is the row that we're going to
 

00:09:23.600 --> 00:09:25.269 align:start position:0%
that this is the row that we're going to
run<00:09:23.760><c> binary</c><00:09:24.160><c> search</c><00:09:24.480><c> on</c><00:09:24.800><c> and</c><00:09:24.959><c> we're</c><00:09:25.120><c> going</c><00:09:25.200><c> to</c>

00:09:25.269 --> 00:09:25.279 align:start position:0%
run binary search on and we're going to
 

00:09:25.279 --> 00:09:27.190 align:start position:0%
run binary search on and we're going to
have<00:09:25.440><c> a</c><00:09:25.519><c> couple</c><00:09:25.920><c> pointers</c><00:09:26.399><c> left</c><00:09:26.720><c> and</c><00:09:26.959><c> right</c>

00:09:27.190 --> 00:09:27.200 align:start position:0%
have a couple pointers left and right
 

00:09:27.200 --> 00:09:29.750 align:start position:0%
have a couple pointers left and right
which<00:09:27.440><c> is</c><00:09:27.519><c> going</c><00:09:27.600><c> to</c><00:09:27.680><c> be</c><00:09:28.000><c> 0</c><00:09:28.880><c> and</c>

00:09:29.750 --> 00:09:29.760 align:start position:0%
which is going to be 0 and
 

00:09:29.760 --> 00:09:32.150 align:start position:0%
which is going to be 0 and
columns<00:09:30.560><c> minus</c><00:09:31.120><c> 1</c><00:09:31.440><c> because</c><00:09:31.680><c> that's</c><00:09:31.920><c> going</c><00:09:32.000><c> to</c>

00:09:32.150 --> 00:09:32.160 align:start position:0%
columns minus 1 because that's going to
 

00:09:32.160 --> 00:09:34.389 align:start position:0%
columns minus 1 because that's going to
be<00:09:32.240><c> the</c><00:09:32.399><c> right</c><00:09:32.640><c> most</c><00:09:32.959><c> position</c><00:09:33.519><c> in</c><00:09:33.680><c> the</c><00:09:33.920><c> row</c>

00:09:34.389 --> 00:09:34.399 align:start position:0%
be the right most position in the row
 

00:09:34.399 --> 00:09:35.590 align:start position:0%
be the right most position in the row
and<00:09:34.560><c> we're</c><00:09:34.720><c> going</c><00:09:34.800><c> to</c><00:09:34.880><c> do</c><00:09:35.040><c> the</c><00:09:35.200><c> pretty</c><00:09:35.440><c> much</c>

00:09:35.590 --> 00:09:35.600 align:start position:0%
and we're going to do the pretty much
 

00:09:35.600 --> 00:09:36.949 align:start position:0%
and we're going to do the pretty much
the<00:09:35.680><c> exact</c><00:09:36.000><c> same</c><00:09:36.160><c> thing</c><00:09:36.320><c> that</c><00:09:36.399><c> we</c><00:09:36.560><c> just</c><00:09:36.720><c> wrote</c>

00:09:36.949 --> 00:09:36.959 align:start position:0%
the exact same thing that we just wrote
 

00:09:36.959 --> 00:09:38.949 align:start position:0%
the exact same thing that we just wrote
above<00:09:37.279><c> a</c><00:09:37.440><c> second</c><00:09:37.760><c> binary</c><00:09:38.160><c> search</c><00:09:38.399><c> while</c><00:09:38.640><c> left</c>

00:09:38.949 --> 00:09:38.959 align:start position:0%
above a second binary search while left
 

00:09:38.959 --> 00:09:40.710 align:start position:0%
above a second binary search while left
is<00:09:39.040><c> less</c><00:09:39.279><c> than</c><00:09:39.440><c> or</c><00:09:39.519><c> equal</c><00:09:39.760><c> to</c><00:09:39.920><c> right</c><00:09:40.480><c> let's</c>

00:09:40.710 --> 00:09:40.720 align:start position:0%
is less than or equal to right let's
 

00:09:40.720 --> 00:09:43.030 align:start position:0%
is less than or equal to right let's
compute<00:09:41.440><c> the</c><00:09:41.680><c> middle</c><00:09:42.080><c> point</c><00:09:42.399><c> we</c><00:09:42.480><c> can</c><00:09:42.640><c> do</c><00:09:42.800><c> that</c>

00:09:43.030 --> 00:09:43.040 align:start position:0%
compute the middle point we can do that
 

00:09:43.040 --> 00:09:46.790 align:start position:0%
compute the middle point we can do that
by<00:09:43.200><c> taking</c><00:09:43.680><c> left</c><00:09:44.240><c> plus</c><00:09:44.560><c> right</c><00:09:45.279><c> divided</c><00:09:45.760><c> by</c><00:09:46.000><c> 2</c>

00:09:46.790 --> 00:09:46.800 align:start position:0%
by taking left plus right divided by 2
 

00:09:46.800 --> 00:09:49.269 align:start position:0%
by taking left plus right divided by 2
and<00:09:46.959><c> now</c><00:09:47.200><c> we'll</c><00:09:47.360><c> do</c><00:09:47.600><c> the</c><00:09:47.680><c> same</c><00:09:47.920><c> thing</c><00:09:48.080><c> so</c><00:09:48.720><c> if</c><00:09:49.040><c> we</c>

00:09:49.269 --> 00:09:49.279 align:start position:0%
and now we'll do the same thing so if we
 

00:09:49.279 --> 00:09:51.910 align:start position:0%
and now we'll do the same thing so if we
find<00:09:49.519><c> that</c><00:09:49.600><c> the</c><00:09:49.760><c> target</c><00:09:50.160><c> value</c><00:09:50.640><c> is</c><00:09:51.200><c> greater</c>

00:09:51.910 --> 00:09:51.920 align:start position:0%
find that the target value is greater
 

00:09:51.920 --> 00:09:55.509 align:start position:0%
find that the target value is greater
than<00:09:52.399><c> the</c><00:09:52.560><c> value</c><00:09:53.200><c> in</c><00:09:53.600><c> this</c><00:09:54.080><c> target</c><00:09:54.560><c> row</c><00:09:55.279><c> at</c>

00:09:55.509 --> 00:09:55.519 align:start position:0%
than the value in this target row at
 

00:09:55.519 --> 00:09:57.990 align:start position:0%
than the value in this target row at
position<00:09:56.320><c> middle</c><00:09:57.120><c> that</c><00:09:57.360><c> means</c><00:09:57.600><c> we</c><00:09:57.760><c> have</c><00:09:57.839><c> to</c>

00:09:57.990 --> 00:09:58.000 align:start position:0%
position middle that means we have to
 

00:09:58.000 --> 00:10:01.509 align:start position:0%
position middle that means we have to
search<00:09:58.399><c> towards</c><00:09:58.720><c> the</c><00:09:58.959><c> right</c><00:09:59.440><c> of</c><00:10:00.160><c> the</c><00:10:00.800><c> row</c><00:10:01.360><c> we</c>

00:10:01.509 --> 00:10:01.519 align:start position:0%
search towards the right of the row we
 

00:10:01.519 --> 00:10:03.030 align:start position:0%
search towards the right of the row we
have<00:10:01.600><c> to</c><00:10:01.680><c> search</c><00:10:02.000><c> towards</c><00:10:02.320><c> the</c><00:10:02.480><c> right</c><00:10:02.720><c> of</c><00:10:02.880><c> this</c>

00:10:03.030 --> 00:10:03.040 align:start position:0%
have to search towards the right of this
 

00:10:03.040 --> 00:10:04.710 align:start position:0%
have to search towards the right of this
middle<00:10:03.360><c> point</c><00:10:03.600><c> in</c><00:10:03.680><c> which</c><00:10:04.000><c> case</c><00:10:04.240><c> we'll</c><00:10:04.399><c> say</c><00:10:04.560><c> our</c>

00:10:04.710 --> 00:10:04.720 align:start position:0%
middle point in which case we'll say our
 

00:10:04.720 --> 00:10:06.470 align:start position:0%
middle point in which case we'll say our
left<00:10:04.959><c> pointer</c><00:10:05.279><c> is</c><00:10:05.360><c> going</c><00:10:05.440><c> to</c><00:10:05.519><c> be</c><00:10:05.839><c> m</c>

00:10:06.470 --> 00:10:06.480 align:start position:0%
left pointer is going to be m
 

00:10:06.480 --> 00:10:08.550 align:start position:0%
left pointer is going to be m
plus<00:10:07.279><c> 1.</c><00:10:07.600><c> we're</c><00:10:07.760><c> going</c><00:10:07.839><c> to</c><00:10:07.920><c> search</c><00:10:08.240><c> towards</c>

00:10:08.550 --> 00:10:08.560 align:start position:0%
plus 1. we're going to search towards
 

00:10:08.560 --> 00:10:11.910 align:start position:0%
plus 1. we're going to search towards
the<00:10:08.800><c> right</c><00:10:09.519><c> else</c><00:10:09.920><c> if</c><00:10:10.480><c> the</c><00:10:10.640><c> exact</c><00:10:11.120><c> opposite</c><00:10:11.680><c> was</c>

00:10:11.910 --> 00:10:11.920 align:start position:0%
the right else if the exact opposite was
 

00:10:11.920 --> 00:10:14.389 align:start position:0%
the right else if the exact opposite was
true<00:10:12.480><c> then</c><00:10:12.640><c> we</c><00:10:12.800><c> want</c><00:10:12.959><c> to</c><00:10:13.120><c> search</c><00:10:13.440><c> towards</c><00:10:14.079><c> the</c>

00:10:14.389 --> 00:10:14.399 align:start position:0%
true then we want to search towards the
 

00:10:14.399 --> 00:10:16.550 align:start position:0%
true then we want to search towards the
right<00:10:14.800><c> so</c><00:10:14.959><c> we</c><00:10:15.120><c> can</c><00:10:15.360><c> shift</c><00:10:15.680><c> our</c><00:10:15.920><c> right</c><00:10:16.160><c> pointer</c>

00:10:16.550 --> 00:10:16.560 align:start position:0%
right so we can shift our right pointer
 

00:10:16.560 --> 00:10:19.350 align:start position:0%
right so we can shift our right pointer
to<00:10:16.720><c> be</c><00:10:17.040><c> mid</c><00:10:17.920><c> minus</c><00:10:18.480><c> one</c>

00:10:19.350 --> 00:10:19.360 align:start position:0%
to be mid minus one
 

00:10:19.360 --> 00:10:21.910 align:start position:0%
to be mid minus one
and<00:10:19.680><c> else</c><00:10:20.399><c> the</c><00:10:20.560><c> last</c><00:10:20.880><c> case</c><00:10:21.120><c> is</c><00:10:21.279><c> if</c><00:10:21.440><c> we</c><00:10:21.600><c> actually</c>

00:10:21.910 --> 00:10:21.920 align:start position:0%
and else the last case is if we actually
 

00:10:21.920 --> 00:10:23.750 align:start position:0%
and else the last case is if we actually
did<00:10:22.240><c> find</c><00:10:22.399><c> the</c><00:10:22.560><c> target</c><00:10:22.880><c> value</c><00:10:23.200><c> in</c><00:10:23.279><c> that</c><00:10:23.440><c> case</c>

00:10:23.750 --> 00:10:23.760 align:start position:0%
did find the target value in that case
 

00:10:23.760 --> 00:10:25.990 align:start position:0%
did find the target value in that case
of<00:10:23.839><c> course</c><00:10:24.079><c> we</c><00:10:24.240><c> can</c><00:10:24.399><c> return</c><00:10:24.800><c> true</c><00:10:25.360><c> now</c><00:10:25.600><c> if</c><00:10:25.760><c> this</c>

00:10:25.990 --> 00:10:26.000 align:start position:0%
of course we can return true now if this
 

00:10:26.000 --> 00:10:28.389 align:start position:0%
of course we can return true now if this
loop<00:10:26.640><c> exited</c><00:10:27.200><c> but</c><00:10:27.360><c> we</c><00:10:27.519><c> never</c><00:10:27.839><c> returned</c><00:10:28.240><c> to</c>

00:10:28.389 --> 00:10:28.399 align:start position:0%
loop exited but we never returned to
 

00:10:28.399 --> 00:10:30.470 align:start position:0%
loop exited but we never returned to
true<00:10:28.959><c> then</c><00:10:29.279><c> outside</c><00:10:29.680><c> of</c><00:10:29.839><c> the</c><00:10:30.000><c> loop</c><00:10:30.160><c> then</c><00:10:30.320><c> we</c>

00:10:30.470 --> 00:10:30.480 align:start position:0%
true then outside of the loop then we
 

00:10:30.480 --> 00:10:32.150 align:start position:0%
true then outside of the loop then we
have<00:10:30.560><c> to</c><00:10:30.720><c> return</c><00:10:31.040><c> false</c><00:10:31.440><c> meaning</c><00:10:31.760><c> that</c><00:10:31.920><c> we</c>

00:10:32.150 --> 00:10:32.160 align:start position:0%
have to return false meaning that we
 

00:10:32.160 --> 00:10:34.949 align:start position:0%
have to return false meaning that we
never<00:10:32.560><c> found</c><00:10:32.959><c> the</c><00:10:33.120><c> target</c><00:10:33.680><c> value</c><00:10:34.480><c> okay</c><00:10:34.720><c> i</c><00:10:34.800><c> just</c>

00:10:34.949 --> 00:10:34.959 align:start position:0%
never found the target value okay i just
 

00:10:34.959 --> 00:10:36.550 align:start position:0%
never found the target value okay i just
forgot<00:10:35.279><c> that</c><00:10:35.440><c> when</c><00:10:35.600><c> we're</c><00:10:35.839><c> copy</c><00:10:36.079><c> and</c><00:10:36.160><c> pasting</c>

00:10:36.550 --> 00:10:36.560 align:start position:0%
forgot that when we're copy and pasting
 

00:10:36.560 --> 00:10:38.069 align:start position:0%
forgot that when we're copy and pasting
i<00:10:36.640><c> forgot</c><00:10:36.880><c> to</c><00:10:37.040><c> change</c><00:10:37.279><c> this</c><00:10:37.440><c> condition</c><00:10:37.839><c> so</c><00:10:38.000><c> the</c>

00:10:38.069 --> 00:10:38.079 align:start position:0%
i forgot to change this condition so the
 

00:10:38.079 --> 00:10:39.829 align:start position:0%
i forgot to change this condition so the
first<00:10:38.320><c> one</c><00:10:38.640><c> of</c><00:10:38.800><c> course</c><00:10:39.040><c> is</c><00:10:39.200><c> if</c><00:10:39.360><c> target</c><00:10:39.760><c> is</c>

00:10:39.829 --> 00:10:39.839 align:start position:0%
first one of course is if target is
 

00:10:39.839 --> 00:10:41.829 align:start position:0%
first one of course is if target is
greater<00:10:40.240><c> the</c><00:10:40.399><c> second</c><00:10:40.720><c> else</c><00:10:41.040><c> if</c><00:10:41.200><c> is</c><00:10:41.360><c> target</c><00:10:41.680><c> if</c>

00:10:41.829 --> 00:10:41.839 align:start position:0%
greater the second else if is target if
 

00:10:41.839 --> 00:10:44.150 align:start position:0%
greater the second else if is target if
target<00:10:42.240><c> is</c><00:10:42.480><c> smaller</c><00:10:43.279><c> then</c><00:10:43.440><c> we</c><00:10:43.600><c> want</c><00:10:43.760><c> to</c><00:10:43.839><c> shift</c>

00:10:44.150 --> 00:10:44.160 align:start position:0%
target is smaller then we want to shift
 

00:10:44.160 --> 00:10:46.230 align:start position:0%
target is smaller then we want to shift
the<00:10:44.320><c> opposite</c><00:10:44.720><c> pointer</c><00:10:45.360><c> and</c><00:10:45.519><c> that</c><00:10:45.839><c> is</c><00:10:46.000><c> the</c>

00:10:46.230 --> 00:10:46.240 align:start position:0%
the opposite pointer and that is the
 

00:10:46.240 --> 00:10:48.150 align:start position:0%
the opposite pointer and that is the
entire<00:10:46.640><c> code</c><00:10:47.279><c> so</c><00:10:47.440><c> you</c><00:10:47.519><c> can</c><00:10:47.680><c> see</c><00:10:47.839><c> that</c><00:10:48.000><c> it's</c>

00:10:48.150 --> 00:10:48.160 align:start position:0%
entire code so you can see that it's
 

00:10:48.160 --> 00:10:50.630 align:start position:0%
entire code so you can see that it's
pretty<00:10:48.480><c> efficient</c><00:10:49.600><c> so</c><00:10:49.839><c> i</c><00:10:49.920><c> hope</c><00:10:50.079><c> that</c><00:10:50.240><c> this</c><00:10:50.399><c> was</c>

00:10:50.630 --> 00:10:50.640 align:start position:0%
pretty efficient so i hope that this was
 

00:10:50.640 --> 00:10:52.710 align:start position:0%
pretty efficient so i hope that this was
helpful<00:10:51.200><c> if</c><00:10:51.440><c> it</c><00:10:51.600><c> was</c><00:10:52.000><c> please</c><00:10:52.399><c> like</c><00:10:52.640><c> and</c>

00:10:52.710 --> 00:10:52.720 align:start position:0%
helpful if it was please like and
 

00:10:52.720 --> 00:10:54.949 align:start position:0%
helpful if it was please like and
subscribe<00:10:53.360><c> it</c><00:10:53.440><c> supports</c><00:10:53.920><c> the</c><00:10:54.000><c> channel</c><00:10:54.480><c> a</c><00:10:54.640><c> lot</c>

00:10:54.949 --> 00:10:54.959 align:start position:0%
subscribe it supports the channel a lot
 

00:10:54.959 --> 00:10:57.190 align:start position:0%
subscribe it supports the channel a lot
and<00:10:55.120><c> i'll</c><00:10:55.360><c> hopefully</c><00:10:56.000><c> see</c><00:10:56.160><c> you</c><00:10:56.320><c> pretty</c><00:10:56.640><c> soon</c>

00:10:57.190 --> 00:10:57.200 align:start position:0%
and i'll hopefully see you pretty soon
 

00:10:57.200 --> 00:11:00.240 align:start position:0%
and i'll hopefully see you pretty soon
thanks<00:10:57.440><c> for</c><00:10:57.600><c> watching</c>

