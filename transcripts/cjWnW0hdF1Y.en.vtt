WEBVTT
Kind: captions
Language: en

00:00:00.160 --> 00:00:01.990 align:start position:0%
 
everyone<00:00:00.560><c> welcome</c><00:00:01.040><c> back</c><00:00:01.360><c> let's</c><00:00:01.599><c> solve</c>

00:00:01.990 --> 00:00:02.000 align:start position:0%
everyone welcome back let's solve
 

00:00:02.000 --> 00:00:03.350 align:start position:0%
everyone welcome back let's solve
another<00:00:02.480><c> problem</c><00:00:02.879><c> today</c>

00:00:03.350 --> 00:00:03.360 align:start position:0%
another problem today
 

00:00:03.360 --> 00:00:06.309 align:start position:0%
another problem today
longest<00:00:04.160><c> increasing</c><00:00:04.960><c> subsequence</c><00:00:05.920><c> and</c><00:00:06.080><c> this</c>

00:00:06.309 --> 00:00:06.319 align:start position:0%
longest increasing subsequence and this
 

00:00:06.319 --> 00:00:08.549 align:start position:0%
longest increasing subsequence and this
is<00:00:06.480><c> another</c><00:00:06.879><c> tricky</c><00:00:07.440><c> dynamic</c><00:00:08.000><c> programming</c>

00:00:08.549 --> 00:00:08.559 align:start position:0%
is another tricky dynamic programming
 

00:00:08.559 --> 00:00:09.190 align:start position:0%
is another tricky dynamic programming
problem

00:00:09.190 --> 00:00:09.200 align:start position:0%
problem
 

00:00:09.200 --> 00:00:11.270 align:start position:0%
problem
and<00:00:09.360><c> i'm</c><00:00:09.440><c> going</c><00:00:09.519><c> to</c><00:00:09.599><c> show</c><00:00:09.760><c> you</c><00:00:09.920><c> how</c><00:00:10.160><c> to</c><00:00:10.400><c> go</c><00:00:10.960><c> from</c>

00:00:11.270 --> 00:00:11.280 align:start position:0%
and i'm going to show you how to go from
 

00:00:11.280 --> 00:00:13.270 align:start position:0%
and i'm going to show you how to go from
the<00:00:11.519><c> recursive</c><00:00:12.240><c> solution</c>

00:00:13.270 --> 00:00:13.280 align:start position:0%
the recursive solution
 

00:00:13.280 --> 00:00:16.070 align:start position:0%
the recursive solution
to<00:00:13.920><c> the</c><00:00:14.240><c> dynamic</c><00:00:14.719><c> programming</c><00:00:15.280><c> solution</c><00:00:15.839><c> so</c>

00:00:16.070 --> 00:00:16.080 align:start position:0%
to the dynamic programming solution so
 

00:00:16.080 --> 00:00:16.950 align:start position:0%
to the dynamic programming solution so
we're<00:00:16.320><c> given</c>

00:00:16.950 --> 00:00:16.960 align:start position:0%
we're given
 

00:00:16.960 --> 00:00:19.429 align:start position:0%
we're given
an<00:00:17.119><c> array</c><00:00:17.600><c> of</c><00:00:17.840><c> numbers</c><00:00:18.480><c> and</c><00:00:18.640><c> we</c><00:00:18.880><c> just</c><00:00:19.119><c> want</c><00:00:19.359><c> to</c>

00:00:19.429 --> 00:00:19.439 align:start position:0%
an array of numbers and we just want to
 

00:00:19.439 --> 00:00:21.830 align:start position:0%
an array of numbers and we just want to
return<00:00:19.840><c> the</c><00:00:20.160><c> length</c><00:00:20.640><c> of</c><00:00:20.800><c> the</c><00:00:21.119><c> longest</c>

00:00:21.830 --> 00:00:21.840 align:start position:0%
return the length of the longest
 

00:00:21.840 --> 00:00:23.509 align:start position:0%
return the length of the longest
increasing<00:00:22.560><c> subsequence</c>

00:00:23.509 --> 00:00:23.519 align:start position:0%
increasing subsequence
 

00:00:23.519 --> 00:00:25.589 align:start position:0%
increasing subsequence
and<00:00:24.000><c> if</c><00:00:24.160><c> you</c><00:00:24.320><c> don't</c><00:00:24.480><c> know</c><00:00:24.640><c> what</c><00:00:24.720><c> a</c><00:00:24.880><c> subsequence</c>

00:00:25.589 --> 00:00:25.599 align:start position:0%
and if you don't know what a subsequence
 

00:00:25.599 --> 00:00:27.109 align:start position:0%
and if you don't know what a subsequence
is<00:00:25.840><c> it's</c><00:00:26.240><c> basically</c>

00:00:27.109 --> 00:00:27.119 align:start position:0%
is it's basically
 

00:00:27.119 --> 00:00:29.669 align:start position:0%
is it's basically
like<00:00:27.439><c> let's</c><00:00:27.599><c> say</c><00:00:28.080><c> this</c><00:00:28.400><c> is</c><00:00:28.640><c> our</c><00:00:29.039><c> input</c><00:00:29.359><c> array</c>

00:00:29.669 --> 00:00:29.679 align:start position:0%
like let's say this is our input array
 

00:00:29.679 --> 00:00:31.589 align:start position:0%
like let's say this is our input array
we're<00:00:30.000><c> basically</c><00:00:30.640><c> taking</c><00:00:31.199><c> a</c>

00:00:31.589 --> 00:00:31.599 align:start position:0%
we're basically taking a
 

00:00:31.599 --> 00:00:34.549 align:start position:0%
we're basically taking a
subarray<00:00:32.640><c> but</c><00:00:32.880><c> that</c><00:00:33.200><c> subarray</c><00:00:33.840><c> does</c><00:00:34.079><c> not</c><00:00:34.399><c> have</c>

00:00:34.549 --> 00:00:34.559 align:start position:0%
subarray but that subarray does not have
 

00:00:34.559 --> 00:00:35.030 align:start position:0%
subarray but that subarray does not have
to<00:00:34.719><c> be</c>

00:00:35.030 --> 00:00:35.040 align:start position:0%
to be
 

00:00:35.040 --> 00:00:38.630 align:start position:0%
to be
contiguous<00:00:35.760><c> so</c><00:00:35.920><c> like</c><00:00:36.160><c> we</c><00:00:36.320><c> have</c><00:00:36.719><c> from</c><00:00:37.280><c> here</c><00:00:38.000><c> so</c>

00:00:38.630 --> 00:00:38.640 align:start position:0%
contiguous so like we have from here so
 

00:00:38.640 --> 00:00:41.190 align:start position:0%
contiguous so like we have from here so
uh<00:00:38.879><c> subsequence</c><00:00:39.520><c> is</c><00:00:39.680><c> three</c><00:00:40.079><c> six</c><00:00:40.399><c> two</c><00:00:40.719><c> seven</c>

00:00:41.190 --> 00:00:41.200 align:start position:0%
uh subsequence is three six two seven
 

00:00:41.200 --> 00:00:43.110 align:start position:0%
uh subsequence is three six two seven
basically<00:00:41.600><c> we</c><00:00:41.760><c> took</c><00:00:42.000><c> this</c><00:00:42.320><c> subarray</c>

00:00:43.110 --> 00:00:43.120 align:start position:0%
basically we took this subarray
 

00:00:43.120 --> 00:00:45.750 align:start position:0%
basically we took this subarray
and<00:00:43.200><c> we</c><00:00:43.440><c> removed</c><00:00:44.160><c> one</c><00:00:44.480><c> two</c><00:00:44.800><c> from</c><00:00:45.039><c> it</c><00:00:45.440><c> and</c><00:00:45.600><c> we</c>

00:00:45.750 --> 00:00:45.760 align:start position:0%
and we removed one two from it and we
 

00:00:45.760 --> 00:00:48.630 align:start position:0%
and we removed one two from it and we
removed<00:00:46.320><c> a</c><00:00:46.480><c> one</c><00:00:46.719><c> from</c><00:00:47.039><c> it</c><00:00:47.280><c> and</c><00:00:47.440><c> now</c><00:00:47.680><c> it's</c><00:00:47.920><c> three</c>

00:00:48.630 --> 00:00:48.640 align:start position:0%
removed a one from it and now it's three
 

00:00:48.640 --> 00:00:51.590 align:start position:0%
removed a one from it and now it's three
six<00:00:49.200><c> two</c><00:00:49.680><c> seven</c><00:00:50.239><c> but</c><00:00:50.480><c> you</c><00:00:50.640><c> notice</c><00:00:51.039><c> about</c><00:00:51.360><c> this</c>

00:00:51.590 --> 00:00:51.600 align:start position:0%
six two seven but you notice about this
 

00:00:51.600 --> 00:00:52.549 align:start position:0%
six two seven but you notice about this
subsequence

00:00:52.549 --> 00:00:52.559 align:start position:0%
subsequence
 

00:00:52.559 --> 00:00:54.709 align:start position:0%
subsequence
it's<00:00:52.800><c> not</c><00:00:53.039><c> an</c><00:00:53.280><c> increasing</c><00:00:53.920><c> order</c><00:00:54.320><c> right</c><00:00:54.480><c> we</c>

00:00:54.709 --> 00:00:54.719 align:start position:0%
it's not an increasing order right we
 

00:00:54.719 --> 00:00:57.110 align:start position:0%
it's not an increasing order right we
have<00:00:55.039><c> six</c><00:00:55.440><c> and</c><00:00:55.520><c> then</c><00:00:55.760><c> we</c><00:00:55.920><c> have</c><00:00:56.239><c> two</c><00:00:56.559><c> that's</c><00:00:56.800><c> not</c>

00:00:57.110 --> 00:00:57.120 align:start position:0%
have six and then we have two that's not
 

00:00:57.120 --> 00:00:59.110 align:start position:0%
have six and then we have two that's not
increasing<00:00:57.600><c> order</c><00:00:57.920><c> so</c><00:00:58.079><c> this</c><00:00:58.320><c> is</c><00:00:58.399><c> not</c><00:00:58.719><c> a</c>

00:00:59.110 --> 00:00:59.120 align:start position:0%
increasing order so this is not a
 

00:00:59.120 --> 00:01:01.189 align:start position:0%
increasing order so this is not a
increasing<00:00:59.760><c> subsequence</c><00:01:00.640><c> so</c><00:01:00.879><c> in</c><00:01:01.039><c> this</c>

00:01:01.189 --> 00:01:01.199 align:start position:0%
increasing subsequence so in this
 

00:01:01.199 --> 00:01:02.869 align:start position:0%
increasing subsequence so in this
example<00:01:01.760><c> we're</c><00:01:02.079><c> given</c>

00:01:02.869 --> 00:01:02.879 align:start position:0%
example we're given
 

00:01:02.879 --> 00:01:05.670 align:start position:0%
example we're given
about<00:01:03.440><c> nine</c><00:01:03.760><c> elements</c><00:01:04.640><c> and</c><00:01:05.119><c> we</c><00:01:05.280><c> want</c><00:01:05.519><c> the</c>

00:01:05.670 --> 00:01:05.680 align:start position:0%
about nine elements and we want the
 

00:01:05.680 --> 00:01:07.590 align:start position:0%
about nine elements and we want the
longest<00:01:06.159><c> increasing</c><00:01:06.640><c> subsequence</c>

00:01:07.590 --> 00:01:07.600 align:start position:0%
longest increasing subsequence
 

00:01:07.600 --> 00:01:10.789 align:start position:0%
longest increasing subsequence
which<00:01:07.840><c> we</c><00:01:08.159><c> see</c><00:01:08.560><c> is</c><00:01:09.280><c> this</c><00:01:09.920><c> and</c><00:01:10.080><c> so</c><00:01:10.320><c> how</c><00:01:10.479><c> did</c><00:01:10.640><c> we</c>

00:01:10.789 --> 00:01:10.799 align:start position:0%
which we see is this and so how did we
 

00:01:10.799 --> 00:01:13.590 align:start position:0%
which we see is this and so how did we
get<00:01:10.960><c> that</c><00:01:11.200><c> subsequence</c><00:01:11.920><c> well</c><00:01:12.240><c> you</c><00:01:12.479><c> go</c><00:01:12.640><c> from</c><00:01:13.040><c> 2</c>

00:01:13.590 --> 00:01:13.600 align:start position:0%
get that subsequence well you go from 2
 

00:01:13.600 --> 00:01:17.190 align:start position:0%
get that subsequence well you go from 2
all<00:01:13.760><c> the</c><00:01:13.920><c> way</c><00:01:14.159><c> to</c><00:01:14.360><c> 101</c><00:01:15.920><c> but</c><00:01:16.159><c> you</c><00:01:16.560><c> notice</c>

00:01:17.190 --> 00:01:17.200 align:start position:0%
all the way to 101 but you notice
 

00:01:17.200 --> 00:01:19.590 align:start position:0%
all the way to 101 but you notice
that<00:01:17.520><c> unfortunately</c><00:01:18.479><c> this</c><00:01:18.720><c> is</c><00:01:18.960><c> not</c><00:01:19.200><c> an</c>

00:01:19.590 --> 00:01:19.600 align:start position:0%
that unfortunately this is not an
 

00:01:19.600 --> 00:01:20.310 align:start position:0%
that unfortunately this is not an
increasing

00:01:20.310 --> 00:01:20.320 align:start position:0%
increasing
 

00:01:20.320 --> 00:01:23.510 align:start position:0%
increasing
order<00:01:20.560><c> we</c><00:01:20.720><c> have</c><00:01:20.880><c> a</c><00:01:21.200><c> 5</c><00:01:21.920><c> and</c><00:01:22.159><c> then</c><00:01:22.400><c> we</c><00:01:22.560><c> get</c><00:01:22.799><c> a</c><00:01:23.119><c> 3</c>

00:01:23.510 --> 00:01:23.520 align:start position:0%
order we have a 5 and then we get a 3
 

00:01:23.520 --> 00:01:25.749 align:start position:0%
order we have a 5 and then we get a 3
right<00:01:23.840><c> after</c><00:01:24.479><c> so</c><00:01:24.720><c> we</c><00:01:24.880><c> actually</c><00:01:25.200><c> have</c><00:01:25.360><c> two</c>

00:01:25.749 --> 00:01:25.759 align:start position:0%
right after so we actually have two
 

00:01:25.759 --> 00:01:26.550 align:start position:0%
right after so we actually have two
choices

00:01:26.550 --> 00:01:26.560 align:start position:0%
choices
 

00:01:26.560 --> 00:01:29.350 align:start position:0%
choices
if<00:01:26.720><c> we</c><00:01:26.880><c> remove</c><00:01:27.520><c> the</c><00:01:27.840><c> three</c><00:01:28.560><c> we</c><00:01:28.720><c> have</c><00:01:29.040><c> an</c>

00:01:29.350 --> 00:01:29.360 align:start position:0%
if we remove the three we have an
 

00:01:29.360 --> 00:01:30.230 align:start position:0%
if we remove the three we have an
increasing

00:01:30.230 --> 00:01:30.240 align:start position:0%
increasing
 

00:01:30.240 --> 00:01:33.429 align:start position:0%
increasing
subsequence<00:01:31.280><c> if</c><00:01:31.439><c> we</c><00:01:31.600><c> remove</c><00:01:32.320><c> the</c><00:01:32.640><c> five</c><00:01:33.119><c> we</c>

00:01:33.429 --> 00:01:33.439 align:start position:0%
subsequence if we remove the five we
 

00:01:33.439 --> 00:01:35.990 align:start position:0%
subsequence if we remove the five we
also<00:01:33.920><c> have</c><00:01:34.240><c> an</c><00:01:34.479><c> increasing</c><00:01:35.119><c> subsequence</c><00:01:35.840><c> but</c>

00:01:35.990 --> 00:01:36.000 align:start position:0%
also have an increasing subsequence but
 

00:01:36.000 --> 00:01:37.670 align:start position:0%
also have an increasing subsequence but
we<00:01:36.159><c> just</c><00:01:36.320><c> care</c><00:01:36.560><c> about</c><00:01:36.799><c> the</c><00:01:37.119><c> length</c>

00:01:37.670 --> 00:01:37.680 align:start position:0%
we just care about the length
 

00:01:37.680 --> 00:01:40.630 align:start position:0%
we just care about the length
which<00:01:38.159><c> in</c><00:01:38.320><c> this</c><00:01:38.640><c> case</c><00:01:39.040><c> is</c><00:01:39.360><c> four</c><00:01:39.680><c> so</c><00:01:39.840><c> we</c><00:01:40.000><c> return</c>

00:01:40.630 --> 00:01:40.640 align:start position:0%
which in this case is four so we return
 

00:01:40.640 --> 00:01:41.109 align:start position:0%
which in this case is four so we return
four

00:01:41.109 --> 00:01:41.119 align:start position:0%
four
 

00:01:41.119 --> 00:01:43.830 align:start position:0%
four
so<00:01:41.439><c> the</c><00:01:41.759><c> first</c><00:01:42.159><c> idea</c><00:01:42.560><c> you</c><00:01:42.720><c> might</c><00:01:42.960><c> have</c><00:01:43.360><c> is</c>

00:01:43.830 --> 00:01:43.840 align:start position:0%
so the first idea you might have is
 

00:01:43.840 --> 00:01:44.950 align:start position:0%
so the first idea you might have is
brute<00:01:44.399><c> force</c>

00:01:44.950 --> 00:01:44.960 align:start position:0%
brute force
 

00:01:44.960 --> 00:01:47.830 align:start position:0%
brute force
using<00:01:45.680><c> depth</c><00:01:46.000><c> first</c><00:01:46.320><c> search</c><00:01:46.880><c> so</c><00:01:47.200><c> let's</c><00:01:47.520><c> say</c>

00:01:47.830 --> 00:01:47.840 align:start position:0%
using depth first search so let's say
 

00:01:47.840 --> 00:01:48.230 align:start position:0%
using depth first search so let's say
that

00:01:48.230 --> 00:01:48.240 align:start position:0%
that
 

00:01:48.240 --> 00:01:51.270 align:start position:0%
that
this<00:01:48.720><c> is</c><00:01:49.040><c> our</c><00:01:49.360><c> input</c><00:01:49.759><c> array</c><00:01:50.079><c> so</c><00:01:50.240><c> we</c><00:01:50.399><c> have</c><00:01:50.799><c> six</c>

00:01:51.270 --> 00:01:51.280 align:start position:0%
this is our input array so we have six
 

00:01:51.280 --> 00:01:53.749 align:start position:0%
this is our input array so we have six
elements<00:01:51.920><c> for</c><00:01:52.479><c> if</c><00:01:52.560><c> we</c><00:01:52.720><c> wanna</c><00:01:52.960><c> know</c><00:01:53.119><c> the</c><00:01:53.360><c> brute</c>

00:01:53.749 --> 00:01:53.759 align:start position:0%
elements for if we wanna know the brute
 

00:01:53.759 --> 00:01:55.670 align:start position:0%
elements for if we wanna know the brute
force<00:01:54.079><c> meaning</c><00:01:54.320><c> we</c><00:01:54.479><c> want</c><00:01:54.640><c> to</c><00:01:54.880><c> generate</c>

00:01:55.670 --> 00:01:55.680 align:start position:0%
force meaning we want to generate
 

00:01:55.680 --> 00:01:59.510 align:start position:0%
force meaning we want to generate
every<00:01:56.560><c> possible</c><00:01:57.439><c> subsequence</c><00:01:58.640><c> we</c><00:01:58.880><c> have</c><00:01:59.119><c> a</c>

00:01:59.510 --> 00:01:59.520 align:start position:0%
every possible subsequence we have a
 

00:01:59.520 --> 00:02:01.910 align:start position:0%
every possible subsequence we have a
choice<00:02:00.000><c> for</c><00:02:00.320><c> each</c><00:02:00.719><c> value</c><00:02:01.119><c> right</c><00:02:01.360><c> so</c><00:02:01.520><c> for</c><00:02:01.680><c> the</c>

00:02:01.910 --> 00:02:01.920 align:start position:0%
choice for each value right so for the
 

00:02:01.920 --> 00:02:02.550 align:start position:0%
choice for each value right so for the
first

00:02:02.550 --> 00:02:02.560 align:start position:0%
first
 

00:02:02.560 --> 00:02:05.109 align:start position:0%
first
0<00:02:03.040><c> we</c><00:02:03.200><c> have</c><00:02:03.439><c> a</c><00:02:03.600><c> choice</c><00:02:04.240><c> are</c><00:02:04.479><c> we</c><00:02:04.640><c> going</c><00:02:04.799><c> to</c>

00:02:05.109 --> 00:02:05.119 align:start position:0%
0 we have a choice are we going to
 

00:02:05.119 --> 00:02:06.310 align:start position:0%
0 we have a choice are we going to
include<00:02:05.759><c> this</c>

00:02:06.310 --> 00:02:06.320 align:start position:0%
include this
 

00:02:06.320 --> 00:02:09.589 align:start position:0%
include this
0<00:02:06.719><c> in</c><00:02:06.880><c> our</c><00:02:07.040><c> subsequence</c><00:02:08.160><c> or</c><00:02:08.479><c> are</c><00:02:08.640><c> we</c><00:02:09.039><c> not</c><00:02:09.360><c> going</c>

00:02:09.589 --> 00:02:09.599 align:start position:0%
0 in our subsequence or are we not going
 

00:02:09.599 --> 00:02:11.670 align:start position:0%
0 in our subsequence or are we not going
to<00:02:09.920><c> include</c><00:02:10.319><c> it</c><00:02:10.479><c> in</c><00:02:10.560><c> our</c><00:02:10.720><c> subsequence</c>

00:02:11.670 --> 00:02:11.680 align:start position:0%
to include it in our subsequence
 

00:02:11.680 --> 00:02:14.949 align:start position:0%
to include it in our subsequence
so<00:02:12.239><c> in</c><00:02:12.480><c> reality</c><00:02:13.120><c> for</c><00:02:13.440><c> each</c><00:02:13.760><c> value</c><00:02:14.239><c> we</c><00:02:14.400><c> have</c>

00:02:14.949 --> 00:02:14.959 align:start position:0%
so in reality for each value we have
 

00:02:14.959 --> 00:02:17.589 align:start position:0%
so in reality for each value we have
two<00:02:15.360><c> choices</c><00:02:16.080><c> now</c><00:02:16.319><c> when</c><00:02:16.480><c> we</c><00:02:16.640><c> get</c><00:02:16.800><c> to</c><00:02:16.879><c> the</c><00:02:17.200><c> next</c>

00:02:17.589 --> 00:02:17.599 align:start position:0%
two choices now when we get to the next
 

00:02:17.599 --> 00:02:18.309 align:start position:0%
two choices now when we get to the next
value<00:02:18.000><c> we</c>

00:02:18.309 --> 00:02:18.319 align:start position:0%
value we
 

00:02:18.319 --> 00:02:20.630 align:start position:0%
value we
also<00:02:18.720><c> have</c><00:02:18.879><c> a</c><00:02:19.040><c> choice</c><00:02:19.520><c> are</c><00:02:19.680><c> we</c><00:02:20.000><c> including</c><00:02:20.480><c> it</c>

00:02:20.630 --> 00:02:20.640 align:start position:0%
also have a choice are we including it
 

00:02:20.640 --> 00:02:21.350 align:start position:0%
also have a choice are we including it
or<00:02:20.879><c> not</c>

00:02:21.350 --> 00:02:21.360 align:start position:0%
or not
 

00:02:21.360 --> 00:02:24.390 align:start position:0%
or not
so<00:02:21.599><c> again</c><00:02:22.160><c> we</c><00:02:22.319><c> have</c><00:02:22.720><c> two</c><00:02:23.440><c> choices</c><00:02:24.000><c> if</c><00:02:24.080><c> we</c><00:02:24.239><c> want</c>

00:02:24.390 --> 00:02:24.400 align:start position:0%
so again we have two choices if we want
 

00:02:24.400 --> 00:02:25.190 align:start position:0%
so again we have two choices if we want
to<00:02:24.560><c> generate</c>

00:02:25.190 --> 00:02:25.200 align:start position:0%
to generate
 

00:02:25.200 --> 00:02:28.229 align:start position:0%
to generate
every<00:02:25.599><c> possible</c><00:02:26.160><c> subsequence</c><00:02:27.200><c> so</c><00:02:27.360><c> we</c><00:02:27.599><c> do</c><00:02:27.840><c> that</c>

00:02:28.229 --> 00:02:28.239 align:start position:0%
every possible subsequence so we do that
 

00:02:28.239 --> 00:02:31.430 align:start position:0%
every possible subsequence so we do that
for<00:02:28.720><c> every</c><00:02:29.760><c> single</c><00:02:30.720><c> value</c>

00:02:31.430 --> 00:02:31.440 align:start position:0%
for every single value
 

00:02:31.440 --> 00:02:34.070 align:start position:0%
for every single value
and<00:02:31.599><c> then</c><00:02:32.160><c> we</c><00:02:32.560><c> see</c><00:02:32.879><c> that</c><00:02:33.120><c> there</c><00:02:33.280><c> are</c><00:02:33.519><c> actually</c>

00:02:34.070 --> 00:02:34.080 align:start position:0%
and then we see that there are actually
 

00:02:34.080 --> 00:02:35.670 align:start position:0%
and then we see that there are actually
2<00:02:34.400><c> to</c><00:02:34.560><c> the</c><00:02:34.800><c> power</c><00:02:35.200><c> of</c>

00:02:35.670 --> 00:02:35.680 align:start position:0%
2 to the power of
 

00:02:35.680 --> 00:02:39.030 align:start position:0%
2 to the power of
n<00:02:36.239><c> possible</c><00:02:36.879><c> subsequences</c><00:02:37.760><c> where</c><00:02:38.160><c> n</c><00:02:38.560><c> is</c><00:02:38.800><c> the</c>

00:02:39.030 --> 00:02:39.040 align:start position:0%
n possible subsequences where n is the
 

00:02:39.040 --> 00:02:40.550 align:start position:0%
n possible subsequences where n is the
number<00:02:39.519><c> of</c><00:02:39.680><c> values</c>

00:02:40.550 --> 00:02:40.560 align:start position:0%
number of values
 

00:02:40.560 --> 00:02:43.350 align:start position:0%
number of values
given<00:02:40.959><c> in</c><00:02:41.120><c> our</c><00:02:41.280><c> input</c><00:02:41.680><c> array</c><00:02:42.319><c> so</c><00:02:42.720><c> already</c><00:02:43.280><c> you</c>

00:02:43.350 --> 00:02:43.360 align:start position:0%
given in our input array so already you
 

00:02:43.360 --> 00:02:45.270 align:start position:0%
given in our input array so already you
can<00:02:43.519><c> see</c><00:02:43.760><c> the</c><00:02:43.920><c> time</c><00:02:44.239><c> complexity</c><00:02:44.800><c> is</c><00:02:44.959><c> not</c><00:02:45.200><c> going</c>

00:02:45.270 --> 00:02:45.280 align:start position:0%
can see the time complexity is not going
 

00:02:45.280 --> 00:02:45.670 align:start position:0%
can see the time complexity is not going
to<00:02:45.360><c> be</c>

00:02:45.670 --> 00:02:45.680 align:start position:0%
to be
 

00:02:45.680 --> 00:02:49.270 align:start position:0%
to be
great<00:02:46.080><c> but</c><00:02:46.560><c> can</c><00:02:46.879><c> we</c><00:02:47.360><c> take</c><00:02:47.760><c> this</c><00:02:48.080><c> brute</c><00:02:48.640><c> force</c>

00:02:49.270 --> 00:02:49.280 align:start position:0%
great but can we take this brute force
 

00:02:49.280 --> 00:02:52.550 align:start position:0%
great but can we take this brute force
approach<00:02:50.160><c> and</c><00:02:50.319><c> then</c><00:02:50.959><c> somehow</c><00:02:51.680><c> modify</c><00:02:52.239><c> it</c>

00:02:52.550 --> 00:02:52.560 align:start position:0%
approach and then somehow modify it
 

00:02:52.560 --> 00:02:56.150 align:start position:0%
approach and then somehow modify it
to<00:02:52.800><c> get</c><00:02:53.040><c> a</c><00:02:53.360><c> better</c><00:02:53.760><c> solution</c><00:02:54.720><c> like</c><00:02:55.200><c> n</c><00:02:55.519><c> squared</c>

00:02:56.150 --> 00:02:56.160 align:start position:0%
to get a better solution like n squared
 

00:02:56.160 --> 00:02:58.630 align:start position:0%
to get a better solution like n squared
so<00:02:56.400><c> let's</c><00:02:56.640><c> look</c><00:02:56.800><c> at</c><00:02:56.959><c> another</c><00:02:57.440><c> example</c><00:02:58.400><c> and</c>

00:02:58.630 --> 00:02:58.640 align:start position:0%
so let's look at another example and
 

00:02:58.640 --> 00:03:00.390 align:start position:0%
so let's look at another example and
this<00:02:58.879><c> time</c><00:02:59.200><c> we're</c><00:02:59.360><c> going</c><00:02:59.440><c> to</c><00:02:59.599><c> do</c><00:02:59.840><c> depth</c><00:03:00.080><c> first</c>

00:03:00.390 --> 00:03:00.400 align:start position:0%
this time we're going to do depth first
 

00:03:00.400 --> 00:03:00.949 align:start position:0%
this time we're going to do depth first
search

00:03:00.949 --> 00:03:00.959 align:start position:0%
search
 

00:03:00.959 --> 00:03:03.190 align:start position:0%
search
with<00:03:01.440><c> caching</c><00:03:02.239><c> and</c><00:03:02.400><c> we're</c><00:03:02.560><c> going</c><00:03:02.640><c> to</c><00:03:02.720><c> see</c><00:03:02.959><c> how</c>

00:03:03.190 --> 00:03:03.200 align:start position:0%
with caching and we're going to see how
 

00:03:03.200 --> 00:03:05.509 align:start position:0%
with caching and we're going to see how
that<00:03:03.519><c> improves</c><00:03:04.000><c> our</c><00:03:04.159><c> time</c><00:03:04.480><c> complexity</c><00:03:05.200><c> so</c>

00:03:05.509 --> 00:03:05.519 align:start position:0%
that improves our time complexity so
 

00:03:05.519 --> 00:03:08.550 align:start position:0%
that improves our time complexity so
we<00:03:05.760><c> have</c><00:03:06.000><c> an</c><00:03:06.159><c> example</c><00:03:06.560><c> of</c><00:03:06.800><c> four</c><00:03:07.120><c> elements</c><00:03:07.920><c> so</c>

00:03:08.550 --> 00:03:08.560 align:start position:0%
we have an example of four elements so
 

00:03:08.560 --> 00:03:11.430 align:start position:0%
we have an example of four elements so
it's<00:03:08.720><c> kind</c><00:03:08.879><c> of</c><00:03:09.040><c> obvious</c><00:03:09.440><c> that</c><00:03:09.840><c> this</c><00:03:10.640><c> is</c><00:03:11.040><c> our</c>

00:03:11.430 --> 00:03:11.440 align:start position:0%
it's kind of obvious that this is our
 

00:03:11.440 --> 00:03:13.430 align:start position:0%
it's kind of obvious that this is our
longest<00:03:11.920><c> increasing</c><00:03:12.480><c> subsequence</c><00:03:13.120><c> so</c><00:03:13.280><c> the</c>

00:03:13.430 --> 00:03:13.440 align:start position:0%
longest increasing subsequence so the
 

00:03:13.440 --> 00:03:14.710 align:start position:0%
longest increasing subsequence so the
result<00:03:14.000><c> is</c><00:03:14.159><c> going</c><00:03:14.319><c> to</c><00:03:14.400><c> be</c>

00:03:14.710 --> 00:03:14.720 align:start position:0%
result is going to be
 

00:03:14.720 --> 00:03:17.589 align:start position:0%
result is going to be
three<00:03:15.360><c> three</c><00:03:15.680><c> elements</c><00:03:16.720><c> but</c><00:03:16.959><c> how</c><00:03:17.120><c> can</c><00:03:17.280><c> we</c><00:03:17.440><c> do</c>

00:03:17.589 --> 00:03:17.599 align:start position:0%
three three elements but how can we do
 

00:03:17.599 --> 00:03:19.910 align:start position:0%
three three elements but how can we do
this<00:03:17.840><c> with</c><00:03:18.080><c> an</c><00:03:18.319><c> algorithm</c><00:03:18.879><c> that's</c><00:03:19.120><c> efficient</c>

00:03:19.910 --> 00:03:19.920 align:start position:0%
this with an algorithm that's efficient
 

00:03:19.920 --> 00:03:22.070 align:start position:0%
this with an algorithm that's efficient
well<00:03:20.159><c> let's</c><00:03:20.560><c> start</c><00:03:21.040><c> out</c><00:03:21.200><c> with</c><00:03:21.360><c> the</c><00:03:21.599><c> brute</c>

00:03:22.070 --> 00:03:22.080 align:start position:0%
well let's start out with the brute
 

00:03:22.080 --> 00:03:23.270 align:start position:0%
well let's start out with the brute
force<00:03:22.560><c> approach</c>

00:03:23.270 --> 00:03:23.280 align:start position:0%
force approach
 

00:03:23.280 --> 00:03:26.949 align:start position:0%
force approach
let's<00:03:23.760><c> check</c><00:03:24.319><c> all</c><00:03:24.799><c> subsequences</c><00:03:26.080><c> starting</c><00:03:26.560><c> at</c>

00:03:26.949 --> 00:03:26.959 align:start position:0%
let's check all subsequences starting at
 

00:03:26.959 --> 00:03:30.470 align:start position:0%
let's check all subsequences starting at
index<00:03:27.760><c> 0</c><00:03:28.480><c> and</c><00:03:28.640><c> then</c><00:03:28.879><c> repeat</c><00:03:29.360><c> that</c><00:03:29.840><c> starting</c><00:03:30.319><c> at</c>

00:03:30.470 --> 00:03:30.480 align:start position:0%
index 0 and then repeat that starting at
 

00:03:30.480 --> 00:03:31.030 align:start position:0%
index 0 and then repeat that starting at
index

00:03:31.030 --> 00:03:31.040 align:start position:0%
index
 

00:03:31.040 --> 00:03:33.750 align:start position:0%
index
one<00:03:31.599><c> starting</c><00:03:32.000><c> at</c><00:03:32.239><c> index</c><00:03:32.720><c> two</c><00:03:33.120><c> and</c><00:03:33.280><c> starting</c>

00:03:33.750 --> 00:03:33.760 align:start position:0%
one starting at index two and starting
 

00:03:33.760 --> 00:03:34.869 align:start position:0%
one starting at index two and starting
at<00:03:34.000><c> index</c>

00:03:34.869 --> 00:03:34.879 align:start position:0%
at index
 

00:03:34.879 --> 00:03:37.670 align:start position:0%
at index
three<00:03:35.200><c> right</c><00:03:35.760><c> so</c><00:03:36.000><c> these</c><00:03:36.239><c> are</c><00:03:36.319><c> the</c><00:03:36.560><c> indices</c><00:03:37.519><c> so</c>

00:03:37.670 --> 00:03:37.680 align:start position:0%
three right so these are the indices so
 

00:03:37.680 --> 00:03:38.229 align:start position:0%
three right so these are the indices so
we<00:03:37.840><c> take</c>

00:03:38.229 --> 00:03:38.239 align:start position:0%
we take
 

00:03:38.239 --> 00:03:41.990 align:start position:0%
we take
one<00:03:38.560><c> decision</c><00:03:39.519><c> to</c><00:03:39.840><c> start</c><00:03:40.640><c> at</c><00:03:40.959><c> index</c>

00:03:41.990 --> 00:03:42.000 align:start position:0%
one decision to start at index
 

00:03:42.000 --> 00:03:44.710 align:start position:0%
one decision to start at index
zero<00:03:42.640><c> we</c><00:03:42.879><c> take</c><00:03:43.200><c> one</c><00:03:43.440><c> decision</c><00:03:44.000><c> to</c><00:03:44.159><c> start</c><00:03:44.480><c> at</c>

00:03:44.710 --> 00:03:44.720 align:start position:0%
zero we take one decision to start at
 

00:03:44.720 --> 00:03:45.990 align:start position:0%
zero we take one decision to start at
index<00:03:45.280><c> one</c>

00:03:45.990 --> 00:03:46.000 align:start position:0%
index one
 

00:03:46.000 --> 00:03:48.789 align:start position:0%
index one
one<00:03:46.239><c> decision</c><00:03:46.720><c> to</c><00:03:46.879><c> start</c><00:03:47.200><c> at</c><00:03:47.360><c> index</c><00:03:47.920><c> two</c><00:03:48.560><c> and</c>

00:03:48.789 --> 00:03:48.799 align:start position:0%
one decision to start at index two and
 

00:03:48.799 --> 00:03:50.470 align:start position:0%
one decision to start at index two and
one<00:03:49.040><c> decision</c><00:03:49.599><c> to</c><00:03:49.840><c> start</c><00:03:50.159><c> at</c>

00:03:50.470 --> 00:03:50.480 align:start position:0%
one decision to start at
 

00:03:50.480 --> 00:03:53.589 align:start position:0%
one decision to start at
index<00:03:51.200><c> three</c><00:03:51.840><c> so</c><00:03:52.159><c> in</c><00:03:52.400><c> these</c><00:03:52.799><c> cases</c>

00:03:53.589 --> 00:03:53.599 align:start position:0%
index three so in these cases
 

00:03:53.599 --> 00:03:56.229 align:start position:0%
index three so in these cases
these<00:03:53.920><c> are</c><00:03:54.080><c> going</c><00:03:54.239><c> to</c><00:03:54.400><c> be</c><00:03:54.640><c> the</c><00:03:55.439><c> subsequences</c>

00:03:56.229 --> 00:03:56.239 align:start position:0%
these are going to be the subsequences
 

00:03:56.239 --> 00:03:58.789 align:start position:0%
these are going to be the subsequences
we<00:03:56.400><c> have</c><00:03:56.640><c> so</c><00:03:56.879><c> far</c><00:03:57.200><c> so</c><00:03:57.360><c> we</c><00:03:57.519><c> know</c><00:03:57.760><c> index</c><00:03:58.159><c> zero</c><00:03:58.560><c> has</c>

00:03:58.789 --> 00:03:58.799 align:start position:0%
we have so far so we know index zero has
 

00:03:58.799 --> 00:03:59.509 align:start position:0%
we have so far so we know index zero has
value<00:03:59.200><c> 1</c>

00:03:59.509 --> 00:03:59.519 align:start position:0%
value 1
 

00:03:59.519 --> 00:04:03.190 align:start position:0%
value 1
index<00:03:59.920><c> 1</c><00:04:00.159><c> has</c><00:04:00.400><c> value</c><00:04:00.879><c> 2</c><00:04:01.519><c> index</c><00:04:02.000><c> 2</c><00:04:02.400><c> has</c><00:04:02.640><c> value</c>

00:04:03.190 --> 00:04:03.200 align:start position:0%
index 1 has value 2 index 2 has value
 

00:04:03.200 --> 00:04:06.630 align:start position:0%
index 1 has value 2 index 2 has value
4<00:04:03.840><c> index</c><00:04:04.400><c> 3</c><00:04:05.040><c> has</c><00:04:05.439><c> value</c><00:04:06.080><c> 3.</c>

00:04:06.630 --> 00:04:06.640 align:start position:0%
4 index 3 has value 3.
 

00:04:06.640 --> 00:04:10.149 align:start position:0%
4 index 3 has value 3.
so<00:04:06.959><c> now</c><00:04:07.200><c> let's</c><00:04:07.599><c> go</c><00:04:07.840><c> along</c><00:04:08.720><c> the</c><00:04:09.040><c> first</c><00:04:09.439><c> path</c><00:04:09.840><c> so</c>

00:04:10.149 --> 00:04:10.159 align:start position:0%
so now let's go along the first path so
 

00:04:10.159 --> 00:04:13.509 align:start position:0%
so now let's go along the first path so
index<00:04:10.799><c> 0</c><00:04:11.200><c> so</c><00:04:11.760><c> we</c><00:04:12.000><c> know</c><00:04:12.239><c> if</c><00:04:12.319><c> we</c><00:04:12.560><c> start</c><00:04:12.879><c> at</c><00:04:13.120><c> index</c>

00:04:13.509 --> 00:04:13.519 align:start position:0%
index 0 so we know if we start at index
 

00:04:13.519 --> 00:04:14.070 align:start position:0%
index 0 so we know if we start at index
zero

00:04:14.070 --> 00:04:14.080 align:start position:0%
zero
 

00:04:14.080 --> 00:04:16.469 align:start position:0%
zero
we<00:04:14.319><c> have</c><00:04:14.799><c> three</c><00:04:15.280><c> values</c><00:04:15.760><c> that</c><00:04:15.920><c> come</c><00:04:16.160><c> after</c><00:04:16.400><c> it</c>

00:04:16.469 --> 00:04:16.479 align:start position:0%
we have three values that come after it
 

00:04:16.479 --> 00:04:17.590 align:start position:0%
we have three values that come after it
so<00:04:16.720><c> we</c><00:04:16.799><c> can</c><00:04:17.040><c> try</c>

00:04:17.590 --> 00:04:17.600 align:start position:0%
so we can try
 

00:04:17.600 --> 00:04:20.710 align:start position:0%
so we can try
all<00:04:18.000><c> three</c><00:04:18.400><c> of</c><00:04:18.560><c> these</c><00:04:18.880><c> possible</c><00:04:19.840><c> decisions</c>

00:04:20.710 --> 00:04:20.720 align:start position:0%
all three of these possible decisions
 

00:04:20.720 --> 00:04:23.749 align:start position:0%
all three of these possible decisions
so<00:04:20.880><c> we</c><00:04:21.040><c> can</c><00:04:21.199><c> go</c><00:04:21.359><c> along</c><00:04:22.000><c> index</c><00:04:22.639><c> one</c><00:04:23.199><c> index</c>

00:04:23.749 --> 00:04:23.759 align:start position:0%
so we can go along index one index
 

00:04:23.759 --> 00:04:26.790 align:start position:0%
so we can go along index one index
two<00:04:24.080><c> and</c><00:04:24.320><c> index</c><00:04:24.720><c> three</c><00:04:25.680><c> and</c><00:04:25.919><c> we</c><00:04:26.240><c> see</c><00:04:26.479><c> that</c>

00:04:26.790 --> 00:04:26.800 align:start position:0%
two and index three and we see that
 

00:04:26.800 --> 00:04:29.830 align:start position:0%
two and index three and we see that
all<00:04:27.040><c> three</c><00:04:27.520><c> are</c><00:04:27.759><c> possibly</c><00:04:28.479><c> valid</c><00:04:28.880><c> because</c><00:04:29.360><c> all</c>

00:04:29.830 --> 00:04:29.840 align:start position:0%
all three are possibly valid because all
 

00:04:29.840 --> 00:04:32.790 align:start position:0%
all three are possibly valid because all
three<00:04:30.160><c> of</c><00:04:30.320><c> these</c><00:04:30.639><c> values</c><00:04:31.199><c> are</c><00:04:31.520><c> greater</c><00:04:32.400><c> than</c>

00:04:32.790 --> 00:04:32.800 align:start position:0%
three of these values are greater than
 

00:04:32.800 --> 00:04:33.270 align:start position:0%
three of these values are greater than
one

00:04:33.270 --> 00:04:33.280 align:start position:0%
one
 

00:04:33.280 --> 00:04:36.070 align:start position:0%
one
so<00:04:33.440><c> we</c><00:04:33.600><c> can</c><00:04:33.840><c> continue</c><00:04:34.479><c> these</c><00:04:34.800><c> subsequences</c><00:04:35.840><c> so</c>

00:04:36.070 --> 00:04:36.080 align:start position:0%
so we can continue these subsequences so
 

00:04:36.080 --> 00:04:38.550 align:start position:0%
so we can continue these subsequences so
we<00:04:36.240><c> know</c><00:04:36.479><c> index</c><00:04:36.800><c> one</c><00:04:37.040><c> has</c><00:04:37.280><c> value</c><00:04:37.680><c> two</c>

00:04:38.550 --> 00:04:38.560 align:start position:0%
we know index one has value two
 

00:04:38.560 --> 00:04:41.350 align:start position:0%
we know index one has value two
index<00:04:39.040><c> two</c><00:04:39.280><c> has</c><00:04:39.440><c> value</c><00:04:40.080><c> four</c><00:04:40.400><c> so</c><00:04:40.560><c> we</c><00:04:40.639><c> can</c><00:04:40.880><c> add</c><00:04:41.120><c> a</c>

00:04:41.350 --> 00:04:41.360 align:start position:0%
index two has value four so we can add a
 

00:04:41.360 --> 00:04:42.150 align:start position:0%
index two has value four so we can add a
four

00:04:42.150 --> 00:04:42.160 align:start position:0%
four
 

00:04:42.160 --> 00:04:44.950 align:start position:0%
four
index<00:04:42.720><c> three</c><00:04:43.040><c> has</c><00:04:43.280><c> value</c><00:04:43.759><c> three</c><00:04:44.160><c> so</c><00:04:44.320><c> we</c><00:04:44.560><c> can</c>

00:04:44.950 --> 00:04:44.960 align:start position:0%
index three has value three so we can
 

00:04:44.960 --> 00:04:45.510 align:start position:0%
index three has value three so we can
add<00:04:45.280><c> a</c>

00:04:45.510 --> 00:04:45.520 align:start position:0%
add a
 

00:04:45.520 --> 00:04:48.310 align:start position:0%
add a
three<00:04:46.160><c> to</c><00:04:46.479><c> our</c><00:04:46.639><c> subsequence</c><00:04:47.520><c> that</c><00:04:47.759><c> originally</c>

00:04:48.310 --> 00:04:48.320 align:start position:0%
three to our subsequence that originally
 

00:04:48.320 --> 00:04:49.030 align:start position:0%
three to our subsequence that originally
was<00:04:48.560><c> just</c>

00:04:49.030 --> 00:04:49.040 align:start position:0%
was just
 

00:04:49.040 --> 00:04:52.150 align:start position:0%
was just
one<00:04:49.600><c> so</c><00:04:50.000><c> now</c><00:04:50.639><c> we</c><00:04:51.040><c> took</c><00:04:51.520><c> index</c>

00:04:52.150 --> 00:04:52.160 align:start position:0%
one so now we took index
 

00:04:52.160 --> 00:04:55.030 align:start position:0%
one so now we took index
zero<00:04:52.560><c> and</c><00:04:52.720><c> index</c><00:04:53.199><c> one</c><00:04:53.680><c> so</c><00:04:53.840><c> for</c><00:04:54.160><c> here</c><00:04:54.560><c> we</c><00:04:54.720><c> only</c>

00:04:55.030 --> 00:04:55.040 align:start position:0%
zero and index one so for here we only
 

00:04:55.040 --> 00:04:55.510 align:start position:0%
zero and index one so for here we only
have

00:04:55.510 --> 00:04:55.520 align:start position:0%
have
 

00:04:55.520 --> 00:04:58.390 align:start position:0%
have
two<00:04:56.080><c> indices</c><00:04:56.560><c> that</c><00:04:56.720><c> come</c><00:04:57.040><c> after</c><00:04:57.840><c> these</c><00:04:58.160><c> two</c>

00:04:58.390 --> 00:04:58.400 align:start position:0%
two indices that come after these two
 

00:04:58.400 --> 00:04:59.030 align:start position:0%
two indices that come after these two
values

00:04:59.030 --> 00:04:59.040 align:start position:0%
values
 

00:04:59.040 --> 00:05:01.670 align:start position:0%
values
so<00:04:59.360><c> let's</c><00:04:59.759><c> continue</c><00:05:00.320><c> our</c><00:05:00.400><c> decisions</c><00:05:01.280><c> we</c><00:05:01.440><c> see</c>

00:05:01.670 --> 00:05:01.680 align:start position:0%
so let's continue our decisions we see
 

00:05:01.680 --> 00:05:02.469 align:start position:0%
so let's continue our decisions we see
that<00:05:02.000><c> both</c>

00:05:02.469 --> 00:05:02.479 align:start position:0%
that both
 

00:05:02.479 --> 00:05:05.670 align:start position:0%
that both
four<00:05:02.960><c> and</c><00:05:03.360><c> three</c><00:05:03.919><c> are</c><00:05:04.240><c> greater</c><00:05:05.039><c> than</c><00:05:05.360><c> the</c>

00:05:05.670 --> 00:05:05.680 align:start position:0%
four and three are greater than the
 

00:05:05.680 --> 00:05:07.909 align:start position:0%
four and three are greater than the
the<00:05:05.919><c> last</c><00:05:06.240><c> value</c><00:05:06.639><c> in</c><00:05:06.720><c> our</c><00:05:06.880><c> subsequence</c><00:05:07.680><c> which</c>

00:05:07.909 --> 00:05:07.919 align:start position:0%
the last value in our subsequence which
 

00:05:07.919 --> 00:05:08.710 align:start position:0%
the last value in our subsequence which
is<00:05:08.240><c> two</c>

00:05:08.710 --> 00:05:08.720 align:start position:0%
is two
 

00:05:08.720 --> 00:05:11.590 align:start position:0%
is two
so<00:05:08.960><c> we</c><00:05:09.120><c> can</c><00:05:09.360><c> choose</c><00:05:09.919><c> both</c><00:05:10.240><c> of</c><00:05:10.400><c> these</c><00:05:10.720><c> decisions</c>

00:05:11.590 --> 00:05:11.600 align:start position:0%
so we can choose both of these decisions
 

00:05:11.600 --> 00:05:14.629 align:start position:0%
so we can choose both of these decisions
so<00:05:11.840><c> if</c><00:05:11.919><c> we</c><00:05:12.080><c> take</c><00:05:12.400><c> index</c><00:05:12.880><c> 2</c><00:05:13.199><c> then</c><00:05:13.520><c> we</c><00:05:13.680><c> can</c><00:05:13.919><c> add</c><00:05:14.320><c> a</c>

00:05:14.629 --> 00:05:14.639 align:start position:0%
so if we take index 2 then we can add a
 

00:05:14.639 --> 00:05:18.150 align:start position:0%
so if we take index 2 then we can add a
4<00:05:14.960><c> to</c><00:05:15.199><c> our</c><00:05:15.360><c> subsequence</c><00:05:16.720><c> if</c><00:05:16.880><c> we</c><00:05:17.039><c> take</c><00:05:17.360><c> index</c><00:05:17.840><c> 3</c>

00:05:18.150 --> 00:05:18.160 align:start position:0%
4 to our subsequence if we take index 3
 

00:05:18.160 --> 00:05:19.189 align:start position:0%
4 to our subsequence if we take index 3
we<00:05:18.320><c> can</c><00:05:18.560><c> add</c><00:05:18.880><c> a</c>

00:05:19.189 --> 00:05:19.199 align:start position:0%
we can add a
 

00:05:19.199 --> 00:05:22.230 align:start position:0%
we can add a
3<00:05:19.600><c> to</c><00:05:19.759><c> our</c><00:05:19.919><c> subsequence</c><00:05:21.120><c> so</c><00:05:21.360><c> now</c><00:05:21.919><c> let's</c>

00:05:22.230 --> 00:05:22.240 align:start position:0%
3 to our subsequence so now let's
 

00:05:22.240 --> 00:05:23.670 align:start position:0%
3 to our subsequence so now let's
continue<00:05:22.800><c> here</c><00:05:23.120><c> we</c><00:05:23.280><c> have</c>

00:05:23.670 --> 00:05:23.680 align:start position:0%
continue here we have
 

00:05:23.680 --> 00:05:26.469 align:start position:0%
continue here we have
three<00:05:24.080><c> values</c><00:05:24.560><c> so</c><00:05:24.800><c> far</c><00:05:24.960><c> in</c><00:05:25.120><c> our</c><00:05:25.280><c> subsequence</c>

00:05:26.469 --> 00:05:26.479 align:start position:0%
three values so far in our subsequence
 

00:05:26.479 --> 00:05:27.350 align:start position:0%
three values so far in our subsequence
and<00:05:26.720><c> there's</c><00:05:27.039><c> one</c>

00:05:27.350 --> 00:05:27.360 align:start position:0%
and there's one
 

00:05:27.360 --> 00:05:29.749 align:start position:0%
and there's one
index<00:05:27.759><c> that</c><00:05:27.919><c> comes</c><00:05:28.160><c> after</c><00:05:28.560><c> two</c><00:05:28.960><c> index</c><00:05:29.440><c> three</c>

00:05:29.749 --> 00:05:29.759 align:start position:0%
index that comes after two index three
 

00:05:29.759 --> 00:05:31.350 align:start position:0%
index that comes after two index three
it<00:05:29.919><c> has</c><00:05:30.160><c> a</c><00:05:30.320><c> value</c><00:05:30.880><c> three</c>

00:05:31.350 --> 00:05:31.360 align:start position:0%
it has a value three
 

00:05:31.360 --> 00:05:34.790 align:start position:0%
it has a value three
so<00:05:31.759><c> can</c><00:05:32.160><c> we</c><00:05:32.560><c> add</c><00:05:32.880><c> a</c><00:05:33.120><c> three</c><00:05:33.520><c> to</c><00:05:33.759><c> our</c><00:05:33.919><c> subsequence</c>

00:05:34.790 --> 00:05:34.800 align:start position:0%
so can we add a three to our subsequence
 

00:05:34.800 --> 00:05:38.469 align:start position:0%
so can we add a three to our subsequence
we'll<00:05:34.960><c> get</c><00:05:35.280><c> one</c><00:05:35.759><c> two</c><00:05:36.560><c> four</c><00:05:37.120><c> and</c><00:05:37.280><c> then</c><00:05:37.919><c> 3</c>

00:05:38.469 --> 00:05:38.479 align:start position:0%
we'll get one two four and then 3
 

00:05:38.479 --> 00:05:41.670 align:start position:0%
we'll get one two four and then 3
but<00:05:38.960><c> this</c><00:05:39.440><c> 3</c><00:05:40.160><c> is</c><00:05:40.479><c> not</c><00:05:40.960><c> greater</c>

00:05:41.670 --> 00:05:41.680 align:start position:0%
but this 3 is not greater
 

00:05:41.680 --> 00:05:43.909 align:start position:0%
but this 3 is not greater
than<00:05:41.840><c> the</c><00:05:42.080><c> last</c><00:05:42.400><c> value</c><00:05:42.800><c> in</c><00:05:42.880><c> our</c><00:05:43.039><c> subsequence</c>

00:05:43.909 --> 00:05:43.919 align:start position:0%
than the last value in our subsequence
 

00:05:43.919 --> 00:05:45.029 align:start position:0%
than the last value in our subsequence
so<00:05:44.080><c> we</c><00:05:44.320><c> technically</c>

00:05:45.029 --> 00:05:45.039 align:start position:0%
so we technically
 

00:05:45.039 --> 00:05:48.070 align:start position:0%
so we technically
cannot<00:05:45.759><c> make</c><00:05:46.000><c> this</c><00:05:46.240><c> decision</c><00:05:47.039><c> so</c><00:05:47.280><c> we</c><00:05:47.520><c> cannot</c>

00:05:48.070 --> 00:05:48.080 align:start position:0%
cannot make this decision so we cannot
 

00:05:48.080 --> 00:05:48.950 align:start position:0%
cannot make this decision so we cannot
continue

00:05:48.950 --> 00:05:48.960 align:start position:0%
continue
 

00:05:48.960 --> 00:05:52.310 align:start position:0%
continue
to<00:05:49.280><c> increase</c><00:05:49.840><c> the</c><00:05:50.160><c> subsequence</c><00:05:51.280><c> anymore</c>

00:05:52.310 --> 00:05:52.320 align:start position:0%
to increase the subsequence anymore
 

00:05:52.320 --> 00:05:55.430 align:start position:0%
to increase the subsequence anymore
so<00:05:52.560><c> we</c><00:05:52.720><c> can</c><00:05:53.120><c> mark</c><00:05:53.440><c> this</c><00:05:53.919><c> as</c><00:05:54.400><c> reaching</c><00:05:54.960><c> its</c>

00:05:55.430 --> 00:05:55.440 align:start position:0%
so we can mark this as reaching its
 

00:05:55.440 --> 00:05:58.230 align:start position:0%
so we can mark this as reaching its
limit<00:05:55.759><c> we</c><00:05:55.919><c> cannot</c><00:05:56.319><c> continue</c><00:05:56.800><c> it</c><00:05:57.120><c> anymore</c><00:05:58.080><c> what</c>

00:05:58.230 --> 00:05:58.240 align:start position:0%
limit we cannot continue it anymore what
 

00:05:58.240 --> 00:05:58.790 align:start position:0%
limit we cannot continue it anymore what
about

00:05:58.790 --> 00:05:58.800 align:start position:0%
about
 

00:05:58.800 --> 00:06:01.590 align:start position:0%
about
this<00:05:59.120><c> one</c><00:05:59.600><c> well</c><00:05:59.840><c> it</c><00:06:00.080><c> stopped</c><00:06:00.639><c> at</c><00:06:00.800><c> index</c><00:06:01.360><c> three</c>

00:06:01.590 --> 00:06:01.600 align:start position:0%
this one well it stopped at index three
 

00:06:01.600 --> 00:06:02.710 align:start position:0%
this one well it stopped at index three
which<00:06:01.840><c> was</c><00:06:02.080><c> over</c><00:06:02.319><c> here</c>

00:06:02.710 --> 00:06:02.720 align:start position:0%
which was over here
 

00:06:02.720 --> 00:06:04.870 align:start position:0%
which was over here
so<00:06:02.960><c> are</c><00:06:03.120><c> there</c><00:06:03.440><c> any</c><00:06:03.919><c> elements</c><00:06:04.319><c> that</c><00:06:04.479><c> come</c>

00:06:04.870 --> 00:06:04.880 align:start position:0%
so are there any elements that come
 

00:06:04.880 --> 00:06:05.990 align:start position:0%
so are there any elements that come
after<00:06:05.280><c> it</c><00:06:05.440><c> now</c>

00:06:05.990 --> 00:06:06.000 align:start position:0%
after it now
 

00:06:06.000 --> 00:06:08.710 align:start position:0%
after it now
no<00:06:06.319><c> there's</c><00:06:06.720><c> not</c><00:06:06.960><c> any</c><00:06:07.199><c> elements</c><00:06:08.000><c> so</c><00:06:08.400><c> this</c>

00:06:08.710 --> 00:06:08.720 align:start position:0%
no there's not any elements so this
 

00:06:08.720 --> 00:06:09.670 align:start position:0%
no there's not any elements so this
subsequence

00:06:09.670 --> 00:06:09.680 align:start position:0%
subsequence
 

00:06:09.680 --> 00:06:13.029 align:start position:0%
subsequence
has<00:06:10.160><c> also</c><00:06:10.720><c> reached</c><00:06:11.280><c> its</c><00:06:11.600><c> limit</c><00:06:12.160><c> so</c><00:06:12.319><c> we</c><00:06:12.560><c> cannot</c>

00:06:13.029 --> 00:06:13.039 align:start position:0%
has also reached its limit so we cannot
 

00:06:13.039 --> 00:06:13.909 align:start position:0%
has also reached its limit so we cannot
increase<00:06:13.600><c> it</c>

00:06:13.909 --> 00:06:13.919 align:start position:0%
increase it
 

00:06:13.919 --> 00:06:17.430 align:start position:0%
increase it
anymore<00:06:14.880><c> but</c><00:06:15.120><c> so</c><00:06:15.440><c> now</c><00:06:16.000><c> let's</c><00:06:16.319><c> focus</c><00:06:16.880><c> on</c><00:06:17.120><c> this</c>

00:06:17.430 --> 00:06:17.440 align:start position:0%
anymore but so now let's focus on this
 

00:06:17.440 --> 00:06:18.870 align:start position:0%
anymore but so now let's focus on this
caching<00:06:18.160><c> part</c>

00:06:18.870 --> 00:06:18.880 align:start position:0%
caching part
 

00:06:18.880 --> 00:06:20.950 align:start position:0%
caching part
what<00:06:19.360><c> kind</c><00:06:19.600><c> of</c><00:06:19.759><c> repeated</c><00:06:20.400><c> work</c><00:06:20.639><c> have</c><00:06:20.800><c> we</c>

00:06:20.950 --> 00:06:20.960 align:start position:0%
what kind of repeated work have we
 

00:06:20.960 --> 00:06:22.870 align:start position:0%
what kind of repeated work have we
eliminated<00:06:21.600><c> well</c><00:06:21.759><c> let's</c><00:06:22.000><c> just</c>

00:06:22.870 --> 00:06:22.880 align:start position:0%
eliminated well let's just
 

00:06:22.880 --> 00:06:24.550 align:start position:0%
eliminated well let's just
do<00:06:23.039><c> this</c><00:06:23.280><c> out</c><00:06:23.440><c> of</c><00:06:23.600><c> order</c><00:06:23.919><c> instead</c><00:06:24.160><c> of</c><00:06:24.319><c> doing</c>

00:06:24.550 --> 00:06:24.560 align:start position:0%
do this out of order instead of doing
 

00:06:24.560 --> 00:06:26.230 align:start position:0%
do this out of order instead of doing
these<00:06:24.880><c> first</c><00:06:25.199><c> let</c><00:06:25.360><c> me</c><00:06:25.440><c> show</c><00:06:25.600><c> you</c><00:06:25.759><c> what</c><00:06:25.919><c> happens</c>

00:06:26.230 --> 00:06:26.240 align:start position:0%
these first let me show you what happens
 

00:06:26.240 --> 00:06:29.029 align:start position:0%
these first let me show you what happens
if<00:06:26.319><c> we</c><00:06:26.479><c> try</c><00:06:26.720><c> to</c><00:06:26.960><c> extend</c><00:06:27.520><c> the</c><00:06:27.840><c> three</c><00:06:28.240><c> now</c>

00:06:29.029 --> 00:06:29.039 align:start position:0%
if we try to extend the three now
 

00:06:29.039 --> 00:06:31.110 align:start position:0%
if we try to extend the three now
we<00:06:29.360><c> try</c><00:06:29.520><c> to</c><00:06:29.680><c> get</c><00:06:29.840><c> another</c><00:06:30.240><c> element</c><00:06:30.639><c> right</c><00:06:30.880><c> we</c>

00:06:31.110 --> 00:06:31.120 align:start position:0%
we try to get another element right we
 

00:06:31.120 --> 00:06:32.390 align:start position:0%
we try to get another element right we
started<00:06:31.600><c> at</c><00:06:31.759><c> index</c>

00:06:32.390 --> 00:06:32.400 align:start position:0%
started at index
 

00:06:32.400 --> 00:06:35.590 align:start position:0%
started at index
three<00:06:32.960><c> but</c><00:06:33.199><c> we</c><00:06:33.520><c> know</c><00:06:33.680><c> that</c><00:06:34.080><c> no</c><00:06:34.479><c> values</c><00:06:35.199><c> come</c>

00:06:35.590 --> 00:06:35.600 align:start position:0%
three but we know that no values come
 

00:06:35.600 --> 00:06:38.629 align:start position:0%
three but we know that no values come
after<00:06:36.000><c> index</c><00:06:36.560><c> three</c><00:06:37.199><c> so</c><00:06:37.520><c> this</c><00:06:37.759><c> one</c><00:06:38.080><c> cannot</c><00:06:38.479><c> be</c>

00:06:38.629 --> 00:06:38.639 align:start position:0%
after index three so this one cannot be
 

00:06:38.639 --> 00:06:39.670 align:start position:0%
after index three so this one cannot be
continued

00:06:39.670 --> 00:06:39.680 align:start position:0%
continued
 

00:06:39.680 --> 00:06:42.790 align:start position:0%
continued
but<00:06:40.000><c> what</c><00:06:40.240><c> do</c><00:06:40.400><c> we</c><00:06:40.800><c> know</c><00:06:41.120><c> about</c><00:06:41.600><c> index</c><00:06:42.080><c> three</c>

00:06:42.790 --> 00:06:42.800 align:start position:0%
but what do we know about index three
 

00:06:42.800 --> 00:06:45.990 align:start position:0%
but what do we know about index three
if<00:06:43.120><c> we</c><00:06:43.600><c> start</c><00:06:44.080><c> at</c><00:06:44.400><c> index</c><00:06:44.880><c> three</c><00:06:45.280><c> and</c><00:06:45.440><c> we</c><00:06:45.759><c> want</c>

00:06:45.990 --> 00:06:46.000 align:start position:0%
if we start at index three and we want
 

00:06:46.000 --> 00:06:47.670 align:start position:0%
if we start at index three and we want
the<00:06:46.319><c> longest</c><00:06:46.960><c> increasing</c>

00:06:47.670 --> 00:06:47.680 align:start position:0%
the longest increasing
 

00:06:47.680 --> 00:06:51.830 align:start position:0%
the longest increasing
subsequence<00:06:48.800><c> we</c><00:06:49.440><c> just</c><00:06:49.919><c> get</c><00:06:50.240><c> a</c><00:06:50.639><c> single</c><00:06:51.280><c> three</c>

00:06:51.830 --> 00:06:51.840 align:start position:0%
subsequence we just get a single three
 

00:06:51.840 --> 00:06:55.270 align:start position:0%
subsequence we just get a single three
so<00:06:52.080><c> that</c><00:06:52.400><c> tells</c><00:06:52.800><c> us</c><00:06:53.120><c> that</c><00:06:53.440><c> lis</c><00:06:54.560><c> starting</c><00:06:55.039><c> at</c>

00:06:55.270 --> 00:06:55.280 align:start position:0%
so that tells us that lis starting at
 

00:06:55.280 --> 00:06:58.070 align:start position:0%
so that tells us that lis starting at
index<00:06:55.680><c> three</c><00:06:56.160><c> is</c><00:06:56.479><c> one</c><00:06:57.039><c> we</c><00:06:57.360><c> don't</c><00:06:57.599><c> need</c><00:06:57.840><c> to</c>

00:06:58.070 --> 00:06:58.080 align:start position:0%
index three is one we don't need to
 

00:06:58.080 --> 00:06:59.189 align:start position:0%
index three is one we don't need to
repeat<00:06:58.479><c> this</c><00:06:58.720><c> work</c>

00:06:59.189 --> 00:06:59.199 align:start position:0%
repeat this work
 

00:06:59.199 --> 00:07:01.990 align:start position:0%
repeat this work
and<00:06:59.520><c> isn't</c><00:07:00.000><c> that</c><00:07:00.240><c> what</c><00:07:00.400><c> we</c><00:07:00.720><c> just</c><00:07:01.120><c> learned</c><00:07:01.599><c> over</c>

00:07:01.990 --> 00:07:02.000 align:start position:0%
and isn't that what we just learned over
 

00:07:02.000 --> 00:07:02.790 align:start position:0%
and isn't that what we just learned over
here

00:07:02.790 --> 00:07:02.800 align:start position:0%
here
 

00:07:02.800 --> 00:07:05.830 align:start position:0%
here
even<00:07:03.360><c> though</c><00:07:03.680><c> this</c><00:07:04.000><c> subsequence</c><00:07:05.039><c> is</c><00:07:05.360><c> length</c>

00:07:05.830 --> 00:07:05.840 align:start position:0%
even though this subsequence is length
 

00:07:05.840 --> 00:07:09.990 align:start position:0%
even though this subsequence is length
3<00:07:06.800><c> we</c><00:07:07.360><c> are</c><00:07:07.599><c> talking</c><00:07:08.000><c> about</c><00:07:08.639><c> starting</c><00:07:09.120><c> at</c><00:07:09.199><c> the</c><00:07:09.520><c> 3</c>

00:07:09.990 --> 00:07:10.000 align:start position:0%
3 we are talking about starting at the 3
 

00:07:10.000 --> 00:07:12.790 align:start position:0%
3 we are talking about starting at the 3
and<00:07:10.160><c> we</c><00:07:10.400><c> noticed</c><00:07:11.039><c> we</c><00:07:11.199><c> could</c><00:07:11.520><c> add</c><00:07:11.919><c> a</c><00:07:12.080><c> 3</c><00:07:12.400><c> to</c><00:07:12.639><c> it</c>

00:07:12.790 --> 00:07:12.800 align:start position:0%
and we noticed we could add a 3 to it
 

00:07:12.800 --> 00:07:13.589 align:start position:0%
and we noticed we could add a 3 to it
right

00:07:13.589 --> 00:07:13.599 align:start position:0%
right
 

00:07:13.599 --> 00:07:15.670 align:start position:0%
right
this<00:07:13.840><c> was</c><00:07:14.000><c> the</c><00:07:14.240><c> element</c><00:07:14.639><c> that</c><00:07:14.800><c> we</c><00:07:15.039><c> added</c><00:07:15.440><c> but</c>

00:07:15.670 --> 00:07:15.680 align:start position:0%
this was the element that we added but
 

00:07:15.680 --> 00:07:18.390 align:start position:0%
this was the element that we added but
as<00:07:16.000><c> soon</c><00:07:16.400><c> as</c><00:07:16.560><c> we</c><00:07:16.880><c> added</c><00:07:17.360><c> that</c><00:07:17.680><c> three</c><00:07:18.080><c> we</c>

00:07:18.390 --> 00:07:18.400 align:start position:0%
as soon as we added that three we
 

00:07:18.400 --> 00:07:21.430 align:start position:0%
as soon as we added that three we
could<00:07:18.880><c> not</c><00:07:19.280><c> add</c><00:07:19.840><c> we</c><00:07:20.000><c> could</c><00:07:20.240><c> not</c><00:07:20.639><c> increase</c><00:07:21.199><c> this</c>

00:07:21.430 --> 00:07:21.440 align:start position:0%
could not add we could not increase this
 

00:07:21.440 --> 00:07:23.430 align:start position:0%
could not add we could not increase this
subsequence<00:07:22.240><c> anymore</c><00:07:22.800><c> right</c><00:07:22.960><c> that's</c><00:07:23.280><c> what</c>

00:07:23.430 --> 00:07:23.440 align:start position:0%
subsequence anymore right that's what
 

00:07:23.440 --> 00:07:23.830 align:start position:0%
subsequence anymore right that's what
this

00:07:23.830 --> 00:07:23.840 align:start position:0%
this
 

00:07:23.840 --> 00:07:27.189 align:start position:0%
this
x<00:07:24.160><c> tells</c><00:07:24.479><c> us</c><00:07:24.800><c> we</c><00:07:24.960><c> were</c><00:07:25.280><c> only</c><00:07:25.759><c> able</c><00:07:26.319><c> to</c><00:07:26.639><c> add</c>

00:07:27.189 --> 00:07:27.199 align:start position:0%
x tells us we were only able to add
 

00:07:27.199 --> 00:07:30.309 align:start position:0%
x tells us we were only able to add
one<00:07:27.680><c> element</c><00:07:28.160><c> if</c><00:07:28.319><c> we</c><00:07:28.560><c> start</c><00:07:28.880><c> at</c><00:07:29.120><c> index</c><00:07:29.599><c> three</c>

00:07:30.309 --> 00:07:30.319 align:start position:0%
one element if we start at index three
 

00:07:30.319 --> 00:07:33.350 align:start position:0%
one element if we start at index three
and<00:07:31.039><c> that's</c><00:07:31.360><c> exactly</c><00:07:31.840><c> what</c><00:07:32.080><c> this</c><00:07:32.479><c> two</c><00:07:32.800><c> told</c><00:07:33.120><c> us</c>

00:07:33.350 --> 00:07:33.360 align:start position:0%
and that's exactly what this two told us
 

00:07:33.360 --> 00:07:36.390 align:start position:0%
and that's exactly what this two told us
as<00:07:33.599><c> well</c><00:07:33.919><c> if</c><00:07:34.160><c> we</c><00:07:34.560><c> start</c><00:07:35.039><c> at</c><00:07:35.280><c> index</c><00:07:35.840><c> two</c>

00:07:36.390 --> 00:07:36.400 align:start position:0%
as well if we start at index two
 

00:07:36.400 --> 00:07:39.350 align:start position:0%
as well if we start at index two
we<00:07:36.560><c> can</c><00:07:36.880><c> add</c><00:07:37.120><c> a</c><00:07:37.360><c> four</c><00:07:37.919><c> but</c><00:07:38.160><c> this</c><00:07:38.639><c> three</c><00:07:39.199><c> that</c>

00:07:39.350 --> 00:07:39.360 align:start position:0%
we can add a four but this three that
 

00:07:39.360 --> 00:07:41.270 align:start position:0%
we can add a four but this three that
comes<00:07:39.759><c> after</c><00:07:40.160><c> it</c><00:07:40.400><c> cannot</c><00:07:40.880><c> be</c>

00:07:41.270 --> 00:07:41.280 align:start position:0%
comes after it cannot be
 

00:07:41.280 --> 00:07:43.430 align:start position:0%
comes after it cannot be
added<00:07:41.599><c> we</c><00:07:41.759><c> cannot</c><00:07:42.080><c> include</c><00:07:42.479><c> that</c><00:07:42.880><c> and</c><00:07:43.120><c> there</c>

00:07:43.430 --> 00:07:43.440 align:start position:0%
added we cannot include that and there
 

00:07:43.440 --> 00:07:46.070 align:start position:0%
added we cannot include that and there
aren't<00:07:43.840><c> any</c><00:07:44.240><c> more</c><00:07:44.639><c> elements</c><00:07:45.199><c> to</c><00:07:45.440><c> add</c>

00:07:46.070 --> 00:07:46.080 align:start position:0%
aren't any more elements to add
 

00:07:46.080 --> 00:07:48.230 align:start position:0%
aren't any more elements to add
so<00:07:46.319><c> as</c><00:07:46.479><c> soon</c><00:07:46.800><c> as</c><00:07:46.879><c> we</c><00:07:47.120><c> finish</c><00:07:47.520><c> this</c><00:07:47.840><c> and</c><00:07:48.000><c> we</c>

00:07:48.230 --> 00:07:48.240 align:start position:0%
so as soon as we finish this and we
 

00:07:48.240 --> 00:07:50.790 align:start position:0%
so as soon as we finish this and we
found<00:07:48.560><c> this</c><00:07:48.960><c> x</c><00:07:49.280><c> meaning</c><00:07:49.520><c> we</c><00:07:49.680><c> could</c><00:07:49.919><c> not</c><00:07:50.160><c> go</c><00:07:50.400><c> any</c>

00:07:50.790 --> 00:07:50.800 align:start position:0%
found this x meaning we could not go any
 

00:07:50.800 --> 00:07:51.510 align:start position:0%
found this x meaning we could not go any
lower

00:07:51.510 --> 00:07:51.520 align:start position:0%
lower
 

00:07:51.520 --> 00:07:54.710 align:start position:0%
lower
we<00:07:51.919><c> knew</c><00:07:52.960><c> we</c><00:07:53.280><c> knew</c><00:07:53.840><c> that</c><00:07:54.080><c> the</c>

00:07:54.710 --> 00:07:54.720 align:start position:0%
we knew we knew that the
 

00:07:54.720 --> 00:07:57.350 align:start position:0%
we knew we knew that the
longest<00:07:55.280><c> increasing</c><00:07:55.840><c> subsequence</c><00:07:56.879><c> starting</c>

00:07:57.350 --> 00:07:57.360 align:start position:0%
longest increasing subsequence starting
 

00:07:57.360 --> 00:07:58.150 align:start position:0%
longest increasing subsequence starting
at<00:07:57.599><c> index</c>

00:07:58.150 --> 00:07:58.160 align:start position:0%
at index
 

00:07:58.160 --> 00:08:01.189 align:start position:0%
at index
two<00:07:58.720><c> is</c><00:07:59.120><c> also</c><00:08:00.160><c> one</c><00:08:00.879><c> so</c>

00:08:01.189 --> 00:08:01.199 align:start position:0%
two is also one so
 

00:08:01.199 --> 00:08:04.869 align:start position:0%
two is also one so
therefore<00:08:02.319><c> if</c><00:08:02.560><c> we</c><00:08:02.960><c> start</c><00:08:03.599><c> at</c><00:08:03.919><c> index</c><00:08:04.319><c> two</c>

00:08:04.869 --> 00:08:04.879 align:start position:0%
therefore if we start at index two
 

00:08:04.879 --> 00:08:07.909 align:start position:0%
therefore if we start at index two
we<00:08:05.199><c> cannot</c><00:08:05.840><c> go</c><00:08:06.240><c> any</c><00:08:06.960><c> lower</c><00:08:07.360><c> we</c><00:08:07.520><c> cannot</c>

00:08:07.909 --> 00:08:07.919 align:start position:0%
we cannot go any lower we cannot
 

00:08:07.919 --> 00:08:09.110 align:start position:0%
we cannot go any lower we cannot
continue<00:08:08.479><c> this</c>

00:08:09.110 --> 00:08:09.120 align:start position:0%
continue this
 

00:08:09.120 --> 00:08:11.430 align:start position:0%
continue this
and<00:08:09.280><c> we</c><00:08:09.440><c> don't</c><00:08:09.680><c> even</c><00:08:09.919><c> have</c><00:08:10.080><c> to</c><00:08:10.319><c> attempt</c><00:08:10.960><c> to</c><00:08:11.199><c> do</c>

00:08:11.430 --> 00:08:11.440 align:start position:0%
and we don't even have to attempt to do
 

00:08:11.440 --> 00:08:12.710 align:start position:0%
and we don't even have to attempt to do
that<00:08:11.840><c> and</c><00:08:12.000><c> what</c><00:08:12.160><c> about</c>

00:08:12.710 --> 00:08:12.720 align:start position:0%
that and what about
 

00:08:12.720 --> 00:08:15.749 align:start position:0%
that and what about
this<00:08:13.280><c> branch</c><00:08:14.000><c> so</c><00:08:14.240><c> if</c><00:08:14.400><c> we</c><00:08:14.800><c> chose</c><00:08:15.280><c> if</c><00:08:15.440><c> we</c>

00:08:15.749 --> 00:08:15.759 align:start position:0%
this branch so if we chose if we
 

00:08:15.759 --> 00:08:18.550 align:start position:0%
this branch so if we chose if we
started<00:08:16.240><c> at</c><00:08:16.479><c> index</c><00:08:16.879><c> one</c><00:08:17.440><c> we</c><00:08:17.599><c> would</c><00:08:18.000><c> start</c><00:08:18.319><c> with</c>

00:08:18.550 --> 00:08:18.560 align:start position:0%
started at index one we would start with
 

00:08:18.560 --> 00:08:18.950 align:start position:0%
started at index one we would start with
the

00:08:18.950 --> 00:08:18.960 align:start position:0%
the
 

00:08:18.960 --> 00:08:20.869 align:start position:0%
the
subsequence<00:08:19.680><c> of</c><00:08:19.840><c> two</c><00:08:20.160><c> right</c><00:08:20.400><c> that's</c><00:08:20.720><c> what</c>

00:08:20.869 --> 00:08:20.879 align:start position:0%
subsequence of two right that's what
 

00:08:20.879 --> 00:08:22.070 align:start position:0%
subsequence of two right that's what
this<00:08:21.199><c> tells</c><00:08:21.520><c> us</c>

00:08:22.070 --> 00:08:22.080 align:start position:0%
this tells us
 

00:08:22.080 --> 00:08:25.110 align:start position:0%
this tells us
and<00:08:22.319><c> so</c><00:08:22.560><c> now</c><00:08:22.879><c> i'm</c><00:08:23.120><c> gonna</c><00:08:23.599><c> repeat</c><00:08:24.319><c> i'm</c><00:08:24.560><c> gonna</c>

00:08:25.110 --> 00:08:25.120 align:start position:0%
and so now i'm gonna repeat i'm gonna
 

00:08:25.120 --> 00:08:26.390 align:start position:0%
and so now i'm gonna repeat i'm gonna
do<00:08:25.280><c> some</c><00:08:25.440><c> more</c><00:08:25.680><c> stuff</c><00:08:25.919><c> right</c><00:08:26.080><c> i'm</c><00:08:26.240><c> gonna</c>

00:08:26.390 --> 00:08:26.400 align:start position:0%
do some more stuff right i'm gonna
 

00:08:26.400 --> 00:08:28.230 align:start position:0%
do some more stuff right i'm gonna
choose<00:08:26.800><c> the</c><00:08:27.039><c> next</c><00:08:27.599><c> indices</c>

00:08:28.230 --> 00:08:28.240 align:start position:0%
choose the next indices
 

00:08:28.240 --> 00:08:31.430 align:start position:0%
choose the next indices
two<00:08:28.800><c> and</c><00:08:29.120><c> three</c><00:08:29.759><c> but</c><00:08:30.000><c> wait</c><00:08:30.319><c> a</c><00:08:30.400><c> minute</c><00:08:30.960><c> do</c><00:08:31.199><c> i</c>

00:08:31.430 --> 00:08:31.440 align:start position:0%
two and three but wait a minute do i
 

00:08:31.440 --> 00:08:33.269 align:start position:0%
two and three but wait a minute do i
actually<00:08:32.000><c> have</c><00:08:32.240><c> to</c><00:08:32.479><c> do</c><00:08:32.719><c> that</c>

00:08:33.269 --> 00:08:33.279 align:start position:0%
actually have to do that
 

00:08:33.279 --> 00:08:36.389 align:start position:0%
actually have to do that
because<00:08:34.320><c> look</c><00:08:34.719><c> over</c><00:08:35.200><c> here</c>

00:08:36.389 --> 00:08:36.399 align:start position:0%
because look over here
 

00:08:36.399 --> 00:08:40.149 align:start position:0%
because look over here
we<00:08:36.640><c> started</c><00:08:37.120><c> with</c><00:08:37.440><c> index</c><00:08:38.000><c> one</c><00:08:38.640><c> and</c><00:08:38.800><c> we</c><00:08:39.360><c> already</c>

00:08:40.149 --> 00:08:40.159 align:start position:0%
we started with index one and we already
 

00:08:40.159 --> 00:08:43.509 align:start position:0%
we started with index one and we already
did<00:08:40.399><c> that</c><00:08:41.360><c> so</c><00:08:41.680><c> when</c><00:08:42.000><c> we</c><00:08:42.320><c> started</c><00:08:42.800><c> with</c><00:08:43.039><c> index</c>

00:08:43.509 --> 00:08:43.519 align:start position:0%
did that so when we started with index
 

00:08:43.519 --> 00:08:43.909 align:start position:0%
did that so when we started with index
one

00:08:43.909 --> 00:08:43.919 align:start position:0%
one
 

00:08:43.919 --> 00:08:47.190 align:start position:0%
one
we<00:08:44.240><c> saw</c><00:08:44.480><c> we</c><00:08:44.640><c> had</c><00:08:44.959><c> two</c><00:08:45.200><c> choices</c><00:08:45.839><c> a</c><00:08:46.080><c> two</c><00:08:46.880><c> or</c><00:08:47.040><c> a</c>

00:08:47.190 --> 00:08:47.200 align:start position:0%
we saw we had two choices a two or a
 

00:08:47.200 --> 00:08:49.590 align:start position:0%
we saw we had two choices a two or a
three<00:08:47.680><c> index</c><00:08:48.080><c> right</c><00:08:48.240><c> we</c><00:08:48.399><c> could</c><00:08:48.560><c> choose</c><00:08:48.959><c> this</c>

00:08:49.590 --> 00:08:49.600 align:start position:0%
three index right we could choose this
 

00:08:49.600 --> 00:08:52.389 align:start position:0%
three index right we could choose this
or<00:08:49.839><c> we</c><00:08:50.000><c> could</c><00:08:50.240><c> choose</c><00:08:50.560><c> that</c><00:08:51.120><c> we</c><00:08:51.360><c> saw</c><00:08:51.839><c> both</c><00:08:52.160><c> of</c>

00:08:52.389 --> 00:08:52.399 align:start position:0%
or we could choose that we saw both of
 

00:08:52.399 --> 00:08:52.870 align:start position:0%
or we could choose that we saw both of
them

00:08:52.870 --> 00:08:52.880 align:start position:0%
them
 

00:08:52.880 --> 00:08:55.670 align:start position:0%
them
ended<00:08:53.680><c> right</c><00:08:53.920><c> we</c><00:08:54.080><c> could</c><00:08:54.240><c> not</c><00:08:54.480><c> continue</c><00:08:55.279><c> either</c>

00:08:55.670 --> 00:08:55.680 align:start position:0%
ended right we could not continue either
 

00:08:55.680 --> 00:08:56.389 align:start position:0%
ended right we could not continue either
of<00:08:55.839><c> them</c>

00:08:56.389 --> 00:08:56.399 align:start position:0%
of them
 

00:08:56.399 --> 00:08:59.110 align:start position:0%
of them
so<00:08:56.640><c> if</c><00:08:56.800><c> you</c><00:08:57.040><c> want</c><00:08:57.279><c> the</c><00:08:57.680><c> longest</c><00:08:58.480><c> increasing</c>

00:08:59.110 --> 00:08:59.120 align:start position:0%
so if you want the longest increasing
 

00:08:59.120 --> 00:09:00.070 align:start position:0%
so if you want the longest increasing
subsequence

00:09:00.070 --> 00:09:00.080 align:start position:0%
subsequence
 

00:09:00.080 --> 00:09:03.509 align:start position:0%
subsequence
that<00:09:00.480><c> starts</c><00:09:01.440><c> at</c><00:09:01.680><c> index</c><00:09:02.320><c> 1</c><00:09:02.720><c> over</c><00:09:02.959><c> here</c>

00:09:03.509 --> 00:09:03.519 align:start position:0%
that starts at index 1 over here
 

00:09:03.519 --> 00:09:06.310 align:start position:0%
that starts at index 1 over here
no<00:09:03.760><c> matter</c><00:09:04.240><c> what</c><00:09:04.480><c> you</c><00:09:04.880><c> choose</c><00:09:05.920><c> the</c>

00:09:06.310 --> 00:09:06.320 align:start position:0%
no matter what you choose the
 

00:09:06.320 --> 00:09:07.269 align:start position:0%
no matter what you choose the
subsequence

00:09:07.269 --> 00:09:07.279 align:start position:0%
subsequence
 

00:09:07.279 --> 00:09:10.230 align:start position:0%
subsequence
is<00:09:07.440><c> gonna</c><00:09:07.680><c> be</c><00:09:08.000><c> length</c><00:09:08.560><c> two</c><00:09:09.040><c> either</c><00:09:09.519><c> way</c><00:09:09.920><c> right</c>

00:09:10.230 --> 00:09:10.240 align:start position:0%
is gonna be length two either way right
 

00:09:10.240 --> 00:09:10.790 align:start position:0%
is gonna be length two either way right
because

00:09:10.790 --> 00:09:10.800 align:start position:0%
because
 

00:09:10.800 --> 00:09:13.509 align:start position:0%
because
if<00:09:10.959><c> we</c><00:09:11.200><c> start</c><00:09:11.360><c> with</c><00:09:11.600><c> a</c><00:09:11.839><c> two</c><00:09:12.399><c> then</c><00:09:12.640><c> we</c><00:09:12.800><c> can</c><00:09:13.120><c> add</c><00:09:13.279><c> a</c>

00:09:13.509 --> 00:09:13.519 align:start position:0%
if we start with a two then we can add a
 

00:09:13.519 --> 00:09:14.070 align:start position:0%
if we start with a two then we can add a
four

00:09:14.070 --> 00:09:14.080 align:start position:0%
four
 

00:09:14.080 --> 00:09:17.590 align:start position:0%
four
or<00:09:14.320><c> we</c><00:09:14.480><c> can</c><00:09:14.720><c> add</c><00:09:15.040><c> a</c><00:09:15.200><c> three</c><00:09:16.080><c> but</c><00:09:16.320><c> we</c><00:09:16.560><c> cannot</c><00:09:17.120><c> add</c>

00:09:17.590 --> 00:09:17.600 align:start position:0%
or we can add a three but we cannot add
 

00:09:17.600 --> 00:09:20.790 align:start position:0%
or we can add a three but we cannot add
both<00:09:17.920><c> of</c><00:09:18.160><c> them</c><00:09:18.640><c> so</c><00:09:18.959><c> we</c><00:09:19.120><c> can</c><00:09:19.440><c> mark</c><00:09:19.920><c> the</c><00:09:20.160><c> longest</c>

00:09:20.790 --> 00:09:20.800 align:start position:0%
both of them so we can mark the longest
 

00:09:20.800 --> 00:09:22.550 align:start position:0%
both of them so we can mark the longest
increasing<00:09:21.440><c> subsequence</c>

00:09:22.550 --> 00:09:22.560 align:start position:0%
increasing subsequence
 

00:09:22.560 --> 00:09:25.750 align:start position:0%
increasing subsequence
starting<00:09:22.880><c> at</c><00:09:23.120><c> index</c><00:09:23.680><c> one</c><00:09:24.240><c> to</c><00:09:24.480><c> be</c><00:09:25.120><c> length</c>

00:09:25.750 --> 00:09:25.760 align:start position:0%
starting at index one to be length
 

00:09:25.760 --> 00:09:29.110 align:start position:0%
starting at index one to be length
two<00:09:26.240><c> so</c><00:09:26.480><c> we</c><00:09:26.880><c> actually</c><00:09:27.600><c> don't</c><00:09:28.160><c> even</c><00:09:28.560><c> have</c><00:09:28.800><c> to</c>

00:09:29.110 --> 00:09:29.120 align:start position:0%
two so we actually don't even have to
 

00:09:29.120 --> 00:09:33.110 align:start position:0%
two so we actually don't even have to
go<00:09:29.839><c> down</c><00:09:30.399><c> this</c><00:09:30.800><c> path</c><00:09:31.360><c> once</c><00:09:31.680><c> we</c><00:09:32.080><c> already</c>

00:09:33.110 --> 00:09:33.120 align:start position:0%
go down this path once we already
 

00:09:33.120 --> 00:09:35.509 align:start position:0%
go down this path once we already
go<00:09:33.360><c> down</c><00:09:33.839><c> here</c><00:09:34.480><c> because</c><00:09:34.640><c> it's</c><00:09:34.880><c> just</c><00:09:35.120><c> gonna</c><00:09:35.360><c> be</c>

00:09:35.509 --> 00:09:35.519 align:start position:0%
go down here because it's just gonna be
 

00:09:35.519 --> 00:09:36.790 align:start position:0%
go down here because it's just gonna be
repeated<00:09:36.240><c> work</c>

00:09:36.790 --> 00:09:36.800 align:start position:0%
repeated work
 

00:09:36.800 --> 00:09:40.070 align:start position:0%
repeated work
and<00:09:37.040><c> we</c><00:09:37.360><c> also</c><00:09:37.920><c> see</c><00:09:38.480><c> for</c><00:09:38.880><c> these</c><00:09:39.200><c> two</c><00:09:39.600><c> trees</c><00:09:39.920><c> that</c>

00:09:40.070 --> 00:09:40.080 align:start position:0%
and we also see for these two trees that
 

00:09:40.080 --> 00:09:41.590 align:start position:0%
and we also see for these two trees that
we<00:09:40.160><c> have</c><00:09:40.399><c> not</c><00:09:40.640><c> finished</c><00:09:41.040><c> yet</c>

00:09:41.590 --> 00:09:41.600 align:start position:0%
we have not finished yet
 

00:09:41.600 --> 00:09:44.150 align:start position:0%
we have not finished yet
once<00:09:42.000><c> we</c><00:09:42.240><c> add</c><00:09:42.480><c> a</c><00:09:42.720><c> four</c><00:09:43.200><c> the</c><00:09:43.519><c> longest</c>

00:09:44.150 --> 00:09:44.160 align:start position:0%
once we add a four the longest
 

00:09:44.160 --> 00:09:44.790 align:start position:0%
once we add a four the longest
increasing

00:09:44.790 --> 00:09:44.800 align:start position:0%
increasing
 

00:09:44.800 --> 00:09:48.150 align:start position:0%
increasing
subsequence<00:09:45.920><c> at</c><00:09:46.320><c> index</c><00:09:46.880><c> two</c><00:09:47.360><c> which</c><00:09:47.600><c> is</c><00:09:47.760><c> where</c>

00:09:48.150 --> 00:09:48.160 align:start position:0%
subsequence at index two which is where
 

00:09:48.160 --> 00:09:50.550 align:start position:0%
subsequence at index two which is where
four<00:09:48.480><c> is</c><00:09:48.640><c> at</c><00:09:48.880><c> is</c><00:09:49.040><c> going</c><00:09:49.200><c> to</c><00:09:49.279><c> be</c><00:09:49.519><c> 1</c><00:09:49.760><c> so</c><00:09:50.000><c> we</c><00:09:50.160><c> cannot</c>

00:09:50.550 --> 00:09:50.560 align:start position:0%
four is at is going to be 1 so we cannot
 

00:09:50.560 --> 00:09:51.430 align:start position:0%
four is at is going to be 1 so we cannot
continue<00:09:51.120><c> this</c>

00:09:51.430 --> 00:09:51.440 align:start position:0%
continue this
 

00:09:51.440 --> 00:09:54.630 align:start position:0%
continue this
anymore<00:09:52.320><c> similarly</c><00:09:52.959><c> once</c><00:09:53.279><c> we</c><00:09:53.519><c> add</c><00:09:53.760><c> a</c><00:09:54.000><c> 3</c>

00:09:54.630 --> 00:09:54.640 align:start position:0%
anymore similarly once we add a 3
 

00:09:54.640 --> 00:09:57.110 align:start position:0%
anymore similarly once we add a 3
we<00:09:54.880><c> know</c><00:09:55.200><c> no</c><00:09:55.440><c> values</c><00:09:55.920><c> come</c><00:09:56.160><c> after</c><00:09:56.560><c> it</c><00:09:56.880><c> the</c>

00:09:57.110 --> 00:09:57.120 align:start position:0%
we know no values come after it the
 

00:09:57.120 --> 00:09:59.030 align:start position:0%
we know no values come after it the
longest<00:09:57.680><c> increasing</c><00:09:58.160><c> substituent</c><00:09:58.800><c> starting</c>

00:09:59.030 --> 00:09:59.040 align:start position:0%
longest increasing substituent starting
 

00:09:59.040 --> 00:10:00.389 align:start position:0%
longest increasing substituent starting
at<00:09:59.200><c> index</c><00:09:59.600><c> 3</c><00:09:59.839><c> is</c><00:10:00.000><c> just</c>

00:10:00.389 --> 00:10:00.399 align:start position:0%
at index 3 is just
 

00:10:00.399 --> 00:10:03.990 align:start position:0%
at index 3 is just
1<00:10:00.880><c> we</c><00:10:01.120><c> cannot</c><00:10:01.680><c> increase</c><00:10:02.160><c> this</c><00:10:02.680><c> anymore</c><00:10:03.760><c> so</c>

00:10:03.990 --> 00:10:04.000 align:start position:0%
1 we cannot increase this anymore so
 

00:10:04.000 --> 00:10:05.829 align:start position:0%
1 we cannot increase this anymore so
when<00:10:04.240><c> we</c><00:10:04.480><c> finally</c><00:10:04.959><c> in</c><00:10:05.120><c> our</c><00:10:05.279><c> depth</c><00:10:05.600><c> first</c>

00:10:05.829 --> 00:10:05.839 align:start position:0%
when we finally in our depth first
 

00:10:05.839 --> 00:10:07.509 align:start position:0%
when we finally in our depth first
search<00:10:06.079><c> get</c><00:10:06.480><c> back</c><00:10:06.720><c> to</c><00:10:06.880><c> the</c><00:10:07.120><c> root</c>

00:10:07.509 --> 00:10:07.519 align:start position:0%
search get back to the root
 

00:10:07.519 --> 00:10:10.310 align:start position:0%
search get back to the root
we're<00:10:07.680><c> gonna</c><00:10:08.000><c> see</c><00:10:08.320><c> that</c><00:10:08.480><c> the</c><00:10:08.880><c> longest</c><00:10:09.440><c> path</c><00:10:09.839><c> is</c>

00:10:10.310 --> 00:10:10.320 align:start position:0%
we're gonna see that the longest path is
 

00:10:10.320 --> 00:10:12.389 align:start position:0%
we're gonna see that the longest path is
one<00:10:10.560><c> of</c><00:10:10.720><c> these</c><00:10:11.120><c> right</c><00:10:11.360><c> either</c><00:10:11.680><c> that</c><00:10:12.000><c> or</c><00:10:12.240><c> of</c>

00:10:12.389 --> 00:10:12.399 align:start position:0%
one of these right either that or of
 

00:10:12.399 --> 00:10:13.190 align:start position:0%
one of these right either that or of
course<00:10:12.640><c> you</c><00:10:12.800><c> could</c>

00:10:13.190 --> 00:10:13.200 align:start position:0%
course you could
 

00:10:13.200 --> 00:10:15.670 align:start position:0%
course you could
go<00:10:13.440><c> down</c><00:10:13.680><c> this</c><00:10:13.920><c> direction</c><00:10:14.399><c> but</c><00:10:14.640><c> either</c><00:10:14.959><c> way</c>

00:10:15.670 --> 00:10:15.680 align:start position:0%
go down this direction but either way
 

00:10:15.680 --> 00:10:16.790 align:start position:0%
go down this direction but either way
the<00:10:16.000><c> longest</c>

00:10:16.790 --> 00:10:16.800 align:start position:0%
the longest
 

00:10:16.800 --> 00:10:19.509 align:start position:0%
the longest
increasing<00:10:17.360><c> subsequence</c><00:10:18.079><c> starting</c><00:10:18.560><c> at</c><00:10:18.800><c> index</c>

00:10:19.509 --> 00:10:19.519 align:start position:0%
increasing subsequence starting at index
 

00:10:19.519 --> 00:10:20.470 align:start position:0%
increasing subsequence starting at index
zero

00:10:20.470 --> 00:10:20.480 align:start position:0%
zero
 

00:10:20.480 --> 00:10:23.990 align:start position:0%
zero
is<00:10:20.880><c> going</c><00:10:21.200><c> to</c><00:10:21.519><c> be</c><00:10:22.240><c> three</c><00:10:23.040><c> and</c><00:10:23.200><c> so</c><00:10:23.519><c> when</c><00:10:23.680><c> you</c>

00:10:23.990 --> 00:10:24.000 align:start position:0%
is going to be three and so when you
 

00:10:24.000 --> 00:10:24.470 align:start position:0%
is going to be three and so when you
look

00:10:24.470 --> 00:10:24.480 align:start position:0%
look
 

00:10:24.480 --> 00:10:27.030 align:start position:0%
look
at<00:10:24.800><c> these</c><00:10:25.200><c> four</c><00:10:25.519><c> right</c><00:10:25.760><c> because</c><00:10:26.240><c> these</c><00:10:26.720><c> are</c>

00:10:27.030 --> 00:10:27.040 align:start position:0%
at these four right because these are
 

00:10:27.040 --> 00:10:29.190 align:start position:0%
at these four right because these are
our<00:10:27.360><c> subsequences</c><00:10:28.160><c> these</c><00:10:28.320><c> are</c><00:10:28.480><c> the</c><00:10:28.720><c> longest</c>

00:10:29.190 --> 00:10:29.200 align:start position:0%
our subsequences these are the longest
 

00:10:29.200 --> 00:10:31.509 align:start position:0%
our subsequences these are the longest
subsequences<00:10:30.079><c> starting</c><00:10:30.399><c> at</c><00:10:30.640><c> each</c><00:10:30.880><c> index</c><00:10:31.279><c> the</c>

00:10:31.509 --> 00:10:31.519 align:start position:0%
subsequences starting at each index the
 

00:10:31.519 --> 00:10:32.150 align:start position:0%
subsequences starting at each index the
greatest

00:10:32.150 --> 00:10:32.160 align:start position:0%
greatest
 

00:10:32.160 --> 00:10:35.750 align:start position:0%
greatest
one<00:10:32.640><c> is</c><00:10:32.959><c> three</c><00:10:33.760><c> and</c><00:10:33.920><c> so</c><00:10:34.240><c> therefore</c><00:10:34.720><c> the</c><00:10:34.959><c> result</c>

00:10:35.750 --> 00:10:35.760 align:start position:0%
one is three and so therefore the result
 

00:10:35.760 --> 00:10:38.870 align:start position:0%
one is three and so therefore the result
is<00:10:36.320><c> three</c><00:10:36.959><c> but</c><00:10:37.279><c> now</c><00:10:37.519><c> if</c><00:10:37.760><c> you</c><00:10:38.000><c> actually</c><00:10:38.480><c> wanna</c>

00:10:38.870 --> 00:10:38.880 align:start position:0%
is three but now if you actually wanna
 

00:10:38.880 --> 00:10:40.069 align:start position:0%
is three but now if you actually wanna
do<00:10:39.120><c> the</c><00:10:39.279><c> dynamic</c>

00:10:40.069 --> 00:10:40.079 align:start position:0%
do the dynamic
 

00:10:40.079 --> 00:10:43.269 align:start position:0%
do the dynamic
programming<00:10:40.800><c> solution</c><00:10:41.839><c> you</c><00:10:42.079><c> might</c><00:10:42.480><c> notice</c>

00:10:43.269 --> 00:10:43.279 align:start position:0%
programming solution you might notice
 

00:10:43.279 --> 00:10:45.030 align:start position:0%
programming solution you might notice
how<00:10:43.440><c> we're</c><00:10:43.600><c> doing</c><00:10:43.839><c> this</c><00:10:44.000><c> recursively</c><00:10:44.720><c> we're</c>

00:10:45.030 --> 00:10:45.040 align:start position:0%
how we're doing this recursively we're
 

00:10:45.040 --> 00:10:47.670 align:start position:0%
how we're doing this recursively we're
kind<00:10:45.360><c> of</c><00:10:45.839><c> starting</c><00:10:46.480><c> at</c><00:10:46.800><c> the</c><00:10:47.120><c> last</c>

00:10:47.670 --> 00:10:47.680 align:start position:0%
kind of starting at the last
 

00:10:47.680 --> 00:10:50.470 align:start position:0%
kind of starting at the last
index<00:10:48.160><c> right</c><00:10:48.560><c> three</c><00:10:49.200><c> and</c><00:10:49.360><c> then</c><00:10:49.760><c> working</c><00:10:50.240><c> our</c>

00:10:50.470 --> 00:10:50.480 align:start position:0%
index right three and then working our
 

00:10:50.480 --> 00:10:51.110 align:start position:0%
index right three and then working our
way

00:10:51.110 --> 00:10:51.120 align:start position:0%
way
 

00:10:51.120 --> 00:10:55.430 align:start position:0%
way
up<00:10:51.760><c> backwards</c><00:10:52.640><c> to</c><00:10:52.959><c> zero</c><00:10:53.440><c> so</c><00:10:54.000><c> then</c><00:10:54.240><c> going</c><00:10:54.720><c> back</c>

00:10:55.430 --> 00:10:55.440 align:start position:0%
up backwards to zero so then going back
 

00:10:55.440 --> 00:10:58.550 align:start position:0%
up backwards to zero so then going back
here<00:10:56.000><c> so</c><00:10:56.320><c> can</c><00:10:56.560><c> we</c><00:10:56.880><c> use</c><00:10:57.200><c> that</c><00:10:57.600><c> to</c><00:10:57.760><c> do</c><00:10:58.000><c> dynamic</c>

00:10:58.550 --> 00:10:58.560 align:start position:0%
here so can we use that to do dynamic
 

00:10:58.560 --> 00:10:59.509 align:start position:0%
here so can we use that to do dynamic
programming

00:10:59.509 --> 00:10:59.519 align:start position:0%
programming
 

00:10:59.519 --> 00:11:01.509 align:start position:0%
programming
so<00:10:59.760><c> now</c><00:11:00.079><c> let</c><00:11:00.240><c> me</c><00:11:00.399><c> show</c><00:11:00.560><c> you</c><00:11:00.720><c> the</c><00:11:00.959><c> dynamic</c>

00:11:01.509 --> 00:11:01.519 align:start position:0%
so now let me show you the dynamic
 

00:11:01.519 --> 00:11:03.750 align:start position:0%
so now let me show you the dynamic
programming<00:11:02.160><c> solution</c><00:11:02.720><c> and</c><00:11:02.800><c> it's</c><00:11:03.120><c> actually</c>

00:11:03.750 --> 00:11:03.760 align:start position:0%
programming solution and it's actually
 

00:11:03.760 --> 00:11:05.829 align:start position:0%
programming solution and it's actually
easier<00:11:04.160><c> than</c><00:11:04.320><c> you</c><00:11:04.480><c> might</c><00:11:04.720><c> think</c><00:11:05.440><c> so</c><00:11:05.600><c> we're</c>

00:11:05.829 --> 00:11:05.839 align:start position:0%
easier than you might think so we're
 

00:11:05.839 --> 00:11:07.190 align:start position:0%
easier than you might think so we're
going<00:11:05.920><c> to</c><00:11:06.079><c> work</c><00:11:06.480><c> we're</c><00:11:06.640><c> going</c><00:11:06.720><c> to</c><00:11:06.880><c> start</c><00:11:07.120><c> at</c>

00:11:07.190 --> 00:11:07.200 align:start position:0%
going to work we're going to start at
 

00:11:07.200 --> 00:11:09.110 align:start position:0%
going to work we're going to start at
the<00:11:07.440><c> last</c><00:11:07.839><c> index</c><00:11:08.320><c> 3</c><00:11:08.720><c> and</c><00:11:08.800><c> then</c>

00:11:09.110 --> 00:11:09.120 align:start position:0%
the last index 3 and then
 

00:11:09.120 --> 00:11:12.069 align:start position:0%
the last index 3 and then
work<00:11:09.440><c> our</c><00:11:09.600><c> way</c><00:11:10.000><c> backward</c><00:11:10.880><c> so</c><00:11:11.279><c> we</c><00:11:11.519><c> know</c><00:11:11.680><c> this</c><00:11:11.920><c> is</c>

00:11:12.069 --> 00:11:12.079 align:start position:0%
work our way backward so we know this is
 

00:11:12.079 --> 00:11:13.590 align:start position:0%
work our way backward so we know this is
kind<00:11:12.240><c> of</c><00:11:12.399><c> the</c><00:11:12.640><c> base</c><00:11:12.959><c> case</c><00:11:13.279><c> right</c>

00:11:13.590 --> 00:11:13.600 align:start position:0%
kind of the base case right
 

00:11:13.600 --> 00:11:16.550 align:start position:0%
kind of the base case right
no<00:11:13.920><c> values</c><00:11:14.399><c> come</c><00:11:14.800><c> after</c><00:11:15.200><c> it</c><00:11:15.360><c> so</c><00:11:15.600><c> the</c><00:11:15.839><c> longest</c>

00:11:16.550 --> 00:11:16.560 align:start position:0%
no values come after it so the longest
 

00:11:16.560 --> 00:11:18.310 align:start position:0%
no values come after it so the longest
increasing<00:11:17.040><c> subsequence</c><00:11:17.680><c> we</c><00:11:17.839><c> could</c><00:11:18.079><c> make</c>

00:11:18.310 --> 00:11:18.320 align:start position:0%
increasing subsequence we could make
 

00:11:18.320 --> 00:11:19.590 align:start position:0%
increasing subsequence we could make
from<00:11:18.480><c> here</c><00:11:18.800><c> is</c><00:11:18.880><c> just</c><00:11:19.120><c> going</c><00:11:19.200><c> to</c><00:11:19.279><c> be</c>

00:11:19.590 --> 00:11:19.600 align:start position:0%
from here is just going to be
 

00:11:19.600 --> 00:11:23.030 align:start position:0%
from here is just going to be
length<00:11:20.079><c> one</c><00:11:20.560><c> anyway</c><00:11:21.200><c> so</c><00:11:21.440><c> we</c><00:11:21.600><c> can</c><00:11:21.839><c> say</c><00:11:22.079><c> the</c><00:11:22.320><c> lis</c>

00:11:23.030 --> 00:11:23.040 align:start position:0%
length one anyway so we can say the lis
 

00:11:23.040 --> 00:11:25.430 align:start position:0%
length one anyway so we can say the lis
starting<00:11:23.360><c> at</c><00:11:23.519><c> index</c><00:11:24.000><c> three</c><00:11:24.560><c> is</c><00:11:24.720><c> just</c><00:11:25.200><c> one</c>

00:11:25.430 --> 00:11:25.440 align:start position:0%
starting at index three is just one
 

00:11:25.440 --> 00:11:26.710 align:start position:0%
starting at index three is just one
that's<00:11:25.760><c> the</c><00:11:25.920><c> max</c>

00:11:26.710 --> 00:11:26.720 align:start position:0%
that's the max
 

00:11:26.720 --> 00:11:29.509 align:start position:0%
that's the max
length<00:11:27.360><c> now</c><00:11:27.600><c> how</c><00:11:27.760><c> do</c><00:11:28.000><c> we</c><00:11:28.240><c> get</c><00:11:28.640><c> the</c><00:11:28.880><c> longest</c>

00:11:29.509 --> 00:11:29.519 align:start position:0%
length now how do we get the longest
 

00:11:29.519 --> 00:11:31.269 align:start position:0%
length now how do we get the longest
increasing<00:11:30.160><c> subsequence</c>

00:11:31.269 --> 00:11:31.279 align:start position:0%
increasing subsequence
 

00:11:31.279 --> 00:11:34.470 align:start position:0%
increasing subsequence
starting<00:11:32.000><c> at</c><00:11:32.399><c> index</c><00:11:33.279><c> two</c><00:11:33.920><c> which</c><00:11:34.160><c> is</c>

00:11:34.470 --> 00:11:34.480 align:start position:0%
starting at index two which is
 

00:11:34.480 --> 00:11:37.750 align:start position:0%
starting at index two which is
just<00:11:35.040><c> one</c><00:11:35.600><c> shifted</c><00:11:36.320><c> to</c><00:11:36.480><c> the</c><00:11:36.800><c> left</c><00:11:37.360><c> well</c>

00:11:37.750 --> 00:11:37.760 align:start position:0%
just one shifted to the left well
 

00:11:37.760 --> 00:11:41.269 align:start position:0%
just one shifted to the left well
one<00:11:38.160><c> possibility</c><00:11:39.200><c> is</c><00:11:39.600><c> just</c><00:11:40.079><c> four</c><00:11:40.399><c> by</c><00:11:40.640><c> itself</c>

00:11:41.269 --> 00:11:41.279 align:start position:0%
one possibility is just four by itself
 

00:11:41.279 --> 00:11:44.630 align:start position:0%
one possibility is just four by itself
right<00:11:41.760><c> so</c><00:11:42.079><c> that's</c><00:11:42.560><c> one</c><00:11:42.880><c> possibility</c><00:11:44.079><c> it</c><00:11:44.320><c> could</c>

00:11:44.630 --> 00:11:44.640 align:start position:0%
right so that's one possibility it could
 

00:11:44.640 --> 00:11:45.190 align:start position:0%
right so that's one possibility it could
just

00:11:45.190 --> 00:11:45.200 align:start position:0%
just
 

00:11:45.200 --> 00:11:48.790 align:start position:0%
just
be<00:11:46.079><c> one</c><00:11:46.880><c> or</c><00:11:47.519><c> it</c><00:11:47.680><c> could</c><00:11:48.000><c> be</c>

00:11:48.790 --> 00:11:48.800 align:start position:0%
be one or it could be
 

00:11:48.800 --> 00:11:52.629 align:start position:0%
be one or it could be
one<00:11:49.680><c> plus</c><00:11:50.880><c> the</c><00:11:51.200><c> longest</c><00:11:51.920><c> increasing</c>

00:11:52.629 --> 00:11:52.639 align:start position:0%
one plus the longest increasing
 

00:11:52.639 --> 00:11:56.389 align:start position:0%
one plus the longest increasing
subsequence<00:11:54.000><c> starting</c><00:11:54.480><c> at</c><00:11:54.639><c> position</c><00:11:55.600><c> three</c>

00:11:56.389 --> 00:11:56.399 align:start position:0%
subsequence starting at position three
 

00:11:56.399 --> 00:11:59.910 align:start position:0%
subsequence starting at position three
and<00:11:56.560><c> what</c><00:11:56.800><c> this</c><00:11:57.200><c> means</c><00:11:57.760><c> is</c><00:11:58.560><c> if</c><00:11:58.880><c> we</c><00:11:59.120><c> take</c>

00:11:59.910 --> 00:11:59.920 align:start position:0%
and what this means is if we take
 

00:11:59.920 --> 00:12:02.870 align:start position:0%
and what this means is if we take
both<00:12:00.240><c> of</c><00:12:00.480><c> these</c><00:12:00.880><c> right</c><00:12:01.200><c> because</c><00:12:01.920><c> lis</c><00:12:02.480><c> of</c><00:12:02.639><c> three</c>

00:12:02.870 --> 00:12:02.880 align:start position:0%
both of these right because lis of three
 

00:12:02.880 --> 00:12:03.350 align:start position:0%
both of these right because lis of three
is<00:12:03.040><c> just</c>

00:12:03.350 --> 00:12:03.360 align:start position:0%
is just
 

00:12:03.360 --> 00:12:06.150 align:start position:0%
is just
one<00:12:03.920><c> right</c><00:12:04.160><c> so</c><00:12:04.399><c> three</c><00:12:04.720><c> by</c><00:12:04.959><c> itself</c><00:12:05.519><c> but</c><00:12:05.680><c> we're</c>

00:12:06.150 --> 00:12:06.160 align:start position:0%
one right so three by itself but we're
 

00:12:06.160 --> 00:12:06.870 align:start position:0%
one right so three by itself but we're
only

00:12:06.870 --> 00:12:06.880 align:start position:0%
only
 

00:12:06.880 --> 00:12:10.389 align:start position:0%
only
allowed<00:12:07.360><c> to</c><00:12:07.600><c> do</c><00:12:07.839><c> this</c><00:12:08.320><c> if</c><00:12:08.880><c> the</c><00:12:09.200><c> value</c>

00:12:10.389 --> 00:12:10.399 align:start position:0%
allowed to do this if the value
 

00:12:10.399 --> 00:12:13.990 align:start position:0%
allowed to do this if the value
nums<00:12:11.440><c> at</c><00:12:11.839><c> index</c><00:12:12.320><c> 2</c><00:12:12.639><c> which</c><00:12:12.800><c> we</c><00:12:12.959><c> know</c><00:12:13.200><c> is</c><00:12:13.440><c> 4</c>

00:12:13.990 --> 00:12:14.000 align:start position:0%
nums at index 2 which we know is 4
 

00:12:14.000 --> 00:12:17.670 align:start position:0%
nums at index 2 which we know is 4
is<00:12:14.639><c> less</c><00:12:15.440><c> than</c><00:12:15.920><c> nums</c><00:12:16.639><c> at</c><00:12:16.959><c> index</c>

00:12:17.670 --> 00:12:17.680 align:start position:0%
is less than nums at index
 

00:12:17.680 --> 00:12:20.710 align:start position:0%
is less than nums at index
3<00:12:18.079><c> which</c><00:12:18.320><c> we</c><00:12:18.560><c> know</c><00:12:18.880><c> is</c><00:12:19.120><c> 3.</c><00:12:19.920><c> is</c><00:12:20.160><c> this</c>

00:12:20.710 --> 00:12:20.720 align:start position:0%
3 which we know is 3. is this
 

00:12:20.720 --> 00:12:24.470 align:start position:0%
3 which we know is 3. is this
true<00:12:21.440><c> this</c><00:12:21.760><c> is</c><00:12:22.240><c> not</c><00:12:23.040><c> true</c><00:12:23.600><c> so</c><00:12:23.839><c> we</c><00:12:24.079><c> are</c>

00:12:24.470 --> 00:12:24.480 align:start position:0%
true this is not true so we are
 

00:12:24.480 --> 00:12:27.829 align:start position:0%
true this is not true so we are
not<00:12:24.959><c> allowed</c><00:12:25.839><c> to</c><00:12:26.000><c> do</c><00:12:26.240><c> this</c><00:12:26.800><c> so</c><00:12:27.120><c> normally</c><00:12:27.680><c> we</c>

00:12:27.829 --> 00:12:27.839 align:start position:0%
not allowed to do this so normally we
 

00:12:27.839 --> 00:12:29.829 align:start position:0%
not allowed to do this so normally we
would<00:12:28.079><c> take</c><00:12:28.320><c> the</c><00:12:28.560><c> max</c><00:12:28.880><c> of</c><00:12:29.040><c> these</c><00:12:29.279><c> two</c><00:12:29.440><c> values</c>

00:12:29.829 --> 00:12:29.839 align:start position:0%
would take the max of these two values
 

00:12:29.839 --> 00:12:31.509 align:start position:0%
would take the max of these two values
but<00:12:30.000><c> we</c><00:12:30.160><c> know</c><00:12:30.399><c> that</c><00:12:30.560><c> the</c><00:12:30.800><c> condition</c>

00:12:31.509 --> 00:12:31.519 align:start position:0%
but we know that the condition
 

00:12:31.519 --> 00:12:33.829 align:start position:0%
but we know that the condition
to<00:12:31.680><c> take</c><00:12:31.839><c> the</c><00:12:32.000><c> max</c><00:12:32.320><c> of</c><00:12:32.399><c> this</c><00:12:32.560><c> does</c><00:12:32.720><c> not</c><00:12:33.040><c> satisfy</c>

00:12:33.829 --> 00:12:33.839 align:start position:0%
to take the max of this does not satisfy
 

00:12:33.839 --> 00:12:35.350 align:start position:0%
to take the max of this does not satisfy
so<00:12:34.079><c> we</c><00:12:34.240><c> only</c><00:12:34.399><c> have</c><00:12:34.560><c> one</c><00:12:34.880><c> choice</c>

00:12:35.350 --> 00:12:35.360 align:start position:0%
so we only have one choice
 

00:12:35.360 --> 00:12:37.910 align:start position:0%
so we only have one choice
one<00:12:35.920><c> so</c><00:12:36.079><c> the</c><00:12:36.240><c> lis</c><00:12:36.720><c> of</c><00:12:36.880><c> this</c><00:12:37.200><c> is</c><00:12:37.360><c> going</c><00:12:37.519><c> to</c><00:12:37.600><c> be</c>

00:12:37.910 --> 00:12:37.920 align:start position:0%
one so the lis of this is going to be
 

00:12:37.920 --> 00:12:39.190 align:start position:0%
one so the lis of this is going to be
one<00:12:38.240><c> i'll</c><00:12:38.399><c> put</c><00:12:38.560><c> it</c><00:12:38.720><c> over</c>

00:12:39.190 --> 00:12:39.200 align:start position:0%
one i'll put it over
 

00:12:39.200 --> 00:12:41.110 align:start position:0%
one i'll put it over
here<00:12:39.440><c> like</c><00:12:39.680><c> in</c><00:12:39.760><c> the</c><00:12:39.920><c> corner</c><00:12:40.480><c> so</c><00:12:40.639><c> again</c><00:12:40.959><c> we're</c>

00:12:41.110 --> 00:12:41.120 align:start position:0%
here like in the corner so again we're
 

00:12:41.120 --> 00:12:42.790 align:start position:0%
here like in the corner so again we're
gonna<00:12:41.360><c> work</c><00:12:41.600><c> our</c><00:12:41.760><c> way</c><00:12:42.000><c> backwards</c><00:12:42.480><c> so</c><00:12:42.639><c> let's</c>

00:12:42.790 --> 00:12:42.800 align:start position:0%
gonna work our way backwards so let's
 

00:12:42.800 --> 00:12:45.269 align:start position:0%
gonna work our way backwards so let's
get<00:12:43.040><c> the</c><00:12:43.360><c> longest</c><00:12:43.760><c> increasing</c><00:12:44.240><c> subsequence</c>

00:12:45.269 --> 00:12:45.279 align:start position:0%
get the longest increasing subsequence
 

00:12:45.279 --> 00:12:48.470 align:start position:0%
get the longest increasing subsequence
one<00:12:45.600><c> index</c><00:12:46.079><c> back</c><00:12:46.480><c> at</c><00:12:46.720><c> index</c><00:12:47.600><c> one</c><00:12:48.079><c> so</c><00:12:48.320><c> we're</c>

00:12:48.470 --> 00:12:48.480 align:start position:0%
one index back at index one so we're
 

00:12:48.480 --> 00:12:49.829 align:start position:0%
one index back at index one so we're
going<00:12:48.560><c> to</c><00:12:48.720><c> do</c><00:12:48.959><c> the</c><00:12:49.200><c> similar</c>

00:12:49.829 --> 00:12:49.839 align:start position:0%
going to do the similar
 

00:12:49.839 --> 00:12:51.990 align:start position:0%
going to do the similar
thing<00:12:50.079><c> that</c><00:12:50.160><c> we</c><00:12:50.320><c> just</c><00:12:50.639><c> did</c><00:12:51.200><c> so</c><00:12:51.440><c> we</c><00:12:51.600><c> know</c><00:12:51.839><c> we</c>

00:12:51.990 --> 00:12:52.000 align:start position:0%
thing that we just did so we know we
 

00:12:52.000 --> 00:12:53.590 align:start position:0%
thing that we just did so we know we
could<00:12:52.240><c> take</c><00:12:52.480><c> a</c><00:12:52.639><c> subsequence</c>

00:12:53.590 --> 00:12:53.600 align:start position:0%
could take a subsequence
 

00:12:53.600 --> 00:12:56.870 align:start position:0%
could take a subsequence
two<00:12:54.079><c> by</c><00:12:54.399><c> itself</c><00:12:54.959><c> right</c><00:12:55.120><c> that's</c><00:12:55.519><c> one</c><00:12:55.920><c> choice</c>

00:12:56.870 --> 00:12:56.880 align:start position:0%
two by itself right that's one choice
 

00:12:56.880 --> 00:13:00.389 align:start position:0%
two by itself right that's one choice
one<00:12:57.279><c> is</c><00:12:57.519><c> a</c><00:12:57.680><c> choice</c><00:12:58.480><c> length</c><00:12:58.880><c> one</c><00:12:59.519><c> we</c><00:12:59.839><c> also</c><00:13:00.240><c> have</c>

00:13:00.389 --> 00:13:00.399 align:start position:0%
one is a choice length one we also have
 

00:13:00.399 --> 00:13:01.509 align:start position:0%
one is a choice length one we also have
a<00:13:00.560><c> choice</c>

00:13:01.509 --> 00:13:01.519 align:start position:0%
a choice
 

00:13:01.519 --> 00:13:04.389 align:start position:0%
a choice
one<00:13:02.480><c> plus</c><00:13:03.200><c> the</c><00:13:03.440><c> longest</c><00:13:03.920><c> increasing</c>

00:13:04.389 --> 00:13:04.399 align:start position:0%
one plus the longest increasing
 

00:13:04.399 --> 00:13:06.069 align:start position:0%
one plus the longest increasing
subsequence<00:13:05.040><c> starting</c><00:13:05.440><c> at</c><00:13:05.680><c> four</c>

00:13:06.069 --> 00:13:06.079 align:start position:0%
subsequence starting at four
 

00:13:06.079 --> 00:13:08.550 align:start position:0%
subsequence starting at four
and<00:13:06.240><c> we're</c><00:13:06.480><c> allowed</c><00:13:06.959><c> to</c><00:13:07.120><c> do</c><00:13:07.360><c> this</c><00:13:07.600><c> because</c><00:13:08.079><c> two</c>

00:13:08.550 --> 00:13:08.560 align:start position:0%
and we're allowed to do this because two
 

00:13:08.560 --> 00:13:10.470 align:start position:0%
and we're allowed to do this because two
is<00:13:08.880><c> less</c><00:13:09.279><c> than</c><00:13:09.600><c> four</c><00:13:09.920><c> so</c><00:13:10.160><c> it</c>

00:13:10.470 --> 00:13:10.480 align:start position:0%
is less than four so it
 

00:13:10.480 --> 00:13:13.110 align:start position:0%
is less than four so it
is<00:13:10.959><c> increasing</c><00:13:11.680><c> the</c><00:13:11.839><c> subsequence</c><00:13:12.639><c> is</c>

00:13:13.110 --> 00:13:13.120 align:start position:0%
is increasing the subsequence is
 

00:13:13.120 --> 00:13:13.990 align:start position:0%
is increasing the subsequence is
increasing

00:13:13.990 --> 00:13:14.000 align:start position:0%
increasing
 

00:13:14.000 --> 00:13:17.430 align:start position:0%
increasing
so<00:13:14.240><c> another</c><00:13:14.639><c> choice</c><00:13:15.200><c> is</c><00:13:15.680><c> one</c><00:13:16.399><c> plus</c>

00:13:17.430 --> 00:13:17.440 align:start position:0%
so another choice is one plus
 

00:13:17.440 --> 00:13:21.670 align:start position:0%
so another choice is one plus
lis<00:13:18.639><c> of</c><00:13:19.120><c> two</c><00:13:19.920><c> and</c><00:13:20.160><c> another</c><00:13:20.560><c> choice</c><00:13:21.040><c> is</c>

00:13:21.670 --> 00:13:21.680 align:start position:0%
lis of two and another choice is
 

00:13:21.680 --> 00:13:24.310 align:start position:0%
lis of two and another choice is
l<00:13:21.839><c> i</c><00:13:22.000><c> s</c><00:13:22.399><c> starting</c><00:13:22.720><c> at</c><00:13:22.880><c> index</c><00:13:23.200><c> three</c><00:13:23.519><c> because</c>

00:13:24.310 --> 00:13:24.320 align:start position:0%
l i s starting at index three because
 

00:13:24.320 --> 00:13:24.790 align:start position:0%
l i s starting at index three because
two

00:13:24.790 --> 00:13:24.800 align:start position:0%
two
 

00:13:24.800 --> 00:13:27.430 align:start position:0%
two
is<00:13:25.200><c> less</c><00:13:25.519><c> than</c><00:13:25.760><c> three</c><00:13:26.079><c> right</c><00:13:26.480><c> two</c><00:13:27.040><c> is</c><00:13:27.200><c> less</c>

00:13:27.430 --> 00:13:27.440 align:start position:0%
is less than three right two is less
 

00:13:27.440 --> 00:13:29.269 align:start position:0%
is less than three right two is less
than<00:13:27.680><c> three</c><00:13:27.920><c> so</c><00:13:28.079><c> the</c><00:13:28.240><c> subsequence</c><00:13:28.880><c> is</c><00:13:29.040><c> in</c>

00:13:29.269 --> 00:13:29.279 align:start position:0%
than three so the subsequence is in
 

00:13:29.279 --> 00:13:32.550 align:start position:0%
than three so the subsequence is in
increasing<00:13:29.839><c> order</c><00:13:30.480><c> so</c><00:13:30.880><c> one</c><00:13:31.279><c> plus</c><00:13:31.839><c> l</c><00:13:32.000><c> i</c><00:13:32.160><c> s</c>

00:13:32.550 --> 00:13:32.560 align:start position:0%
increasing order so one plus l i s
 

00:13:32.560 --> 00:13:36.069 align:start position:0%
increasing order so one plus l i s
of<00:13:32.800><c> three</c><00:13:33.360><c> now</c><00:13:33.600><c> we</c><00:13:33.760><c> know</c><00:13:34.079><c> that</c><00:13:34.639><c> this</c><00:13:35.040><c> is</c><00:13:35.360><c> two</c>

00:13:36.069 --> 00:13:36.079 align:start position:0%
of three now we know that this is two
 

00:13:36.079 --> 00:13:37.750 align:start position:0%
of three now we know that this is two
and<00:13:36.320><c> this</c><00:13:36.560><c> is</c><00:13:36.720><c> two</c><00:13:37.040><c> so</c><00:13:37.200><c> it</c><00:13:37.279><c> doesn't</c><00:13:37.519><c> really</c>

00:13:37.750 --> 00:13:37.760 align:start position:0%
and this is two so it doesn't really
 

00:13:37.760 --> 00:13:39.590 align:start position:0%
and this is two so it doesn't really
matter<00:13:38.160><c> which</c><00:13:38.399><c> one</c><00:13:38.639><c> we</c><00:13:38.880><c> do</c>

00:13:39.590 --> 00:13:39.600 align:start position:0%
matter which one we do
 

00:13:39.600 --> 00:13:42.629 align:start position:0%
matter which one we do
the<00:13:39.839><c> lis</c><00:13:40.639><c> of</c><00:13:41.360><c> one</c><00:13:42.320><c> is</c>

00:13:42.629 --> 00:13:42.639 align:start position:0%
the lis of one is
 

00:13:42.639 --> 00:13:45.670 align:start position:0%
the lis of one is
going<00:13:42.800><c> to</c><00:13:42.880><c> be</c><00:13:43.120><c> equal</c><00:13:43.519><c> to</c><00:13:44.320><c> two</c><00:13:44.720><c> regardless</c>

00:13:45.670 --> 00:13:45.680 align:start position:0%
going to be equal to two regardless
 

00:13:45.680 --> 00:13:47.670 align:start position:0%
going to be equal to two regardless
so<00:13:45.920><c> now</c><00:13:46.079><c> we</c><00:13:46.240><c> want</c><00:13:46.560><c> the</c><00:13:46.720><c> longest</c><00:13:47.199><c> increasing</c>

00:13:47.670 --> 00:13:47.680 align:start position:0%
so now we want the longest increasing
 

00:13:47.680 --> 00:13:49.990 align:start position:0%
so now we want the longest increasing
subsequence<00:13:48.399><c> starting</c><00:13:48.800><c> at</c><00:13:49.040><c> index</c><00:13:49.440><c> zero</c><00:13:49.920><c> and</c>

00:13:49.990 --> 00:13:50.000 align:start position:0%
subsequence starting at index zero and
 

00:13:50.000 --> 00:13:51.350 align:start position:0%
subsequence starting at index zero and
we're<00:13:50.160><c> just</c><00:13:50.320><c> going</c><00:13:50.399><c> to</c><00:13:50.480><c> repeat</c><00:13:50.800><c> what</c><00:13:50.959><c> we</c><00:13:51.120><c> just</c>

00:13:51.350 --> 00:13:51.360 align:start position:0%
we're just going to repeat what we just
 

00:13:51.360 --> 00:13:51.990 align:start position:0%
we're just going to repeat what we just
did<00:13:51.680><c> so</c>

00:13:51.990 --> 00:13:52.000 align:start position:0%
did so
 

00:13:52.000 --> 00:13:54.069 align:start position:0%
did so
we<00:13:52.160><c> could</c><00:13:52.399><c> take</c><00:13:52.720><c> one</c><00:13:52.959><c> by</c><00:13:53.199><c> itself</c><00:13:53.760><c> which</c><00:13:54.000><c> is</c>

00:13:54.069 --> 00:13:54.079 align:start position:0%
we could take one by itself which is
 

00:13:54.079 --> 00:13:55.189 align:start position:0%
we could take one by itself which is
just<00:13:54.480><c> one</c>

00:13:55.189 --> 00:13:55.199 align:start position:0%
just one
 

00:13:55.199 --> 00:13:57.910 align:start position:0%
just one
or<00:13:55.440><c> we</c><00:13:55.600><c> could</c><00:13:55.839><c> take</c><00:13:56.560><c> one</c><00:13:57.279><c> add</c><00:13:57.519><c> it</c><00:13:57.600><c> with</c><00:13:57.760><c> the</c>

00:13:57.910 --> 00:13:57.920 align:start position:0%
or we could take one add it with the
 

00:13:57.920 --> 00:13:59.750 align:start position:0%
or we could take one add it with the
longest<00:13:58.320><c> increasing</c><00:13:58.800><c> subsequence</c><00:13:59.440><c> starting</c>

00:13:59.750 --> 00:13:59.760 align:start position:0%
longest increasing subsequence starting
 

00:13:59.760 --> 00:14:00.629 align:start position:0%
longest increasing subsequence starting
at<00:14:00.000><c> two</c>

00:14:00.629 --> 00:14:00.639 align:start position:0%
at two
 

00:14:00.639 --> 00:14:02.470 align:start position:0%
at two
or<00:14:00.880><c> this</c><00:14:01.120><c> longest</c><00:14:01.519><c> increasing</c><00:14:02.000><c> substitution</c>

00:14:02.470 --> 00:14:02.480 align:start position:0%
or this longest increasing substitution
 

00:14:02.480 --> 00:14:03.670 align:start position:0%
or this longest increasing substitution
starting<00:14:02.800><c> at</c>

00:14:03.670 --> 00:14:03.680 align:start position:0%
starting at
 

00:14:03.680 --> 00:14:06.710 align:start position:0%
starting at
at<00:14:03.920><c> this</c><00:14:04.240><c> index</c><00:14:04.800><c> or</c><00:14:05.120><c> this</c><00:14:05.440><c> index</c><00:14:06.240><c> so</c><00:14:06.399><c> we</c><00:14:06.560><c> know</c>

00:14:06.710 --> 00:14:06.720 align:start position:0%
at this index or this index so we know
 

00:14:06.720 --> 00:14:07.750 align:start position:0%
at this index or this index so we know
we're<00:14:06.880><c> going</c><00:14:07.040><c> to</c><00:14:07.120><c> get</c>

00:14:07.750 --> 00:14:07.760 align:start position:0%
we're going to get
 

00:14:07.760 --> 00:14:11.750 align:start position:0%
we're going to get
1<00:14:08.480><c> plus</c><00:14:09.120><c> 1</c><00:14:09.680><c> from</c><00:14:09.920><c> here</c><00:14:10.720><c> we're</c><00:14:10.959><c> going</c><00:14:11.040><c> to</c><00:14:11.120><c> get</c><00:14:11.360><c> 1</c>

00:14:11.750 --> 00:14:11.760 align:start position:0%
1 plus 1 from here we're going to get 1
 

00:14:11.760 --> 00:14:12.949 align:start position:0%
1 plus 1 from here we're going to get 1
plus<00:14:12.160><c> 1</c>

00:14:12.949 --> 00:14:12.959 align:start position:0%
plus 1
 

00:14:12.959 --> 00:14:16.470 align:start position:0%
plus 1
from<00:14:13.440><c> here</c><00:14:14.480><c> and</c><00:14:14.720><c> we're</c><00:14:14.880><c> going</c><00:14:14.959><c> to</c><00:14:15.040><c> get</c><00:14:15.360><c> 1</c><00:14:15.839><c> plus</c>

00:14:16.470 --> 00:14:16.480 align:start position:0%
from here and we're going to get 1 plus
 

00:14:16.480 --> 00:14:19.670 align:start position:0%
from here and we're going to get 1 plus
2<00:14:17.199><c> from</c><00:14:17.600><c> here</c><00:14:18.320><c> and</c><00:14:18.399><c> we're</c><00:14:18.639><c> allowed</c><00:14:19.040><c> to</c><00:14:19.199><c> do</c><00:14:19.440><c> all</c>

00:14:19.670 --> 00:14:19.680 align:start position:0%
2 from here and we're allowed to do all
 

00:14:19.680 --> 00:14:21.110 align:start position:0%
2 from here and we're allowed to do all
of<00:14:19.760><c> these</c><00:14:20.079><c> because</c><00:14:20.320><c> you</c><00:14:20.480><c> notice</c>

00:14:21.110 --> 00:14:21.120 align:start position:0%
of these because you notice
 

00:14:21.120 --> 00:14:24.949 align:start position:0%
of these because you notice
2<00:14:21.600><c> is</c><00:14:21.760><c> greater</c><00:14:22.160><c> than</c><00:14:22.399><c> 1</c><00:14:23.360><c> 4</c><00:14:23.839><c> is</c><00:14:24.000><c> greater</c><00:14:24.320><c> than</c><00:14:24.560><c> 1</c>

00:14:24.949 --> 00:14:24.959 align:start position:0%
2 is greater than 1 4 is greater than 1
 

00:14:24.959 --> 00:14:27.590 align:start position:0%
2 is greater than 1 4 is greater than 1
and<00:14:25.279><c> 3</c><00:14:25.680><c> is</c><00:14:25.839><c> greater</c><00:14:26.160><c> than</c><00:14:26.399><c> 1</c><00:14:26.720><c> so</c><00:14:27.120><c> they're</c><00:14:27.360><c> an</c>

00:14:27.590 --> 00:14:27.600 align:start position:0%
and 3 is greater than 1 so they're an
 

00:14:27.600 --> 00:14:28.230 align:start position:0%
and 3 is greater than 1 so they're an
increase

00:14:28.230 --> 00:14:28.240 align:start position:0%
increase
 

00:14:28.240 --> 00:14:30.949 align:start position:0%
increase
so<00:14:28.399><c> they</c><00:14:28.639><c> are</c><00:14:28.880><c> an</c><00:14:29.120><c> increasing</c><00:14:29.760><c> order</c><00:14:30.480><c> so</c><00:14:30.720><c> then</c>

00:14:30.949 --> 00:14:30.959 align:start position:0%
so they are an increasing order so then
 

00:14:30.959 --> 00:14:32.550 align:start position:0%
so they are an increasing order so then
we<00:14:31.120><c> know</c><00:14:31.360><c> that</c><00:14:31.519><c> the</c><00:14:31.680><c> longest</c><00:14:32.160><c> increasing</c>

00:14:32.550 --> 00:14:32.560 align:start position:0%
we know that the longest increasing
 

00:14:32.560 --> 00:14:33.750 align:start position:0%
we know that the longest increasing
subsequence<00:14:33.199><c> of</c><00:14:33.279><c> this</c>

00:14:33.750 --> 00:14:33.760 align:start position:0%
subsequence of this
 

00:14:33.760 --> 00:14:36.710 align:start position:0%
subsequence of this
is<00:14:34.000><c> going</c><00:14:34.160><c> to</c><00:14:34.240><c> be</c><00:14:34.480><c> equal</c><00:14:34.959><c> to</c><00:14:35.760><c> 3</c><00:14:36.160><c> which</c><00:14:36.399><c> is</c><00:14:36.560><c> what</c>

00:14:36.710 --> 00:14:36.720 align:start position:0%
is going to be equal to 3 which is what
 

00:14:36.720 --> 00:14:37.509 align:start position:0%
is going to be equal to 3 which is what
we<00:14:37.040><c> want</c>

00:14:37.509 --> 00:14:37.519 align:start position:0%
we want
 

00:14:37.519 --> 00:14:39.590 align:start position:0%
we want
so<00:14:37.760><c> this</c><00:14:38.000><c> is</c><00:14:38.160><c> a</c><00:14:38.399><c> much</c><00:14:38.720><c> better</c><00:14:39.040><c> solution</c><00:14:39.440><c> the</c>

00:14:39.590 --> 00:14:39.600 align:start position:0%
so this is a much better solution the
 

00:14:39.600 --> 00:14:41.350 align:start position:0%
so this is a much better solution the
dynamic<00:14:40.079><c> programming</c><00:14:40.480><c> solution</c><00:14:40.880><c> is</c><00:14:41.040><c> much</c>

00:14:41.350 --> 00:14:41.360 align:start position:0%
dynamic programming solution is much
 

00:14:41.360 --> 00:14:42.870 align:start position:0%
dynamic programming solution is much
better<00:14:41.600><c> than</c><00:14:41.760><c> brute</c><00:14:42.160><c> force</c>

00:14:42.870 --> 00:14:42.880 align:start position:0%
better than brute force
 

00:14:42.880 --> 00:14:45.910 align:start position:0%
better than brute force
because<00:14:43.600><c> the</c><00:14:43.839><c> time</c><00:14:44.079><c> complexity</c><00:14:44.800><c> is</c><00:14:45.120><c> o</c><00:14:45.440><c> of</c><00:14:45.760><c> n</c>

00:14:45.910 --> 00:14:45.920 align:start position:0%
because the time complexity is o of n
 

00:14:45.920 --> 00:14:48.310 align:start position:0%
because the time complexity is o of n
squared<00:14:46.240><c> but</c><00:14:46.560><c> why</c><00:14:46.880><c> is</c><00:14:47.040><c> it</c><00:14:47.279><c> o</c><00:14:47.440><c> of</c><00:14:47.600><c> n</c><00:14:47.760><c> squared</c>

00:14:48.310 --> 00:14:48.320 align:start position:0%
squared but why is it o of n squared
 

00:14:48.320 --> 00:14:50.710 align:start position:0%
squared but why is it o of n squared
well<00:14:48.560><c> you</c><00:14:48.800><c> see</c><00:14:49.040><c> we're</c><00:14:49.199><c> working</c><00:14:49.760><c> backwards</c><00:14:50.480><c> we</c>

00:14:50.710 --> 00:14:50.720 align:start position:0%
well you see we're working backwards we
 

00:14:50.720 --> 00:14:51.910 align:start position:0%
well you see we're working backwards we
start<00:14:51.120><c> at</c><00:14:51.360><c> three</c>

00:14:51.910 --> 00:14:51.920 align:start position:0%
start at three
 

00:14:51.920 --> 00:14:53.990 align:start position:0%
start at three
and<00:14:52.000><c> then</c><00:14:52.240><c> we</c><00:14:52.480><c> check</c><00:14:52.959><c> every</c><00:14:53.360><c> position</c>

00:14:53.990 --> 00:14:54.000 align:start position:0%
and then we check every position
 

00:14:54.000 --> 00:14:55.670 align:start position:0%
and then we check every position
afterwards<00:14:54.880><c> which</c><00:14:55.120><c> is</c><00:14:55.360><c> not</c>

00:14:55.670 --> 00:14:55.680 align:start position:0%
afterwards which is not
 

00:14:55.680 --> 00:14:57.750 align:start position:0%
afterwards which is not
too<00:14:55.920><c> bad</c><00:14:56.240><c> right</c><00:14:56.480><c> so</c><00:14:56.639><c> then</c><00:14:56.800><c> we</c><00:14:57.040><c> iterate</c><00:14:57.440><c> through</c>

00:14:57.750 --> 00:14:57.760 align:start position:0%
too bad right so then we iterate through
 

00:14:57.760 --> 00:14:59.670 align:start position:0%
too bad right so then we iterate through
basically<00:14:58.240><c> every</c><00:14:58.560><c> value</c><00:14:58.959><c> here</c>

00:14:59.670 --> 00:14:59.680 align:start position:0%
basically every value here
 

00:14:59.680 --> 00:15:03.030 align:start position:0%
basically every value here
when<00:14:59.839><c> we</c><00:15:00.160><c> start</c><00:15:00.639><c> at</c><00:15:01.120><c> four</c><00:15:01.760><c> we</c><00:15:02.160><c> have</c><00:15:02.320><c> to</c><00:15:02.560><c> look</c><00:15:02.800><c> at</c>

00:15:03.030 --> 00:15:03.040 align:start position:0%
when we start at four we have to look at
 

00:15:03.040 --> 00:15:04.230 align:start position:0%
when we start at four we have to look at
every<00:15:03.360><c> value</c><00:15:03.680><c> that</c><00:15:03.839><c> comes</c>

00:15:04.230 --> 00:15:04.240 align:start position:0%
every value that comes
 

00:15:04.240 --> 00:15:06.550 align:start position:0%
every value that comes
after<00:15:04.639><c> it</c><00:15:04.800><c> there's</c><00:15:05.120><c> only</c><00:15:05.600><c> one</c><00:15:05.920><c> value</c><00:15:06.320><c> that's</c>

00:15:06.550 --> 00:15:06.560 align:start position:0%
after it there's only one value that's
 

00:15:06.560 --> 00:15:07.670 align:start position:0%
after it there's only one value that's
good<00:15:06.800><c> for</c><00:15:07.040><c> us</c>

00:15:07.670 --> 00:15:07.680 align:start position:0%
good for us
 

00:15:07.680 --> 00:15:11.430 align:start position:0%
good for us
so<00:15:07.920><c> we</c><00:15:08.399><c> iterate</c><00:15:08.880><c> through</c><00:15:09.360><c> these</c><00:15:10.000><c> two</c><00:15:10.639><c> values</c>

00:15:11.430 --> 00:15:11.440 align:start position:0%
so we iterate through these two values
 

00:15:11.440 --> 00:15:14.949 align:start position:0%
so we iterate through these two values
when<00:15:11.680><c> we</c><00:15:12.000><c> start</c><00:15:12.560><c> at</c><00:15:13.040><c> two</c><00:15:13.600><c> we</c><00:15:13.839><c> have</c><00:15:14.000><c> to</c><00:15:14.240><c> check</c>

00:15:14.949 --> 00:15:14.959 align:start position:0%
when we start at two we have to check
 

00:15:14.959 --> 00:15:17.269 align:start position:0%
when we start at two we have to check
these<00:15:15.600><c> subsequences</c><00:15:16.399><c> starting</c><00:15:16.639><c> at</c><00:15:16.800><c> these</c><00:15:17.040><c> two</c>

00:15:17.269 --> 00:15:17.279 align:start position:0%
these subsequences starting at these two
 

00:15:17.279 --> 00:15:17.990 align:start position:0%
these subsequences starting at these two
values

00:15:17.990 --> 00:15:18.000 align:start position:0%
values
 

00:15:18.000 --> 00:15:20.389 align:start position:0%
values
so<00:15:18.240><c> then</c><00:15:18.480><c> we</c><00:15:18.639><c> have</c><00:15:18.880><c> to</c><00:15:19.360><c> end</c><00:15:19.600><c> up</c><00:15:19.839><c> iterating</c>

00:15:20.389 --> 00:15:20.399 align:start position:0%
so then we have to end up iterating
 

00:15:20.399 --> 00:15:21.350 align:start position:0%
so then we have to end up iterating
through<00:15:20.720><c> two</c>

00:15:21.350 --> 00:15:21.360 align:start position:0%
through two
 

00:15:21.360 --> 00:15:24.150 align:start position:0%
through two
and<00:15:21.839><c> every</c><00:15:22.160><c> value</c><00:15:22.560><c> that</c><00:15:22.720><c> comes</c><00:15:23.199><c> after</c><00:15:23.839><c> and</c><00:15:24.000><c> we</c>

00:15:24.150 --> 00:15:24.160 align:start position:0%
and every value that comes after and we
 

00:15:24.160 --> 00:15:25.110 align:start position:0%
and every value that comes after and we
do<00:15:24.399><c> the</c><00:15:24.560><c> same</c>

00:15:25.110 --> 00:15:25.120 align:start position:0%
do the same
 

00:15:25.120 --> 00:15:28.069 align:start position:0%
do the same
thing<00:15:25.680><c> for</c><00:15:26.079><c> one</c><00:15:26.480><c> so</c><00:15:26.720><c> we</c><00:15:26.880><c> iterate</c><00:15:27.360><c> through</c><00:15:27.760><c> one</c>

00:15:28.069 --> 00:15:28.079 align:start position:0%
thing for one so we iterate through one
 

00:15:28.079 --> 00:15:28.389 align:start position:0%
thing for one so we iterate through one
and

00:15:28.389 --> 00:15:28.399 align:start position:0%
and
 

00:15:28.399 --> 00:15:30.949 align:start position:0%
and
every<00:15:28.800><c> value</c><00:15:29.120><c> that</c><00:15:29.279><c> comes</c><00:15:29.759><c> after</c><00:15:30.399><c> so</c><00:15:30.560><c> you</c><00:15:30.720><c> can</c>

00:15:30.949 --> 00:15:30.959 align:start position:0%
every value that comes after so you can
 

00:15:30.959 --> 00:15:32.389 align:start position:0%
every value that comes after so you can
tell<00:15:31.199><c> by</c><00:15:31.440><c> looking</c><00:15:31.759><c> at</c><00:15:31.920><c> this</c>

00:15:32.389 --> 00:15:32.399 align:start position:0%
tell by looking at this
 

00:15:32.399 --> 00:15:35.990 align:start position:0%
tell by looking at this
this<00:15:32.720><c> pattern</c><00:15:33.360><c> is</c><00:15:33.759><c> similar</c><00:15:34.240><c> to</c><00:15:34.639><c> an</c><00:15:34.880><c> n</c><00:15:35.199><c> squared</c>

00:15:35.990 --> 00:15:36.000 align:start position:0%
this pattern is similar to an n squared
 

00:15:36.000 --> 00:15:38.230 align:start position:0%
this pattern is similar to an n squared
pattern<00:15:36.560><c> so</c><00:15:36.800><c> now</c><00:15:36.959><c> let's</c><00:15:37.360><c> finally</c><00:15:37.759><c> write</c><00:15:38.000><c> the</c>

00:15:38.230 --> 00:15:38.240 align:start position:0%
pattern so now let's finally write the
 

00:15:38.240 --> 00:15:39.990 align:start position:0%
pattern so now let's finally write the
code<00:15:38.720><c> so</c><00:15:38.880><c> we</c><00:15:39.040><c> know</c><00:15:39.199><c> we're</c><00:15:39.360><c> going</c><00:15:39.440><c> to</c><00:15:39.519><c> do</c><00:15:39.680><c> this</c>

00:15:39.990 --> 00:15:40.000 align:start position:0%
code so we know we're going to do this
 

00:15:40.000 --> 00:15:42.389 align:start position:0%
code so we know we're going to do this
dynamic<00:15:40.480><c> programming</c><00:15:40.959><c> style</c><00:15:41.519><c> so</c><00:15:41.759><c> let's</c><00:15:42.000><c> have</c>

00:15:42.389 --> 00:15:42.399 align:start position:0%
dynamic programming style so let's have
 

00:15:42.399 --> 00:15:43.030 align:start position:0%
dynamic programming style so let's have
a

00:15:43.030 --> 00:15:43.040 align:start position:0%
a
 

00:15:43.040 --> 00:15:45.590 align:start position:0%
a
cache<00:15:43.519><c> or</c><00:15:43.680><c> a</c><00:15:43.920><c> list</c><00:15:44.639><c> it's</c><00:15:44.880><c> initially</c><00:15:45.360><c> going</c><00:15:45.519><c> to</c>

00:15:45.590 --> 00:15:45.600 align:start position:0%
cache or a list it's initially going to
 

00:15:45.600 --> 00:15:46.629 align:start position:0%
cache or a list it's initially going to
be<00:15:45.839><c> set</c><00:15:46.240><c> to</c>

00:15:46.629 --> 00:15:46.639 align:start position:0%
be set to
 

00:15:46.639 --> 00:15:48.710 align:start position:0%
be set to
1<00:15:47.120><c> every</c><00:15:47.360><c> value</c><00:15:47.680><c> is</c><00:15:47.759><c> going</c><00:15:47.839><c> to</c><00:15:47.920><c> be</c><00:15:48.079><c> set</c><00:15:48.240><c> to</c><00:15:48.399><c> 1</c>

00:15:48.710 --> 00:15:48.720 align:start position:0%
1 every value is going to be set to 1
 

00:15:48.720 --> 00:15:50.870 align:start position:0%
1 every value is going to be set to 1
it's<00:15:48.880><c> going</c><00:15:49.040><c> to</c><00:15:49.120><c> be</c><00:15:49.279><c> the</c><00:15:49.600><c> length</c><00:15:50.079><c> of</c><00:15:50.240><c> the</c><00:15:50.480><c> input</c>

00:15:50.870 --> 00:15:50.880 align:start position:0%
it's going to be the length of the input
 

00:15:50.880 --> 00:15:52.710 align:start position:0%
it's going to be the length of the input
array<00:15:51.360><c> that</c><00:15:51.519><c> we're</c><00:15:51.759><c> given</c>

00:15:52.710 --> 00:15:52.720 align:start position:0%
array that we're given
 

00:15:52.720 --> 00:15:55.110 align:start position:0%
array that we're given
so<00:15:53.040><c> every</c><00:15:53.440><c> longest</c><00:15:53.920><c> increasing</c><00:15:54.399><c> subsequence</c>

00:15:55.110 --> 00:15:55.120 align:start position:0%
so every longest increasing subsequence
 

00:15:55.120 --> 00:15:57.509 align:start position:0%
so every longest increasing subsequence
starting<00:15:55.600><c> at</c><00:15:55.839><c> every</c><00:15:56.160><c> value</c><00:15:56.720><c> or</c><00:15:56.880><c> every</c><00:15:57.120><c> index</c>

00:15:57.509 --> 00:15:57.519 align:start position:0%
starting at every value or every index
 

00:15:57.519 --> 00:15:59.110 align:start position:0%
starting at every value or every index
is<00:15:57.600><c> initially</c><00:15:58.079><c> just</c><00:15:58.320><c> set</c><00:15:58.480><c> to</c><00:15:58.639><c> one</c><00:15:58.880><c> we're</c><00:15:59.040><c> going</c>

00:15:59.110 --> 00:15:59.120 align:start position:0%
is initially just set to one we're going
 

00:15:59.120 --> 00:16:00.949 align:start position:0%
is initially just set to one we're going
to<00:15:59.199><c> try</c><00:15:59.360><c> to</c><00:15:59.519><c> find</c><00:15:59.759><c> what</c><00:15:59.920><c> the</c><00:16:00.079><c> max</c><00:16:00.480><c> is</c>

00:16:00.949 --> 00:16:00.959 align:start position:0%
to try to find what the max is
 

00:16:00.959 --> 00:16:03.350 align:start position:0%
to try to find what the max is
so<00:16:01.199><c> we</c><00:16:01.440><c> want</c><00:16:01.600><c> to</c><00:16:01.920><c> iterate</c><00:16:02.399><c> through</c><00:16:02.800><c> every</c>

00:16:03.350 --> 00:16:03.360 align:start position:0%
so we want to iterate through every
 

00:16:03.360 --> 00:16:04.550 align:start position:0%
so we want to iterate through every
index

00:16:04.550 --> 00:16:04.560 align:start position:0%
index
 

00:16:04.560 --> 00:16:07.990 align:start position:0%
index
in<00:16:05.360><c> the</c><00:16:05.600><c> range</c><00:16:06.240><c> of</c><00:16:06.639><c> our</c><00:16:07.120><c> input</c><00:16:07.440><c> array</c>

00:16:07.990 --> 00:16:08.000 align:start position:0%
in the range of our input array
 

00:16:08.000 --> 00:16:10.470 align:start position:0%
in the range of our input array
and<00:16:08.079><c> we</c><00:16:08.240><c> want</c><00:16:08.399><c> to</c><00:16:08.480><c> do</c><00:16:08.639><c> it</c><00:16:08.880><c> in</c><00:16:09.040><c> reverse</c><00:16:09.839><c> order</c><00:16:10.320><c> so</c>

00:16:10.470 --> 00:16:10.480 align:start position:0%
and we want to do it in reverse order so
 

00:16:10.480 --> 00:16:12.550 align:start position:0%
and we want to do it in reverse order so
that's<00:16:10.720><c> what</c><00:16:10.880><c> i'm</c><00:16:10.959><c> going</c><00:16:11.040><c> to</c><00:16:11.120><c> do</c><00:16:11.360><c> in</c><00:16:11.600><c> python</c>

00:16:12.550 --> 00:16:12.560 align:start position:0%
that's what i'm going to do in python
 

00:16:12.560 --> 00:16:14.310 align:start position:0%
that's what i'm going to do in python
it<00:16:12.880><c> if</c><00:16:13.040><c> you're</c><00:16:13.120><c> not</c><00:16:13.279><c> familiar</c><00:16:13.680><c> with</c><00:16:13.839><c> python</c>

00:16:14.310 --> 00:16:14.320 align:start position:0%
it if you're not familiar with python
 

00:16:14.320 --> 00:16:15.749 align:start position:0%
it if you're not familiar with python
this<00:16:14.639><c> might</c><00:16:14.800><c> look</c><00:16:15.040><c> a</c><00:16:15.120><c> little</c><00:16:15.279><c> weird</c><00:16:15.600><c> but</c>

00:16:15.749 --> 00:16:15.759 align:start position:0%
this might look a little weird but
 

00:16:15.759 --> 00:16:17.509 align:start position:0%
this might look a little weird but
basically<00:16:16.240><c> what</c><00:16:16.399><c> i'm</c><00:16:16.560><c> doing</c><00:16:16.880><c> is</c><00:16:17.040><c> starting</c><00:16:17.440><c> at</c>

00:16:17.509 --> 00:16:17.519 align:start position:0%
basically what i'm doing is starting at
 

00:16:17.519 --> 00:16:18.629 align:start position:0%
basically what i'm doing is starting at
the<00:16:17.680><c> last</c><00:16:18.079><c> index</c>

00:16:18.629 --> 00:16:18.639 align:start position:0%
the last index
 

00:16:18.639 --> 00:16:21.110 align:start position:0%
the last index
and<00:16:18.720><c> then</c><00:16:18.959><c> going</c><00:16:19.360><c> all</c><00:16:19.519><c> the</c><00:16:19.680><c> way</c><00:16:20.079><c> to</c><00:16:20.320><c> zero</c><00:16:20.959><c> and</c>

00:16:21.110 --> 00:16:21.120 align:start position:0%
and then going all the way to zero and
 

00:16:21.120 --> 00:16:23.189 align:start position:0%
and then going all the way to zero and
just<00:16:21.360><c> like</c><00:16:21.519><c> i</c><00:16:21.680><c> showed</c><00:16:21.920><c> in</c><00:16:22.079><c> the</c><00:16:22.240><c> example</c>

00:16:23.189 --> 00:16:23.199 align:start position:0%
just like i showed in the example
 

00:16:23.199 --> 00:16:25.430 align:start position:0%
just like i showed in the example
we're<00:16:23.440><c> going</c><00:16:23.600><c> to</c><00:16:23.839><c> start</c><00:16:24.320><c> at</c><00:16:24.560><c> index</c><00:16:25.040><c> i</c><00:16:25.279><c> like</c>

00:16:25.430 --> 00:16:25.440 align:start position:0%
we're going to start at index i like
 

00:16:25.440 --> 00:16:26.710 align:start position:0%
we're going to start at index i like
this<00:16:25.680><c> could</c><00:16:25.839><c> be</c><00:16:26.000><c> i</c><00:16:26.160><c> and</c><00:16:26.240><c> then</c><00:16:26.399><c> we</c><00:16:26.480><c> want</c><00:16:26.639><c> to</c>

00:16:26.710 --> 00:16:26.720 align:start position:0%
this could be i and then we want to
 

00:16:26.720 --> 00:16:27.509 align:start position:0%
this could be i and then we want to
iterate<00:16:27.120><c> through</c>

00:16:27.509 --> 00:16:27.519 align:start position:0%
iterate through
 

00:16:27.519 --> 00:16:30.629 align:start position:0%
iterate through
every<00:16:27.920><c> subsequence</c><00:16:28.639><c> that</c><00:16:28.880><c> came</c><00:16:29.279><c> after</c><00:16:29.680><c> it</c><00:16:30.160><c> so</c>

00:16:30.629 --> 00:16:30.639 align:start position:0%
every subsequence that came after it so
 

00:16:30.639 --> 00:16:33.030 align:start position:0%
every subsequence that came after it so
i'm<00:16:30.880><c> going</c><00:16:30.959><c> to</c><00:16:31.040><c> have</c><00:16:31.279><c> another</c><00:16:32.000><c> nested</c><00:16:32.560><c> loop</c>

00:16:33.030 --> 00:16:33.040 align:start position:0%
i'm going to have another nested loop
 

00:16:33.040 --> 00:16:34.150 align:start position:0%
i'm going to have another nested loop
for<00:16:33.440><c> j</c>

00:16:34.150 --> 00:16:34.160 align:start position:0%
for j
 

00:16:34.160 --> 00:16:37.590 align:start position:0%
for j
in<00:16:34.480><c> range</c><00:16:35.279><c> so</c><00:16:35.600><c> starting</c><00:16:36.079><c> at</c><00:16:36.399><c> i</c><00:16:36.639><c> plus</c><00:16:37.040><c> 1</c>

00:16:37.590 --> 00:16:37.600 align:start position:0%
in range so starting at i plus 1
 

00:16:37.600 --> 00:16:40.150 align:start position:0%
in range so starting at i plus 1
and<00:16:37.680><c> then</c><00:16:38.000><c> going</c><00:16:38.320><c> to</c><00:16:38.480><c> the</c><00:16:38.880><c> end</c><00:16:39.199><c> of</c><00:16:39.440><c> the</c><00:16:39.680><c> input</c>

00:16:40.150 --> 00:16:40.160 align:start position:0%
and then going to the end of the input
 

00:16:40.160 --> 00:16:40.949 align:start position:0%
and then going to the end of the input
array

00:16:40.949 --> 00:16:40.959 align:start position:0%
array
 

00:16:40.959 --> 00:16:44.389 align:start position:0%
array
and<00:16:41.199><c> before</c><00:16:41.920><c> we</c><00:16:42.160><c> can</c><00:16:42.639><c> update</c><00:16:43.279><c> lis</c>

00:16:44.389 --> 00:16:44.399 align:start position:0%
and before we can update lis
 

00:16:44.399 --> 00:16:48.710 align:start position:0%
and before we can update lis
we<00:16:44.720><c> want</c><00:16:44.880><c> to</c><00:16:45.199><c> know</c><00:16:46.000><c> is</c><00:16:46.800><c> the</c><00:16:47.120><c> value</c>

00:16:48.710 --> 00:16:48.720 align:start position:0%
we want to know is the value
 

00:16:48.720 --> 00:16:52.150 align:start position:0%
we want to know is the value
at<00:16:49.120><c> i</c><00:16:49.920><c> actually</c><00:16:50.800><c> less</c><00:16:51.120><c> than</c><00:16:51.360><c> the</c><00:16:51.519><c> value</c>

00:16:52.150 --> 00:16:52.160 align:start position:0%
at i actually less than the value
 

00:16:52.160 --> 00:16:55.350 align:start position:0%
at i actually less than the value
at<00:16:52.639><c> j</c><00:16:53.040><c> because</c><00:16:53.440><c> j</c><00:16:53.759><c> comes</c><00:16:54.240><c> after</c><00:16:54.639><c> it</c><00:16:54.800><c> if</c><00:16:54.959><c> we</c><00:16:55.120><c> want</c>

00:16:55.350 --> 00:16:55.360 align:start position:0%
at j because j comes after it if we want
 

00:16:55.360 --> 00:16:56.230 align:start position:0%
at j because j comes after it if we want
this<00:16:55.519><c> to</c><00:16:55.680><c> be</c><00:16:55.839><c> an</c>

00:16:56.230 --> 00:16:56.240 align:start position:0%
this to be an
 

00:16:56.240 --> 00:16:58.870 align:start position:0%
this to be an
increasing<00:16:57.040><c> subsequence</c><00:16:58.000><c> this</c><00:16:58.240><c> condition</c>

00:16:58.870 --> 00:16:58.880 align:start position:0%
increasing subsequence this condition
 

00:16:58.880 --> 00:16:59.829 align:start position:0%
increasing subsequence this condition
has<00:16:59.199><c> to</c>

00:16:59.829 --> 00:16:59.839 align:start position:0%
has to
 

00:16:59.839 --> 00:17:03.509 align:start position:0%
has to
be<00:17:00.160><c> true</c><00:17:00.880><c> and</c><00:17:01.279><c> only</c><00:17:01.920><c> then</c><00:17:02.320><c> are</c><00:17:02.480><c> we</c><00:17:02.720><c> allowed</c>

00:17:03.509 --> 00:17:03.519 align:start position:0%
be true and only then are we allowed
 

00:17:03.519 --> 00:17:05.669 align:start position:0%
be true and only then are we allowed
to<00:17:04.000><c> update</c><00:17:04.480><c> the</c><00:17:04.640><c> longest</c><00:17:05.120><c> increasing</c>

00:17:05.669 --> 00:17:05.679 align:start position:0%
to update the longest increasing
 

00:17:05.679 --> 00:17:06.549 align:start position:0%
to update the longest increasing
subsequence

00:17:06.549 --> 00:17:06.559 align:start position:0%
subsequence
 

00:17:06.559 --> 00:17:10.549 align:start position:0%
subsequence
at<00:17:06.880><c> index</c><00:17:07.600><c> i</c><00:17:08.240><c> and</c><00:17:08.400><c> we</c><00:17:08.559><c> can</c><00:17:08.880><c> set</c><00:17:09.120><c> it</c><00:17:09.520><c> to</c><00:17:09.679><c> the</c><00:17:10.000><c> max</c>

00:17:10.549 --> 00:17:10.559 align:start position:0%
at index i and we can set it to the max
 

00:17:10.559 --> 00:17:13.909 align:start position:0%
at index i and we can set it to the max
of<00:17:10.799><c> itself</c><00:17:12.000><c> and</c><00:17:12.880><c> or</c><00:17:13.199><c> the</c><00:17:13.439><c> max</c>

00:17:13.909 --> 00:17:13.919 align:start position:0%
of itself and or the max
 

00:17:13.919 --> 00:17:17.110 align:start position:0%
of itself and or the max
of<00:17:14.319><c> 1</c><00:17:14.880><c> plus</c><00:17:15.760><c> the</c><00:17:16.000><c> lis</c>

00:17:17.110 --> 00:17:17.120 align:start position:0%
of 1 plus the lis
 

00:17:17.120 --> 00:17:20.390 align:start position:0%
of 1 plus the lis
starting<00:17:17.679><c> at</c><00:17:18.079><c> j</c><00:17:18.559><c> because</c><00:17:18.880><c> we</c><00:17:19.199><c> know</c><00:17:19.439><c> for</c><00:17:19.679><c> sure</c>

00:17:20.390 --> 00:17:20.400 align:start position:0%
starting at j because we know for sure
 

00:17:20.400 --> 00:17:23.189 align:start position:0%
starting at j because we know for sure
j<00:17:21.360><c> is</c><00:17:21.520><c> going</c><00:17:21.600><c> to</c><00:17:21.679><c> be</c><00:17:21.919><c> in</c><00:17:22.240><c> increasing</c><00:17:22.799><c> order</c>

00:17:23.189 --> 00:17:23.199 align:start position:0%
j is going to be in increasing order
 

00:17:23.199 --> 00:17:24.150 align:start position:0%
j is going to be in increasing order
with<00:17:23.439><c> i</c>

00:17:24.150 --> 00:17:24.160 align:start position:0%
with i
 

00:17:24.160 --> 00:17:27.189 align:start position:0%
with i
and<00:17:24.559><c> literally</c><00:17:25.120><c> that</c><00:17:25.520><c> is</c><00:17:25.839><c> it</c><00:17:26.079><c> we</c><00:17:26.319><c> made</c><00:17:26.640><c> sure</c><00:17:26.959><c> to</c>

00:17:27.189 --> 00:17:27.199 align:start position:0%
and literally that is it we made sure to
 

00:17:27.199 --> 00:17:29.430 align:start position:0%
and literally that is it we made sure to
evaluate<00:17:27.679><c> that</c><00:17:27.839><c> it's</c><00:17:28.000><c> an</c><00:17:28.240><c> increasing</c><00:17:28.880><c> order</c>

00:17:29.430 --> 00:17:29.440 align:start position:0%
evaluate that it's an increasing order
 

00:17:29.440 --> 00:17:31.750 align:start position:0%
evaluate that it's an increasing order
we<00:17:29.600><c> did</c><00:17:29.840><c> it</c><00:17:30.080><c> backwards</c><00:17:30.799><c> we</c><00:17:31.039><c> made</c><00:17:31.280><c> sure</c><00:17:31.440><c> to</c>

00:17:31.750 --> 00:17:31.760 align:start position:0%
we did it backwards we made sure to
 

00:17:31.760 --> 00:17:33.830 align:start position:0%
we did it backwards we made sure to
cache<00:17:32.240><c> the</c><00:17:32.400><c> repeated</c><00:17:32.960><c> work</c>

00:17:33.830 --> 00:17:33.840 align:start position:0%
cache the repeated work
 

00:17:33.840 --> 00:17:35.350 align:start position:0%
cache the repeated work
what<00:17:34.000><c> do</c><00:17:34.160><c> we</c><00:17:34.240><c> have</c><00:17:34.400><c> left</c><00:17:34.640><c> to</c><00:17:34.720><c> do</c><00:17:34.960><c> well</c><00:17:35.120><c> we</c><00:17:35.200><c> want</c>

00:17:35.350 --> 00:17:35.360 align:start position:0%
what do we have left to do well we want
 

00:17:35.360 --> 00:17:37.350 align:start position:0%
what do we have left to do well we want
to<00:17:35.440><c> return</c><00:17:35.760><c> what</c><00:17:35.919><c> the</c><00:17:36.080><c> max</c><00:17:36.480><c> is</c><00:17:36.720><c> how</c><00:17:36.880><c> can</c><00:17:37.039><c> we</c><00:17:37.120><c> do</c>

00:17:37.350 --> 00:17:37.360 align:start position:0%
to return what the max is how can we do
 

00:17:37.360 --> 00:17:38.070 align:start position:0%
to return what the max is how can we do
that<00:17:37.520><c> well</c>

00:17:38.070 --> 00:17:38.080 align:start position:0%
that well
 

00:17:38.080 --> 00:17:40.070 align:start position:0%
that well
in<00:17:38.240><c> python</c><00:17:38.640><c> you</c><00:17:38.720><c> can</c><00:17:38.799><c> just</c><00:17:38.960><c> take</c><00:17:39.200><c> the</c><00:17:39.360><c> max</c><00:17:39.760><c> of</c><00:17:39.919><c> a</c>

00:17:40.070 --> 00:17:40.080 align:start position:0%
in python you can just take the max of a
 

00:17:40.080 --> 00:17:42.150 align:start position:0%
in python you can just take the max of a
list<00:17:40.720><c> so</c><00:17:40.960><c> whatever</c>

00:17:42.150 --> 00:17:42.160 align:start position:0%
list so whatever
 

00:17:42.160 --> 00:17:44.710 align:start position:0%
list so whatever
uh<00:17:42.400><c> the</c><00:17:43.039><c> long</c><00:17:43.360><c> whatever</c><00:17:43.679><c> the</c><00:17:43.840><c> greatest</c><00:17:44.240><c> value</c>

00:17:44.710 --> 00:17:44.720 align:start position:0%
uh the long whatever the greatest value
 

00:17:44.720 --> 00:17:45.669 align:start position:0%
uh the long whatever the greatest value
is<00:17:45.039><c> in</c><00:17:45.200><c> here</c>

00:17:45.669 --> 00:17:45.679 align:start position:0%
is in here
 

00:17:45.679 --> 00:17:47.669 align:start position:0%
is in here
is<00:17:45.919><c> going</c><00:17:46.000><c> to</c><00:17:46.160><c> be</c><00:17:46.320><c> returned</c><00:17:47.200><c> and</c><00:17:47.360><c> they're</c>

00:17:47.669 --> 00:17:47.679 align:start position:0%
is going to be returned and they're
 

00:17:47.679 --> 00:17:48.710 align:start position:0%
is going to be returned and they're
actually<00:17:48.080><c> so</c><00:17:48.240><c> this</c><00:17:48.480><c> is</c>

00:17:48.710 --> 00:17:48.720 align:start position:0%
actually so this is
 

00:17:48.720 --> 00:17:51.270 align:start position:0%
actually so this is
o<00:17:48.960><c> of</c><00:17:49.200><c> n</c><00:17:49.440><c> squared</c><00:17:49.760><c> and</c><00:17:49.919><c> there</c><00:17:50.160><c> actually</c><00:17:50.640><c> is</c><00:17:51.039><c> a</c>

00:17:51.270 --> 00:17:51.280 align:start position:0%
o of n squared and there actually is a
 

00:17:51.280 --> 00:17:52.549 align:start position:0%
o of n squared and there actually is a
better<00:17:51.600><c> solution</c>

00:17:52.549 --> 00:17:52.559 align:start position:0%
better solution
 

00:17:52.559 --> 00:17:56.070 align:start position:0%
better solution
big<00:17:52.960><c> o</c><00:17:53.360><c> of</c><00:17:53.919><c> n</c><00:17:54.160><c> log</c><00:17:54.480><c> n</c><00:17:55.200><c> but</c><00:17:55.440><c> i</c><00:17:55.679><c> really</c>

00:17:56.070 --> 00:17:56.080 align:start position:0%
big o of n log n but i really
 

00:17:56.080 --> 00:17:57.590 align:start position:0%
big o of n log n but i really
doubt<00:17:56.400><c> your</c><00:17:56.640><c> interviewer</c><00:17:57.200><c> is</c><00:17:57.360><c> going</c><00:17:57.440><c> to</c>

00:17:57.590 --> 00:17:57.600 align:start position:0%
doubt your interviewer is going to
 

00:17:57.600 --> 00:17:59.270 align:start position:0%
doubt your interviewer is going to
expect<00:17:58.000><c> you</c><00:17:58.160><c> to</c><00:17:58.320><c> get</c><00:17:58.480><c> this</c><00:17:58.720><c> on</c><00:17:58.880><c> your</c><00:17:59.039><c> own</c>

00:17:59.270 --> 00:17:59.280 align:start position:0%
expect you to get this on your own
 

00:17:59.280 --> 00:18:00.150 align:start position:0%
expect you to get this on your own
without<00:17:59.600><c> a</c><00:17:59.679><c> hint</c>

00:18:00.150 --> 00:18:00.160 align:start position:0%
without a hint
 

00:18:00.160 --> 00:18:02.390 align:start position:0%
without a hint
if<00:18:00.320><c> they</c><00:18:00.559><c> do</c><00:18:01.200><c> i</c><00:18:01.360><c> would</c><00:18:01.520><c> personally</c><00:18:01.919><c> just</c><00:18:02.160><c> walk</c>

00:18:02.390 --> 00:18:02.400 align:start position:0%
if they do i would personally just walk
 

00:18:02.400 --> 00:18:03.430 align:start position:0%
if they do i would personally just walk
out<00:18:02.559><c> of</c><00:18:02.640><c> the</c><00:18:02.799><c> room</c>

00:18:03.430 --> 00:18:03.440 align:start position:0%
out of the room
 

00:18:03.440 --> 00:18:05.430 align:start position:0%
out of the room
but<00:18:03.679><c> i</c><00:18:03.760><c> hope</c><00:18:04.000><c> this</c><00:18:04.160><c> was</c><00:18:04.320><c> helpful</c><00:18:05.120><c> if</c><00:18:05.280><c> you</c>

00:18:05.430 --> 00:18:05.440 align:start position:0%
but i hope this was helpful if you
 

00:18:05.440 --> 00:18:07.510 align:start position:0%
but i hope this was helpful if you
enjoyed<00:18:06.160><c> please</c><00:18:06.480><c> like</c><00:18:06.720><c> and</c><00:18:06.799><c> subscribe</c><00:18:07.360><c> it</c>

00:18:07.510 --> 00:18:07.520 align:start position:0%
enjoyed please like and subscribe it
 

00:18:07.520 --> 00:18:09.190 align:start position:0%
enjoyed please like and subscribe it
supports<00:18:07.919><c> the</c><00:18:08.000><c> channel</c><00:18:08.400><c> a</c><00:18:08.559><c> lot</c><00:18:08.880><c> and</c><00:18:09.039><c> i'll</c>

00:18:09.190 --> 00:18:09.200 align:start position:0%
supports the channel a lot and i'll
 

00:18:09.200 --> 00:18:09.830 align:start position:0%
supports the channel a lot and i'll
hopefully

00:18:09.830 --> 00:18:09.840 align:start position:0%
hopefully
 

00:18:09.840 --> 00:18:14.799 align:start position:0%
hopefully
see<00:18:10.000><c> you</c><00:18:10.160><c> pretty</c><00:18:11.799><c> soon</c>

