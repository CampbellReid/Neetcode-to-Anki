WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.990 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.880><c> welcome</c><00:00:01.280><c> back</c><00:00:01.599><c> and</c><00:00:01.760><c> let's</c>

00:00:01.990 --> 00:00:02.000 align:start position:0%
hey everyone welcome back and let's
 

00:00:02.000 --> 00:00:04.070 align:start position:0%
hey everyone welcome back and let's
write<00:00:02.240><c> some</c><00:00:02.399><c> more</c><00:00:02.639><c> neat</c><00:00:02.960><c> code</c><00:00:03.280><c> today</c><00:00:03.520><c> so</c><00:00:03.760><c> today</c>

00:00:04.070 --> 00:00:04.080 align:start position:0%
write some more neat code today so today
 

00:00:04.080 --> 00:00:05.430 align:start position:0%
write some more neat code today so today
let's<00:00:04.319><c> solve</c><00:00:04.640><c> the</c><00:00:04.880><c> problem</c>

00:00:05.430 --> 00:00:05.440 align:start position:0%
let's solve the problem
 

00:00:05.440 --> 00:00:09.190 align:start position:0%
let's solve the problem
last<00:00:06.080><c> stone</c><00:00:07.040><c> way</c><00:00:07.520><c> so</c><00:00:07.680><c> this</c><00:00:07.919><c> is</c><00:00:08.160><c> an</c><00:00:08.400><c> easy-ish</c>

00:00:09.190 --> 00:00:09.200 align:start position:0%
last stone way so this is an easy-ish
 

00:00:09.200 --> 00:00:10.470 align:start position:0%
last stone way so this is an easy-ish
problem<00:00:09.679><c> i</c><00:00:09.760><c> would</c><00:00:10.000><c> say</c>

00:00:10.470 --> 00:00:10.480 align:start position:0%
problem i would say
 

00:00:10.480 --> 00:00:12.150 align:start position:0%
problem i would say
but<00:00:10.639><c> we're</c><00:00:10.880><c> also</c><00:00:11.200><c> going</c><00:00:11.280><c> to</c><00:00:11.360><c> be</c><00:00:11.519><c> solving</c><00:00:11.920><c> the</c>

00:00:12.150 --> 00:00:12.160 align:start position:0%
but we're also going to be solving the
 

00:00:12.160 --> 00:00:13.990 align:start position:0%
but we're also going to be solving the
second<00:00:12.480><c> version</c><00:00:12.960><c> of</c><00:00:13.120><c> this</c><00:00:13.360><c> problem</c><00:00:13.759><c> last</c>

00:00:13.990 --> 00:00:14.000 align:start position:0%
second version of this problem last
 

00:00:14.000 --> 00:00:15.110 align:start position:0%
second version of this problem last
stone<00:00:14.400><c> weight</c><00:00:14.719><c> 2</c>

00:00:15.110 --> 00:00:15.120 align:start position:0%
stone weight 2
 

00:00:15.120 --> 00:00:17.750 align:start position:0%
stone weight 2
probably<00:00:15.679><c> tomorrow</c><00:00:16.480><c> or</c><00:00:16.800><c> the</c><00:00:16.960><c> next</c><00:00:17.279><c> video</c><00:00:17.600><c> that</c>

00:00:17.750 --> 00:00:17.760 align:start position:0%
probably tomorrow or the next video that
 

00:00:17.760 --> 00:00:18.550 align:start position:0%
probably tomorrow or the next video that
i<00:00:17.920><c> upload</c>

00:00:18.550 --> 00:00:18.560 align:start position:0%
i upload
 

00:00:18.560 --> 00:00:20.870 align:start position:0%
i upload
so<00:00:18.800><c> the</c><00:00:19.039><c> context</c><00:00:19.680><c> is</c><00:00:19.840><c> that</c><00:00:20.000><c> we're</c><00:00:20.320><c> given</c><00:00:20.640><c> a</c>

00:00:20.870 --> 00:00:20.880 align:start position:0%
so the context is that we're given a
 

00:00:20.880 --> 00:00:22.390 align:start position:0%
so the context is that we're given a
collection<00:00:21.520><c> of</c><00:00:21.760><c> stones</c>

00:00:22.390 --> 00:00:22.400 align:start position:0%
collection of stones
 

00:00:22.400 --> 00:00:25.109 align:start position:0%
collection of stones
each<00:00:22.640><c> stone</c><00:00:23.039><c> has</c><00:00:23.279><c> a</c><00:00:23.519><c> positive</c><00:00:24.160><c> integer</c><00:00:24.720><c> weight</c>

00:00:25.109 --> 00:00:25.119 align:start position:0%
each stone has a positive integer weight
 

00:00:25.119 --> 00:00:27.029 align:start position:0%
each stone has a positive integer weight
so<00:00:25.439><c> greater</c><00:00:25.760><c> than</c><00:00:26.000><c> zero</c><00:00:26.480><c> weight</c>

00:00:27.029 --> 00:00:27.039 align:start position:0%
so greater than zero weight
 

00:00:27.039 --> 00:00:30.150 align:start position:0%
so greater than zero weight
and<00:00:27.359><c> each</c><00:00:27.840><c> turn</c><00:00:28.400><c> we</c><00:00:28.800><c> can</c><00:00:29.359><c> choose</c>

00:00:30.150 --> 00:00:30.160 align:start position:0%
and each turn we can choose
 

00:00:30.160 --> 00:00:33.030 align:start position:0%
and each turn we can choose
the<00:00:30.400><c> two</c><00:00:31.039><c> heaviest</c><00:00:31.599><c> stones</c><00:00:32.239><c> and</c><00:00:32.399><c> then</c><00:00:32.640><c> smash</c>

00:00:33.030 --> 00:00:33.040 align:start position:0%
the two heaviest stones and then smash
 

00:00:33.040 --> 00:00:34.790 align:start position:0%
the two heaviest stones and then smash
them<00:00:33.200><c> together</c><00:00:33.600><c> now</c><00:00:33.840><c> what</c><00:00:34.000><c> happens</c><00:00:34.480><c> when</c><00:00:34.640><c> we</c>

00:00:34.790 --> 00:00:34.800 align:start position:0%
them together now what happens when we
 

00:00:34.800 --> 00:00:36.630 align:start position:0%
them together now what happens when we
take<00:00:35.040><c> the</c><00:00:35.200><c> two</c><00:00:35.440><c> heaviest</c><00:00:35.920><c> stones</c>

00:00:36.630 --> 00:00:36.640 align:start position:0%
take the two heaviest stones
 

00:00:36.640 --> 00:00:39.750 align:start position:0%
take the two heaviest stones
and<00:00:36.880><c> mash</c><00:00:37.200><c> them</c><00:00:37.440><c> together</c><00:00:38.160><c> well</c><00:00:38.640><c> in</c><00:00:38.800><c> one</c><00:00:39.120><c> case</c>

00:00:39.750 --> 00:00:39.760 align:start position:0%
and mash them together well in one case
 

00:00:39.760 --> 00:00:42.389 align:start position:0%
and mash them together well in one case
if<00:00:40.000><c> they</c><00:00:40.320><c> are</c><00:00:40.480><c> the</c><00:00:40.640><c> exact</c><00:00:41.040><c> same</c><00:00:41.360><c> weight</c><00:00:41.920><c> both</c>

00:00:42.389 --> 00:00:42.399 align:start position:0%
if they are the exact same weight both
 

00:00:42.399 --> 00:00:44.389 align:start position:0%
if they are the exact same weight both
of<00:00:42.559><c> the</c><00:00:42.719><c> stones</c><00:00:43.120><c> are</c><00:00:43.280><c> going</c><00:00:43.360><c> to</c><00:00:43.440><c> be</c><00:00:43.520><c> destroyed</c>

00:00:44.389 --> 00:00:44.399 align:start position:0%
of the stones are going to be destroyed
 

00:00:44.399 --> 00:00:46.869 align:start position:0%
of the stones are going to be destroyed
if<00:00:44.559><c> they</c><00:00:44.800><c> are</c><00:00:44.960><c> not</c><00:00:45.280><c> the</c><00:00:45.520><c> exact</c><00:00:45.920><c> same</c><00:00:46.239><c> weight</c>

00:00:46.869 --> 00:00:46.879 align:start position:0%
if they are not the exact same weight
 

00:00:46.879 --> 00:00:47.590 align:start position:0%
if they are not the exact same weight
then

00:00:47.590 --> 00:00:47.600 align:start position:0%
then
 

00:00:47.600 --> 00:00:50.150 align:start position:0%
then
the<00:00:47.920><c> smaller</c><00:00:48.480><c> stone</c><00:00:48.960><c> is</c><00:00:49.120><c> going</c><00:00:49.360><c> to</c><00:00:49.520><c> be</c><00:00:49.680><c> totally</c>

00:00:50.150 --> 00:00:50.160 align:start position:0%
the smaller stone is going to be totally
 

00:00:50.160 --> 00:00:50.790 align:start position:0%
the smaller stone is going to be totally
destroyed

00:00:50.790 --> 00:00:50.800 align:start position:0%
destroyed
 

00:00:50.800 --> 00:00:53.189 align:start position:0%
destroyed
but<00:00:51.039><c> the</c><00:00:51.360><c> larger</c><00:00:51.840><c> stone</c><00:00:52.480><c> is</c><00:00:52.719><c> going</c><00:00:52.960><c> to</c>

00:00:53.189 --> 00:00:53.199 align:start position:0%
but the larger stone is going to
 

00:00:53.199 --> 00:00:54.310 align:start position:0%
but the larger stone is going to
basically<00:00:53.760><c> be</c>

00:00:54.310 --> 00:00:54.320 align:start position:0%
basically be
 

00:00:54.320 --> 00:00:56.790 align:start position:0%
basically be
the<00:00:54.559><c> difference</c><00:00:55.039><c> between</c><00:00:55.440><c> the</c><00:00:55.600><c> weights</c><00:00:56.320><c> so</c>

00:00:56.790 --> 00:00:56.800 align:start position:0%
the difference between the weights so
 

00:00:56.800 --> 00:00:58.470 align:start position:0%
the difference between the weights so
for<00:00:56.960><c> example</c><00:00:57.199><c> let's</c><00:00:57.360><c> say</c><00:00:57.520><c> we</c><00:00:57.680><c> had</c><00:00:57.760><c> two</c><00:00:58.000><c> stones</c>

00:00:58.470 --> 00:00:58.480 align:start position:0%
for example let's say we had two stones
 

00:00:58.480 --> 00:00:58.950 align:start position:0%
for example let's say we had two stones
five

00:00:58.950 --> 00:00:58.960 align:start position:0%
five
 

00:00:58.960 --> 00:01:00.790 align:start position:0%
five
and<00:00:59.280><c> four</c><00:00:59.760><c> this</c><00:01:00.000><c> is</c><00:01:00.079><c> the</c><00:01:00.239><c> weight</c><00:01:00.559><c> of</c><00:01:00.640><c> the</c>

00:01:00.790 --> 00:01:00.800 align:start position:0%
and four this is the weight of the
 

00:01:00.800 --> 00:01:02.630 align:start position:0%
and four this is the weight of the
stones<00:01:01.280><c> they're</c><00:01:01.600><c> not</c><00:01:01.840><c> equal</c><00:01:02.239><c> so</c>

00:01:02.630 --> 00:01:02.640 align:start position:0%
stones they're not equal so
 

00:01:02.640 --> 00:01:05.109 align:start position:0%
stones they're not equal so
when<00:01:02.800><c> we</c><00:01:02.960><c> smash</c><00:01:03.280><c> them</c><00:01:03.520><c> together</c><00:01:04.559><c> the</c><00:01:04.720><c> smaller</c>

00:01:05.109 --> 00:01:05.119 align:start position:0%
when we smash them together the smaller
 

00:01:05.119 --> 00:01:06.950 align:start position:0%
when we smash them together the smaller
stone<00:01:05.439><c> four</c><00:01:05.760><c> is</c><00:01:05.920><c> going</c><00:01:06.000><c> to</c><00:01:06.080><c> be</c><00:01:06.240><c> destroyed</c>

00:01:06.950 --> 00:01:06.960 align:start position:0%
stone four is going to be destroyed
 

00:01:06.960 --> 00:01:09.429 align:start position:0%
stone four is going to be destroyed
and<00:01:07.360><c> the</c><00:01:07.600><c> larger</c><00:01:08.000><c> stone</c><00:01:08.560><c> is</c><00:01:08.720><c> going</c><00:01:08.960><c> to</c><00:01:09.200><c> be</c>

00:01:09.429 --> 00:01:09.439 align:start position:0%
and the larger stone is going to be
 

00:01:09.439 --> 00:01:10.630 align:start position:0%
and the larger stone is going to be
basically

00:01:10.630 --> 00:01:10.640 align:start position:0%
basically
 

00:01:10.640 --> 00:01:13.429 align:start position:0%
basically
a<00:01:10.960><c> five</c><00:01:11.600><c> minus</c><00:01:12.159><c> four</c><00:01:12.560><c> that's</c><00:01:12.799><c> what</c><00:01:13.040><c> its</c>

00:01:13.429 --> 00:01:13.439 align:start position:0%
a five minus four that's what its
 

00:01:13.439 --> 00:01:15.350 align:start position:0%
a five minus four that's what its
remaining<00:01:14.080><c> weight</c><00:01:14.400><c> is</c><00:01:14.560><c> going</c><00:01:14.720><c> to</c><00:01:14.799><c> be</c><00:01:15.040><c> so</c>

00:01:15.350 --> 00:01:15.360 align:start position:0%
remaining weight is going to be so
 

00:01:15.360 --> 00:01:17.109 align:start position:0%
remaining weight is going to be so
you<00:01:15.439><c> know</c><00:01:15.600><c> we</c><00:01:15.680><c> take</c><00:01:15.920><c> the</c><00:01:16.320><c> we</c><00:01:16.479><c> start</c><00:01:16.720><c> with</c><00:01:16.880><c> two</c>

00:01:17.109 --> 00:01:17.119 align:start position:0%
you know we take the we start with two
 

00:01:17.119 --> 00:01:19.109 align:start position:0%
you know we take the we start with two
stones<00:01:17.680><c> and</c><00:01:17.759><c> then</c><00:01:17.920><c> we</c><00:01:18.000><c> get</c><00:01:18.159><c> reduced</c><00:01:18.720><c> to</c><00:01:18.960><c> a</c>

00:01:19.109 --> 00:01:19.119 align:start position:0%
stones and then we get reduced to a
 

00:01:19.119 --> 00:01:21.030 align:start position:0%
stones and then we get reduced to a
single<00:01:19.439><c> stone</c><00:01:19.920><c> the</c><00:01:20.080><c> smaller</c><00:01:20.479><c> stone</c><00:01:20.799><c> gets</c>

00:01:21.030 --> 00:01:21.040 align:start position:0%
single stone the smaller stone gets
 

00:01:21.040 --> 00:01:21.749 align:start position:0%
single stone the smaller stone gets
destroyed

00:01:21.749 --> 00:01:21.759 align:start position:0%
destroyed
 

00:01:21.759 --> 00:01:23.429 align:start position:0%
destroyed
the<00:01:21.920><c> larger</c><00:01:22.320><c> stone</c><00:01:22.720><c> is</c><00:01:22.799><c> going</c><00:01:22.960><c> to</c><00:01:23.040><c> be</c><00:01:23.200><c> five</c>

00:01:23.429 --> 00:01:23.439 align:start position:0%
the larger stone is going to be five
 

00:01:23.439 --> 00:01:25.270 align:start position:0%
the larger stone is going to be five
minus<00:01:23.840><c> four</c><00:01:24.159><c> that's</c><00:01:24.479><c> a</c><00:01:24.799><c> one</c>

00:01:25.270 --> 00:01:25.280 align:start position:0%
minus four that's a one
 

00:01:25.280 --> 00:01:27.749 align:start position:0%
minus four that's a one
so<00:01:25.439><c> that's</c><00:01:25.600><c> kind</c><00:01:25.759><c> of</c><00:01:25.840><c> what</c><00:01:26.080><c> happens</c><00:01:26.799><c> when</c><00:01:27.040><c> we</c>

00:01:27.749 --> 00:01:27.759 align:start position:0%
so that's kind of what happens when we
 

00:01:27.759 --> 00:01:29.510 align:start position:0%
so that's kind of what happens when we
smash<00:01:28.159><c> two</c><00:01:28.400><c> stones</c><00:01:28.799><c> together</c>

00:01:29.510 --> 00:01:29.520 align:start position:0%
smash two stones together
 

00:01:29.520 --> 00:01:32.789 align:start position:0%
smash two stones together
at<00:01:29.680><c> the</c><00:01:30.000><c> end</c><00:01:30.400><c> there</c><00:01:30.640><c> is</c><00:01:30.799><c> going</c><00:01:31.040><c> to</c><00:01:31.200><c> be</c><00:01:31.520><c> at</c><00:01:32.079><c> most</c>

00:01:32.789 --> 00:01:32.799 align:start position:0%
at the end there is going to be at most
 

00:01:32.799 --> 00:01:35.910 align:start position:0%
at the end there is going to be at most
one<00:01:33.280><c> stone</c><00:01:34.159><c> left</c><00:01:34.799><c> and</c><00:01:34.960><c> it</c><00:01:35.119><c> could</c><00:01:35.439><c> technically</c>

00:01:35.910 --> 00:01:35.920 align:start position:0%
one stone left and it could technically
 

00:01:35.920 --> 00:01:36.550 align:start position:0%
one stone left and it could technically
even<00:01:36.240><c> be</c>

00:01:36.550 --> 00:01:36.560 align:start position:0%
even be
 

00:01:36.560 --> 00:01:39.590 align:start position:0%
even be
zero<00:01:36.960><c> stones</c><00:01:37.439><c> if</c><00:01:37.600><c> there</c><00:01:37.840><c> aren't</c><00:01:38.240><c> any</c><00:01:38.560><c> left</c><00:01:39.200><c> so</c>

00:01:39.590 --> 00:01:39.600 align:start position:0%
zero stones if there aren't any left so
 

00:01:39.600 --> 00:01:41.109 align:start position:0%
zero stones if there aren't any left so
what<00:01:39.759><c> do</c><00:01:39.920><c> we</c><00:01:40.079><c> want</c><00:01:40.240><c> to</c><00:01:40.320><c> return</c><00:01:40.720><c> we</c><00:01:40.880><c> want</c><00:01:41.040><c> to</c>

00:01:41.109 --> 00:01:41.119 align:start position:0%
what do we want to return we want to
 

00:01:41.119 --> 00:01:43.350 align:start position:0%
what do we want to return we want to
return<00:01:41.520><c> the</c><00:01:41.759><c> weight</c><00:01:42.159><c> of</c><00:01:42.479><c> whatever</c><00:01:42.960><c> stone</c>

00:01:43.350 --> 00:01:43.360 align:start position:0%
return the weight of whatever stone
 

00:01:43.360 --> 00:01:44.469 align:start position:0%
return the weight of whatever stone
happens<00:01:43.759><c> to</c><00:01:43.920><c> be</c><00:01:44.079><c> left</c>

00:01:44.469 --> 00:01:44.479 align:start position:0%
happens to be left
 

00:01:44.479 --> 00:01:47.109 align:start position:0%
happens to be left
over<00:01:44.880><c> if</c><00:01:45.040><c> we</c><00:01:45.280><c> don't</c><00:01:45.520><c> have</c><00:01:46.000><c> any</c><00:01:46.320><c> stones</c><00:01:46.799><c> left</c>

00:01:47.109 --> 00:01:47.119 align:start position:0%
over if we don't have any stones left
 

00:01:47.119 --> 00:01:47.590 align:start position:0%
over if we don't have any stones left
over

00:01:47.590 --> 00:01:47.600 align:start position:0%
over
 

00:01:47.600 --> 00:01:49.990 align:start position:0%
over
then<00:01:47.759><c> we</c><00:01:47.920><c> can</c><00:01:48.079><c> just</c><00:01:48.320><c> return</c><00:01:48.799><c> a</c><00:01:49.040><c> 0</c><00:01:49.600><c> as</c><00:01:49.759><c> the</c>

00:01:49.990 --> 00:01:50.000 align:start position:0%
then we can just return a 0 as the
 

00:01:50.000 --> 00:01:51.190 align:start position:0%
then we can just return a 0 as the
default<00:01:50.479><c> value</c>

00:01:51.190 --> 00:01:51.200 align:start position:0%
default value
 

00:01:51.200 --> 00:01:52.950 align:start position:0%
default value
so<00:01:51.439><c> i</c><00:01:51.600><c> will</c><00:01:51.840><c> say</c><00:01:52.000><c> that</c><00:01:52.159><c> this</c><00:01:52.399><c> problem</c><00:01:52.799><c> is</c>

00:01:52.950 --> 00:01:52.960 align:start position:0%
so i will say that this problem is
 

00:01:52.960 --> 00:01:54.789 align:start position:0%
so i will say that this problem is
somewhat<00:01:53.520><c> straightforward</c><00:01:54.399><c> let's</c><00:01:54.560><c> take</c><00:01:54.720><c> a</c>

00:01:54.789 --> 00:01:54.799 align:start position:0%
somewhat straightforward let's take a
 

00:01:54.799 --> 00:01:55.830 align:start position:0%
somewhat straightforward let's take a
look<00:01:55.119><c> at</c><00:01:55.280><c> one</c><00:01:55.439><c> of</c><00:01:55.520><c> the</c>

00:01:55.830 --> 00:01:55.840 align:start position:0%
look at one of the
 

00:01:55.840 --> 00:01:58.389 align:start position:0%
look at one of the
examples<00:01:56.640><c> and</c><00:01:56.799><c> the</c><00:01:56.960><c> reason</c><00:01:57.280><c> this</c><00:01:57.520><c> problem</c><00:01:58.000><c> is</c>

00:01:58.389 --> 00:01:58.399 align:start position:0%
examples and the reason this problem is
 

00:01:58.399 --> 00:01:59.749 align:start position:0%
examples and the reason this problem is
straightforward<00:01:59.119><c> is</c>

00:01:59.749 --> 00:01:59.759 align:start position:0%
straightforward is
 

00:01:59.759 --> 00:02:01.510 align:start position:0%
straightforward is
they<00:01:59.920><c> gave</c><00:02:00.240><c> us</c><00:02:00.479><c> basically</c><00:02:01.040><c> all</c><00:02:01.280><c> the</c>

00:02:01.510 --> 00:02:01.520 align:start position:0%
they gave us basically all the
 

00:02:01.520 --> 00:02:03.429 align:start position:0%
they gave us basically all the
instructions<00:02:02.320><c> and</c><00:02:02.399><c> the</c><00:02:02.640><c> information</c><00:02:03.119><c> that</c><00:02:03.280><c> we</c>

00:02:03.429 --> 00:02:03.439 align:start position:0%
instructions and the information that we
 

00:02:03.439 --> 00:02:05.510 align:start position:0%
instructions and the information that we
need<00:02:03.840><c> and</c><00:02:04.079><c> all</c><00:02:04.320><c> we</c><00:02:04.479><c> really</c><00:02:04.719><c> have</c><00:02:04.880><c> to</c><00:02:05.040><c> do</c><00:02:05.280><c> is</c>

00:02:05.510 --> 00:02:05.520 align:start position:0%
need and all we really have to do is
 

00:02:05.520 --> 00:02:05.990 align:start position:0%
need and all we really have to do is
kind<00:02:05.680><c> of</c>

00:02:05.990 --> 00:02:06.000 align:start position:0%
kind of
 

00:02:06.000 --> 00:02:08.309 align:start position:0%
kind of
simulate<00:02:06.960><c> these</c><00:02:07.360><c> instructions</c><00:02:08.000><c> we</c><00:02:08.160><c> don't</c>

00:02:08.309 --> 00:02:08.319 align:start position:0%
simulate these instructions we don't
 

00:02:08.319 --> 00:02:10.150 align:start position:0%
simulate these instructions we don't
actually<00:02:08.560><c> have</c><00:02:08.720><c> to</c><00:02:08.800><c> find</c><00:02:09.119><c> a</c><00:02:09.360><c> clever</c><00:02:09.759><c> way</c><00:02:10.000><c> to</c>

00:02:10.150 --> 00:02:10.160 align:start position:0%
actually have to find a clever way to
 

00:02:10.160 --> 00:02:11.990 align:start position:0%
actually have to find a clever way to
solve<00:02:10.399><c> this</c><00:02:10.640><c> problem</c><00:02:11.120><c> we</c><00:02:11.280><c> just</c><00:02:11.520><c> have</c><00:02:11.599><c> to</c>

00:02:11.990 --> 00:02:12.000 align:start position:0%
solve this problem we just have to
 

00:02:12.000 --> 00:02:13.830 align:start position:0%
solve this problem we just have to
simulate<00:02:12.640><c> what</c><00:02:12.800><c> they</c><00:02:13.040><c> told</c><00:02:13.280><c> us</c><00:02:13.440><c> that's</c><00:02:13.680><c> pretty</c>

00:02:13.830 --> 00:02:13.840 align:start position:0%
simulate what they told us that's pretty
 

00:02:13.840 --> 00:02:15.270 align:start position:0%
simulate what they told us that's pretty
much<00:02:14.080><c> the</c><00:02:14.160><c> best</c><00:02:14.400><c> we</c><00:02:14.560><c> can</c><00:02:14.720><c> do</c>

00:02:15.270 --> 00:02:15.280 align:start position:0%
much the best we can do
 

00:02:15.280 --> 00:02:16.949 align:start position:0%
much the best we can do
what<00:02:15.440><c> did</c><00:02:15.599><c> they</c><00:02:15.760><c> tell</c><00:02:15.920><c> us</c><00:02:16.080><c> to</c><00:02:16.239><c> do</c><00:02:16.400><c> they</c><00:02:16.560><c> told</c><00:02:16.800><c> us</c>

00:02:16.949 --> 00:02:16.959 align:start position:0%
what did they tell us to do they told us
 

00:02:16.959 --> 00:02:18.869 align:start position:0%
what did they tell us to do they told us
to<00:02:17.200><c> always</c><00:02:17.760><c> take</c><00:02:18.239><c> the</c><00:02:18.480><c> two</c>

00:02:18.869 --> 00:02:18.879 align:start position:0%
to always take the two
 

00:02:18.879 --> 00:02:20.949 align:start position:0%
to always take the two
heaviest<00:02:19.440><c> stones</c><00:02:20.080><c> and</c><00:02:20.239><c> then</c><00:02:20.400><c> smash</c><00:02:20.800><c> them</c>

00:02:20.949 --> 00:02:20.959 align:start position:0%
heaviest stones and then smash them
 

00:02:20.959 --> 00:02:22.630 align:start position:0%
heaviest stones and then smash them
together<00:02:21.599><c> how</c><00:02:21.920><c> are</c><00:02:22.000><c> we</c><00:02:22.160><c> gonna</c>

00:02:22.630 --> 00:02:22.640 align:start position:0%
together how are we gonna
 

00:02:22.640 --> 00:02:25.030 align:start position:0%
together how are we gonna
get<00:02:23.120><c> suppose</c><00:02:23.520><c> we</c><00:02:23.760><c> had</c><00:02:24.160><c> a</c><00:02:24.319><c> bunch</c><00:02:24.560><c> of</c><00:02:24.640><c> stones</c>

00:02:25.030 --> 00:02:25.040 align:start position:0%
get suppose we had a bunch of stones
 

00:02:25.040 --> 00:02:25.670 align:start position:0%
get suppose we had a bunch of stones
like<00:02:25.200><c> this</c>

00:02:25.670 --> 00:02:25.680 align:start position:0%
like this
 

00:02:25.680 --> 00:02:28.150 align:start position:0%
like this
how<00:02:25.840><c> are</c><00:02:26.000><c> we</c><00:02:26.160><c> gonna</c><00:02:26.640><c> get</c><00:02:27.120><c> the</c><00:02:27.360><c> two</c><00:02:27.680><c> heaviest</c>

00:02:28.150 --> 00:02:28.160 align:start position:0%
how are we gonna get the two heaviest
 

00:02:28.160 --> 00:02:28.790 align:start position:0%
how are we gonna get the two heaviest
stones

00:02:28.790 --> 00:02:28.800 align:start position:0%
stones
 

00:02:28.800 --> 00:02:31.350 align:start position:0%
stones
of<00:02:28.959><c> course</c><00:02:29.200><c> we</c><00:02:29.440><c> could</c><00:02:29.760><c> sort</c><00:02:30.239><c> the</c><00:02:30.560><c> array</c><00:02:31.040><c> that's</c>

00:02:31.350 --> 00:02:31.360 align:start position:0%
of course we could sort the array that's
 

00:02:31.360 --> 00:02:32.229 align:start position:0%
of course we could sort the array that's
one<00:02:31.599><c> solution</c>

00:02:32.229 --> 00:02:32.239 align:start position:0%
one solution
 

00:02:32.239 --> 00:02:34.390 align:start position:0%
one solution
but<00:02:32.480><c> even</c><00:02:32.720><c> if</c><00:02:32.879><c> we</c><00:02:33.040><c> did</c><00:02:33.280><c> sort</c><00:02:33.519><c> the</c><00:02:33.680><c> array</c><00:02:34.160><c> you'll</c>

00:02:34.390 --> 00:02:34.400 align:start position:0%
but even if we did sort the array you'll
 

00:02:34.400 --> 00:02:35.430 align:start position:0%
but even if we did sort the array you'll
find<00:02:34.720><c> that</c>

00:02:35.430 --> 00:02:35.440 align:start position:0%
find that
 

00:02:35.440 --> 00:02:37.110 align:start position:0%
find that
it's<00:02:35.680><c> a</c><00:02:35.760><c> valid</c><00:02:36.160><c> solution</c><00:02:36.480><c> but</c><00:02:36.720><c> you</c><00:02:36.800><c> know</c><00:02:36.879><c> when</c>

00:02:37.110 --> 00:02:37.120 align:start position:0%
it's a valid solution but you know when
 

00:02:37.120 --> 00:02:38.550 align:start position:0%
it's a valid solution but you know when
we're<00:02:37.280><c> taking</c><00:02:37.519><c> the</c><00:02:37.680><c> two</c><00:02:37.840><c> heaviest</c>

00:02:38.550 --> 00:02:38.560 align:start position:0%
we're taking the two heaviest
 

00:02:38.560 --> 00:02:40.470 align:start position:0%
we're taking the two heaviest
seven<00:02:38.959><c> and</c><00:02:39.200><c> one</c><00:02:39.599><c> we're</c><00:02:39.840><c> smashing</c><00:02:40.239><c> them</c>

00:02:40.470 --> 00:02:40.480 align:start position:0%
seven and one we're smashing them
 

00:02:40.480 --> 00:02:42.309 align:start position:0%
seven and one we're smashing them
together<00:02:41.120><c> and</c><00:02:41.200><c> then</c><00:02:41.440><c> we're</c><00:02:41.599><c> gonna</c><00:02:41.840><c> basically</c>

00:02:42.309 --> 00:02:42.319 align:start position:0%
together and then we're gonna basically
 

00:02:42.319 --> 00:02:44.710 align:start position:0%
together and then we're gonna basically
be<00:02:42.560><c> introducing</c><00:02:43.200><c> a</c><00:02:43.440><c> new</c><00:02:43.760><c> stone</c><00:02:44.160><c> right</c><00:02:44.400><c> so</c>

00:02:44.710 --> 00:02:44.720 align:start position:0%
be introducing a new stone right so
 

00:02:44.720 --> 00:02:46.630 align:start position:0%
be introducing a new stone right so
eight<00:02:45.040><c> minus</c><00:02:45.440><c> seven</c><00:02:45.760><c> is</c><00:02:45.920><c> going</c><00:02:46.000><c> to</c><00:02:46.080><c> be</c><00:02:46.239><c> the</c><00:02:46.400><c> new</c>

00:02:46.630 --> 00:02:46.640 align:start position:0%
eight minus seven is going to be the new
 

00:02:46.640 --> 00:02:48.390 align:start position:0%
eight minus seven is going to be the new
stone<00:02:47.280><c> one</c><00:02:47.599><c> and</c><00:02:47.680><c> then</c><00:02:47.840><c> we're</c><00:02:48.000><c> gonna</c>

00:02:48.390 --> 00:02:48.400 align:start position:0%
stone one and then we're gonna
 

00:02:48.400 --> 00:02:51.509 align:start position:0%
stone one and then we're gonna
to<00:02:48.560><c> maintain</c><00:02:49.120><c> the</c><00:02:49.360><c> sorted</c><00:02:49.840><c> property</c><00:02:50.400><c> of</c><00:02:50.640><c> this</c>

00:02:51.509 --> 00:02:51.519 align:start position:0%
to maintain the sorted property of this
 

00:02:51.519 --> 00:02:53.750 align:start position:0%
to maintain the sorted property of this
list<00:02:52.000><c> we're</c><00:02:52.160><c> gonna</c><00:02:52.319><c> have</c><00:02:52.480><c> to</c><00:02:52.640><c> insert</c><00:02:53.040><c> this</c><00:02:53.440><c> in</c>

00:02:53.750 --> 00:02:53.760 align:start position:0%
list we're gonna have to insert this in
 

00:02:53.760 --> 00:02:54.710 align:start position:0%
list we're gonna have to insert this in
order<00:02:54.400><c> which</c>

00:02:54.710 --> 00:02:54.720 align:start position:0%
order which
 

00:02:54.720 --> 00:02:57.030 align:start position:0%
order which
might<00:02:54.879><c> be</c><00:02:55.040><c> a</c><00:02:55.120><c> little</c><00:02:55.280><c> bit</c><00:02:55.519><c> annoying</c><00:02:56.720><c> but</c><00:02:56.959><c> i</c>

00:02:57.030 --> 00:02:57.040 align:start position:0%
might be a little bit annoying but i
 

00:02:57.040 --> 00:02:58.869 align:start position:0%
might be a little bit annoying but i
think<00:02:57.200><c> it</c><00:02:57.360><c> is</c><00:02:57.440><c> a</c><00:02:57.519><c> valid</c><00:02:57.920><c> solution</c><00:02:58.319><c> but</c><00:02:58.480><c> another</c>

00:02:58.869 --> 00:02:58.879 align:start position:0%
think it is a valid solution but another
 

00:02:58.879 --> 00:02:59.589 align:start position:0%
think it is a valid solution but another
solution

00:02:59.589 --> 00:02:59.599 align:start position:0%
solution
 

00:02:59.599 --> 00:03:03.270 align:start position:0%
solution
is<00:02:59.840><c> going</c><00:03:00.000><c> to</c><00:03:00.239><c> be</c><00:03:00.480><c> using</c><00:03:01.360><c> a</c><00:03:02.000><c> heap</c><00:03:02.480><c> not</c><00:03:02.720><c> a</c><00:03:02.959><c> min</c>

00:03:03.270 --> 00:03:03.280 align:start position:0%
is going to be using a heap not a min
 

00:03:03.280 --> 00:03:04.630 align:start position:0%
is going to be using a heap not a min
heap<00:03:03.519><c> in</c><00:03:03.680><c> this</c><00:03:03.840><c> case</c><00:03:04.080><c> but</c><00:03:04.239><c> we're</c><00:03:04.400><c> actually</c>

00:03:04.630 --> 00:03:04.640 align:start position:0%
heap in this case but we're actually
 

00:03:04.640 --> 00:03:06.710 align:start position:0%
heap in this case but we're actually
going<00:03:04.720><c> to</c><00:03:04.800><c> be</c><00:03:04.959><c> using</c><00:03:05.280><c> a</c><00:03:05.599><c> max</c><00:03:06.159><c> heap</c>

00:03:06.710 --> 00:03:06.720 align:start position:0%
going to be using a max heap
 

00:03:06.720 --> 00:03:09.750 align:start position:0%
going to be using a max heap
because<00:03:07.120><c> we're</c><00:03:07.280><c> going</c><00:03:07.360><c> to</c><00:03:07.440><c> be</c><00:03:07.599><c> taking</c><00:03:08.239><c> the</c><00:03:08.640><c> max</c>

00:03:09.750 --> 00:03:09.760 align:start position:0%
because we're going to be taking the max
 

00:03:09.760 --> 00:03:12.710 align:start position:0%
because we're going to be taking the max
stones<00:03:10.480><c> each</c><00:03:10.879><c> iteration</c><00:03:11.840><c> in</c><00:03:12.000><c> order</c><00:03:12.319><c> to</c><00:03:12.480><c> take</c>

00:03:12.710 --> 00:03:12.720 align:start position:0%
stones each iteration in order to take
 

00:03:12.720 --> 00:03:13.030 align:start position:0%
stones each iteration in order to take
this

00:03:13.030 --> 00:03:13.040 align:start position:0%
this
 

00:03:13.040 --> 00:03:15.589 align:start position:0%
this
input<00:03:13.440><c> array</c><00:03:13.760><c> and</c><00:03:13.920><c> transform</c><00:03:14.560><c> it</c><00:03:14.720><c> into</c><00:03:15.120><c> a</c><00:03:15.360><c> max</c>

00:03:15.589 --> 00:03:15.599 align:start position:0%
input array and transform it into a max
 

00:03:15.599 --> 00:03:16.710 align:start position:0%
input array and transform it into a max
heap<00:03:15.920><c> is</c><00:03:16.080><c> actually</c><00:03:16.480><c> an</c>

00:03:16.710 --> 00:03:16.720 align:start position:0%
heap is actually an
 

00:03:16.720 --> 00:03:20.470 align:start position:0%
heap is actually an
o<00:03:16.959><c> of</c><00:03:17.200><c> n</c><00:03:17.920><c> time</c><00:03:18.319><c> operation</c><00:03:19.599><c> uh</c><00:03:19.920><c> with</c><00:03:20.239><c> the</c>

00:03:20.470 --> 00:03:20.480 align:start position:0%
o of n time operation uh with the
 

00:03:20.480 --> 00:03:21.990 align:start position:0%
o of n time operation uh with the
heapify<00:03:21.200><c> function</c>

00:03:21.990 --> 00:03:22.000 align:start position:0%
heapify function
 

00:03:22.000 --> 00:03:24.309 align:start position:0%
heapify function
but<00:03:22.560><c> every</c><00:03:22.879><c> time</c><00:03:23.200><c> that</c><00:03:23.360><c> we</c><00:03:23.519><c> want</c><00:03:23.680><c> to</c><00:03:23.840><c> actually</c>

00:03:24.309 --> 00:03:24.319 align:start position:0%
but every time that we want to actually
 

00:03:24.319 --> 00:03:26.149 align:start position:0%
but every time that we want to actually
get<00:03:24.640><c> the</c><00:03:24.799><c> maximum</c><00:03:25.440><c> from</c><00:03:25.760><c> here</c>

00:03:26.149 --> 00:03:26.159 align:start position:0%
get the maximum from here
 

00:03:26.159 --> 00:03:29.430 align:start position:0%
get the maximum from here
that's<00:03:26.480><c> going</c><00:03:26.560><c> to</c><00:03:26.720><c> be</c><00:03:26.959><c> a</c><00:03:27.599><c> log</c><00:03:28.159><c> n</c><00:03:28.640><c> operation</c><00:03:29.280><c> and</c>

00:03:29.430 --> 00:03:29.440 align:start position:0%
that's going to be a log n operation and
 

00:03:29.440 --> 00:03:31.110 align:start position:0%
that's going to be a log n operation and
how<00:03:29.599><c> many</c><00:03:29.840><c> times</c><00:03:30.239><c> potentially</c><00:03:30.799><c> are</c><00:03:30.879><c> we</c>

00:03:31.110 --> 00:03:31.120 align:start position:0%
how many times potentially are we
 

00:03:31.120 --> 00:03:32.229 align:start position:0%
how many times potentially are we
actually<00:03:31.360><c> going</c><00:03:31.440><c> to</c><00:03:31.519><c> need</c><00:03:31.680><c> to</c><00:03:31.840><c> get</c><00:03:32.080><c> the</c>

00:03:32.229 --> 00:03:32.239 align:start position:0%
actually going to need to get the
 

00:03:32.239 --> 00:03:33.110 align:start position:0%
actually going to need to get the
maximum

00:03:33.110 --> 00:03:33.120 align:start position:0%
maximum
 

00:03:33.120 --> 00:03:36.869 align:start position:0%
maximum
from<00:03:33.360><c> here</c><00:03:34.000><c> n</c><00:03:34.319><c> times</c><00:03:34.959><c> so</c><00:03:35.280><c> n</c><00:03:35.760><c> multiplied</c><00:03:36.400><c> by</c><00:03:36.560><c> log</c>

00:03:36.869 --> 00:03:36.879 align:start position:0%
from here n times so n multiplied by log
 

00:03:36.879 --> 00:03:37.190 align:start position:0%
from here n times so n multiplied by log
n

00:03:37.190 --> 00:03:37.200 align:start position:0%
n
 

00:03:37.200 --> 00:03:39.589 align:start position:0%
n
that's<00:03:37.519><c> what's</c><00:03:37.760><c> going</c><00:03:37.920><c> to</c><00:03:38.000><c> be</c><00:03:38.239><c> the</c><00:03:38.560><c> overall</c>

00:03:39.589 --> 00:03:39.599 align:start position:0%
that's what's going to be the overall
 

00:03:39.599 --> 00:03:41.110 align:start position:0%
that's what's going to be the overall
time<00:03:40.000><c> complexity</c>

00:03:41.110 --> 00:03:41.120 align:start position:0%
time complexity
 

00:03:41.120 --> 00:03:43.750 align:start position:0%
time complexity
of<00:03:41.599><c> this</c><00:03:42.000><c> solution</c><00:03:42.799><c> now</c><00:03:42.959><c> how</c><00:03:43.120><c> is</c><00:03:43.280><c> it</c><00:03:43.440><c> actually</c>

00:03:43.750 --> 00:03:43.760 align:start position:0%
of this solution now how is it actually
 

00:03:43.760 --> 00:03:44.309 align:start position:0%
of this solution now how is it actually
going<00:03:43.840><c> to</c><00:03:43.920><c> work</c>

00:03:44.309 --> 00:03:44.319 align:start position:0%
going to work
 

00:03:44.319 --> 00:03:46.390 align:start position:0%
going to work
well<00:03:44.560><c> basically</c><00:03:45.440><c> as</c><00:03:45.680><c> i</c><00:03:45.840><c> mentioned</c><00:03:46.239><c> we're</c>

00:03:46.390 --> 00:03:46.400 align:start position:0%
well basically as i mentioned we're
 

00:03:46.400 --> 00:03:47.670 align:start position:0%
well basically as i mentioned we're
gonna<00:03:46.560><c> simulate</c><00:03:47.040><c> so</c>

00:03:47.670 --> 00:03:47.680 align:start position:0%
gonna simulate so
 

00:03:47.680 --> 00:03:49.270 align:start position:0%
gonna simulate so
we're<00:03:47.840><c> gonna</c><00:03:48.000><c> assume</c><00:03:48.319><c> we</c><00:03:48.480><c> have</c><00:03:48.640><c> a</c><00:03:48.799><c> max</c><00:03:49.040><c> heap</c>

00:03:49.270 --> 00:03:49.280 align:start position:0%
we're gonna assume we have a max heap
 

00:03:49.280 --> 00:03:51.509 align:start position:0%
we're gonna assume we have a max heap
here<00:03:49.680><c> we're</c><00:03:49.840><c> gonna</c><00:03:50.000><c> get</c><00:03:50.159><c> the</c><00:03:50.480><c> largest</c><00:03:50.879><c> stone</c>

00:03:51.509 --> 00:03:51.519 align:start position:0%
here we're gonna get the largest stone
 

00:03:51.519 --> 00:03:53.350 align:start position:0%
here we're gonna get the largest stone
it's<00:03:51.680><c> gonna</c><00:03:51.920><c> be</c><00:03:52.159><c> an</c><00:03:52.400><c> eight</c><00:03:52.799><c> we're</c><00:03:53.040><c> gonna</c><00:03:53.200><c> get</c>

00:03:53.350 --> 00:03:53.360 align:start position:0%
it's gonna be an eight we're gonna get
 

00:03:53.360 --> 00:03:55.589 align:start position:0%
it's gonna be an eight we're gonna get
the<00:03:53.599><c> second</c><00:03:53.920><c> largest</c><00:03:54.319><c> stone</c><00:03:54.640><c> it's</c><00:03:54.799><c> gonna</c><00:03:55.040><c> be</c>

00:03:55.589 --> 00:03:55.599 align:start position:0%
the second largest stone it's gonna be
 

00:03:55.599 --> 00:03:58.070 align:start position:0%
the second largest stone it's gonna be
a<00:03:56.000><c> seven</c><00:03:56.560><c> we're</c><00:03:56.720><c> gonna</c><00:03:56.879><c> smash</c><00:03:57.280><c> them</c><00:03:57.439><c> together</c>

00:03:58.070 --> 00:03:58.080 align:start position:0%
a seven we're gonna smash them together
 

00:03:58.080 --> 00:03:59.030 align:start position:0%
a seven we're gonna smash them together
we<00:03:58.239><c> have</c><00:03:58.560><c> eight</c>

00:03:59.030 --> 00:03:59.040 align:start position:0%
we have eight
 

00:03:59.040 --> 00:04:01.190 align:start position:0%
we have eight
and<00:03:59.280><c> seven</c><00:03:59.599><c> smashing</c><00:04:00.000><c> them</c><00:04:00.159><c> together</c><00:04:00.799><c> seven</c>

00:04:01.190 --> 00:04:01.200 align:start position:0%
and seven smashing them together seven
 

00:04:01.200 --> 00:04:02.710 align:start position:0%
and seven smashing them together seven
is<00:04:01.360><c> smaller</c><00:04:01.920><c> so</c><00:04:02.159><c> this</c><00:04:02.319><c> is</c><00:04:02.400><c> going</c><00:04:02.480><c> to</c><00:04:02.560><c> be</c>

00:04:02.710 --> 00:04:02.720 align:start position:0%
is smaller so this is going to be
 

00:04:02.720 --> 00:04:03.509 align:start position:0%
is smaller so this is going to be
destroyed

00:04:03.509 --> 00:04:03.519 align:start position:0%
destroyed
 

00:04:03.519 --> 00:04:06.869 align:start position:0%
destroyed
eight<00:04:03.840><c> is</c><00:04:03.920><c> gonna</c><00:04:04.159><c> be</c><00:04:04.319><c> transformed</c><00:04:04.879><c> into</c><00:04:05.360><c> a</c><00:04:06.080><c> one</c>

00:04:06.869 --> 00:04:06.879 align:start position:0%
eight is gonna be transformed into a one
 

00:04:06.879 --> 00:04:09.030 align:start position:0%
eight is gonna be transformed into a one
now<00:04:07.200><c> so</c><00:04:07.439><c> we</c><00:04:07.599><c> can</c><00:04:08.080><c> let's</c><00:04:08.319><c> just</c><00:04:08.560><c> introduce</c>

00:04:09.030 --> 00:04:09.040 align:start position:0%
now so we can let's just introduce
 

00:04:09.040 --> 00:04:10.229 align:start position:0%
now so we can let's just introduce
another<00:04:09.599><c> one</c>

00:04:10.229 --> 00:04:10.239 align:start position:0%
another one
 

00:04:10.239 --> 00:04:13.110 align:start position:0%
another one
to<00:04:10.480><c> this</c><00:04:11.200><c> list</c><00:04:12.159><c> and</c><00:04:12.319><c> we're</c><00:04:12.560><c> gonna</c><00:04:12.720><c> continue</c>

00:04:13.110 --> 00:04:13.120 align:start position:0%
to this list and we're gonna continue
 

00:04:13.120 --> 00:04:14.710 align:start position:0%
to this list and we're gonna continue
the<00:04:13.280><c> simulation</c><00:04:13.840><c> right</c><00:04:14.000><c> we're</c><00:04:14.159><c> gonna</c><00:04:14.400><c> get</c><00:04:14.560><c> the</c>

00:04:14.710 --> 00:04:14.720 align:start position:0%
the simulation right we're gonna get the
 

00:04:14.720 --> 00:04:16.789 align:start position:0%
the simulation right we're gonna get the
now<00:04:15.040><c> two</c><00:04:15.280><c> biggest</c><00:04:15.680><c> stones</c><00:04:16.160><c> it's</c><00:04:16.320><c> gonna</c><00:04:16.479><c> be</c><00:04:16.560><c> a</c>

00:04:16.789 --> 00:04:16.799 align:start position:0%
now two biggest stones it's gonna be a
 

00:04:16.799 --> 00:04:17.349 align:start position:0%
now two biggest stones it's gonna be a
four

00:04:17.349 --> 00:04:17.359 align:start position:0%
four
 

00:04:17.359 --> 00:04:19.830 align:start position:0%
four
and<00:04:17.519><c> a</c><00:04:17.680><c> two</c><00:04:18.160><c> what's</c><00:04:18.400><c> going</c><00:04:18.479><c> to</c><00:04:18.639><c> happen</c><00:04:19.280><c> with</c>

00:04:19.830 --> 00:04:19.840 align:start position:0%
and a two what's going to happen with
 

00:04:19.840 --> 00:04:20.789 align:start position:0%
and a two what's going to happen with
four<00:04:20.320><c> and</c>

00:04:20.789 --> 00:04:20.799 align:start position:0%
four and
 

00:04:20.799 --> 00:04:23.430 align:start position:0%
four and
two<00:04:21.359><c> well</c><00:04:22.000><c> two</c><00:04:22.320><c> is</c><00:04:22.479><c> smaller</c><00:04:22.880><c> so</c><00:04:23.040><c> that's</c><00:04:23.280><c> gonna</c>

00:04:23.430 --> 00:04:23.440 align:start position:0%
two well two is smaller so that's gonna
 

00:04:23.440 --> 00:04:24.310 align:start position:0%
two well two is smaller so that's gonna
be<00:04:23.520><c> destroyed</c>

00:04:24.310 --> 00:04:24.320 align:start position:0%
be destroyed
 

00:04:24.320 --> 00:04:26.310 align:start position:0%
be destroyed
four<00:04:24.720><c> is</c><00:04:24.800><c> going</c><00:04:24.960><c> to</c><00:04:25.040><c> basically</c><00:04:25.520><c> be</c><00:04:25.680><c> four</c><00:04:25.919><c> minus</c>

00:04:26.310 --> 00:04:26.320 align:start position:0%
four is going to basically be four minus
 

00:04:26.320 --> 00:04:27.590 align:start position:0%
four is going to basically be four minus
two<00:04:26.560><c> which</c><00:04:26.720><c> is</c><00:04:26.800><c> gonna</c><00:04:26.960><c> be</c><00:04:27.199><c> two</c>

00:04:27.590 --> 00:04:27.600 align:start position:0%
two which is gonna be two
 

00:04:27.600 --> 00:04:30.310 align:start position:0%
two which is gonna be two
so<00:04:27.840><c> we</c><00:04:28.000><c> can</c><00:04:28.320><c> insert</c><00:04:28.720><c> that</c><00:04:28.960><c> into</c><00:04:29.440><c> our</c><00:04:29.600><c> max</c><00:04:30.000><c> heap</c>

00:04:30.310 --> 00:04:30.320 align:start position:0%
so we can insert that into our max heap
 

00:04:30.320 --> 00:04:32.070 align:start position:0%
so we can insert that into our max heap
so<00:04:30.479><c> now</c><00:04:30.639><c> we're</c><00:04:30.800><c> gonna</c><00:04:31.040><c> insert</c><00:04:31.360><c> a</c><00:04:31.520><c> two</c>

00:04:32.070 --> 00:04:32.080 align:start position:0%
so now we're gonna insert a two
 

00:04:32.080 --> 00:04:34.230 align:start position:0%
so now we're gonna insert a two
now<00:04:32.240><c> we</c><00:04:32.479><c> are</c><00:04:32.720><c> left</c><00:04:33.040><c> with</c><00:04:33.600><c> it's</c><00:04:33.759><c> a</c><00:04:33.840><c> little</c><00:04:34.000><c> bit</c>

00:04:34.230 --> 00:04:34.240 align:start position:0%
now we are left with it's a little bit
 

00:04:34.240 --> 00:04:35.990 align:start position:0%
now we are left with it's a little bit
messy<00:04:34.560><c> but</c><00:04:34.800><c> we're</c><00:04:35.040><c> left</c><00:04:35.360><c> with</c>

00:04:35.990 --> 00:04:36.000 align:start position:0%
messy but we're left with
 

00:04:36.000 --> 00:04:39.270 align:start position:0%
messy but we're left with
a<00:04:36.240><c> two</c><00:04:36.800><c> a</c><00:04:37.040><c> one</c><00:04:37.680><c> and</c><00:04:38.000><c> a</c><00:04:38.080><c> couple</c><00:04:38.639><c> ones</c>

00:04:39.270 --> 00:04:39.280 align:start position:0%
a two a one and a couple ones
 

00:04:39.280 --> 00:04:41.030 align:start position:0%
a two a one and a couple ones
so<00:04:39.440><c> when</c><00:04:39.600><c> we</c><00:04:39.759><c> smash</c><00:04:40.160><c> these</c><00:04:40.400><c> two</c><00:04:40.639><c> together</c>

00:04:41.030 --> 00:04:41.040 align:start position:0%
so when we smash these two together
 

00:04:41.040 --> 00:04:42.310 align:start position:0%
so when we smash these two together
we're<00:04:41.199><c> actually</c><00:04:41.520><c> gonna</c><00:04:41.680><c> be</c><00:04:41.840><c> left</c><00:04:42.080><c> with</c><00:04:42.240><c> a</c>

00:04:42.310 --> 00:04:42.320 align:start position:0%
we're actually gonna be left with a
 

00:04:42.320 --> 00:04:43.830 align:start position:0%
we're actually gonna be left with a
single<00:04:42.800><c> one</c><00:04:43.120><c> i</c><00:04:43.360><c> won't</c>

00:04:43.830 --> 00:04:43.840 align:start position:0%
single one i won't
 

00:04:43.840 --> 00:04:45.270 align:start position:0%
single one i won't
draw<00:04:44.080><c> that</c><00:04:44.240><c> because</c><00:04:44.479><c> i</c><00:04:44.560><c> think</c><00:04:44.800><c> at</c><00:04:44.880><c> this</c><00:04:45.040><c> point</c>

00:04:45.270 --> 00:04:45.280 align:start position:0%
draw that because i think at this point
 

00:04:45.280 --> 00:04:46.550 align:start position:0%
draw that because i think at this point
you<00:04:45.360><c> probably</c><00:04:45.600><c> get</c><00:04:45.759><c> the</c><00:04:45.919><c> idea</c><00:04:46.160><c> then</c><00:04:46.320><c> we're</c>

00:04:46.550 --> 00:04:46.560 align:start position:0%
you probably get the idea then we're
 

00:04:46.560 --> 00:04:47.990 align:start position:0%
you probably get the idea then we're
left<00:04:46.720><c> with</c><00:04:47.040><c> three</c><00:04:47.440><c> ones</c>

00:04:47.990 --> 00:04:48.000 align:start position:0%
left with three ones
 

00:04:48.000 --> 00:04:49.830 align:start position:0%
left with three ones
what's<00:04:48.240><c> going</c><00:04:48.320><c> to</c><00:04:48.400><c> happen</c><00:04:48.880><c> with</c><00:04:49.360><c> these</c><00:04:49.600><c> three</c>

00:04:49.830 --> 00:04:49.840 align:start position:0%
what's going to happen with these three
 

00:04:49.840 --> 00:04:51.270 align:start position:0%
what's going to happen with these three
ones<00:04:50.160><c> well</c><00:04:50.479><c> two</c><00:04:50.639><c> of</c><00:04:50.800><c> them</c><00:04:50.960><c> are</c><00:04:51.040><c> going</c><00:04:51.120><c> to</c><00:04:51.199><c> be</c>

00:04:51.270 --> 00:04:51.280 align:start position:0%
ones well two of them are going to be
 

00:04:51.280 --> 00:04:52.230 align:start position:0%
ones well two of them are going to be
smashed<00:04:51.680><c> together</c>

00:04:52.230 --> 00:04:52.240 align:start position:0%
smashed together
 

00:04:52.240 --> 00:04:54.550 align:start position:0%
smashed together
and<00:04:52.400><c> then</c><00:04:52.560><c> we're</c><00:04:52.800><c> left</c><00:04:53.040><c> with</c><00:04:53.199><c> a</c><00:04:53.360><c> single</c><00:04:53.919><c> one</c>

00:04:54.550 --> 00:04:54.560 align:start position:0%
and then we're left with a single one
 

00:04:54.560 --> 00:04:56.390 align:start position:0%
and then we're left with a single one
left<00:04:54.880><c> and</c><00:04:54.960><c> we</c><00:04:55.120><c> have</c><00:04:55.280><c> nothing</c><00:04:55.840><c> left</c>

00:04:56.390 --> 00:04:56.400 align:start position:0%
left and we have nothing left
 

00:04:56.400 --> 00:04:58.710 align:start position:0%
left and we have nothing left
we<00:04:56.560><c> have</c><00:04:56.720><c> no</c><00:04:57.040><c> other</c><00:04:57.280><c> stones</c><00:04:57.759><c> to</c><00:04:57.919><c> smash</c><00:04:58.400><c> this</c>

00:04:58.710 --> 00:04:58.720 align:start position:0%
we have no other stones to smash this
 

00:04:58.720 --> 00:04:59.510 align:start position:0%
we have no other stones to smash this
one<00:04:58.960><c> with</c>

00:04:59.510 --> 00:04:59.520 align:start position:0%
one with
 

00:04:59.520 --> 00:05:01.510 align:start position:0%
one with
so<00:04:59.840><c> when</c><00:05:00.400><c> everything</c><00:05:00.720><c> is</c><00:05:00.800><c> said</c><00:05:00.960><c> and</c><00:05:01.039><c> done</c><00:05:01.360><c> we</c>

00:05:01.510 --> 00:05:01.520 align:start position:0%
so when everything is said and done we
 

00:05:01.520 --> 00:05:02.550 align:start position:0%
so when everything is said and done we
will<00:05:01.680><c> be</c><00:05:01.840><c> remaining</c>

00:05:02.550 --> 00:05:02.560 align:start position:0%
will be remaining
 

00:05:02.560 --> 00:05:04.310 align:start position:0%
will be remaining
with<00:05:02.800><c> a</c><00:05:02.960><c> single</c><00:05:03.280><c> stone</c><00:05:03.600><c> so</c><00:05:03.759><c> we</c><00:05:03.840><c> can</c><00:05:04.000><c> go</c><00:05:04.080><c> ahead</c>

00:05:04.310 --> 00:05:04.320 align:start position:0%
with a single stone so we can go ahead
 

00:05:04.320 --> 00:05:05.670 align:start position:0%
with a single stone so we can go ahead
and<00:05:04.400><c> return</c><00:05:05.280><c> uh</c>

00:05:05.670 --> 00:05:05.680 align:start position:0%
and return uh
 

00:05:05.680 --> 00:05:08.629 align:start position:0%
and return uh
one<00:05:06.240><c> as</c><00:05:06.639><c> the</c><00:05:06.800><c> return</c><00:05:07.280><c> value</c><00:05:08.000><c> and</c><00:05:08.320><c> you</c><00:05:08.479><c> know</c><00:05:08.560><c> it</c>

00:05:08.629 --> 00:05:08.639 align:start position:0%
one as the return value and you know it
 

00:05:08.639 --> 00:05:09.590 align:start position:0%
one as the return value and you know it
could<00:05:08.800><c> have</c><00:05:08.880><c> been</c><00:05:08.960><c> a</c><00:05:09.039><c> little</c><00:05:09.199><c> bit</c><00:05:09.360><c> different</c>

00:05:09.590 --> 00:05:09.600 align:start position:0%
could have been a little bit different
 

00:05:09.600 --> 00:05:10.310 align:start position:0%
could have been a little bit different
it<00:05:09.680><c> could</c><00:05:09.919><c> have</c><00:05:10.000><c> been</c>

00:05:10.310 --> 00:05:10.320 align:start position:0%
it could have been
 

00:05:10.320 --> 00:05:12.150 align:start position:0%
it could have been
something<00:05:10.639><c> like</c><00:05:10.880><c> okay</c><00:05:11.120><c> we're</c><00:05:11.280><c> left</c><00:05:11.520><c> with</c><00:05:11.840><c> two</c>

00:05:12.150 --> 00:05:12.160 align:start position:0%
something like okay we're left with two
 

00:05:12.160 --> 00:05:13.909 align:start position:0%
something like okay we're left with two
ones<00:05:12.639><c> then</c><00:05:12.800><c> they</c><00:05:12.960><c> get</c><00:05:13.120><c> smashed</c><00:05:13.520><c> together</c><00:05:13.840><c> and</c>

00:05:13.909 --> 00:05:13.919 align:start position:0%
ones then they get smashed together and
 

00:05:13.919 --> 00:05:14.469 align:start position:0%
ones then they get smashed together and
then<00:05:14.080><c> we</c><00:05:14.160><c> have</c>

00:05:14.469 --> 00:05:14.479 align:start position:0%
then we have
 

00:05:14.479 --> 00:05:16.950 align:start position:0%
then we have
nothing<00:05:15.280><c> left</c><00:05:15.759><c> so</c><00:05:16.000><c> then</c><00:05:16.240><c> if</c><00:05:16.320><c> we</c><00:05:16.479><c> had</c><00:05:16.639><c> nothing</c>

00:05:16.950 --> 00:05:16.960 align:start position:0%
nothing left so then if we had nothing
 

00:05:16.960 --> 00:05:19.110 align:start position:0%
nothing left so then if we had nothing
left<00:05:17.360><c> we</c><00:05:17.520><c> could</c><00:05:17.680><c> return</c><00:05:18.080><c> a</c><00:05:18.240><c> zero</c><00:05:18.720><c> but</c><00:05:18.880><c> that's</c>

00:05:19.110 --> 00:05:19.120 align:start position:0%
left we could return a zero but that's
 

00:05:19.120 --> 00:05:20.070 align:start position:0%
left we could return a zero but that's
not<00:05:19.280><c> the</c><00:05:19.440><c> case</c><00:05:19.759><c> in</c>

00:05:20.070 --> 00:05:20.080 align:start position:0%
not the case in
 

00:05:20.080 --> 00:05:22.390 align:start position:0%
not the case in
in<00:05:20.160><c> this</c><00:05:20.400><c> example</c><00:05:20.800><c> we</c><00:05:21.039><c> do</c><00:05:21.280><c> end</c><00:05:21.440><c> up</c><00:05:21.600><c> returning</c><00:05:22.080><c> a</c>

00:05:22.390 --> 00:05:22.400 align:start position:0%
in this example we do end up returning a
 

00:05:22.400 --> 00:05:23.749 align:start position:0%
in this example we do end up returning a
one<00:05:22.720><c> as</c><00:05:22.960><c> you</c><00:05:23.039><c> can</c><00:05:23.199><c> see</c>

00:05:23.749 --> 00:05:23.759 align:start position:0%
one as you can see
 

00:05:23.759 --> 00:05:25.590 align:start position:0%
one as you can see
down<00:05:24.080><c> here</c><00:05:24.479><c> this</c><00:05:24.720><c> problem</c><00:05:25.120><c> is</c><00:05:25.280><c> pretty</c>

00:05:25.590 --> 00:05:25.600 align:start position:0%
down here this problem is pretty
 

00:05:25.600 --> 00:05:27.029 align:start position:0%
down here this problem is pretty
straightforward<00:05:26.240><c> if</c><00:05:26.320><c> you</c><00:05:26.479><c> have</c><00:05:26.560><c> a</c><00:05:26.639><c> decent</c>

00:05:27.029 --> 00:05:27.039 align:start position:0%
straightforward if you have a decent
 

00:05:27.039 --> 00:05:27.990 align:start position:0%
straightforward if you have a decent
understanding<00:05:27.680><c> of</c>

00:05:27.990 --> 00:05:28.000 align:start position:0%
understanding of
 

00:05:28.000 --> 00:05:30.469 align:start position:0%
understanding of
heaps<00:05:28.479><c> and</c><00:05:28.720><c> their</c><00:05:29.039><c> time</c><00:05:29.280><c> complexities</c><00:05:30.320><c> in</c>

00:05:30.469 --> 00:05:30.479 align:start position:0%
heaps and their time complexities in
 

00:05:30.479 --> 00:05:32.150 align:start position:0%
heaps and their time complexities in
this<00:05:30.639><c> case</c><00:05:30.880><c> the</c><00:05:31.039><c> only</c><00:05:31.199><c> tricky</c><00:05:31.520><c> part</c><00:05:31.759><c> for</c><00:05:31.919><c> us</c><00:05:32.080><c> in</c>

00:05:32.150 --> 00:05:32.160 align:start position:0%
this case the only tricky part for us in
 

00:05:32.160 --> 00:05:32.950 align:start position:0%
this case the only tricky part for us in
the<00:05:32.320><c> code</c>

00:05:32.950 --> 00:05:32.960 align:start position:0%
the code
 

00:05:32.960 --> 00:05:34.550 align:start position:0%
the code
is<00:05:33.120><c> going</c><00:05:33.199><c> to</c><00:05:33.280><c> be</c><00:05:33.440><c> python</c><00:05:33.840><c> does</c><00:05:34.000><c> not</c><00:05:34.240><c> actually</c>

00:05:34.550 --> 00:05:34.560 align:start position:0%
is going to be python does not actually
 

00:05:34.560 --> 00:05:35.990 align:start position:0%
is going to be python does not actually
have<00:05:34.960><c> max</c><00:05:35.440><c> heaps</c>

00:05:35.990 --> 00:05:36.000 align:start position:0%
have max heaps
 

00:05:36.000 --> 00:05:38.150 align:start position:0%
have max heaps
so<00:05:36.160><c> we're</c><00:05:36.320><c> going</c><00:05:36.400><c> to</c><00:05:36.479><c> have</c><00:05:36.639><c> to</c><00:05:36.720><c> use</c><00:05:37.039><c> a</c><00:05:37.600><c> min</c><00:05:37.919><c> heap</c>

00:05:38.150 --> 00:05:38.160 align:start position:0%
so we're going to have to use a min heap
 

00:05:38.160 --> 00:05:40.469 align:start position:0%
so we're going to have to use a min heap
to<00:05:38.320><c> basically</c><00:05:38.960><c> simulate</c><00:05:39.520><c> a</c><00:05:39.680><c> max</c><00:05:40.000><c> heap</c><00:05:40.320><c> and</c><00:05:40.400><c> you</c>

00:05:40.469 --> 00:05:40.479 align:start position:0%
to basically simulate a max heap and you
 

00:05:40.479 --> 00:05:41.510 align:start position:0%
to basically simulate a max heap and you
can<00:05:40.720><c> do</c><00:05:40.960><c> that</c>

00:05:41.510 --> 00:05:41.520 align:start position:0%
can do that
 

00:05:41.520 --> 00:05:43.749 align:start position:0%
can do that
by<00:05:42.240><c> basically</c><00:05:42.720><c> you</c><00:05:42.800><c> know</c><00:05:42.960><c> assume</c><00:05:43.280><c> we</c><00:05:43.360><c> had</c><00:05:43.600><c> some</c>

00:05:43.749 --> 00:05:43.759 align:start position:0%
by basically you know assume we had some
 

00:05:43.759 --> 00:05:45.990 align:start position:0%
by basically you know assume we had some
kind<00:05:43.919><c> of</c><00:05:44.160><c> heap</c><00:05:44.479><c> we</c><00:05:44.639><c> would</c><00:05:44.800><c> want</c><00:05:45.120><c> eight</c><00:05:45.440><c> to</c><00:05:45.600><c> be</c>

00:05:45.990 --> 00:05:46.000 align:start position:0%
kind of heap we would want eight to be
 

00:05:46.000 --> 00:05:47.590 align:start position:0%
kind of heap we would want eight to be
the<00:05:46.160><c> maximum</c><00:05:46.639><c> value</c><00:05:46.960><c> and</c><00:05:47.039><c> then</c><00:05:47.120><c> suppose</c><00:05:47.520><c> we</c>

00:05:47.590 --> 00:05:47.600 align:start position:0%
the maximum value and then suppose we
 

00:05:47.600 --> 00:05:49.830 align:start position:0%
the maximum value and then suppose we
had<00:05:47.759><c> some</c><00:05:47.919><c> other</c><00:05:48.160><c> values</c><00:05:48.639><c> three</c><00:05:48.960><c> and</c><00:05:49.199><c> five</c>

00:05:49.830 --> 00:05:49.840 align:start position:0%
had some other values three and five
 

00:05:49.840 --> 00:05:52.310 align:start position:0%
had some other values three and five
but<00:05:50.080><c> this</c><00:05:50.320><c> is</c><00:05:50.479><c> how</c><00:05:50.800><c> a</c><00:05:51.039><c> mac</c><00:05:51.280><c> a</c><00:05:51.440><c> real</c><00:05:51.759><c> max</c><00:05:52.000><c> heap</c>

00:05:52.310 --> 00:05:52.320 align:start position:0%
but this is how a mac a real max heap
 

00:05:52.320 --> 00:05:53.270 align:start position:0%
but this is how a mac a real max heap
would<00:05:52.639><c> work</c>

00:05:53.270 --> 00:05:53.280 align:start position:0%
would work
 

00:05:53.280 --> 00:05:55.029 align:start position:0%
would work
but<00:05:53.440><c> if</c><00:05:53.600><c> we</c><00:05:53.759><c> are</c><00:05:53.919><c> actually</c><00:05:54.240><c> implementing</c><00:05:54.720><c> this</c>

00:05:55.029 --> 00:05:55.039 align:start position:0%
but if we are actually implementing this
 

00:05:55.039 --> 00:05:56.390 align:start position:0%
but if we are actually implementing this
with<00:05:55.360><c> a</c><00:05:56.080><c> min</c>

00:05:56.390 --> 00:05:56.400 align:start position:0%
with a min
 

00:05:56.400 --> 00:05:58.150 align:start position:0%
with a min
heap<00:05:56.880><c> it's</c><00:05:57.039><c> going</c><00:05:57.120><c> to</c><00:05:57.199><c> be</c><00:05:57.360><c> the</c><00:05:57.600><c> opposite</c><00:05:58.080><c> of</c>

00:05:58.150 --> 00:05:58.160 align:start position:0%
heap it's going to be the opposite of
 

00:05:58.160 --> 00:06:00.070 align:start position:0%
heap it's going to be the opposite of
this<00:05:58.319><c> but</c><00:05:58.479><c> we</c><00:05:58.639><c> still</c><00:05:58.880><c> want</c><00:05:59.280><c> 8</c><00:05:59.520><c> to</c><00:05:59.680><c> be</c>

00:06:00.070 --> 00:06:00.080 align:start position:0%
this but we still want 8 to be
 

00:06:00.080 --> 00:06:02.950 align:start position:0%
this but we still want 8 to be
the<00:06:00.800><c> the</c><00:06:00.960><c> value</c><00:06:01.280><c> that</c><00:06:01.440><c> we</c><00:06:01.759><c> get</c><00:06:02.080><c> from</c><00:06:02.240><c> the</c><00:06:02.479><c> root</c>

00:06:02.950 --> 00:06:02.960 align:start position:0%
the the value that we get from the root
 

00:06:02.960 --> 00:06:04.230 align:start position:0%
the the value that we get from the root
so<00:06:03.199><c> what</c><00:06:03.360><c> we're</c><00:06:03.520><c> going</c><00:06:03.600><c> to</c><00:06:03.680><c> do</c><00:06:03.840><c> is</c><00:06:04.000><c> actually</c>

00:06:04.230 --> 00:06:04.240 align:start position:0%
so what we're going to do is actually
 

00:06:04.240 --> 00:06:05.590 align:start position:0%
so what we're going to do is actually
have<00:06:04.560><c> negatives</c>

00:06:05.590 --> 00:06:05.600 align:start position:0%
have negatives
 

00:06:05.600 --> 00:06:07.110 align:start position:0%
have negatives
we're<00:06:05.840><c> basically</c><00:06:06.240><c> gonna</c><00:06:06.400><c> multiply</c><00:06:06.880><c> every</c>

00:06:07.110 --> 00:06:07.120 align:start position:0%
we're basically gonna multiply every
 

00:06:07.120 --> 00:06:08.710 align:start position:0%
we're basically gonna multiply every
value<00:06:07.520><c> in</c><00:06:07.840><c> the</c><00:06:08.080><c> heap</c>

00:06:08.710 --> 00:06:08.720 align:start position:0%
value in the heap
 

00:06:08.720 --> 00:06:11.510 align:start position:0%
value in the heap
by<00:06:08.960><c> negative</c><00:06:09.360><c> one</c><00:06:09.919><c> so</c><00:06:10.160><c> that</c><00:06:10.639><c> the</c><00:06:10.880><c> minimum</c>

00:06:11.510 --> 00:06:11.520 align:start position:0%
by negative one so that the minimum
 

00:06:11.520 --> 00:06:12.070 align:start position:0%
by negative one so that the minimum
which<00:06:11.759><c> is</c>

00:06:12.070 --> 00:06:12.080 align:start position:0%
which is
 

00:06:12.080 --> 00:06:13.909 align:start position:0%
which is
eight<00:06:12.639><c> negative</c><00:06:12.960><c> eight</c><00:06:13.280><c> in</c><00:06:13.360><c> this</c><00:06:13.520><c> case</c><00:06:13.840><c> is</c>

00:06:13.909 --> 00:06:13.919 align:start position:0%
eight negative eight in this case is
 

00:06:13.919 --> 00:06:15.430 align:start position:0%
eight negative eight in this case is
going<00:06:14.080><c> to</c><00:06:14.160><c> be</c><00:06:14.400><c> popped</c><00:06:14.800><c> when</c><00:06:14.960><c> we</c><00:06:15.120><c> want</c><00:06:15.360><c> the</c>

00:06:15.430 --> 00:06:15.440 align:start position:0%
going to be popped when we want the
 

00:06:15.440 --> 00:06:17.189 align:start position:0%
going to be popped when we want the
maximum<00:06:16.000><c> and</c><00:06:16.080><c> then</c><00:06:16.240><c> when</c><00:06:16.479><c> we</c><00:06:16.639><c> pop</c><00:06:16.880><c> this</c><00:06:17.039><c> we're</c>

00:06:17.189 --> 00:06:17.199 align:start position:0%
maximum and then when we pop this we're
 

00:06:17.199 --> 00:06:18.469 align:start position:0%
maximum and then when we pop this we're
gonna<00:06:17.360><c> get</c><00:06:17.520><c> negative</c><00:06:17.840><c> eight</c><00:06:18.000><c> but</c><00:06:18.160><c> we</c><00:06:18.240><c> can</c><00:06:18.319><c> just</c>

00:06:18.469 --> 00:06:18.479 align:start position:0%
gonna get negative eight but we can just
 

00:06:18.479 --> 00:06:20.309 align:start position:0%
gonna get negative eight but we can just
convert<00:06:18.880><c> it</c><00:06:19.039><c> we</c><00:06:19.120><c> can</c><00:06:19.280><c> get</c><00:06:19.360><c> the</c><00:06:19.520><c> absolute</c><00:06:19.919><c> value</c>

00:06:20.309 --> 00:06:20.319 align:start position:0%
convert it we can get the absolute value
 

00:06:20.319 --> 00:06:20.790 align:start position:0%
convert it we can get the absolute value
of<00:06:20.400><c> this</c>

00:06:20.790 --> 00:06:20.800 align:start position:0%
of this
 

00:06:20.800 --> 00:06:22.629 align:start position:0%
of this
and<00:06:20.960><c> then</c><00:06:21.120><c> just</c><00:06:21.360><c> convert</c><00:06:21.759><c> it</c><00:06:21.919><c> back</c><00:06:22.160><c> into</c><00:06:22.479><c> an</c>

00:06:22.629 --> 00:06:22.639 align:start position:0%
and then just convert it back into an
 

00:06:22.639 --> 00:06:23.990 align:start position:0%
and then just convert it back into an
eight<00:06:22.880><c> that's</c><00:06:23.039><c> kind</c><00:06:23.199><c> of</c><00:06:23.280><c> how</c>

00:06:23.990 --> 00:06:24.000 align:start position:0%
eight that's kind of how
 

00:06:24.000 --> 00:06:25.189 align:start position:0%
eight that's kind of how
unfortunately<00:06:24.639><c> we're</c><00:06:24.800><c> gonna</c><00:06:24.880><c> have</c><00:06:24.960><c> to</c><00:06:25.039><c> do</c>

00:06:25.189 --> 00:06:25.199 align:start position:0%
unfortunately we're gonna have to do
 

00:06:25.199 --> 00:06:27.510 align:start position:0%
unfortunately we're gonna have to do
this<00:06:25.520><c> in</c><00:06:25.840><c> python</c><00:06:26.560><c> in</c><00:06:26.720><c> other</c><00:06:26.960><c> languages</c><00:06:27.440><c> i</c>

00:06:27.510 --> 00:06:27.520 align:start position:0%
this in python in other languages i
 

00:06:27.520 --> 00:06:29.430 align:start position:0%
this in python in other languages i
think<00:06:27.680><c> you</c><00:06:27.759><c> can</c><00:06:27.919><c> just</c><00:06:28.160><c> get</c><00:06:28.400><c> a</c><00:06:28.560><c> regular</c><00:06:29.039><c> max</c>

00:06:29.430 --> 00:06:29.440 align:start position:0%
think you can just get a regular max
 

00:06:29.440 --> 00:06:29.990 align:start position:0%
think you can just get a regular max
heap

00:06:29.990 --> 00:06:30.000 align:start position:0%
heap
 

00:06:30.000 --> 00:06:31.430 align:start position:0%
heap
but<00:06:30.240><c> i</c><00:06:30.319><c> think</c><00:06:30.479><c> that's</c><00:06:30.720><c> all</c><00:06:30.800><c> the</c><00:06:30.960><c> information</c>

00:06:31.430 --> 00:06:31.440 align:start position:0%
but i think that's all the information
 

00:06:31.440 --> 00:06:33.510 align:start position:0%
but i think that's all the information
we<00:06:31.600><c> need</c><00:06:31.840><c> now</c><00:06:32.000><c> we</c><00:06:32.160><c> can</c><00:06:32.319><c> hop</c><00:06:32.639><c> on</c><00:06:32.880><c> into</c><00:06:33.120><c> the</c><00:06:33.280><c> code</c>

00:06:33.510 --> 00:06:33.520 align:start position:0%
we need now we can hop on into the code
 

00:06:33.520 --> 00:06:35.270 align:start position:0%
we need now we can hop on into the code
but<00:06:33.759><c> before</c><00:06:34.080><c> i</c><00:06:34.240><c> do</c><00:06:34.400><c> let</c><00:06:34.560><c> me</c><00:06:34.720><c> just</c><00:06:34.880><c> give</c><00:06:34.960><c> you</c><00:06:35.120><c> a</c>

00:06:35.270 --> 00:06:35.280 align:start position:0%
but before i do let me just give you a
 

00:06:35.280 --> 00:06:37.189 align:start position:0%
but before i do let me just give you a
very<00:06:35.759><c> quick</c><00:06:36.000><c> word</c><00:06:36.240><c> from</c><00:06:36.479><c> our</c><00:06:36.639><c> sponsor</c><00:06:37.039><c> for</c>

00:06:37.189 --> 00:06:37.199 align:start position:0%
very quick word from our sponsor for
 

00:06:37.199 --> 00:06:37.830 align:start position:0%
very quick word from our sponsor for
today

00:06:37.830 --> 00:06:37.840 align:start position:0%
today
 

00:06:37.840 --> 00:06:40.710 align:start position:0%
today
interviewing<00:06:38.479><c> dot</c><00:06:38.720><c> io</c><00:06:39.520><c> if</c><00:06:39.759><c> you</c><00:06:40.080><c> want</c><00:06:40.240><c> to</c><00:06:40.400><c> get</c>

00:06:40.710 --> 00:06:40.720 align:start position:0%
interviewing dot io if you want to get
 

00:06:40.720 --> 00:06:41.430 align:start position:0%
interviewing dot io if you want to get
hired

00:06:41.430 --> 00:06:41.440 align:start position:0%
hired
 

00:06:41.440 --> 00:06:44.230 align:start position:0%
hired
at<00:06:41.759><c> top</c><00:06:42.160><c> tech</c><00:06:42.479><c> companies</c><00:06:43.120><c> like</c><00:06:43.440><c> google</c>

00:06:44.230 --> 00:06:44.240 align:start position:0%
at top tech companies like google
 

00:06:44.240 --> 00:06:45.110 align:start position:0%
at top tech companies like google
facebook<00:06:44.880><c> and</c>

00:06:45.110 --> 00:06:45.120 align:start position:0%
facebook and
 

00:06:45.120 --> 00:06:47.189 align:start position:0%
facebook and
amazon<00:06:45.600><c> then</c><00:06:45.919><c> you</c><00:06:46.160><c> need</c><00:06:46.319><c> to</c><00:06:46.560><c> check</c><00:06:46.800><c> out</c>

00:06:47.189 --> 00:06:47.199 align:start position:0%
amazon then you need to check out
 

00:06:47.199 --> 00:06:48.870 align:start position:0%
amazon then you need to check out
interviewing<00:06:47.840><c> dot</c><00:06:48.160><c> io</c>

00:06:48.870 --> 00:06:48.880 align:start position:0%
interviewing dot io
 

00:06:48.880 --> 00:06:51.270 align:start position:0%
interviewing dot io
you'll<00:06:49.199><c> practice</c><00:06:50.000><c> realistic</c><00:06:50.880><c> coding</c>

00:06:51.270 --> 00:06:51.280 align:start position:0%
you'll practice realistic coding
 

00:06:51.280 --> 00:06:51.990 align:start position:0%
you'll practice realistic coding
interviews

00:06:51.990 --> 00:06:52.000 align:start position:0%
interviews
 

00:06:52.000 --> 00:06:54.390 align:start position:0%
interviews
with<00:06:52.400><c> senior</c><00:06:52.960><c> engineers</c><00:06:53.520><c> who</c><00:06:53.680><c> will</c><00:06:53.840><c> give</c><00:06:54.080><c> you</c>

00:06:54.390 --> 00:06:54.400 align:start position:0%
with senior engineers who will give you
 

00:06:54.400 --> 00:06:55.830 align:start position:0%
with senior engineers who will give you
detailed<00:06:55.199><c> feedback</c>

00:06:55.830 --> 00:06:55.840 align:start position:0%
detailed feedback
 

00:06:55.840 --> 00:06:58.550 align:start position:0%
detailed feedback
on<00:06:56.000><c> exactly</c><00:06:56.880><c> what</c><00:06:57.039><c> you</c><00:06:57.280><c> need</c><00:06:57.520><c> to</c><00:06:57.759><c> work</c><00:06:58.080><c> on</c><00:06:58.319><c> they</c>

00:06:58.550 --> 00:06:58.560 align:start position:0%
on exactly what you need to work on they
 

00:06:58.560 --> 00:06:59.189 align:start position:0%
on exactly what you need to work on they
have<00:06:58.800><c> the</c>

00:06:59.189 --> 00:06:59.199 align:start position:0%
have the
 

00:06:59.199 --> 00:07:01.189 align:start position:0%
have the
largest<00:06:59.840><c> network</c><00:07:00.319><c> of</c><00:07:00.560><c> vetted</c><00:07:01.039><c> and</c>

00:07:01.189 --> 00:07:01.199 align:start position:0%
largest network of vetted and
 

00:07:01.199 --> 00:07:02.230 align:start position:0%
largest network of vetted and
experienced

00:07:02.230 --> 00:07:02.240 align:start position:0%
experienced
 

00:07:02.240 --> 00:07:04.550 align:start position:0%
experienced
tech<00:07:02.639><c> interviewers</c><00:07:03.360><c> in</c><00:07:03.520><c> the</c><00:07:03.759><c> world</c><00:07:04.240><c> so</c><00:07:04.479><c> you</c>

00:07:04.550 --> 00:07:04.560 align:start position:0%
tech interviewers in the world so you
 

00:07:04.560 --> 00:07:05.830 align:start position:0%
tech interviewers in the world so you
can<00:07:04.800><c> book</c><00:07:05.039><c> an</c><00:07:05.199><c> interview</c>

00:07:05.830 --> 00:07:05.840 align:start position:0%
can book an interview
 

00:07:05.840 --> 00:07:09.350 align:start position:0%
can book an interview
with<00:07:06.080><c> as</c><00:07:06.400><c> little</c><00:07:06.800><c> as</c><00:07:07.199><c> 24</c><00:07:08.240><c> hours</c><00:07:08.800><c> notice</c>

00:07:09.350 --> 00:07:09.360 align:start position:0%
with as little as 24 hours notice
 

00:07:09.360 --> 00:07:12.150 align:start position:0%
with as little as 24 hours notice
and<00:07:09.520><c> the</c><00:07:09.840><c> best</c><00:07:10.240><c> part</c><00:07:10.800><c> you</c><00:07:11.120><c> don't</c><00:07:11.440><c> even</c><00:07:11.759><c> have</c><00:07:11.919><c> to</c>

00:07:12.150 --> 00:07:12.160 align:start position:0%
and the best part you don't even have to
 

00:07:12.160 --> 00:07:12.550 align:start position:0%
and the best part you don't even have to
pay

00:07:12.550 --> 00:07:12.560 align:start position:0%
pay
 

00:07:12.560 --> 00:07:15.510 align:start position:0%
pay
until<00:07:13.039><c> you</c><00:07:13.360><c> get</c><00:07:13.759><c> hired</c><00:07:14.240><c> please</c><00:07:14.720><c> check</c><00:07:15.039><c> out</c><00:07:15.280><c> the</c>

00:07:15.510 --> 00:07:15.520 align:start position:0%
until you get hired please check out the
 

00:07:15.520 --> 00:07:17.350 align:start position:0%
until you get hired please check out the
link<00:07:15.840><c> in</c><00:07:16.000><c> the</c><00:07:16.080><c> description</c><00:07:16.720><c> below</c>

00:07:17.350 --> 00:07:17.360 align:start position:0%
link in the description below
 

00:07:17.360 --> 00:07:19.909 align:start position:0%
link in the description below
for<00:07:17.680><c> more</c><00:07:18.000><c> details</c><00:07:18.880><c> okay</c><00:07:19.120><c> so</c><00:07:19.280><c> now</c><00:07:19.440><c> let's</c><00:07:19.680><c> get</c>

00:07:19.909 --> 00:07:19.919 align:start position:0%
for more details okay so now let's get
 

00:07:19.919 --> 00:07:21.510 align:start position:0%
for more details okay so now let's get
into<00:07:20.160><c> the</c><00:07:20.319><c> code</c><00:07:20.639><c> like</c><00:07:20.800><c> i</c><00:07:20.960><c> said</c><00:07:21.120><c> we're</c><00:07:21.360><c> going</c><00:07:21.440><c> to</c>

00:07:21.510 --> 00:07:21.520 align:start position:0%
into the code like i said we're going to
 

00:07:21.520 --> 00:07:23.350 align:start position:0%
into the code like i said we're going to
be<00:07:21.680><c> writing</c><00:07:22.080><c> the</c><00:07:22.319><c> simulation</c>

00:07:23.350 --> 00:07:23.360 align:start position:0%
be writing the simulation
 

00:07:23.360 --> 00:07:26.309 align:start position:0%
be writing the simulation
for<00:07:23.680><c> this</c><00:07:24.000><c> problem</c><00:07:24.880><c> and</c><00:07:25.360><c> so</c><00:07:25.840><c> the</c><00:07:25.919><c> first</c><00:07:26.160><c> thing</c>

00:07:26.309 --> 00:07:26.319 align:start position:0%
for this problem and so the first thing
 

00:07:26.319 --> 00:07:28.309 align:start position:0%
for this problem and so the first thing
we<00:07:26.479><c> want</c><00:07:26.639><c> to</c><00:07:26.720><c> do</c><00:07:26.960><c> is</c><00:07:27.120><c> put</c><00:07:27.360><c> all</c><00:07:27.520><c> of</c><00:07:27.599><c> these</c><00:07:27.840><c> stones</c>

00:07:28.309 --> 00:07:28.319 align:start position:0%
we want to do is put all of these stones
 

00:07:28.319 --> 00:07:29.350 align:start position:0%
we want to do is put all of these stones
into<00:07:28.560><c> a</c><00:07:28.639><c> max</c><00:07:28.960><c> heap</c>

00:07:29.350 --> 00:07:29.360 align:start position:0%
into a max heap
 

00:07:29.360 --> 00:07:31.270 align:start position:0%
into a max heap
now<00:07:29.599><c> python</c><00:07:30.000><c> does</c><00:07:30.160><c> not</c><00:07:30.400><c> have</c><00:07:30.639><c> max</c><00:07:30.880><c> heap</c><00:07:31.120><c> so</c>

00:07:31.270 --> 00:07:31.280 align:start position:0%
now python does not have max heap so
 

00:07:31.280 --> 00:07:33.029 align:start position:0%
now python does not have max heap so
we're<00:07:31.360><c> gonna</c><00:07:31.520><c> put</c><00:07:31.759><c> these</c><00:07:32.080><c> in</c><00:07:32.240><c> a</c><00:07:32.319><c> min</c><00:07:32.560><c> heap</c><00:07:32.880><c> but</c>

00:07:33.029 --> 00:07:33.039 align:start position:0%
we're gonna put these in a min heap but
 

00:07:33.039 --> 00:07:34.950 align:start position:0%
we're gonna put these in a min heap but
we're<00:07:33.199><c> gonna</c><00:07:33.440><c> multiply</c><00:07:34.160><c> every</c><00:07:34.479><c> one</c><00:07:34.639><c> of</c><00:07:34.800><c> these</c>

00:07:34.950 --> 00:07:34.960 align:start position:0%
we're gonna multiply every one of these
 

00:07:34.960 --> 00:07:36.550 align:start position:0%
we're gonna multiply every one of these
values<00:07:35.360><c> by</c><00:07:35.520><c> negative</c><00:07:35.840><c> one</c><00:07:36.080><c> we're</c><00:07:36.240><c> gonna</c><00:07:36.400><c> make</c>

00:07:36.550 --> 00:07:36.560 align:start position:0%
values by negative one we're gonna make
 

00:07:36.560 --> 00:07:37.350 align:start position:0%
values by negative one we're gonna make
them<00:07:36.720><c> negative</c>

00:07:37.350 --> 00:07:37.360 align:start position:0%
them negative
 

00:07:37.360 --> 00:07:39.110 align:start position:0%
them negative
so<00:07:37.759><c> in</c><00:07:37.919><c> python</c><00:07:38.319><c> what</c><00:07:38.400><c> i'm</c><00:07:38.560><c> doing</c><00:07:38.720><c> right</c><00:07:38.880><c> now</c><00:07:38.960><c> is</c>

00:07:39.110 --> 00:07:39.120 align:start position:0%
so in python what i'm doing right now is
 

00:07:39.120 --> 00:07:40.309 align:start position:0%
so in python what i'm doing right now is
basically<00:07:39.520><c> just</c><00:07:39.680><c> going</c><00:07:39.919><c> through</c><00:07:40.160><c> every</c>

00:07:40.309 --> 00:07:40.319 align:start position:0%
basically just going through every
 

00:07:40.319 --> 00:07:41.350 align:start position:0%
basically just going through every
single<00:07:40.639><c> stone</c>

00:07:41.350 --> 00:07:41.360 align:start position:0%
single stone
 

00:07:41.360 --> 00:07:44.150 align:start position:0%
single stone
and<00:07:42.240><c> putting</c><00:07:42.560><c> it</c><00:07:42.720><c> into</c><00:07:42.960><c> a</c><00:07:43.199><c> list</c><00:07:43.759><c> uh</c><00:07:44.000><c> and</c>

00:07:44.150 --> 00:07:44.160 align:start position:0%
and putting it into a list uh and
 

00:07:44.160 --> 00:07:46.070 align:start position:0%
and putting it into a list uh and
multiplying<00:07:44.800><c> each</c><00:07:45.039><c> zone</c><00:07:45.360><c> by</c><00:07:45.599><c> negative</c><00:07:45.919><c> one</c>

00:07:46.070 --> 00:07:46.080 align:start position:0%
multiplying each zone by negative one
 

00:07:46.080 --> 00:07:47.909 align:start position:0%
multiplying each zone by negative one
i'm<00:07:46.160><c> putting</c><00:07:46.400><c> the</c><00:07:46.560><c> negative</c><00:07:47.039><c> of</c><00:07:47.199><c> that</c><00:07:47.440><c> stone</c>

00:07:47.909 --> 00:07:47.919 align:start position:0%
i'm putting the negative of that stone
 

00:07:47.919 --> 00:07:48.550 align:start position:0%
i'm putting the negative of that stone
in

00:07:48.550 --> 00:07:48.560 align:start position:0%
in
 

00:07:48.560 --> 00:07:50.390 align:start position:0%
in
this<00:07:48.879><c> list</c><00:07:49.199><c> and</c><00:07:49.280><c> now</c><00:07:49.440><c> i</c><00:07:49.599><c> want</c><00:07:49.680><c> to</c><00:07:49.840><c> turn</c><00:07:50.080><c> this</c>

00:07:50.390 --> 00:07:50.400 align:start position:0%
this list and now i want to turn this
 

00:07:50.400 --> 00:07:51.830 align:start position:0%
this list and now i want to turn this
list<00:07:50.879><c> into</c><00:07:51.360><c> a</c>

00:07:51.830 --> 00:07:51.840 align:start position:0%
list into a
 

00:07:51.840 --> 00:07:53.909 align:start position:0%
list into a
heap<00:07:52.160><c> so</c><00:07:52.319><c> what</c><00:07:52.479><c> i'm</c><00:07:52.560><c> going</c><00:07:52.639><c> to</c><00:07:52.720><c> do</c><00:07:53.039><c> is</c><00:07:53.360><c> heap</c><00:07:53.680><c> q</c>

00:07:53.909 --> 00:07:53.919 align:start position:0%
heap so what i'm going to do is heap q
 

00:07:53.919 --> 00:07:55.350 align:start position:0%
heap so what i'm going to do is heap q
dot<00:07:54.240><c> heapify</c>

00:07:55.350 --> 00:07:55.360 align:start position:0%
dot heapify
 

00:07:55.360 --> 00:07:57.830 align:start position:0%
dot heapify
this<00:07:56.000><c> stones</c><00:07:56.639><c> this</c><00:07:56.879><c> is</c><00:07:57.039><c> a</c><00:07:57.199><c> linear</c><00:07:57.520><c> time</c>

00:07:57.830 --> 00:07:57.840 align:start position:0%
this stones this is a linear time
 

00:07:57.840 --> 00:07:58.550 align:start position:0%
this stones this is a linear time
operation

00:07:58.550 --> 00:07:58.560 align:start position:0%
operation
 

00:07:58.560 --> 00:08:00.390 align:start position:0%
operation
so<00:07:58.720><c> now</c><00:07:58.879><c> we're</c><00:07:59.120><c> good</c><00:07:59.280><c> to</c><00:07:59.440><c> go</c><00:07:59.680><c> now</c><00:07:59.840><c> we</c><00:08:00.000><c> can</c><00:08:00.160><c> start</c>

00:08:00.390 --> 00:08:00.400 align:start position:0%
so now we're good to go now we can start
 

00:08:00.400 --> 00:08:01.589 align:start position:0%
so now we're good to go now we can start
running<00:08:00.720><c> the</c><00:08:00.800><c> simulation</c>

00:08:01.589 --> 00:08:01.599 align:start position:0%
running the simulation
 

00:08:01.599 --> 00:08:03.990 align:start position:0%
running the simulation
and<00:08:01.759><c> remember</c><00:08:02.400><c> we</c><00:08:02.639><c> want</c><00:08:02.879><c> to</c><00:08:03.039><c> continue</c><00:08:03.440><c> this</c>

00:08:03.990 --> 00:08:04.000 align:start position:0%
and remember we want to continue this
 

00:08:04.000 --> 00:08:05.909 align:start position:0%
and remember we want to continue this
while<00:08:04.319><c> the</c><00:08:04.479><c> number</c><00:08:04.720><c> of</c><00:08:04.800><c> stones</c><00:08:05.280><c> is</c><00:08:05.520><c> greater</c>

00:08:05.909 --> 00:08:05.919 align:start position:0%
while the number of stones is greater
 

00:08:05.919 --> 00:08:07.749 align:start position:0%
while the number of stones is greater
than<00:08:06.080><c> one</c><00:08:06.319><c> if</c><00:08:06.479><c> we</c><00:08:06.639><c> have</c><00:08:06.720><c> one</c><00:08:06.960><c> stone</c><00:08:07.360><c> or</c><00:08:07.599><c> if</c><00:08:07.680><c> we</c>

00:08:07.749 --> 00:08:07.759 align:start position:0%
than one if we have one stone or if we
 

00:08:07.759 --> 00:08:09.029 align:start position:0%
than one if we have one stone or if we
have<00:08:08.000><c> zero</c><00:08:08.400><c> stones</c>

00:08:09.029 --> 00:08:09.039 align:start position:0%
have zero stones
 

00:08:09.039 --> 00:08:11.430 align:start position:0%
have zero stones
that's<00:08:09.280><c> when</c><00:08:09.520><c> we</c><00:08:09.599><c> can</c><00:08:09.919><c> stop</c><00:08:10.479><c> the</c><00:08:10.639><c> simulation</c>

00:08:11.430 --> 00:08:11.440 align:start position:0%
that's when we can stop the simulation
 

00:08:11.440 --> 00:08:12.070 align:start position:0%
that's when we can stop the simulation
but<00:08:11.680><c> until</c>

00:08:12.070 --> 00:08:12.080 align:start position:0%
but until
 

00:08:12.080 --> 00:08:14.309 align:start position:0%
but until
then<00:08:12.639><c> we</c><00:08:12.879><c> are</c><00:08:13.039><c> going</c><00:08:13.280><c> to</c><00:08:13.440><c> take</c><00:08:13.680><c> the</c><00:08:13.919><c> two</c>

00:08:14.309 --> 00:08:14.319 align:start position:0%
then we are going to take the two
 

00:08:14.319 --> 00:08:15.430 align:start position:0%
then we are going to take the two
largest<00:08:14.720><c> stones</c>

00:08:15.430 --> 00:08:15.440 align:start position:0%
largest stones
 

00:08:15.440 --> 00:08:18.629 align:start position:0%
largest stones
how<00:08:15.759><c> can</c><00:08:16.080><c> we</c><00:08:16.400><c> get</c><00:08:16.639><c> them</c><00:08:17.280><c> well</c><00:08:17.840><c> we're</c><00:08:18.000><c> gonna</c><00:08:18.240><c> pop</c>

00:08:18.629 --> 00:08:18.639 align:start position:0%
how can we get them well we're gonna pop
 

00:08:18.639 --> 00:08:19.110 align:start position:0%
how can we get them well we're gonna pop
from

00:08:19.110 --> 00:08:19.120 align:start position:0%
from
 

00:08:19.120 --> 00:08:21.029 align:start position:0%
from
the<00:08:19.360><c> min</c><00:08:19.599><c> heap</c><00:08:19.840><c> we</c><00:08:19.919><c> can</c><00:08:20.080><c> do</c><00:08:20.240><c> that</c><00:08:20.479><c> like</c><00:08:20.720><c> this</c>

00:08:21.029 --> 00:08:21.039 align:start position:0%
the min heap we can do that like this
 

00:08:21.039 --> 00:08:22.309 align:start position:0%
the min heap we can do that like this
heap<00:08:21.280><c> q</c><00:08:21.520><c> dot</c><00:08:21.840><c> heap</c>

00:08:22.309 --> 00:08:22.319 align:start position:0%
heap q dot heap
 

00:08:22.319 --> 00:08:26.070 align:start position:0%
heap q dot heap
pop<00:08:22.800><c> from</c><00:08:23.599><c> the</c><00:08:24.319><c> max</c><00:08:24.720><c> heap</c><00:08:25.199><c> not</c><00:08:25.440><c> min</c><00:08:25.680><c> heap</c>

00:08:26.070 --> 00:08:26.080 align:start position:0%
pop from the max heap not min heap
 

00:08:26.080 --> 00:08:28.150 align:start position:0%
pop from the max heap not min heap
so<00:08:26.400><c> pop</c><00:08:26.639><c> from</c><00:08:26.879><c> stones</c><00:08:27.280><c> and</c><00:08:27.360><c> we</c><00:08:27.520><c> can</c><00:08:27.919><c> that'll</c>

00:08:28.150 --> 00:08:28.160 align:start position:0%
so pop from stones and we can that'll
 

00:08:28.160 --> 00:08:29.189 align:start position:0%
so pop from stones and we can that'll
give<00:08:28.400><c> us</c><00:08:28.479><c> the</c><00:08:28.639><c> largest</c>

00:08:29.189 --> 00:08:29.199 align:start position:0%
give us the largest
 

00:08:29.199 --> 00:08:31.430 align:start position:0%
give us the largest
and<00:08:29.280><c> this</c><00:08:29.440><c> will</c><00:08:29.520><c> give</c><00:08:29.680><c> us</c><00:08:29.840><c> the</c><00:08:30.080><c> second</c><00:08:30.560><c> largest</c>

00:08:31.430 --> 00:08:31.440 align:start position:0%
and this will give us the second largest
 

00:08:31.440 --> 00:08:32.870 align:start position:0%
and this will give us the second largest
uh<00:08:31.919><c> stone</c>

00:08:32.870 --> 00:08:32.880 align:start position:0%
uh stone
 

00:08:32.880 --> 00:08:35.990 align:start position:0%
uh stone
and<00:08:33.039><c> remember</c><00:08:33.519><c> if</c><00:08:33.760><c> the</c><00:08:33.919><c> stones</c><00:08:34.479><c> are</c><00:08:34.880><c> equal</c>

00:08:35.990 --> 00:08:36.000 align:start position:0%
and remember if the stones are equal
 

00:08:36.000 --> 00:08:37.670 align:start position:0%
and remember if the stones are equal
that's<00:08:36.399><c> basically</c><00:08:36.880><c> we</c><00:08:37.039><c> wouldn't</c><00:08:37.279><c> have</c><00:08:37.440><c> to</c><00:08:37.519><c> do</c>

00:08:37.670 --> 00:08:37.680 align:start position:0%
that's basically we wouldn't have to do
 

00:08:37.680 --> 00:08:39.110 align:start position:0%
that's basically we wouldn't have to do
anything<00:08:38.000><c> right</c><00:08:38.240><c> we</c><00:08:38.320><c> just</c><00:08:38.560><c> remove</c>

00:08:39.110 --> 00:08:39.120 align:start position:0%
anything right we just remove
 

00:08:39.120 --> 00:08:41.750 align:start position:0%
anything right we just remove
these<00:08:39.360><c> two</c><00:08:39.519><c> stones</c><00:08:40.159><c> from</c><00:08:40.479><c> the</c><00:08:40.800><c> heap</c><00:08:41.440><c> and</c><00:08:41.680><c> if</c>

00:08:41.750 --> 00:08:41.760 align:start position:0%
these two stones from the heap and if
 

00:08:41.760 --> 00:08:42.630 align:start position:0%
these two stones from the heap and if
they<00:08:41.919><c> are</c><00:08:42.159><c> equal</c>

00:08:42.630 --> 00:08:42.640 align:start position:0%
they are equal
 

00:08:42.640 --> 00:08:44.389 align:start position:0%
they are equal
weights<00:08:43.200><c> then</c><00:08:43.519><c> we</c><00:08:43.680><c> don't</c><00:08:43.839><c> really</c><00:08:44.080><c> have</c><00:08:44.159><c> to</c><00:08:44.240><c> do</c>

00:08:44.389 --> 00:08:44.399 align:start position:0%
weights then we don't really have to do
 

00:08:44.399 --> 00:08:45.509 align:start position:0%
weights then we don't really have to do
anything<00:08:44.560><c> we're</c><00:08:44.720><c> not</c><00:08:44.880><c> going</c><00:08:44.959><c> to</c><00:08:45.040><c> add</c><00:08:45.279><c> them</c>

00:08:45.509 --> 00:08:45.519 align:start position:0%
anything we're not going to add them
 

00:08:45.519 --> 00:08:46.949 align:start position:0%
anything we're not going to add them
back<00:08:45.760><c> to</c><00:08:45.839><c> the</c><00:08:46.000><c> heap</c><00:08:46.240><c> we</c><00:08:46.399><c> don't</c><00:08:46.480><c> have</c><00:08:46.640><c> to</c><00:08:46.800><c> we</c>

00:08:46.949 --> 00:08:46.959 align:start position:0%
back to the heap we don't have to we
 

00:08:46.959 --> 00:08:47.910 align:start position:0%
back to the heap we don't have to we
don't<00:08:47.040><c> have</c><00:08:47.120><c> to</c><00:08:47.200><c> do</c><00:08:47.360><c> anything</c>

00:08:47.910 --> 00:08:47.920 align:start position:0%
don't have to do anything
 

00:08:47.920 --> 00:08:51.350 align:start position:0%
don't have to do anything
but<00:08:48.240><c> in</c><00:08:48.399><c> the</c><00:08:48.640><c> other</c><00:08:48.880><c> case</c><00:08:49.600><c> if</c><00:08:50.160><c> the</c><00:08:50.800><c> second</c>

00:08:51.350 --> 00:08:51.360 align:start position:0%
but in the other case if the second
 

00:08:51.360 --> 00:08:54.470 align:start position:0%
but in the other case if the second
stone<00:08:51.680><c> that</c><00:08:51.760><c> we</c><00:08:52.000><c> popped</c><00:08:52.640><c> was</c><00:08:53.360><c> less</c><00:08:53.680><c> than</c>

00:08:54.470 --> 00:08:54.480 align:start position:0%
stone that we popped was less than
 

00:08:54.480 --> 00:08:56.949 align:start position:0%
stone that we popped was less than
the<00:08:54.800><c> first</c><00:08:55.120><c> stone</c><00:08:55.680><c> that</c><00:08:55.839><c> we</c><00:08:56.080><c> popped</c><00:08:56.640><c> and</c><00:08:56.800><c> why</c>

00:08:56.949 --> 00:08:56.959 align:start position:0%
the first stone that we popped and why
 

00:08:56.959 --> 00:08:58.630 align:start position:0%
the first stone that we popped and why
am<00:08:57.120><c> i</c><00:08:57.200><c> saying</c><00:08:57.600><c> second</c><00:08:57.839><c> stone</c><00:08:58.160><c> well</c><00:08:58.399><c> because</c>

00:08:58.630 --> 00:08:58.640 align:start position:0%
am i saying second stone well because
 

00:08:58.640 --> 00:09:00.070 align:start position:0%
am i saying second stone well because
the<00:08:58.800><c> second</c><00:08:59.120><c> stone</c><00:08:59.440><c> is</c><00:08:59.519><c> going</c><00:08:59.760><c> to</c><00:08:59.839><c> have</c><00:09:00.000><c> a</c>

00:09:00.070 --> 00:09:00.080 align:start position:0%
the second stone is going to have a
 

00:09:00.080 --> 00:09:01.910 align:start position:0%
the second stone is going to have a
smaller<00:09:00.560><c> weight</c><00:09:00.800><c> than</c><00:09:01.040><c> the</c><00:09:01.120><c> first</c><00:09:01.360><c> stone</c><00:09:01.680><c> or</c>

00:09:01.910 --> 00:09:01.920 align:start position:0%
smaller weight than the first stone or
 

00:09:01.920 --> 00:09:04.150 align:start position:0%
smaller weight than the first stone or
equal<00:09:02.320><c> weight</c><00:09:02.640><c> right</c><00:09:03.200><c> because</c><00:09:03.600><c> it</c><00:09:03.920><c> because</c>

00:09:04.150 --> 00:09:04.160 align:start position:0%
equal weight right because it because
 

00:09:04.160 --> 00:09:06.070 align:start position:0%
equal weight right because it because
we're<00:09:04.480><c> popping</c><00:09:04.800><c> the</c><00:09:04.880><c> first</c><00:09:05.200><c> one</c><00:09:05.440><c> that</c><00:09:05.680><c> one</c><00:09:05.920><c> is</c>

00:09:06.070 --> 00:09:06.080 align:start position:0%
we're popping the first one that one is
 

00:09:06.080 --> 00:09:07.750 align:start position:0%
we're popping the first one that one is
supposed<00:09:06.399><c> to</c><00:09:06.560><c> be</c><00:09:06.720><c> the</c><00:09:06.800><c> heaviest</c><00:09:07.279><c> stone</c>

00:09:07.750 --> 00:09:07.760 align:start position:0%
supposed to be the heaviest stone
 

00:09:07.760 --> 00:09:10.630 align:start position:0%
supposed to be the heaviest stone
but<00:09:08.320><c> we</c><00:09:08.800><c> you</c><00:09:08.880><c> know</c><00:09:08.959><c> we're</c><00:09:09.200><c> doing</c><00:09:10.000><c> it</c><00:09:10.160><c> this</c><00:09:10.399><c> way</c>

00:09:10.630 --> 00:09:10.640 align:start position:0%
but we you know we're doing it this way
 

00:09:10.640 --> 00:09:10.949 align:start position:0%
but we you know we're doing it this way
but

00:09:10.949 --> 00:09:10.959 align:start position:0%
but
 

00:09:10.959 --> 00:09:12.949 align:start position:0%
but
remember<00:09:11.440><c> we</c><00:09:11.600><c> made</c><00:09:11.920><c> all</c><00:09:12.160><c> the</c><00:09:12.320><c> weights</c>

00:09:12.949 --> 00:09:12.959 align:start position:0%
remember we made all the weights
 

00:09:12.959 --> 00:09:14.070 align:start position:0%
remember we made all the weights
negative<00:09:13.680><c> so</c>

00:09:14.070 --> 00:09:14.080 align:start position:0%
negative so
 

00:09:14.080 --> 00:09:15.509 align:start position:0%
negative so
what<00:09:14.240><c> we</c><00:09:14.399><c> actually</c><00:09:14.640><c> have</c><00:09:14.800><c> to</c><00:09:14.880><c> do</c><00:09:15.120><c> is</c><00:09:15.279><c> the</c>

00:09:15.509 --> 00:09:15.519 align:start position:0%
what we actually have to do is the
 

00:09:15.519 --> 00:09:18.230 align:start position:0%
what we actually have to do is the
opposite<00:09:15.920><c> of</c><00:09:16.000><c> this</c><00:09:16.240><c> case</c><00:09:16.560><c> if</c><00:09:16.959><c> second</c>

00:09:18.230 --> 00:09:18.240 align:start position:0%
opposite of this case if second
 

00:09:18.240 --> 00:09:20.630 align:start position:0%
opposite of this case if second
is<00:09:18.399><c> greater</c><00:09:18.720><c> than</c><00:09:18.959><c> first</c><00:09:19.440><c> suppose</c><00:09:19.920><c> we</c><00:09:20.160><c> popped</c>

00:09:20.630 --> 00:09:20.640 align:start position:0%
is greater than first suppose we popped
 

00:09:20.640 --> 00:09:22.070 align:start position:0%
is greater than first suppose we popped
you<00:09:20.720><c> know</c><00:09:20.880><c> this</c><00:09:21.040><c> is</c><00:09:21.120><c> kind</c><00:09:21.279><c> of</c><00:09:21.440><c> an</c><00:09:21.600><c> example</c>

00:09:22.070 --> 00:09:22.080 align:start position:0%
you know this is kind of an example
 

00:09:22.080 --> 00:09:23.990 align:start position:0%
you know this is kind of an example
suppose<00:09:22.480><c> the</c><00:09:22.560><c> first</c><00:09:22.800><c> stone</c><00:09:23.120><c> had</c><00:09:23.360><c> a</c><00:09:23.440><c> weight</c><00:09:23.760><c> of</c>

00:09:23.990 --> 00:09:24.000 align:start position:0%
suppose the first stone had a weight of
 

00:09:24.000 --> 00:09:25.990 align:start position:0%
suppose the first stone had a weight of
eight<00:09:24.320><c> in</c><00:09:24.480><c> that</c><00:09:24.640><c> case</c><00:09:24.959><c> it</c><00:09:25.040><c> would</c><00:09:25.200><c> have</c><00:09:25.440><c> a</c><00:09:25.600><c> value</c>

00:09:25.990 --> 00:09:26.000 align:start position:0%
eight in that case it would have a value
 

00:09:26.000 --> 00:09:27.190 align:start position:0%
eight in that case it would have a value
of<00:09:26.160><c> negative</c><00:09:26.720><c> eight</c>

00:09:27.190 --> 00:09:27.200 align:start position:0%
of negative eight
 

00:09:27.200 --> 00:09:29.829 align:start position:0%
of negative eight
and<00:09:27.440><c> the</c><00:09:27.600><c> second</c><00:09:27.920><c> one</c><00:09:28.160><c> had</c><00:09:28.480><c> a</c><00:09:28.560><c> weight</c><00:09:28.880><c> of</c><00:09:29.040><c> seven</c>

00:09:29.829 --> 00:09:29.839 align:start position:0%
and the second one had a weight of seven
 

00:09:29.839 --> 00:09:30.230 align:start position:0%
and the second one had a weight of seven
uh

00:09:30.230 --> 00:09:30.240 align:start position:0%
uh
 

00:09:30.240 --> 00:09:32.070 align:start position:0%
uh
and<00:09:30.399><c> the</c><00:09:30.560><c> value</c><00:09:30.959><c> would</c><00:09:31.120><c> be</c><00:09:31.279><c> negative</c><00:09:31.680><c> seven</c><00:09:31.920><c> in</c>

00:09:32.070 --> 00:09:32.080 align:start position:0%
and the value would be negative seven in
 

00:09:32.080 --> 00:09:33.829 align:start position:0%
and the value would be negative seven in
that<00:09:32.240><c> case</c><00:09:32.640><c> then</c><00:09:32.880><c> of</c><00:09:33.040><c> course</c>

00:09:33.829 --> 00:09:33.839 align:start position:0%
that case then of course
 

00:09:33.839 --> 00:09:36.150 align:start position:0%
that case then of course
negative<00:09:34.240><c> seven</c><00:09:34.640><c> is</c><00:09:34.800><c> a</c><00:09:34.959><c> greater</c><00:09:35.440><c> value</c><00:09:35.920><c> than</c>

00:09:36.150 --> 00:09:36.160 align:start position:0%
negative seven is a greater value than
 

00:09:36.160 --> 00:09:37.590 align:start position:0%
negative seven is a greater value than
the<00:09:36.320><c> first</c><00:09:36.640><c> stone</c><00:09:37.040><c> right</c>

00:09:37.590 --> 00:09:37.600 align:start position:0%
the first stone right
 

00:09:37.600 --> 00:09:40.310 align:start position:0%
the first stone right
so<00:09:37.760><c> that</c><00:09:38.080><c> means</c><00:09:38.720><c> basically</c><00:09:39.200><c> this</c><00:09:39.680><c> second</c><00:09:40.160><c> is</c>

00:09:40.310 --> 00:09:40.320 align:start position:0%
so that means basically this second is
 

00:09:40.320 --> 00:09:42.710 align:start position:0%
so that means basically this second is
the<00:09:40.480><c> smaller</c><00:09:40.880><c> stone</c><00:09:41.200><c> and</c><00:09:41.279><c> we</c><00:09:41.440><c> have</c><00:09:41.519><c> to</c><00:09:41.680><c> destroy</c>

00:09:42.710 --> 00:09:42.720 align:start position:0%
the smaller stone and we have to destroy
 

00:09:42.720 --> 00:09:44.949 align:start position:0%
the smaller stone and we have to destroy
second<00:09:43.360><c> and</c><00:09:43.600><c> how</c><00:09:43.760><c> are</c><00:09:43.920><c> we</c><00:09:44.000><c> gonna</c><00:09:44.160><c> do</c><00:09:44.320><c> that</c><00:09:44.560><c> well</c>

00:09:44.949 --> 00:09:44.959 align:start position:0%
second and how are we gonna do that well
 

00:09:44.959 --> 00:09:46.550 align:start position:0%
second and how are we gonna do that well
basically<00:09:45.440><c> we</c><00:09:45.600><c> already</c><00:09:45.920><c> popped</c><00:09:46.240><c> it</c><00:09:46.320><c> from</c><00:09:46.480><c> the</c>

00:09:46.550 --> 00:09:46.560 align:start position:0%
basically we already popped it from the
 

00:09:46.560 --> 00:09:47.750 align:start position:0%
basically we already popped it from the
heap<00:09:46.800><c> so</c><00:09:46.959><c> we</c><00:09:47.040><c> don't</c><00:09:47.200><c> actually</c><00:09:47.519><c> have</c><00:09:47.680><c> to</c>

00:09:47.750 --> 00:09:47.760 align:start position:0%
heap so we don't actually have to
 

00:09:47.760 --> 00:09:49.509 align:start position:0%
heap so we don't actually have to
destroy<00:09:48.160><c> it</c><00:09:48.240><c> all</c><00:09:48.399><c> we</c><00:09:48.480><c> have</c><00:09:48.560><c> to</c><00:09:48.640><c> do</c><00:09:48.880><c> is</c><00:09:49.040><c> take</c>

00:09:49.509 --> 00:09:49.519 align:start position:0%
destroy it all we have to do is take
 

00:09:49.519 --> 00:09:51.190 align:start position:0%
destroy it all we have to do is take
the<00:09:49.760><c> difference</c><00:09:50.240><c> between</c><00:09:50.560><c> these</c><00:09:50.880><c> two</c><00:09:51.120><c> and</c>

00:09:51.190 --> 00:09:51.200 align:start position:0%
the difference between these two and
 

00:09:51.200 --> 00:09:53.509 align:start position:0%
the difference between these two and
then<00:09:51.440><c> add</c><00:09:51.760><c> that</c><00:09:52.240><c> back</c><00:09:52.560><c> into</c><00:09:52.800><c> the</c><00:09:52.959><c> heap</c><00:09:53.200><c> now</c><00:09:53.360><c> how</c>

00:09:53.509 --> 00:09:53.519 align:start position:0%
then add that back into the heap now how
 

00:09:53.519 --> 00:09:54.949 align:start position:0%
then add that back into the heap now how
are<00:09:53.600><c> we</c><00:09:53.760><c> going</c><00:09:53.839><c> to</c><00:09:53.920><c> take</c><00:09:54.160><c> the</c><00:09:54.320><c> difference</c>

00:09:54.949 --> 00:09:54.959 align:start position:0%
are we going to take the difference
 

00:09:54.959 --> 00:09:58.070 align:start position:0%
are we going to take the difference
first<00:09:55.279><c> of</c><00:09:55.440><c> all</c><00:09:55.839><c> a</c><00:09:56.000><c> heap</c><00:09:56.240><c> q</c><00:09:56.480><c> dot</c><00:09:56.720><c> heap</c><00:09:57.600><c> push</c><00:09:58.000><c> is</c>

00:09:58.070 --> 00:09:58.080 align:start position:0%
first of all a heap q dot heap push is
 

00:09:58.080 --> 00:09:59.030 align:start position:0%
first of all a heap q dot heap push is
how<00:09:58.320><c> we</c><00:09:58.399><c> can</c><00:09:58.560><c> actually</c>

00:09:59.030 --> 00:09:59.040 align:start position:0%
how we can actually
 

00:09:59.040 --> 00:10:00.710 align:start position:0%
how we can actually
add<00:09:59.279><c> to</c><00:09:59.440><c> the</c><00:09:59.600><c> heap</c><00:09:59.839><c> so</c><00:10:00.000><c> we're</c><00:10:00.160><c> going</c><00:10:00.240><c> to</c><00:10:00.320><c> add</c><00:10:00.560><c> to</c>

00:10:00.710 --> 00:10:00.720 align:start position:0%
add to the heap so we're going to add to
 

00:10:00.720 --> 00:10:03.030 align:start position:0%
add to the heap so we're going to add to
stones<00:10:01.440><c> whatever</c><00:10:01.839><c> that</c><00:10:02.079><c> value</c><00:10:02.480><c> is</c><00:10:02.640><c> how</c><00:10:02.800><c> are</c><00:10:02.880><c> we</c>

00:10:03.030 --> 00:10:03.040 align:start position:0%
stones whatever that value is how are we
 

00:10:03.040 --> 00:10:04.069 align:start position:0%
stones whatever that value is how are we
going<00:10:03.120><c> to</c><00:10:03.200><c> get</c><00:10:03.360><c> the</c><00:10:03.519><c> value</c>

00:10:04.069 --> 00:10:04.079 align:start position:0%
going to get the value
 

00:10:04.079 --> 00:10:05.750 align:start position:0%
going to get the value
well<00:10:04.399><c> obviously</c><00:10:04.800><c> the</c><00:10:04.959><c> value</c><00:10:05.279><c> in</c><00:10:05.360><c> this</c><00:10:05.519><c> case</c>

00:10:05.750 --> 00:10:05.760 align:start position:0%
well obviously the value in this case
 

00:10:05.760 --> 00:10:08.389 align:start position:0%
well obviously the value in this case
would<00:10:05.920><c> be</c><00:10:06.079><c> a</c><00:10:06.320><c> 1</c><00:10:06.640><c> right</c><00:10:06.800><c> if</c><00:10:06.959><c> we</c><00:10:07.040><c> took</c><00:10:07.279><c> it</c><00:10:07.519><c> 8</c>

00:10:08.389 --> 00:10:08.399 align:start position:0%
would be a 1 right if we took it 8
 

00:10:08.399 --> 00:10:10.630 align:start position:0%
would be a 1 right if we took it 8
subtracted<00:10:09.040><c> 7</c><00:10:09.360><c> from</c><00:10:09.519><c> it</c><00:10:09.680><c> we'd</c><00:10:09.839><c> be</c><00:10:10.079><c> left</c><00:10:10.320><c> with</c><00:10:10.560><c> a</c>

00:10:10.630 --> 00:10:10.640 align:start position:0%
subtracted 7 from it we'd be left with a
 

00:10:10.640 --> 00:10:12.790 align:start position:0%
subtracted 7 from it we'd be left with a
1.<00:10:11.040><c> how</c><00:10:11.200><c> can</c><00:10:11.360><c> we</c><00:10:11.440><c> do</c><00:10:11.600><c> that</c><00:10:11.760><c> computation</c>

00:10:12.790 --> 00:10:12.800 align:start position:0%
1. how can we do that computation
 

00:10:12.800 --> 00:10:15.110 align:start position:0%
1. how can we do that computation
well<00:10:13.360><c> basically</c><00:10:13.839><c> you</c><00:10:13.920><c> can</c><00:10:14.079><c> just</c><00:10:14.240><c> take</c><00:10:14.560><c> second</c>

00:10:15.110 --> 00:10:15.120 align:start position:0%
well basically you can just take second
 

00:10:15.120 --> 00:10:16.630 align:start position:0%
well basically you can just take second
subtracted<00:10:15.760><c> by</c><00:10:16.000><c> first</c>

00:10:16.630 --> 00:10:16.640 align:start position:0%
subtracted by first
 

00:10:16.640 --> 00:10:18.550 align:start position:0%
subtracted by first
if<00:10:16.959><c> that</c><00:10:17.200><c> kind</c><00:10:17.440><c> of</c><00:10:17.519><c> confuses</c><00:10:18.079><c> you</c><00:10:18.240><c> if</c><00:10:18.320><c> these</c>

00:10:18.550 --> 00:10:18.560 align:start position:0%
if that kind of confuses you if these
 

00:10:18.560 --> 00:10:20.630 align:start position:0%
if that kind of confuses you if these
negatives<00:10:19.040><c> and</c><00:10:19.279><c> kind</c><00:10:19.440><c> of</c><00:10:19.519><c> that</c><00:10:19.760><c> math</c><00:10:20.079><c> confuses</c>

00:10:20.630 --> 00:10:20.640 align:start position:0%
negatives and kind of that math confuses
 

00:10:20.640 --> 00:10:21.030 align:start position:0%
negatives and kind of that math confuses
you

00:10:21.030 --> 00:10:21.040 align:start position:0%
you
 

00:10:21.040 --> 00:10:23.190 align:start position:0%
you
you<00:10:21.279><c> can</c><00:10:21.600><c> convert</c><00:10:22.079><c> these</c><00:10:22.399><c> into</c><00:10:22.640><c> absolute</c>

00:10:23.190 --> 00:10:23.200 align:start position:0%
you can convert these into absolute
 

00:10:23.200 --> 00:10:24.949 align:start position:0%
you can convert these into absolute
values<00:10:23.680><c> if</c><00:10:23.839><c> you</c><00:10:24.000><c> want</c><00:10:24.160><c> so</c><00:10:24.399><c> you</c><00:10:24.480><c> know</c><00:10:24.720><c> you</c><00:10:24.800><c> can</c>

00:10:24.949 --> 00:10:24.959 align:start position:0%
values if you want so you know you can
 

00:10:24.959 --> 00:10:25.750 align:start position:0%
values if you want so you know you can
take<00:10:25.120><c> the</c><00:10:25.279><c> first</c>

00:10:25.750 --> 00:10:25.760 align:start position:0%
take the first
 

00:10:25.760 --> 00:10:27.829 align:start position:0%
take the first
and<00:10:26.000><c> second</c><00:10:26.640><c> and</c><00:10:26.880><c> convert</c><00:10:27.279><c> them</c><00:10:27.519><c> into</c><00:10:27.680><c> the</c>

00:10:27.829 --> 00:10:27.839 align:start position:0%
and second and convert them into the
 

00:10:27.839 --> 00:10:29.590 align:start position:0%
and second and convert them into the
absolute<00:10:28.320><c> value</c><00:10:28.640><c> then</c><00:10:28.880><c> the</c><00:10:29.040><c> math</c><00:10:29.279><c> will</c><00:10:29.440><c> be</c>

00:10:29.590 --> 00:10:29.600 align:start position:0%
absolute value then the math will be
 

00:10:29.600 --> 00:10:30.470 align:start position:0%
absolute value then the math will be
straightforward

00:10:30.470 --> 00:10:30.480 align:start position:0%
straightforward
 

00:10:30.480 --> 00:10:31.910 align:start position:0%
straightforward
i<00:10:30.560><c> don't</c><00:10:30.720><c> really</c><00:10:30.959><c> want</c><00:10:31.120><c> to</c><00:10:31.200><c> waste</c><00:10:31.680><c> you</c><00:10:31.839><c> know</c>

00:10:31.910 --> 00:10:31.920 align:start position:0%
i don't really want to waste you know
 

00:10:31.920 --> 00:10:33.829 align:start position:0%
i don't really want to waste you know
too<00:10:32.079><c> much</c><00:10:32.240><c> time</c><00:10:32.480><c> writing</c><00:10:32.720><c> that</c><00:10:32.880><c> code</c><00:10:33.200><c> out</c><00:10:33.360><c> and</c>

00:10:33.829 --> 00:10:33.839 align:start position:0%
too much time writing that code out and
 

00:10:33.839 --> 00:10:35.750 align:start position:0%
too much time writing that code out and
this<00:10:34.000><c> kind</c><00:10:34.160><c> of</c><00:10:34.240><c> does</c><00:10:34.480><c> make</c><00:10:34.720><c> sense</c><00:10:35.040><c> to</c><00:10:35.120><c> me</c><00:10:35.519><c> so</c>

00:10:35.750 --> 00:10:35.760 align:start position:0%
this kind of does make sense to me so
 

00:10:35.760 --> 00:10:37.030 align:start position:0%
this kind of does make sense to me so
i'm<00:10:35.839><c> just</c><00:10:36.000><c> going</c><00:10:36.160><c> to</c><00:10:36.320><c> keep</c><00:10:36.560><c> it</c>

00:10:37.030 --> 00:10:37.040 align:start position:0%
i'm just going to keep it
 

00:10:37.040 --> 00:10:38.790 align:start position:0%
i'm just going to keep it
short<00:10:37.360><c> and</c><00:10:37.600><c> concise</c><00:10:38.079><c> i'm</c><00:10:38.160><c> just</c><00:10:38.320><c> going</c><00:10:38.399><c> to</c><00:10:38.480><c> take</c>

00:10:38.790 --> 00:10:38.800 align:start position:0%
short and concise i'm just going to take
 

00:10:38.800 --> 00:10:40.870 align:start position:0%
short and concise i'm just going to take
second<00:10:39.440><c> subtracted</c><00:10:40.079><c> by</c><00:10:40.320><c> first</c>

00:10:40.870 --> 00:10:40.880 align:start position:0%
second subtracted by first
 

00:10:40.880 --> 00:10:43.110 align:start position:0%
second subtracted by first
which<00:10:41.040><c> will</c><00:10:41.279><c> give</c><00:10:41.519><c> us</c><00:10:42.079><c> the</c><00:10:42.640><c> which</c><00:10:42.800><c> will</c><00:10:42.959><c> give</c>

00:10:43.110 --> 00:10:43.120 align:start position:0%
which will give us the which will give
 

00:10:43.120 --> 00:10:44.550 align:start position:0%
which will give us the which will give
us<00:10:43.200><c> the</c><00:10:43.360><c> weight</c><00:10:43.680><c> that</c><00:10:43.760><c> we</c><00:10:43.920><c> want</c><00:10:44.079><c> to</c><00:10:44.160><c> add</c><00:10:44.399><c> right</c>

00:10:44.550 --> 00:10:44.560 align:start position:0%
us the weight that we want to add right
 

00:10:44.560 --> 00:10:45.509 align:start position:0%
us the weight that we want to add right
we<00:10:44.800><c> want</c><00:10:44.959><c> to</c><00:10:45.040><c> add</c>

00:10:45.509 --> 00:10:45.519 align:start position:0%
we want to add
 

00:10:45.519 --> 00:10:48.310 align:start position:0%
we want to add
a<00:10:45.760><c> stone</c><00:10:46.160><c> of</c><00:10:46.399><c> weight</c><00:10:46.800><c> one</c><00:10:47.279><c> but</c><00:10:47.440><c> remember</c><00:10:48.160><c> in</c>

00:10:48.310 --> 00:10:48.320 align:start position:0%
a stone of weight one but remember in
 

00:10:48.320 --> 00:10:49.910 align:start position:0%
a stone of weight one but remember in
our<00:10:48.480><c> heap</c><00:10:48.720><c> we</c><00:10:48.880><c> are</c><00:10:49.040><c> keeping</c><00:10:49.440><c> track</c><00:10:49.760><c> of</c>

00:10:49.910 --> 00:10:49.920 align:start position:0%
our heap we are keeping track of
 

00:10:49.920 --> 00:10:50.870 align:start position:0%
our heap we are keeping track of
negative<00:10:50.320><c> values</c>

00:10:50.870 --> 00:10:50.880 align:start position:0%
negative values
 

00:10:50.880 --> 00:10:52.230 align:start position:0%
negative values
so<00:10:51.040><c> i</c><00:10:51.200><c> would</c><00:10:51.360><c> have</c><00:10:51.440><c> to</c><00:10:51.839><c> i</c><00:10:51.920><c> would</c><00:10:52.079><c> have</c><00:10:52.160><c> to</c>

00:10:52.230 --> 00:10:52.240 align:start position:0%
so i would have to i would have to
 

00:10:52.240 --> 00:10:54.470 align:start position:0%
so i would have to i would have to
multiply<00:10:52.640><c> this</c><00:10:52.880><c> by</c><00:10:53.120><c> negative</c><00:10:53.440><c> one</c><00:10:53.839><c> uh</c>

00:10:54.470 --> 00:10:54.480 align:start position:0%
multiply this by negative one uh
 

00:10:54.480 --> 00:10:55.990 align:start position:0%
multiply this by negative one uh
the<00:10:54.640><c> easier</c><00:10:55.040><c> way</c><00:10:55.200><c> to</c><00:10:55.279><c> do</c><00:10:55.440><c> this</c><00:10:55.600><c> is</c><00:10:55.680><c> just</c><00:10:55.839><c> to</c>

00:10:55.990 --> 00:10:56.000 align:start position:0%
the easier way to do this is just to
 

00:10:56.000 --> 00:10:57.590 align:start position:0%
the easier way to do this is just to
take<00:10:56.240><c> first</c><00:10:56.800><c> subtracted</c>

00:10:57.590 --> 00:10:57.600 align:start position:0%
take first subtracted
 

00:10:57.600 --> 00:10:59.750 align:start position:0%
take first subtracted
by<00:10:58.000><c> second</c><00:10:58.640><c> which</c><00:10:58.800><c> will</c><00:10:58.959><c> give</c><00:10:59.200><c> us</c><00:10:59.279><c> the</c><00:10:59.440><c> exact</c>

00:10:59.750 --> 00:10:59.760 align:start position:0%
by second which will give us the exact
 

00:10:59.760 --> 00:11:01.509 align:start position:0%
by second which will give us the exact
same<00:11:00.000><c> thing</c><00:11:00.320><c> it'll</c><00:11:00.480><c> give</c><00:11:00.640><c> us</c><00:11:00.800><c> the</c><00:11:01.040><c> negative</c>

00:11:01.509 --> 00:11:01.519 align:start position:0%
same thing it'll give us the negative
 

00:11:01.519 --> 00:11:02.870 align:start position:0%
same thing it'll give us the negative
that<00:11:01.760><c> value</c><00:11:02.079><c> that</c><00:11:02.240><c> we're</c><00:11:02.399><c> looking</c><00:11:02.560><c> for</c><00:11:02.720><c> it'll</c>

00:11:02.870 --> 00:11:02.880 align:start position:0%
that value that we're looking for it'll
 

00:11:02.880 --> 00:11:04.630 align:start position:0%
that value that we're looking for it'll
take<00:11:03.040><c> the</c><00:11:03.200><c> difference</c><00:11:03.440><c> between</c><00:11:03.839><c> these</c><00:11:04.399><c> and</c>

00:11:04.630 --> 00:11:04.640 align:start position:0%
take the difference between these and
 

00:11:04.640 --> 00:11:06.310 align:start position:0%
take the difference between these and
that<00:11:04.880><c> difference</c><00:11:05.360><c> will</c><00:11:05.519><c> be</c><00:11:05.760><c> negative</c><00:11:06.079><c> right</c>

00:11:06.310 --> 00:11:06.320 align:start position:0%
that difference will be negative right
 

00:11:06.320 --> 00:11:07.030 align:start position:0%
that difference will be negative right
we'll<00:11:06.480><c> have</c>

00:11:07.030 --> 00:11:07.040 align:start position:0%
we'll have
 

00:11:07.040 --> 00:11:09.910 align:start position:0%
we'll have
first<00:11:07.519><c> which</c><00:11:07.760><c> is</c><00:11:07.839><c> negative</c><00:11:08.160><c> eight</c><00:11:09.040><c> plus</c><00:11:09.360><c> seven</c>

00:11:09.910 --> 00:11:09.920 align:start position:0%
first which is negative eight plus seven
 

00:11:09.920 --> 00:11:11.509 align:start position:0%
first which is negative eight plus seven
which<00:11:10.160><c> is</c><00:11:10.240><c> going</c><00:11:10.320><c> to</c><00:11:10.399><c> be</c><00:11:10.560><c> a</c><00:11:10.640><c> negative</c><00:11:11.040><c> one</c>

00:11:11.509 --> 00:11:11.519 align:start position:0%
which is going to be a negative one
 

00:11:11.519 --> 00:11:13.269 align:start position:0%
which is going to be a negative one
which<00:11:11.760><c> is</c><00:11:12.000><c> you</c><00:11:12.160><c> know</c><00:11:12.320><c> what</c><00:11:12.480><c> we</c><00:11:12.640><c> want</c><00:11:12.880><c> in</c><00:11:13.040><c> this</c>

00:11:13.269 --> 00:11:13.279 align:start position:0%
which is you know what we want in this
 

00:11:13.279 --> 00:11:15.110 align:start position:0%
which is you know what we want in this
case<00:11:13.839><c> so</c><00:11:14.000><c> i</c><00:11:14.079><c> hope</c><00:11:14.240><c> that</c><00:11:14.399><c> makes</c><00:11:14.640><c> sense</c><00:11:14.880><c> it's</c><00:11:15.040><c> a</c>

00:11:15.110 --> 00:11:15.120 align:start position:0%
case so i hope that makes sense it's a
 

00:11:15.120 --> 00:11:16.310 align:start position:0%
case so i hope that makes sense it's a
little<00:11:15.279><c> bit</c><00:11:15.440><c> confusing</c>

00:11:16.310 --> 00:11:16.320 align:start position:0%
little bit confusing
 

00:11:16.320 --> 00:11:18.230 align:start position:0%
little bit confusing
but<00:11:16.560><c> basically</c><00:11:16.959><c> this</c><00:11:17.120><c> is</c><00:11:17.279><c> our</c><00:11:17.440><c> case</c><00:11:17.839><c> and</c><00:11:18.000><c> that</c>

00:11:18.230 --> 00:11:18.240 align:start position:0%
but basically this is our case and that
 

00:11:18.240 --> 00:11:20.550 align:start position:0%
but basically this is our case and that
is<00:11:18.399><c> the</c><00:11:18.640><c> entire</c><00:11:19.040><c> simulation</c><00:11:19.760><c> code</c><00:11:20.160><c> once</c><00:11:20.399><c> we're</c>

00:11:20.550 --> 00:11:20.560 align:start position:0%
is the entire simulation code once we're
 

00:11:20.560 --> 00:11:21.430 align:start position:0%
is the entire simulation code once we're
done<00:11:20.720><c> with</c><00:11:20.959><c> that</c>

00:11:21.430 --> 00:11:21.440 align:start position:0%
done with that
 

00:11:21.440 --> 00:11:24.310 align:start position:0%
done with that
we<00:11:21.680><c> can</c><00:11:22.000><c> go</c><00:11:22.240><c> ahead</c><00:11:22.560><c> and</c><00:11:22.800><c> return</c><00:11:23.360><c> whatever</c><00:11:24.160><c> the</c>

00:11:24.310 --> 00:11:24.320 align:start position:0%
we can go ahead and return whatever the
 

00:11:24.320 --> 00:11:26.310 align:start position:0%
we can go ahead and return whatever the
value<00:11:24.800><c> of</c><00:11:24.880><c> the</c><00:11:25.040><c> stone</c><00:11:25.440><c> happens</c><00:11:25.760><c> to</c><00:11:25.920><c> be</c><00:11:26.160><c> the</c>

00:11:26.310 --> 00:11:26.320 align:start position:0%
value of the stone happens to be the
 

00:11:26.320 --> 00:11:28.630 align:start position:0%
value of the stone happens to be the
remaining<00:11:26.800><c> stone</c><00:11:27.120><c> so</c><00:11:27.360><c> stone</c><00:11:27.839><c> at</c><00:11:28.079><c> index</c>

00:11:28.630 --> 00:11:28.640 align:start position:0%
remaining stone so stone at index
 

00:11:28.640 --> 00:11:30.870 align:start position:0%
remaining stone so stone at index
zero<00:11:29.279><c> but</c><00:11:29.519><c> don't</c><00:11:29.760><c> forget</c><00:11:30.079><c> we</c><00:11:30.240><c> actually</c><00:11:30.640><c> do</c>

00:11:30.870 --> 00:11:30.880 align:start position:0%
zero but don't forget we actually do
 

00:11:30.880 --> 00:11:33.430 align:start position:0%
zero but don't forget we actually do
have<00:11:31.519><c> negative</c><00:11:32.000><c> values</c><00:11:32.560><c> right</c><00:11:32.800><c> so</c><00:11:33.040><c> when</c><00:11:33.200><c> we</c>

00:11:33.430 --> 00:11:33.440 align:start position:0%
have negative values right so when we
 

00:11:33.440 --> 00:11:34.069 align:start position:0%
have negative values right so when we
return

00:11:34.069 --> 00:11:34.079 align:start position:0%
return
 

00:11:34.079 --> 00:11:35.670 align:start position:0%
return
the<00:11:34.240><c> value</c><00:11:34.720><c> of</c><00:11:34.800><c> that</c><00:11:34.959><c> stone</c><00:11:35.279><c> we</c><00:11:35.440><c> want</c><00:11:35.600><c> to</c>

00:11:35.670 --> 00:11:35.680 align:start position:0%
the value of that stone we want to
 

00:11:35.680 --> 00:11:37.430 align:start position:0%
the value of that stone we want to
return<00:11:36.000><c> the</c><00:11:36.240><c> positive</c><00:11:36.720><c> value</c><00:11:37.040><c> so</c><00:11:37.200><c> we're</c><00:11:37.360><c> going</c>

00:11:37.430 --> 00:11:37.440 align:start position:0%
return the positive value so we're going
 

00:11:37.440 --> 00:11:39.430 align:start position:0%
return the positive value so we're going
to<00:11:37.519><c> take</c><00:11:37.760><c> the</c><00:11:38.000><c> absolute</c><00:11:38.640><c> value</c>

00:11:39.430 --> 00:11:39.440 align:start position:0%
to take the absolute value
 

00:11:39.440 --> 00:11:42.550 align:start position:0%
to take the absolute value
of<00:11:39.839><c> this</c><00:11:40.320><c> stone</c><00:11:40.959><c> and</c><00:11:41.360><c> also</c><00:11:41.760><c> don't</c><00:11:42.000><c> forget</c>

00:11:42.550 --> 00:11:42.560 align:start position:0%
of this stone and also don't forget
 

00:11:42.560 --> 00:11:45.350 align:start position:0%
of this stone and also don't forget
one<00:11:42.880><c> last</c><00:11:43.279><c> edge</c><00:11:43.519><c> case</c><00:11:44.000><c> what</c><00:11:44.160><c> if</c><00:11:44.560><c> stones</c><00:11:45.040><c> was</c>

00:11:45.350 --> 00:11:45.360 align:start position:0%
one last edge case what if stones was
 

00:11:45.360 --> 00:11:45.829 align:start position:0%
one last edge case what if stones was
empty

00:11:45.829 --> 00:11:45.839 align:start position:0%
empty
 

00:11:45.839 --> 00:11:47.509 align:start position:0%
empty
right<00:11:46.000><c> what</c><00:11:46.160><c> if</c><00:11:46.240><c> we</c><00:11:46.320><c> didn't</c><00:11:46.560><c> have</c><00:11:46.800><c> any</c><00:11:47.040><c> stone</c>

00:11:47.509 --> 00:11:47.519 align:start position:0%
right what if we didn't have any stone
 

00:11:47.519 --> 00:11:48.870 align:start position:0%
right what if we didn't have any stone
left<00:11:48.000><c> in</c><00:11:48.240><c> here</c>

00:11:48.870 --> 00:11:48.880 align:start position:0%
left in here
 

00:11:48.880 --> 00:11:51.269 align:start position:0%
left in here
well<00:11:49.680><c> one</c><00:11:49.839><c> way</c><00:11:50.000><c> to</c><00:11:50.079><c> handle</c><00:11:50.320><c> that</c><00:11:50.480><c> edge</c><00:11:50.800><c> case</c><00:11:51.120><c> is</c>

00:11:51.269 --> 00:11:51.279 align:start position:0%
well one way to handle that edge case is
 

00:11:51.279 --> 00:11:52.069 align:start position:0%
well one way to handle that edge case is
just<00:11:51.519><c> to</c><00:11:51.680><c> take</c>

00:11:52.069 --> 00:11:52.079 align:start position:0%
just to take
 

00:11:52.079 --> 00:11:54.069 align:start position:0%
just to take
before<00:11:52.399><c> we</c><00:11:52.480><c> return</c><00:11:52.880><c> just</c><00:11:53.040><c> say</c><00:11:53.279><c> stones</c><00:11:53.839><c> dot</c>

00:11:54.069 --> 00:11:54.079 align:start position:0%
before we return just say stones dot
 

00:11:54.079 --> 00:11:55.509 align:start position:0%
before we return just say stones dot
append<00:11:54.959><c> a</c>

00:11:55.509 --> 00:11:55.519 align:start position:0%
append a
 

00:11:55.519 --> 00:11:58.230 align:start position:0%
append a
zero<00:11:56.079><c> so</c><00:11:56.240><c> in</c><00:11:56.399><c> that</c><00:11:56.639><c> case</c><00:11:57.120><c> if</c><00:11:57.279><c> there's</c><00:11:57.600><c> already</c>

00:11:58.230 --> 00:11:58.240 align:start position:0%
zero so in that case if there's already
 

00:11:58.240 --> 00:11:59.350 align:start position:0%
zero so in that case if there's already
a<00:11:58.399><c> stone</c><00:11:58.959><c> in</c>

00:11:59.350 --> 00:11:59.360 align:start position:0%
a stone in
 

00:11:59.360 --> 00:12:01.670 align:start position:0%
a stone in
this<00:11:59.680><c> list</c><00:12:00.160><c> we'll</c><00:12:00.720><c> we'll</c><00:12:00.880><c> end</c><00:12:01.040><c> up</c><00:12:01.120><c> returning</c>

00:12:01.670 --> 00:12:01.680 align:start position:0%
this list we'll we'll end up returning
 

00:12:01.680 --> 00:12:03.350 align:start position:0%
this list we'll we'll end up returning
that<00:12:01.839><c> stone</c><00:12:02.240><c> because</c><00:12:02.399><c> it'll</c><00:12:02.639><c> be</c><00:12:02.800><c> at</c><00:12:03.040><c> index</c>

00:12:03.350 --> 00:12:03.360 align:start position:0%
that stone because it'll be at index
 

00:12:03.360 --> 00:12:03.829 align:start position:0%
that stone because it'll be at index
zero

00:12:03.829 --> 00:12:03.839 align:start position:0%
zero
 

00:12:03.839 --> 00:12:06.550 align:start position:0%
zero
if<00:12:04.000><c> there's</c><00:12:04.399><c> not</c><00:12:05.040><c> a</c><00:12:05.279><c> stone</c><00:12:05.680><c> then</c><00:12:05.920><c> we'll</c><00:12:06.240><c> add</c>

00:12:06.550 --> 00:12:06.560 align:start position:0%
if there's not a stone then we'll add
 

00:12:06.560 --> 00:12:07.269 align:start position:0%
if there's not a stone then we'll add
this

00:12:07.269 --> 00:12:07.279 align:start position:0%
this
 

00:12:07.279 --> 00:12:08.790 align:start position:0%
this
zero<00:12:07.680><c> stone</c><00:12:08.079><c> and</c><00:12:08.160><c> then</c><00:12:08.320><c> we'll</c><00:12:08.560><c> end</c><00:12:08.720><c> up</c>

00:12:08.790 --> 00:12:08.800 align:start position:0%
zero stone and then we'll end up
 

00:12:08.800 --> 00:12:10.710 align:start position:0%
zero stone and then we'll end up
returning<00:12:09.279><c> that</c><00:12:09.600><c> zero</c>

00:12:10.710 --> 00:12:10.720 align:start position:0%
returning that zero
 

00:12:10.720 --> 00:12:13.269 align:start position:0%
returning that zero
instead<00:12:11.600><c> so</c><00:12:11.920><c> this</c><00:12:12.160><c> basically</c><00:12:12.560><c> works</c><00:12:12.880><c> out</c><00:12:13.120><c> in</c>

00:12:13.269 --> 00:12:13.279 align:start position:0%
instead so this basically works out in
 

00:12:13.279 --> 00:12:15.030 align:start position:0%
instead so this basically works out in
all<00:12:13.519><c> cases</c><00:12:13.920><c> which</c><00:12:14.160><c> is</c><00:12:14.240><c> what</c><00:12:14.399><c> i'm</c><00:12:14.480><c> getting</c><00:12:14.800><c> at</c>

00:12:15.030 --> 00:12:15.040 align:start position:0%
all cases which is what i'm getting at
 

00:12:15.040 --> 00:12:15.910 align:start position:0%
all cases which is what i'm getting at
so<00:12:15.279><c> i</c><00:12:15.519><c> hope</c>

00:12:15.910 --> 00:12:15.920 align:start position:0%
so i hope
 

00:12:15.920 --> 00:12:17.910 align:start position:0%
so i hope
this<00:12:16.160><c> was</c><00:12:16.399><c> helpful</c><00:12:17.120><c> as</c><00:12:17.360><c> you</c><00:12:17.440><c> can</c><00:12:17.519><c> see</c><00:12:17.760><c> this</c>

00:12:17.910 --> 00:12:17.920 align:start position:0%
this was helpful as you can see this
 

00:12:17.920 --> 00:12:19.829 align:start position:0%
this was helpful as you can see this
solution<00:12:18.399><c> does</c><00:12:18.639><c> run</c><00:12:18.959><c> and</c><00:12:19.120><c> it</c><00:12:19.360><c> is</c><00:12:19.519><c> pretty</c>

00:12:19.829 --> 00:12:19.839 align:start position:0%
solution does run and it is pretty
 

00:12:19.839 --> 00:12:21.750 align:start position:0%
solution does run and it is pretty
efficient<00:12:20.240><c> sometimes</c><00:12:20.720><c> it's</c><00:12:20.959><c> more</c><00:12:21.120><c> efficient</c>

00:12:21.750 --> 00:12:21.760 align:start position:0%
efficient sometimes it's more efficient
 

00:12:21.760 --> 00:12:23.750 align:start position:0%
efficient sometimes it's more efficient
than<00:12:22.000><c> other</c><00:12:22.240><c> times</c><00:12:22.800><c> so</c><00:12:22.959><c> i</c><00:12:23.040><c> hope</c><00:12:23.200><c> that</c><00:12:23.360><c> this</c><00:12:23.519><c> was</c>

00:12:23.750 --> 00:12:23.760 align:start position:0%
than other times so i hope that this was
 

00:12:23.760 --> 00:12:25.190 align:start position:0%
than other times so i hope that this was
helpful<00:12:24.320><c> if</c><00:12:24.480><c> it</c><00:12:24.639><c> was</c>

00:12:25.190 --> 00:12:25.200 align:start position:0%
helpful if it was
 

00:12:25.200 --> 00:12:26.949 align:start position:0%
helpful if it was
please<00:12:25.600><c> like</c><00:12:25.839><c> and</c><00:12:25.920><c> subscribe</c><00:12:26.480><c> it</c><00:12:26.560><c> supports</c>

00:12:26.949 --> 00:12:26.959 align:start position:0%
please like and subscribe it supports
 

00:12:26.959 --> 00:12:28.230 align:start position:0%
please like and subscribe it supports
the<00:12:27.120><c> channel</c><00:12:27.519><c> a</c><00:12:27.680><c> lot</c>

00:12:28.230 --> 00:12:28.240 align:start position:0%
the channel a lot
 

00:12:28.240 --> 00:12:29.910 align:start position:0%
the channel a lot
and<00:12:28.399><c> i'll</c><00:12:28.639><c> hopefully</c><00:12:29.120><c> see</c><00:12:29.360><c> you</c><00:12:29.440><c> pretty</c><00:12:29.680><c> soon</c>

00:12:29.910 --> 00:12:29.920 align:start position:0%
and i'll hopefully see you pretty soon
 

00:12:29.920 --> 00:12:32.389 align:start position:0%
and i'll hopefully see you pretty soon
when<00:12:30.079><c> we</c><00:12:30.320><c> solve</c><00:12:30.720><c> the</c><00:12:31.040><c> second</c><00:12:31.440><c> version</c><00:12:31.839><c> of</c><00:12:32.079><c> this</c>

00:12:32.389 --> 00:12:32.399 align:start position:0%
when we solve the second version of this
 

00:12:32.399 --> 00:12:34.790 align:start position:0%
when we solve the second version of this
problem<00:12:33.200><c> last</c><00:12:33.519><c> stone</c><00:12:33.920><c> weight</c><00:12:34.160><c> 2</c><00:12:34.399><c> which</c><00:12:34.560><c> is</c><00:12:34.720><c> a</c>

00:12:34.790 --> 00:12:34.800 align:start position:0%
problem last stone weight 2 which is a
 

00:12:34.800 --> 00:12:39.120 align:start position:0%
problem last stone weight 2 which is a
much<00:12:35.120><c> more</c><00:12:35.360><c> difficult</c><00:12:35.839><c> problem</c><00:12:36.320><c> to</c><00:12:36.480><c> solve</c>

