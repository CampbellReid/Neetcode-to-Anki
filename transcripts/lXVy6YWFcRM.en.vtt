WEBVTT
Kind: captions
Language: en

00:00:00.160 --> 00:00:01.670 align:start position:0%
 
everyone<00:00:00.480><c> welcome</c><00:00:00.880><c> back</c><00:00:01.120><c> and</c><00:00:01.199><c> let's</c><00:00:01.439><c> write</c>

00:00:01.670 --> 00:00:01.680 align:start position:0%
everyone welcome back and let's write
 

00:00:01.680 --> 00:00:04.150 align:start position:0%
everyone welcome back and let's write
some<00:00:01.839><c> more</c><00:00:02.080><c> neat</c><00:00:02.320><c> code</c><00:00:02.639><c> today</c><00:00:02.960><c> let's</c><00:00:03.360><c> look</c><00:00:03.600><c> at</c>

00:00:04.150 --> 00:00:04.160 align:start position:0%
some more neat code today let's look at
 

00:00:04.160 --> 00:00:07.110 align:start position:0%
some more neat code today let's look at
maximum<00:00:05.040><c> product</c><00:00:05.680><c> subarray</c><00:00:06.480><c> and</c><00:00:06.720><c> this</c><00:00:06.960><c> is</c>

00:00:07.110 --> 00:00:07.120 align:start position:0%
maximum product subarray and this is
 

00:00:07.120 --> 00:00:08.230 align:start position:0%
maximum product subarray and this is
actually<00:00:07.680><c> a</c>

00:00:08.230 --> 00:00:08.240 align:start position:0%
actually a
 

00:00:08.240 --> 00:00:10.230 align:start position:0%
actually a
dynamic<00:00:08.720><c> programming</c><00:00:09.440><c> problem</c><00:00:09.920><c> and</c><00:00:10.080><c> i'm</c>

00:00:10.230 --> 00:00:10.240 align:start position:0%
dynamic programming problem and i'm
 

00:00:10.240 --> 00:00:11.990 align:start position:0%
dynamic programming problem and i'm
going<00:00:10.320><c> to</c><00:00:10.559><c> show</c><00:00:10.719><c> you</c><00:00:11.120><c> how</c><00:00:11.440><c> to</c>

00:00:11.990 --> 00:00:12.000 align:start position:0%
going to show you how to
 

00:00:12.000 --> 00:00:14.629 align:start position:0%
going to show you how to
solve<00:00:12.320><c> this</c><00:00:12.559><c> problem</c><00:00:13.200><c> easily</c><00:00:13.679><c> so</c><00:00:13.920><c> we're</c><00:00:14.160><c> given</c>

00:00:14.629 --> 00:00:14.639 align:start position:0%
solve this problem easily so we're given
 

00:00:14.639 --> 00:00:16.870 align:start position:0%
solve this problem easily so we're given
an<00:00:14.960><c> integer</c><00:00:15.440><c> array</c><00:00:15.920><c> of</c><00:00:16.160><c> numbers</c>

00:00:16.870 --> 00:00:16.880 align:start position:0%
an integer array of numbers
 

00:00:16.880 --> 00:00:19.109 align:start position:0%
an integer array of numbers
and<00:00:17.039><c> we</c><00:00:17.199><c> want</c><00:00:17.359><c> to</c><00:00:17.440><c> find</c><00:00:17.760><c> the</c><00:00:18.039><c> contiguous</c>

00:00:19.109 --> 00:00:19.119 align:start position:0%
and we want to find the contiguous
 

00:00:19.119 --> 00:00:19.990 align:start position:0%
and we want to find the contiguous
subarray

00:00:19.990 --> 00:00:20.000 align:start position:0%
subarray
 

00:00:20.000 --> 00:00:22.790 align:start position:0%
subarray
that<00:00:20.160><c> contains</c><00:00:20.720><c> at</c><00:00:20.960><c> least</c><00:00:21.359><c> num</c><00:00:21.760><c> one</c><00:00:22.000><c> number</c>

00:00:22.790 --> 00:00:22.800 align:start position:0%
that contains at least num one number
 

00:00:22.800 --> 00:00:23.189 align:start position:0%
that contains at least num one number
and

00:00:23.189 --> 00:00:23.199 align:start position:0%
and
 

00:00:23.199 --> 00:00:26.630 align:start position:0%
and
has<00:00:23.439><c> the</c><00:00:23.840><c> largest</c><00:00:24.720><c> product</c><00:00:25.439><c> so</c><00:00:25.760><c> in</c><00:00:25.920><c> this</c><00:00:26.240><c> case</c>

00:00:26.630 --> 00:00:26.640 align:start position:0%
has the largest product so in this case
 

00:00:26.640 --> 00:00:30.070 align:start position:0%
has the largest product so in this case
we<00:00:26.800><c> have</c><00:00:27.039><c> a</c><00:00:27.279><c> 2</c><00:00:27.599><c> a</c><00:00:27.840><c> 3</c><00:00:28.160><c> a</c><00:00:28.320><c> negative</c><00:00:28.800><c> 2</c><00:00:29.119><c> and</c><00:00:29.279><c> a</c><00:00:29.439><c> 4</c>

00:00:30.070 --> 00:00:30.080 align:start position:0%
we have a 2 a 3 a negative 2 and a 4
 

00:00:30.080 --> 00:00:32.389 align:start position:0%
we have a 2 a 3 a negative 2 and a 4
and<00:00:30.240><c> the</c><00:00:30.480><c> largest</c><00:00:31.039><c> continuous</c><00:00:31.840><c> product</c><00:00:32.239><c> we</c>

00:00:32.389 --> 00:00:32.399 align:start position:0%
and the largest continuous product we
 

00:00:32.399 --> 00:00:34.229 align:start position:0%
and the largest continuous product we
can<00:00:32.559><c> make</c><00:00:32.800><c> is</c><00:00:33.040><c> 2</c><00:00:33.280><c> and</c><00:00:33.440><c> 3</c><00:00:33.840><c> because</c>

00:00:34.229 --> 00:00:34.239 align:start position:0%
can make is 2 and 3 because
 

00:00:34.239 --> 00:00:37.270 align:start position:0%
can make is 2 and 3 because
2<00:00:34.480><c> times</c><00:00:34.880><c> 3</c><00:00:35.760><c> is</c><00:00:36.160><c> 6.</c><00:00:36.800><c> that</c>

00:00:37.270 --> 00:00:37.280 align:start position:0%
2 times 3 is 6. that
 

00:00:37.280 --> 00:00:39.110 align:start position:0%
2 times 3 is 6. that
is<00:00:37.440><c> the</c><00:00:37.600><c> largest</c><00:00:38.160><c> product</c><00:00:38.640><c> we</c><00:00:38.719><c> can't</c><00:00:38.879><c> really</c>

00:00:39.110 --> 00:00:39.120 align:start position:0%
is the largest product we can't really
 

00:00:39.120 --> 00:00:40.229 align:start position:0%
is the largest product we can't really
make<00:00:39.280><c> it</c><00:00:39.440><c> bigger</c><00:00:39.760><c> because</c><00:00:40.000><c> there's</c><00:00:40.160><c> a</c>

00:00:40.229 --> 00:00:40.239 align:start position:0%
make it bigger because there's a
 

00:00:40.239 --> 00:00:41.990 align:start position:0%
make it bigger because there's a
negative<00:00:40.640><c> 2</c><00:00:40.879><c> if</c><00:00:40.960><c> we</c><00:00:41.120><c> multiply</c><00:00:41.600><c> this</c><00:00:41.840><c> by</c>

00:00:41.990 --> 00:00:42.000 align:start position:0%
negative 2 if we multiply this by
 

00:00:42.000 --> 00:00:43.430 align:start position:0%
negative 2 if we multiply this by
negative<00:00:42.399><c> 2</c><00:00:42.640><c> it's</c><00:00:42.800><c> going</c><00:00:42.960><c> to</c><00:00:43.120><c> be</c>

00:00:43.430 --> 00:00:43.440 align:start position:0%
negative 2 it's going to be
 

00:00:43.440 --> 00:00:46.790 align:start position:0%
negative 2 it's going to be
negative<00:00:44.079><c> 12</c><00:00:44.640><c> that's</c><00:00:44.960><c> not</c><00:00:45.360><c> bigger</c><00:00:46.239><c> than</c>

00:00:46.790 --> 00:00:46.800 align:start position:0%
negative 12 that's not bigger than
 

00:00:46.800 --> 00:00:49.029 align:start position:0%
negative 12 that's not bigger than
6.<00:00:47.200><c> so</c><00:00:47.360><c> what's</c><00:00:47.680><c> like</c><00:00:47.840><c> your</c><00:00:48.079><c> first</c><00:00:48.480><c> idea</c><00:00:48.800><c> how</c><00:00:48.960><c> to</c>

00:00:49.029 --> 00:00:49.039 align:start position:0%
6. so what's like your first idea how to
 

00:00:49.039 --> 00:00:50.470 align:start position:0%
6. so what's like your first idea how to
solve<00:00:49.360><c> this</c><00:00:49.520><c> problem</c><00:00:50.000><c> maybe</c>

00:00:50.470 --> 00:00:50.480 align:start position:0%
solve this problem maybe
 

00:00:50.480 --> 00:00:53.110 align:start position:0%
solve this problem maybe
brute<00:00:50.960><c> force</c><00:00:51.440><c> right</c><00:00:52.000><c> is</c><00:00:52.160><c> there</c><00:00:52.320><c> a</c><00:00:52.480><c> brute</c><00:00:52.800><c> force</c>

00:00:53.110 --> 00:00:53.120 align:start position:0%
brute force right is there a brute force
 

00:00:53.120 --> 00:00:54.069 align:start position:0%
brute force right is there a brute force
solution<00:00:53.600><c> to</c><00:00:53.760><c> this</c>

00:00:54.069 --> 00:00:54.079 align:start position:0%
solution to this
 

00:00:54.079 --> 00:00:56.470 align:start position:0%
solution to this
well<00:00:54.320><c> we</c><00:00:54.480><c> want</c><00:00:54.640><c> to</c><00:00:54.719><c> find</c><00:00:55.120><c> a</c><00:00:55.440><c> subarray</c><00:00:56.079><c> right</c><00:00:56.320><c> so</c>

00:00:56.470 --> 00:00:56.480 align:start position:0%
well we want to find a subarray right so
 

00:00:56.480 --> 00:00:57.750 align:start position:0%
well we want to find a subarray right so
why<00:00:56.640><c> don't</c><00:00:56.800><c> we</c><00:00:56.960><c> just</c><00:00:57.199><c> try</c>

00:00:57.750 --> 00:00:57.760 align:start position:0%
why don't we just try
 

00:00:57.760 --> 00:01:00.790 align:start position:0%
why don't we just try
every<00:00:58.399><c> single</c><00:00:59.039><c> subarray</c><00:00:59.600><c> so</c><00:01:00.160><c> let's</c><00:01:00.320><c> say</c><00:01:00.559><c> all</c>

00:01:00.790 --> 00:01:00.800 align:start position:0%
every single subarray so let's say all
 

00:01:00.800 --> 00:01:03.029 align:start position:0%
every single subarray so let's say all
sub<00:01:00.960><c> arrays</c><00:01:01.359><c> starting</c><00:01:01.680><c> at</c><00:01:01.920><c> two</c><00:01:02.239><c> we</c><00:01:02.399><c> got</c><00:01:02.719><c> one</c>

00:01:03.029 --> 00:01:03.039 align:start position:0%
sub arrays starting at two we got one
 

00:01:03.039 --> 00:01:04.149 align:start position:0%
sub arrays starting at two we got one
sub<00:01:03.280><c> array</c>

00:01:04.149 --> 00:01:04.159 align:start position:0%
sub array
 

00:01:04.159 --> 00:01:07.590 align:start position:0%
sub array
two<00:01:04.479><c> sub</c><00:01:04.720><c> arrays</c><00:01:05.360><c> three</c><00:01:06.799><c> four</c><00:01:07.119><c> right</c>

00:01:07.590 --> 00:01:07.600 align:start position:0%
two sub arrays three four right
 

00:01:07.600 --> 00:01:09.109 align:start position:0%
two sub arrays three four right
and<00:01:07.760><c> for</c><00:01:08.080><c> each</c><00:01:08.320><c> of</c><00:01:08.479><c> these</c><00:01:08.799><c> let's</c><00:01:08.960><c> just</c>

00:01:09.109 --> 00:01:09.119 align:start position:0%
and for each of these let's just
 

00:01:09.119 --> 00:01:10.710 align:start position:0%
and for each of these let's just
calculate<00:01:09.680><c> the</c><00:01:09.840><c> product</c><00:01:10.240><c> right</c><00:01:10.479><c> like</c><00:01:10.640><c> the</c>

00:01:10.710 --> 00:01:10.720 align:start position:0%
calculate the product right like the
 

00:01:10.720 --> 00:01:12.870 align:start position:0%
calculate the product right like the
first<00:01:11.040><c> one</c><00:01:11.280><c> is</c><00:01:11.439><c> two</c><00:01:11.840><c> the</c><00:01:12.080><c> next</c><00:01:12.320><c> one</c><00:01:12.479><c> is</c><00:01:12.640><c> two</c>

00:01:12.870 --> 00:01:12.880 align:start position:0%
first one is two the next one is two
 

00:01:12.880 --> 00:01:13.830 align:start position:0%
first one is two the next one is two
times<00:01:13.280><c> three</c>

00:01:13.830 --> 00:01:13.840 align:start position:0%
times three
 

00:01:13.840 --> 00:01:16.630 align:start position:0%
times three
the<00:01:14.000><c> next</c><00:01:14.240><c> one</c><00:01:14.479><c> is</c><00:01:14.640><c> two</c><00:01:14.880><c> times</c><00:01:15.280><c> three</c><00:01:16.240><c> times</c>

00:01:16.630 --> 00:01:16.640 align:start position:0%
the next one is two times three times
 

00:01:16.640 --> 00:01:17.749 align:start position:0%
the next one is two times three times
negative<00:01:17.040><c> two</c>

00:01:17.749 --> 00:01:17.759 align:start position:0%
negative two
 

00:01:17.759 --> 00:01:20.469 align:start position:0%
negative two
the<00:01:18.000><c> last</c><00:01:18.320><c> one</c><00:01:18.640><c> is</c><00:01:18.799><c> two</c><00:01:19.040><c> times</c><00:01:19.600><c> three</c><00:01:20.080><c> times</c>

00:01:20.469 --> 00:01:20.479 align:start position:0%
the last one is two times three times
 

00:01:20.479 --> 00:01:21.350 align:start position:0%
the last one is two times three times
negative<00:01:20.960><c> two</c>

00:01:21.350 --> 00:01:21.360 align:start position:0%
negative two
 

00:01:21.360 --> 00:01:24.230 align:start position:0%
negative two
times<00:01:21.920><c> four</c><00:01:22.560><c> and</c><00:01:22.799><c> we</c><00:01:23.040><c> end</c><00:01:23.200><c> up</c><00:01:23.360><c> saying</c><00:01:23.680><c> that</c><00:01:23.920><c> so</c>

00:01:24.230 --> 00:01:24.240 align:start position:0%
times four and we end up saying that so
 

00:01:24.240 --> 00:01:25.190 align:start position:0%
times four and we end up saying that so
far<00:01:24.479><c> the</c><00:01:24.640><c> biggest</c>

00:01:25.190 --> 00:01:25.200 align:start position:0%
far the biggest
 

00:01:25.200 --> 00:01:27.190 align:start position:0%
far the biggest
is<00:01:25.360><c> this</c><00:01:25.600><c> but</c><00:01:25.759><c> we're</c><00:01:26.080><c> technically</c><00:01:26.640><c> not</c><00:01:26.880><c> done</c>

00:01:27.190 --> 00:01:27.200 align:start position:0%
is this but we're technically not done
 

00:01:27.200 --> 00:01:29.190 align:start position:0%
is this but we're technically not done
yet<00:01:27.520><c> all</c><00:01:27.759><c> of</c><00:01:27.840><c> these</c><00:01:28.080><c> sub-arrays</c><00:01:28.640><c> contain</c>

00:01:29.190 --> 00:01:29.200 align:start position:0%
yet all of these sub-arrays contain
 

00:01:29.200 --> 00:01:31.670 align:start position:0%
yet all of these sub-arrays contain
two<00:01:29.759><c> so</c><00:01:30.000><c> now</c><00:01:30.240><c> let's</c><00:01:30.479><c> look</c><00:01:30.720><c> at</c><00:01:30.880><c> all</c><00:01:31.119><c> sub-arrays</c>

00:01:31.670 --> 00:01:31.680 align:start position:0%
two so now let's look at all sub-arrays
 

00:01:31.680 --> 00:01:33.270 align:start position:0%
two so now let's look at all sub-arrays
containing<00:01:32.240><c> three</c><00:01:32.560><c> so</c><00:01:32.799><c> we</c><00:01:32.960><c> got</c>

00:01:33.270 --> 00:01:33.280 align:start position:0%
containing three so we got
 

00:01:33.280 --> 00:01:35.670 align:start position:0%
containing three so we got
one<00:01:33.680><c> right</c><00:01:33.920><c> just</c><00:01:34.240><c> three</c><00:01:34.720><c> then</c><00:01:34.880><c> we</c><00:01:35.040><c> got</c><00:01:35.360><c> three</c>

00:01:35.670 --> 00:01:35.680 align:start position:0%
one right just three then we got three
 

00:01:35.680 --> 00:01:37.190 align:start position:0%
one right just three then we got three
times<00:01:36.000><c> negative</c><00:01:36.320><c> two</c><00:01:36.560><c> then</c><00:01:36.720><c> we</c><00:01:36.799><c> got</c><00:01:37.040><c> three</c>

00:01:37.190 --> 00:01:37.200 align:start position:0%
times negative two then we got three
 

00:01:37.200 --> 00:01:38.550 align:start position:0%
times negative two then we got three
times<00:01:37.520><c> negative</c><00:01:37.920><c> two</c>

00:01:38.550 --> 00:01:38.560 align:start position:0%
times negative two
 

00:01:38.560 --> 00:01:41.510 align:start position:0%
times negative two
times<00:01:39.119><c> 4</c><00:01:39.680><c> and</c><00:01:40.000><c> basically</c><00:01:40.560><c> we</c><00:01:40.799><c> repeat</c><00:01:41.280><c> this</c>

00:01:41.510 --> 00:01:41.520 align:start position:0%
times 4 and basically we repeat this
 

00:01:41.520 --> 00:01:42.230 align:start position:0%
times 4 and basically we repeat this
process

00:01:42.230 --> 00:01:42.240 align:start position:0%
process
 

00:01:42.240 --> 00:01:44.630 align:start position:0%
process
now<00:01:42.720><c> you</c><00:01:42.880><c> can</c><00:01:43.119><c> tell</c><00:01:43.439><c> that</c><00:01:43.600><c> this</c><00:01:43.840><c> is</c><00:01:44.000><c> not</c><00:01:44.320><c> super</c>

00:01:44.630 --> 00:01:44.640 align:start position:0%
now you can tell that this is not super
 

00:01:44.640 --> 00:01:45.510 align:start position:0%
now you can tell that this is not super
efficient

00:01:45.510 --> 00:01:45.520 align:start position:0%
efficient
 

00:01:45.520 --> 00:01:48.550 align:start position:0%
efficient
the<00:01:45.759><c> time</c><00:01:46.000><c> complexity</c><00:01:46.720><c> is</c><00:01:46.960><c> big</c><00:01:47.280><c> o</c><00:01:47.840><c> n</c>

00:01:48.550 --> 00:01:48.560 align:start position:0%
the time complexity is big o n
 

00:01:48.560 --> 00:01:51.190 align:start position:0%
the time complexity is big o n
squared<00:01:49.360><c> for</c><00:01:49.680><c> each</c><00:01:50.000><c> of</c><00:01:50.159><c> these</c><00:01:50.560><c> numbers</c><00:01:51.040><c> we're</c>

00:01:51.190 --> 00:01:51.200 align:start position:0%
squared for each of these numbers we're
 

00:01:51.200 --> 00:01:52.389 align:start position:0%
squared for each of these numbers we're
going<00:01:51.280><c> to</c><00:01:51.439><c> end</c><00:01:51.600><c> up</c><00:01:51.680><c> having</c>

00:01:52.389 --> 00:01:52.399 align:start position:0%
going to end up having
 

00:01:52.399 --> 00:01:55.830 align:start position:0%
going to end up having
n<00:01:53.280><c> sub</c><00:01:53.520><c> arrays</c><00:01:54.159><c> and</c><00:01:54.479><c> we</c><00:01:54.720><c> see</c><00:01:54.960><c> that</c><00:01:55.280><c> the</c><00:01:55.520><c> total</c>

00:01:55.830 --> 00:01:55.840 align:start position:0%
n sub arrays and we see that the total
 

00:01:55.840 --> 00:01:58.069 align:start position:0%
n sub arrays and we see that the total
number<00:01:56.079><c> of</c><00:01:56.240><c> elements</c><00:01:56.719><c> we</c><00:01:56.880><c> have</c><00:01:57.119><c> is</c><00:01:57.439><c> also</c>

00:01:58.069 --> 00:01:58.079 align:start position:0%
number of elements we have is also
 

00:01:58.079 --> 00:02:00.950 align:start position:0%
number of elements we have is also
n<00:01:58.479><c> right</c><00:01:58.880><c> it's</c><00:01:59.119><c> n</c><00:01:59.759><c> elements</c><00:02:00.240><c> in</c><00:02:00.320><c> the</c><00:02:00.479><c> array</c><00:02:00.799><c> so</c>

00:02:00.950 --> 00:02:00.960 align:start position:0%
n right it's n elements in the array so
 

00:02:00.960 --> 00:02:01.590 align:start position:0%
n right it's n elements in the array so
we're<00:02:01.119><c> going</c><00:02:01.200><c> to</c><00:02:01.280><c> get</c>

00:02:01.590 --> 00:02:01.600 align:start position:0%
we're going to get
 

00:02:01.600 --> 00:02:04.950 align:start position:0%
we're going to get
n<00:02:01.759><c> times</c><00:02:02.240><c> n</c><00:02:02.479><c> is</c><00:02:02.719><c> n</c><00:02:02.960><c> squared</c><00:02:03.680><c> so</c><00:02:03.920><c> my</c><00:02:04.240><c> question</c><00:02:04.640><c> is</c>

00:02:04.950 --> 00:02:04.960 align:start position:0%
n times n is n squared so my question is
 

00:02:04.960 --> 00:02:07.109 align:start position:0%
n times n is n squared so my question is
can<00:02:05.200><c> we</c><00:02:05.439><c> do</c><00:02:05.759><c> better</c><00:02:06.159><c> and</c><00:02:06.320><c> how</c><00:02:06.560><c> can</c><00:02:06.799><c> we</c><00:02:06.960><c> do</c>

00:02:07.109 --> 00:02:07.119 align:start position:0%
can we do better and how can we do
 

00:02:07.119 --> 00:02:08.790 align:start position:0%
can we do better and how can we do
better<00:02:07.840><c> maybe</c><00:02:08.160><c> there's</c><00:02:08.399><c> some</c>

00:02:08.790 --> 00:02:08.800 align:start position:0%
better maybe there's some
 

00:02:08.800 --> 00:02:11.190 align:start position:0%
better maybe there's some
patterns<00:02:09.599><c> to</c><00:02:09.759><c> this</c><00:02:10.080><c> problem</c><00:02:10.479><c> that</c><00:02:10.560><c> we</c><00:02:10.720><c> can</c><00:02:10.959><c> use</c>

00:02:11.190 --> 00:02:11.200 align:start position:0%
patterns to this problem that we can use
 

00:02:11.200 --> 00:02:13.190 align:start position:0%
patterns to this problem that we can use
to<00:02:11.440><c> our</c><00:02:11.599><c> advantage</c><00:02:12.160><c> to</c><00:02:12.319><c> find</c><00:02:12.640><c> a</c><00:02:12.879><c> better</c>

00:02:13.190 --> 00:02:13.200 align:start position:0%
to our advantage to find a better
 

00:02:13.200 --> 00:02:14.229 align:start position:0%
to our advantage to find a better
solution<00:02:13.840><c> than</c>

00:02:14.229 --> 00:02:14.239 align:start position:0%
solution than
 

00:02:14.239 --> 00:02:17.910 align:start position:0%
solution than
n<00:02:14.480><c> squared</c><00:02:15.360><c> so</c><00:02:15.599><c> let's</c><00:02:16.000><c> look</c><00:02:16.239><c> at</c><00:02:16.560><c> one</c><00:02:16.959><c> example</c>

00:02:17.910 --> 00:02:17.920 align:start position:0%
n squared so let's look at one example
 

00:02:17.920 --> 00:02:19.910 align:start position:0%
n squared so let's look at one example
do<00:02:18.080><c> you</c><00:02:18.239><c> notice</c><00:02:18.720><c> anything</c><00:02:19.120><c> about</c><00:02:19.599><c> this</c>

00:02:19.910 --> 00:02:19.920 align:start position:0%
do you notice anything about this
 

00:02:19.920 --> 00:02:21.030 align:start position:0%
do you notice anything about this
subarray<00:02:20.560><c> well</c>

00:02:21.030 --> 00:02:21.040 align:start position:0%
subarray well
 

00:02:21.040 --> 00:02:23.510 align:start position:0%
subarray well
all<00:02:21.440><c> elements</c><00:02:22.000><c> are</c><00:02:22.319><c> positive</c><00:02:22.879><c> so</c><00:02:23.120><c> what</c><00:02:23.280><c> does</c>

00:02:23.510 --> 00:02:23.520 align:start position:0%
all elements are positive so what does
 

00:02:23.520 --> 00:02:24.790 align:start position:0%
all elements are positive so what does
that<00:02:24.000><c> end</c><00:02:24.239><c> up</c>

00:02:24.790 --> 00:02:24.800 align:start position:0%
that end up
 

00:02:24.800 --> 00:02:27.110 align:start position:0%
that end up
doing<00:02:25.280><c> like</c><00:02:25.520><c> this</c><00:02:25.760><c> is</c><00:02:26.000><c> all</c><00:02:26.239><c> positive</c><00:02:26.800><c> so</c><00:02:26.959><c> we</c>

00:02:27.110 --> 00:02:27.120 align:start position:0%
doing like this is all positive so we
 

00:02:27.120 --> 00:02:28.390 align:start position:0%
doing like this is all positive so we
got<00:02:27.360><c> a</c><00:02:27.520><c> one</c>

00:02:28.390 --> 00:02:28.400 align:start position:0%
got a one
 

00:02:28.400 --> 00:02:30.949 align:start position:0%
got a one
okay<00:02:29.040><c> and</c><00:02:29.680><c> next</c><00:02:30.000><c> we</c><00:02:30.080><c> want</c><00:02:30.239><c> to</c><00:02:30.319><c> check</c><00:02:30.560><c> this</c><00:02:30.720><c> sub</c>

00:02:30.949 --> 00:02:30.959 align:start position:0%
okay and next we want to check this sub
 

00:02:30.959 --> 00:02:32.869 align:start position:0%
okay and next we want to check this sub
array<00:02:31.120><c> okay</c><00:02:31.440><c> multiply</c><00:02:31.840><c> it</c><00:02:32.000><c> by</c><00:02:32.239><c> two</c>

00:02:32.869 --> 00:02:32.879 align:start position:0%
array okay multiply it by two
 

00:02:32.879 --> 00:02:35.670 align:start position:0%
array okay multiply it by two
we<00:02:33.040><c> want</c><00:02:33.200><c> to</c><00:02:33.280><c> go</c><00:02:33.599><c> even</c><00:02:34.080><c> farther</c><00:02:35.040><c> check</c><00:02:35.519><c> the</c>

00:02:35.670 --> 00:02:35.680 align:start position:0%
we want to go even farther check the
 

00:02:35.680 --> 00:02:35.990 align:start position:0%
we want to go even farther check the
three

00:02:35.990 --> 00:02:36.000 align:start position:0%
three
 

00:02:36.000 --> 00:02:38.710 align:start position:0%
three
okay<00:02:36.239><c> multiply</c><00:02:36.640><c> it</c><00:02:36.800><c> by</c><00:02:37.120><c> three</c><00:02:37.840><c> and</c><00:02:38.160><c> what</c><00:02:38.319><c> if</c><00:02:38.480><c> we</c>

00:02:38.710 --> 00:02:38.720 align:start position:0%
okay multiply it by three and what if we
 

00:02:38.720 --> 00:02:41.190 align:start position:0%
okay multiply it by three and what if we
kept<00:02:39.040><c> having</c><00:02:39.440><c> positive</c><00:02:39.920><c> elements</c><00:02:40.400><c> four</c>

00:02:41.190 --> 00:02:41.200 align:start position:0%
kept having positive elements four
 

00:02:41.200 --> 00:02:44.710 align:start position:0%
kept having positive elements four
five<00:02:42.000><c> multiply</c><00:02:42.480><c> by</c><00:02:42.720><c> four</c><00:02:43.120><c> multiply</c><00:02:43.599><c> by</c><00:02:43.920><c> five</c>

00:02:44.710 --> 00:02:44.720 align:start position:0%
five multiply by four multiply by five
 

00:02:44.720 --> 00:02:47.350 align:start position:0%
five multiply by four multiply by five
do<00:02:44.879><c> you</c><00:02:45.040><c> notice</c><00:02:45.440><c> something</c><00:02:46.480><c> up</c><00:02:46.640><c> until</c><00:02:47.040><c> this</c>

00:02:47.350 --> 00:02:47.360 align:start position:0%
do you notice something up until this
 

00:02:47.360 --> 00:02:49.350 align:start position:0%
do you notice something up until this
point<00:02:47.680><c> our</c><00:02:47.920><c> product</c><00:02:48.319><c> is</c><00:02:48.480><c> going</c><00:02:48.560><c> to</c><00:02:48.640><c> be</c><00:02:48.800><c> a</c><00:02:48.959><c> one</c>

00:02:49.350 --> 00:02:49.360 align:start position:0%
point our product is going to be a one
 

00:02:49.360 --> 00:02:50.949 align:start position:0%
point our product is going to be a one
up<00:02:49.519><c> until</c><00:02:49.840><c> this</c><00:02:50.080><c> point</c><00:02:50.319><c> it's</c><00:02:50.480><c> going</c><00:02:50.560><c> to</c><00:02:50.640><c> be</c><00:02:50.800><c> a</c>

00:02:50.949 --> 00:02:50.959 align:start position:0%
up until this point it's going to be a
 

00:02:50.959 --> 00:02:53.270 align:start position:0%
up until this point it's going to be a
two<00:02:51.599><c> up</c><00:02:51.840><c> until</c><00:02:52.239><c> this</c><00:02:52.480><c> point</c><00:02:52.720><c> it's</c><00:02:52.879><c> going</c><00:02:53.040><c> to</c><00:02:53.120><c> be</c>

00:02:53.270 --> 00:02:53.280 align:start position:0%
two up until this point it's going to be
 

00:02:53.280 --> 00:02:54.150 align:start position:0%
two up until this point it's going to be
a<00:02:53.519><c> six</c>

00:02:54.150 --> 00:02:54.160 align:start position:0%
a six
 

00:02:54.160 --> 00:02:55.750 align:start position:0%
a six
up<00:02:54.319><c> until</c><00:02:54.640><c> this</c><00:02:54.959><c> point</c><00:02:55.120><c> it's</c><00:02:55.280><c> going</c><00:02:55.360><c> to</c><00:02:55.440><c> be</c><00:02:55.599><c> a</c>

00:02:55.750 --> 00:02:55.760 align:start position:0%
up until this point it's going to be a
 

00:02:55.760 --> 00:02:58.149 align:start position:0%
up until this point it's going to be a
24<00:02:56.800><c> up</c><00:02:56.959><c> until</c><00:02:57.200><c> this</c><00:02:57.440><c> point</c><00:02:57.599><c> is</c><00:02:57.680><c> going</c><00:02:57.840><c> to</c><00:02:57.920><c> be</c>

00:02:58.149 --> 00:02:58.159 align:start position:0%
24 up until this point is going to be
 

00:02:58.159 --> 00:02:59.030 align:start position:0%
24 up until this point is going to be
120.

00:02:59.030 --> 00:02:59.040 align:start position:0%
120.
 

00:02:59.040 --> 00:03:02.309 align:start position:0%
120.
if<00:02:59.440><c> we</c><00:02:59.680><c> have</c><00:03:00.159><c> positive</c><00:03:00.879><c> numbers</c><00:03:01.599><c> no</c><00:03:01.920><c> matter</c>

00:03:02.309 --> 00:03:02.319 align:start position:0%
if we have positive numbers no matter
 

00:03:02.319 --> 00:03:02.710 align:start position:0%
if we have positive numbers no matter
what

00:03:02.710 --> 00:03:02.720 align:start position:0%
what
 

00:03:02.720 --> 00:03:05.830 align:start position:0%
what
happens<00:03:03.760><c> they're</c><00:03:04.000><c> going</c><00:03:04.159><c> to</c><00:03:04.400><c> keep</c><00:03:04.959><c> increasing</c>

00:03:05.830 --> 00:03:05.840 align:start position:0%
happens they're going to keep increasing
 

00:03:05.840 --> 00:03:06.390 align:start position:0%
happens they're going to keep increasing
right

00:03:06.390 --> 00:03:06.400 align:start position:0%
right
 

00:03:06.400 --> 00:03:08.949 align:start position:0%
right
so<00:03:06.640><c> this</c><00:03:06.879><c> is</c><00:03:07.040><c> the</c><00:03:07.280><c> simple</c><00:03:07.680><c> case</c><00:03:08.000><c> if</c><00:03:08.159><c> we</c><00:03:08.319><c> get</c><00:03:08.640><c> all</c>

00:03:08.949 --> 00:03:08.959 align:start position:0%
so this is the simple case if we get all
 

00:03:08.959 --> 00:03:10.309 align:start position:0%
so this is the simple case if we get all
positive<00:03:09.440><c> numbers</c>

00:03:10.309 --> 00:03:10.319 align:start position:0%
positive numbers
 

00:03:10.319 --> 00:03:12.630 align:start position:0%
positive numbers
then<00:03:10.640><c> our</c><00:03:10.879><c> product</c><00:03:11.280><c> is</c><00:03:11.599><c> always</c><00:03:12.080><c> going</c><00:03:12.239><c> to</c><00:03:12.319><c> be</c>

00:03:12.630 --> 00:03:12.640 align:start position:0%
then our product is always going to be
 

00:03:12.640 --> 00:03:13.830 align:start position:0%
then our product is always going to be
increasing

00:03:13.830 --> 00:03:13.840 align:start position:0%
increasing
 

00:03:13.840 --> 00:03:15.830 align:start position:0%
increasing
so<00:03:14.159><c> now</c><00:03:14.400><c> let's</c><00:03:14.640><c> actually</c><00:03:15.120><c> look</c><00:03:15.360><c> at</c><00:03:15.519><c> the</c>

00:03:15.830 --> 00:03:15.840 align:start position:0%
so now let's actually look at the
 

00:03:15.840 --> 00:03:18.149 align:start position:0%
so now let's actually look at the
opposite<00:03:16.560><c> scenario</c><00:03:17.200><c> what</c><00:03:17.360><c> if</c><00:03:17.519><c> we</c><00:03:17.680><c> had</c>

00:03:18.149 --> 00:03:18.159 align:start position:0%
opposite scenario what if we had
 

00:03:18.159 --> 00:03:20.070 align:start position:0%
opposite scenario what if we had
all<00:03:18.640><c> negative</c><00:03:19.040><c> numbers</c><00:03:19.440><c> because</c><00:03:19.840><c> all</c>

00:03:20.070 --> 00:03:20.080 align:start position:0%
all negative numbers because all
 

00:03:20.080 --> 00:03:22.149 align:start position:0%
all negative numbers because all
positives<00:03:20.720><c> is</c><00:03:20.879><c> easy</c><00:03:21.200><c> you</c><00:03:21.360><c> just</c><00:03:21.519><c> multiply</c>

00:03:22.149 --> 00:03:22.159 align:start position:0%
positives is easy you just multiply
 

00:03:22.159 --> 00:03:23.990 align:start position:0%
positives is easy you just multiply
all<00:03:22.319><c> of</c><00:03:22.480><c> them</c><00:03:22.640><c> and</c><00:03:22.720><c> you</c><00:03:22.800><c> get</c><00:03:22.959><c> the</c><00:03:23.040><c> max</c><00:03:23.440><c> product</c>

00:03:23.990 --> 00:03:24.000 align:start position:0%
all of them and you get the max product
 

00:03:24.000 --> 00:03:26.070 align:start position:0%
all of them and you get the max product
but<00:03:24.159><c> with</c><00:03:24.480><c> negative</c><00:03:24.879><c> numbers</c><00:03:25.280><c> it's</c><00:03:25.519><c> a</c><00:03:25.760><c> lot</c>

00:03:26.070 --> 00:03:26.080 align:start position:0%
but with negative numbers it's a lot
 

00:03:26.080 --> 00:03:27.190 align:start position:0%
but with negative numbers it's a lot
more<00:03:26.400><c> tricky</c>

00:03:27.190 --> 00:03:27.200 align:start position:0%
more tricky
 

00:03:27.200 --> 00:03:29.670 align:start position:0%
more tricky
so<00:03:27.760><c> let's</c><00:03:28.000><c> look</c><00:03:28.239><c> at</c><00:03:28.400><c> the</c><00:03:28.560><c> first</c><00:03:28.879><c> number</c><00:03:29.200><c> so</c><00:03:29.519><c> up</c>

00:03:29.670 --> 00:03:29.680 align:start position:0%
so let's look at the first number so up
 

00:03:29.680 --> 00:03:31.990 align:start position:0%
so let's look at the first number so up
until<00:03:30.000><c> here</c><00:03:30.319><c> the</c><00:03:30.480><c> max</c><00:03:30.879><c> product</c><00:03:31.280><c> is</c><00:03:31.519><c> just</c>

00:03:31.990 --> 00:03:32.000 align:start position:0%
until here the max product is just
 

00:03:32.000 --> 00:03:35.430 align:start position:0%
until here the max product is just
negative<00:03:32.400><c> one</c><00:03:33.120><c> and</c><00:03:33.360><c> then</c><00:03:34.000><c> we</c><00:03:34.560><c> we</c><00:03:34.799><c> add</c>

00:03:35.430 --> 00:03:35.440 align:start position:0%
negative one and then we we add
 

00:03:35.440 --> 00:03:38.229 align:start position:0%
negative one and then we we add
a<00:03:35.599><c> second</c><00:03:36.000><c> element</c><00:03:36.480><c> a</c><00:03:36.640><c> negative</c><00:03:37.200><c> two</c><00:03:37.920><c> and</c><00:03:38.000><c> then</c>

00:03:38.229 --> 00:03:38.239 align:start position:0%
a second element a negative two and then
 

00:03:38.239 --> 00:03:39.430 align:start position:0%
a second element a negative two and then
what<00:03:38.400><c> do</c><00:03:38.560><c> we</c><00:03:38.720><c> get</c><00:03:38.959><c> we</c><00:03:39.120><c> get</c>

00:03:39.430 --> 00:03:39.440 align:start position:0%
what do we get we get
 

00:03:39.440 --> 00:03:42.630 align:start position:0%
what do we get we get
negative<00:03:39.920><c> one</c><00:03:40.400><c> times</c><00:03:40.799><c> negative</c><00:03:41.280><c> two</c><00:03:42.000><c> and</c>

00:03:42.630 --> 00:03:42.640 align:start position:0%
negative one times negative two and
 

00:03:42.640 --> 00:03:45.670 align:start position:0%
negative one times negative two and
we<00:03:42.959><c> know</c><00:03:43.360><c> that</c><00:03:43.680><c> the</c><00:03:43.920><c> product</c><00:03:44.319><c> of</c><00:03:44.480><c> that</c><00:03:44.959><c> is</c>

00:03:45.670 --> 00:03:45.680 align:start position:0%
we know that the product of that is
 

00:03:45.680 --> 00:03:49.110 align:start position:0%
we know that the product of that is
two<00:03:46.319><c> right</c><00:03:46.720><c> positive</c><00:03:47.519><c> two</c><00:03:48.239><c> now</c><00:03:48.400><c> the</c><00:03:48.640><c> last</c><00:03:48.959><c> sub</c>

00:03:49.110 --> 00:03:49.120 align:start position:0%
two right positive two now the last sub
 

00:03:49.120 --> 00:03:49.910 align:start position:0%
two right positive two now the last sub
array<00:03:49.360><c> we</c><00:03:49.599><c> check</c>

00:03:49.910 --> 00:03:49.920 align:start position:0%
array we check
 

00:03:49.920 --> 00:03:52.470 align:start position:0%
array we check
from<00:03:50.400><c> all</c><00:03:50.560><c> the</c><00:03:50.640><c> way</c><00:03:50.879><c> from</c><00:03:51.200><c> negative</c><00:03:51.680><c> one</c><00:03:52.159><c> to</c>

00:03:52.470 --> 00:03:52.480 align:start position:0%
from all the way from negative one to
 

00:03:52.480 --> 00:03:53.110 align:start position:0%
from all the way from negative one to
negative

00:03:53.110 --> 00:03:53.120 align:start position:0%
negative
 

00:03:53.120 --> 00:03:55.750 align:start position:0%
negative
three<00:03:53.519><c> so</c><00:03:53.680><c> we</c><00:03:53.920><c> introduce</c><00:03:54.480><c> one</c><00:03:54.720><c> more</c><00:03:54.959><c> value</c><00:03:55.519><c> a</c>

00:03:55.750 --> 00:03:55.760 align:start position:0%
three so we introduce one more value a
 

00:03:55.760 --> 00:03:56.309 align:start position:0%
three so we introduce one more value a
negative

00:03:56.309 --> 00:03:56.319 align:start position:0%
negative
 

00:03:56.319 --> 00:03:59.589 align:start position:0%
negative
three<00:03:57.040><c> and</c><00:03:57.280><c> now</c><00:03:57.599><c> if</c><00:03:57.760><c> we</c><00:03:58.080><c> multiply</c><00:03:58.879><c> all</c><00:03:59.280><c> three</c>

00:03:59.589 --> 00:03:59.599 align:start position:0%
three and now if we multiply all three
 

00:03:59.599 --> 00:03:59.990 align:start position:0%
three and now if we multiply all three
of<00:03:59.680><c> these</c>

00:03:59.990 --> 00:04:00.000 align:start position:0%
of these
 

00:04:00.000 --> 00:04:02.949 align:start position:0%
of these
numbers<00:04:00.400><c> together</c><00:04:00.879><c> we</c><00:04:01.200><c> see</c><00:04:01.599><c> that</c><00:04:01.920><c> our</c><00:04:02.319><c> product</c>

00:04:02.949 --> 00:04:02.959 align:start position:0%
numbers together we see that our product
 

00:04:02.959 --> 00:04:04.149 align:start position:0%
numbers together we see that our product
actually<00:04:03.599><c> got</c>

00:04:04.149 --> 00:04:04.159 align:start position:0%
actually got
 

00:04:04.159 --> 00:04:07.589 align:start position:0%
actually got
smaller<00:04:05.200><c> now</c><00:04:05.439><c> it's</c><00:04:05.760><c> negative</c><00:04:06.480><c> six</c><00:04:07.040><c> and</c><00:04:07.280><c> what's</c>

00:04:07.589 --> 00:04:07.599 align:start position:0%
smaller now it's negative six and what's
 

00:04:07.599 --> 00:04:08.470 align:start position:0%
smaller now it's negative six and what's
going<00:04:07.760><c> to</c><00:04:07.920><c> happen</c>

00:04:08.470 --> 00:04:08.480 align:start position:0%
going to happen
 

00:04:08.480 --> 00:04:11.350 align:start position:0%
going to happen
if<00:04:08.720><c> we</c><00:04:08.959><c> had</c><00:04:09.360><c> a</c><00:04:09.840><c> another</c><00:04:10.400><c> element</c><00:04:10.879><c> over</c><00:04:11.120><c> here</c>

00:04:11.350 --> 00:04:11.360 align:start position:0%
if we had a another element over here
 

00:04:11.360 --> 00:04:13.509 align:start position:0%
if we had a another element over here
what<00:04:11.519><c> if</c><00:04:11.680><c> we</c><00:04:11.840><c> had</c><00:04:12.159><c> a</c><00:04:12.400><c> negative</c><00:04:12.879><c> four</c>

00:04:13.509 --> 00:04:13.519 align:start position:0%
what if we had a negative four
 

00:04:13.519 --> 00:04:16.789 align:start position:0%
what if we had a negative four
then<00:04:13.760><c> we</c><00:04:14.000><c> multiply</c><00:04:14.959><c> by</c><00:04:15.280><c> negative</c><00:04:15.920><c> 4</c>

00:04:16.789 --> 00:04:16.799 align:start position:0%
then we multiply by negative 4
 

00:04:16.799 --> 00:04:20.710 align:start position:0%
then we multiply by negative 4
and<00:04:17.680><c> now</c><00:04:17.919><c> we</c><00:04:18.160><c> see</c><00:04:19.040><c> that</c><00:04:19.600><c> our</c><00:04:19.919><c> product</c><00:04:20.400><c> is</c><00:04:20.560><c> going</c>

00:04:20.710 --> 00:04:20.720 align:start position:0%
and now we see that our product is going
 

00:04:20.720 --> 00:04:21.110 align:start position:0%
and now we see that our product is going
to<00:04:20.799><c> be</c>

00:04:21.110 --> 00:04:21.120 align:start position:0%
to be
 

00:04:21.120 --> 00:04:24.150 align:start position:0%
to be
24.<00:04:22.160><c> so</c><00:04:22.400><c> you</c><00:04:22.720><c> see</c><00:04:23.040><c> that</c><00:04:23.280><c> when</c><00:04:23.440><c> you</c><00:04:23.600><c> have</c>

00:04:24.150 --> 00:04:24.160 align:start position:0%
24. so you see that when you have
 

00:04:24.160 --> 00:04:28.390 align:start position:0%
24. so you see that when you have
negatives<00:04:25.240><c> consecutively</c><00:04:26.880><c> the</c><00:04:27.199><c> sign</c><00:04:27.919><c> is</c>

00:04:28.390 --> 00:04:28.400 align:start position:0%
negatives consecutively the sign is
 

00:04:28.400 --> 00:04:33.270 align:start position:0%
negatives consecutively the sign is
alternating<00:04:30.479><c> so</c><00:04:30.960><c> when</c><00:04:31.120><c> you</c><00:04:31.360><c> want</c><00:04:31.600><c> the</c><00:04:31.919><c> maximum</c>

00:04:33.270 --> 00:04:33.280 align:start position:0%
alternating so when you want the maximum
 

00:04:33.280 --> 00:04:35.189 align:start position:0%
alternating so when you want the maximum
it<00:04:33.440><c> makes</c><00:04:33.759><c> it</c><00:04:33.840><c> kind</c><00:04:34.000><c> of</c><00:04:34.240><c> tricky</c><00:04:34.720><c> to</c><00:04:34.880><c> have</c>

00:04:35.189 --> 00:04:35.199 align:start position:0%
it makes it kind of tricky to have
 

00:04:35.199 --> 00:04:37.430 align:start position:0%
it makes it kind of tricky to have
negatives<00:04:35.919><c> but</c><00:04:36.160><c> we</c><00:04:36.479><c> also</c><00:04:36.880><c> see</c><00:04:37.120><c> that</c>

00:04:37.430 --> 00:04:37.440 align:start position:0%
negatives but we also see that
 

00:04:37.440 --> 00:04:40.070 align:start position:0%
negatives but we also see that
even<00:04:38.000><c> though</c><00:04:38.320><c> we</c><00:04:38.479><c> got</c><00:04:38.639><c> a</c><00:04:38.880><c> negative</c><00:04:39.440><c> six</c><00:04:39.840><c> over</c>

00:04:40.070 --> 00:04:40.080 align:start position:0%
even though we got a negative six over
 

00:04:40.080 --> 00:04:40.469 align:start position:0%
even though we got a negative six over
here

00:04:40.469 --> 00:04:40.479 align:start position:0%
here
 

00:04:40.479 --> 00:04:43.430 align:start position:0%
here
there's<00:04:40.960><c> actually</c><00:04:41.600><c> a</c><00:04:41.919><c> subarray</c><00:04:42.800><c> that</c><00:04:42.960><c> has</c><00:04:43.199><c> a</c>

00:04:43.430 --> 00:04:43.440 align:start position:0%
there's actually a subarray that has a
 

00:04:43.440 --> 00:04:45.030 align:start position:0%
there's actually a subarray that has a
better<00:04:43.759><c> solution</c><00:04:44.240><c> if</c><00:04:44.320><c> you</c><00:04:44.479><c> just</c><00:04:44.720><c> take</c>

00:04:45.030 --> 00:04:45.040 align:start position:0%
better solution if you just take
 

00:04:45.040 --> 00:04:47.350 align:start position:0%
better solution if you just take
these<00:04:45.440><c> two</c><00:04:45.680><c> numbers</c><00:04:46.400><c> negative</c><00:04:46.800><c> two</c><00:04:47.040><c> times</c>

00:04:47.350 --> 00:04:47.360 align:start position:0%
these two numbers negative two times
 

00:04:47.360 --> 00:04:48.950 align:start position:0%
these two numbers negative two times
negative<00:04:47.840><c> three</c><00:04:48.160><c> we</c><00:04:48.320><c> get</c><00:04:48.560><c> a</c>

00:04:48.950 --> 00:04:48.960 align:start position:0%
negative three we get a
 

00:04:48.960 --> 00:04:51.590 align:start position:0%
negative three we get a
positive<00:04:49.600><c> six</c><00:04:50.080><c> so</c><00:04:50.479><c> why</c><00:04:50.800><c> did</c><00:04:50.960><c> we</c><00:04:51.120><c> get</c><00:04:51.360><c> a</c>

00:04:51.590 --> 00:04:51.600 align:start position:0%
positive six so why did we get a
 

00:04:51.600 --> 00:04:53.110 align:start position:0%
positive six so why did we get a
negative<00:04:52.080><c> six</c><00:04:52.400><c> over</c><00:04:52.639><c> here</c>

00:04:53.110 --> 00:04:53.120 align:start position:0%
negative six over here
 

00:04:53.120 --> 00:04:56.230 align:start position:0%
negative six over here
how<00:04:53.360><c> can</c><00:04:53.600><c> we</c><00:04:53.919><c> find</c><00:04:54.320><c> the</c><00:04:54.720><c> real</c><00:04:55.199><c> maximum</c><00:04:56.000><c> which</c>

00:04:56.230 --> 00:04:56.240 align:start position:0%
how can we find the real maximum which
 

00:04:56.240 --> 00:04:56.629 align:start position:0%
how can we find the real maximum which
is

00:04:56.629 --> 00:04:56.639 align:start position:0%
is
 

00:04:56.639 --> 00:04:59.430 align:start position:0%
is
positive<00:04:57.199><c> six</c><00:04:57.919><c> so</c><00:04:58.240><c> even</c><00:04:58.800><c> though</c><00:04:59.120><c> we're</c>

00:04:59.430 --> 00:04:59.440 align:start position:0%
positive six so even though we're
 

00:04:59.440 --> 00:05:00.870 align:start position:0%
positive six so even though we're
looking<00:04:59.759><c> for</c><00:04:59.919><c> the</c><00:05:00.240><c> max</c>

00:05:00.870 --> 00:05:00.880 align:start position:0%
looking for the max
 

00:05:00.880 --> 00:05:03.110 align:start position:0%
looking for the max
product<00:05:01.280><c> sub</c><00:05:01.520><c> array</c><00:05:01.759><c> we're</c><00:05:02.080><c> actually</c><00:05:02.720><c> also</c>

00:05:03.110 --> 00:05:03.120 align:start position:0%
product sub array we're actually also
 

00:05:03.120 --> 00:05:04.950 align:start position:0%
product sub array we're actually also
going<00:05:03.280><c> to</c><00:05:03.360><c> need</c><00:05:03.520><c> to</c><00:05:03.680><c> keep</c><00:05:04.000><c> track</c><00:05:04.400><c> of</c><00:05:04.639><c> the</c>

00:05:04.950 --> 00:05:04.960 align:start position:0%
going to need to keep track of the
 

00:05:04.960 --> 00:05:07.029 align:start position:0%
going to need to keep track of the
minimum<00:05:05.840><c> as</c><00:05:06.080><c> well</c><00:05:06.400><c> and</c><00:05:06.560><c> i'm</c><00:05:06.639><c> going</c><00:05:06.800><c> to</c><00:05:06.880><c> show</c>

00:05:07.029 --> 00:05:07.039 align:start position:0%
minimum as well and i'm going to show
 

00:05:07.039 --> 00:05:08.150 align:start position:0%
minimum as well and i'm going to show
you<00:05:07.360><c> why</c>

00:05:08.150 --> 00:05:08.160 align:start position:0%
you why
 

00:05:08.160 --> 00:05:11.110 align:start position:0%
you why
so<00:05:08.639><c> first</c><00:05:09.280><c> do</c><00:05:09.440><c> you</c><00:05:09.600><c> at</c><00:05:09.840><c> least</c><00:05:10.240><c> agree</c><00:05:10.639><c> with</c><00:05:10.880><c> me</c>

00:05:11.110 --> 00:05:11.120 align:start position:0%
so first do you at least agree with me
 

00:05:11.120 --> 00:05:11.670 align:start position:0%
so first do you at least agree with me
that

00:05:11.670 --> 00:05:11.680 align:start position:0%
that
 

00:05:11.680 --> 00:05:15.029 align:start position:0%
that
if<00:05:12.000><c> we</c><00:05:12.240><c> want</c><00:05:12.400><c> to</c><00:05:12.639><c> find</c><00:05:12.960><c> the</c><00:05:13.360><c> max</c><00:05:13.919><c> product</c><00:05:14.400><c> array</c>

00:05:15.029 --> 00:05:15.039 align:start position:0%
if we want to find the max product array
 

00:05:15.039 --> 00:05:17.830 align:start position:0%
if we want to find the max product array
sub<00:05:15.280><c> array</c><00:05:15.520><c> of</c><00:05:15.840><c> this</c><00:05:16.479><c> of</c><00:05:16.639><c> the</c><00:05:16.960><c> of</c><00:05:17.120><c> the</c><00:05:17.360><c> entire</c>

00:05:17.830 --> 00:05:17.840 align:start position:0%
sub array of this of the of the entire
 

00:05:17.840 --> 00:05:18.390 align:start position:0%
sub array of this of the of the entire
thing

00:05:18.390 --> 00:05:18.400 align:start position:0%
thing
 

00:05:18.400 --> 00:05:21.110 align:start position:0%
thing
it<00:05:18.720><c> might</c><00:05:19.039><c> be</c><00:05:19.280><c> helpful</c><00:05:19.840><c> for</c><00:05:20.160><c> us</c><00:05:20.400><c> to</c><00:05:20.639><c> at</c><00:05:20.800><c> least</c>

00:05:21.110 --> 00:05:21.120 align:start position:0%
it might be helpful for us to at least
 

00:05:21.120 --> 00:05:22.310 align:start position:0%
it might be helpful for us to at least
solve<00:05:21.520><c> the</c><00:05:21.840><c> sub</c>

00:05:22.310 --> 00:05:22.320 align:start position:0%
solve the sub
 

00:05:22.320 --> 00:05:24.310 align:start position:0%
solve the sub
problem<00:05:22.720><c> which</c><00:05:22.960><c> is</c><00:05:23.120><c> the</c><00:05:23.280><c> max</c><00:05:24.000><c> product</c>

00:05:24.310 --> 00:05:24.320 align:start position:0%
problem which is the max product
 

00:05:24.320 --> 00:05:27.110 align:start position:0%
problem which is the max product
subarray<00:05:24.960><c> of</c><00:05:25.199><c> just</c><00:05:25.600><c> the</c><00:05:25.840><c> first</c><00:05:26.160><c> two</c><00:05:26.400><c> elements</c>

00:05:27.110 --> 00:05:27.120 align:start position:0%
subarray of just the first two elements
 

00:05:27.120 --> 00:05:30.710 align:start position:0%
subarray of just the first two elements
first<00:05:27.840><c> and</c><00:05:28.160><c> then</c><00:05:28.960><c> use</c><00:05:29.360><c> that</c><00:05:30.000><c> to</c><00:05:30.240><c> get</c>

00:05:30.710 --> 00:05:30.720 align:start position:0%
first and then use that to get
 

00:05:30.720 --> 00:05:33.990 align:start position:0%
first and then use that to get
the<00:05:30.960><c> entire</c><00:05:31.680><c> one</c><00:05:32.320><c> okay</c><00:05:32.800><c> that</c><00:05:33.039><c> makes</c><00:05:33.360><c> sense</c>

00:05:33.990 --> 00:05:34.000 align:start position:0%
the entire one okay that makes sense
 

00:05:34.000 --> 00:05:36.469 align:start position:0%
the entire one okay that makes sense
we<00:05:34.160><c> know</c><00:05:34.400><c> that</c><00:05:34.560><c> the</c><00:05:34.880><c> max</c><00:05:35.280><c> product</c><00:05:35.759><c> subarray</c><00:05:36.320><c> of</c>

00:05:36.469 --> 00:05:36.479 align:start position:0%
we know that the max product subarray of
 

00:05:36.479 --> 00:05:37.029 align:start position:0%
we know that the max product subarray of
this

00:05:37.029 --> 00:05:37.039 align:start position:0%
this
 

00:05:37.039 --> 00:05:40.230 align:start position:0%
this
is<00:05:37.520><c> two</c><00:05:38.240><c> now</c><00:05:38.479><c> if</c><00:05:38.639><c> we</c><00:05:38.800><c> had</c><00:05:39.039><c> a</c><00:05:39.280><c> positive</c><00:05:39.919><c> three</c>

00:05:40.230 --> 00:05:40.240 align:start position:0%
is two now if we had a positive three
 

00:05:40.240 --> 00:05:41.110 align:start position:0%
is two now if we had a positive three
over<00:05:40.560><c> here</c>

00:05:41.110 --> 00:05:41.120 align:start position:0%
over here
 

00:05:41.120 --> 00:05:44.310 align:start position:0%
over here
then<00:05:41.360><c> we</c><00:05:41.520><c> would</c><00:05:41.759><c> say</c><00:05:42.479><c> okay</c><00:05:43.360><c> if</c><00:05:43.520><c> i</c><00:05:43.680><c> can</c><00:05:43.919><c> get</c><00:05:44.080><c> the</c>

00:05:44.310 --> 00:05:44.320 align:start position:0%
then we would say okay if i can get the
 

00:05:44.320 --> 00:05:46.629 align:start position:0%
then we would say okay if i can get the
max<00:05:44.720><c> sub</c><00:05:44.960><c> array</c><00:05:45.360><c> of</c><00:05:45.520><c> the</c><00:05:45.680><c> first</c><00:05:46.000><c> two</c><00:05:46.160><c> elements</c>

00:05:46.629 --> 00:05:46.639 align:start position:0%
max sub array of the first two elements
 

00:05:46.639 --> 00:05:47.909 align:start position:0%
max sub array of the first two elements
and<00:05:46.800><c> multiply</c><00:05:47.440><c> it</c><00:05:47.600><c> by</c>

00:05:47.909 --> 00:05:47.919 align:start position:0%
and multiply it by
 

00:05:47.919 --> 00:05:50.310 align:start position:0%
and multiply it by
three<00:05:48.400><c> i'm</c><00:05:48.479><c> gonna</c><00:05:48.720><c> get</c><00:05:48.960><c> two</c><00:05:49.199><c> times</c><00:05:49.600><c> three</c><00:05:50.080><c> it</c>

00:05:50.310 --> 00:05:50.320 align:start position:0%
three i'm gonna get two times three it
 

00:05:50.320 --> 00:05:52.790 align:start position:0%
three i'm gonna get two times three it
works<00:05:50.720><c> when</c><00:05:50.880><c> these</c><00:05:51.120><c> are</c><00:05:51.360><c> positive</c><00:05:51.840><c> numbers</c>

00:05:52.790 --> 00:05:52.800 align:start position:0%
works when these are positive numbers
 

00:05:52.800 --> 00:05:55.909 align:start position:0%
works when these are positive numbers
but<00:05:53.039><c> we</c><00:05:53.360><c> actually</c><00:05:53.919><c> have</c><00:05:54.240><c> a</c><00:05:54.560><c> negative</c><00:05:55.120><c> 3</c><00:05:55.600><c> over</c>

00:05:55.909 --> 00:05:55.919 align:start position:0%
but we actually have a negative 3 over
 

00:05:55.919 --> 00:05:56.710 align:start position:0%
but we actually have a negative 3 over
here

00:05:56.710 --> 00:05:56.720 align:start position:0%
here
 

00:05:56.720 --> 00:06:00.390 align:start position:0%
here
so<00:05:56.960><c> i'm</c><00:05:57.199><c> gonna</c><00:05:57.520><c> say</c><00:05:58.240><c> get</c><00:05:58.479><c> the</c><00:05:58.800><c> max</c><00:05:59.600><c> product</c><00:06:00.160><c> sub</c>

00:06:00.390 --> 00:06:00.400 align:start position:0%
so i'm gonna say get the max product sub
 

00:06:00.400 --> 00:06:02.230 align:start position:0%
so i'm gonna say get the max product sub
array<00:06:00.639><c> which</c><00:06:00.880><c> is</c><00:06:01.039><c> positive</c><00:06:01.600><c> 2</c>

00:06:02.230 --> 00:06:02.240 align:start position:0%
array which is positive 2
 

00:06:02.240 --> 00:06:06.469 align:start position:0%
array which is positive 2
but<00:06:02.560><c> let's</c><00:06:03.199><c> also</c><00:06:04.000><c> get</c><00:06:04.560><c> the</c><00:06:05.120><c> the</c><00:06:05.440><c> minimum</c>

00:06:06.469 --> 00:06:06.479 align:start position:0%
but let's also get the the minimum
 

00:06:06.479 --> 00:06:09.670 align:start position:0%
but let's also get the the minimum
product<00:06:06.960><c> sub</c><00:06:07.199><c> array</c><00:06:07.600><c> of</c><00:06:07.759><c> these</c><00:06:08.160><c> two</c><00:06:08.639><c> as</c><00:06:08.960><c> well</c>

00:06:09.670 --> 00:06:09.680 align:start position:0%
product sub array of these two as well
 

00:06:09.680 --> 00:06:12.070 align:start position:0%
product sub array of these two as well
and<00:06:10.000><c> what</c><00:06:10.240><c> do</c><00:06:10.400><c> we</c><00:06:10.639><c> know</c><00:06:11.120><c> about</c><00:06:11.440><c> the</c><00:06:11.600><c> minimum</c>

00:06:12.070 --> 00:06:12.080 align:start position:0%
and what do we know about the minimum
 

00:06:12.080 --> 00:06:12.790 align:start position:0%
and what do we know about the minimum
what's<00:06:12.400><c> the</c>

00:06:12.790 --> 00:06:12.800 align:start position:0%
what's the
 

00:06:12.800 --> 00:06:15.510 align:start position:0%
what's the
minimum<00:06:13.440><c> product</c><00:06:13.840><c> sub</c><00:06:14.080><c> array</c><00:06:14.319><c> of</c><00:06:14.479><c> these</c><00:06:14.800><c> two</c>

00:06:15.510 --> 00:06:15.520 align:start position:0%
minimum product sub array of these two
 

00:06:15.520 --> 00:06:16.950 align:start position:0%
minimum product sub array of these two
it's<00:06:15.840><c> going</c><00:06:16.000><c> to</c><00:06:16.080><c> be</c>

00:06:16.950 --> 00:06:16.960 align:start position:0%
it's going to be
 

00:06:16.960 --> 00:06:20.469 align:start position:0%
it's going to be
negative<00:06:17.840><c> two</c><00:06:18.639><c> so</c><00:06:19.039><c> i'm</c><00:06:19.199><c> going</c><00:06:19.360><c> to</c><00:06:19.600><c> keep</c><00:06:19.919><c> track</c>

00:06:20.469 --> 00:06:20.479 align:start position:0%
negative two so i'm going to keep track
 

00:06:20.479 --> 00:06:23.830 align:start position:0%
negative two so i'm going to keep track
of<00:06:21.199><c> both</c><00:06:21.919><c> positive</c><00:06:22.880><c> and</c><00:06:23.280><c> negative</c>

00:06:23.830 --> 00:06:23.840 align:start position:0%
of both positive and negative
 

00:06:23.840 --> 00:06:26.390 align:start position:0%
of both positive and negative
so<00:06:24.000><c> we</c><00:06:24.160><c> have</c><00:06:24.319><c> a</c><00:06:24.560><c> positive</c><00:06:25.120><c> 2</c><00:06:25.520><c> and</c><00:06:25.759><c> a</c><00:06:25.919><c> negative</c>

00:06:26.390 --> 00:06:26.400 align:start position:0%
so we have a positive 2 and a negative
 

00:06:26.400 --> 00:06:27.189 align:start position:0%
so we have a positive 2 and a negative
2.

00:06:27.189 --> 00:06:27.199 align:start position:0%
2.
 

00:06:27.199 --> 00:06:30.309 align:start position:0%
2.
we<00:06:27.440><c> keep</c><00:06:27.680><c> the</c><00:06:28.000><c> max</c><00:06:29.039><c> and</c><00:06:29.360><c> we</c><00:06:29.680><c> keep</c>

00:06:30.309 --> 00:06:30.319 align:start position:0%
we keep the max and we keep
 

00:06:30.319 --> 00:06:33.110 align:start position:0%
we keep the max and we keep
the<00:06:30.560><c> minimum</c><00:06:31.600><c> so</c><00:06:31.919><c> now</c><00:06:32.240><c> when</c><00:06:32.400><c> we</c><00:06:32.560><c> want</c><00:06:32.720><c> to</c>

00:06:33.110 --> 00:06:33.120 align:start position:0%
the minimum so now when we want to
 

00:06:33.120 --> 00:06:35.350 align:start position:0%
the minimum so now when we want to
compute<00:06:33.520><c> the</c><00:06:33.759><c> max</c><00:06:34.240><c> product</c><00:06:34.560><c> subarray</c>

00:06:35.350 --> 00:06:35.360 align:start position:0%
compute the max product subarray
 

00:06:35.360 --> 00:06:38.710 align:start position:0%
compute the max product subarray
when<00:06:35.600><c> we</c><00:06:35.919><c> include</c><00:06:36.560><c> this</c><00:06:36.880><c> 3</c><00:06:37.680><c> then</c>

00:06:38.710 --> 00:06:38.720 align:start position:0%
when we include this 3 then
 

00:06:38.720 --> 00:06:41.189 align:start position:0%
when we include this 3 then
we<00:06:38.880><c> can</c><00:06:39.039><c> compute</c><00:06:39.600><c> that</c><00:06:40.240><c> we</c><00:06:40.400><c> can</c><00:06:40.560><c> compute</c><00:06:40.960><c> that</c>

00:06:41.189 --> 00:06:41.199 align:start position:0%
we can compute that we can compute that
 

00:06:41.199 --> 00:06:42.150 align:start position:0%
we can compute that we can compute that
using

00:06:42.150 --> 00:06:42.160 align:start position:0%
using
 

00:06:42.160 --> 00:06:45.670 align:start position:0%
using
both<00:06:42.720><c> of</c><00:06:43.039><c> these</c><00:06:43.600><c> values</c><00:06:44.319><c> so</c><00:06:44.560><c> we</c><00:06:44.800><c> know</c><00:06:45.120><c> that</c>

00:06:45.670 --> 00:06:45.680 align:start position:0%
both of these values so we know that
 

00:06:45.680 --> 00:06:48.309 align:start position:0%
both of these values so we know that
when<00:06:45.840><c> we</c><00:06:46.000><c> take</c><00:06:46.240><c> the</c><00:06:46.479><c> maximum</c><00:06:47.360><c> 2</c><00:06:47.919><c> we</c><00:06:48.080><c> get</c>

00:06:48.309 --> 00:06:48.319 align:start position:0%
when we take the maximum 2 we get
 

00:06:48.319 --> 00:06:48.790 align:start position:0%
when we take the maximum 2 we get
negative

00:06:48.790 --> 00:06:48.800 align:start position:0%
negative
 

00:06:48.800 --> 00:06:51.990 align:start position:0%
negative
3<00:06:49.440><c> times</c><00:06:49.840><c> 2</c><00:06:50.160><c> which</c><00:06:50.400><c> is</c><00:06:50.880><c> negative</c><00:06:51.360><c> 6</c>

00:06:51.990 --> 00:06:52.000 align:start position:0%
3 times 2 which is negative 6
 

00:06:52.000 --> 00:06:54.150 align:start position:0%
3 times 2 which is negative 6
and<00:06:52.160><c> we</c><00:06:52.319><c> know</c><00:06:52.479><c> when</c><00:06:52.639><c> we</c><00:06:52.800><c> take</c><00:06:52.960><c> the</c><00:06:53.199><c> minimum</c><00:06:54.000><c> we</c>

00:06:54.150 --> 00:06:54.160 align:start position:0%
and we know when we take the minimum we
 

00:06:54.160 --> 00:06:55.350 align:start position:0%
and we know when we take the minimum we
get<00:06:54.800><c> we</c><00:06:54.960><c> get</c>

00:06:55.350 --> 00:06:55.360 align:start position:0%
get we get
 

00:06:55.360 --> 00:06:58.469 align:start position:0%
get we get
negative<00:06:55.919><c> 3</c><00:06:56.720><c> times</c><00:06:57.680><c> negative</c>

00:06:58.469 --> 00:06:58.479 align:start position:0%
negative 3 times negative
 

00:06:58.479 --> 00:07:01.589 align:start position:0%
negative 3 times negative
2<00:06:59.360><c> and</c><00:06:59.520><c> that</c><00:06:59.919><c> gives</c><00:07:00.240><c> us</c><00:07:00.880><c> a</c><00:07:01.039><c> result</c>

00:07:01.589 --> 00:07:01.599 align:start position:0%
2 and that gives us a result
 

00:07:01.599 --> 00:07:04.710 align:start position:0%
2 and that gives us a result
of<00:07:02.000><c> positive</c><00:07:02.560><c> six</c><00:07:03.039><c> so</c><00:07:03.280><c> we</c><00:07:03.440><c> know</c><00:07:03.680><c> the</c><00:07:04.000><c> maximum</c>

00:07:04.710 --> 00:07:04.720 align:start position:0%
of positive six so we know the maximum
 

00:07:04.720 --> 00:07:07.830 align:start position:0%
of positive six so we know the maximum
is<00:07:04.960><c> positive</c><00:07:05.520><c> six</c><00:07:06.000><c> and</c><00:07:06.160><c> the</c><00:07:06.479><c> minimum</c><00:07:07.440><c> is</c>

00:07:07.830 --> 00:07:07.840 align:start position:0%
is positive six and the minimum is
 

00:07:07.840 --> 00:07:11.189 align:start position:0%
is positive six and the minimum is
negative<00:07:08.400><c> six</c><00:07:09.120><c> so</c><00:07:09.360><c> we</c><00:07:09.599><c> take</c><00:07:10.240><c> positive</c><00:07:10.800><c> six</c>

00:07:11.189 --> 00:07:11.199 align:start position:0%
negative six so we take positive six
 

00:07:11.199 --> 00:07:13.670 align:start position:0%
negative six so we take positive six
and<00:07:11.360><c> put</c><00:07:11.520><c> it</c><00:07:11.680><c> over</c><00:07:11.840><c> here</c><00:07:12.400><c> and</c><00:07:12.639><c> we</c><00:07:12.800><c> can</c><00:07:12.960><c> take</c>

00:07:13.670 --> 00:07:13.680 align:start position:0%
and put it over here and we can take
 

00:07:13.680 --> 00:07:14.790 align:start position:0%
and put it over here and we can take
negative<00:07:14.240><c> six</c>

00:07:14.790 --> 00:07:14.800 align:start position:0%
negative six
 

00:07:14.800 --> 00:07:17.270 align:start position:0%
negative six
and<00:07:14.960><c> put</c><00:07:15.199><c> it</c><00:07:15.360><c> over</c><00:07:15.599><c> here</c><00:07:16.240><c> and</c><00:07:16.400><c> hypothetically</c>

00:07:17.270 --> 00:07:17.280 align:start position:0%
and put it over here and hypothetically
 

00:07:17.280 --> 00:07:19.110 align:start position:0%
and put it over here and hypothetically
maybe<00:07:17.599><c> we</c><00:07:17.759><c> get</c><00:07:18.000><c> another</c><00:07:18.479><c> element</c>

00:07:19.110 --> 00:07:19.120 align:start position:0%
maybe we get another element
 

00:07:19.120 --> 00:07:21.749 align:start position:0%
maybe we get another element
and<00:07:19.520><c> this</c><00:07:19.840><c> time</c><00:07:20.479><c> and</c><00:07:20.639><c> this</c><00:07:20.880><c> time</c><00:07:21.199><c> whether</c><00:07:21.520><c> it's</c>

00:07:21.749 --> 00:07:21.759 align:start position:0%
and this time and this time whether it's
 

00:07:21.759 --> 00:07:22.469 align:start position:0%
and this time and this time whether it's
positive

00:07:22.469 --> 00:07:22.479 align:start position:0%
positive
 

00:07:22.479 --> 00:07:24.710 align:start position:0%
positive
or<00:07:22.800><c> negative</c><00:07:23.280><c> right</c><00:07:23.520><c> so</c><00:07:23.759><c> in</c><00:07:24.240><c> this</c><00:07:24.319><c> case</c><00:07:24.560><c> let's</c>

00:07:24.710 --> 00:07:24.720 align:start position:0%
or negative right so in this case let's
 

00:07:24.720 --> 00:07:25.909 align:start position:0%
or negative right so in this case let's
say<00:07:24.880><c> it's</c><00:07:25.039><c> negative</c><00:07:25.440><c> 4</c>

00:07:25.909 --> 00:07:25.919 align:start position:0%
say it's negative 4
 

00:07:25.919 --> 00:07:27.670 align:start position:0%
say it's negative 4
we<00:07:26.160><c> will</c><00:07:26.319><c> be</c><00:07:26.479><c> able</c><00:07:26.639><c> to</c><00:07:26.800><c> find</c><00:07:27.120><c> the</c><00:07:27.199><c> solution</c>

00:07:27.670 --> 00:07:27.680 align:start position:0%
we will be able to find the solution
 

00:07:27.680 --> 00:07:29.029 align:start position:0%
we will be able to find the solution
because<00:07:28.639><c> the</c>

00:07:29.029 --> 00:07:29.039 align:start position:0%
because the
 

00:07:29.039 --> 00:07:31.189 align:start position:0%
because the
minimum<00:07:29.759><c> or</c><00:07:30.000><c> rather</c><00:07:30.400><c> we're</c><00:07:30.720><c> looking</c><00:07:30.960><c> for</c><00:07:31.120><c> the</c>

00:07:31.189 --> 00:07:31.199 align:start position:0%
minimum or rather we're looking for the
 

00:07:31.199 --> 00:07:32.710 align:start position:0%
minimum or rather we're looking for the
max<00:07:31.599><c> product</c><00:07:32.000><c> sub</c><00:07:32.240><c> array</c>

00:07:32.710 --> 00:07:32.720 align:start position:0%
max product sub array
 

00:07:32.720 --> 00:07:35.270 align:start position:0%
max product sub array
and<00:07:32.960><c> we</c><00:07:33.120><c> know</c><00:07:33.280><c> if</c><00:07:33.360><c> we</c><00:07:33.520><c> take</c><00:07:33.840><c> negative</c><00:07:34.319><c> four</c>

00:07:35.270 --> 00:07:35.280 align:start position:0%
and we know if we take negative four
 

00:07:35.280 --> 00:07:36.550 align:start position:0%
and we know if we take negative four
multiply<00:07:35.919><c> it</c><00:07:36.160><c> by</c>

00:07:36.550 --> 00:07:36.560 align:start position:0%
multiply it by
 

00:07:36.560 --> 00:07:39.110 align:start position:0%
multiply it by
the<00:07:36.960><c> current</c><00:07:37.520><c> minimum</c><00:07:38.000><c> which</c><00:07:38.240><c> is</c><00:07:38.400><c> a</c><00:07:38.639><c> negative</c>

00:07:39.110 --> 00:07:39.120 align:start position:0%
the current minimum which is a negative
 

00:07:39.120 --> 00:07:39.909 align:start position:0%
the current minimum which is a negative
number

00:07:39.909 --> 00:07:39.919 align:start position:0%
number
 

00:07:39.919 --> 00:07:43.270 align:start position:0%
number
negative<00:07:40.400><c> six</c><00:07:41.039><c> we</c><00:07:41.199><c> will</c><00:07:41.440><c> end</c><00:07:41.680><c> up</c><00:07:41.840><c> getting</c><00:07:42.160><c> 24</c>

00:07:43.270 --> 00:07:43.280 align:start position:0%
negative six we will end up getting 24
 

00:07:43.280 --> 00:07:45.430 align:start position:0%
negative six we will end up getting 24
which<00:07:43.520><c> is</c><00:07:43.599><c> what</c><00:07:43.759><c> we're</c><00:07:44.000><c> looking</c><00:07:44.400><c> for</c><00:07:45.039><c> but</c><00:07:45.280><c> if</c>

00:07:45.430 --> 00:07:45.440 align:start position:0%
which is what we're looking for but if
 

00:07:45.440 --> 00:07:47.510 align:start position:0%
which is what we're looking for but if
you<00:07:45.759><c> reverse</c><00:07:46.240><c> it</c><00:07:46.400><c> what</c><00:07:46.639><c> if</c><00:07:46.720><c> we</c><00:07:46.879><c> had</c><00:07:47.120><c> a</c>

00:07:47.510 --> 00:07:47.520 align:start position:0%
you reverse it what if we had a
 

00:07:47.520 --> 00:07:50.230 align:start position:0%
you reverse it what if we had a
positive<00:07:48.080><c> 4</c><00:07:48.400><c> here</c><00:07:48.720><c> instead</c><00:07:49.360><c> well</c><00:07:49.680><c> in</c><00:07:49.919><c> that</c>

00:07:50.230 --> 00:07:50.240 align:start position:0%
positive 4 here instead well in that
 

00:07:50.240 --> 00:07:51.589 align:start position:0%
positive 4 here instead well in that
case<00:07:50.560><c> we</c><00:07:50.720><c> can</c><00:07:50.960><c> say</c><00:07:51.199><c> okay</c>

00:07:51.589 --> 00:07:51.599 align:start position:0%
case we can say okay
 

00:07:51.599 --> 00:07:54.869 align:start position:0%
case we can say okay
positive<00:07:52.160><c> 4</c><00:07:53.039><c> multiplied</c><00:07:54.000><c> by</c><00:07:54.400><c> our</c>

00:07:54.869 --> 00:07:54.879 align:start position:0%
positive 4 multiplied by our
 

00:07:54.879 --> 00:07:58.150 align:start position:0%
positive 4 multiplied by our
maximum<00:07:56.240><c> right</c><00:07:56.639><c> our</c><00:07:56.960><c> maximum</c><00:07:57.440><c> which</c><00:07:57.680><c> is</c>

00:07:58.150 --> 00:07:58.160 align:start position:0%
maximum right our maximum which is
 

00:07:58.160 --> 00:08:01.909 align:start position:0%
maximum right our maximum which is
positive<00:07:58.800><c> 6.</c><00:07:59.440><c> so</c><00:07:59.840><c> 4</c><00:08:00.240><c> times</c><00:08:00.639><c> positive</c><00:08:01.120><c> 6</c>

00:08:01.909 --> 00:08:01.919 align:start position:0%
positive 6. so 4 times positive 6
 

00:08:01.919 --> 00:08:06.629 align:start position:0%
positive 6. so 4 times positive 6
we<00:08:02.080><c> get</c><00:08:02.479><c> 24.</c><00:08:03.759><c> we</c><00:08:04.000><c> still</c><00:08:04.400><c> get</c><00:08:04.639><c> it</c><00:08:04.800><c> right</c><00:08:05.039><c> so</c><00:08:05.360><c> this</c>

00:08:06.629 --> 00:08:06.639 align:start position:0%
we get 24. we still get it right so this
 

00:08:06.639 --> 00:08:08.950 align:start position:0%
we get 24. we still get it right so this
if<00:08:06.720><c> we</c><00:08:06.879><c> maintain</c><00:08:07.360><c> the</c><00:08:07.520><c> maximum</c><00:08:08.479><c> and</c><00:08:08.800><c> the</c>

00:08:08.950 --> 00:08:08.960 align:start position:0%
if we maintain the maximum and the
 

00:08:08.960 --> 00:08:09.909 align:start position:0%
if we maintain the maximum and the
minimum

00:08:09.909 --> 00:08:09.919 align:start position:0%
minimum
 

00:08:09.919 --> 00:08:12.710 align:start position:0%
minimum
we<00:08:10.240><c> have</c><00:08:10.720><c> all</c><00:08:10.960><c> the</c><00:08:11.199><c> information</c><00:08:12.000><c> we</c><00:08:12.160><c> need</c><00:08:12.560><c> as</c>

00:08:12.710 --> 00:08:12.720 align:start position:0%
we have all the information we need as
 

00:08:12.720 --> 00:08:14.869 align:start position:0%
we have all the information we need as
we<00:08:12.960><c> continue</c><00:08:13.759><c> to</c><00:08:14.000><c> add</c><00:08:14.400><c> more</c>

00:08:14.869 --> 00:08:14.879 align:start position:0%
we continue to add more
 

00:08:14.879 --> 00:08:18.150 align:start position:0%
we continue to add more
elements<00:08:15.599><c> to</c><00:08:15.840><c> our</c><00:08:16.080><c> array</c><00:08:16.879><c> so</c><00:08:17.280><c> now</c><00:08:17.599><c> let's</c><00:08:17.919><c> just</c>

00:08:18.150 --> 00:08:18.160 align:start position:0%
elements to our array so now let's just
 

00:08:18.160 --> 00:08:19.430 align:start position:0%
elements to our array so now let's just
look<00:08:18.479><c> at</c>

00:08:19.430 --> 00:08:19.440 align:start position:0%
look at
 

00:08:19.440 --> 00:08:22.550 align:start position:0%
look at
one<00:08:20.080><c> edge</c><00:08:20.560><c> case</c><00:08:21.199><c> so</c><00:08:21.440><c> we're</c><00:08:21.680><c> talking</c><00:08:22.080><c> about</c>

00:08:22.550 --> 00:08:22.560 align:start position:0%
one edge case so we're talking about
 

00:08:22.560 --> 00:08:24.629 align:start position:0%
one edge case so we're talking about
positive<00:08:23.039><c> numbers</c><00:08:23.599><c> and</c><00:08:23.840><c> negative</c><00:08:24.240><c> numbers</c>

00:08:24.629 --> 00:08:24.639 align:start position:0%
positive numbers and negative numbers
 

00:08:24.639 --> 00:08:26.070 align:start position:0%
positive numbers and negative numbers
but<00:08:24.800><c> we</c><00:08:24.960><c> know</c><00:08:25.120><c> that</c><00:08:25.440><c> one</c><00:08:25.680><c> last</c>

00:08:26.070 --> 00:08:26.080 align:start position:0%
but we know that one last
 

00:08:26.080 --> 00:08:29.350 align:start position:0%
but we know that one last
edge<00:08:26.319><c> case</c><00:08:26.639><c> exists</c><00:08:27.520><c> the</c><00:08:27.680><c> dreaded</c><00:08:28.400><c> zero</c><00:08:28.800><c> value</c>

00:08:29.350 --> 00:08:29.360 align:start position:0%
edge case exists the dreaded zero value
 

00:08:29.360 --> 00:08:31.270 align:start position:0%
edge case exists the dreaded zero value
right<00:08:29.680><c> so</c><00:08:29.919><c> what</c><00:08:30.080><c> if</c><00:08:30.160><c> we</c><00:08:30.240><c> had</c><00:08:30.400><c> a</c><00:08:30.560><c> zero</c><00:08:30.879><c> value</c><00:08:31.199><c> and</c>

00:08:31.270 --> 00:08:31.280 align:start position:0%
right so what if we had a zero value and
 

00:08:31.280 --> 00:08:33.029 align:start position:0%
right so what if we had a zero value and
then<00:08:31.520><c> maybe</c><00:08:31.759><c> some</c><00:08:32.000><c> other</c><00:08:32.159><c> numbers</c><00:08:32.640><c> three</c>

00:08:33.029 --> 00:08:33.039 align:start position:0%
then maybe some other numbers three
 

00:08:33.039 --> 00:08:36.469 align:start position:0%
then maybe some other numbers three
five<00:08:34.000><c> our</c><00:08:34.399><c> zero</c><00:08:35.039><c> is</c><00:08:35.200><c> gonna</c><00:08:35.760><c> kind</c><00:08:36.080><c> of</c>

00:08:36.469 --> 00:08:36.479 align:start position:0%
five our zero is gonna kind of
 

00:08:36.479 --> 00:08:38.790 align:start position:0%
five our zero is gonna kind of
kill<00:08:36.800><c> us</c><00:08:36.959><c> right</c><00:08:37.120><c> it's</c><00:08:37.279><c> gonna</c><00:08:37.599><c> kill</c><00:08:37.919><c> our</c><00:08:38.159><c> streak</c>

00:08:38.790 --> 00:08:38.800 align:start position:0%
kill us right it's gonna kill our streak
 

00:08:38.800 --> 00:08:40.070 align:start position:0%
kill us right it's gonna kill our streak
like<00:08:39.200><c> look</c><00:08:39.360><c> what's</c><00:08:39.599><c> going</c><00:08:39.680><c> to</c><00:08:39.760><c> happen</c>

00:08:40.070 --> 00:08:40.080 align:start position:0%
like look what's going to happen
 

00:08:40.080 --> 00:08:42.949 align:start position:0%
like look what's going to happen
to<00:08:40.240><c> our</c><00:08:40.399><c> min</c><00:08:40.640><c> and</c><00:08:40.800><c> max</c><00:08:41.919><c> if</c><00:08:42.080><c> we</c><00:08:42.240><c> take</c><00:08:42.560><c> 6</c>

00:08:42.949 --> 00:08:42.959 align:start position:0%
to our min and max if we take 6
 

00:08:42.959 --> 00:08:44.550 align:start position:0%
to our min and max if we take 6
multiplied<00:08:43.519><c> by</c><00:08:43.760><c> 0</c>

00:08:44.550 --> 00:08:44.560 align:start position:0%
multiplied by 0
 

00:08:44.560 --> 00:08:48.150 align:start position:0%
multiplied by 0
we<00:08:44.800><c> get</c><00:08:45.680><c> 0</c><00:08:46.240><c> if</c><00:08:46.399><c> we</c><00:08:46.640><c> take</c><00:08:47.120><c> negative</c><00:08:47.519><c> 6</c>

00:08:48.150 --> 00:08:48.160 align:start position:0%
we get 0 if we take negative 6
 

00:08:48.160 --> 00:08:51.509 align:start position:0%
we get 0 if we take negative 6
multiplied<00:08:48.959><c> by</c><00:08:49.200><c> 0</c><00:08:50.000><c> we</c><00:08:50.240><c> get</c><00:08:50.800><c> 0</c><00:08:51.120><c> again</c>

00:08:51.509 --> 00:08:51.519 align:start position:0%
multiplied by 0 we get 0 again
 

00:08:51.519 --> 00:08:54.710 align:start position:0%
multiplied by 0 we get 0 again
right<00:08:52.160><c> x</c><00:08:52.480><c> times</c><00:08:52.880><c> 0</c><00:08:53.360><c> equals</c><00:08:53.920><c> zero</c>

00:08:54.710 --> 00:08:54.720 align:start position:0%
right x times 0 equals zero
 

00:08:54.720 --> 00:08:57.269 align:start position:0%
right x times 0 equals zero
and<00:08:54.880><c> then</c><00:08:55.120><c> if</c><00:08:55.279><c> we</c><00:08:55.440><c> try</c><00:08:55.760><c> taking</c><00:08:56.080><c> this</c><00:08:56.399><c> zero</c><00:08:56.880><c> and</c>

00:08:57.269 --> 00:08:57.279 align:start position:0%
and then if we try taking this zero and
 

00:08:57.279 --> 00:08:59.350 align:start position:0%
and then if we try taking this zero and
making<00:08:57.680><c> it</c><00:08:57.839><c> a</c><00:08:58.080><c> product</c><00:08:58.480><c> of</c><00:08:58.560><c> maybe</c><00:08:58.959><c> three</c><00:08:59.200><c> and</c>

00:08:59.350 --> 00:08:59.360 align:start position:0%
making it a product of maybe three and
 

00:08:59.360 --> 00:08:59.829 align:start position:0%
making it a product of maybe three and
five

00:08:59.829 --> 00:08:59.839 align:start position:0%
five
 

00:08:59.839 --> 00:09:01.430 align:start position:0%
five
it's<00:09:00.000><c> going</c><00:09:00.160><c> to</c><00:09:00.240><c> continue</c><00:09:00.720><c> being</c><00:09:00.959><c> zero</c><00:09:01.279><c> right</c>

00:09:01.430 --> 00:09:01.440 align:start position:0%
it's going to continue being zero right
 

00:09:01.440 --> 00:09:02.870 align:start position:0%
it's going to continue being zero right
because<00:09:01.839><c> any</c><00:09:02.080><c> number</c><00:09:02.560><c> times</c>

00:09:02.870 --> 00:09:02.880 align:start position:0%
because any number times
 

00:09:02.880 --> 00:09:05.350 align:start position:0%
because any number times
zero<00:09:03.279><c> is</c><00:09:03.440><c> going</c><00:09:03.519><c> to</c><00:09:03.600><c> be</c><00:09:03.839><c> zero</c><00:09:04.560><c> so</c><00:09:04.880><c> i'm</c><00:09:05.120><c> gonna</c>

00:09:05.350 --> 00:09:05.360 align:start position:0%
zero is going to be zero so i'm gonna
 

00:09:05.360 --> 00:09:06.949 align:start position:0%
zero is going to be zero so i'm gonna
decide<00:09:05.839><c> to</c><00:09:06.000><c> handle</c><00:09:06.399><c> this</c>

00:09:06.949 --> 00:09:06.959 align:start position:0%
decide to handle this
 

00:09:06.959 --> 00:09:11.190 align:start position:0%
decide to handle this
in<00:09:07.920><c> a</c><00:09:08.080><c> different</c><00:09:08.560><c> way</c><00:09:09.440><c> so</c><00:09:09.920><c> anytime</c><00:09:10.560><c> we</c><00:09:10.720><c> get</c><00:09:10.959><c> a</c>

00:09:11.190 --> 00:09:11.200 align:start position:0%
in a different way so anytime we get a
 

00:09:11.200 --> 00:09:12.230 align:start position:0%
in a different way so anytime we get a
zero<00:09:11.680><c> value</c>

00:09:12.230 --> 00:09:12.240 align:start position:0%
zero value
 

00:09:12.240 --> 00:09:15.829 align:start position:0%
zero value
i'm<00:09:12.480><c> going</c><00:09:12.640><c> to</c><00:09:12.959><c> reset</c><00:09:13.760><c> our</c><00:09:14.080><c> max</c><00:09:14.800><c> to</c><00:09:15.040><c> zero</c><00:09:15.519><c> or</c>

00:09:15.829 --> 00:09:15.839 align:start position:0%
i'm going to reset our max to zero or
 

00:09:15.839 --> 00:09:18.790 align:start position:0%
i'm going to reset our max to zero or
rather<00:09:16.240><c> to</c><00:09:16.720><c> one</c><00:09:17.519><c> and</c><00:09:17.760><c> i'm</c><00:09:18.080><c> also</c><00:09:18.480><c> going</c><00:09:18.640><c> to</c>

00:09:18.790 --> 00:09:18.800 align:start position:0%
rather to one and i'm also going to
 

00:09:18.800 --> 00:09:19.430 align:start position:0%
rather to one and i'm also going to
reset

00:09:19.430 --> 00:09:19.440 align:start position:0%
reset
 

00:09:19.440 --> 00:09:22.470 align:start position:0%
reset
our<00:09:19.920><c> minimum</c><00:09:20.959><c> to</c><00:09:21.360><c> 1</c>

00:09:22.470 --> 00:09:22.480 align:start position:0%
our minimum to 1
 

00:09:22.480 --> 00:09:24.470 align:start position:0%
our minimum to 1
and<00:09:22.640><c> the</c><00:09:22.800><c> reason</c><00:09:23.279><c> i'm</c><00:09:23.440><c> gonna</c><00:09:23.760><c> do</c><00:09:24.000><c> this</c><00:09:24.320><c> is</c>

00:09:24.470 --> 00:09:24.480 align:start position:0%
and the reason i'm gonna do this is
 

00:09:24.480 --> 00:09:26.230 align:start position:0%
and the reason i'm gonna do this is
because<00:09:24.800><c> i</c><00:09:24.959><c> don't</c><00:09:25.279><c> want</c><00:09:25.600><c> to</c>

00:09:26.230 --> 00:09:26.240 align:start position:0%
because i don't want to
 

00:09:26.240 --> 00:09:29.269 align:start position:0%
because i don't want to
kill<00:09:26.800><c> our</c><00:09:27.760><c> product</c><00:09:28.320><c> right</c><00:09:28.640><c> i'm</c><00:09:28.800><c> just</c><00:09:29.040><c> going</c><00:09:29.120><c> to</c>

00:09:29.269 --> 00:09:29.279 align:start position:0%
kill our product right i'm just going to
 

00:09:29.279 --> 00:09:29.910 align:start position:0%
kill our product right i'm just going to
say<00:09:29.600><c> that</c>

00:09:29.910 --> 00:09:29.920 align:start position:0%
say that
 

00:09:29.920 --> 00:09:32.150 align:start position:0%
say that
zeros<00:09:30.480><c> are</c><00:09:30.640><c> ignored</c><00:09:31.279><c> we</c><00:09:31.440><c> don't</c><00:09:31.519><c> really</c><00:09:31.920><c> care</c>

00:09:32.150 --> 00:09:32.160 align:start position:0%
zeros are ignored we don't really care
 

00:09:32.160 --> 00:09:34.070 align:start position:0%
zeros are ignored we don't really care
about<00:09:32.399><c> zeros</c><00:09:32.880><c> and</c><00:09:33.040><c> the</c><00:09:33.200><c> reason</c><00:09:33.600><c> i'm</c><00:09:33.839><c> setting</c>

00:09:34.070 --> 00:09:34.080 align:start position:0%
about zeros and the reason i'm setting
 

00:09:34.080 --> 00:09:34.790 align:start position:0%
about zeros and the reason i'm setting
this<00:09:34.399><c> to</c>

00:09:34.790 --> 00:09:34.800 align:start position:0%
this to
 

00:09:34.800 --> 00:09:37.670 align:start position:0%
this to
one<00:09:35.680><c> is</c><00:09:35.920><c> because</c><00:09:36.720><c> then</c><00:09:36.959><c> when</c><00:09:37.120><c> we</c><00:09:37.360><c> start</c>

00:09:37.670 --> 00:09:37.680 align:start position:0%
one is because then when we start
 

00:09:37.680 --> 00:09:39.430 align:start position:0%
one is because then when we start
introducing<00:09:38.399><c> new</c><00:09:38.640><c> values</c><00:09:39.120><c> like</c>

00:09:39.430 --> 00:09:39.440 align:start position:0%
introducing new values like
 

00:09:39.440 --> 00:09:42.150 align:start position:0%
introducing new values like
3<00:09:39.920><c> it's</c><00:09:40.160><c> just</c><00:09:40.320><c> going</c><00:09:40.480><c> to</c><00:09:40.560><c> be</c><00:09:40.959><c> 1</c><00:09:41.279><c> times</c><00:09:41.600><c> 3</c><00:09:42.000><c> right</c>

00:09:42.150 --> 00:09:42.160 align:start position:0%
3 it's just going to be 1 times 3 right
 

00:09:42.160 --> 00:09:42.790 align:start position:0%
3 it's just going to be 1 times 3 right
which<00:09:42.399><c> is</c>

00:09:42.790 --> 00:09:42.800 align:start position:0%
which is
 

00:09:42.800 --> 00:09:45.590 align:start position:0%
which is
going<00:09:42.880><c> to</c><00:09:43.040><c> end</c><00:09:43.279><c> up</c><00:09:43.440><c> being</c><00:09:43.680><c> 3</c><00:09:44.000><c> so</c><00:09:44.399><c> 1</c><00:09:44.959><c> is</c><00:09:45.120><c> like</c><00:09:45.360><c> a</c>

00:09:45.590 --> 00:09:45.600 align:start position:0%
going to end up being 3 so 1 is like a
 

00:09:45.600 --> 00:09:47.509 align:start position:0%
going to end up being 3 so 1 is like a
neutral<00:09:46.160><c> value</c><00:09:46.640><c> for</c><00:09:46.880><c> us</c>

00:09:47.509 --> 00:09:47.519 align:start position:0%
neutral value for us
 

00:09:47.519 --> 00:09:49.269 align:start position:0%
neutral value for us
so<00:09:47.760><c> those</c><00:09:48.080><c> are</c><00:09:48.160><c> the</c><00:09:48.320><c> main</c><00:09:48.560><c> things</c><00:09:48.880><c> we</c><00:09:49.040><c> want</c><00:09:49.200><c> to</c>

00:09:49.269 --> 00:09:49.279 align:start position:0%
so those are the main things we want to
 

00:09:49.279 --> 00:09:51.030 align:start position:0%
so those are the main things we want to
maintain<00:09:50.160><c> the</c><00:09:50.480><c> max</c>

00:09:51.030 --> 00:09:51.040 align:start position:0%
maintain the max
 

00:09:51.040 --> 00:09:54.150 align:start position:0%
maintain the max
and<00:09:51.360><c> minimum</c><00:09:52.240><c> of</c><00:09:52.399><c> our</c><00:09:52.560><c> product</c><00:09:53.279><c> and</c><00:09:53.760><c> we</c><00:09:54.000><c> want</c>

00:09:54.150 --> 00:09:54.160 align:start position:0%
and minimum of our product and we want
 

00:09:54.160 --> 00:09:55.030 align:start position:0%
and minimum of our product and we want
to<00:09:54.320><c> handle</c><00:09:54.720><c> the</c>

00:09:55.030 --> 00:09:55.040 align:start position:0%
to handle the
 

00:09:55.040 --> 00:09:58.389 align:start position:0%
to handle the
zero<00:09:55.519><c> case</c><00:09:56.080><c> by</c><00:09:56.399><c> resetting</c><00:09:57.600><c> everything</c>

00:09:58.389 --> 00:09:58.399 align:start position:0%
zero case by resetting everything
 

00:09:58.399 --> 00:10:01.509 align:start position:0%
zero case by resetting everything
to<00:09:58.560><c> a</c><00:09:58.800><c> neutral</c><00:09:59.279><c> value</c><00:09:59.680><c> like</c><00:10:00.080><c> one</c><00:10:00.880><c> okay</c><00:10:01.120><c> so</c><00:10:01.360><c> now</c>

00:10:01.509 --> 00:10:01.519 align:start position:0%
to a neutral value like one okay so now
 

00:10:01.519 --> 00:10:02.949 align:start position:0%
to a neutral value like one okay so now
let's<00:10:01.839><c> code</c><00:10:02.079><c> it</c><00:10:02.320><c> out</c>

00:10:02.949 --> 00:10:02.959 align:start position:0%
let's code it out
 

00:10:02.959 --> 00:10:06.310 align:start position:0%
let's code it out
i'm<00:10:03.200><c> going</c><00:10:03.360><c> to</c><00:10:03.519><c> say</c><00:10:04.480><c> our</c><00:10:04.800><c> result</c><00:10:05.440><c> is</c><00:10:05.600><c> initially</c>

00:10:06.310 --> 00:10:06.320 align:start position:0%
i'm going to say our result is initially
 

00:10:06.320 --> 00:10:08.470 align:start position:0%
i'm going to say our result is initially
just<00:10:06.560><c> going</c><00:10:06.720><c> to</c><00:10:06.800><c> be</c><00:10:07.040><c> set</c><00:10:07.279><c> to</c><00:10:07.360><c> the</c><00:10:07.600><c> max</c><00:10:08.000><c> value</c>

00:10:08.470 --> 00:10:08.480 align:start position:0%
just going to be set to the max value
 

00:10:08.480 --> 00:10:10.389 align:start position:0%
just going to be set to the max value
contained<00:10:09.040><c> in</c><00:10:09.200><c> nums</c><00:10:09.600><c> because</c><00:10:09.839><c> we</c><00:10:10.000><c> at</c><00:10:10.079><c> least</c>

00:10:10.389 --> 00:10:10.399 align:start position:0%
contained in nums because we at least
 

00:10:10.399 --> 00:10:12.150 align:start position:0%
contained in nums because we at least
have<00:10:10.560><c> to</c><00:10:10.720><c> set</c><00:10:10.880><c> it</c><00:10:10.959><c> to</c><00:10:11.200><c> some</c><00:10:11.519><c> value</c>

00:10:12.150 --> 00:10:12.160 align:start position:0%
have to set it to some value
 

00:10:12.160 --> 00:10:15.350 align:start position:0%
have to set it to some value
we<00:10:12.399><c> can't</c><00:10:12.800><c> just</c><00:10:13.200><c> initialize</c><00:10:13.760><c> it</c><00:10:13.839><c> to</c><00:10:14.079><c> 0</c><00:10:14.560><c> because</c>

00:10:15.350 --> 00:10:15.360 align:start position:0%
we can't just initialize it to 0 because
 

00:10:15.360 --> 00:10:17.910 align:start position:0%
we can't just initialize it to 0 because
what<00:10:15.519><c> if</c><00:10:15.680><c> we</c><00:10:15.920><c> had</c><00:10:16.160><c> an</c><00:10:16.320><c> array</c><00:10:16.800><c> with</c><00:10:17.360><c> just</c><00:10:17.680><c> one</c>

00:10:17.910 --> 00:10:17.920 align:start position:0%
what if we had an array with just one
 

00:10:17.920 --> 00:10:19.430 align:start position:0%
what if we had an array with just one
number<00:10:18.240><c> and</c><00:10:18.320><c> it</c><00:10:18.399><c> happened</c><00:10:18.720><c> to</c><00:10:18.800><c> be</c><00:10:19.040><c> negative</c>

00:10:19.430 --> 00:10:19.440 align:start position:0%
number and it happened to be negative
 

00:10:19.440 --> 00:10:20.630 align:start position:0%
number and it happened to be negative
one<00:10:19.760><c> right</c>

00:10:20.630 --> 00:10:20.640 align:start position:0%
one right
 

00:10:20.640 --> 00:10:23.110 align:start position:0%
one right
in<00:10:20.720><c> that</c><00:10:20.959><c> case</c><00:10:21.600><c> this</c><00:10:21.839><c> is</c><00:10:21.920><c> our</c><00:10:22.079><c> max</c><00:10:22.480><c> product</c>

00:10:23.110 --> 00:10:23.120 align:start position:0%
in that case this is our max product
 

00:10:23.120 --> 00:10:24.150 align:start position:0%
in that case this is our max product
which<00:10:23.440><c> is</c>

00:10:24.150 --> 00:10:24.160 align:start position:0%
which is
 

00:10:24.160 --> 00:10:26.710 align:start position:0%
which is
even<00:10:24.560><c> less</c><00:10:24.959><c> than</c><00:10:25.200><c> zero</c><00:10:25.600><c> so</c><00:10:25.839><c> zero</c><00:10:26.240><c> is</c><00:10:26.399><c> not</c><00:10:26.560><c> a</c>

00:10:26.710 --> 00:10:26.720 align:start position:0%
even less than zero so zero is not a
 

00:10:26.720 --> 00:10:27.269 align:start position:0%
even less than zero so zero is not a
good

00:10:27.269 --> 00:10:27.279 align:start position:0%
good
 

00:10:27.279 --> 00:10:29.750 align:start position:0%
good
default<00:10:27.839><c> case</c><00:10:28.160><c> and</c><00:10:28.480><c> i'm</c><00:10:28.640><c> going</c><00:10:28.800><c> to</c><00:10:28.880><c> maintain</c>

00:10:29.750 --> 00:10:29.760 align:start position:0%
default case and i'm going to maintain
 

00:10:29.760 --> 00:10:30.790 align:start position:0%
default case and i'm going to maintain
the<00:10:30.160><c> current</c>

00:10:30.790 --> 00:10:30.800 align:start position:0%
the current
 

00:10:30.800 --> 00:10:34.470 align:start position:0%
the current
min<00:10:31.680><c> and</c><00:10:32.000><c> the</c><00:10:32.399><c> current</c><00:10:33.040><c> max</c><00:10:33.760><c> and</c><00:10:34.000><c> i'm</c><00:10:34.240><c> gonna</c>

00:10:34.470 --> 00:10:34.480 align:start position:0%
min and the current max and i'm gonna
 

00:10:34.480 --> 00:10:35.750 align:start position:0%
min and the current max and i'm gonna
initialize<00:10:35.120><c> these</c>

00:10:35.750 --> 00:10:35.760 align:start position:0%
initialize these
 

00:10:35.760 --> 00:10:38.790 align:start position:0%
initialize these
to<00:10:36.160><c> one</c><00:10:36.880><c> e</c><00:10:37.200><c> because</c><00:10:37.600><c> we</c><00:10:37.839><c> know</c><00:10:38.079><c> one</c><00:10:38.399><c> is</c><00:10:38.480><c> like</c><00:10:38.640><c> a</c>

00:10:38.790 --> 00:10:38.800 align:start position:0%
to one e because we know one is like a
 

00:10:38.800 --> 00:10:39.910 align:start position:0%
to one e because we know one is like a
neutral<00:10:39.279><c> value</c>

00:10:39.910 --> 00:10:39.920 align:start position:0%
neutral value
 

00:10:39.920 --> 00:10:41.910 align:start position:0%
neutral value
and<00:10:40.079><c> then</c><00:10:40.399><c> we're</c><00:10:40.560><c> just</c><00:10:40.800><c> gonna</c><00:10:41.200><c> start</c>

00:10:41.910 --> 00:10:41.920 align:start position:0%
and then we're just gonna start
 

00:10:41.920 --> 00:10:43.269 align:start position:0%
and then we're just gonna start
iterating<00:10:42.800><c> through</c>

00:10:43.269 --> 00:10:43.279 align:start position:0%
iterating through
 

00:10:43.279 --> 00:10:47.110 align:start position:0%
iterating through
every<00:10:43.680><c> single</c><00:10:44.160><c> number</c><00:10:44.959><c> in</c><00:10:45.360><c> our</c><00:10:45.680><c> input</c><00:10:46.079><c> array</c>

00:10:47.110 --> 00:10:47.120 align:start position:0%
every single number in our input array
 

00:10:47.120 --> 00:10:50.389 align:start position:0%
every single number in our input array
we<00:10:47.360><c> know</c><00:10:47.680><c> that</c><00:10:47.920><c> if</c><00:10:48.079><c> we</c><00:10:48.399><c> ever</c><00:10:48.800><c> get</c><00:10:49.040><c> to</c><00:10:49.279><c> a</c><00:10:49.440><c> zero</c>

00:10:50.389 --> 00:10:50.399 align:start position:0%
we know that if we ever get to a zero
 

00:10:50.399 --> 00:10:52.870 align:start position:0%
we know that if we ever get to a zero
we<00:10:51.200><c> do</c><00:10:51.360><c> not</c><00:10:51.600><c> want</c><00:10:51.760><c> to</c><00:10:51.920><c> handle</c><00:10:52.320><c> that</c><00:10:52.480><c> we</c><00:10:52.640><c> don't</c>

00:10:52.870 --> 00:10:52.880 align:start position:0%
we do not want to handle that we don't
 

00:10:52.880 --> 00:10:53.990 align:start position:0%
we do not want to handle that we don't
want<00:10:53.040><c> to</c><00:10:53.200><c> add</c><00:10:53.519><c> that</c>

00:10:53.990 --> 00:10:54.000 align:start position:0%
want to add that
 

00:10:54.000 --> 00:10:56.150 align:start position:0%
want to add that
as<00:10:54.240><c> a</c><00:10:54.399><c> part</c><00:10:54.640><c> of</c><00:10:54.800><c> our</c><00:10:55.040><c> product</c><00:10:55.680><c> so</c><00:10:55.839><c> we</c><00:10:56.000><c> don't</c>

00:10:56.150 --> 00:10:56.160 align:start position:0%
as a part of our product so we don't
 

00:10:56.160 --> 00:10:57.829 align:start position:0%
as a part of our product so we don't
want<00:10:56.240><c> to</c><00:10:56.399><c> mess</c><00:10:56.640><c> up</c><00:10:56.800><c> our</c><00:10:56.959><c> current</c><00:10:57.279><c> min</c><00:10:57.440><c> and</c><00:10:57.600><c> max</c>

00:10:57.829 --> 00:10:57.839 align:start position:0%
want to mess up our current min and max
 

00:10:57.839 --> 00:10:59.430 align:start position:0%
want to mess up our current min and max
by<00:10:58.000><c> multiplying</c><00:10:58.560><c> it</c><00:10:58.640><c> by</c><00:10:58.880><c> zero</c>

00:10:59.430 --> 00:10:59.440 align:start position:0%
by multiplying it by zero
 

00:10:59.440 --> 00:11:01.110 align:start position:0%
by multiplying it by zero
because<00:10:59.600><c> then</c><00:10:59.839><c> it's</c><00:11:00.000><c> going</c><00:11:00.079><c> to</c><00:11:00.320><c> stay</c><00:11:00.720><c> zero</c>

00:11:01.110 --> 00:11:01.120 align:start position:0%
because then it's going to stay zero
 

00:11:01.120 --> 00:11:03.030 align:start position:0%
because then it's going to stay zero
forever<00:11:01.839><c> so</c><00:11:02.079><c> instead</c><00:11:02.560><c> what</c><00:11:02.720><c> we're</c><00:11:02.880><c> going</c><00:11:02.959><c> to</c>

00:11:03.030 --> 00:11:03.040 align:start position:0%
forever so instead what we're going to
 

00:11:03.040 --> 00:11:03.430 align:start position:0%
forever so instead what we're going to
do

00:11:03.430 --> 00:11:03.440 align:start position:0%
do
 

00:11:03.440 --> 00:11:07.110 align:start position:0%
do
is<00:11:03.600><c> we're</c><00:11:03.760><c> going</c><00:11:03.839><c> to</c><00:11:04.079><c> reset</c><00:11:05.040><c> our</c><00:11:05.360><c> min</c><00:11:06.160><c> and</c>

00:11:07.110 --> 00:11:07.120 align:start position:0%
is we're going to reset our min and
 

00:11:07.120 --> 00:11:10.150 align:start position:0%
is we're going to reset our min and
our<00:11:07.519><c> max</c><00:11:08.399><c> to</c><00:11:08.640><c> one</c><00:11:09.279><c> each</c>

00:11:10.150 --> 00:11:10.160 align:start position:0%
our max to one each
 

00:11:10.160 --> 00:11:12.790 align:start position:0%
our max to one each
and<00:11:10.399><c> we're</c><00:11:10.640><c> just</c><00:11:10.880><c> going</c><00:11:10.959><c> to</c><00:11:11.120><c> continue</c><00:11:12.240><c> to</c><00:11:12.399><c> the</c>

00:11:12.790 --> 00:11:12.800 align:start position:0%
and we're just going to continue to the
 

00:11:12.800 --> 00:11:14.790 align:start position:0%
and we're just going to continue to the
next<00:11:13.200><c> iteration</c><00:11:13.760><c> of</c><00:11:13.920><c> the</c><00:11:14.160><c> loop</c>

00:11:14.790 --> 00:11:14.800 align:start position:0%
next iteration of the loop
 

00:11:14.800 --> 00:11:17.430 align:start position:0%
next iteration of the loop
if<00:11:15.200><c> this</c><00:11:15.680><c> doesn't</c><00:11:16.079><c> execute</c><00:11:16.880><c> that's</c><00:11:17.200><c> when</c>

00:11:17.430 --> 00:11:17.440 align:start position:0%
if this doesn't execute that's when
 

00:11:17.440 --> 00:11:18.630 align:start position:0%
if this doesn't execute that's when
we're<00:11:17.600><c> going</c><00:11:17.760><c> to</c><00:11:17.839><c> actually</c>

00:11:18.630 --> 00:11:18.640 align:start position:0%
we're going to actually
 

00:11:18.640 --> 00:11:21.350 align:start position:0%
we're going to actually
do<00:11:18.880><c> our</c><00:11:19.200><c> code</c><00:11:19.600><c> and</c><00:11:19.920><c> recompute</c><00:11:20.800><c> the</c><00:11:21.040><c> current</c>

00:11:21.350 --> 00:11:21.360 align:start position:0%
do our code and recompute the current
 

00:11:21.360 --> 00:11:21.750 align:start position:0%
do our code and recompute the current
min

00:11:21.750 --> 00:11:21.760 align:start position:0%
min
 

00:11:21.760 --> 00:11:24.790 align:start position:0%
min
and<00:11:21.920><c> current</c><00:11:22.320><c> max</c><00:11:22.880><c> so</c><00:11:23.279><c> our</c><00:11:23.680><c> current</c><00:11:24.160><c> max</c><00:11:24.560><c> how</c>

00:11:24.790 --> 00:11:24.800 align:start position:0%
and current max so our current max how
 

00:11:24.800 --> 00:11:26.870 align:start position:0%
and current max so our current max how
are<00:11:24.880><c> we</c><00:11:25.120><c> actually</c><00:11:25.360><c> going</c><00:11:25.519><c> to</c><00:11:25.600><c> compute</c><00:11:26.160><c> it</c><00:11:26.399><c> well</c>

00:11:26.870 --> 00:11:26.880 align:start position:0%
are we actually going to compute it well
 

00:11:26.880 --> 00:11:30.310 align:start position:0%
are we actually going to compute it well
in<00:11:27.279><c> python</c><00:11:28.720><c> it's</c><00:11:28.959><c> really</c><00:11:29.200><c> convenient</c><00:11:29.839><c> for</c><00:11:30.000><c> us</c>

00:11:30.310 --> 00:11:30.320 align:start position:0%
in python it's really convenient for us
 

00:11:30.320 --> 00:11:33.509 align:start position:0%
in python it's really convenient for us
because<00:11:31.279><c> we</c><00:11:31.440><c> can</c><00:11:31.760><c> say</c><00:11:32.079><c> okay</c><00:11:32.640><c> the</c><00:11:32.880><c> current</c><00:11:33.200><c> max</c>

00:11:33.509 --> 00:11:33.519 align:start position:0%
because we can say okay the current max
 

00:11:33.519 --> 00:11:35.269 align:start position:0%
because we can say okay the current max
could<00:11:33.839><c> potentially</c><00:11:34.560><c> be</c>

00:11:35.269 --> 00:11:35.279 align:start position:0%
could potentially be
 

00:11:35.279 --> 00:11:37.430 align:start position:0%
could potentially be
the<00:11:35.600><c> the</c><00:11:35.839><c> new</c><00:11:36.079><c> number</c><00:11:36.399><c> that</c><00:11:36.480><c> we</c><00:11:36.640><c> just</c><00:11:36.959><c> found</c>

00:11:37.430 --> 00:11:37.440 align:start position:0%
the the new number that we just found
 

00:11:37.440 --> 00:11:39.269 align:start position:0%
the the new number that we just found
multiplied<00:11:38.160><c> by</c><00:11:38.320><c> the</c><00:11:38.480><c> current</c><00:11:38.800><c> max</c>

00:11:39.269 --> 00:11:39.279 align:start position:0%
multiplied by the current max
 

00:11:39.279 --> 00:11:40.949 align:start position:0%
multiplied by the current max
if<00:11:39.440><c> the</c><00:11:39.600><c> current</c><00:11:39.920><c> max</c><00:11:40.240><c> happens</c><00:11:40.640><c> to</c><00:11:40.720><c> be</c>

00:11:40.949 --> 00:11:40.959 align:start position:0%
if the current max happens to be
 

00:11:40.959 --> 00:11:43.110 align:start position:0%
if the current max happens to be
positive<00:11:41.600><c> and</c><00:11:41.920><c> n</c><00:11:42.160><c> is</c><00:11:42.320><c> positive</c>

00:11:43.110 --> 00:11:43.120 align:start position:0%
positive and n is positive
 

00:11:43.120 --> 00:11:46.710 align:start position:0%
positive and n is positive
it<00:11:43.200><c> could</c><00:11:43.519><c> also</c><00:11:44.000><c> end</c><00:11:44.240><c> up</c><00:11:44.800><c> being</c><00:11:45.680><c> the</c>

00:11:46.710 --> 00:11:46.720 align:start position:0%
it could also end up being the
 

00:11:46.720 --> 00:11:49.110 align:start position:0%
it could also end up being the
the<00:11:47.279><c> input</c><00:11:47.600><c> value</c><00:11:48.000><c> n</c><00:11:48.240><c> multiplied</c><00:11:48.800><c> by</c><00:11:48.959><c> the</c>

00:11:49.110 --> 00:11:49.120 align:start position:0%
the input value n multiplied by the
 

00:11:49.120 --> 00:11:49.750 align:start position:0%
the input value n multiplied by the
current

00:11:49.750 --> 00:11:49.760 align:start position:0%
current
 

00:11:49.760 --> 00:11:52.629 align:start position:0%
current
minimum<00:11:50.399><c> right</c><00:11:50.720><c> what</c><00:11:50.880><c> if</c><00:11:51.279><c> n</c><00:11:51.519><c> is</c><00:11:51.760><c> negative</c><00:11:52.320><c> and</c>

00:11:52.629 --> 00:11:52.639 align:start position:0%
minimum right what if n is negative and
 

00:11:52.639 --> 00:11:54.470 align:start position:0%
minimum right what if n is negative and
current<00:11:52.959><c> minimum</c><00:11:53.440><c> is</c><00:11:53.600><c> negative</c><00:11:54.000><c> then</c>

00:11:54.470 --> 00:11:54.480 align:start position:0%
current minimum is negative then
 

00:11:54.480 --> 00:11:56.150 align:start position:0%
current minimum is negative then
this<00:11:54.720><c> could</c><00:11:54.959><c> end</c><00:11:55.120><c> up</c><00:11:55.200><c> being</c><00:11:55.440><c> a</c><00:11:55.600><c> positive</c>

00:11:56.150 --> 00:11:56.160 align:start position:0%
this could end up being a positive
 

00:11:56.160 --> 00:11:57.430 align:start position:0%
this could end up being a positive
number<00:11:56.480><c> which</c><00:11:56.639><c> could</c><00:11:56.880><c> be</c><00:11:57.040><c> our</c><00:11:57.200><c> current</c>

00:11:57.430 --> 00:11:57.440 align:start position:0%
number which could be our current
 

00:11:57.440 --> 00:11:58.629 align:start position:0%
number which could be our current
maximum

00:11:58.629 --> 00:11:58.639 align:start position:0%
maximum
 

00:11:58.639 --> 00:12:02.230 align:start position:0%
maximum
the<00:11:58.959><c> third</c><00:11:59.440><c> option</c><00:12:00.000><c> is</c><00:12:00.560><c> n</c><00:12:01.040><c> itself</c>

00:12:02.230 --> 00:12:02.240 align:start position:0%
the third option is n itself
 

00:12:02.240 --> 00:12:05.110 align:start position:0%
the third option is n itself
because<00:12:02.880><c> what</c><00:12:03.040><c> if</c><00:12:03.200><c> we</c><00:12:03.360><c> had</c><00:12:03.600><c> an</c><00:12:03.839><c> input</c><00:12:04.320><c> such</c><00:12:04.639><c> as</c>

00:12:05.110 --> 00:12:05.120 align:start position:0%
because what if we had an input such as
 

00:12:05.120 --> 00:12:06.230 align:start position:0%
because what if we had an input such as
negative<00:12:05.600><c> one</c>

00:12:06.230 --> 00:12:06.240 align:start position:0%
negative one
 

00:12:06.240 --> 00:12:09.030 align:start position:0%
negative one
and<00:12:06.720><c> eight</c><00:12:07.279><c> well</c><00:12:07.600><c> in</c><00:12:07.760><c> that</c><00:12:08.000><c> case</c><00:12:08.560><c> the</c><00:12:08.800><c> current</c>

00:12:09.030 --> 00:12:09.040 align:start position:0%
and eight well in that case the current
 

00:12:09.040 --> 00:12:10.870 align:start position:0%
and eight well in that case the current
min<00:12:09.279><c> and</c><00:12:09.440><c> max</c><00:12:09.680><c> is</c><00:12:09.839><c> going</c><00:12:09.920><c> to</c><00:12:10.079><c> end</c><00:12:10.240><c> up</c><00:12:10.320><c> being</c>

00:12:10.870 --> 00:12:10.880 align:start position:0%
min and max is going to end up being
 

00:12:10.880 --> 00:12:14.069 align:start position:0%
min and max is going to end up being
negative<00:12:11.360><c> 1</c><00:12:12.160><c> and</c><00:12:13.040><c> either</c><00:12:13.360><c> of</c><00:12:13.440><c> those</c><00:12:13.680><c> numbers</c>

00:12:14.069 --> 00:12:14.079 align:start position:0%
negative 1 and either of those numbers
 

00:12:14.079 --> 00:12:14.949 align:start position:0%
negative 1 and either of those numbers
multiplied<00:12:14.560><c> by</c>

00:12:14.949 --> 00:12:14.959 align:start position:0%
multiplied by
 

00:12:14.959 --> 00:12:17.670 align:start position:0%
multiplied by
8<00:12:15.440><c> which</c><00:12:15.760><c> could</c><00:12:15.920><c> be</c><00:12:16.240><c> our</c><00:12:16.399><c> hypothetical</c><00:12:17.360><c> n</c>

00:12:17.670 --> 00:12:17.680 align:start position:0%
8 which could be our hypothetical n
 

00:12:17.680 --> 00:12:18.550 align:start position:0%
8 which could be our hypothetical n
value

00:12:18.550 --> 00:12:18.560 align:start position:0%
value
 

00:12:18.560 --> 00:12:20.310 align:start position:0%
value
it's<00:12:18.720><c> going</c><00:12:18.800><c> to</c><00:12:18.880><c> end</c><00:12:19.040><c> up</c><00:12:19.120><c> being</c><00:12:19.360><c> negative</c><00:12:19.680><c> 8</c><00:12:19.920><c> so</c>

00:12:20.310 --> 00:12:20.320 align:start position:0%
it's going to end up being negative 8 so
 

00:12:20.320 --> 00:12:22.150 align:start position:0%
it's going to end up being negative 8 so
8<00:12:20.639><c> it's</c><00:12:20.959><c> by</c><00:12:21.200><c> itself</c>

00:12:22.150 --> 00:12:22.160 align:start position:0%
8 it's by itself
 

00:12:22.160 --> 00:12:25.350 align:start position:0%
8 it's by itself
which<00:12:22.480><c> is</c><00:12:22.800><c> n</c><00:12:23.360><c> is</c><00:12:23.839><c> the</c><00:12:24.000><c> maximum</c><00:12:24.880><c> and</c>

00:12:25.350 --> 00:12:25.360 align:start position:0%
which is n is the maximum and
 

00:12:25.360 --> 00:12:27.829 align:start position:0%
which is n is the maximum and
the<00:12:25.839><c> fun</c><00:12:26.079><c> thing</c><00:12:26.320><c> about</c><00:12:26.639><c> python</c><00:12:27.200><c> is</c><00:12:27.360><c> that</c><00:12:27.600><c> look</c>

00:12:27.829 --> 00:12:27.839 align:start position:0%
the fun thing about python is that look
 

00:12:27.839 --> 00:12:28.550 align:start position:0%
the fun thing about python is that look
we<00:12:28.000><c> just</c><00:12:28.160><c> put</c>

00:12:28.550 --> 00:12:28.560 align:start position:0%
we just put
 

00:12:28.560 --> 00:12:31.670 align:start position:0%
we just put
three<00:12:28.959><c> values</c><00:12:29.680><c> into</c><00:12:30.000><c> our</c><00:12:30.160><c> max</c><00:12:30.480><c> function</c><00:12:31.200><c> some</c>

00:12:31.670 --> 00:12:31.680 align:start position:0%
three values into our max function some
 

00:12:31.680 --> 00:12:33.670 align:start position:0%
three values into our max function some
languages<00:12:32.160><c> don't</c><00:12:32.399><c> allow</c><00:12:32.720><c> for</c><00:12:32.880><c> this</c><00:12:33.440><c> but</c>

00:12:33.670 --> 00:12:33.680 align:start position:0%
languages don't allow for this but
 

00:12:33.680 --> 00:12:35.990 align:start position:0%
languages don't allow for this but
there's<00:12:34.000><c> obviously</c><00:12:34.480><c> ways</c><00:12:34.720><c> to</c><00:12:34.800><c> get</c><00:12:34.959><c> around</c><00:12:35.360><c> it</c>

00:12:35.990 --> 00:12:36.000 align:start position:0%
there's obviously ways to get around it
 

00:12:36.000 --> 00:12:38.389 align:start position:0%
there's obviously ways to get around it
and<00:12:36.399><c> so</c><00:12:36.639><c> now</c><00:12:36.800><c> that</c><00:12:36.959><c> we</c><00:12:37.120><c> have</c><00:12:37.360><c> our</c><00:12:37.440><c> current</c><00:12:37.839><c> max</c>

00:12:38.389 --> 00:12:38.399 align:start position:0%
and so now that we have our current max
 

00:12:38.399 --> 00:12:39.030 align:start position:0%
and so now that we have our current max
we<00:12:38.639><c> can</c>

00:12:39.030 --> 00:12:39.040 align:start position:0%
we can
 

00:12:39.040 --> 00:12:41.030 align:start position:0%
we can
do<00:12:39.200><c> the</c><00:12:39.360><c> exact</c><00:12:39.680><c> same</c><00:12:39.920><c> thing</c><00:12:40.160><c> for</c><00:12:40.320><c> our</c><00:12:40.480><c> current</c>

00:12:41.030 --> 00:12:41.040 align:start position:0%
do the exact same thing for our current
 

00:12:41.040 --> 00:12:42.069 align:start position:0%
do the exact same thing for our current
min

00:12:42.069 --> 00:12:42.079 align:start position:0%
min
 

00:12:42.079 --> 00:12:45.750 align:start position:0%
min
so<00:12:42.399><c> min</c><00:12:43.440><c> so</c><00:12:43.839><c> we</c><00:12:44.079><c> can</c><00:12:44.320><c> actually</c><00:12:44.720><c> take</c><00:12:45.040><c> all</c><00:12:45.360><c> three</c>

00:12:45.750 --> 00:12:45.760 align:start position:0%
so min so we can actually take all three
 

00:12:45.760 --> 00:12:46.949 align:start position:0%
so min so we can actually take all three
of<00:12:45.839><c> these</c><00:12:46.160><c> values</c>

00:12:46.949 --> 00:12:46.959 align:start position:0%
of these values
 

00:12:46.959 --> 00:12:48.710 align:start position:0%
of these values
copy<00:12:47.360><c> and</c><00:12:47.519><c> paste</c><00:12:47.839><c> them</c><00:12:48.000><c> and</c><00:12:48.079><c> then</c><00:12:48.240><c> put</c><00:12:48.480><c> them</c><00:12:48.639><c> in</c>

00:12:48.710 --> 00:12:48.720 align:start position:0%
copy and paste them and then put them in
 

00:12:48.720 --> 00:12:49.990 align:start position:0%
copy and paste them and then put them in
the<00:12:48.959><c> min</c><00:12:49.279><c> because</c>

00:12:49.990 --> 00:12:50.000 align:start position:0%
the min because
 

00:12:50.000 --> 00:12:52.550 align:start position:0%
the min because
we<00:12:50.240><c> want</c><00:12:50.560><c> whatever</c><00:12:50.880><c> the</c><00:12:51.120><c> min</c><00:12:51.440><c> containing</c><00:12:52.079><c> n</c><00:12:52.320><c> is</c>

00:12:52.550 --> 00:12:52.560 align:start position:0%
we want whatever the min containing n is
 

00:12:52.560 --> 00:12:54.230 align:start position:0%
we want whatever the min containing n is
and<00:12:52.639><c> it</c><00:12:52.720><c> could</c><00:12:52.880><c> be</c><00:12:53.120><c> anything</c><00:12:53.519><c> it</c><00:12:53.680><c> could</c><00:12:53.839><c> be</c>

00:12:54.230 --> 00:12:54.240 align:start position:0%
and it could be anything it could be
 

00:12:54.240 --> 00:12:56.870 align:start position:0%
and it could be anything it could be
n<00:12:54.399><c> times</c><00:12:54.720><c> current</c><00:12:55.040><c> max</c><00:12:55.440><c> n</c><00:12:55.600><c> times</c><00:12:56.000><c> current</c><00:12:56.480><c> min</c>

00:12:56.870 --> 00:12:56.880 align:start position:0%
n times current max n times current min
 

00:12:56.880 --> 00:12:57.269 align:start position:0%
n times current max n times current min
or

00:12:57.269 --> 00:12:57.279 align:start position:0%
or
 

00:12:57.279 --> 00:12:59.829 align:start position:0%
or
n<00:12:57.519><c> itself</c><00:12:58.160><c> so</c><00:12:58.399><c> an</c><00:12:58.560><c> example</c><00:12:58.959><c> would</c><00:12:59.120><c> be</c><00:12:59.360><c> negative</c>

00:12:59.829 --> 00:12:59.839 align:start position:0%
n itself so an example would be negative
 

00:12:59.839 --> 00:13:00.629 align:start position:0%
n itself so an example would be negative
one

00:13:00.629 --> 00:13:00.639 align:start position:0%
one
 

00:13:00.639 --> 00:13:03.910 align:start position:0%
one
and<00:13:01.120><c> negative</c><00:13:01.680><c> eight</c><00:13:02.399><c> if</c><00:13:02.639><c> we</c><00:13:02.959><c> multiply</c>

00:13:03.910 --> 00:13:03.920 align:start position:0%
and negative eight if we multiply
 

00:13:03.920 --> 00:13:06.389 align:start position:0%
and negative eight if we multiply
these<00:13:04.240><c> together</c><00:13:04.720><c> we</c><00:13:04.959><c> get</c><00:13:05.200><c> a</c><00:13:05.440><c> positive</c><00:13:06.000><c> eight</c>

00:13:06.389 --> 00:13:06.399 align:start position:0%
these together we get a positive eight
 

00:13:06.399 --> 00:13:08.310 align:start position:0%
these together we get a positive eight
but<00:13:06.639><c> we</c><00:13:06.720><c> don't</c><00:13:07.040><c> want</c><00:13:07.360><c> that</c><00:13:07.600><c> we</c><00:13:07.920><c> want</c>

00:13:08.310 --> 00:13:08.320 align:start position:0%
but we don't want that we want
 

00:13:08.320 --> 00:13:10.550 align:start position:0%
but we don't want that we want
the<00:13:08.480><c> minimum</c><00:13:08.959><c> which</c><00:13:09.200><c> could</c><00:13:09.360><c> be</c><00:13:09.920><c> just</c><00:13:10.160><c> negative</c>

00:13:10.550 --> 00:13:10.560 align:start position:0%
the minimum which could be just negative
 

00:13:10.560 --> 00:13:12.389 align:start position:0%
the minimum which could be just negative
eight<00:13:10.720><c> by</c><00:13:10.880><c> itself</c><00:13:11.360><c> which</c><00:13:11.600><c> would</c><00:13:11.839><c> be</c>

00:13:12.389 --> 00:13:12.399 align:start position:0%
eight by itself which would be
 

00:13:12.399 --> 00:13:15.110 align:start position:0%
eight by itself which would be
this<00:13:12.720><c> third</c><00:13:13.120><c> case</c><00:13:13.920><c> but</c><00:13:14.240><c> this</c><00:13:14.560><c> is</c><00:13:14.720><c> where</c><00:13:14.959><c> i</c>

00:13:15.110 --> 00:13:15.120 align:start position:0%
this third case but this is where i
 

00:13:15.120 --> 00:13:17.030 align:start position:0%
this third case but this is where i
always<00:13:15.600><c> end</c><00:13:15.760><c> up</c><00:13:15.839><c> with</c><00:13:16.079><c> a</c><00:13:16.320><c> bug</c>

00:13:17.030 --> 00:13:17.040 align:start position:0%
always end up with a bug
 

00:13:17.040 --> 00:13:20.069 align:start position:0%
always end up with a bug
so<00:13:17.600><c> do</c><00:13:17.680><c> you</c><00:13:17.920><c> see</c><00:13:18.160><c> how</c><00:13:18.399><c> we</c><00:13:18.639><c> actually</c><00:13:19.200><c> recomputed</c>

00:13:20.069 --> 00:13:20.079 align:start position:0%
so do you see how we actually recomputed
 

00:13:20.079 --> 00:13:22.470 align:start position:0%
so do you see how we actually recomputed
the<00:13:20.240><c> current</c><00:13:20.560><c> max</c><00:13:20.880><c> but</c><00:13:21.120><c> we</c><00:13:21.360><c> want</c><00:13:21.519><c> to</c><00:13:21.680><c> use</c><00:13:22.000><c> the</c>

00:13:22.470 --> 00:13:22.480 align:start position:0%
the current max but we want to use the
 

00:13:22.480 --> 00:13:25.590 align:start position:0%
the current max but we want to use the
old<00:13:23.120><c> current</c><00:13:23.519><c> max</c><00:13:24.560><c> so</c><00:13:24.880><c> i'm</c><00:13:25.120><c> actually</c><00:13:25.440><c> going</c><00:13:25.519><c> to</c>

00:13:25.590 --> 00:13:25.600 align:start position:0%
old current max so i'm actually going to
 

00:13:25.600 --> 00:13:27.190 align:start position:0%
old current max so i'm actually going to
have<00:13:25.839><c> a</c><00:13:26.079><c> temporary</c><00:13:26.560><c> variable</c>

00:13:27.190 --> 00:13:27.200 align:start position:0%
have a temporary variable
 

00:13:27.200 --> 00:13:30.870 align:start position:0%
have a temporary variable
up<00:13:27.440><c> here</c><00:13:28.560><c> temp</c><00:13:29.440><c> and</c><00:13:29.760><c> before</c><00:13:30.240><c> we</c><00:13:30.480><c> end</c><00:13:30.639><c> up</c>

00:13:30.870 --> 00:13:30.880 align:start position:0%
up here temp and before we end up
 

00:13:30.880 --> 00:13:32.949 align:start position:0%
up here temp and before we end up
reassigning<00:13:31.680><c> current</c><00:13:32.000><c> max</c><00:13:32.480><c> i'm</c><00:13:32.639><c> just</c><00:13:32.800><c> going</c>

00:13:32.949 --> 00:13:32.959 align:start position:0%
reassigning current max i'm just going
 

00:13:32.959 --> 00:13:33.990 align:start position:0%
reassigning current max i'm just going
to<00:13:33.120><c> compute</c>

00:13:33.990 --> 00:13:34.000 align:start position:0%
to compute
 

00:13:34.000 --> 00:13:37.430 align:start position:0%
to compute
current<00:13:34.399><c> max</c><00:13:35.440><c> times</c><00:13:36.079><c> n</c><00:13:36.560><c> and</c><00:13:36.639><c> then</c><00:13:36.959><c> save</c><00:13:37.200><c> it</c><00:13:37.360><c> in</c>

00:13:37.430 --> 00:13:37.440 align:start position:0%
current max times n and then save it in
 

00:13:37.440 --> 00:13:39.269 align:start position:0%
current max times n and then save it in
temp<00:13:37.760><c> so</c><00:13:37.920><c> then</c><00:13:38.160><c> we</c><00:13:38.240><c> can</c><00:13:38.560><c> use</c><00:13:38.880><c> it</c>

00:13:39.269 --> 00:13:39.279 align:start position:0%
temp so then we can use it
 

00:13:39.279 --> 00:13:41.590 align:start position:0%
temp so then we can use it
down<00:13:39.680><c> here</c><00:13:39.920><c> so</c><00:13:40.079><c> we're</c><00:13:40.160><c> going</c><00:13:40.240><c> to</c><00:13:40.320><c> replace</c><00:13:40.959><c> this</c>

00:13:41.590 --> 00:13:41.600 align:start position:0%
down here so we're going to replace this
 

00:13:41.600 --> 00:13:42.870 align:start position:0%
down here so we're going to replace this
with<00:13:42.240><c> temp</c>

00:13:42.870 --> 00:13:42.880 align:start position:0%
with temp
 

00:13:42.880 --> 00:13:45.350 align:start position:0%
with temp
so<00:13:43.120><c> this</c><00:13:43.360><c> way</c><00:13:43.600><c> we're</c><00:13:44.000><c> always</c><00:13:44.560><c> keeping</c><00:13:45.040><c> track</c>

00:13:45.350 --> 00:13:45.360 align:start position:0%
so this way we're always keeping track
 

00:13:45.360 --> 00:13:46.870 align:start position:0%
so this way we're always keeping track
of<00:13:45.440><c> what</c><00:13:45.600><c> the</c><00:13:45.839><c> current</c><00:13:46.160><c> max</c><00:13:46.560><c> is</c>

00:13:46.870 --> 00:13:46.880 align:start position:0%
of what the current max is
 

00:13:46.880 --> 00:13:49.829 align:start position:0%
of what the current max is
and<00:13:47.040><c> what</c><00:13:47.199><c> the</c><00:13:47.440><c> current</c><00:13:47.680><c> minimum</c><00:13:48.240><c> is</c><00:13:48.720><c> and</c><00:13:48.959><c> so</c>

00:13:49.829 --> 00:13:49.839 align:start position:0%
and what the current minimum is and so
 

00:13:49.839 --> 00:13:50.550 align:start position:0%
and what the current minimum is and so
we<00:13:50.079><c> can</c>

00:13:50.550 --> 00:13:50.560 align:start position:0%
we can
 

00:13:50.560 --> 00:13:53.829 align:start position:0%
we can
update<00:13:51.199><c> our</c><00:13:51.519><c> result</c><00:13:52.480><c> after</c><00:13:52.959><c> each</c><00:13:53.279><c> iteration</c>

00:13:53.829 --> 00:13:53.839 align:start position:0%
update our result after each iteration
 

00:13:53.839 --> 00:13:54.790 align:start position:0%
update our result after each iteration
of<00:13:54.000><c> the</c><00:13:54.240><c> loop</c>

00:13:54.790 --> 00:13:54.800 align:start position:0%
of the loop
 

00:13:54.800 --> 00:13:57.189 align:start position:0%
of the loop
and<00:13:54.959><c> we</c><00:13:55.199><c> want</c><00:13:55.440><c> the</c><00:13:55.760><c> max</c><00:13:56.240><c> product</c><00:13:56.639><c> so</c><00:13:56.880><c> we</c><00:13:57.040><c> can</c>

00:13:57.189 --> 00:13:57.199 align:start position:0%
and we want the max product so we can
 

00:13:57.199 --> 00:13:58.710 align:start position:0%
and we want the max product so we can
take<00:13:57.360><c> the</c><00:13:57.519><c> maximum</c>

00:13:58.710 --> 00:13:58.720 align:start position:0%
take the maximum
 

00:13:58.720 --> 00:14:01.350 align:start position:0%
take the maximum
of<00:13:59.279><c> result</c><00:13:59.760><c> itself</c><00:14:00.560><c> because</c><00:14:00.800><c> result</c><00:14:01.199><c> could</c>

00:14:01.350 --> 00:14:01.360 align:start position:0%
of result itself because result could
 

00:14:01.360 --> 00:14:02.310 align:start position:0%
of result itself because result could
still<00:14:01.519><c> be</c><00:14:01.680><c> the</c><00:14:01.839><c> max</c>

00:14:02.310 --> 00:14:02.320 align:start position:0%
still be the max
 

00:14:02.320 --> 00:14:05.509 align:start position:0%
still be the max
current<00:14:02.720><c> max</c><00:14:03.279><c> and</c><00:14:03.760><c> current</c><00:14:04.320><c> minimum</c><00:14:05.120><c> so</c>

00:14:05.509 --> 00:14:05.519 align:start position:0%
current max and current minimum so
 

00:14:05.519 --> 00:14:07.910 align:start position:0%
current max and current minimum so
that's<00:14:05.920><c> actually</c><00:14:06.560><c> it</c><00:14:06.880><c> like</c><00:14:07.040><c> we've</c><00:14:07.360><c> done</c><00:14:07.600><c> it</c>

00:14:07.910 --> 00:14:07.920 align:start position:0%
that's actually it like we've done it
 

00:14:07.920 --> 00:14:09.189 align:start position:0%
that's actually it like we've done it
and<00:14:08.320><c> we</c><00:14:08.560><c> can</c>

00:14:09.189 --> 00:14:09.199 align:start position:0%
and we can
 

00:14:09.199 --> 00:14:11.269 align:start position:0%
and we can
now<00:14:09.440><c> just</c><00:14:09.600><c> return</c><00:14:10.079><c> what</c><00:14:10.240><c> our</c><00:14:10.399><c> result</c><00:14:11.040><c> and</c><00:14:11.120><c> so</c>

00:14:11.269 --> 00:14:11.279 align:start position:0%
now just return what our result and so
 

00:14:11.279 --> 00:14:12.550 align:start position:0%
now just return what our result and so
this<00:14:11.519><c> is</c><00:14:11.600><c> actually</c><00:14:12.079><c> not</c>

00:14:12.550 --> 00:14:12.560 align:start position:0%
this is actually not
 

00:14:12.560 --> 00:14:15.590 align:start position:0%
this is actually not
that<00:14:12.880><c> much</c><00:14:13.279><c> code</c><00:14:14.000><c> and</c><00:14:14.720><c> it's</c><00:14:14.880><c> not</c><00:14:15.120><c> even</c><00:14:15.440><c> like</c>

00:14:15.590 --> 00:14:15.600 align:start position:0%
that much code and it's not even like
 

00:14:15.600 --> 00:14:15.990 align:start position:0%
that much code and it's not even like
when<00:14:15.760><c> you</c>

00:14:15.990 --> 00:14:16.000 align:start position:0%
when you
 

00:14:16.000 --> 00:14:17.670 align:start position:0%
when you
look<00:14:16.160><c> at</c><00:14:16.320><c> it</c><00:14:16.399><c> it's</c><00:14:16.560><c> hard</c><00:14:16.720><c> to</c><00:14:16.959><c> recognize</c><00:14:17.519><c> that</c>

00:14:17.670 --> 00:14:17.680 align:start position:0%
look at it it's hard to recognize that
 

00:14:17.680 --> 00:14:20.310 align:start position:0%
look at it it's hard to recognize that
it's<00:14:17.920><c> even</c><00:14:18.320><c> a</c><00:14:18.480><c> dynamic</c><00:14:18.959><c> programming</c><00:14:19.600><c> problem</c>

00:14:20.310 --> 00:14:20.320 align:start position:0%
it's even a dynamic programming problem
 

00:14:20.320 --> 00:14:22.069 align:start position:0%
it's even a dynamic programming problem
because<00:14:20.639><c> it's</c><00:14:20.800><c> not</c><00:14:20.959><c> like</c><00:14:21.199><c> we're</c><00:14:21.360><c> storing</c><00:14:21.839><c> an</c>

00:14:22.069 --> 00:14:22.079 align:start position:0%
because it's not like we're storing an
 

00:14:22.079 --> 00:14:23.910 align:start position:0%
because it's not like we're storing an
entire<00:14:22.639><c> array</c><00:14:23.040><c> like</c><00:14:23.279><c> dp</c>

00:14:23.910 --> 00:14:23.920 align:start position:0%
entire array like dp
 

00:14:23.920 --> 00:14:25.590 align:start position:0%
entire array like dp
and<00:14:24.000><c> then</c><00:14:24.320><c> having</c><00:14:24.560><c> an</c><00:14:24.720><c> array</c><00:14:25.199><c> we're</c><00:14:25.360><c> just</c>

00:14:25.590 --> 00:14:25.600 align:start position:0%
and then having an array we're just
 

00:14:25.600 --> 00:14:27.670 align:start position:0%
and then having an array we're just
maintaining<00:14:26.560><c> two</c><00:14:26.880><c> values</c>

00:14:27.670 --> 00:14:27.680 align:start position:0%
maintaining two values
 

00:14:27.680 --> 00:14:29.910 align:start position:0%
maintaining two values
current<00:14:28.079><c> min</c><00:14:28.480><c> and</c><00:14:28.720><c> current</c><00:14:29.040><c> max</c><00:14:29.600><c> and</c><00:14:29.680><c> what</c>

00:14:29.910 --> 00:14:29.920 align:start position:0%
current min and current max and what
 

00:14:29.920 --> 00:14:31.189 align:start position:0%
current min and current max and what
they<00:14:30.320><c> tell</c><00:14:30.639><c> us</c>

00:14:31.189 --> 00:14:31.199 align:start position:0%
they tell us
 

00:14:31.199 --> 00:14:34.310 align:start position:0%
they tell us
is<00:14:31.839><c> for</c><00:14:32.959><c> let's</c><00:14:33.199><c> say</c><00:14:33.360><c> for</c><00:14:33.600><c> example</c>

00:14:34.310 --> 00:14:34.320 align:start position:0%
is for let's say for example
 

00:14:34.320 --> 00:14:37.590 align:start position:0%
is for let's say for example
we<00:14:34.560><c> were</c><00:14:34.880><c> at</c><00:14:35.120><c> this</c><00:14:35.440><c> value</c><00:14:36.079><c> n</c><00:14:36.720><c> then</c><00:14:37.279><c> we're</c><00:14:37.440><c> going</c>

00:14:37.590 --> 00:14:37.600 align:start position:0%
we were at this value n then we're going
 

00:14:37.600 --> 00:14:38.389 align:start position:0%
we were at this value n then we're going
to<00:14:37.760><c> have</c>

00:14:38.389 --> 00:14:38.399 align:start position:0%
to have
 

00:14:38.399 --> 00:14:41.430 align:start position:0%
to have
the<00:14:38.720><c> current</c><00:14:39.120><c> maximum</c><00:14:39.839><c> of</c><00:14:40.079><c> this</c><00:14:40.399><c> subarray</c>

00:14:41.430 --> 00:14:41.440 align:start position:0%
the current maximum of this subarray
 

00:14:41.440 --> 00:14:44.389 align:start position:0%
the current maximum of this subarray
and<00:14:41.680><c> the</c><00:14:41.920><c> current</c><00:14:42.480><c> minimum</c><00:14:43.440><c> product</c><00:14:44.000><c> of</c><00:14:44.160><c> this</c>

00:14:44.389 --> 00:14:44.399 align:start position:0%
and the current minimum product of this
 

00:14:44.399 --> 00:14:45.189 align:start position:0%
and the current minimum product of this
subarray

00:14:45.189 --> 00:14:45.199 align:start position:0%
subarray
 

00:14:45.199 --> 00:14:47.509 align:start position:0%
subarray
and<00:14:45.279><c> then</c><00:14:45.519><c> when</c><00:14:45.760><c> our</c><00:14:46.000><c> n</c><00:14:46.320><c> gets</c><00:14:46.639><c> shifted</c><00:14:47.120><c> to</c><00:14:47.279><c> the</c>

00:14:47.509 --> 00:14:47.519 align:start position:0%
and then when our n gets shifted to the
 

00:14:47.519 --> 00:14:48.629 align:start position:0%
and then when our n gets shifted to the
next<00:14:47.839><c> value</c>

00:14:48.629 --> 00:14:48.639 align:start position:0%
next value
 

00:14:48.639 --> 00:14:50.710 align:start position:0%
next value
we're<00:14:48.800><c> going</c><00:14:48.959><c> to</c><00:14:49.040><c> have</c><00:14:49.519><c> the</c><00:14:49.680><c> current</c><00:14:50.079><c> maximum</c>

00:14:50.710 --> 00:14:50.720 align:start position:0%
we're going to have the current maximum
 

00:14:50.720 --> 00:14:51.750 align:start position:0%
we're going to have the current maximum
of<00:14:50.880><c> these</c><00:14:51.199><c> three</c>

00:14:51.750 --> 00:14:51.760 align:start position:0%
of these three
 

00:14:51.760 --> 00:14:53.910 align:start position:0%
of these three
and<00:14:51.920><c> the</c><00:14:52.079><c> current</c><00:14:52.399><c> minimum</c><00:14:52.959><c> product</c><00:14:53.440><c> of</c><00:14:53.600><c> these</c>

00:14:53.910 --> 00:14:53.920 align:start position:0%
and the current minimum product of these
 

00:14:53.920 --> 00:14:55.670 align:start position:0%
and the current minimum product of these
three<00:14:54.399><c> and</c><00:14:54.560><c> then</c><00:14:54.800><c> by</c><00:14:55.040><c> the</c><00:14:55.279><c> time</c>

00:14:55.670 --> 00:14:55.680 align:start position:0%
three and then by the time
 

00:14:55.680 --> 00:14:58.949 align:start position:0%
three and then by the time
our<00:14:56.000><c> n</c><00:14:56.240><c> value</c><00:14:56.720><c> is</c><00:14:56.959><c> out</c><00:14:57.120><c> of</c><00:14:57.440><c> bounds</c><00:14:58.399><c> we</c><00:14:58.639><c> will</c>

00:14:58.949 --> 00:14:58.959 align:start position:0%
our n value is out of bounds we will
 

00:14:58.959 --> 00:15:00.629 align:start position:0%
our n value is out of bounds we will
have<00:14:59.279><c> the</c><00:14:59.519><c> current</c><00:14:59.839><c> max</c>

00:15:00.629 --> 00:15:00.639 align:start position:0%
have the current max
 

00:15:00.639 --> 00:15:03.430 align:start position:0%
have the current max
and<00:15:00.959><c> the</c><00:15:01.120><c> current</c><00:15:01.519><c> minimum</c><00:15:02.079><c> of</c><00:15:02.320><c> the</c><00:15:02.560><c> entire</c>

00:15:03.430 --> 00:15:03.440 align:start position:0%
and the current minimum of the entire
 

00:15:03.440 --> 00:15:04.790 align:start position:0%
and the current minimum of the entire
array<00:15:04.000><c> computed</c>

00:15:04.790 --> 00:15:04.800 align:start position:0%
array computed
 

00:15:04.800 --> 00:15:06.790 align:start position:0%
array computed
so<00:15:04.959><c> it</c><00:15:05.199><c> runs</c><00:15:05.519><c> efficiently</c><00:15:06.320><c> and</c><00:15:06.480><c> that's</c>

00:15:06.790 --> 00:15:06.800 align:start position:0%
so it runs efficiently and that's
 

00:15:06.800 --> 00:15:07.910 align:start position:0%
so it runs efficiently and that's
because<00:15:07.519><c> we're</c>

00:15:07.910 --> 00:15:07.920 align:start position:0%
because we're
 

00:15:07.920 --> 00:15:09.750 align:start position:0%
because we're
only<00:15:08.240><c> iterating</c><00:15:08.800><c> through</c><00:15:08.959><c> the</c><00:15:09.199><c> input</c><00:15:09.519><c> so</c>

00:15:09.750 --> 00:15:09.760 align:start position:0%
only iterating through the input so
 

00:15:09.760 --> 00:15:11.350 align:start position:0%
only iterating through the input so
instead<00:15:10.079><c> of</c><00:15:10.240><c> being</c><00:15:10.560><c> n</c><00:15:10.800><c> squared</c>

00:15:11.350 --> 00:15:11.360 align:start position:0%
instead of being n squared
 

00:15:11.360 --> 00:15:14.470 align:start position:0%
instead of being n squared
the<00:15:11.680><c> time</c><00:15:11.920><c> complexity</c><00:15:12.639><c> is</c><00:15:12.880><c> just</c><00:15:13.440><c> big</c><00:15:13.680><c> o</c><00:15:13.839><c> of</c><00:15:14.000><c> n</c>

00:15:14.470 --> 00:15:14.480 align:start position:0%
the time complexity is just big o of n
 

00:15:14.480 --> 00:15:17.509 align:start position:0%
the time complexity is just big o of n
the<00:15:14.720><c> memory</c><00:15:15.120><c> complexity</c><00:15:15.839><c> is</c><00:15:16.000><c> big</c><00:15:16.320><c> o</c><00:15:16.560><c> of</c><00:15:16.880><c> one</c>

00:15:17.509 --> 00:15:17.519 align:start position:0%
the memory complexity is big o of one
 

00:15:17.519 --> 00:15:19.990 align:start position:0%
the memory complexity is big o of one
because<00:15:17.920><c> we</c><00:15:18.079><c> are</c><00:15:18.320><c> not</c><00:15:18.560><c> using</c><00:15:18.959><c> an</c><00:15:19.120><c> array</c><00:15:19.839><c> we're</c>

00:15:19.990 --> 00:15:20.000 align:start position:0%
because we are not using an array we're
 

00:15:20.000 --> 00:15:21.110 align:start position:0%
because we are not using an array we're
just<00:15:20.320><c> using</c>

00:15:21.110 --> 00:15:21.120 align:start position:0%
just using
 

00:15:21.120 --> 00:15:23.509 align:start position:0%
just using
uh<00:15:21.680><c> single</c><00:15:22.079><c> variables</c><00:15:22.800><c> i</c><00:15:22.959><c> hope</c><00:15:23.199><c> this</c><00:15:23.360><c> was</c>

00:15:23.509 --> 00:15:23.519 align:start position:0%
uh single variables i hope this was
 

00:15:23.519 --> 00:15:24.150 align:start position:0%
uh single variables i hope this was
helpful

00:15:24.150 --> 00:15:24.160 align:start position:0%
helpful
 

00:15:24.160 --> 00:15:26.389 align:start position:0%
helpful
if<00:15:24.320><c> you</c><00:15:24.480><c> enjoyed</c><00:15:25.199><c> please</c><00:15:25.519><c> like</c><00:15:25.680><c> and</c><00:15:25.839><c> subscribe</c>

00:15:26.389 --> 00:15:26.399 align:start position:0%
if you enjoyed please like and subscribe
 

00:15:26.399 --> 00:15:28.230 align:start position:0%
if you enjoyed please like and subscribe
it<00:15:26.480><c> supports</c><00:15:26.959><c> the</c><00:15:27.040><c> channel</c><00:15:27.360><c> a</c><00:15:27.600><c> lot</c><00:15:27.920><c> and</c><00:15:28.079><c> i'll</c>

00:15:28.230 --> 00:15:28.240 align:start position:0%
it supports the channel a lot and i'll
 

00:15:28.240 --> 00:15:28.790 align:start position:0%
it supports the channel a lot and i'll
hopefully

00:15:28.790 --> 00:15:28.800 align:start position:0%
hopefully
 

00:15:28.800 --> 00:15:31.920 align:start position:0%
hopefully
see<00:15:29.040><c> you</c><00:15:29.199><c> pretty</c><00:15:29.440><c> soon</c>

