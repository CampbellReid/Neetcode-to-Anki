WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.750 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.719><c> welcome</c><00:00:01.120><c> back</c><00:00:01.439><c> and</c><00:00:01.520><c> let's</c>

00:00:01.750 --> 00:00:01.760 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.760 --> 00:00:03.830 align:start position:0%
hey everyone welcome back and let's
write<00:00:02.000><c> some</c><00:00:02.159><c> more</c><00:00:02.399><c> neat</c><00:00:02.720><c> code</c><00:00:03.040><c> today</c><00:00:03.280><c> so</c><00:00:03.520><c> today</c>

00:00:03.830 --> 00:00:03.840 align:start position:0%
write some more neat code today so today
 

00:00:03.840 --> 00:00:04.550 align:start position:0%
write some more neat code today so today
let's<00:00:04.080><c> solve</c>

00:00:04.550 --> 00:00:04.560 align:start position:0%
let's solve
 

00:00:04.560 --> 00:00:07.030 align:start position:0%
let's solve
burst<00:00:04.960><c> balloons</c><00:00:05.839><c> and</c><00:00:06.080><c> this</c><00:00:06.319><c> problem</c><00:00:06.720><c> has</c>

00:00:07.030 --> 00:00:07.040 align:start position:0%
burst balloons and this problem has
 

00:00:07.040 --> 00:00:09.270 align:start position:0%
burst balloons and this problem has
really<00:00:07.520><c> earned</c><00:00:07.839><c> that</c><00:00:08.160><c> category</c><00:00:08.639><c> of</c><00:00:08.800><c> being</c><00:00:09.120><c> a</c>

00:00:09.270 --> 00:00:09.280 align:start position:0%
really earned that category of being a
 

00:00:09.280 --> 00:00:09.669 align:start position:0%
really earned that category of being a
hard

00:00:09.669 --> 00:00:09.679 align:start position:0%
hard
 

00:00:09.679 --> 00:00:11.430 align:start position:0%
hard
problem<00:00:10.320><c> so</c><00:00:10.480><c> this</c><00:00:10.719><c> is</c><00:00:10.800><c> going</c><00:00:10.880><c> to</c><00:00:10.960><c> be</c><00:00:11.120><c> another</c>

00:00:11.430 --> 00:00:11.440 align:start position:0%
problem so this is going to be another
 

00:00:11.440 --> 00:00:13.270 align:start position:0%
problem so this is going to be another
dynamic<00:00:11.920><c> programming</c><00:00:12.559><c> problem</c><00:00:12.960><c> and</c>

00:00:13.270 --> 00:00:13.280 align:start position:0%
dynamic programming problem and
 

00:00:13.280 --> 00:00:15.110 align:start position:0%
dynamic programming problem and
we're<00:00:13.519><c> going</c><00:00:13.679><c> to</c><00:00:13.840><c> solve</c><00:00:14.160><c> it</c><00:00:14.320><c> with</c><00:00:14.480><c> the</c><00:00:14.639><c> optimal</c>

00:00:15.110 --> 00:00:15.120 align:start position:0%
we're going to solve it with the optimal
 

00:00:15.120 --> 00:00:16.790 align:start position:0%
we're going to solve it with the optimal
solution<00:00:15.519><c> which</c><00:00:15.679><c> is</c><00:00:15.759><c> going</c><00:00:15.920><c> to</c><00:00:15.920><c> be</c><00:00:16.160><c> big</c><00:00:16.480><c> o</c>

00:00:16.790 --> 00:00:16.800 align:start position:0%
solution which is going to be big o
 

00:00:16.800 --> 00:00:20.550 align:start position:0%
solution which is going to be big o
of<00:00:17.119><c> n</c><00:00:17.520><c> cubed</c><00:00:18.400><c> time</c><00:00:18.640><c> complexity</c><00:00:19.680><c> and</c><00:00:19.840><c> i</c><00:00:20.000><c> believe</c>

00:00:20.550 --> 00:00:20.560 align:start position:0%
of n cubed time complexity and i believe
 

00:00:20.560 --> 00:00:23.830 align:start position:0%
of n cubed time complexity and i believe
big<00:00:20.880><c> o</c><00:00:21.199><c> of</c><00:00:21.520><c> n</c><00:00:21.840><c> squared</c><00:00:22.480><c> memory</c><00:00:22.880><c> complexity</c>

00:00:23.830 --> 00:00:23.840 align:start position:0%
big o of n squared memory complexity
 

00:00:23.840 --> 00:00:25.990 align:start position:0%
big o of n squared memory complexity
and<00:00:24.080><c> i'm</c><00:00:24.240><c> going</c><00:00:24.320><c> to</c><00:00:24.400><c> try</c><00:00:24.720><c> my</c><00:00:24.960><c> best</c><00:00:25.279><c> to</c><00:00:25.439><c> explain</c>

00:00:25.990 --> 00:00:26.000 align:start position:0%
and i'm going to try my best to explain
 

00:00:26.000 --> 00:00:27.910 align:start position:0%
and i'm going to try my best to explain
the<00:00:26.240><c> intuition</c><00:00:26.880><c> of</c><00:00:26.960><c> this</c><00:00:27.199><c> problem</c><00:00:27.599><c> and</c><00:00:27.760><c> kind</c>

00:00:27.910 --> 00:00:27.920 align:start position:0%
the intuition of this problem and kind
 

00:00:27.920 --> 00:00:29.750 align:start position:0%
the intuition of this problem and kind
of<00:00:28.080><c> walk</c><00:00:28.320><c> through</c><00:00:28.560><c> my</c><00:00:28.800><c> thought</c><00:00:29.119><c> process</c><00:00:29.519><c> but</c>

00:00:29.750 --> 00:00:29.760 align:start position:0%
of walk through my thought process but
 

00:00:29.760 --> 00:00:30.710 align:start position:0%
of walk through my thought process but
if<00:00:29.920><c> your</c><00:00:30.160><c> question</c>

00:00:30.710 --> 00:00:30.720 align:start position:0%
if your question
 

00:00:30.720 --> 00:00:32.870 align:start position:0%
if your question
is<00:00:30.960><c> if</c><00:00:31.119><c> you</c><00:00:31.279><c> saw</c><00:00:31.519><c> this</c><00:00:31.760><c> problem</c><00:00:32.079><c> for</c><00:00:32.239><c> the</c><00:00:32.480><c> first</c>

00:00:32.870 --> 00:00:32.880 align:start position:0%
is if you saw this problem for the first
 

00:00:32.880 --> 00:00:34.229 align:start position:0%
is if you saw this problem for the first
time<00:00:33.200><c> in</c><00:00:33.360><c> an</c><00:00:33.600><c> interview</c>

00:00:34.229 --> 00:00:34.239 align:start position:0%
time in an interview
 

00:00:34.239 --> 00:00:36.150 align:start position:0%
time in an interview
how<00:00:34.399><c> would</c><00:00:34.559><c> you</c><00:00:34.719><c> be</c><00:00:34.880><c> able</c><00:00:35.040><c> to</c><00:00:35.200><c> solve</c><00:00:35.600><c> it</c><00:00:35.840><c> that's</c>

00:00:36.150 --> 00:00:36.160 align:start position:0%
how would you be able to solve it that's
 

00:00:36.160 --> 00:00:38.310 align:start position:0%
how would you be able to solve it that's
a<00:00:36.320><c> good</c><00:00:36.640><c> question</c><00:00:37.120><c> and</c><00:00:37.360><c> honestly</c><00:00:37.840><c> i</c><00:00:38.079><c> don't</c>

00:00:38.310 --> 00:00:38.320 align:start position:0%
a good question and honestly i don't
 

00:00:38.320 --> 00:00:40.069 align:start position:0%
a good question and honestly i don't
have<00:00:38.559><c> the</c><00:00:38.719><c> answer</c><00:00:39.040><c> to</c><00:00:39.200><c> that</c><00:00:39.440><c> unless</c><00:00:39.840><c> your</c>

00:00:40.069 --> 00:00:40.079 align:start position:0%
have the answer to that unless your
 

00:00:40.079 --> 00:00:40.869 align:start position:0%
have the answer to that unless your
interviewer

00:00:40.869 --> 00:00:40.879 align:start position:0%
interviewer
 

00:00:40.879 --> 00:00:43.110 align:start position:0%
interviewer
gave<00:00:41.120><c> you</c><00:00:41.280><c> a</c><00:00:41.360><c> couple</c><00:00:41.680><c> of</c><00:00:41.920><c> hints</c><00:00:42.559><c> that</c><00:00:42.719><c> kind</c><00:00:42.879><c> of</c>

00:00:43.110 --> 00:00:43.120 align:start position:0%
gave you a couple of hints that kind of
 

00:00:43.120 --> 00:00:43.990 align:start position:0%
gave you a couple of hints that kind of
pointed<00:00:43.440><c> you</c><00:00:43.600><c> in</c><00:00:43.680><c> the</c><00:00:43.760><c> right</c>

00:00:43.990 --> 00:00:44.000 align:start position:0%
pointed you in the right
 

00:00:44.000 --> 00:00:46.549 align:start position:0%
pointed you in the right
direction<00:00:44.480><c> because</c><00:00:45.120><c> this</c><00:00:45.440><c> problem</c><00:00:46.079><c> requires</c>

00:00:46.549 --> 00:00:46.559 align:start position:0%
direction because this problem requires
 

00:00:46.559 --> 00:00:48.150 align:start position:0%
direction because this problem requires
a<00:00:46.640><c> couple</c><00:00:46.960><c> tricks</c><00:00:47.360><c> to</c><00:00:47.520><c> get</c><00:00:47.680><c> it</c><00:00:47.760><c> to</c><00:00:47.840><c> work</c>

00:00:48.150 --> 00:00:48.160 align:start position:0%
a couple tricks to get it to work
 

00:00:48.160 --> 00:00:49.110 align:start position:0%
a couple tricks to get it to work
efficiently

00:00:49.110 --> 00:00:49.120 align:start position:0%
efficiently
 

00:00:49.120 --> 00:00:50.790 align:start position:0%
efficiently
so<00:00:49.280><c> the</c><00:00:49.440><c> description</c><00:00:50.000><c> is</c><00:00:50.160><c> pretty</c><00:00:50.480><c> simple</c>

00:00:50.790 --> 00:00:50.800 align:start position:0%
so the description is pretty simple
 

00:00:50.800 --> 00:00:52.470 align:start position:0%
so the description is pretty simple
we're<00:00:51.039><c> given</c><00:00:51.520><c> n</c><00:00:51.760><c> balloons</c>

00:00:52.470 --> 00:00:52.480 align:start position:0%
we're given n balloons
 

00:00:52.480 --> 00:00:54.950 align:start position:0%
we're given n balloons
indexed<00:00:52.960><c> from</c><00:00:53.280><c> position</c><00:00:53.760><c> zero</c><00:00:54.079><c> to</c><00:00:54.239><c> position</c><00:00:54.719><c> n</c>

00:00:54.950 --> 00:00:54.960 align:start position:0%
indexed from position zero to position n
 

00:00:54.960 --> 00:00:55.830 align:start position:0%
indexed from position zero to position n
minus<00:00:55.360><c> one</c>

00:00:55.830 --> 00:00:55.840 align:start position:0%
minus one
 

00:00:55.840 --> 00:00:57.510 align:start position:0%
minus one
each<00:00:56.160><c> balloon</c><00:00:56.719><c> is</c><00:00:56.879><c> painted</c><00:00:57.199><c> with</c><00:00:57.440><c> a</c>

00:00:57.510 --> 00:00:57.520 align:start position:0%
each balloon is painted with a
 

00:00:57.520 --> 00:00:59.189 align:start position:0%
each balloon is painted with a
particular<00:00:58.239><c> number</c><00:00:58.719><c> on</c><00:00:58.879><c> it</c>

00:00:59.189 --> 00:00:59.199 align:start position:0%
particular number on it
 

00:00:59.199 --> 00:01:00.950 align:start position:0%
particular number on it
so<00:00:59.440><c> basically</c><00:00:59.760><c> we're</c><00:00:59.920><c> given</c><00:01:00.239><c> an</c><00:01:00.399><c> input</c><00:01:00.640><c> array</c>

00:01:00.950 --> 00:01:00.960 align:start position:0%
so basically we're given an input array
 

00:01:00.960 --> 00:01:03.189 align:start position:0%
so basically we're given an input array
of<00:01:01.120><c> nums</c><00:01:01.600><c> or</c><00:01:02.000><c> other</c><00:01:02.239><c> words</c><00:01:02.559><c> balloons</c>

00:01:03.189 --> 00:01:03.199 align:start position:0%
of nums or other words balloons
 

00:01:03.199 --> 00:01:05.109 align:start position:0%
of nums or other words balloons
and<00:01:03.280><c> we're</c><00:01:03.520><c> asked</c><00:01:03.840><c> to</c><00:01:04.159><c> burst</c><00:01:04.640><c> all</c><00:01:04.879><c> of</c><00:01:04.960><c> the</c>

00:01:05.109 --> 00:01:05.119 align:start position:0%
and we're asked to burst all of the
 

00:01:05.119 --> 00:01:07.510 align:start position:0%
and we're asked to burst all of the
balloons<00:01:05.680><c> now</c><00:01:05.840><c> when</c><00:01:06.080><c> we</c><00:01:06.320><c> burst</c><00:01:06.720><c> a</c><00:01:06.880><c> particular</c>

00:01:07.510 --> 00:01:07.520 align:start position:0%
balloons now when we burst a particular
 

00:01:07.520 --> 00:01:08.310 align:start position:0%
balloons now when we burst a particular
balloon

00:01:08.310 --> 00:01:08.320 align:start position:0%
balloon
 

00:01:08.320 --> 00:01:11.429 align:start position:0%
balloon
i<00:01:08.960><c> we</c><00:01:09.119><c> are</c><00:01:09.280><c> going</c><00:01:09.360><c> to</c><00:01:09.680><c> add</c><00:01:10.000><c> to</c><00:01:10.159><c> the</c><00:01:10.400><c> total</c><00:01:11.200><c> we're</c>

00:01:11.429 --> 00:01:11.439 align:start position:0%
i we are going to add to the total we're
 

00:01:11.439 --> 00:01:13.190 align:start position:0%
i we are going to add to the total we're
basically<00:01:11.840><c> going</c><00:01:12.000><c> to</c><00:01:12.080><c> get</c><00:01:12.240><c> a</c><00:01:12.320><c> total</c><00:01:12.720><c> number</c><00:01:12.960><c> of</c>

00:01:13.190 --> 00:01:13.200 align:start position:0%
basically going to get a total number of
 

00:01:13.200 --> 00:01:15.030 align:start position:0%
basically going to get a total number of
coins<00:01:13.680><c> from</c><00:01:14.000><c> popping</c><00:01:14.320><c> that</c><00:01:14.479><c> balloon</c>

00:01:15.030 --> 00:01:15.040 align:start position:0%
coins from popping that balloon
 

00:01:15.040 --> 00:01:16.310 align:start position:0%
coins from popping that balloon
we're<00:01:15.200><c> going</c><00:01:15.360><c> to</c><00:01:15.600><c> the</c><00:01:15.759><c> total</c><00:01:16.080><c> that</c><00:01:16.159><c> we're</c>

00:01:16.310 --> 00:01:16.320 align:start position:0%
we're going to the total that we're
 

00:01:16.320 --> 00:01:18.070 align:start position:0%
we're going to the total that we're
going<00:01:16.400><c> to</c><00:01:16.640><c> get</c><00:01:16.960><c> is</c><00:01:17.119><c> basically</c><00:01:17.520><c> the</c><00:01:17.759><c> number</c>

00:01:18.070 --> 00:01:18.080 align:start position:0%
going to get is basically the number
 

00:01:18.080 --> 00:01:20.390 align:start position:0%
going to get is basically the number
that<00:01:18.240><c> was</c><00:01:18.560><c> painted</c><00:01:19.040><c> on</c><00:01:19.200><c> that</c><00:01:19.360><c> balloon</c>

00:01:20.390 --> 00:01:20.400 align:start position:0%
that was painted on that balloon
 

00:01:20.400 --> 00:01:23.910 align:start position:0%
that was painted on that balloon
multiplied<00:01:21.439><c> by</c><00:01:21.680><c> the</c><00:01:21.920><c> two</c><00:01:22.320><c> adjacent</c><00:01:23.040><c> balloons</c>

00:01:23.910 --> 00:01:23.920 align:start position:0%
multiplied by the two adjacent balloons
 

00:01:23.920 --> 00:01:26.789 align:start position:0%
multiplied by the two adjacent balloons
to<00:01:24.159><c> that</c><00:01:24.400><c> balloon</c><00:01:25.040><c> at</c><00:01:25.200><c> that</c><00:01:25.439><c> particular</c><00:01:26.159><c> time</c>

00:01:26.789 --> 00:01:26.799 align:start position:0%
to that balloon at that particular time
 

00:01:26.799 --> 00:01:28.789 align:start position:0%
to that balloon at that particular time
and<00:01:26.960><c> of</c><00:01:27.119><c> course</c><00:01:27.520><c> we</c><00:01:27.759><c> might</c><00:01:28.000><c> have</c><00:01:28.240><c> a</c><00:01:28.400><c> balloon</c>

00:01:28.789 --> 00:01:28.799 align:start position:0%
and of course we might have a balloon
 

00:01:28.799 --> 00:01:30.950 align:start position:0%
and of course we might have a balloon
that's<00:01:29.200><c> on</c><00:01:29.360><c> the</c><00:01:29.520><c> boundary</c><00:01:30.000><c> or</c><00:01:30.240><c> on</c><00:01:30.320><c> the</c><00:01:30.560><c> edge</c><00:01:30.799><c> of</c>

00:01:30.950 --> 00:01:30.960 align:start position:0%
that's on the boundary or on the edge of
 

00:01:30.960 --> 00:01:32.550 align:start position:0%
that's on the boundary or on the edge of
our<00:01:31.119><c> input</c><00:01:31.360><c> array</c><00:01:31.680><c> so</c><00:01:31.840><c> if</c><00:01:31.920><c> that's</c><00:01:32.240><c> the</c><00:01:32.320><c> case</c>

00:01:32.550 --> 00:01:32.560 align:start position:0%
our input array so if that's the case
 

00:01:32.560 --> 00:01:35.030 align:start position:0%
our input array so if that's the case
for<00:01:32.640><c> example</c><00:01:32.960><c> if</c><00:01:33.119><c> i</c><00:01:33.280><c> minus</c><00:01:33.680><c> 1</c><00:01:33.920><c> or</c><00:01:34.079><c> i</c><00:01:34.320><c> plus</c><00:01:34.720><c> 1</c>

00:01:35.030 --> 00:01:35.040 align:start position:0%
for example if i minus 1 or i plus 1
 

00:01:35.040 --> 00:01:37.590 align:start position:0%
for example if i minus 1 or i plus 1
are<00:01:35.280><c> out</c><00:01:35.439><c> of</c><00:01:35.759><c> bounds</c><00:01:36.320><c> of</c><00:01:36.400><c> the</c><00:01:36.560><c> input</c><00:01:36.880><c> array</c>

00:01:37.590 --> 00:01:37.600 align:start position:0%
are out of bounds of the input array
 

00:01:37.600 --> 00:01:39.510 align:start position:0%
are out of bounds of the input array
then<00:01:37.840><c> we're</c><00:01:38.079><c> basically</c><00:01:38.640><c> going</c><00:01:38.799><c> to</c><00:01:38.960><c> assume</c>

00:01:39.510 --> 00:01:39.520 align:start position:0%
then we're basically going to assume
 

00:01:39.520 --> 00:01:40.230 align:start position:0%
then we're basically going to assume
that<00:01:39.759><c> there's</c>

00:01:40.230 --> 00:01:40.240 align:start position:0%
that there's
 

00:01:40.240 --> 00:01:41.910 align:start position:0%
that there's
you<00:01:40.400><c> know</c><00:01:40.479><c> a</c><00:01:40.560><c> couple</c><00:01:40.880><c> balloons</c><00:01:41.360><c> with</c><00:01:41.600><c> one</c>

00:01:41.910 --> 00:01:41.920 align:start position:0%
you know a couple balloons with one
 

00:01:41.920 --> 00:01:43.910 align:start position:0%
you know a couple balloons with one
painted<00:01:42.320><c> on</c><00:01:42.479><c> them</c><00:01:42.799><c> on</c><00:01:42.960><c> the</c><00:01:43.280><c> edge</c>

00:01:43.910 --> 00:01:43.920 align:start position:0%
painted on them on the edge
 

00:01:43.920 --> 00:01:45.830 align:start position:0%
painted on them on the edge
basically<00:01:44.320><c> there's</c><00:01:44.560><c> gonna</c><00:01:44.720><c> be</c><00:01:44.880><c> some</c><00:01:45.200><c> implicit</c>

00:01:45.830 --> 00:01:45.840 align:start position:0%
basically there's gonna be some implicit
 

00:01:45.840 --> 00:01:47.590 align:start position:0%
basically there's gonna be some implicit
ones<00:01:46.159><c> so</c><00:01:46.320><c> for</c><00:01:46.479><c> example</c><00:01:46.799><c> if</c><00:01:46.880><c> this</c><00:01:47.040><c> is</c><00:01:47.119><c> our</c><00:01:47.280><c> input</c>

00:01:47.590 --> 00:01:47.600 align:start position:0%
ones so for example if this is our input
 

00:01:47.600 --> 00:01:49.030 align:start position:0%
ones so for example if this is our input
array<00:01:47.840><c> we're</c><00:01:48.000><c> assuming</c><00:01:48.320><c> there's</c><00:01:48.560><c> a</c><00:01:48.640><c> one</c><00:01:48.880><c> over</c>

00:01:49.030 --> 00:01:49.040 align:start position:0%
array we're assuming there's a one over
 

00:01:49.040 --> 00:01:50.230 align:start position:0%
array we're assuming there's a one over
here<00:01:49.200><c> and</c><00:01:49.280><c> there's</c><00:01:49.520><c> one</c><00:01:49.680><c> over</c><00:01:49.840><c> here</c><00:01:50.079><c> the</c>

00:01:50.230 --> 00:01:50.240 align:start position:0%
here and there's one over here the
 

00:01:50.240 --> 00:01:51.749 align:start position:0%
here and there's one over here the
reason<00:01:50.479><c> why</c><00:01:50.720><c> is</c><00:01:50.799><c> let's</c><00:01:50.960><c> say</c><00:01:51.119><c> we</c><00:01:51.200><c> were</c><00:01:51.360><c> given</c><00:01:51.600><c> an</c>

00:01:51.749 --> 00:01:51.759 align:start position:0%
reason why is let's say we were given an
 

00:01:51.759 --> 00:01:53.670 align:start position:0%
reason why is let's say we were given an
input<00:01:52.000><c> array</c><00:01:52.320><c> of</c><00:01:52.399><c> one</c><00:01:52.640><c> number</c><00:01:52.960><c> let's</c><00:01:53.119><c> say</c><00:01:53.280><c> that</c>

00:01:53.670 --> 00:01:53.680 align:start position:0%
input array of one number let's say that
 

00:01:53.680 --> 00:01:56.389 align:start position:0%
input array of one number let's say that
value<00:01:54.079><c> was</c><00:01:54.399><c> five</c><00:01:54.720><c> right</c><00:01:55.200><c> if</c><00:01:55.360><c> we</c><00:01:55.520><c> pop</c><00:01:55.840><c> this</c>

00:01:56.389 --> 00:01:56.399 align:start position:0%
value was five right if we pop this
 

00:01:56.399 --> 00:01:57.749 align:start position:0%
value was five right if we pop this
we're<00:01:56.560><c> going</c><00:01:56.640><c> to</c><00:01:56.719><c> assume</c><00:01:56.960><c> that</c><00:01:57.119><c> there's</c><00:01:57.360><c> ones</c>

00:01:57.749 --> 00:01:57.759 align:start position:0%
we're going to assume that there's ones
 

00:01:57.759 --> 00:01:59.350 align:start position:0%
we're going to assume that there's ones
on<00:01:57.840><c> the</c><00:01:58.000><c> edge</c><00:01:58.240><c> right</c><00:01:58.399><c> so</c><00:01:58.560><c> if</c><00:01:58.640><c> we</c><00:01:58.799><c> pop</c><00:01:59.040><c> five</c><00:01:59.280><c> what</c>

00:01:59.350 --> 00:01:59.360 align:start position:0%
on the edge right so if we pop five what
 

00:01:59.360 --> 00:02:00.630 align:start position:0%
on the edge right so if we pop five what
are<00:01:59.439><c> we</c><00:01:59.600><c> going</c><00:01:59.600><c> to</c><00:01:59.680><c> get</c><00:01:59.840><c> we're</c><00:01:59.920><c> gonna</c><00:02:00.079><c> get</c><00:02:00.240><c> five</c>

00:02:00.630 --> 00:02:00.640 align:start position:0%
are we going to get we're gonna get five
 

00:02:00.640 --> 00:02:02.709 align:start position:0%
are we going to get we're gonna get five
times<00:02:00.960><c> the</c><00:02:01.119><c> right</c><00:02:01.439><c> neighbor</c><00:02:01.759><c> which</c><00:02:02.000><c> is</c><00:02:02.159><c> one</c>

00:02:02.709 --> 00:02:02.719 align:start position:0%
times the right neighbor which is one
 

00:02:02.719 --> 00:02:04.469 align:start position:0%
times the right neighbor which is one
times<00:02:03.040><c> the</c><00:02:03.119><c> left</c><00:02:03.360><c> neighbor</c><00:02:03.680><c> which</c><00:02:03.840><c> is</c><00:02:04.000><c> one</c>

00:02:04.469 --> 00:02:04.479 align:start position:0%
times the left neighbor which is one
 

00:02:04.479 --> 00:02:05.830 align:start position:0%
times the left neighbor which is one
right<00:02:04.640><c> so</c><00:02:04.880><c> basically</c><00:02:05.280><c> these</c><00:02:05.439><c> are</c><00:02:05.600><c> just</c>

00:02:05.830 --> 00:02:05.840 align:start position:0%
right so basically these are just
 

00:02:05.840 --> 00:02:07.910 align:start position:0%
right so basically these are just
neutral<00:02:06.399><c> values</c><00:02:07.040><c> so</c><00:02:07.200><c> the</c><00:02:07.360><c> total</c><00:02:07.600><c> number</c><00:02:07.759><c> of</c>

00:02:07.910 --> 00:02:07.920 align:start position:0%
neutral values so the total number of
 

00:02:07.920 --> 00:02:09.190 align:start position:0%
neutral values so the total number of
coins<00:02:08.160><c> we're</c><00:02:08.319><c> going</c><00:02:08.399><c> to</c><00:02:08.479><c> get</c><00:02:08.640><c> from</c><00:02:08.800><c> a</c><00:02:08.879><c> single</c>

00:02:09.190 --> 00:02:09.200 align:start position:0%
coins we're going to get from a single
 

00:02:09.200 --> 00:02:09.910 align:start position:0%
coins we're going to get from a single
balloon

00:02:09.910 --> 00:02:09.920 align:start position:0%
balloon
 

00:02:09.920 --> 00:02:11.670 align:start position:0%
balloon
is<00:02:10.080><c> just</c><00:02:10.239><c> going</c><00:02:10.319><c> to</c><00:02:10.399><c> be</c><00:02:10.560><c> that</c><00:02:10.800><c> value</c><00:02:11.120><c> right</c><00:02:11.440><c> 5.</c>

00:02:11.670 --> 00:02:11.680 align:start position:0%
is just going to be that value right 5.
 

00:02:11.680 --> 00:02:13.190 align:start position:0%
is just going to be that value right 5.
that<00:02:11.840><c> makes</c><00:02:12.080><c> sense</c><00:02:12.400><c> that's</c><00:02:12.560><c> why</c><00:02:12.720><c> we're</c><00:02:12.959><c> doing</c>

00:02:13.190 --> 00:02:13.200 align:start position:0%
that makes sense that's why we're doing
 

00:02:13.200 --> 00:02:13.830 align:start position:0%
that makes sense that's why we're doing
this

00:02:13.830 --> 00:02:13.840 align:start position:0%
this
 

00:02:13.840 --> 00:02:15.990 align:start position:0%
this
so<00:02:14.239><c> in</c><00:02:14.400><c> this</c><00:02:14.640><c> example</c><00:02:15.040><c> the</c><00:02:15.200><c> total</c><00:02:15.520><c> number</c><00:02:15.840><c> of</c>

00:02:15.990 --> 00:02:16.000 align:start position:0%
so in this example the total number of
 

00:02:16.000 --> 00:02:18.710 align:start position:0%
so in this example the total number of
maximum<00:02:16.560><c> coins</c><00:02:16.800><c> we</c><00:02:16.959><c> can</c><00:02:17.040><c> get</c><00:02:17.280><c> is</c><00:02:17.560><c> 167</c>

00:02:18.710 --> 00:02:18.720 align:start position:0%
maximum coins we can get is 167
 

00:02:18.720 --> 00:02:22.150 align:start position:0%
maximum coins we can get is 167
and<00:02:18.879><c> that</c><00:02:19.200><c> is</c><00:02:19.520><c> if</c><00:02:19.760><c> we</c><00:02:20.480><c> first</c><00:02:20.959><c> pop</c><00:02:21.440><c> this</c><00:02:21.840><c> one</c>

00:02:22.150 --> 00:02:22.160 align:start position:0%
and that is if we first pop this one
 

00:02:22.160 --> 00:02:23.110 align:start position:0%
and that is if we first pop this one
value

00:02:23.110 --> 00:02:23.120 align:start position:0%
value
 

00:02:23.120 --> 00:02:24.869 align:start position:0%
value
and<00:02:23.200><c> then</c><00:02:23.360><c> we</c><00:02:23.520><c> get</c><00:02:23.680><c> three</c><00:02:23.920><c> times</c><00:02:24.239><c> one</c><00:02:24.480><c> times</c>

00:02:24.869 --> 00:02:24.879 align:start position:0%
and then we get three times one times
 

00:02:24.879 --> 00:02:26.470 align:start position:0%
and then we get three times one times
five<00:02:25.200><c> because</c><00:02:25.520><c> three</c><00:02:25.840><c> and</c><00:02:26.000><c> five</c><00:02:26.239><c> are</c><00:02:26.319><c> the</c>

00:02:26.470 --> 00:02:26.480 align:start position:0%
five because three and five are the
 

00:02:26.480 --> 00:02:27.190 align:start position:0%
five because three and five are the
neighbors

00:02:27.190 --> 00:02:27.200 align:start position:0%
neighbors
 

00:02:27.200 --> 00:02:29.510 align:start position:0%
neighbors
since<00:02:27.440><c> we</c><00:02:27.599><c> pop</c><00:02:28.000><c> that</c><00:02:28.800><c> next</c><00:02:29.120><c> what</c><00:02:29.280><c> we're</c><00:02:29.440><c> going</c>

00:02:29.510 --> 00:02:29.520 align:start position:0%
since we pop that next what we're going
 

00:02:29.520 --> 00:02:30.710 align:start position:0%
since we pop that next what we're going
to<00:02:29.680><c> pop</c><00:02:30.160><c> is</c><00:02:30.319><c> the</c>

00:02:30.710 --> 00:02:30.720 align:start position:0%
to pop is the
 

00:02:30.720 --> 00:02:33.190 align:start position:0%
to pop is the
five<00:02:31.360><c> now</c><00:02:31.680><c> since</c><00:02:31.920><c> we're</c><00:02:32.160><c> popping</c><00:02:32.480><c> this</c><00:02:32.720><c> five</c>

00:02:33.190 --> 00:02:33.200 align:start position:0%
five now since we're popping this five
 

00:02:33.200 --> 00:02:34.710 align:start position:0%
five now since we're popping this five
well<00:02:33.440><c> we</c><00:02:33.519><c> need</c><00:02:33.680><c> to</c><00:02:33.760><c> get</c><00:02:33.920><c> its</c><00:02:34.080><c> neighbors</c><00:02:34.480><c> right</c>

00:02:34.710 --> 00:02:34.720 align:start position:0%
well we need to get its neighbors right
 

00:02:34.720 --> 00:02:36.390 align:start position:0%
well we need to get its neighbors right
it's<00:02:34.879><c> right</c><00:02:35.120><c> neighbor</c><00:02:35.440><c> is</c><00:02:35.680><c> obviously</c>

00:02:36.390 --> 00:02:36.400 align:start position:0%
it's right neighbor is obviously
 

00:02:36.400 --> 00:02:39.430 align:start position:0%
it's right neighbor is obviously
a<00:02:36.800><c> since</c><00:02:37.040><c> we</c><00:02:37.360><c> popped</c><00:02:37.920><c> this</c><00:02:38.160><c> one</c><00:02:38.480><c> its</c><00:02:38.959><c> its</c><00:02:39.200><c> left</c>

00:02:39.430 --> 00:02:39.440 align:start position:0%
a since we popped this one its its left
 

00:02:39.440 --> 00:02:41.030 align:start position:0%
a since we popped this one its its left
neighbor<00:02:39.760><c> now</c><00:02:40.080><c> is</c><00:02:40.239><c> going</c><00:02:40.319><c> to</c><00:02:40.480><c> be</c>

00:02:41.030 --> 00:02:41.040 align:start position:0%
neighbor now is going to be
 

00:02:41.040 --> 00:02:42.710 align:start position:0%
neighbor now is going to be
the<00:02:41.360><c> 3</c><00:02:41.680><c> that's</c><00:02:41.920><c> over</c><00:02:42.160><c> here</c><00:02:42.319><c> so</c><00:02:42.400><c> we're</c><00:02:42.560><c> going</c><00:02:42.640><c> to</c>

00:02:42.710 --> 00:02:42.720 align:start position:0%
the 3 that's over here so we're going to
 

00:02:42.720 --> 00:02:44.550 align:start position:0%
the 3 that's over here so we're going to
do<00:02:42.959><c> 3</c><00:02:43.200><c> times</c><00:02:43.519><c> 5</c><00:02:43.760><c> times</c><00:02:44.160><c> 8</c>

00:02:44.550 --> 00:02:44.560 align:start position:0%
do 3 times 5 times 8
 

00:02:44.560 --> 00:02:46.949 align:start position:0%
do 3 times 5 times 8
so<00:02:44.800><c> after</c><00:02:45.040><c> we</c><00:02:45.200><c> pop</c><00:02:45.440><c> the</c><00:02:45.680><c> 5</c><00:02:46.160><c> we</c><00:02:46.319><c> now</c><00:02:46.480><c> have</c><00:02:46.720><c> 2</c>

00:02:46.949 --> 00:02:46.959 align:start position:0%
so after we pop the 5 we now have 2
 

00:02:46.959 --> 00:02:47.750 align:start position:0%
so after we pop the 5 we now have 2
remaining

00:02:47.750 --> 00:02:47.760 align:start position:0%
remaining
 

00:02:47.760 --> 00:02:49.830 align:start position:0%
remaining
we're<00:02:47.920><c> going</c><00:02:48.000><c> to</c><00:02:48.080><c> pop</c><00:02:48.560><c> the</c><00:02:48.879><c> 3</c><00:02:49.280><c> first</c><00:02:49.760><c> and</c>

00:02:49.830 --> 00:02:49.840 align:start position:0%
we're going to pop the 3 first and
 

00:02:49.840 --> 00:02:51.350 align:start position:0%
we're going to pop the 3 first and
that's<00:02:50.080><c> going</c><00:02:50.160><c> to</c><00:02:50.239><c> give</c><00:02:50.480><c> us</c><00:02:50.720><c> 3</c>

00:02:51.350 --> 00:02:51.360 align:start position:0%
that's going to give us 3
 

00:02:51.360 --> 00:02:53.670 align:start position:0%
that's going to give us 3
times<00:02:51.920><c> 8</c><00:02:52.319><c> and</c><00:02:52.560><c> the</c><00:02:52.720><c> left</c><00:02:52.959><c> neighbor</c><00:02:53.360><c> of</c><00:02:53.440><c> course</c>

00:02:53.670 --> 00:02:53.680 align:start position:0%
times 8 and the left neighbor of course
 

00:02:53.680 --> 00:02:54.550 align:start position:0%
times 8 and the left neighbor of course
remember<00:02:54.080><c> we</c>

00:02:54.550 --> 00:02:54.560 align:start position:0%
remember we
 

00:02:54.560 --> 00:02:56.309 align:start position:0%
remember we
talked<00:02:54.800><c> about</c><00:02:55.040><c> the</c><00:02:55.120><c> beginning</c><00:02:55.440><c> is</c><00:02:55.599><c> implied</c><00:02:56.160><c> to</c>

00:02:56.309 --> 00:02:56.319 align:start position:0%
talked about the beginning is implied to
 

00:02:56.319 --> 00:02:58.149 align:start position:0%
talked about the beginning is implied to
be<00:02:56.560><c> a</c><00:02:56.879><c> 1</c><00:02:57.280><c> so</c><00:02:57.440><c> then</c><00:02:57.599><c> we're</c><00:02:57.760><c> going</c><00:02:57.760><c> to</c><00:02:57.840><c> get</c><00:02:58.000><c> 1</c>

00:02:58.149 --> 00:02:58.159 align:start position:0%
be a 1 so then we're going to get 1
 

00:02:58.159 --> 00:02:59.430 align:start position:0%
be a 1 so then we're going to get 1
times<00:02:58.480><c> 3</c><00:02:58.640><c> times</c><00:02:58.959><c> 8.</c>

00:02:59.430 --> 00:02:59.440 align:start position:0%
times 3 times 8.
 

00:02:59.440 --> 00:03:02.309 align:start position:0%
times 3 times 8.
now<00:02:59.680><c> the</c><00:02:59.920><c> 3</c><00:03:00.239><c> has</c><00:03:00.400><c> been</c><00:03:00.640><c> popped</c><00:03:01.200><c> last</c><00:03:01.680><c> one</c><00:03:02.000><c> left</c>

00:03:02.309 --> 00:03:02.319 align:start position:0%
now the 3 has been popped last one left
 

00:03:02.319 --> 00:03:03.350 align:start position:0%
now the 3 has been popped last one left
is<00:03:02.480><c> just</c><00:03:02.720><c> the</c><00:03:02.959><c> eight</c>

00:03:03.350 --> 00:03:03.360 align:start position:0%
is just the eight
 

00:03:03.360 --> 00:03:05.750 align:start position:0%
is just the eight
right<00:03:04.000><c> so</c><00:03:04.560><c> the</c><00:03:04.800><c> neighbors</c><00:03:05.120><c> of</c><00:03:05.280><c> that</c>

00:03:05.750 --> 00:03:05.760 align:start position:0%
right so the neighbors of that
 

00:03:05.760 --> 00:03:08.070 align:start position:0%
right so the neighbors of that
implicitly<00:03:06.400><c> are</c><00:03:06.560><c> just</c><00:03:06.800><c> one</c><00:03:07.120><c> and</c><00:03:07.360><c> one</c><00:03:07.599><c> so</c><00:03:07.840><c> eight</c>

00:03:08.070 --> 00:03:08.080 align:start position:0%
implicitly are just one and one so eight
 

00:03:08.080 --> 00:03:09.270 align:start position:0%
implicitly are just one and one so eight
times<00:03:08.400><c> one</c><00:03:08.640><c> times</c><00:03:08.959><c> one</c>

00:03:09.270 --> 00:03:09.280 align:start position:0%
times one times one
 

00:03:09.280 --> 00:03:12.070 align:start position:0%
times one times one
we<00:03:09.440><c> add</c><00:03:09.680><c> that</c><00:03:10.000><c> up</c><00:03:10.159><c> to</c><00:03:10.319><c> our</c><00:03:10.400><c> total</c><00:03:10.800><c> we</c><00:03:10.959><c> get</c><00:03:11.080><c> 167.</c>

00:03:12.070 --> 00:03:12.080 align:start position:0%
we add that up to our total we get 167.
 

00:03:12.080 --> 00:03:12.550 align:start position:0%
we add that up to our total we get 167.
now

00:03:12.550 --> 00:03:12.560 align:start position:0%
now
 

00:03:12.560 --> 00:03:15.110 align:start position:0%
now
these<00:03:12.879><c> implicit</c><00:03:13.519><c> extra</c><00:03:14.000><c> ones</c><00:03:14.400><c> on</c><00:03:14.720><c> our</c><00:03:14.879><c> input</c>

00:03:15.110 --> 00:03:15.120 align:start position:0%
these implicit extra ones on our input
 

00:03:15.120 --> 00:03:16.229 align:start position:0%
these implicit extra ones on our input
array<00:03:15.440><c> for</c><00:03:15.599><c> example</c>

00:03:16.229 --> 00:03:16.239 align:start position:0%
array for example
 

00:03:16.239 --> 00:03:17.670 align:start position:0%
array for example
those<00:03:16.560><c> are</c><00:03:16.640><c> not</c><00:03:16.879><c> actually</c><00:03:17.200><c> going</c><00:03:17.360><c> to</c><00:03:17.440><c> be</c>

00:03:17.670 --> 00:03:17.680 align:start position:0%
those are not actually going to be
 

00:03:17.680 --> 00:03:19.670 align:start position:0%
those are not actually going to be
popped<00:03:18.080><c> right</c><00:03:18.239><c> so</c><00:03:18.400><c> we</c><00:03:18.560><c> need</c><00:03:18.640><c> to</c><00:03:18.800><c> remember</c><00:03:19.280><c> that</c>

00:03:19.670 --> 00:03:19.680 align:start position:0%
popped right so we need to remember that
 

00:03:19.680 --> 00:03:21.270 align:start position:0%
popped right so we need to remember that
because<00:03:20.000><c> obviously</c><00:03:20.400><c> if</c><00:03:20.560><c> we</c><00:03:20.640><c> did</c><00:03:20.879><c> pop</c><00:03:21.120><c> them</c>

00:03:21.270 --> 00:03:21.280 align:start position:0%
because obviously if we did pop them
 

00:03:21.280 --> 00:03:23.190 align:start position:0%
because obviously if we did pop them
right<00:03:21.440><c> we</c><00:03:21.599><c> pop</c><00:03:21.840><c> a</c><00:03:21.920><c> one</c><00:03:22.159><c> we'd</c><00:03:22.480><c> add</c><00:03:22.720><c> one</c><00:03:22.879><c> to</c><00:03:23.040><c> our</c>

00:03:23.190 --> 00:03:23.200 align:start position:0%
right we pop a one we'd add one to our
 

00:03:23.200 --> 00:03:24.710 align:start position:0%
right we pop a one we'd add one to our
total<00:03:23.519><c> and</c><00:03:23.680><c> if</c><00:03:23.760><c> we</c><00:03:23.920><c> pop</c><00:03:24.080><c> the</c><00:03:24.239><c> other</c><00:03:24.319><c> one</c><00:03:24.480><c> we'll</c>

00:03:24.710 --> 00:03:24.720 align:start position:0%
total and if we pop the other one we'll
 

00:03:24.720 --> 00:03:26.070 align:start position:0%
total and if we pop the other one we'll
add<00:03:24.879><c> another</c><00:03:25.120><c> one</c><00:03:25.280><c> but</c><00:03:25.440><c> that's</c><00:03:25.680><c> not</c><00:03:25.840><c> actually</c>

00:03:26.070 --> 00:03:26.080 align:start position:0%
add another one but that's not actually
 

00:03:26.080 --> 00:03:27.350 align:start position:0%
add another one but that's not actually
going<00:03:26.159><c> to</c><00:03:26.239><c> be</c><00:03:26.400><c> the</c><00:03:26.480><c> case</c><00:03:26.799><c> right</c><00:03:26.959><c> we</c><00:03:27.120><c> don't</c><00:03:27.200><c> want</c>

00:03:27.350 --> 00:03:27.360 align:start position:0%
going to be the case right we don't want
 

00:03:27.360 --> 00:03:28.949 align:start position:0%
going to be the case right we don't want
to<00:03:27.440><c> pop</c><00:03:27.760><c> these</c><00:03:28.080><c> extras</c>

00:03:28.949 --> 00:03:28.959 align:start position:0%
to pop these extras
 

00:03:28.959 --> 00:03:30.789 align:start position:0%
to pop these extras
so<00:03:29.200><c> even</c><00:03:29.440><c> if</c><00:03:29.519><c> you</c><00:03:29.680><c> can't</c><00:03:30.000><c> get</c><00:03:30.159><c> the</c><00:03:30.319><c> dynamic</c>

00:03:30.789 --> 00:03:30.799 align:start position:0%
so even if you can't get the dynamic
 

00:03:30.799 --> 00:03:32.789 align:start position:0%
so even if you can't get the dynamic
programming<00:03:31.280><c> solution</c><00:03:31.760><c> at</c><00:03:31.920><c> the</c><00:03:32.159><c> very</c><00:03:32.480><c> least</c>

00:03:32.789 --> 00:03:32.799 align:start position:0%
programming solution at the very least
 

00:03:32.799 --> 00:03:34.470 align:start position:0%
programming solution at the very least
we<00:03:32.959><c> know</c><00:03:33.200><c> that</c><00:03:33.360><c> there's</c><00:03:33.599><c> a</c><00:03:33.760><c> brute</c><00:03:34.159><c> force</c>

00:03:34.470 --> 00:03:34.480 align:start position:0%
we know that there's a brute force
 

00:03:34.480 --> 00:03:36.390 align:start position:0%
we know that there's a brute force
approach<00:03:34.959><c> right</c><00:03:35.120><c> we</c><00:03:35.280><c> could</c><00:03:35.519><c> choose</c><00:03:35.840><c> to</c><00:03:36.000><c> pop</c>

00:03:36.390 --> 00:03:36.400 align:start position:0%
approach right we could choose to pop
 

00:03:36.400 --> 00:03:38.470 align:start position:0%
approach right we could choose to pop
three<00:03:36.720><c> first</c><00:03:37.040><c> we</c><00:03:37.200><c> could</c><00:03:37.360><c> choose</c><00:03:37.599><c> to</c><00:03:37.760><c> pop</c><00:03:38.159><c> one</c>

00:03:38.470 --> 00:03:38.480 align:start position:0%
three first we could choose to pop one
 

00:03:38.480 --> 00:03:40.149 align:start position:0%
three first we could choose to pop one
first<00:03:38.720><c> we</c><00:03:38.879><c> could</c><00:03:39.040><c> choose</c><00:03:39.280><c> to</c><00:03:39.440><c> pop</c>

00:03:40.149 --> 00:03:40.159 align:start position:0%
first we could choose to pop
 

00:03:40.159 --> 00:03:42.630 align:start position:0%
first we could choose to pop
five<00:03:40.879><c> we</c><00:03:41.040><c> could</c><00:03:41.200><c> choose</c><00:03:41.440><c> to</c><00:03:41.599><c> pop</c><00:03:41.920><c> eight</c><00:03:42.239><c> right</c>

00:03:42.630 --> 00:03:42.640 align:start position:0%
five we could choose to pop eight right
 

00:03:42.640 --> 00:03:44.149 align:start position:0%
five we could choose to pop eight right
and<00:03:42.720><c> then</c><00:03:42.879><c> we</c><00:03:43.040><c> could</c><00:03:43.280><c> continue</c>

00:03:44.149 --> 00:03:44.159 align:start position:0%
and then we could continue
 

00:03:44.159 --> 00:03:46.630 align:start position:0%
and then we could continue
down<00:03:44.640><c> this</c><00:03:44.959><c> decision</c><00:03:45.440><c> tree</c><00:03:45.680><c> right</c><00:03:46.239><c> that's</c><00:03:46.480><c> the</c>

00:03:46.630 --> 00:03:46.640 align:start position:0%
down this decision tree right that's the
 

00:03:46.640 --> 00:03:47.830 align:start position:0%
down this decision tree right that's the
brute<00:03:47.120><c> force</c><00:03:47.519><c> right</c>

00:03:47.830 --> 00:03:47.840 align:start position:0%
brute force right
 

00:03:47.840 --> 00:03:49.910 align:start position:0%
brute force right
something<00:03:48.159><c> like</c><00:03:48.400><c> a</c><00:03:48.480><c> backtracking</c><00:03:49.200><c> approach</c>

00:03:49.910 --> 00:03:49.920 align:start position:0%
something like a backtracking approach
 

00:03:49.920 --> 00:03:51.030 align:start position:0%
something like a backtracking approach
but<00:03:50.159><c> in</c><00:03:50.239><c> that</c><00:03:50.480><c> case</c>

00:03:51.030 --> 00:03:51.040 align:start position:0%
but in that case
 

00:03:51.040 --> 00:03:53.509 align:start position:0%
but in that case
obviously<00:03:51.519><c> we</c><00:03:51.680><c> have</c><00:03:51.920><c> n</c><00:03:52.239><c> choices</c><00:03:52.879><c> roughly</c><00:03:53.360><c> at</c>

00:03:53.509 --> 00:03:53.519 align:start position:0%
obviously we have n choices roughly at
 

00:03:53.519 --> 00:03:54.309 align:start position:0%
obviously we have n choices roughly at
each<00:03:53.760><c> layer</c>

00:03:54.309 --> 00:03:54.319 align:start position:0%
each layer
 

00:03:54.319 --> 00:03:55.589 align:start position:0%
each layer
and<00:03:54.480><c> the</c><00:03:54.640><c> height</c><00:03:54.879><c> of</c><00:03:54.959><c> the</c><00:03:55.120><c> tree</c><00:03:55.280><c> is</c><00:03:55.439><c> going</c><00:03:55.519><c> to</c>

00:03:55.589 --> 00:03:55.599 align:start position:0%
and the height of the tree is going to
 

00:03:55.599 --> 00:03:57.990 align:start position:0%
and the height of the tree is going to
be<00:03:55.920><c> n</c><00:03:56.239><c> so</c><00:03:56.480><c> basically</c><00:03:57.040><c> the</c><00:03:57.200><c> time</c><00:03:57.439><c> complexity</c><00:03:57.920><c> is</c>

00:03:57.990 --> 00:03:58.000 align:start position:0%
be n so basically the time complexity is
 

00:03:58.000 --> 00:03:58.869 align:start position:0%
be n so basically the time complexity is
going<00:03:58.080><c> to</c><00:03:58.159><c> be</c><00:03:58.319><c> something</c><00:03:58.560><c> like</c>

00:03:58.869 --> 00:03:58.879 align:start position:0%
going to be something like
 

00:03:58.879 --> 00:04:01.110 align:start position:0%
going to be something like
n<00:03:59.040><c> to</c><00:03:59.200><c> the</c><00:03:59.280><c> power</c><00:03:59.519><c> of</c><00:03:59.760><c> n</c><00:03:59.920><c> now</c><00:04:00.159><c> that's</c><00:04:00.480><c> not</c><00:04:00.799><c> super</c>

00:04:01.110 --> 00:04:01.120 align:start position:0%
n to the power of n now that's not super
 

00:04:01.120 --> 00:04:01.990 align:start position:0%
n to the power of n now that's not super
efficient

00:04:01.990 --> 00:04:02.000 align:start position:0%
efficient
 

00:04:02.000 --> 00:04:03.830 align:start position:0%
efficient
and<00:04:02.159><c> in</c><00:04:02.239><c> this</c><00:04:02.400><c> case</c><00:04:02.720><c> we</c><00:04:02.879><c> actually</c><00:04:03.360><c> can</c><00:04:03.599><c> do</c>

00:04:03.830 --> 00:04:03.840 align:start position:0%
and in this case we actually can do
 

00:04:03.840 --> 00:04:05.509 align:start position:0%
and in this case we actually can do
better<00:04:04.159><c> but</c><00:04:04.400><c> it's</c><00:04:04.640><c> not</c><00:04:04.879><c> easy</c><00:04:05.200><c> to</c>

00:04:05.509 --> 00:04:05.519 align:start position:0%
better but it's not easy to
 

00:04:05.519 --> 00:04:07.350 align:start position:0%
better but it's not easy to
arrive<00:04:05.840><c> to</c><00:04:06.000><c> that</c><00:04:06.159><c> solution</c><00:04:06.640><c> so</c><00:04:06.799><c> now</c><00:04:07.040><c> let</c><00:04:07.200><c> me</c>

00:04:07.350 --> 00:04:07.360 align:start position:0%
arrive to that solution so now let me
 

00:04:07.360 --> 00:04:08.949 align:start position:0%
arrive to that solution so now let me
explain<00:04:07.840><c> a</c><00:04:08.000><c> little</c><00:04:08.159><c> bit</c><00:04:08.319><c> of</c><00:04:08.400><c> the</c><00:04:08.640><c> thought</c>

00:04:08.949 --> 00:04:08.959 align:start position:0%
explain a little bit of the thought
 

00:04:08.959 --> 00:04:09.509 align:start position:0%
explain a little bit of the thought
process

00:04:09.509 --> 00:04:09.519 align:start position:0%
process
 

00:04:09.519 --> 00:04:10.789 align:start position:0%
process
to<00:04:09.680><c> get</c><00:04:09.840><c> us</c><00:04:10.000><c> there</c><00:04:10.239><c> and</c><00:04:10.319><c> then</c><00:04:10.560><c> i'm</c><00:04:10.640><c> going</c><00:04:10.720><c> to</c>

00:04:10.789 --> 00:04:10.799 align:start position:0%
to get us there and then i'm going to
 

00:04:10.799 --> 00:04:12.949 align:start position:0%
to get us there and then i'm going to
jump<00:04:11.040><c> into</c><00:04:11.280><c> the</c><00:04:11.519><c> code</c><00:04:11.840><c> in</c><00:04:12.000><c> this</c><00:04:12.159><c> case</c><00:04:12.400><c> the</c><00:04:12.640><c> code</c>

00:04:12.949 --> 00:04:12.959 align:start position:0%
jump into the code in this case the code
 

00:04:12.959 --> 00:04:15.589 align:start position:0%
jump into the code in this case the code
is<00:04:13.200><c> actually</c><00:04:13.599><c> not</c><00:04:13.840><c> too</c><00:04:14.080><c> bad</c><00:04:14.480><c> once</c><00:04:14.799><c> you</c><00:04:15.040><c> see</c>

00:04:15.589 --> 00:04:15.599 align:start position:0%
is actually not too bad once you see
 

00:04:15.599 --> 00:04:17.509 align:start position:0%
is actually not too bad once you see
the<00:04:15.760><c> couple</c><00:04:16.079><c> of</c><00:04:16.320><c> tricks</c><00:04:16.720><c> that</c><00:04:16.880><c> we</c><00:04:17.120><c> need</c><00:04:17.359><c> in</c>

00:04:17.509 --> 00:04:17.519 align:start position:0%
the couple of tricks that we need in
 

00:04:17.519 --> 00:04:19.909 align:start position:0%
the couple of tricks that we need in
this<00:04:17.759><c> problem</c><00:04:18.560><c> so</c><00:04:18.720><c> we</c><00:04:18.880><c> know</c><00:04:19.040><c> the</c><00:04:19.199><c> brute</c><00:04:19.600><c> force</c>

00:04:19.909 --> 00:04:19.919 align:start position:0%
this problem so we know the brute force
 

00:04:19.919 --> 00:04:21.670 align:start position:0%
this problem so we know the brute force
approach<00:04:20.320><c> but</c><00:04:20.479><c> can</c><00:04:20.720><c> we</c><00:04:20.959><c> identify</c>

00:04:21.670 --> 00:04:21.680 align:start position:0%
approach but can we identify
 

00:04:21.680 --> 00:04:23.990 align:start position:0%
approach but can we identify
any<00:04:22.000><c> sub-problems</c><00:04:22.800><c> your</c><00:04:23.040><c> first</c><00:04:23.360><c> idea</c><00:04:23.759><c> might</c>

00:04:23.990 --> 00:04:24.000 align:start position:0%
any sub-problems your first idea might
 

00:04:24.000 --> 00:04:25.749 align:start position:0%
any sub-problems your first idea might
be<00:04:24.160><c> something</c><00:04:24.479><c> like</c><00:04:24.720><c> this</c><00:04:25.040><c> okay</c><00:04:25.280><c> so</c><00:04:25.440><c> let's</c><00:04:25.600><c> say</c>

00:04:25.749 --> 00:04:25.759 align:start position:0%
be something like this okay so let's say
 

00:04:25.759 --> 00:04:26.550 align:start position:0%
be something like this okay so let's say
i<00:04:25.919><c> pop</c>

00:04:26.550 --> 00:04:26.560 align:start position:0%
i pop
 

00:04:26.560 --> 00:04:28.390 align:start position:0%
i pop
the<00:04:26.800><c> fifth</c><00:04:27.120><c> element</c><00:04:27.440><c> right</c><00:04:27.600><c> we</c><00:04:27.840><c> popped</c><00:04:28.160><c> this</c>

00:04:28.390 --> 00:04:28.400 align:start position:0%
the fifth element right we popped this
 

00:04:28.400 --> 00:04:30.950 align:start position:0%
the fifth element right we popped this
balloon<00:04:29.280><c> now</c><00:04:29.520><c> we</c><00:04:29.600><c> have</c><00:04:29.759><c> a</c><00:04:29.919><c> new</c><00:04:30.240><c> sub</c><00:04:30.560><c> problem</c>

00:04:30.950 --> 00:04:30.960 align:start position:0%
balloon now we have a new sub problem
 

00:04:30.960 --> 00:04:31.749 align:start position:0%
balloon now we have a new sub problem
right<00:04:31.120><c> we</c><00:04:31.280><c> have</c>

00:04:31.749 --> 00:04:31.759 align:start position:0%
right we have
 

00:04:31.759 --> 00:04:34.390 align:start position:0%
right we have
this<00:04:32.000><c> entire</c><00:04:32.400><c> array</c><00:04:32.800><c> minus</c><00:04:33.440><c> this</c><00:04:33.680><c> value</c><00:04:34.160><c> as</c>

00:04:34.390 --> 00:04:34.400 align:start position:0%
this entire array minus this value as
 

00:04:34.400 --> 00:04:35.510 align:start position:0%
this entire array minus this value as
the<00:04:34.479><c> sub</c><00:04:34.800><c> problem</c><00:04:35.199><c> right</c>

00:04:35.510 --> 00:04:35.520 align:start position:0%
the sub problem right
 

00:04:35.520 --> 00:04:38.230 align:start position:0%
the sub problem right
or<00:04:35.680><c> for</c><00:04:35.840><c> example</c><00:04:36.320><c> maybe</c><00:04:36.639><c> i</c><00:04:36.880><c> popped</c><00:04:37.360><c> one</c><00:04:37.840><c> now</c><00:04:38.080><c> we</c>

00:04:38.230 --> 00:04:38.240 align:start position:0%
or for example maybe i popped one now we
 

00:04:38.240 --> 00:04:39.510 align:start position:0%
or for example maybe i popped one now we
would<00:04:38.400><c> get</c><00:04:38.560><c> this</c><00:04:38.800><c> entire</c><00:04:39.120><c> array</c>

00:04:39.510 --> 00:04:39.520 align:start position:0%
would get this entire array
 

00:04:39.520 --> 00:04:41.189 align:start position:0%
would get this entire array
except<00:04:39.840><c> the</c><00:04:40.000><c> one</c><00:04:40.240><c> as</c><00:04:40.400><c> a</c><00:04:40.479><c> sub</c><00:04:40.720><c> problem</c><00:04:41.040><c> right</c>

00:04:41.189 --> 00:04:41.199 align:start position:0%
except the one as a sub problem right
 

00:04:41.199 --> 00:04:42.950 align:start position:0%
except the one as a sub problem right
now<00:04:41.360><c> if</c><00:04:41.440><c> i</c><00:04:41.520><c> continue</c><00:04:42.000><c> popping</c><00:04:42.320><c> for</c><00:04:42.479><c> example</c><00:04:42.880><c> i</c>

00:04:42.950 --> 00:04:42.960 align:start position:0%
now if i continue popping for example i
 

00:04:42.960 --> 00:04:43.749 align:start position:0%
now if i continue popping for example i
pop<00:04:43.280><c> 1</c>

00:04:43.749 --> 00:04:43.759 align:start position:0%
pop 1
 

00:04:43.759 --> 00:04:46.629 align:start position:0%
pop 1
next<00:04:44.080><c> i</c><00:04:44.240><c> pop</c><00:04:44.639><c> 8</c><00:04:45.120><c> now</c><00:04:45.360><c> we</c><00:04:45.520><c> have</c><00:04:45.759><c> a</c><00:04:45.919><c> different</c><00:04:46.320><c> sub</c>

00:04:46.629 --> 00:04:46.639 align:start position:0%
next i pop 8 now we have a different sub
 

00:04:46.639 --> 00:04:47.350 align:start position:0%
next i pop 8 now we have a different sub
problem

00:04:47.350 --> 00:04:47.360 align:start position:0%
problem
 

00:04:47.360 --> 00:04:49.749 align:start position:0%
problem
so<00:04:47.919><c> if</c><00:04:48.080><c> i</c><00:04:48.240><c> keep</c><00:04:48.479><c> going</c><00:04:48.800><c> like</c><00:04:48.960><c> this</c><00:04:49.280><c> how</c><00:04:49.440><c> many</c>

00:04:49.749 --> 00:04:49.759 align:start position:0%
so if i keep going like this how many
 

00:04:49.759 --> 00:04:51.590 align:start position:0%
so if i keep going like this how many
sub<00:04:50.080><c> problems</c><00:04:50.560><c> are</c><00:04:50.720><c> we</c><00:04:50.800><c> gonna</c><00:04:51.040><c> have</c><00:04:51.360><c> well</c>

00:04:51.590 --> 00:04:51.600 align:start position:0%
sub problems are we gonna have well
 

00:04:51.600 --> 00:04:53.430 align:start position:0%
sub problems are we gonna have well
basically<00:04:52.080><c> what</c><00:04:52.240><c> we're</c><00:04:52.400><c> doing</c><00:04:52.720><c> as</c><00:04:52.960><c> we</c><00:04:53.120><c> pop</c>

00:04:53.430 --> 00:04:53.440 align:start position:0%
basically what we're doing as we pop
 

00:04:53.440 --> 00:04:55.030 align:start position:0%
basically what we're doing as we pop
elements<00:04:53.840><c> we're</c><00:04:54.000><c> basically</c><00:04:54.479><c> getting</c><00:04:54.800><c> every</c>

00:04:55.030 --> 00:04:55.040 align:start position:0%
elements we're basically getting every
 

00:04:55.040 --> 00:04:55.510 align:start position:0%
elements we're basically getting every
single

00:04:55.510 --> 00:04:55.520 align:start position:0%
single
 

00:04:55.520 --> 00:04:57.749 align:start position:0%
single
subsequence<00:04:56.479><c> right</c><00:04:56.880><c> now</c><00:04:57.040><c> how</c><00:04:57.199><c> many</c><00:04:57.440><c> sub</c>

00:04:57.749 --> 00:04:57.759 align:start position:0%
subsequence right now how many sub
 

00:04:57.759 --> 00:04:58.550 align:start position:0%
subsequence right now how many sub
sequences

00:04:58.550 --> 00:04:58.560 align:start position:0%
sequences
 

00:04:58.560 --> 00:05:00.310 align:start position:0%
sequences
for<00:04:58.800><c> an</c><00:04:59.040><c> input</c><00:04:59.280><c> array</c><00:04:59.600><c> are</c><00:04:59.759><c> there</c><00:04:59.919><c> well</c><00:05:00.080><c> for</c>

00:05:00.310 --> 00:05:00.320 align:start position:0%
for an input array are there well for
 

00:05:00.320 --> 00:05:01.990 align:start position:0%
for an input array are there well for
each<00:05:00.479><c> value</c><00:05:00.800><c> we</c><00:05:00.880><c> could</c><00:05:01.039><c> choose</c><00:05:01.280><c> to</c><00:05:01.520><c> include</c><00:05:01.919><c> it</c>

00:05:01.990 --> 00:05:02.000 align:start position:0%
each value we could choose to include it
 

00:05:02.000 --> 00:05:02.469 align:start position:0%
each value we could choose to include it
or<00:05:02.160><c> not</c>

00:05:02.469 --> 00:05:02.479 align:start position:0%
or not
 

00:05:02.479 --> 00:05:03.990 align:start position:0%
or not
include<00:05:02.720><c> it</c><00:05:02.880><c> right</c><00:05:03.039><c> so</c><00:05:03.280><c> for</c><00:05:03.440><c> each</c><00:05:03.600><c> value</c><00:05:03.919><c> we</c>

00:05:03.990 --> 00:05:04.000 align:start position:0%
include it right so for each value we
 

00:05:04.000 --> 00:05:05.670 align:start position:0%
include it right so for each value we
have<00:05:04.080><c> two</c><00:05:04.320><c> choices</c><00:05:04.720><c> two</c><00:05:04.960><c> times</c><00:05:05.280><c> two</c>

00:05:05.670 --> 00:05:05.680 align:start position:0%
have two choices two times two
 

00:05:05.680 --> 00:05:07.830 align:start position:0%
have two choices two times two
times<00:05:06.000><c> two</c><00:05:06.240><c> right</c><00:05:06.639><c> we're</c><00:05:06.960><c> basically</c><00:05:07.600><c> going</c><00:05:07.759><c> to</c>

00:05:07.830 --> 00:05:07.840 align:start position:0%
times two right we're basically going to
 

00:05:07.840 --> 00:05:09.590 align:start position:0%
times two right we're basically going to
do<00:05:08.000><c> this</c><00:05:08.160><c> for</c><00:05:08.400><c> the</c><00:05:08.560><c> size</c><00:05:08.800><c> of</c><00:05:08.880><c> the</c><00:05:09.039><c> input</c><00:05:09.360><c> array</c>

00:05:09.590 --> 00:05:09.600 align:start position:0%
do this for the size of the input array
 

00:05:09.600 --> 00:05:11.029 align:start position:0%
do this for the size of the input array
which<00:05:09.759><c> is</c><00:05:09.919><c> let's</c><00:05:10.160><c> say</c><00:05:10.400><c> n</c><00:05:10.639><c> so</c><00:05:10.800><c> we're</c><00:05:10.960><c> going</c><00:05:10.960><c> to</c>

00:05:11.029 --> 00:05:11.039 align:start position:0%
which is let's say n so we're going to
 

00:05:11.039 --> 00:05:12.310 align:start position:0%
which is let's say n so we're going to
have<00:05:11.280><c> 2</c><00:05:11.440><c> to</c><00:05:11.600><c> the</c><00:05:11.759><c> power</c><00:05:12.000><c> of</c>

00:05:12.310 --> 00:05:12.320 align:start position:0%
have 2 to the power of
 

00:05:12.320 --> 00:05:14.550 align:start position:0%
have 2 to the power of
n<00:05:12.560><c> sub</c><00:05:12.880><c> sequences</c><00:05:13.520><c> so</c><00:05:13.759><c> basically</c><00:05:14.240><c> what</c><00:05:14.400><c> i'm</c>

00:05:14.550 --> 00:05:14.560 align:start position:0%
n sub sequences so basically what i'm
 

00:05:14.560 --> 00:05:15.510 align:start position:0%
n sub sequences so basically what i'm
getting<00:05:14.800><c> at</c><00:05:15.039><c> here</c>

00:05:15.510 --> 00:05:15.520 align:start position:0%
getting at here
 

00:05:15.520 --> 00:05:17.830 align:start position:0%
getting at here
is<00:05:15.919><c> this</c><00:05:16.240><c> is</c><00:05:16.400><c> not</c><00:05:16.560><c> the</c><00:05:16.800><c> correct</c><00:05:17.280><c> sub</c><00:05:17.520><c> problem</c>

00:05:17.830 --> 00:05:17.840 align:start position:0%
is this is not the correct sub problem
 

00:05:17.840 --> 00:05:19.270 align:start position:0%
is this is not the correct sub problem
that<00:05:17.919><c> we're</c><00:05:18.160><c> looking</c><00:05:18.400><c> for</c><00:05:18.639><c> we</c><00:05:18.800><c> need</c><00:05:18.960><c> to</c><00:05:19.120><c> look</c>

00:05:19.270 --> 00:05:19.280 align:start position:0%
that we're looking for we need to look
 

00:05:19.280 --> 00:05:20.550 align:start position:0%
that we're looking for we need to look
for<00:05:19.520><c> an</c><00:05:19.759><c> even</c><00:05:20.080><c> more</c>

00:05:20.550 --> 00:05:20.560 align:start position:0%
for an even more
 

00:05:20.560 --> 00:05:22.230 align:start position:0%
for an even more
simple<00:05:20.960><c> sub</c><00:05:21.199><c> problem</c><00:05:21.520><c> because</c><00:05:21.759><c> if</c><00:05:21.840><c> we</c><00:05:22.000><c> have</c>

00:05:22.230 --> 00:05:22.240 align:start position:0%
simple sub problem because if we have
 

00:05:22.240 --> 00:05:24.390 align:start position:0%
simple sub problem because if we have
this<00:05:22.560><c> many</c><00:05:22.960><c> sub</c><00:05:23.280><c> problems</c><00:05:23.840><c> that's</c><00:05:24.160><c> not</c><00:05:24.320><c> going</c>

00:05:24.390 --> 00:05:24.400 align:start position:0%
this many sub problems that's not going
 

00:05:24.400 --> 00:05:25.110 align:start position:0%
this many sub problems that's not going
to<00:05:24.560><c> help</c><00:05:24.800><c> us</c>

00:05:25.110 --> 00:05:25.120 align:start position:0%
to help us
 

00:05:25.120 --> 00:05:27.350 align:start position:0%
to help us
caching<00:05:25.680><c> something</c><00:05:26.000><c> like</c><00:05:26.320><c> this</c><00:05:26.800><c> is</c><00:05:27.039><c> not</c><00:05:27.199><c> going</c>

00:05:27.350 --> 00:05:27.360 align:start position:0%
caching something like this is not going
 

00:05:27.360 --> 00:05:28.230 align:start position:0%
caching something like this is not going
to<00:05:27.680><c> make</c><00:05:27.919><c> the</c>

00:05:28.230 --> 00:05:28.240 align:start position:0%
to make the
 

00:05:28.240 --> 00:05:29.909 align:start position:0%
to make the
the<00:05:28.400><c> solution</c><00:05:28.880><c> more</c><00:05:29.120><c> efficient</c><00:05:29.520><c> we</c><00:05:29.680><c> want</c><00:05:29.840><c> to</c>

00:05:29.909 --> 00:05:29.919 align:start position:0%
the solution more efficient we want to
 

00:05:29.919 --> 00:05:31.830 align:start position:0%
the solution more efficient we want to
get<00:05:30.160><c> something</c><00:05:30.479><c> like</c><00:05:30.960><c> n</c><00:05:31.199><c> cubed</c>

00:05:31.830 --> 00:05:31.840 align:start position:0%
get something like n cubed
 

00:05:31.840 --> 00:05:33.749 align:start position:0%
get something like n cubed
and<00:05:32.080><c> squared</c><00:05:32.560><c> et</c><00:05:32.639><c> cetera</c><00:05:33.039><c> right</c><00:05:33.280><c> this</c><00:05:33.520><c> is</c><00:05:33.600><c> what</c>

00:05:33.749 --> 00:05:33.759 align:start position:0%
and squared et cetera right this is what
 

00:05:33.759 --> 00:05:35.270 align:start position:0%
and squared et cetera right this is what
i'm<00:05:33.919><c> aiming</c><00:05:34.240><c> for</c><00:05:34.479><c> let's</c><00:05:34.720><c> try</c><00:05:34.880><c> to</c><00:05:34.960><c> see</c><00:05:35.120><c> if</c><00:05:35.199><c> we</c>

00:05:35.270 --> 00:05:35.280 align:start position:0%
i'm aiming for let's try to see if we
 

00:05:35.280 --> 00:05:35.990 align:start position:0%
i'm aiming for let's try to see if we
can<00:05:35.440><c> get</c><00:05:35.680><c> it</c>

00:05:35.990 --> 00:05:36.000 align:start position:0%
can get it
 

00:05:36.000 --> 00:05:38.310 align:start position:0%
can get it
so<00:05:36.160><c> let's</c><00:05:36.400><c> say</c><00:05:36.560><c> i</c><00:05:36.800><c> pop</c><00:05:37.039><c> the</c><00:05:37.280><c> five</c><00:05:37.600><c> now</c><00:05:38.000><c> is</c><00:05:38.160><c> there</c>

00:05:38.310 --> 00:05:38.320 align:start position:0%
so let's say i pop the five now is there
 

00:05:38.320 --> 00:05:40.469 align:start position:0%
so let's say i pop the five now is there
an<00:05:38.479><c> even</c><00:05:38.720><c> more</c><00:05:39.039><c> simple</c><00:05:39.520><c> sub</c><00:05:39.759><c> problem</c><00:05:40.080><c> well</c><00:05:40.320><c> we</c>

00:05:40.469 --> 00:05:40.479 align:start position:0%
an even more simple sub problem well we
 

00:05:40.479 --> 00:05:40.950 align:start position:0%
an even more simple sub problem well we
notice

00:05:40.950 --> 00:05:40.960 align:start position:0%
notice
 

00:05:40.960 --> 00:05:42.950 align:start position:0%
notice
now<00:05:41.120><c> we</c><00:05:41.280><c> actually</c><00:05:41.600><c> have</c><00:05:41.919><c> two</c><00:05:42.240><c> subarrays</c><00:05:42.800><c> right</c>

00:05:42.950 --> 00:05:42.960 align:start position:0%
now we actually have two subarrays right
 

00:05:42.960 --> 00:05:45.189 align:start position:0%
now we actually have two subarrays right
we<00:05:43.120><c> have</c><00:05:43.360><c> one</c><00:05:43.680><c> sub</c><00:05:43.919><c> array</c><00:05:44.320><c> over</c><00:05:44.639><c> here</c>

00:05:45.189 --> 00:05:45.199 align:start position:0%
we have one sub array over here
 

00:05:45.199 --> 00:05:47.189 align:start position:0%
we have one sub array over here
and<00:05:45.440><c> one</c><00:05:45.919><c> sub</c><00:05:46.080><c> array</c><00:05:46.320><c> over</c><00:05:46.560><c> here</c><00:05:46.880><c> now</c><00:05:47.039><c> these</c>

00:05:47.189 --> 00:05:47.199 align:start position:0%
and one sub array over here now these
 

00:05:47.199 --> 00:05:48.790 align:start position:0%
and one sub array over here now these
sub<00:05:47.360><c> arrays</c><00:05:47.680><c> are</c><00:05:47.840><c> contiguous</c><00:05:48.479><c> they're</c><00:05:48.639><c> not</c>

00:05:48.790 --> 00:05:48.800 align:start position:0%
sub arrays are contiguous they're not
 

00:05:48.800 --> 00:05:50.710 align:start position:0%
sub arrays are contiguous they're not
subsequences<00:05:49.600><c> that's</c><00:05:49.919><c> pretty</c><00:05:50.240><c> good</c>

00:05:50.710 --> 00:05:50.720 align:start position:0%
subsequences that's pretty good
 

00:05:50.720 --> 00:05:52.790 align:start position:0%
subsequences that's pretty good
because<00:05:51.039><c> we</c><00:05:51.199><c> know</c><00:05:51.600><c> that</c><00:05:51.919><c> at</c><00:05:52.160><c> most</c><00:05:52.479><c> for</c><00:05:52.639><c> an</c>

00:05:52.790 --> 00:05:52.800 align:start position:0%
because we know that at most for an
 

00:05:52.800 --> 00:05:53.990 align:start position:0%
because we know that at most for an
input<00:05:53.039><c> array</c><00:05:53.360><c> of</c><00:05:53.520><c> size</c>

00:05:53.990 --> 00:05:54.000 align:start position:0%
input array of size
 

00:05:54.000 --> 00:05:56.390 align:start position:0%
input array of size
n<00:05:54.479><c> there</c><00:05:54.720><c> could</c><00:05:54.880><c> be</c><00:05:55.199><c> at</c><00:05:55.520><c> most</c><00:05:55.919><c> there</c><00:05:56.080><c> could</c><00:05:56.240><c> be</c>

00:05:56.390 --> 00:05:56.400 align:start position:0%
n there could be at most there could be
 

00:05:56.400 --> 00:05:57.270 align:start position:0%
n there could be at most there could be
at<00:05:56.720><c> most</c>

00:05:57.270 --> 00:05:57.280 align:start position:0%
at most
 

00:05:57.280 --> 00:05:59.029 align:start position:0%
at most
n<00:05:57.520><c> squared</c><00:05:58.000><c> sub</c><00:05:58.160><c> array</c><00:05:58.400><c> so</c><00:05:58.560><c> that's</c><00:05:58.800><c> something</c>

00:05:59.029 --> 00:05:59.039 align:start position:0%
n squared sub array so that's something
 

00:05:59.039 --> 00:06:00.550 align:start position:0%
n squared sub array so that's something
we<00:05:59.199><c> can</c><00:05:59.360><c> work</c><00:05:59.600><c> with</c><00:05:59.840><c> to</c><00:05:59.919><c> make</c><00:06:00.240><c> an</c>

00:06:00.550 --> 00:06:00.560 align:start position:0%
we can work with to make an
 

00:06:00.560 --> 00:06:02.790 align:start position:0%
we can work with to make an
efficient<00:06:00.960><c> solution</c><00:06:01.759><c> so</c><00:06:02.160><c> now</c><00:06:02.400><c> you</c><00:06:02.560><c> might</c>

00:06:02.790 --> 00:06:02.800 align:start position:0%
efficient solution so now you might
 

00:06:02.800 --> 00:06:04.710 align:start position:0%
efficient solution so now you might
think<00:06:03.120><c> well</c><00:06:03.280><c> can</c><00:06:03.440><c> i</c><00:06:03.600><c> take</c><00:06:03.840><c> each</c><00:06:04.080><c> of</c><00:06:04.240><c> these</c><00:06:04.560><c> sub</c>

00:06:04.710 --> 00:06:04.720 align:start position:0%
think well can i take each of these sub
 

00:06:04.720 --> 00:06:05.430 align:start position:0%
think well can i take each of these sub
arrays<00:06:05.120><c> right</c>

00:06:05.430 --> 00:06:05.440 align:start position:0%
arrays right
 

00:06:05.440 --> 00:06:06.870 align:start position:0%
arrays right
basically<00:06:05.759><c> by</c><00:06:06.000><c> popping</c><00:06:06.319><c> this</c><00:06:06.560><c> we</c><00:06:06.720><c> got</c>

00:06:06.870 --> 00:06:06.880 align:start position:0%
basically by popping this we got
 

00:06:06.880 --> 00:06:08.550 align:start position:0%
basically by popping this we got
something<00:06:07.199><c> like</c><00:06:07.360><c> one</c><00:06:07.600><c> times</c><00:06:08.000><c> five</c>

00:06:08.550 --> 00:06:08.560 align:start position:0%
something like one times five
 

00:06:08.560 --> 00:06:10.629 align:start position:0%
something like one times five
times<00:06:08.960><c> eight</c><00:06:09.520><c> now</c><00:06:09.680><c> we</c><00:06:09.840><c> wanna</c><00:06:10.160><c> know</c>

00:06:10.629 --> 00:06:10.639 align:start position:0%
times eight now we wanna know
 

00:06:10.639 --> 00:06:12.790 align:start position:0%
times eight now we wanna know
independently<00:06:11.440><c> what</c><00:06:11.680><c> the</c><00:06:11.919><c> each</c><00:06:12.080><c> of</c><00:06:12.240><c> these</c><00:06:12.560><c> sub</c>

00:06:12.790 --> 00:06:12.800 align:start position:0%
independently what the each of these sub
 

00:06:12.800 --> 00:06:13.430 align:start position:0%
independently what the each of these sub
arrays

00:06:13.430 --> 00:06:13.440 align:start position:0%
arrays
 

00:06:13.440 --> 00:06:15.830 align:start position:0%
arrays
could<00:06:13.919><c> get</c><00:06:14.160><c> us</c><00:06:14.319><c> like</c><00:06:14.479><c> how</c><00:06:14.639><c> many</c><00:06:14.960><c> maximum</c><00:06:15.520><c> coins</c>

00:06:15.830 --> 00:06:15.840 align:start position:0%
could get us like how many maximum coins
 

00:06:15.840 --> 00:06:17.110 align:start position:0%
could get us like how many maximum coins
could<00:06:16.000><c> this</c><00:06:16.160><c> subreddit</c><00:06:16.560><c> and</c><00:06:16.639><c> this</c><00:06:16.720><c> subarray</c>

00:06:17.110 --> 00:06:17.120 align:start position:0%
could this subreddit and this subarray
 

00:06:17.120 --> 00:06:18.629 align:start position:0%
could this subreddit and this subarray
get<00:06:17.280><c> us</c><00:06:17.440><c> right</c><00:06:17.680><c> independently</c>

00:06:18.629 --> 00:06:18.639 align:start position:0%
get us right independently
 

00:06:18.639 --> 00:06:20.469 align:start position:0%
get us right independently
but<00:06:18.880><c> what</c><00:06:19.039><c> we're</c><00:06:19.199><c> gonna</c><00:06:19.440><c> notice</c><00:06:19.759><c> is</c><00:06:19.919><c> we</c><00:06:20.160><c> can't</c>

00:06:20.469 --> 00:06:20.479 align:start position:0%
but what we're gonna notice is we can't
 

00:06:20.479 --> 00:06:22.870 align:start position:0%
but what we're gonna notice is we can't
just<00:06:20.800><c> look</c><00:06:20.960><c> at</c><00:06:21.120><c> this</c><00:06:21.360><c> subarray</c><00:06:21.919><c> independently</c>

00:06:22.870 --> 00:06:22.880 align:start position:0%
just look at this subarray independently
 

00:06:22.880 --> 00:06:24.550 align:start position:0%
just look at this subarray independently
right<00:06:23.120><c> because</c><00:06:23.360><c> independently</c><00:06:24.160><c> a</c><00:06:24.319><c> three</c>

00:06:24.550 --> 00:06:24.560 align:start position:0%
right because independently a three
 

00:06:24.560 --> 00:06:25.430 align:start position:0%
right because independently a three
times<00:06:24.880><c> one</c><00:06:25.120><c> right</c>

00:06:25.430 --> 00:06:25.440 align:start position:0%
times one right
 

00:06:25.440 --> 00:06:27.670 align:start position:0%
times one right
the<00:06:25.600><c> max</c><00:06:25.919><c> we</c><00:06:26.000><c> could</c><00:06:26.240><c> get</c><00:06:26.479><c> is</c><00:06:26.800><c> we</c><00:06:26.960><c> first</c><00:06:27.280><c> pop</c><00:06:27.520><c> the</c>

00:06:27.670 --> 00:06:27.680 align:start position:0%
the max we could get is we first pop the
 

00:06:27.680 --> 00:06:28.469 align:start position:0%
the max we could get is we first pop the
one<00:06:28.160><c> right</c>

00:06:28.469 --> 00:06:28.479 align:start position:0%
one right
 

00:06:28.479 --> 00:06:31.029 align:start position:0%
one right
in<00:06:28.560><c> that</c><00:06:28.720><c> case</c><00:06:28.960><c> we</c><00:06:29.120><c> get</c><00:06:29.280><c> one</c><00:06:29.520><c> times</c><00:06:30.160><c> three</c><00:06:30.639><c> and</c>

00:06:31.029 --> 00:06:31.039 align:start position:0%
in that case we get one times three and
 

00:06:31.039 --> 00:06:32.469 align:start position:0%
in that case we get one times three and
you<00:06:31.120><c> know</c><00:06:31.280><c> the</c><00:06:31.360><c> right</c><00:06:31.600><c> neighbor</c><00:06:31.919><c> is</c><00:06:32.000><c> nothing</c>

00:06:32.469 --> 00:06:32.479 align:start position:0%
you know the right neighbor is nothing
 

00:06:32.479 --> 00:06:34.629 align:start position:0%
you know the right neighbor is nothing
so<00:06:32.639><c> once</c><00:06:32.800><c> we</c><00:06:32.960><c> pop</c><00:06:33.199><c> that</c><00:06:33.440><c> and</c><00:06:33.520><c> then</c><00:06:33.759><c> we</c><00:06:33.919><c> pop</c><00:06:34.400><c> this</c>

00:06:34.629 --> 00:06:34.639 align:start position:0%
so once we pop that and then we pop this
 

00:06:34.639 --> 00:06:36.309 align:start position:0%
so once we pop that and then we pop this
three<00:06:34.960><c> right</c><00:06:35.360><c> then</c><00:06:35.520><c> we'll</c><00:06:35.759><c> get</c>

00:06:36.309 --> 00:06:36.319 align:start position:0%
three right then we'll get
 

00:06:36.319 --> 00:06:38.550 align:start position:0%
three right then we'll get
three<00:06:36.639><c> times</c><00:06:37.520><c> basically</c><00:06:38.000><c> just</c><00:06:38.160><c> three</c><00:06:38.400><c> by</c>

00:06:38.550 --> 00:06:38.560 align:start position:0%
three times basically just three by
 

00:06:38.560 --> 00:06:39.990 align:start position:0%
three times basically just three by
itself<00:06:38.880><c> right</c><00:06:39.120><c> so</c>

00:06:39.990 --> 00:06:40.000 align:start position:0%
itself right so
 

00:06:40.000 --> 00:06:41.990 align:start position:0%
itself right so
we<00:06:40.160><c> pop</c><00:06:40.479><c> this</c><00:06:40.880><c> then</c><00:06:41.039><c> we</c><00:06:41.199><c> add</c><00:06:41.600><c> the</c><00:06:41.680><c> second</c>

00:06:41.990 --> 00:06:42.000 align:start position:0%
we pop this then we add the second
 

00:06:42.000 --> 00:06:43.670 align:start position:0%
we pop this then we add the second
balloon<00:06:42.319><c> that</c><00:06:42.400><c> we</c><00:06:42.560><c> pop</c><00:06:42.720><c> so</c><00:06:42.960><c> we'd</c><00:06:43.120><c> get</c><00:06:43.199><c> a</c><00:06:43.280><c> total</c>

00:06:43.670 --> 00:06:43.680 align:start position:0%
balloon that we pop so we'd get a total
 

00:06:43.680 --> 00:06:45.590 align:start position:0%
balloon that we pop so we'd get a total
of<00:06:43.919><c> six</c><00:06:44.160><c> right</c><00:06:44.400><c> just</c><00:06:44.639><c> independently</c>

00:06:45.590 --> 00:06:45.600 align:start position:0%
of six right just independently
 

00:06:45.600 --> 00:06:48.870 align:start position:0%
of six right just independently
if<00:06:45.840><c> we</c><00:06:46.000><c> had</c><00:06:46.560><c> this</c><00:06:46.800><c> sub</c><00:06:46.800><c> subarray</c><00:06:47.360><c> 3</c><00:06:47.680><c> and</c><00:06:48.000><c> 1.</c><00:06:48.560><c> but</c>

00:06:48.870 --> 00:06:48.880 align:start position:0%
if we had this sub subarray 3 and 1. but
 

00:06:48.880 --> 00:06:49.189 align:start position:0%
if we had this sub subarray 3 and 1. but
we

00:06:49.189 --> 00:06:49.199 align:start position:0%
we
 

00:06:49.199 --> 00:06:51.990 align:start position:0%
we
know<00:06:49.440><c> that</c><00:06:49.680><c> in</c><00:06:49.840><c> reality</c><00:06:50.560><c> this</c><00:06:50.800><c> 3</c><00:06:51.120><c> and</c><00:06:51.280><c> 1</c><00:06:51.599><c> is</c><00:06:51.759><c> now</c>

00:06:51.990 --> 00:06:52.000 align:start position:0%
know that in reality this 3 and 1 is now
 

00:06:52.000 --> 00:06:53.589 align:start position:0%
know that in reality this 3 and 1 is now
going<00:06:52.080><c> to</c><00:06:52.160><c> be</c><00:06:52.400><c> connected</c>

00:06:53.589 --> 00:06:53.599 align:start position:0%
going to be connected
 

00:06:53.599 --> 00:06:55.990 align:start position:0%
going to be connected
to<00:06:53.759><c> this</c><00:06:54.160><c> 8</c><00:06:54.479><c> right</c><00:06:54.880><c> and</c><00:06:55.120><c> independently</c><00:06:55.759><c> what</c>

00:06:55.990 --> 00:06:56.000 align:start position:0%
to this 8 right and independently what
 

00:06:56.000 --> 00:06:57.029 align:start position:0%
to this 8 right and independently what
this<00:06:56.240><c> 8</c><00:06:56.479><c> would</c><00:06:56.639><c> get</c><00:06:56.800><c> us</c>

00:06:57.029 --> 00:06:57.039 align:start position:0%
this 8 would get us
 

00:06:57.039 --> 00:06:58.950 align:start position:0%
this 8 would get us
is<00:06:57.360><c> 8</c><00:06:57.680><c> by</c><00:06:57.919><c> itself</c><00:06:58.319><c> right</c><00:06:58.479><c> because</c><00:06:58.720><c> it</c><00:06:58.800><c> doesn't</c>

00:06:58.950 --> 00:06:58.960 align:start position:0%
is 8 by itself right because it doesn't
 

00:06:58.960 --> 00:07:00.550 align:start position:0%
is 8 by itself right because it doesn't
have<00:06:59.120><c> any</c><00:06:59.280><c> neighbors</c><00:06:59.599><c> so</c><00:06:59.759><c> in</c><00:06:59.919><c> total</c><00:07:00.240><c> if</c><00:07:00.400><c> we</c>

00:07:00.550 --> 00:07:00.560 align:start position:0%
have any neighbors so in total if we
 

00:07:00.560 --> 00:07:00.950 align:start position:0%
have any neighbors so in total if we
took<00:07:00.720><c> a</c>

00:07:00.950 --> 00:07:00.960 align:start position:0%
took a
 

00:07:00.960 --> 00:07:02.710 align:start position:0%
took a
look<00:07:01.199><c> at</c><00:07:01.280><c> both</c><00:07:01.520><c> of</c><00:07:01.680><c> these</c><00:07:01.919><c> independently</c><00:07:02.560><c> we'd</c>

00:07:02.710 --> 00:07:02.720 align:start position:0%
look at both of these independently we'd
 

00:07:02.720 --> 00:07:04.629 align:start position:0%
look at both of these independently we'd
get<00:07:02.880><c> something</c><00:07:03.120><c> like</c><00:07:03.360><c> 6</c><00:07:03.919><c> plus</c><00:07:04.240><c> 8</c>

00:07:04.629 --> 00:07:04.639 align:start position:0%
get something like 6 plus 8
 

00:07:04.639 --> 00:07:07.670 align:start position:0%
get something like 6 plus 8
so<00:07:04.800><c> in</c><00:07:04.960><c> total</c><00:07:05.520><c> 14</c><00:07:06.080><c> right</c><00:07:06.479><c> but</c><00:07:06.720><c> in</c><00:07:06.880><c> reality</c>

00:07:07.670 --> 00:07:07.680 align:start position:0%
so in total 14 right but in reality
 

00:07:07.680 --> 00:07:11.350 align:start position:0%
so in total 14 right but in reality
when<00:07:07.919><c> we</c><00:07:08.080><c> look</c><00:07:08.639><c> at</c><00:07:08.880><c> 3</c><00:07:09.520><c> 1</c><00:07:10.240><c> 8</c><00:07:10.560><c> what's</c><00:07:10.800><c> the</c><00:07:10.960><c> max</c><00:07:11.199><c> we</c>

00:07:11.350 --> 00:07:11.360 align:start position:0%
when we look at 3 1 8 what's the max we
 

00:07:11.360 --> 00:07:12.870 align:start position:0%
when we look at 3 1 8 what's the max we
could<00:07:11.520><c> possibly</c><00:07:11.919><c> get</c><00:07:12.160><c> in</c><00:07:12.319><c> this</c><00:07:12.479><c> case</c>

00:07:12.870 --> 00:07:12.880 align:start position:0%
could possibly get in this case
 

00:07:12.880 --> 00:07:15.430 align:start position:0%
could possibly get in this case
well<00:07:13.120><c> we'd</c><00:07:13.360><c> pop</c><00:07:13.680><c> the</c><00:07:13.919><c> 1</c><00:07:14.319><c> first</c><00:07:14.800><c> right</c><00:07:15.280><c> then</c>

00:07:15.430 --> 00:07:15.440 align:start position:0%
well we'd pop the 1 first right then
 

00:07:15.440 --> 00:07:16.150 align:start position:0%
well we'd pop the 1 first right then
we'd<00:07:15.680><c> get</c>

00:07:16.150 --> 00:07:16.160 align:start position:0%
we'd get
 

00:07:16.160 --> 00:07:18.790 align:start position:0%
we'd get
three<00:07:16.800><c> times</c><00:07:17.199><c> one</c><00:07:17.759><c> times</c><00:07:18.080><c> eight</c><00:07:18.319><c> now</c><00:07:18.479><c> that's</c>

00:07:18.790 --> 00:07:18.800 align:start position:0%
three times one times eight now that's
 

00:07:18.800 --> 00:07:20.950 align:start position:0%
three times one times eight now that's
24<00:07:19.360><c> that</c><00:07:19.599><c> already</c><00:07:20.080><c> by</c><00:07:20.319><c> itself</c>

00:07:20.950 --> 00:07:20.960 align:start position:0%
24 that already by itself
 

00:07:20.960 --> 00:07:23.510 align:start position:0%
24 that already by itself
went<00:07:21.440><c> over</c><00:07:22.080><c> the</c><00:07:22.240><c> total</c><00:07:22.639><c> that</c><00:07:22.800><c> we</c><00:07:22.960><c> would</c><00:07:23.120><c> get</c><00:07:23.440><c> if</c>

00:07:23.510 --> 00:07:23.520 align:start position:0%
went over the total that we would get if
 

00:07:23.520 --> 00:07:25.510 align:start position:0%
went over the total that we would get if
we<00:07:23.680><c> did</c><00:07:23.919><c> these</c><00:07:24.240><c> independently</c><00:07:24.960><c> so</c><00:07:25.120><c> basically</c>

00:07:25.510 --> 00:07:25.520 align:start position:0%
we did these independently so basically
 

00:07:25.520 --> 00:07:26.950 align:start position:0%
we did these independently so basically
what<00:07:25.759><c> i'm</c><00:07:25.919><c> getting</c><00:07:26.240><c> at</c><00:07:26.479><c> is</c>

00:07:26.950 --> 00:07:26.960 align:start position:0%
what i'm getting at is
 

00:07:26.960 --> 00:07:29.670 align:start position:0%
what i'm getting at is
we<00:07:27.280><c> can't</c><00:07:27.680><c> break</c><00:07:28.000><c> the</c><00:07:28.240><c> problem</c><00:07:28.720><c> up</c><00:07:29.199><c> like</c><00:07:29.440><c> this</c>

00:07:29.670 --> 00:07:29.680 align:start position:0%
we can't break the problem up like this
 

00:07:29.680 --> 00:07:30.309 align:start position:0%
we can't break the problem up like this
right

00:07:30.309 --> 00:07:30.319 align:start position:0%
right
 

00:07:30.319 --> 00:07:32.230 align:start position:0%
right
we<00:07:30.479><c> can't</c><00:07:30.720><c> look</c><00:07:30.960><c> at</c><00:07:31.039><c> these</c><00:07:31.280><c> arrays</c><00:07:31.759><c> separately</c>

00:07:32.230 --> 00:07:32.240 align:start position:0%
we can't look at these arrays separately
 

00:07:32.240 --> 00:07:34.070 align:start position:0%
we can't look at these arrays separately
because<00:07:32.560><c> in</c><00:07:32.720><c> reality</c><00:07:33.360><c> we</c><00:07:33.599><c> know</c><00:07:33.759><c> that</c><00:07:33.919><c> they're</c>

00:07:34.070 --> 00:07:34.080 align:start position:0%
because in reality we know that they're
 

00:07:34.080 --> 00:07:36.230 align:start position:0%
because in reality we know that they're
going<00:07:34.160><c> to</c><00:07:34.319><c> be</c><00:07:34.560><c> connected</c><00:07:35.280><c> to</c><00:07:35.440><c> each</c><00:07:35.680><c> other</c>

00:07:36.230 --> 00:07:36.240 align:start position:0%
going to be connected to each other
 

00:07:36.240 --> 00:07:37.830 align:start position:0%
going to be connected to each other
okay<00:07:36.479><c> so</c><00:07:36.639><c> that's</c><00:07:36.960><c> not</c><00:07:37.120><c> going</c><00:07:37.280><c> to</c><00:07:37.360><c> work</c><00:07:37.599><c> now</c>

00:07:37.830 --> 00:07:37.840 align:start position:0%
okay so that's not going to work now
 

00:07:37.840 --> 00:07:39.189 align:start position:0%
okay so that's not going to work now
this<00:07:38.000><c> is</c><00:07:38.160><c> the</c><00:07:38.319><c> part</c><00:07:38.479><c> where</c><00:07:38.639><c> you</c><00:07:38.800><c> have</c><00:07:38.960><c> to</c><00:07:39.039><c> be</c>

00:07:39.189 --> 00:07:39.199 align:start position:0%
this is the part where you have to be
 

00:07:39.199 --> 00:07:39.670 align:start position:0%
this is the part where you have to be
kind<00:07:39.360><c> of</c>

00:07:39.670 --> 00:07:39.680 align:start position:0%
kind of
 

00:07:39.680 --> 00:07:42.230 align:start position:0%
kind of
clever<00:07:40.400><c> we</c><00:07:40.720><c> said</c><00:07:41.039><c> what</c><00:07:41.280><c> happens</c><00:07:41.599><c> if</c><00:07:41.680><c> we</c><00:07:41.919><c> pop</c>

00:07:42.230 --> 00:07:42.240 align:start position:0%
clever we said what happens if we pop
 

00:07:42.240 --> 00:07:42.870 align:start position:0%
clever we said what happens if we pop
this<00:07:42.479><c> one</c>

00:07:42.870 --> 00:07:42.880 align:start position:0%
this one
 

00:07:42.880 --> 00:07:45.189 align:start position:0%
this one
first<00:07:43.360><c> and</c><00:07:43.520><c> then</c><00:07:44.080><c> try</c><00:07:44.319><c> to</c><00:07:44.400><c> do</c><00:07:44.560><c> the</c><00:07:44.720><c> remaining</c>

00:07:45.189 --> 00:07:45.199 align:start position:0%
first and then try to do the remaining
 

00:07:45.199 --> 00:07:47.270 align:start position:0%
first and then try to do the remaining
array<00:07:45.680><c> let's</c><00:07:46.000><c> reverse</c><00:07:46.879><c> our</c>

00:07:47.270 --> 00:07:47.280 align:start position:0%
array let's reverse our
 

00:07:47.280 --> 00:07:50.309 align:start position:0%
array let's reverse our
thinking<00:07:47.759><c> instead</c><00:07:48.160><c> of</c><00:07:48.400><c> popping</c><00:07:48.960><c> this</c><00:07:49.440><c> first</c>

00:07:50.309 --> 00:07:50.319 align:start position:0%
thinking instead of popping this first
 

00:07:50.319 --> 00:07:53.990 align:start position:0%
thinking instead of popping this first
let's<00:07:50.639><c> say</c><00:07:50.879><c> we</c><00:07:51.120><c> pop</c><00:07:51.680><c> this</c><00:07:52.080><c> value</c><00:07:52.960><c> last</c>

00:07:53.990 --> 00:07:54.000 align:start position:0%
let's say we pop this value last
 

00:07:54.000 --> 00:07:56.950 align:start position:0%
let's say we pop this value last
so<00:07:54.319><c> what</c><00:07:54.639><c> happens</c><00:07:55.199><c> if</c><00:07:55.280><c> we</c><00:07:55.520><c> pop</c><00:07:56.000><c> this</c><00:07:56.400><c> value</c>

00:07:56.950 --> 00:07:56.960 align:start position:0%
so what happens if we pop this value
 

00:07:56.960 --> 00:07:57.510 align:start position:0%
so what happens if we pop this value
last

00:07:57.510 --> 00:07:57.520 align:start position:0%
last
 

00:07:57.520 --> 00:08:01.270 align:start position:0%
last
meaning<00:07:58.160><c> we</c><00:07:58.479><c> pop</c><00:07:59.039><c> this</c><00:07:59.520><c> entire</c><00:08:00.400><c> subarray</c>

00:08:01.270 --> 00:08:01.280 align:start position:0%
meaning we pop this entire subarray
 

00:08:01.280 --> 00:08:03.909 align:start position:0%
meaning we pop this entire subarray
and<00:08:01.680><c> before</c><00:08:02.319><c> right</c><00:08:02.639><c> before</c><00:08:02.960><c> we</c><00:08:03.120><c> pop</c><00:08:03.440><c> this</c><00:08:03.759><c> and</c>

00:08:03.909 --> 00:08:03.919 align:start position:0%
and before right before we pop this and
 

00:08:03.919 --> 00:08:04.469 align:start position:0%
and before right before we pop this and
we<00:08:04.160><c> pop</c>

00:08:04.469 --> 00:08:04.479 align:start position:0%
we pop
 

00:08:04.479 --> 00:08:07.670 align:start position:0%
we pop
this<00:08:04.720><c> entire</c><00:08:05.120><c> subarray</c><00:08:05.599><c> before</c><00:08:06.240><c> we</c><00:08:06.479><c> pop</c><00:08:07.120><c> this</c>

00:08:07.670 --> 00:08:07.680 align:start position:0%
this entire subarray before we pop this
 

00:08:07.680 --> 00:08:09.830 align:start position:0%
this entire subarray before we pop this
what's<00:08:07.919><c> going</c><00:08:08.080><c> to</c><00:08:08.160><c> happen</c><00:08:08.639><c> then</c><00:08:09.120><c> well</c><00:08:09.360><c> we</c><00:08:09.599><c> know</c>

00:08:09.830 --> 00:08:09.840 align:start position:0%
what's going to happen then well we know
 

00:08:09.840 --> 00:08:12.309 align:start position:0%
what's going to happen then well we know
if<00:08:10.000><c> this</c><00:08:10.240><c> is</c><00:08:10.319><c> the</c><00:08:10.639><c> last</c><00:08:11.039><c> value</c><00:08:11.440><c> that</c><00:08:11.599><c> we</c><00:08:11.840><c> pop</c>

00:08:12.309 --> 00:08:12.319 align:start position:0%
if this is the last value that we pop
 

00:08:12.319 --> 00:08:13.749 align:start position:0%
if this is the last value that we pop
meaning<00:08:12.560><c> we</c><00:08:12.720><c> popped</c><00:08:13.039><c> everything</c><00:08:13.360><c> here</c><00:08:13.599><c> we</c>

00:08:13.749 --> 00:08:13.759 align:start position:0%
meaning we popped everything here we
 

00:08:13.759 --> 00:08:15.830 align:start position:0%
meaning we popped everything here we
popped<00:08:14.080><c> everything</c><00:08:14.400><c> here</c><00:08:14.879><c> its</c><00:08:15.280><c> left</c><00:08:15.599><c> and</c>

00:08:15.830 --> 00:08:15.840 align:start position:0%
popped everything here its left and
 

00:08:15.840 --> 00:08:16.790 align:start position:0%
popped everything here its left and
right<00:08:16.160><c> neighbors</c>

00:08:16.790 --> 00:08:16.800 align:start position:0%
right neighbors
 

00:08:16.800 --> 00:08:18.469 align:start position:0%
right neighbors
are<00:08:16.960><c> both</c><00:08:17.280><c> going</c><00:08:17.440><c> to</c><00:08:17.520><c> be</c><00:08:17.759><c> 1</c><00:08:18.080><c> right</c><00:08:18.240><c> there's</c>

00:08:18.469 --> 00:08:18.479 align:start position:0%
are both going to be 1 right there's
 

00:08:18.479 --> 00:08:20.150 align:start position:0%
are both going to be 1 right there's
going to<00:08:18.560><c> be</c><00:08:18.720><c> a</c><00:08:18.800><c> 1</c><00:08:19.120><c> over</c><00:08:19.360><c> here</c><00:08:19.759><c> and</c><00:08:19.919><c> there's</c>

00:08:20.150 --> 00:08:20.160 align:start position:0%
going to be a 1 over here and there's
 

00:08:20.160 --> 00:08:21.670 align:start position:0%
going to be a 1 over here and there's
going<00:08:20.240><c> to</c><00:08:20.319><c> be</c><00:08:20.400><c> a</c><00:08:20.560><c> 1</c><00:08:20.800><c> over</c><00:08:21.039><c> here</c><00:08:21.280><c> so</c><00:08:21.440><c> we're</c><00:08:21.599><c> going</c>

00:08:21.670 --> 00:08:21.680 align:start position:0%
going to be a 1 over here so we're going
 

00:08:21.680 --> 00:08:23.189 align:start position:0%
going to be a 1 over here so we're going
to<00:08:21.759><c> get</c><00:08:22.000><c> 1</c><00:08:22.240><c> times</c><00:08:22.560><c> 5</c>

00:08:23.189 --> 00:08:23.199 align:start position:0%
to get 1 times 5
 

00:08:23.199 --> 00:08:26.390 align:start position:0%
to get 1 times 5
times<00:08:23.599><c> 1.</c><00:08:24.160><c> but</c><00:08:24.400><c> what's</c><00:08:24.720><c> the</c><00:08:24.960><c> remaining</c><00:08:25.919><c> amount</c>

00:08:26.390 --> 00:08:26.400 align:start position:0%
times 1. but what's the remaining amount
 

00:08:26.400 --> 00:08:27.029 align:start position:0%
times 1. but what's the remaining amount
that<00:08:26.639><c> we</c>

00:08:27.029 --> 00:08:27.039 align:start position:0%
that we
 

00:08:27.039 --> 00:08:30.790 align:start position:0%
that we
get<00:08:27.520><c> from</c><00:08:27.840><c> popping</c><00:08:28.639><c> these</c><00:08:29.280><c> two</c><00:08:29.680><c> subarrays</c><00:08:30.319><c> now</c>

00:08:30.790 --> 00:08:30.800 align:start position:0%
get from popping these two subarrays now
 

00:08:30.800 --> 00:08:33.190 align:start position:0%
get from popping these two subarrays now
because<00:08:31.199><c> in</c><00:08:31.360><c> this</c><00:08:31.680><c> case</c><00:08:32.159><c> since</c><00:08:32.479><c> we're</c><00:08:32.719><c> popping</c>

00:08:33.190 --> 00:08:33.200 align:start position:0%
because in this case since we're popping
 

00:08:33.200 --> 00:08:34.149 align:start position:0%
because in this case since we're popping
this<00:08:33.519><c> value</c>

00:08:34.149 --> 00:08:34.159 align:start position:0%
this value
 

00:08:34.159 --> 00:08:37.029 align:start position:0%
this value
last<00:08:34.880><c> that</c><00:08:35.120><c> means</c><00:08:35.519><c> these</c><00:08:35.839><c> two</c><00:08:36.159><c> subarrays</c><00:08:36.800><c> are</c>

00:08:37.029 --> 00:08:37.039 align:start position:0%
last that means these two subarrays are
 

00:08:37.039 --> 00:08:38.870 align:start position:0%
last that means these two subarrays are
never<00:08:37.360><c> going</c><00:08:37.519><c> to</c><00:08:37.599><c> be</c><00:08:37.839><c> connected</c><00:08:38.560><c> to</c><00:08:38.719><c> each</c>

00:08:38.870 --> 00:08:38.880 align:start position:0%
never going to be connected to each
 

00:08:38.880 --> 00:08:39.430 align:start position:0%
never going to be connected to each
other

00:08:39.430 --> 00:08:39.440 align:start position:0%
other
 

00:08:39.440 --> 00:08:42.469 align:start position:0%
other
ever<00:08:40.320><c> not</c><00:08:40.640><c> at</c><00:08:40.959><c> any</c><00:08:41.360><c> point</c><00:08:41.760><c> because</c><00:08:42.080><c> this</c><00:08:42.320><c> is</c>

00:08:42.469 --> 00:08:42.479 align:start position:0%
ever not at any point because this is
 

00:08:42.479 --> 00:08:43.509 align:start position:0%
ever not at any point because this is
being<00:08:42.800><c> popped</c>

00:08:43.509 --> 00:08:43.519 align:start position:0%
being popped
 

00:08:43.519 --> 00:08:46.470 align:start position:0%
being popped
last<00:08:44.320><c> so</c><00:08:44.640><c> since</c><00:08:44.959><c> these</c><00:08:45.279><c> two</c><00:08:45.600><c> subarrays</c><00:08:46.320><c> are</c>

00:08:46.470 --> 00:08:46.480 align:start position:0%
last so since these two subarrays are
 

00:08:46.480 --> 00:08:48.389 align:start position:0%
last so since these two subarrays are
not<00:08:46.720><c> going</c><00:08:46.880><c> to</c><00:08:46.959><c> be</c><00:08:47.120><c> connected</c><00:08:47.680><c> that</c><00:08:47.839><c> means</c><00:08:48.080><c> we</c>

00:08:48.389 --> 00:08:48.399 align:start position:0%
not going to be connected that means we
 

00:08:48.399 --> 00:08:50.470 align:start position:0%
not going to be connected that means we
can<00:08:48.720><c> now</c><00:08:48.959><c> pop</c><00:08:49.200><c> them</c><00:08:49.440><c> independently</c><00:08:50.080><c> so</c><00:08:50.240><c> let's</c>

00:08:50.470 --> 00:08:50.480 align:start position:0%
can now pop them independently so let's
 

00:08:50.480 --> 00:08:51.509 align:start position:0%
can now pop them independently so let's
take<00:08:50.640><c> a</c><00:08:50.800><c> look</c><00:08:50.959><c> now</c><00:08:51.120><c> let's</c>

00:08:51.509 --> 00:08:51.519 align:start position:0%
take a look now let's
 

00:08:51.519 --> 00:08:53.990 align:start position:0%
take a look now let's
pop<00:08:51.760><c> this</c><00:08:52.320><c> 3-1</c><00:08:53.040><c> independently</c><00:08:53.680><c> what's</c><00:08:53.839><c> going</c>

00:08:53.990 --> 00:08:54.000 align:start position:0%
pop this 3-1 independently what's going
 

00:08:54.000 --> 00:08:55.030 align:start position:0%
pop this 3-1 independently what's going
to<00:08:54.080><c> happen</c>

00:08:55.030 --> 00:08:55.040 align:start position:0%
to happen
 

00:08:55.040 --> 00:08:56.630 align:start position:0%
to happen
well<00:08:55.200><c> we</c><00:08:55.360><c> remember</c><00:08:55.760><c> when</c><00:08:56.000><c> we</c><00:08:56.160><c> pop</c><00:08:56.399><c> this</c>

00:08:56.630 --> 00:08:56.640 align:start position:0%
well we remember when we pop this
 

00:08:56.640 --> 00:08:57.829 align:start position:0%
well we remember when we pop this
independently<00:08:57.120><c> we're</c><00:08:57.279><c> basically</c><00:08:57.680><c> going</c><00:08:57.760><c> to</c>

00:08:57.829 --> 00:08:57.839 align:start position:0%
independently we're basically going to
 

00:08:57.839 --> 00:08:59.829 align:start position:0%
independently we're basically going to
get<00:08:58.000><c> 1</c><00:08:58.240><c> times</c><00:08:58.560><c> 3</c><00:08:58.880><c> plus</c><00:08:59.279><c> 3</c><00:08:59.519><c> right</c>

00:08:59.829 --> 00:08:59.839 align:start position:0%
get 1 times 3 plus 3 right
 

00:08:59.839 --> 00:09:01.750 align:start position:0%
get 1 times 3 plus 3 right
that's<00:09:00.240><c> going</c><00:09:00.320><c> to</c><00:09:00.399><c> total</c><00:09:00.720><c> up</c><00:09:00.800><c> to</c><00:09:00.959><c> 6</c><00:09:01.200><c> once</c><00:09:01.440><c> again</c>

00:09:01.750 --> 00:09:01.760 align:start position:0%
that's going to total up to 6 once again
 

00:09:01.760 --> 00:09:02.949 align:start position:0%
that's going to total up to 6 once again
right<00:09:02.160><c> but</c><00:09:02.320><c> that's</c><00:09:02.640><c> not</c>

00:09:02.949 --> 00:09:02.959 align:start position:0%
right but that's not
 

00:09:02.959 --> 00:09:04.550 align:start position:0%
right but that's not
actually<00:09:03.279><c> what</c><00:09:03.440><c> we're</c><00:09:03.680><c> looking</c><00:09:04.000><c> for</c><00:09:04.240><c> because</c>

00:09:04.550 --> 00:09:04.560 align:start position:0%
actually what we're looking for because
 

00:09:04.560 --> 00:09:06.310 align:start position:0%
actually what we're looking for because
remember<00:09:05.760><c> this</c>

00:09:06.310 --> 00:09:06.320 align:start position:0%
remember this
 

00:09:06.320 --> 00:09:08.630 align:start position:0%
remember this
sub<00:09:06.560><c> array</c><00:09:06.880><c> is</c><00:09:07.040><c> not</c><00:09:07.360><c> independent</c><00:09:08.000><c> we</c><00:09:08.240><c> are</c><00:09:08.480><c> it's</c>

00:09:08.630 --> 00:09:08.640 align:start position:0%
sub array is not independent we are it's
 

00:09:08.640 --> 00:09:10.389 align:start position:0%
sub array is not independent we are it's
true<00:09:08.880><c> we're</c><00:09:09.040><c> going</c><00:09:09.120><c> to</c><00:09:09.279><c> pop</c><00:09:09.519><c> this</c><00:09:09.760><c> before</c><00:09:10.160><c> we</c>

00:09:10.389 --> 00:09:10.399 align:start position:0%
true we're going to pop this before we
 

00:09:10.399 --> 00:09:11.269 align:start position:0%
true we're going to pop this before we
pop<00:09:10.640><c> the</c><00:09:10.800><c> five</c>

00:09:11.269 --> 00:09:11.279 align:start position:0%
pop the five
 

00:09:11.279 --> 00:09:13.509 align:start position:0%
pop the five
but<00:09:11.440><c> we</c><00:09:11.600><c> can't</c><00:09:11.839><c> just</c><00:09:12.160><c> forget</c><00:09:12.640><c> about</c><00:09:12.959><c> the</c><00:09:13.120><c> five</c>

00:09:13.509 --> 00:09:13.519 align:start position:0%
but we can't just forget about the five
 

00:09:13.519 --> 00:09:14.389 align:start position:0%
but we can't just forget about the five
right<00:09:13.680><c> there</c><00:09:14.080><c> is</c>

00:09:14.389 --> 00:09:14.399 align:start position:0%
right there is
 

00:09:14.399 --> 00:09:17.430 align:start position:0%
right there is
a<00:09:14.720><c> five</c><00:09:15.360><c> right</c><00:09:15.680><c> next</c><00:09:16.080><c> to</c><00:09:16.240><c> this</c><00:09:16.560><c> three</c><00:09:16.880><c> one</c><00:09:17.200><c> so</c>

00:09:17.430 --> 00:09:17.440 align:start position:0%
a five right next to this three one so
 

00:09:17.440 --> 00:09:19.110 align:start position:0%
a five right next to this three one so
in<00:09:17.600><c> reality</c><00:09:18.080><c> when</c><00:09:18.240><c> i</c><00:09:18.399><c> pop</c><00:09:18.640><c> the</c><00:09:18.800><c> one</c>

00:09:19.110 --> 00:09:19.120 align:start position:0%
in reality when i pop the one
 

00:09:19.120 --> 00:09:21.670 align:start position:0%
in reality when i pop the one
i'm<00:09:19.200><c> gonna</c><00:09:19.360><c> get</c><00:09:19.600><c> three</c><00:09:19.839><c> times</c><00:09:20.240><c> one</c><00:09:20.800><c> times</c><00:09:21.200><c> five</c>

00:09:21.670 --> 00:09:21.680 align:start position:0%
i'm gonna get three times one times five
 

00:09:21.680 --> 00:09:23.269 align:start position:0%
i'm gonna get three times one times five
and<00:09:21.839><c> then</c><00:09:22.000><c> when</c><00:09:22.160><c> i</c><00:09:22.320><c> pop</c><00:09:22.560><c> the</c><00:09:22.720><c> three</c><00:09:22.959><c> because</c><00:09:23.200><c> we</c>

00:09:23.269 --> 00:09:23.279 align:start position:0%
and then when i pop the three because we
 

00:09:23.279 --> 00:09:24.550 align:start position:0%
and then when i pop the three because we
know<00:09:23.440><c> we're</c><00:09:23.600><c> not</c><00:09:23.760><c> gonna</c><00:09:23.920><c> put</c><00:09:24.080><c> we're</c><00:09:24.240><c> popping</c>

00:09:24.550 --> 00:09:24.560 align:start position:0%
know we're not gonna put we're popping
 

00:09:24.560 --> 00:09:26.389 align:start position:0%
know we're not gonna put we're popping
this<00:09:24.800><c> last</c><00:09:25.120><c> right</c><00:09:25.279><c> so</c><00:09:25.440><c> we</c><00:09:25.600><c> are</c><00:09:25.839><c> popping</c><00:09:26.160><c> these</c>

00:09:26.389 --> 00:09:26.399 align:start position:0%
this last right so we are popping these
 

00:09:26.399 --> 00:09:27.110 align:start position:0%
this last right so we are popping these
two<00:09:26.640><c> first</c>

00:09:27.110 --> 00:09:27.120 align:start position:0%
two first
 

00:09:27.120 --> 00:09:28.949 align:start position:0%
two first
but<00:09:27.279><c> then</c><00:09:27.440><c> when</c><00:09:27.600><c> i</c><00:09:27.680><c> pop</c><00:09:27.920><c> the</c><00:09:28.080><c> three</c><00:09:28.640><c> i'm</c><00:09:28.800><c> gonna</c>

00:09:28.949 --> 00:09:28.959 align:start position:0%
but then when i pop the three i'm gonna
 

00:09:28.959 --> 00:09:31.030 align:start position:0%
but then when i pop the three i'm gonna
get<00:09:29.600><c> one</c><00:09:30.080><c> times</c><00:09:30.480><c> three</c>

00:09:31.030 --> 00:09:31.040 align:start position:0%
get one times three
 

00:09:31.040 --> 00:09:32.389 align:start position:0%
get one times three
times<00:09:31.360><c> five</c><00:09:31.680><c> right</c><00:09:31.839><c> because</c><00:09:32.080><c> there's</c><00:09:32.240><c> an</c>

00:09:32.389 --> 00:09:32.399 align:start position:0%
times five right because there's an
 

00:09:32.399 --> 00:09:34.230 align:start position:0%
times five right because there's an
implicit<00:09:32.959><c> one</c><00:09:33.360><c> over</c><00:09:33.600><c> here</c>

00:09:34.230 --> 00:09:34.240 align:start position:0%
implicit one over here
 

00:09:34.240 --> 00:09:36.949 align:start position:0%
implicit one over here
so<00:09:34.560><c> how</c><00:09:34.720><c> can</c><00:09:34.959><c> i</c><00:09:35.200><c> handle</c><00:09:35.600><c> that</c><00:09:36.000><c> what</c><00:09:36.160><c> i'm</c><00:09:36.480><c> saying</c>

00:09:36.949 --> 00:09:36.959 align:start position:0%
so how can i handle that what i'm saying
 

00:09:36.959 --> 00:09:37.509 align:start position:0%
so how can i handle that what i'm saying
is

00:09:37.509 --> 00:09:37.519 align:start position:0%
is
 

00:09:37.519 --> 00:09:40.630 align:start position:0%
is
our<00:09:38.240><c> array</c><00:09:38.640><c> hasn't</c><00:09:38.959><c> actually</c><00:09:39.360><c> changed</c><00:09:40.320><c> there</c>

00:09:40.630 --> 00:09:40.640 align:start position:0%
our array hasn't actually changed there
 

00:09:40.640 --> 00:09:40.949 align:start position:0%
our array hasn't actually changed there
is

00:09:40.949 --> 00:09:40.959 align:start position:0%
is
 

00:09:40.959 --> 00:09:43.509 align:start position:0%
is
the<00:09:41.120><c> five</c><00:09:41.440><c> still</c><00:09:41.839><c> over</c><00:09:42.160><c> here</c><00:09:42.880><c> but</c><00:09:43.040><c> we</c><00:09:43.200><c> want</c><00:09:43.360><c> to</c>

00:09:43.509 --> 00:09:43.519 align:start position:0%
the five still over here but we want to
 

00:09:43.519 --> 00:09:46.550 align:start position:0%
the five still over here but we want to
pop<00:09:43.920><c> all</c><00:09:44.160><c> of</c><00:09:44.320><c> these</c><00:09:44.640><c> elements</c><00:09:45.120><c> before</c><00:09:45.839><c> we</c><00:09:46.080><c> pop</c>

00:09:46.550 --> 00:09:46.560 align:start position:0%
pop all of these elements before we pop
 

00:09:46.560 --> 00:09:48.949 align:start position:0%
pop all of these elements before we pop
this<00:09:46.880><c> five</c><00:09:47.200><c> how</c><00:09:47.440><c> can</c><00:09:47.600><c> i</c><00:09:47.760><c> handle</c><00:09:48.160><c> that</c><00:09:48.640><c> well</c>

00:09:48.949 --> 00:09:48.959 align:start position:0%
this five how can i handle that well
 

00:09:48.959 --> 00:09:49.990 align:start position:0%
this five how can i handle that well
it's<00:09:49.200><c> actually</c><00:09:49.680><c> not</c>

00:09:49.990 --> 00:09:50.000 align:start position:0%
it's actually not
 

00:09:50.000 --> 00:09:51.750 align:start position:0%
it's actually not
too<00:09:50.240><c> different</c><00:09:50.560><c> than</c><00:09:50.800><c> what</c><00:09:50.959><c> we</c><00:09:51.120><c> went</c><00:09:51.440><c> over</c><00:09:51.680><c> at</c>

00:09:51.750 --> 00:09:51.760 align:start position:0%
too different than what we went over at
 

00:09:51.760 --> 00:09:53.509 align:start position:0%
too different than what we went over at
the<00:09:51.920><c> beginning</c><00:09:52.320><c> remember</c><00:09:52.880><c> we</c><00:09:53.120><c> said</c><00:09:53.360><c> that</c>

00:09:53.509 --> 00:09:53.519 align:start position:0%
the beginning remember we said that
 

00:09:53.519 --> 00:09:55.190 align:start position:0%
the beginning remember we said that
let's<00:09:53.680><c> say</c><00:09:53.839><c> we</c><00:09:53.920><c> had</c><00:09:54.160><c> a</c><00:09:54.240><c> single</c><00:09:54.640><c> element</c><00:09:54.959><c> in</c><00:09:55.040><c> our</c>

00:09:55.190 --> 00:09:55.200 align:start position:0%
let's say we had a single element in our
 

00:09:55.200 --> 00:09:57.190 align:start position:0%
let's say we had a single element in our
input<00:09:55.440><c> array</c><00:09:55.680><c> let's</c><00:09:55.839><c> say</c><00:09:56.000><c> it's</c><00:09:56.160><c> a</c><00:09:56.320><c> three</c><00:09:56.560><c> right</c>

00:09:57.190 --> 00:09:57.200 align:start position:0%
input array let's say it's a three right
 

00:09:57.200 --> 00:09:59.750 align:start position:0%
input array let's say it's a three right
we're<00:09:57.519><c> assuming</c><00:09:58.399><c> even</c><00:09:58.640><c> for</c><00:09:58.800><c> this</c><00:09:59.040><c> input</c><00:09:59.360><c> array</c>

00:09:59.750 --> 00:09:59.760 align:start position:0%
we're assuming even for this input array
 

00:09:59.760 --> 00:10:01.509 align:start position:0%
we're assuming even for this input array
there's<00:10:00.080><c> gonna</c><00:10:00.240><c> be</c><00:10:00.480><c> an</c><00:10:00.640><c> implicit</c>

00:10:01.509 --> 00:10:01.519 align:start position:0%
there's gonna be an implicit
 

00:10:01.519 --> 00:10:03.350 align:start position:0%
there's gonna be an implicit
one<00:10:02.000><c> on</c><00:10:02.160><c> the</c><00:10:02.320><c> left</c><00:10:02.640><c> and</c><00:10:02.720><c> there's</c><00:10:02.959><c> going</c><00:10:03.040><c> to</c><00:10:03.120><c> be</c>

00:10:03.350 --> 00:10:03.360 align:start position:0%
one on the left and there's going to be
 

00:10:03.360 --> 00:10:05.509 align:start position:0%
one on the left and there's going to be
an<00:10:03.519><c> implicit</c><00:10:04.399><c> one</c><00:10:04.720><c> on</c><00:10:04.880><c> the</c><00:10:05.040><c> right</c>

00:10:05.509 --> 00:10:05.519 align:start position:0%
an implicit one on the right
 

00:10:05.519 --> 00:10:07.750 align:start position:0%
an implicit one on the right
these<00:10:05.839><c> two</c><00:10:06.079><c> values</c><00:10:06.720><c> are</c><00:10:06.959><c> not</c><00:10:07.200><c> going</c><00:10:07.360><c> to</c><00:10:07.440><c> be</c>

00:10:07.750 --> 00:10:07.760 align:start position:0%
these two values are not going to be
 

00:10:07.760 --> 00:10:09.509 align:start position:0%
these two values are not going to be
popped<00:10:08.240><c> when</c><00:10:08.480><c> we're</c><00:10:08.640><c> popping</c><00:10:09.040><c> this</c>

00:10:09.509 --> 00:10:09.519 align:start position:0%
popped when we're popping this
 

00:10:09.519 --> 00:10:11.590 align:start position:0%
popped when we're popping this
array<00:10:10.160><c> but</c><00:10:10.320><c> we're</c><00:10:10.560><c> still</c><00:10:10.880><c> assuming</c><00:10:11.440><c> that</c>

00:10:11.590 --> 00:10:11.600 align:start position:0%
array but we're still assuming that
 

00:10:11.600 --> 00:10:13.670 align:start position:0%
array but we're still assuming that
they're<00:10:11.920><c> there</c><00:10:12.320><c> for</c><00:10:12.560><c> that</c><00:10:12.800><c> computation</c><00:10:13.600><c> that</c>

00:10:13.670 --> 00:10:13.680 align:start position:0%
they're there for that computation that
 

00:10:13.680 --> 00:10:14.630 align:start position:0%
they're there for that computation that
we're<00:10:13.839><c> going</c><00:10:13.920><c> to</c><00:10:14.000><c> be</c><00:10:14.160><c> doing</c>

00:10:14.630 --> 00:10:14.640 align:start position:0%
we're going to be doing
 

00:10:14.640 --> 00:10:17.110 align:start position:0%
we're going to be doing
that's<00:10:15.040><c> exactly</c><00:10:15.680><c> the</c><00:10:16.000><c> same</c><00:10:16.480><c> rule</c><00:10:16.800><c> that</c><00:10:16.959><c> we're</c>

00:10:17.110 --> 00:10:17.120 align:start position:0%
that's exactly the same rule that we're
 

00:10:17.120 --> 00:10:18.069 align:start position:0%
that's exactly the same rule that we're
going<00:10:17.279><c> to</c><00:10:17.440><c> follow</c>

00:10:18.069 --> 00:10:18.079 align:start position:0%
going to follow
 

00:10:18.079 --> 00:10:21.350 align:start position:0%
going to follow
so<00:10:19.120><c> when</c><00:10:19.279><c> we</c><00:10:19.519><c> go</c><00:10:19.760><c> from</c><00:10:20.079><c> up</c><00:10:20.240><c> here</c><00:10:20.560><c> to</c><00:10:20.800><c> down</c><00:10:21.120><c> here</c>

00:10:21.350 --> 00:10:21.360 align:start position:0%
so when we go from up here to down here
 

00:10:21.360 --> 00:10:21.750 align:start position:0%
so when we go from up here to down here
right

00:10:21.750 --> 00:10:21.760 align:start position:0%
right
 

00:10:21.760 --> 00:10:24.150 align:start position:0%
right
this<00:10:22.000><c> is</c><00:10:22.079><c> our</c><00:10:22.320><c> sub</c><00:10:22.640><c> problem</c><00:10:22.959><c> so</c><00:10:23.279><c> we</c><00:10:23.519><c> we</c><00:10:23.680><c> have</c><00:10:24.000><c> we</c>

00:10:24.150 --> 00:10:24.160 align:start position:0%
this is our sub problem so we we have we
 

00:10:24.160 --> 00:10:25.910 align:start position:0%
this is our sub problem so we we have we
have<00:10:24.399><c> identified</c><00:10:24.959><c> what</c><00:10:25.120><c> the</c><00:10:25.279><c> sub</c><00:10:25.519><c> problem</c><00:10:25.760><c> is</c>

00:10:25.910 --> 00:10:25.920 align:start position:0%
have identified what the sub problem is
 

00:10:25.920 --> 00:10:27.509 align:start position:0%
have identified what the sub problem is
going<00:10:26.000><c> to</c><00:10:26.079><c> be</c><00:10:26.320><c> it's</c><00:10:26.480><c> going</c><00:10:26.720><c> to</c><00:10:26.880><c> be</c><00:10:27.120><c> this</c>

00:10:27.509 --> 00:10:27.519 align:start position:0%
going to be it's going to be this
 

00:10:27.519 --> 00:10:29.509 align:start position:0%
going to be it's going to be this
sub<00:10:27.760><c> array</c><00:10:28.320><c> the</c><00:10:28.560><c> only</c><00:10:28.959><c> thing</c><00:10:29.120><c> we</c><00:10:29.279><c> have</c><00:10:29.360><c> to</c>

00:10:29.509 --> 00:10:29.519 align:start position:0%
sub array the only thing we have to
 

00:10:29.519 --> 00:10:31.829 align:start position:0%
sub array the only thing we have to
remember<00:10:30.000><c> is</c><00:10:30.480><c> just</c><00:10:30.720><c> like</c><00:10:30.959><c> at</c><00:10:31.040><c> the</c><00:10:31.120><c> beginning</c>

00:10:31.829 --> 00:10:31.839 align:start position:0%
remember is just like at the beginning
 

00:10:31.839 --> 00:10:32.870 align:start position:0%
remember is just like at the beginning
how<00:10:32.079><c> there's</c><00:10:32.320><c> going</c><00:10:32.399><c> to</c><00:10:32.480><c> be</c><00:10:32.640><c> an</c>

00:10:32.870 --> 00:10:32.880 align:start position:0%
how there's going to be an
 

00:10:32.880 --> 00:10:35.990 align:start position:0%
how there's going to be an
implicit<00:10:33.600><c> 1</c><00:10:34.079><c> on</c><00:10:34.240><c> the</c><00:10:34.480><c> left</c><00:10:35.120><c> now</c><00:10:35.600><c> there's</c><00:10:35.839><c> going</c>

00:10:35.990 --> 00:10:36.000 align:start position:0%
implicit 1 on the left now there's going
 

00:10:36.000 --> 00:10:36.550 align:start position:0%
implicit 1 on the left now there's going
to<00:10:36.079><c> be</c><00:10:36.320><c> an</c>

00:10:36.550 --> 00:10:36.560 align:start position:0%
to be an
 

00:10:36.560 --> 00:10:39.590 align:start position:0%
to be an
implicit<00:10:37.519><c> 5</c><00:10:38.240><c> on</c><00:10:38.320><c> the</c><00:10:38.640><c> right</c><00:10:39.040><c> so</c>

00:10:39.590 --> 00:10:39.600 align:start position:0%
implicit 5 on the right so
 

00:10:39.600 --> 00:10:41.670 align:start position:0%
implicit 5 on the right so
for<00:10:39.839><c> the</c><00:10:40.160><c> sub</c><00:10:40.320><c> array</c><00:10:40.640><c> that</c><00:10:40.720><c> we're</c><00:10:40.880><c> doing</c><00:10:41.440><c> the</c>

00:10:41.670 --> 00:10:41.680 align:start position:0%
for the sub array that we're doing the
 

00:10:41.680 --> 00:10:42.710 align:start position:0%
for the sub array that we're doing the
left<00:10:42.079><c> boundary</c>

00:10:42.710 --> 00:10:42.720 align:start position:0%
left boundary
 

00:10:42.720 --> 00:10:44.949 align:start position:0%
left boundary
is<00:10:42.880><c> going</c><00:10:43.040><c> to</c><00:10:43.120><c> be</c><00:10:43.279><c> at</c><00:10:43.440><c> this</c><00:10:43.680><c> value</c><00:10:44.320><c> the</c><00:10:44.640><c> right</c>

00:10:44.949 --> 00:10:44.959 align:start position:0%
is going to be at this value the right
 

00:10:44.959 --> 00:10:45.990 align:start position:0%
is going to be at this value the right
boundary<00:10:45.360><c> is</c><00:10:45.519><c> going</c><00:10:45.600><c> to</c><00:10:45.680><c> be</c>

00:10:45.990 --> 00:10:46.000 align:start position:0%
boundary is going to be
 

00:10:46.000 --> 00:10:48.389 align:start position:0%
boundary is going to be
at<00:10:46.240><c> this</c><00:10:46.480><c> value</c><00:10:47.120><c> but</c><00:10:47.440><c> these</c><00:10:47.760><c> values</c><00:10:48.160><c> are</c><00:10:48.240><c> not</c>

00:10:48.389 --> 00:10:48.399 align:start position:0%
at this value but these values are not
 

00:10:48.399 --> 00:10:49.350 align:start position:0%
at this value but these values are not
going<00:10:48.480><c> to</c><00:10:48.640><c> go</c><00:10:48.800><c> away</c>

00:10:49.350 --> 00:10:49.360 align:start position:0%
going to go away
 

00:10:49.360 --> 00:10:51.509 align:start position:0%
going to go away
we<00:10:49.680><c> are</c><00:10:49.920><c> going</c><00:10:50.000><c> to</c><00:10:50.160><c> leave</c><00:10:50.480><c> this</c><00:10:50.800><c> in</c><00:10:50.959><c> the</c><00:10:51.120><c> input</c>

00:10:51.509 --> 00:10:51.519 align:start position:0%
we are going to leave this in the input
 

00:10:51.519 --> 00:10:52.630 align:start position:0%
we are going to leave this in the input
array<00:10:52.160><c> and</c>

00:10:52.630 --> 00:10:52.640 align:start position:0%
array and
 

00:10:52.640 --> 00:10:54.150 align:start position:0%
array and
we<00:10:52.880><c> are</c><00:10:53.040><c> going</c><00:10:53.120><c> to</c><00:10:53.279><c> make</c><00:10:53.440><c> sure</c><00:10:53.600><c> that</c><00:10:53.760><c> we</c><00:10:53.920><c> have</c>

00:10:54.150 --> 00:10:54.160 align:start position:0%
we are going to make sure that we have
 

00:10:54.160 --> 00:10:56.470 align:start position:0%
we are going to make sure that we have
an<00:10:54.320><c> implicit</c><00:10:54.959><c> 1</c><00:10:55.440><c> at</c><00:10:55.519><c> the</c><00:10:55.680><c> beginning</c><00:10:56.240><c> of</c><00:10:56.320><c> the</c>

00:10:56.470 --> 00:10:56.480 align:start position:0%
an implicit 1 at the beginning of the
 

00:10:56.480 --> 00:10:57.430 align:start position:0%
an implicit 1 at the beginning of the
input<00:10:56.800><c> array</c>

00:10:57.430 --> 00:10:57.440 align:start position:0%
input array
 

00:10:57.440 --> 00:10:59.350 align:start position:0%
input array
and<00:10:57.680><c> similarly</c><00:10:58.240><c> when</c><00:10:58.399><c> we</c><00:10:58.560><c> want</c><00:10:58.720><c> to</c><00:10:58.800><c> solve</c><00:10:59.120><c> this</c>

00:10:59.350 --> 00:10:59.360 align:start position:0%
and similarly when we want to solve this
 

00:10:59.360 --> 00:11:01.269 align:start position:0%
and similarly when we want to solve this
subarray<00:11:00.079><c> we</c><00:11:00.320><c> are</c><00:11:00.480><c> going</c><00:11:00.560><c> to</c><00:11:00.720><c> assume</c><00:11:01.040><c> that</c>

00:11:01.269 --> 00:11:01.279 align:start position:0%
subarray we are going to assume that
 

00:11:01.279 --> 00:11:02.790 align:start position:0%
subarray we are going to assume that
yeah<00:11:01.519><c> there's</c><00:11:01.680><c> just</c><00:11:01.920><c> a</c><00:11:02.000><c> single</c><00:11:02.399><c> eight</c><00:11:02.640><c> right</c>

00:11:02.790 --> 00:11:02.800 align:start position:0%
yeah there's just a single eight right
 

00:11:02.800 --> 00:11:04.310 align:start position:0%
yeah there's just a single eight right
so<00:11:02.959><c> the</c><00:11:03.120><c> left</c><00:11:03.360><c> boundary</c><00:11:03.680><c> is</c><00:11:03.760><c> going</c><00:11:03.839><c> to</c><00:11:03.920><c> be</c><00:11:04.079><c> here</c>

00:11:04.310 --> 00:11:04.320 align:start position:0%
so the left boundary is going to be here
 

00:11:04.320 --> 00:11:05.750 align:start position:0%
so the left boundary is going to be here
as<00:11:04.480><c> well</c><00:11:04.640><c> as</c><00:11:04.720><c> the</c><00:11:04.880><c> right</c><00:11:05.120><c> boundary</c><00:11:05.519><c> both</c>

00:11:05.750 --> 00:11:05.760 align:start position:0%
as well as the right boundary both
 

00:11:05.760 --> 00:11:06.949 align:start position:0%
as well as the right boundary both
boundaries<00:11:06.160><c> are</c><00:11:06.240><c> going</c><00:11:06.320><c> to</c><00:11:06.399><c> be</c><00:11:06.560><c> here</c><00:11:06.800><c> but</c>

00:11:06.949 --> 00:11:06.959 align:start position:0%
boundaries are going to be here but
 

00:11:06.959 --> 00:11:08.150 align:start position:0%
boundaries are going to be here but
we're<00:11:07.120><c> going</c><00:11:07.200><c> to</c><00:11:07.360><c> assume</c><00:11:07.600><c> that</c><00:11:07.760><c> there's</c><00:11:07.920><c> an</c>

00:11:08.150 --> 00:11:08.160 align:start position:0%
we're going to assume that there's an
 

00:11:08.160 --> 00:11:09.670 align:start position:0%
we're going to assume that there's an
implicit<00:11:08.720><c> 1</c><00:11:08.959><c> at</c><00:11:09.120><c> the</c><00:11:09.279><c> right</c>

00:11:09.670 --> 00:11:09.680 align:start position:0%
implicit 1 at the right
 

00:11:09.680 --> 00:11:12.150 align:start position:0%
implicit 1 at the right
and<00:11:09.839><c> this</c><00:11:10.160><c> 5</c><00:11:10.560><c> is</c><00:11:10.640><c> not</c><00:11:10.880><c> going</c><00:11:11.120><c> away</c><00:11:11.600><c> the</c><00:11:11.760><c> 5</c><00:11:12.079><c> is</c>

00:11:12.150 --> 00:11:12.160 align:start position:0%
and this 5 is not going away the 5 is
 

00:11:12.160 --> 00:11:13.670 align:start position:0%
and this 5 is not going away the 5 is
going<00:11:12.240><c> to</c><00:11:12.320><c> be</c><00:11:12.480><c> here</c><00:11:12.800><c> as</c><00:11:13.040><c> well</c><00:11:13.200><c> we're</c><00:11:13.360><c> not</c><00:11:13.519><c> going</c>

00:11:13.670 --> 00:11:13.680 align:start position:0%
going to be here as well we're not going
 

00:11:13.680 --> 00:11:15.190 align:start position:0%
going to be here as well we're not going
to<00:11:13.839><c> pop</c><00:11:14.160><c> it</c><00:11:14.320><c> because</c><00:11:14.560><c> take</c><00:11:14.800><c> a</c><00:11:14.800><c> look</c><00:11:14.959><c> at</c><00:11:15.120><c> our</c>

00:11:15.190 --> 00:11:15.200 align:start position:0%
to pop it because take a look at our
 

00:11:15.200 --> 00:11:16.949 align:start position:0%
to pop it because take a look at our
boundary<00:11:15.600><c> our</c><00:11:15.760><c> boundary</c><00:11:16.160><c> tells</c><00:11:16.399><c> us</c><00:11:16.640><c> just</c><00:11:16.800><c> to</c>

00:11:16.949 --> 00:11:16.959 align:start position:0%
boundary our boundary tells us just to
 

00:11:16.959 --> 00:11:17.350 align:start position:0%
boundary our boundary tells us just to
pop

00:11:17.350 --> 00:11:17.360 align:start position:0%
pop
 

00:11:17.360 --> 00:11:19.750 align:start position:0%
pop
this<00:11:17.600><c> subarray</c><00:11:18.560><c> before</c><00:11:19.120><c> we</c><00:11:19.279><c> end</c><00:11:19.440><c> up</c><00:11:19.519><c> doing</c>

00:11:19.750 --> 00:11:19.760 align:start position:0%
this subarray before we end up doing
 

00:11:19.760 --> 00:11:21.030 align:start position:0%
this subarray before we end up doing
anything<00:11:20.079><c> else</c><00:11:20.240><c> so</c><00:11:20.399><c> this</c><00:11:20.560><c> is</c><00:11:20.640><c> going</c><00:11:20.720><c> to</c><00:11:20.800><c> stay</c>

00:11:21.030 --> 00:11:21.040 align:start position:0%
anything else so this is going to stay
 

00:11:21.040 --> 00:11:22.310 align:start position:0%
anything else so this is going to stay
here<00:11:21.200><c> we're</c><00:11:21.360><c> not</c><00:11:21.519><c> going</c><00:11:21.600><c> to</c><00:11:21.760><c> pop</c><00:11:22.000><c> it</c>

00:11:22.310 --> 00:11:22.320 align:start position:0%
here we're not going to pop it
 

00:11:22.320 --> 00:11:24.870 align:start position:0%
here we're not going to pop it
but<00:11:22.480><c> it</c><00:11:22.720><c> is</c><00:11:22.959><c> going</c><00:11:23.040><c> to</c><00:11:23.120><c> contribute</c><00:11:24.079><c> to</c><00:11:24.320><c> the</c>

00:11:24.870 --> 00:11:24.880 align:start position:0%
but it is going to contribute to the
 

00:11:24.880 --> 00:11:26.550 align:start position:0%
but it is going to contribute to the
total<00:11:25.279><c> number</c><00:11:25.519><c> of</c><00:11:25.600><c> coins</c><00:11:26.000><c> for</c><00:11:26.079><c> example</c><00:11:26.399><c> when</c>

00:11:26.550 --> 00:11:26.560 align:start position:0%
total number of coins for example when
 

00:11:26.560 --> 00:11:27.430 align:start position:0%
total number of coins for example when
we<00:11:26.720><c> pop</c><00:11:27.040><c> eight</c>

00:11:27.430 --> 00:11:27.440 align:start position:0%
we pop eight
 

00:11:27.440 --> 00:11:29.910 align:start position:0%
we pop eight
we're<00:11:27.600><c> gonna</c><00:11:27.760><c> get</c><00:11:28.079><c> five</c><00:11:28.640><c> times</c><00:11:29.040><c> eight</c><00:11:29.600><c> times</c>

00:11:29.910 --> 00:11:29.920 align:start position:0%
we're gonna get five times eight times
 

00:11:29.920 --> 00:11:31.430 align:start position:0%
we're gonna get five times eight times
one<00:11:30.320><c> that's</c><00:11:30.640><c> going</c><00:11:30.720><c> to</c><00:11:30.800><c> be</c><00:11:30.959><c> the</c><00:11:31.040><c> total</c><00:11:31.279><c> number</c>

00:11:31.430 --> 00:11:31.440 align:start position:0%
one that's going to be the total number
 

00:11:31.440 --> 00:11:32.310 align:start position:0%
one that's going to be the total number
of<00:11:31.519><c> coins</c><00:11:31.839><c> we</c><00:11:32.000><c> get</c>

00:11:32.310 --> 00:11:32.320 align:start position:0%
of coins we get
 

00:11:32.320 --> 00:11:35.030 align:start position:0%
of coins we get
once<00:11:32.560><c> we</c><00:11:32.720><c> pop</c><00:11:33.200><c> this</c><00:11:33.519><c> entire</c><00:11:34.160><c> sub-array</c><00:11:34.720><c> so</c>

00:11:35.030 --> 00:11:35.040 align:start position:0%
once we pop this entire sub-array so
 

00:11:35.040 --> 00:11:35.509 align:start position:0%
once we pop this entire sub-array so
using

00:11:35.509 --> 00:11:35.519 align:start position:0%
using
 

00:11:35.519 --> 00:11:37.509 align:start position:0%
using
sub-arrays<00:11:36.160><c> using</c><00:11:36.480><c> this</c><00:11:36.720><c> technique</c><00:11:37.200><c> where</c>

00:11:37.509 --> 00:11:37.519 align:start position:0%
sub-arrays using this technique where
 

00:11:37.519 --> 00:11:39.190 align:start position:0%
sub-arrays using this technique where
for<00:11:37.760><c> every</c><00:11:38.079><c> value</c><00:11:38.399><c> we're</c><00:11:38.560><c> going</c><00:11:38.640><c> to</c><00:11:38.720><c> identify</c>

00:11:39.190 --> 00:11:39.200 align:start position:0%
for every value we're going to identify
 

00:11:39.200 --> 00:11:41.190 align:start position:0%
for every value we're going to identify
well<00:11:39.440><c> what</c><00:11:39.600><c> if</c><00:11:39.760><c> we</c><00:11:39.920><c> popped</c><00:11:40.320><c> this</c><00:11:40.640><c> value</c>

00:11:41.190 --> 00:11:41.200 align:start position:0%
well what if we popped this value
 

00:11:41.200 --> 00:11:43.670 align:start position:0%
well what if we popped this value
last<00:11:41.760><c> that</c><00:11:42.079><c> allows</c><00:11:42.480><c> us</c><00:11:42.640><c> to</c><00:11:42.800><c> actually</c><00:11:43.200><c> get</c><00:11:43.440><c> a</c>

00:11:43.670 --> 00:11:43.680 align:start position:0%
last that allows us to actually get a
 

00:11:43.680 --> 00:11:45.670 align:start position:0%
last that allows us to actually get a
sub<00:11:43.920><c> problem</c><00:11:44.240><c> that</c><00:11:44.399><c> we</c><00:11:44.560><c> can</c><00:11:44.800><c> cache</c><00:11:45.120><c> now</c><00:11:45.360><c> in</c><00:11:45.519><c> our</c>

00:11:45.670 --> 00:11:45.680 align:start position:0%
sub problem that we can cache now in our
 

00:11:45.680 --> 00:11:46.790 align:start position:0%
sub problem that we can cache now in our
cache<00:11:46.000><c> it's</c><00:11:46.240><c> going</c><00:11:46.320><c> to</c><00:11:46.399><c> be</c>

00:11:46.790 --> 00:11:46.800 align:start position:0%
cache it's going to be
 

00:11:46.800 --> 00:11:48.470 align:start position:0%
cache it's going to be
let's<00:11:46.959><c> say</c><00:11:47.200><c> we</c><00:11:47.360><c> call</c><00:11:47.519><c> it</c><00:11:47.680><c> dp</c><00:11:48.079><c> this</c><00:11:48.160><c> is</c><00:11:48.320><c> our</c>

00:11:48.470 --> 00:11:48.480 align:start position:0%
let's say we call it dp this is our
 

00:11:48.480 --> 00:11:51.030 align:start position:0%
let's say we call it dp this is our
cache<00:11:49.040><c> it's</c><00:11:49.200><c> going</c><00:11:49.279><c> to</c><00:11:49.360><c> be</c><00:11:49.519><c> a</c><00:11:49.680><c> two</c><00:11:50.000><c> dimensional</c>

00:11:51.030 --> 00:11:51.040 align:start position:0%
cache it's going to be a two dimensional
 

00:11:51.040 --> 00:11:52.710 align:start position:0%
cache it's going to be a two dimensional
cache<00:11:51.440><c> because</c><00:11:51.839><c> we</c><00:11:52.000><c> are</c><00:11:52.079><c> going</c><00:11:52.160><c> to</c><00:11:52.240><c> be</c><00:11:52.399><c> using</c>

00:11:52.710 --> 00:11:52.720 align:start position:0%
cache because we are going to be using
 

00:11:52.720 --> 00:11:55.190 align:start position:0%
cache because we are going to be using
the<00:11:53.040><c> left</c><00:11:53.360><c> value</c><00:11:53.839><c> as</c><00:11:54.079><c> the</c><00:11:54.240><c> first</c><00:11:54.639><c> index</c><00:11:55.120><c> and</c>

00:11:55.190 --> 00:11:55.200 align:start position:0%
the left value as the first index and
 

00:11:55.200 --> 00:11:56.949 align:start position:0%
the left value as the first index and
the<00:11:55.519><c> right</c><00:11:55.839><c> value</c><00:11:56.320><c> as</c><00:11:56.560><c> the</c>

00:11:56.949 --> 00:11:56.959 align:start position:0%
the right value as the
 

00:11:56.959 --> 00:11:59.269 align:start position:0%
the right value as the
second<00:11:57.360><c> index</c><00:11:57.920><c> these</c><00:11:58.240><c> left</c><00:11:58.480><c> and</c><00:11:58.639><c> right</c><00:11:58.880><c> values</c>

00:11:59.269 --> 00:11:59.279 align:start position:0%
second index these left and right values
 

00:11:59.279 --> 00:12:00.790 align:start position:0%
second index these left and right values
are<00:11:59.360><c> basically</c><00:11:59.760><c> just</c><00:11:59.920><c> going</c><00:12:00.000><c> to</c><00:12:00.160><c> tell</c><00:12:00.399><c> us</c>

00:12:00.790 --> 00:12:00.800 align:start position:0%
are basically just going to tell us
 

00:12:00.800 --> 00:12:03.509 align:start position:0%
are basically just going to tell us
what<00:12:00.959><c> the</c><00:12:01.279><c> sub</c><00:12:01.519><c> array</c><00:12:02.399><c> is</c><00:12:02.720><c> from</c><00:12:02.880><c> the</c><00:12:03.120><c> original</c>

00:12:03.509 --> 00:12:03.519 align:start position:0%
what the sub array is from the original
 

00:12:03.519 --> 00:12:04.949 align:start position:0%
what the sub array is from the original
array<00:12:03.839><c> right</c><00:12:04.000><c> left</c><00:12:04.320><c> is</c><00:12:04.399><c> going</c><00:12:04.480><c> to</c><00:12:04.560><c> be</c><00:12:04.639><c> the</c><00:12:04.720><c> left</c>

00:12:04.949 --> 00:12:04.959 align:start position:0%
array right left is going to be the left
 

00:12:04.959 --> 00:12:05.430 align:start position:0%
array right left is going to be the left
boundary

00:12:05.430 --> 00:12:05.440 align:start position:0%
boundary
 

00:12:05.440 --> 00:12:07.269 align:start position:0%
boundary
r<00:12:05.680><c> is</c><00:12:05.760><c> going</c><00:12:05.839><c> to</c><00:12:05.920><c> be</c><00:12:06.079><c> the</c><00:12:06.240><c> right</c><00:12:06.480><c> boundary</c><00:12:07.120><c> with</c>

00:12:07.269 --> 00:12:07.279 align:start position:0%
r is going to be the right boundary with
 

00:12:07.279 --> 00:12:08.870 align:start position:0%
r is going to be the right boundary with
that<00:12:07.519><c> being</c><00:12:07.760><c> said</c><00:12:08.000><c> let</c><00:12:08.160><c> me</c><00:12:08.240><c> just</c><00:12:08.399><c> give</c><00:12:08.560><c> you</c><00:12:08.720><c> a</c>

00:12:08.870 --> 00:12:08.880 align:start position:0%
that being said let me just give you a
 

00:12:08.880 --> 00:12:09.190 align:start position:0%
that being said let me just give you a
quick

00:12:09.190 --> 00:12:09.200 align:start position:0%
quick
 

00:12:09.200 --> 00:12:11.590 align:start position:0%
quick
high<00:12:09.519><c> level</c><00:12:10.240><c> run</c><00:12:10.560><c> through</c><00:12:10.880><c> of</c><00:12:10.959><c> the</c><00:12:11.120><c> algorithm</c>

00:12:11.590 --> 00:12:11.600 align:start position:0%
high level run through of the algorithm
 

00:12:11.600 --> 00:12:12.790 align:start position:0%
high level run through of the algorithm
and<00:12:11.680><c> then</c><00:12:11.839><c> we're</c><00:12:12.000><c> going</c><00:12:12.079><c> to</c><00:12:12.160><c> dive</c><00:12:12.480><c> into</c><00:12:12.720><c> the</c>

00:12:12.790 --> 00:12:12.800 align:start position:0%
and then we're going to dive into the
 

00:12:12.800 --> 00:12:13.590 align:start position:0%
and then we're going to dive into the
code

00:12:13.590 --> 00:12:13.600 align:start position:0%
code
 

00:12:13.600 --> 00:12:15.430 align:start position:0%
code
so<00:12:13.839><c> we</c><00:12:14.000><c> remember</c><00:12:14.399><c> in</c><00:12:14.480><c> the</c><00:12:14.560><c> brute</c><00:12:14.880><c> force</c><00:12:15.200><c> we</c>

00:12:15.430 --> 00:12:15.440 align:start position:0%
so we remember in the brute force we
 

00:12:15.440 --> 00:12:16.949 align:start position:0%
so we remember in the brute force we
started<00:12:15.760><c> out</c><00:12:15.839><c> with</c><00:12:16.079><c> okay</c><00:12:16.320><c> what</c><00:12:16.480><c> happens</c><00:12:16.720><c> if</c><00:12:16.800><c> we</c>

00:12:16.949 --> 00:12:16.959 align:start position:0%
started out with okay what happens if we
 

00:12:16.959 --> 00:12:18.710 align:start position:0%
started out with okay what happens if we
pop<00:12:17.200><c> this</c><00:12:17.519><c> first</c><00:12:17.839><c> what</c><00:12:18.000><c> happens</c><00:12:18.240><c> if</c><00:12:18.320><c> we</c><00:12:18.480><c> pop</c>

00:12:18.710 --> 00:12:18.720 align:start position:0%
pop this first what happens if we pop
 

00:12:18.720 --> 00:12:19.030 align:start position:0%
pop this first what happens if we pop
this

00:12:19.030 --> 00:12:19.040 align:start position:0%
this
 

00:12:19.040 --> 00:12:20.629 align:start position:0%
this
first<00:12:19.519><c> right</c><00:12:19.760><c> so</c><00:12:19.920><c> that's</c><00:12:20.079><c> going</c><00:12:20.160><c> to</c><00:12:20.240><c> give</c><00:12:20.399><c> us</c><00:12:20.560><c> a</c>

00:12:20.629 --> 00:12:20.639 align:start position:0%
first right so that's going to give us a
 

00:12:20.639 --> 00:12:22.389 align:start position:0%
first right so that's going to give us a
decision<00:12:21.120><c> tree</c><00:12:21.519><c> now</c><00:12:21.760><c> we're</c><00:12:21.920><c> going</c><00:12:22.000><c> to</c><00:12:22.079><c> do</c><00:12:22.240><c> it</c><00:12:22.399><c> a</c>

00:12:22.389 --> 00:12:22.399 align:start position:0%
decision tree now we're going to do it a
 

00:12:22.399 --> 00:12:23.910 align:start position:0%
decision tree now we're going to do it a
little<00:12:22.560><c> bit</c><00:12:22.720><c> differently</c><00:12:23.200><c> our</c><00:12:23.360><c> decision</c><00:12:23.680><c> tree</c>

00:12:23.910 --> 00:12:23.920 align:start position:0%
little bit differently our decision tree
 

00:12:23.920 --> 00:12:25.590 align:start position:0%
little bit differently our decision tree
now<00:12:24.240><c> is</c><00:12:24.320><c> going</c><00:12:24.560><c> to</c><00:12:24.720><c> be</c><00:12:24.880><c> what</c><00:12:25.040><c> happens</c><00:12:25.360><c> if</c><00:12:25.440><c> we</c>

00:12:25.590 --> 00:12:25.600 align:start position:0%
now is going to be what happens if we
 

00:12:25.600 --> 00:12:25.990 align:start position:0%
now is going to be what happens if we
pop

00:12:25.990 --> 00:12:26.000 align:start position:0%
pop
 

00:12:26.000 --> 00:12:28.710 align:start position:0%
pop
this<00:12:26.480><c> last</c><00:12:27.200><c> what</c><00:12:27.360><c> happens</c><00:12:27.680><c> if</c><00:12:27.760><c> we</c><00:12:27.920><c> pop</c><00:12:28.320><c> this</c>

00:12:28.710 --> 00:12:28.720 align:start position:0%
this last what happens if we pop this
 

00:12:28.720 --> 00:12:29.269 align:start position:0%
this last what happens if we pop this
last

00:12:29.269 --> 00:12:29.279 align:start position:0%
last
 

00:12:29.279 --> 00:12:31.190 align:start position:0%
last
what<00:12:29.519><c> happens</c><00:12:29.760><c> if</c><00:12:29.839><c> we</c><00:12:30.000><c> pop</c><00:12:30.320><c> this</c><00:12:30.560><c> last</c><00:12:30.959><c> which</c>

00:12:31.190 --> 00:12:31.200 align:start position:0%
what happens if we pop this last which
 

00:12:31.200 --> 00:12:32.470 align:start position:0%
what happens if we pop this last which
one<00:12:31.360><c> of</c><00:12:31.519><c> those</c><00:12:31.839><c> paths</c>

00:12:32.470 --> 00:12:32.480 align:start position:0%
one of those paths
 

00:12:32.480 --> 00:12:34.470 align:start position:0%
one of those paths
is<00:12:32.639><c> going</c><00:12:32.800><c> to</c><00:12:32.959><c> lead</c><00:12:33.200><c> us</c><00:12:33.440><c> to</c><00:12:33.600><c> the</c><00:12:33.920><c> maximum</c>

00:12:34.470 --> 00:12:34.480 align:start position:0%
is going to lead us to the maximum
 

00:12:34.480 --> 00:12:35.750 align:start position:0%
is going to lead us to the maximum
number<00:12:34.720><c> of</c><00:12:34.959><c> coins</c><00:12:35.360><c> right</c>

00:12:35.750 --> 00:12:35.760 align:start position:0%
number of coins right
 

00:12:35.760 --> 00:12:37.829 align:start position:0%
number of coins right
so<00:12:36.160><c> we</c><00:12:36.399><c> are</c><00:12:36.560><c> still</c><00:12:36.800><c> going</c><00:12:36.880><c> to</c><00:12:37.040><c> brute</c><00:12:37.360><c> force</c><00:12:37.680><c> it</c>

00:12:37.829 --> 00:12:37.839 align:start position:0%
so we are still going to brute force it
 

00:12:37.839 --> 00:12:39.350 align:start position:0%
so we are still going to brute force it
kind<00:12:38.079><c> of</c><00:12:38.240><c> we</c><00:12:38.399><c> are</c><00:12:38.480><c> going</c><00:12:38.560><c> to</c><00:12:38.639><c> have</c><00:12:38.800><c> that</c><00:12:39.040><c> exact</c>

00:12:39.350 --> 00:12:39.360 align:start position:0%
kind of we are going to have that exact
 

00:12:39.360 --> 00:12:40.629 align:start position:0%
kind of we are going to have that exact
same<00:12:39.680><c> decision</c><00:12:40.160><c> tree</c>

00:12:40.629 --> 00:12:40.639 align:start position:0%
same decision tree
 

00:12:40.639 --> 00:12:42.230 align:start position:0%
same decision tree
only<00:12:40.880><c> thing</c><00:12:41.040><c> is</c><00:12:41.279><c> we're</c><00:12:41.440><c> going</c><00:12:41.519><c> to</c><00:12:41.600><c> use</c><00:12:41.760><c> a</c><00:12:41.920><c> cache</c>

00:12:42.230 --> 00:12:42.240 align:start position:0%
only thing is we're going to use a cache
 

00:12:42.240 --> 00:12:44.310 align:start position:0%
only thing is we're going to use a cache
we're<00:12:42.399><c> going</c><00:12:42.560><c> to</c><00:12:42.800><c> take</c><00:12:43.040><c> that</c><00:12:43.279><c> sub</c><00:12:43.600><c> problem</c><00:12:44.000><c> and</c>

00:12:44.310 --> 00:12:44.320 align:start position:0%
we're going to take that sub problem and
 

00:12:44.320 --> 00:12:46.550 align:start position:0%
we're going to take that sub problem and
cache<00:12:44.720><c> them</c><00:12:45.200><c> so</c><00:12:45.440><c> for</c><00:12:45.600><c> example</c><00:12:46.079><c> let's</c><00:12:46.240><c> say</c><00:12:46.399><c> we</c>

00:12:46.550 --> 00:12:46.560 align:start position:0%
cache them so for example let's say we
 

00:12:46.560 --> 00:12:48.870 align:start position:0%
cache them so for example let's say we
pop<00:12:47.120><c> this</c><00:12:47.360><c> value</c><00:12:47.839><c> last</c><00:12:48.240><c> what</c><00:12:48.399><c> am</c><00:12:48.560><c> i</c><00:12:48.639><c> going</c><00:12:48.720><c> to</c>

00:12:48.870 --> 00:12:48.880 align:start position:0%
pop this value last what am i going to
 

00:12:48.880 --> 00:12:49.350 align:start position:0%
pop this value last what am i going to
do

00:12:49.350 --> 00:12:49.360 align:start position:0%
do
 

00:12:49.360 --> 00:12:51.509 align:start position:0%
do
and<00:12:49.519><c> we</c><00:12:49.760><c> actually</c><00:12:50.240><c> are</c><00:12:50.399><c> going</c><00:12:50.560><c> to</c><00:12:50.720><c> modify</c><00:12:51.279><c> the</c>

00:12:51.509 --> 00:12:51.519 align:start position:0%
and we actually are going to modify the
 

00:12:51.519 --> 00:12:53.269 align:start position:0%
and we actually are going to modify the
input<00:12:51.760><c> array</c><00:12:52.000><c> so</c><00:12:52.240><c> we</c><00:12:52.320><c> are</c><00:12:52.480><c> gonna</c><00:12:52.720><c> add</c><00:12:53.040><c> that</c>

00:12:53.269 --> 00:12:53.279 align:start position:0%
input array so we are gonna add that
 

00:12:53.279 --> 00:12:55.269 align:start position:0%
input array so we are gonna add that
implicit<00:12:53.760><c> one</c><00:12:54.000><c> at</c><00:12:54.079><c> the</c><00:12:54.240><c> beginning</c><00:12:54.720><c> and</c><00:12:54.959><c> at</c><00:12:55.040><c> the</c>

00:12:55.269 --> 00:12:55.279 align:start position:0%
implicit one at the beginning and at the
 

00:12:55.279 --> 00:12:55.750 align:start position:0%
implicit one at the beginning and at the
end

00:12:55.750 --> 00:12:55.760 align:start position:0%
end
 

00:12:55.760 --> 00:12:57.670 align:start position:0%
end
but<00:12:56.000><c> our</c><00:12:56.240><c> boundary</c><00:12:56.720><c> is</c><00:12:56.880><c> gonna</c><00:12:57.040><c> be</c><00:12:57.279><c> left</c><00:12:57.600><c> is</c>

00:12:57.670 --> 00:12:57.680 align:start position:0%
but our boundary is gonna be left is
 

00:12:57.680 --> 00:12:59.269 align:start position:0%
but our boundary is gonna be left is
gonna<00:12:57.839><c> be</c><00:12:58.000><c> from</c><00:12:58.160><c> here</c><00:12:58.399><c> and</c><00:12:58.560><c> right</c><00:12:58.800><c> is</c><00:12:58.959><c> gonna</c><00:12:59.120><c> be</c>

00:12:59.269 --> 00:12:59.279 align:start position:0%
gonna be from here and right is gonna be
 

00:12:59.279 --> 00:13:00.790 align:start position:0%
gonna be from here and right is gonna be
from<00:12:59.440><c> here</c><00:12:59.680><c> that's</c><00:12:59.920><c> ultimately</c>

00:13:00.790 --> 00:13:00.800 align:start position:0%
from here that's ultimately
 

00:13:00.800 --> 00:13:02.230 align:start position:0%
from here that's ultimately
these<00:13:01.040><c> are</c><00:13:01.120><c> the</c><00:13:01.200><c> values</c><00:13:01.760><c> that</c><00:13:01.839><c> we're</c><00:13:02.000><c> actually</c>

00:13:02.230 --> 00:13:02.240 align:start position:0%
these are the values that we're actually
 

00:13:02.240 --> 00:13:03.509 align:start position:0%
these are the values that we're actually
gonna<00:13:02.399><c> be</c><00:13:02.560><c> popping</c><00:13:02.959><c> we're</c><00:13:03.120><c> not</c><00:13:03.279><c> actually</c>

00:13:03.509 --> 00:13:03.519 align:start position:0%
gonna be popping we're not actually
 

00:13:03.519 --> 00:13:04.790 align:start position:0%
gonna be popping we're not actually
gonna<00:13:03.680><c> be</c><00:13:03.760><c> popping</c><00:13:04.240><c> these</c>

00:13:04.790 --> 00:13:04.800 align:start position:0%
gonna be popping these
 

00:13:04.800 --> 00:13:06.710 align:start position:0%
gonna be popping these
again<00:13:05.120><c> the</c><00:13:05.279><c> brute</c><00:13:05.519><c> force</c><00:13:05.920><c> what</c><00:13:06.079><c> happens</c><00:13:06.399><c> if</c><00:13:06.480><c> we</c>

00:13:06.710 --> 00:13:06.720 align:start position:0%
again the brute force what happens if we
 

00:13:06.720 --> 00:13:08.550 align:start position:0%
again the brute force what happens if we
pop<00:13:07.200><c> this</c><00:13:07.680><c> last</c>

00:13:08.550 --> 00:13:08.560 align:start position:0%
pop this last
 

00:13:08.560 --> 00:13:11.509 align:start position:0%
pop this last
if<00:13:08.720><c> we</c><00:13:08.959><c> pop</c><00:13:09.279><c> this</c><00:13:09.680><c> last</c><00:13:10.320><c> our</c><00:13:10.639><c> left</c><00:13:10.959><c> subarray</c>

00:13:11.509 --> 00:13:11.519 align:start position:0%
if we pop this last our left subarray
 

00:13:11.519 --> 00:13:12.069 align:start position:0%
if we pop this last our left subarray
becomes

00:13:12.069 --> 00:13:12.079 align:start position:0%
becomes
 

00:13:12.079 --> 00:13:14.069 align:start position:0%
becomes
empty<00:13:12.399><c> right</c><00:13:12.639><c> there's</c><00:13:12.880><c> nothing</c><00:13:13.279><c> there</c><00:13:13.760><c> in</c><00:13:13.920><c> the</c>

00:13:14.069 --> 00:13:14.079 align:start position:0%
empty right there's nothing there in the
 

00:13:14.079 --> 00:13:15.190 align:start position:0%
empty right there's nothing there in the
left<00:13:14.320><c> sub-array</c>

00:13:15.190 --> 00:13:15.200 align:start position:0%
left sub-array
 

00:13:15.200 --> 00:13:16.870 align:start position:0%
left sub-array
but<00:13:15.360><c> our</c><00:13:15.600><c> right</c><00:13:15.920><c> sub-array</c><00:13:16.320><c> is</c><00:13:16.480><c> going</c><00:13:16.560><c> to</c><00:13:16.639><c> have</c>

00:13:16.870 --> 00:13:16.880 align:start position:0%
but our right sub-array is going to have
 

00:13:16.880 --> 00:13:19.110 align:start position:0%
but our right sub-array is going to have
this<00:13:17.200><c> entire</c><00:13:17.760><c> portion</c><00:13:18.320><c> right</c>

00:13:19.110 --> 00:13:19.120 align:start position:0%
this entire portion right
 

00:13:19.120 --> 00:13:21.110 align:start position:0%
this entire portion right
so<00:13:19.360><c> since</c><00:13:19.760><c> currently</c><00:13:20.160><c> our</c><00:13:20.320><c> boundary</c><00:13:20.800><c> our</c><00:13:20.959><c> left</c>

00:13:21.110 --> 00:13:21.120 align:start position:0%
so since currently our boundary our left
 

00:13:21.120 --> 00:13:22.629 align:start position:0%
so since currently our boundary our left
boundaries<00:13:21.600><c> here</c><00:13:21.760><c> in</c><00:13:21.839><c> our</c><00:13:21.920><c> right</c><00:13:22.160><c> boundaries</c>

00:13:22.629 --> 00:13:22.639 align:start position:0%
boundaries here in our right boundaries
 

00:13:22.639 --> 00:13:23.590 align:start position:0%
boundaries here in our right boundaries
here<00:13:22.880><c> if</c><00:13:23.040><c> we</c><00:13:23.200><c> pop</c>

00:13:23.590 --> 00:13:23.600 align:start position:0%
here if we pop
 

00:13:23.600 --> 00:13:25.990 align:start position:0%
here if we pop
this<00:13:23.839><c> value</c><00:13:24.320><c> last</c><00:13:24.880><c> this</c><00:13:25.120><c> is</c><00:13:25.200><c> what</c><00:13:25.440><c> our</c><00:13:25.600><c> total</c>

00:13:25.990 --> 00:13:26.000 align:start position:0%
this value last this is what our total
 

00:13:26.000 --> 00:13:27.350 align:start position:0%
this value last this is what our total
is<00:13:26.079><c> gonna</c><00:13:26.320><c> be</c><00:13:26.480><c> we're</c><00:13:26.639><c> gonna</c><00:13:26.880><c> get</c>

00:13:27.350 --> 00:13:27.360 align:start position:0%
is gonna be we're gonna get
 

00:13:27.360 --> 00:13:29.990 align:start position:0%
is gonna be we're gonna get
so<00:13:27.600><c> if</c><00:13:27.760><c> we</c><00:13:27.920><c> pop</c><00:13:28.240><c> this</c><00:13:28.560><c> last</c><00:13:29.040><c> we</c><00:13:29.279><c> know</c><00:13:29.760><c> it's</c>

00:13:29.990 --> 00:13:30.000 align:start position:0%
so if we pop this last we know it's
 

00:13:30.000 --> 00:13:30.389 align:start position:0%
so if we pop this last we know it's
gonna

00:13:30.389 --> 00:13:30.399 align:start position:0%
gonna
 

00:13:30.399 --> 00:13:31.910 align:start position:0%
gonna
we're<00:13:30.560><c> gonna</c><00:13:30.800><c> end</c><00:13:30.959><c> up</c><00:13:31.040><c> popping</c><00:13:31.440><c> everything</c>

00:13:31.910 --> 00:13:31.920 align:start position:0%
we're gonna end up popping everything
 

00:13:31.920 --> 00:13:34.470 align:start position:0%
we're gonna end up popping everything
here<00:13:32.240><c> before</c><00:13:32.720><c> that</c><00:13:33.040><c> right</c><00:13:33.279><c> so</c><00:13:33.760><c> when</c><00:13:34.000><c> we</c><00:13:34.240><c> pop</c>

00:13:34.470 --> 00:13:34.480 align:start position:0%
here before that right so when we pop
 

00:13:34.480 --> 00:13:35.750 align:start position:0%
here before that right so when we pop
this<00:13:34.720><c> value</c><00:13:35.120><c> we're</c><00:13:35.279><c> gonna</c><00:13:35.440><c> get</c>

00:13:35.750 --> 00:13:35.760 align:start position:0%
this value we're gonna get
 

00:13:35.760 --> 00:13:38.949 align:start position:0%
this value we're gonna get
three<00:13:36.480><c> times</c><00:13:37.120><c> one</c><00:13:37.839><c> times</c><00:13:38.240><c> one</c><00:13:38.480><c> right</c><00:13:38.639><c> so</c><00:13:38.800><c> what</c>

00:13:38.949 --> 00:13:38.959 align:start position:0%
three times one times one right so what
 

00:13:38.959 --> 00:13:40.150 align:start position:0%
three times one times one right so what
i'm<00:13:39.120><c> gonna</c><00:13:39.279><c> say</c><00:13:39.440><c> is</c><00:13:39.680><c> three</c>

00:13:40.150 --> 00:13:40.160 align:start position:0%
i'm gonna say is three
 

00:13:40.160 --> 00:13:43.110 align:start position:0%
i'm gonna say is three
times<00:13:40.800><c> nums</c><00:13:41.279><c> of</c><00:13:41.600><c> right</c><00:13:41.920><c> which</c><00:13:42.160><c> is</c><00:13:42.320><c> over</c><00:13:42.560><c> here</c>

00:13:43.110 --> 00:13:43.120 align:start position:0%
times nums of right which is over here
 

00:13:43.120 --> 00:13:43.590 align:start position:0%
times nums of right which is over here
plus

00:13:43.590 --> 00:13:43.600 align:start position:0%
plus
 

00:13:43.600 --> 00:13:47.030 align:start position:0%
plus
one<00:13:44.240><c> and</c><00:13:44.480><c> nums</c><00:13:44.880><c> of</c><00:13:45.279><c> left</c><00:13:45.680><c> which</c><00:13:45.920><c> is</c><00:13:46.079><c> over</c><00:13:46.320><c> here</c>

00:13:47.030 --> 00:13:47.040 align:start position:0%
one and nums of left which is over here
 

00:13:47.040 --> 00:13:49.350 align:start position:0%
one and nums of left which is over here
minus<00:13:47.519><c> one</c><00:13:48.000><c> that's</c><00:13:48.240><c> going</c><00:13:48.320><c> to</c><00:13:48.399><c> give</c><00:13:48.639><c> us</c><00:13:49.199><c> once</c>

00:13:49.350 --> 00:13:49.360 align:start position:0%
minus one that's going to give us once
 

00:13:49.360 --> 00:13:50.310 align:start position:0%
minus one that's going to give us once
we<00:13:49.519><c> pop</c><00:13:49.839><c> this</c>

00:13:50.310 --> 00:13:50.320 align:start position:0%
we pop this
 

00:13:50.320 --> 00:13:52.389 align:start position:0%
we pop this
plus<00:13:50.880><c> we</c><00:13:51.120><c> want</c><00:13:51.360><c> the</c><00:13:51.519><c> remaining</c><00:13:52.079><c> number</c><00:13:52.320><c> of</c>

00:13:52.389 --> 00:13:52.399 align:start position:0%
plus we want the remaining number of
 

00:13:52.399 --> 00:13:53.590 align:start position:0%
plus we want the remaining number of
coins<00:13:52.720><c> that</c><00:13:52.800><c> we</c><00:13:53.040><c> get</c>

00:13:53.590 --> 00:13:53.600 align:start position:0%
coins that we get
 

00:13:53.600 --> 00:13:55.670 align:start position:0%
coins that we get
from<00:13:53.920><c> popping</c><00:13:54.639><c> the</c><00:13:54.800><c> remaining</c><00:13:55.199><c> portion</c><00:13:55.600><c> of</c>

00:13:55.670 --> 00:13:55.680 align:start position:0%
from popping the remaining portion of
 

00:13:55.680 --> 00:13:57.189 align:start position:0%
from popping the remaining portion of
the<00:13:55.839><c> left</c><00:13:56.160><c> sub</c><00:13:56.320><c> array</c><00:13:56.639><c> we</c><00:13:56.720><c> see</c><00:13:56.880><c> that</c><00:13:57.040><c> there's</c>

00:13:57.189 --> 00:13:57.199 align:start position:0%
the left sub array we see that there's
 

00:13:57.199 --> 00:13:58.230 align:start position:0%
the left sub array we see that there's
nothing<00:13:57.519><c> here</c><00:13:57.839><c> right</c>

00:13:58.230 --> 00:13:58.240 align:start position:0%
nothing here right
 

00:13:58.240 --> 00:13:59.910 align:start position:0%
nothing here right
remember<00:13:58.560><c> we're</c><00:13:58.720><c> not</c><00:13:58.959><c> actually</c><00:13:59.279><c> popping</c><00:13:59.680><c> this</c>

00:13:59.910 --> 00:13:59.920 align:start position:0%
remember we're not actually popping this
 

00:13:59.920 --> 00:14:02.069 align:start position:0%
remember we're not actually popping this
value<00:14:00.480><c> there's</c><00:14:00.639><c> no</c><00:14:00.959><c> other</c><00:14:01.199><c> values</c><00:14:01.600><c> in</c><00:14:01.760><c> between</c>

00:14:02.069 --> 00:14:02.079 align:start position:0%
value there's no other values in between
 

00:14:02.079 --> 00:14:04.150 align:start position:0%
value there's no other values in between
so<00:14:02.240><c> there</c><00:14:02.480><c> is</c><00:14:02.639><c> no</c><00:14:02.880><c> left</c><00:14:03.120><c> sub</c><00:14:03.360><c> array</c><00:14:03.760><c> what</c><00:14:03.920><c> about</c>

00:14:04.150 --> 00:14:04.160 align:start position:0%
so there is no left sub array what about
 

00:14:04.160 --> 00:14:05.670 align:start position:0%
so there is no left sub array what about
the<00:14:04.320><c> right</c><00:14:04.560><c> sub</c><00:14:04.800><c> array</c><00:14:05.120><c> we're</c><00:14:05.279><c> going</c><00:14:05.360><c> to</c><00:14:05.440><c> take</c>

00:14:05.670 --> 00:14:05.680 align:start position:0%
the right sub array we're going to take
 

00:14:05.680 --> 00:14:07.269 align:start position:0%
the right sub array we're going to take
our<00:14:05.920><c> left</c><00:14:06.160><c> pointer</c><00:14:06.560><c> shift</c><00:14:06.880><c> it</c><00:14:06.959><c> by</c>

00:14:07.269 --> 00:14:07.279 align:start position:0%
our left pointer shift it by
 

00:14:07.279 --> 00:14:09.269 align:start position:0%
our left pointer shift it by
one<00:14:07.600><c> that's</c><00:14:07.839><c> going</c><00:14:07.920><c> to</c><00:14:08.000><c> put</c><00:14:08.240><c> left</c><00:14:08.560><c> over</c><00:14:08.800><c> here</c>

00:14:09.269 --> 00:14:09.279 align:start position:0%
one that's going to put left over here
 

00:14:09.279 --> 00:14:11.189 align:start position:0%
one that's going to put left over here
so<00:14:09.680><c> the</c><00:14:09.920><c> right</c><00:14:10.160><c> sub</c><00:14:10.399><c> array</c><00:14:10.560><c> is</c><00:14:10.639><c> going</c><00:14:10.720><c> to</c><00:14:10.800><c> be</c>

00:14:11.189 --> 00:14:11.199 align:start position:0%
so the right sub array is going to be
 

00:14:11.199 --> 00:14:12.790 align:start position:0%
so the right sub array is going to be
all<00:14:11.440><c> of</c><00:14:11.519><c> these</c><00:14:11.839><c> elements</c><00:14:12.240><c> right</c><00:14:12.399><c> so</c><00:14:12.560><c> you</c><00:14:12.639><c> can</c>

00:14:12.790 --> 00:14:12.800 align:start position:0%
all of these elements right so you can
 

00:14:12.800 --> 00:14:14.629 align:start position:0%
all of these elements right so you can
see<00:14:13.120><c> we're</c><00:14:13.279><c> going</c><00:14:13.360><c> to</c><00:14:13.440><c> get</c><00:14:13.680><c> that</c><00:14:14.000><c> total</c><00:14:14.320><c> amount</c>

00:14:14.629 --> 00:14:14.639 align:start position:0%
see we're going to get that total amount
 

00:14:14.639 --> 00:14:16.629 align:start position:0%
see we're going to get that total amount
computed<00:14:15.199><c> from</c><00:14:15.440><c> our</c><00:14:15.760><c> dp</c>

00:14:16.629 --> 00:14:16.639 align:start position:0%
computed from our dp
 

00:14:16.639 --> 00:14:18.389 align:start position:0%
computed from our dp
right<00:14:16.880><c> we're</c><00:14:17.040><c> going</c><00:14:17.120><c> to</c><00:14:17.199><c> get</c><00:14:17.360><c> it</c><00:14:17.440><c> from</c><00:14:17.680><c> our</c><00:14:17.839><c> dp</c>

00:14:18.389 --> 00:14:18.399 align:start position:0%
right we're going to get it from our dp
 

00:14:18.399 --> 00:14:20.550 align:start position:0%
right we're going to get it from our dp
if<00:14:18.480><c> that's</c><00:14:18.800><c> already</c><00:14:19.199><c> been</c><00:14:19.360><c> computed</c><00:14:20.000><c> as</c><00:14:20.160><c> a</c><00:14:20.320><c> sub</c>

00:14:20.550 --> 00:14:20.560 align:start position:0%
if that's already been computed as a sub
 

00:14:20.560 --> 00:14:22.150 align:start position:0%
if that's already been computed as a sub
problem<00:14:20.880><c> if</c><00:14:21.040><c> it</c><00:14:21.120><c> hasn't</c><00:14:21.440><c> been</c><00:14:21.600><c> computed</c><00:14:22.000><c> then</c>

00:14:22.150 --> 00:14:22.160 align:start position:0%
problem if it hasn't been computed then
 

00:14:22.160 --> 00:14:23.110 align:start position:0%
problem if it hasn't been computed then
we're<00:14:22.240><c> just</c><00:14:22.399><c> going</c><00:14:22.480><c> to</c><00:14:22.560><c> do</c><00:14:22.720><c> that</c>

00:14:23.110 --> 00:14:23.120 align:start position:0%
we're just going to do that
 

00:14:23.120 --> 00:14:24.790 align:start position:0%
we're just going to do that
brute<00:14:23.360><c> force</c><00:14:23.680><c> depth</c><00:14:23.920><c> first</c><00:14:24.079><c> search</c><00:14:24.399><c> passing</c>

00:14:24.790 --> 00:14:24.800 align:start position:0%
brute force depth first search passing
 

00:14:24.800 --> 00:14:26.150 align:start position:0%
brute force depth first search passing
in<00:14:24.880><c> these</c><00:14:25.120><c> same</c><00:14:25.360><c> parameters</c><00:14:25.839><c> right</c>

00:14:26.150 --> 00:14:26.160 align:start position:0%
in these same parameters right
 

00:14:26.160 --> 00:14:29.110 align:start position:0%
in these same parameters right
l<00:14:26.480><c> plus</c><00:14:26.800><c> one</c><00:14:27.279><c> and</c><00:14:27.680><c> right</c><00:14:28.399><c> now</c><00:14:28.560><c> let's</c><00:14:28.800><c> look</c><00:14:28.959><c> at</c>

00:14:29.110 --> 00:14:29.120 align:start position:0%
l plus one and right now let's look at
 

00:14:29.120 --> 00:14:30.069 align:start position:0%
l plus one and right now let's look at
it<00:14:29.199><c> for</c><00:14:29.279><c> a</c><00:14:29.360><c> more</c><00:14:29.600><c> general</c>

00:14:30.069 --> 00:14:30.079 align:start position:0%
it for a more general
 

00:14:30.079 --> 00:14:32.069 align:start position:0%
it for a more general
case<00:14:30.560><c> if</c><00:14:30.720><c> we</c><00:14:30.880><c> were</c><00:14:31.040><c> popping</c><00:14:31.360><c> let's</c><00:14:31.519><c> say</c><00:14:31.839><c> a</c>

00:14:32.069 --> 00:14:32.079 align:start position:0%
case if we were popping let's say a
 

00:14:32.079 --> 00:14:34.550 align:start position:0%
case if we were popping let's say a
middle<00:14:32.480><c> value</c><00:14:32.959><c> as</c><00:14:33.199><c> the</c><00:14:33.360><c> last</c><00:14:33.760><c> value</c><00:14:34.240><c> where</c><00:14:34.399><c> we</c>

00:14:34.550 --> 00:14:34.560 align:start position:0%
middle value as the last value where we
 

00:14:34.560 --> 00:14:36.710 align:start position:0%
middle value as the last value where we
actually<00:14:34.880><c> do</c><00:14:35.120><c> have</c><00:14:35.360><c> both</c><00:14:35.760><c> a</c><00:14:36.000><c> left</c><00:14:36.240><c> sub</c><00:14:36.480><c> array</c>

00:14:36.710 --> 00:14:36.720 align:start position:0%
actually do have both a left sub array
 

00:14:36.720 --> 00:14:37.910 align:start position:0%
actually do have both a left sub array
and<00:14:36.880><c> a</c><00:14:37.040><c> right</c><00:14:37.199><c> sub</c><00:14:37.440><c> array</c><00:14:37.600><c> what's</c><00:14:37.760><c> the</c>

00:14:37.910 --> 00:14:37.920 align:start position:0%
and a right sub array what's the
 

00:14:37.920 --> 00:14:39.590 align:start position:0%
and a right sub array what's the
equation<00:14:38.240><c> going</c><00:14:38.399><c> to</c><00:14:38.480><c> look</c><00:14:38.639><c> like</c><00:14:38.880><c> then</c>

00:14:39.590 --> 00:14:39.600 align:start position:0%
equation going to look like then
 

00:14:39.600 --> 00:14:41.269 align:start position:0%
equation going to look like then
so<00:14:39.760><c> we</c><00:14:39.920><c> were</c><00:14:40.000><c> looking</c><00:14:40.240><c> at</c><00:14:40.399><c> if</c><00:14:40.480><c> we</c><00:14:40.639><c> popped</c><00:14:41.040><c> this</c>

00:14:41.269 --> 00:14:41.279 align:start position:0%
so we were looking at if we popped this
 

00:14:41.279 --> 00:14:42.870 align:start position:0%
so we were looking at if we popped this
value<00:14:41.680><c> last</c><00:14:42.079><c> next</c><00:14:42.320><c> we're</c><00:14:42.480><c> going</c><00:14:42.560><c> to</c><00:14:42.639><c> look</c><00:14:42.720><c> at</c>

00:14:42.870 --> 00:14:42.880 align:start position:0%
value last next we're going to look at
 

00:14:42.880 --> 00:14:43.990 align:start position:0%
value last next we're going to look at
if<00:14:42.959><c> we</c><00:14:43.120><c> pop</c><00:14:43.360><c> this</c><00:14:43.600><c> value</c>

00:14:43.990 --> 00:14:44.000 align:start position:0%
if we pop this value
 

00:14:44.000 --> 00:14:45.509 align:start position:0%
if we pop this value
last<00:14:44.399><c> we're</c><00:14:44.560><c> also</c><00:14:44.800><c> then</c><00:14:45.040><c> going</c><00:14:45.120><c> to</c><00:14:45.199><c> look</c><00:14:45.360><c> at</c>

00:14:45.509 --> 00:14:45.519 align:start position:0%
last we're also then going to look at
 

00:14:45.519 --> 00:14:47.590 align:start position:0%
last we're also then going to look at
this<00:14:46.000><c> and</c><00:14:46.240><c> this</c><00:14:46.560><c> right</c><00:14:46.720><c> that's</c><00:14:46.959><c> basically</c><00:14:47.440><c> the</c>

00:14:47.590 --> 00:14:47.600 align:start position:0%
this and this right that's basically the
 

00:14:47.600 --> 00:14:49.030 align:start position:0%
this and this right that's basically the
brute<00:14:47.920><c> force</c><00:14:48.160><c> right</c><00:14:48.320><c> so</c><00:14:48.480><c> basically</c><00:14:48.880><c> we're</c>

00:14:49.030 --> 00:14:49.040 align:start position:0%
brute force right so basically we're
 

00:14:49.040 --> 00:14:50.310 align:start position:0%
brute force right so basically we're
going<00:14:49.120><c> to</c><00:14:49.199><c> have</c><00:14:49.360><c> an</c><00:14:49.519><c> i</c><00:14:49.760><c> right</c><00:14:50.000><c> it's</c><00:14:50.160><c> going</c><00:14:50.240><c> to</c>

00:14:50.310 --> 00:14:50.320 align:start position:0%
going to have an i right it's going to
 

00:14:50.320 --> 00:14:51.030 align:start position:0%
going to have an i right it's going to
start<00:14:50.560><c> here</c>

00:14:51.030 --> 00:14:51.040 align:start position:0%
start here
 

00:14:51.040 --> 00:14:52.310 align:start position:0%
start here
it's<00:14:51.279><c> going</c><00:14:51.360><c> to</c><00:14:51.440><c> run</c><00:14:51.680><c> all</c><00:14:51.839><c> the</c><00:14:52.000><c> way</c><00:14:52.160><c> through</c>

00:14:52.310 --> 00:14:52.320 align:start position:0%
it's going to run all the way through
 

00:14:52.320 --> 00:14:54.790 align:start position:0%
it's going to run all the way through
the<00:14:52.560><c> end</c><00:14:52.720><c> of</c><00:14:52.800><c> the</c><00:14:52.959><c> input</c><00:14:53.279><c> array</c><00:14:53.920><c> but</c><00:14:54.079><c> now</c><00:14:54.399><c> if</c><00:14:54.560><c> we</c>

00:14:54.790 --> 00:14:54.800 align:start position:0%
the end of the input array but now if we
 

00:14:54.800 --> 00:14:55.189 align:start position:0%
the end of the input array but now if we
pop

00:14:55.189 --> 00:14:55.199 align:start position:0%
pop
 

00:14:55.199 --> 00:14:57.670 align:start position:0%
pop
this<00:14:55.600><c> last</c><00:14:56.000><c> we</c><00:14:56.240><c> know</c><00:14:56.720><c> that</c><00:14:56.959><c> if</c><00:14:56.959><c> if</c><00:14:57.279><c> this</c><00:14:57.519><c> was</c>

00:14:57.670 --> 00:14:57.680 align:start position:0%
this last we know that if if this was
 

00:14:57.680 --> 00:14:59.350 align:start position:0%
this last we know that if if this was
popped<00:14:58.000><c> last</c><00:14:58.240><c> we'd</c><00:14:58.480><c> end</c><00:14:58.639><c> up</c><00:14:58.720><c> popping</c><00:14:59.120><c> all</c><00:14:59.199><c> of</c>

00:14:59.350 --> 00:14:59.360 align:start position:0%
popped last we'd end up popping all of
 

00:14:59.360 --> 00:15:01.189 align:start position:0%
popped last we'd end up popping all of
this<00:14:59.600><c> first</c><00:15:00.000><c> and</c><00:15:00.079><c> we'd</c><00:15:00.320><c> pop</c><00:15:00.639><c> this</c><00:15:00.880><c> first</c><00:15:01.040><c> so</c>

00:15:01.189 --> 00:15:01.199 align:start position:0%
this first and we'd pop this first so
 

00:15:01.199 --> 00:15:03.030 align:start position:0%
this first and we'd pop this first so
then<00:15:01.360><c> once</c><00:15:01.600><c> we</c><00:15:01.760><c> popped</c><00:15:02.079><c> this</c><00:15:02.320><c> its</c><00:15:02.560><c> left</c><00:15:02.880><c> would</c>

00:15:03.030 --> 00:15:03.040 align:start position:0%
then once we popped this its left would
 

00:15:03.040 --> 00:15:03.750 align:start position:0%
then once we popped this its left would
be<00:15:03.199><c> the</c><00:15:03.360><c> one</c>

00:15:03.750 --> 00:15:03.760 align:start position:0%
be the one
 

00:15:03.760 --> 00:15:05.030 align:start position:0%
be the one
its<00:15:04.000><c> right</c><00:15:04.160><c> would</c><00:15:04.320><c> be</c><00:15:04.480><c> the</c><00:15:04.560><c> one</c><00:15:04.720><c> right</c><00:15:04.880><c> so</c>

00:15:05.030 --> 00:15:05.040 align:start position:0%
its right would be the one right so
 

00:15:05.040 --> 00:15:06.949 align:start position:0%
its right would be the one right so
that's<00:15:05.279><c> where</c><00:15:05.360><c> we're</c><00:15:05.519><c> getting</c><00:15:06.240><c> this</c><00:15:06.639><c> from</c>

00:15:06.949 --> 00:15:06.959 align:start position:0%
that's where we're getting this from
 

00:15:06.959 --> 00:15:07.590 align:start position:0%
that's where we're getting this from
right

00:15:07.590 --> 00:15:07.600 align:start position:0%
right
 

00:15:07.600 --> 00:15:10.550 align:start position:0%
right
r<00:15:07.839><c> plus</c><00:15:08.079><c> one's</c><00:15:08.399><c> here</c><00:15:09.040><c> left</c><00:15:09.440><c> minus</c><00:15:09.839><c> one</c><00:15:10.160><c> is</c><00:15:10.320><c> over</c>

00:15:10.550 --> 00:15:10.560 align:start position:0%
r plus one's here left minus one is over
 

00:15:10.560 --> 00:15:11.269 align:start position:0%
r plus one's here left minus one is over
here

00:15:11.269 --> 00:15:11.279 align:start position:0%
here
 

00:15:11.279 --> 00:15:13.829 align:start position:0%
here
multiplied<00:15:11.920><c> by</c><00:15:12.079><c> the</c><00:15:12.240><c> value</c><00:15:12.720><c> at</c><00:15:12.959><c> index</c><00:15:13.440><c> i</c><00:15:13.600><c> which</c>

00:15:13.829 --> 00:15:13.839 align:start position:0%
multiplied by the value at index i which
 

00:15:13.839 --> 00:15:15.110 align:start position:0%
multiplied by the value at index i which
is<00:15:14.079><c> one</c><00:15:14.399><c> right</c>

00:15:15.110 --> 00:15:15.120 align:start position:0%
is one right
 

00:15:15.120 --> 00:15:17.110 align:start position:0%
is one right
but<00:15:15.360><c> then</c><00:15:15.680><c> what's</c><00:15:16.000><c> our</c><00:15:16.320><c> right</c><00:15:16.639><c> sub</c><00:15:16.880><c> array</c>

00:15:17.110 --> 00:15:17.120 align:start position:0%
but then what's our right sub array
 

00:15:17.120 --> 00:15:18.790 align:start position:0%
but then what's our right sub array
going<00:15:17.360><c> to</c><00:15:17.519><c> be</c><00:15:17.760><c> clearly</c><00:15:18.160><c> this</c><00:15:18.320><c> is</c><00:15:18.480><c> what</c><00:15:18.639><c> the</c>

00:15:18.790 --> 00:15:18.800 align:start position:0%
going to be clearly this is what the
 

00:15:18.800 --> 00:15:20.710 align:start position:0%
going to be clearly this is what the
right<00:15:19.040><c> sub</c><00:15:19.279><c> array</c><00:15:19.519><c> remaining</c><00:15:20.000><c> sub</c><00:15:20.160><c> array</c><00:15:20.560><c> is</c>

00:15:20.710 --> 00:15:20.720 align:start position:0%
right sub array remaining sub array is
 

00:15:20.720 --> 00:15:22.629 align:start position:0%
right sub array remaining sub array is
right<00:15:20.959><c> how</c><00:15:21.440><c> much</c><00:15:21.600><c> could</c><00:15:21.760><c> we</c><00:15:21.920><c> get</c><00:15:22.160><c> from</c>

00:15:22.629 --> 00:15:22.639 align:start position:0%
right how much could we get from
 

00:15:22.639 --> 00:15:25.670 align:start position:0%
right how much could we get from
doing<00:15:22.959><c> that</c><00:15:23.680><c> well</c><00:15:24.000><c> again</c><00:15:24.399><c> in</c><00:15:24.560><c> our</c><00:15:24.720><c> dp</c><00:15:25.279><c> or</c><00:15:25.440><c> if</c>

00:15:25.670 --> 00:15:25.680 align:start position:0%
doing that well again in our dp or if
 

00:15:25.680 --> 00:15:27.430 align:start position:0%
doing that well again in our dp or if
it's<00:15:25.839><c> not</c><00:15:26.079><c> already</c><00:15:26.399><c> computed</c><00:15:26.880><c> in</c><00:15:26.959><c> our</c><00:15:27.040><c> dp</c>

00:15:27.430 --> 00:15:27.440 align:start position:0%
it's not already computed in our dp
 

00:15:27.440 --> 00:15:29.030 align:start position:0%
it's not already computed in our dp
we're<00:15:27.600><c> basically</c><00:15:28.000><c> going</c><00:15:28.079><c> to</c><00:15:28.160><c> call</c><00:15:28.399><c> our</c><00:15:28.560><c> depth</c>

00:15:29.030 --> 00:15:29.040 align:start position:0%
we're basically going to call our depth
 

00:15:29.040 --> 00:15:31.030 align:start position:0%
we're basically going to call our depth
search<00:15:29.600><c> clearly</c><00:15:29.920><c> you</c><00:15:30.079><c> can</c><00:15:30.160><c> see</c><00:15:30.320><c> that</c><00:15:30.560><c> the</c><00:15:30.800><c> left</c>

00:15:31.030 --> 00:15:31.040 align:start position:0%
search clearly you can see that the left
 

00:15:31.040 --> 00:15:32.069 align:start position:0%
search clearly you can see that the left
boundary<00:15:31.440><c> now</c><00:15:31.680><c> is</c><00:15:31.839><c> i</c>

00:15:32.069 --> 00:15:32.079 align:start position:0%
boundary now is i
 

00:15:32.079 --> 00:15:33.509 align:start position:0%
boundary now is i
plus<00:15:32.320><c> one</c><00:15:32.560><c> right</c><00:15:32.800><c> basically</c><00:15:33.120><c> we're</c><00:15:33.279><c> taking</c>

00:15:33.509 --> 00:15:33.519 align:start position:0%
plus one right basically we're taking
 

00:15:33.519 --> 00:15:35.670 align:start position:0%
plus one right basically we're taking
this<00:15:33.839><c> i</c><00:15:34.320><c> moving</c><00:15:34.639><c> it</c><00:15:34.720><c> over</c><00:15:34.959><c> here</c><00:15:35.199><c> our</c><00:15:35.440><c> right</c>

00:15:35.670 --> 00:15:35.680 align:start position:0%
this i moving it over here our right
 

00:15:35.680 --> 00:15:36.870 align:start position:0%
this i moving it over here our right
boundary<00:15:36.240><c> remains</c>

00:15:36.870 --> 00:15:36.880 align:start position:0%
boundary remains
 

00:15:36.880 --> 00:15:38.949 align:start position:0%
boundary remains
unchanged<00:15:37.519><c> right</c><00:15:37.759><c> this</c><00:15:38.160><c> is</c><00:15:38.320><c> the</c><00:15:38.560><c> sub</c><00:15:38.720><c> array</c>

00:15:38.949 --> 00:15:38.959 align:start position:0%
unchanged right this is the sub array
 

00:15:38.959 --> 00:15:40.310 align:start position:0%
unchanged right this is the sub array
that's<00:15:39.120><c> what</c><00:15:39.279><c> i'm</c><00:15:39.440><c> saying</c><00:15:39.680><c> here</c>

00:15:40.310 --> 00:15:40.320 align:start position:0%
that's what i'm saying here
 

00:15:40.320 --> 00:15:42.310 align:start position:0%
that's what i'm saying here
what<00:15:40.480><c> about</c><00:15:40.800><c> our</c><00:15:41.120><c> left</c><00:15:41.440><c> sub</c><00:15:41.680><c> array</c><00:15:41.920><c> over</c><00:15:42.160><c> here</c>

00:15:42.310 --> 00:15:42.320 align:start position:0%
what about our left sub array over here
 

00:15:42.320 --> 00:15:44.310 align:start position:0%
what about our left sub array over here
well<00:15:42.560><c> the</c><00:15:42.720><c> left</c><00:15:42.959><c> boundary</c><00:15:43.360><c> didn't</c><00:15:43.839><c> change</c>

00:15:44.310 --> 00:15:44.320 align:start position:0%
well the left boundary didn't change
 

00:15:44.320 --> 00:15:45.990 align:start position:0%
well the left boundary didn't change
but<00:15:44.480><c> the</c><00:15:44.639><c> right</c><00:15:44.880><c> boundary</c><00:15:45.199><c> was</c><00:15:45.360><c> decremented</c>

00:15:45.990 --> 00:15:46.000 align:start position:0%
but the right boundary was decremented
 

00:15:46.000 --> 00:15:48.069 align:start position:0%
but the right boundary was decremented
by<00:15:46.240><c> one</c><00:15:46.639><c> that</c><00:15:46.800><c> makes</c><00:15:47.040><c> sense</c><00:15:47.440><c> right</c>

00:15:48.069 --> 00:15:48.079 align:start position:0%
by one that makes sense right
 

00:15:48.079 --> 00:15:50.069 align:start position:0%
by one that makes sense right
so<00:15:48.240><c> that's</c><00:15:48.560><c> basically</c><00:15:49.040><c> the</c><00:15:49.279><c> idea</c><00:15:49.600><c> now</c><00:15:49.839><c> my</c>

00:15:50.069 --> 00:15:50.079 align:start position:0%
so that's basically the idea now my
 

00:15:50.079 --> 00:15:52.069 align:start position:0%
so that's basically the idea now my
question<00:15:50.480><c> is</c><00:15:50.800><c> we</c><00:15:50.959><c> know</c><00:15:51.199><c> why</c><00:15:51.440><c> the</c><00:15:51.759><c> memory</c>

00:15:52.069 --> 00:15:52.079 align:start position:0%
question is we know why the memory
 

00:15:52.079 --> 00:15:53.749 align:start position:0%
question is we know why the memory
complexity<00:15:52.639><c> is</c><00:15:52.720><c> big</c><00:15:52.880><c> o</c><00:15:53.040><c> of</c><00:15:53.199><c> n</c><00:15:53.360><c> squared</c><00:15:53.600><c> right</c>

00:15:53.749 --> 00:15:53.759 align:start position:0%
complexity is big o of n squared right
 

00:15:53.759 --> 00:15:53.990 align:start position:0%
complexity is big o of n squared right
the

00:15:53.990 --> 00:15:54.000 align:start position:0%
the
 

00:15:54.000 --> 00:15:55.590 align:start position:0%
the
cache<00:15:54.320><c> is</c><00:15:54.560><c> basically</c><00:15:55.040><c> going</c><00:15:55.120><c> to</c><00:15:55.199><c> be</c><00:15:55.360><c> from</c>

00:15:55.590 --> 00:15:55.600 align:start position:0%
cache is basically going to be from
 

00:15:55.600 --> 00:15:57.110 align:start position:0%
cache is basically going to be from
every<00:15:55.759><c> single</c><00:15:56.079><c> subarray</c><00:15:56.639><c> right</c>

00:15:57.110 --> 00:15:57.120 align:start position:0%
every single subarray right
 

00:15:57.120 --> 00:15:59.430 align:start position:0%
every single subarray right
and<00:15:57.279><c> it's</c><00:15:57.440><c> two</c><00:15:57.680><c> dimensional</c><00:15:58.320><c> so</c><00:15:58.959><c> that</c><00:15:59.199><c> makes</c>

00:15:59.430 --> 00:15:59.440 align:start position:0%
and it's two dimensional so that makes
 

00:15:59.440 --> 00:16:00.470 align:start position:0%
and it's two dimensional so that makes
sense<00:15:59.680><c> i</c><00:15:59.759><c> think</c><00:15:59.920><c> why</c><00:16:00.079><c> it's</c>

00:16:00.470 --> 00:16:00.480 align:start position:0%
sense i think why it's
 

00:16:00.480 --> 00:16:02.710 align:start position:0%
sense i think why it's
the<00:16:00.880><c> memory</c><00:16:01.199><c> is</c><00:16:01.440><c> n</c><00:16:01.519><c> squared</c><00:16:01.839><c> but</c><00:16:02.000><c> why</c><00:16:02.320><c> is</c><00:16:02.480><c> the</c>

00:16:02.710 --> 00:16:02.720 align:start position:0%
the memory is n squared but why is the
 

00:16:02.720 --> 00:16:04.230 align:start position:0%
the memory is n squared but why is the
time<00:16:02.959><c> complexity</c><00:16:03.600><c> big</c><00:16:03.920><c> o</c>

00:16:04.230 --> 00:16:04.240 align:start position:0%
time complexity big o
 

00:16:04.240 --> 00:16:06.710 align:start position:0%
time complexity big o
n<00:16:04.639><c> cubed</c><00:16:05.440><c> well</c><00:16:05.680><c> we</c><00:16:05.920><c> know</c><00:16:06.160><c> we're</c><00:16:06.320><c> going</c><00:16:06.399><c> to</c><00:16:06.480><c> be</c>

00:16:06.710 --> 00:16:06.720 align:start position:0%
n cubed well we know we're going to be
 

00:16:06.720 --> 00:16:07.990 align:start position:0%
n cubed well we know we're going to be
breaking<00:16:07.199><c> this</c><00:16:07.440><c> problem</c><00:16:07.680><c> down</c>

00:16:07.990 --> 00:16:08.000 align:start position:0%
breaking this problem down
 

00:16:08.000 --> 00:16:09.990 align:start position:0%
breaking this problem down
into<00:16:08.320><c> sub</c><00:16:08.639><c> problems</c><00:16:09.040><c> of</c><00:16:09.279><c> every</c><00:16:09.600><c> single</c>

00:16:09.990 --> 00:16:10.000 align:start position:0%
into sub problems of every single
 

00:16:10.000 --> 00:16:11.670 align:start position:0%
into sub problems of every single
subarray<00:16:10.560><c> we</c><00:16:10.720><c> know</c><00:16:10.959><c> that</c><00:16:11.279><c> there's</c>

00:16:11.670 --> 00:16:11.680 align:start position:0%
subarray we know that there's
 

00:16:11.680 --> 00:16:14.870 align:start position:0%
subarray we know that there's
n<00:16:12.000><c> squared</c><00:16:12.800><c> number</c><00:16:13.199><c> of</c><00:16:13.519><c> sub</c><00:16:13.759><c> arrays</c><00:16:14.160><c> right</c><00:16:14.480><c> so</c>

00:16:14.870 --> 00:16:14.880 align:start position:0%
n squared number of sub arrays right so
 

00:16:14.880 --> 00:16:16.949 align:start position:0%
n squared number of sub arrays right so
for<00:16:15.120><c> once</c><00:16:15.360><c> we</c><00:16:15.600><c> have</c><00:16:15.920><c> a</c><00:16:16.079><c> sub</c><00:16:16.240><c> array</c><00:16:16.560><c> right</c><00:16:16.720><c> like</c>

00:16:16.949 --> 00:16:16.959 align:start position:0%
for once we have a sub array right like
 

00:16:16.959 --> 00:16:18.790 align:start position:0%
for once we have a sub array right like
let's<00:16:17.199><c> consider</c><00:16:17.600><c> the</c><00:16:17.759><c> entire</c><00:16:18.160><c> input</c><00:16:18.399><c> array</c>

00:16:18.790 --> 00:16:18.800 align:start position:0%
let's consider the entire input array
 

00:16:18.800 --> 00:16:20.470 align:start position:0%
let's consider the entire input array
was<00:16:19.120><c> a</c><00:16:19.360><c> sub</c><00:16:19.600><c> array</c><00:16:19.920><c> right</c>

00:16:20.470 --> 00:16:20.480 align:start position:0%
was a sub array right
 

00:16:20.480 --> 00:16:21.910 align:start position:0%
was a sub array right
we<00:16:20.639><c> know</c><00:16:20.800><c> that</c><00:16:20.959><c> for</c><00:16:21.120><c> every</c><00:16:21.360><c> subway</c><00:16:21.759><c> we're</c>

00:16:21.910 --> 00:16:21.920 align:start position:0%
we know that for every subway we're
 

00:16:21.920 --> 00:16:23.430 align:start position:0%
we know that for every subway we're
basically<00:16:22.320><c> going</c><00:16:22.399><c> to</c><00:16:22.480><c> be</c><00:16:22.720><c> iterating</c><00:16:23.199><c> through</c>

00:16:23.430 --> 00:16:23.440 align:start position:0%
basically going to be iterating through
 

00:16:23.440 --> 00:16:24.949 align:start position:0%
basically going to be iterating through
every<00:16:23.600><c> value</c><00:16:23.920><c> right</c><00:16:24.079><c> this</c><00:16:24.240><c> is</c><00:16:24.399><c> the</c><00:16:24.480><c> first</c><00:16:24.800><c> this</c>

00:16:24.949 --> 00:16:24.959 align:start position:0%
every value right this is the first this
 

00:16:24.959 --> 00:16:26.310 align:start position:0%
every value right this is the first this
is<00:16:25.040><c> the</c><00:16:25.199><c> second</c><00:16:25.519><c> this</c><00:16:25.600><c> is</c><00:16:25.680><c> the</c>

00:16:26.310 --> 00:16:26.320 align:start position:0%
is the second this is the
 

00:16:26.320 --> 00:16:27.590 align:start position:0%
is the second this is the
and<00:16:26.480><c> so</c><00:16:26.720><c> on</c><00:16:26.880><c> and</c><00:16:26.959><c> so</c><00:16:27.120><c> on</c><00:16:27.279><c> right</c><00:16:27.440><c> and</c>

00:16:27.590 --> 00:16:27.600 align:start position:0%
and so on and so on right and
 

00:16:27.600 --> 00:16:29.509 align:start position:0%
and so on and so on right and
considering<00:16:28.079><c> if</c><00:16:28.240><c> this</c><00:16:28.480><c> was</c><00:16:28.639><c> the</c><00:16:28.800><c> last</c><00:16:29.120><c> value</c>

00:16:29.509 --> 00:16:29.519 align:start position:0%
considering if this was the last value
 

00:16:29.519 --> 00:16:30.389 align:start position:0%
considering if this was the last value
popped<00:16:29.920><c> so</c>

00:16:30.389 --> 00:16:30.399 align:start position:0%
popped so
 

00:16:30.399 --> 00:16:32.470 align:start position:0%
popped so
it's<00:16:30.639><c> basically</c><00:16:31.199><c> taking</c><00:16:31.680><c> the</c><00:16:31.920><c> total</c><00:16:32.240><c> number</c>

00:16:32.470 --> 00:16:32.480 align:start position:0%
it's basically taking the total number
 

00:16:32.480 --> 00:16:34.790 align:start position:0%
it's basically taking the total number
of<00:16:32.720><c> sub</c><00:16:32.959><c> arrays</c><00:16:33.279><c> which</c><00:16:33.440><c> we</c><00:16:33.519><c> know</c><00:16:33.759><c> is</c><00:16:33.920><c> n</c><00:16:34.160><c> squared</c>

00:16:34.790 --> 00:16:34.800 align:start position:0%
of sub arrays which we know is n squared
 

00:16:34.800 --> 00:16:36.949 align:start position:0%
of sub arrays which we know is n squared
and<00:16:34.959><c> multiplying</c><00:16:35.519><c> it</c><00:16:35.600><c> by</c><00:16:35.839><c> another</c><00:16:36.399><c> n</c><00:16:36.720><c> because</c>

00:16:36.949 --> 00:16:36.959 align:start position:0%
and multiplying it by another n because
 

00:16:36.959 --> 00:16:38.310 align:start position:0%
and multiplying it by another n because
we're<00:16:37.120><c> having</c><00:16:37.279><c> to</c><00:16:37.360><c> iterate</c><00:16:37.839><c> through</c><00:16:38.079><c> every</c>

00:16:38.310 --> 00:16:38.320 align:start position:0%
we're having to iterate through every
 

00:16:38.320 --> 00:16:38.790 align:start position:0%
we're having to iterate through every
single

00:16:38.790 --> 00:16:38.800 align:start position:0%
single
 

00:16:38.800 --> 00:16:41.670 align:start position:0%
single
value<00:16:39.360><c> for</c><00:16:39.680><c> a</c><00:16:39.920><c> given</c><00:16:40.320><c> subarray</c><00:16:41.199><c> with</c><00:16:41.440><c> that</c>

00:16:41.670 --> 00:16:41.680 align:start position:0%
value for a given subarray with that
 

00:16:41.680 --> 00:16:43.670 align:start position:0%
value for a given subarray with that
being<00:16:41.920><c> said</c><00:16:42.240><c> let's</c><00:16:42.480><c> jump</c><00:16:42.720><c> into</c><00:16:42.880><c> the</c><00:16:43.040><c> code</c><00:16:43.360><c> once</c>

00:16:43.670 --> 00:16:43.680 align:start position:0%
being said let's jump into the code once
 

00:16:43.680 --> 00:16:45.350 align:start position:0%
being said let's jump into the code once
you<00:16:43.839><c> actually</c><00:16:44.240><c> know</c><00:16:44.480><c> these</c><00:16:44.800><c> tricks</c><00:16:45.199><c> and</c>

00:16:45.350 --> 00:16:45.360 align:start position:0%
you actually know these tricks and
 

00:16:45.360 --> 00:16:46.710 align:start position:0%
you actually know these tricks and
especially<00:16:45.920><c> once</c><00:16:46.160><c> you</c><00:16:46.320><c> know</c>

00:16:46.710 --> 00:16:46.720 align:start position:0%
especially once you know
 

00:16:46.720 --> 00:16:49.829 align:start position:0%
especially once you know
this<00:16:47.120><c> formula</c><00:16:48.079><c> the</c><00:16:48.320><c> algorithm</c><00:16:49.120><c> is</c><00:16:49.360><c> actually</c>

00:16:49.829 --> 00:16:49.839 align:start position:0%
this formula the algorithm is actually
 

00:16:49.839 --> 00:16:51.030 align:start position:0%
this formula the algorithm is actually
pretty<00:16:50.160><c> easy</c><00:16:50.560><c> with</c>

00:16:51.030 --> 00:16:51.040 align:start position:0%
pretty easy with
 

00:16:51.040 --> 00:16:53.590 align:start position:0%
pretty easy with
recursion<00:16:52.160><c> so</c><00:16:52.399><c> like</c><00:16:52.639><c> i</c><00:16:52.800><c> mentioned</c><00:16:53.199><c> we</c><00:16:53.440><c> are</c>

00:16:53.590 --> 00:16:53.600 align:start position:0%
recursion so like i mentioned we are
 

00:16:53.600 --> 00:16:54.150 align:start position:0%
recursion so like i mentioned we are
going<00:16:53.759><c> to</c><00:16:53.839><c> be</c>

00:16:54.150 --> 00:16:54.160 align:start position:0%
going to be
 

00:16:54.160 --> 00:16:55.829 align:start position:0%
going to be
updating<00:16:54.560><c> the</c><00:16:54.800><c> input</c><00:16:55.040><c> array</c><00:16:55.279><c> we're</c><00:16:55.440><c> basically</c>

00:16:55.829 --> 00:16:55.839 align:start position:0%
updating the input array we're basically
 

00:16:55.839 --> 00:16:58.150 align:start position:0%
updating the input array we're basically
going<00:16:55.920><c> to</c><00:16:56.000><c> be</c><00:16:56.160><c> adding</c><00:16:56.639><c> a</c><00:16:56.959><c> 1</c><00:16:57.279><c> at</c><00:16:57.360><c> the</c><00:16:57.519><c> beginning</c>

00:16:58.150 --> 00:16:58.160 align:start position:0%
going to be adding a 1 at the beginning
 

00:16:58.160 --> 00:17:01.030 align:start position:0%
going to be adding a 1 at the beginning
and<00:16:58.399><c> then</c><00:16:58.720><c> adding</c><00:16:59.199><c> a</c><00:16:59.519><c> 1</c><00:16:59.920><c> at</c><00:17:00.000><c> the</c><00:17:00.320><c> end</c><00:17:00.800><c> we're</c>

00:17:01.030 --> 00:17:01.040 align:start position:0%
and then adding a 1 at the end we're
 

00:17:01.040 --> 00:17:02.389 align:start position:0%
and then adding a 1 at the end we're
also<00:17:01.279><c> going</c><00:17:01.440><c> to</c><00:17:01.519><c> be</c><00:17:01.680><c> having</c>

00:17:02.389 --> 00:17:02.399 align:start position:0%
also going to be having
 

00:17:02.399 --> 00:17:04.390 align:start position:0%
also going to be having
a<00:17:02.639><c> cache</c><00:17:03.040><c> i'm</c><00:17:03.199><c> going</c><00:17:03.279><c> to</c><00:17:03.360><c> call</c><00:17:03.519><c> it</c><00:17:03.680><c> dp</c><00:17:04.160><c> because</c>

00:17:04.390 --> 00:17:04.400 align:start position:0%
a cache i'm going to call it dp because
 

00:17:04.400 --> 00:17:06.949 align:start position:0%
a cache i'm going to call it dp because
it's<00:17:04.559><c> short</c><00:17:05.280><c> and</c><00:17:05.600><c> then</c><00:17:06.000><c> we</c><00:17:06.160><c> can</c><00:17:06.400><c> start</c><00:17:06.799><c> with</c>

00:17:06.949 --> 00:17:06.959 align:start position:0%
it's short and then we can start with
 

00:17:06.959 --> 00:17:07.270 align:start position:0%
it's short and then we can start with
our

00:17:07.270 --> 00:17:07.280 align:start position:0%
our
 

00:17:07.280 --> 00:17:08.870 align:start position:0%
our
depth<00:17:07.520><c> first</c><00:17:07.760><c> search</c><00:17:08.160><c> function</c><00:17:08.480><c> so</c><00:17:08.640><c> let's</c>

00:17:08.870 --> 00:17:08.880 align:start position:0%
depth first search function so let's
 

00:17:08.880 --> 00:17:10.309 align:start position:0%
depth first search function so let's
define<00:17:09.280><c> it</c><00:17:09.439><c> we</c><00:17:09.600><c> know</c><00:17:09.760><c> that</c><00:17:09.919><c> we're</c><00:17:10.079><c> just</c><00:17:10.240><c> going</c>

00:17:10.309 --> 00:17:10.319 align:start position:0%
define it we know that we're just going
 

00:17:10.319 --> 00:17:11.029 align:start position:0%
define it we know that we're just going
to<00:17:10.400><c> have</c><00:17:10.640><c> left</c>

00:17:11.029 --> 00:17:11.039 align:start position:0%
to have left
 

00:17:11.039 --> 00:17:13.429 align:start position:0%
to have left
and<00:17:11.199><c> right</c><00:17:11.439><c> boundaries</c><00:17:11.919><c> right</c><00:17:12.160><c> so</c><00:17:12.400><c> basically</c>

00:17:13.429 --> 00:17:13.439 align:start position:0%
and right boundaries right so basically
 

00:17:13.439 --> 00:17:15.189 align:start position:0%
and right boundaries right so basically
left<00:17:13.679><c> and</c><00:17:13.760><c> right</c><00:17:14.000><c> are</c><00:17:14.079><c> going</c><00:17:14.160><c> to</c><00:17:14.240><c> be</c><00:17:14.480><c> indices</c>

00:17:15.189 --> 00:17:15.199 align:start position:0%
left and right are going to be indices
 

00:17:15.199 --> 00:17:17.990 align:start position:0%
left and right are going to be indices
of<00:17:15.360><c> the</c><00:17:15.600><c> input</c><00:17:16.000><c> array</c><00:17:16.640><c> but</c><00:17:17.280><c> let's</c><00:17:17.600><c> call</c><00:17:17.839><c> that</c>

00:17:17.990 --> 00:17:18.000 align:start position:0%
of the input array but let's call that
 

00:17:18.000 --> 00:17:19.189 align:start position:0%
of the input array but let's call that
depth<00:17:18.240><c> first</c><00:17:18.400><c> search</c><00:17:18.640><c> function</c><00:17:18.959><c> we</c><00:17:19.039><c> know</c>

00:17:19.189 --> 00:17:19.199 align:start position:0%
depth first search function we know
 

00:17:19.199 --> 00:17:20.949 align:start position:0%
depth first search function we know
we're<00:17:19.520><c> just</c><00:17:19.679><c> going</c><00:17:19.760><c> to</c><00:17:19.839><c> be</c><00:17:20.000><c> end</c><00:17:20.160><c> up</c><00:17:20.319><c> calling</c><00:17:20.720><c> it</c>

00:17:20.949 --> 00:17:20.959 align:start position:0%
we're just going to be end up calling it
 

00:17:20.959 --> 00:17:22.309 align:start position:0%
we're just going to be end up calling it
and<00:17:21.039><c> then</c><00:17:21.199><c> returning</c><00:17:21.600><c> the</c><00:17:21.679><c> results</c><00:17:22.000><c> so</c><00:17:22.160><c> let's</c>

00:17:22.309 --> 00:17:22.319 align:start position:0%
and then returning the results so let's
 

00:17:22.319 --> 00:17:23.829 align:start position:0%
and then returning the results so let's
do<00:17:22.480><c> that</c><00:17:22.559><c> before</c><00:17:22.880><c> we</c><00:17:23.039><c> actually</c><00:17:23.280><c> define</c><00:17:23.679><c> the</c>

00:17:23.829 --> 00:17:23.839 align:start position:0%
do that before we actually define the
 

00:17:23.839 --> 00:17:24.309 align:start position:0%
do that before we actually define the
function

00:17:24.309 --> 00:17:24.319 align:start position:0%
function
 

00:17:24.319 --> 00:17:26.150 align:start position:0%
function
now<00:17:24.559><c> what</c><00:17:24.799><c> am</c><00:17:24.959><c> i</c><00:17:25.039><c> going</c><00:17:25.120><c> to</c><00:17:25.280><c> pass</c><00:17:25.520><c> in</c><00:17:25.679><c> as</c><00:17:25.839><c> a</c><00:17:25.919><c> left</c>

00:17:26.150 --> 00:17:26.160 align:start position:0%
now what am i going to pass in as a left
 

00:17:26.160 --> 00:17:27.829 align:start position:0%
now what am i going to pass in as a left
and<00:17:26.240><c> right</c><00:17:26.480><c> boundary</c><00:17:27.039><c> zero</c>

00:17:27.829 --> 00:17:27.839 align:start position:0%
and right boundary zero
 

00:17:27.839 --> 00:17:30.310 align:start position:0%
and right boundary zero
and<00:17:28.400><c> you</c><00:17:28.559><c> know</c><00:17:28.720><c> the</c><00:17:28.799><c> last</c><00:17:29.200><c> index</c><00:17:29.760><c> no</c><00:17:30.080><c> right</c>

00:17:30.310 --> 00:17:30.320 align:start position:0%
and you know the last index no right
 

00:17:30.320 --> 00:17:31.430 align:start position:0%
and you know the last index no right
because<00:17:30.480><c> we</c><00:17:30.640><c> don't</c><00:17:30.799><c> want</c><00:17:30.960><c> to</c><00:17:31.039><c> actually</c>

00:17:31.430 --> 00:17:31.440 align:start position:0%
because we don't want to actually
 

00:17:31.440 --> 00:17:31.990 align:start position:0%
because we don't want to actually
include

00:17:31.990 --> 00:17:32.000 align:start position:0%
include
 

00:17:32.000 --> 00:17:33.669 align:start position:0%
include
this<00:17:32.320><c> one</c><00:17:32.559><c> and</c><00:17:32.640><c> we</c><00:17:32.799><c> don't</c><00:17:32.960><c> want</c><00:17:33.120><c> to</c><00:17:33.280><c> include</c>

00:17:33.669 --> 00:17:33.679 align:start position:0%
this one and we don't want to include
 

00:17:33.679 --> 00:17:35.750 align:start position:0%
this one and we don't want to include
this<00:17:34.000><c> one</c><00:17:34.160><c> so</c><00:17:34.400><c> i'm</c><00:17:34.559><c> going</c><00:17:34.640><c> to</c><00:17:34.720><c> be</c><00:17:34.880><c> passing</c><00:17:35.280><c> in</c>

00:17:35.750 --> 00:17:35.760 align:start position:0%
this one so i'm going to be passing in
 

00:17:35.760 --> 00:17:38.710 align:start position:0%
this one so i'm going to be passing in
zero<00:17:36.320><c> plus</c><00:17:36.720><c> one</c><00:17:37.039><c> which</c><00:17:37.280><c> is</c><00:17:37.440><c> one</c><00:17:38.000><c> and</c><00:17:38.240><c> basically</c>

00:17:38.710 --> 00:17:38.720 align:start position:0%
zero plus one which is one and basically
 

00:17:38.720 --> 00:17:39.510 align:start position:0%
zero plus one which is one and basically
passing<00:17:39.120><c> in</c>

00:17:39.510 --> 00:17:39.520 align:start position:0%
passing in
 

00:17:39.520 --> 00:17:41.830 align:start position:0%
passing in
the<00:17:39.840><c> length</c><00:17:40.400><c> of</c><00:17:40.480><c> the</c><00:17:40.640><c> entire</c><00:17:40.960><c> empire</c><00:17:41.440><c> numbs</c>

00:17:41.830 --> 00:17:41.840 align:start position:0%
the length of the entire empire numbs
 

00:17:41.840 --> 00:17:43.669 align:start position:0%
the length of the entire empire numbs
minus<00:17:42.480><c> two</c><00:17:42.799><c> because</c><00:17:43.039><c> we</c><00:17:43.120><c> know</c>

00:17:43.669 --> 00:17:43.679 align:start position:0%
minus two because we know
 

00:17:43.679 --> 00:17:45.990 align:start position:0%
minus two because we know
this<00:17:44.000><c> minus</c><00:17:44.480><c> one</c><00:17:44.720><c> would</c><00:17:44.880><c> give</c><00:17:45.120><c> us</c><00:17:45.520><c> the</c><00:17:45.679><c> last</c>

00:17:45.990 --> 00:17:46.000 align:start position:0%
this minus one would give us the last
 

00:17:46.000 --> 00:17:47.990 align:start position:0%
this minus one would give us the last
value<00:17:46.400><c> minus</c><00:17:46.799><c> 2</c><00:17:47.120><c> is</c><00:17:47.200><c> going</c><00:17:47.280><c> to</c><00:17:47.440><c> be</c><00:17:47.600><c> 1</c>

00:17:47.990 --> 00:17:48.000 align:start position:0%
value minus 2 is going to be 1
 

00:17:48.000 --> 00:17:50.070 align:start position:0%
value minus 2 is going to be 1
less<00:17:48.240><c> than</c><00:17:48.400><c> that</c><00:17:48.880><c> so</c><00:17:49.280><c> because</c><00:17:49.520><c> remember</c><00:17:49.919><c> we're</c>

00:17:50.070 --> 00:17:50.080 align:start position:0%
less than that so because remember we're
 

00:17:50.080 --> 00:17:51.669 align:start position:0%
less than that so because remember we're
not<00:17:50.320><c> actually</c><00:17:50.720><c> popping</c><00:17:51.200><c> these</c>

00:17:51.669 --> 00:17:51.679 align:start position:0%
not actually popping these
 

00:17:51.679 --> 00:17:54.230 align:start position:0%
not actually popping these
and<00:17:51.919><c> these</c><00:17:52.640><c> okay</c><00:17:53.200><c> so</c><00:17:53.360><c> now</c><00:17:53.600><c> what</c><00:17:53.760><c> are</c><00:17:53.919><c> actually</c>

00:17:54.230 --> 00:17:54.240 align:start position:0%
and these okay so now what are actually
 

00:17:54.240 --> 00:17:56.710 align:start position:0%
and these okay so now what are actually
the<00:17:54.480><c> base</c><00:17:54.880><c> cases</c><00:17:55.200><c> for</c><00:17:55.360><c> this</c><00:17:55.600><c> algorithm</c><00:17:56.160><c> well</c>

00:17:56.710 --> 00:17:56.720 align:start position:0%
the base cases for this algorithm well
 

00:17:56.720 --> 00:17:58.950 align:start position:0%
the base cases for this algorithm well
if<00:17:57.039><c> left</c><00:17:57.520><c> equaled</c><00:17:58.000><c> right</c><00:17:58.160><c> that</c><00:17:58.320><c> means</c><00:17:58.559><c> we</c><00:17:58.799><c> have</c>

00:17:58.950 --> 00:17:58.960 align:start position:0%
if left equaled right that means we have
 

00:17:58.960 --> 00:17:59.750 align:start position:0%
if left equaled right that means we have
only<00:17:59.280><c> one</c>

00:17:59.750 --> 00:17:59.760 align:start position:0%
only one
 

00:17:59.760 --> 00:18:01.590 align:start position:0%
only one
balloon<00:18:00.160><c> left</c><00:18:00.400><c> to</c><00:18:00.559><c> pop</c><00:18:00.799><c> so</c><00:18:00.960><c> that's</c><00:18:01.200><c> actually</c>

00:18:01.590 --> 00:18:01.600 align:start position:0%
balloon left to pop so that's actually
 

00:18:01.600 --> 00:18:02.870 align:start position:0%
balloon left to pop so that's actually
okay<00:18:02.000><c> but</c><00:18:02.160><c> if</c><00:18:02.400><c> left</c>

00:18:02.870 --> 00:18:02.880 align:start position:0%
okay but if left
 

00:18:02.880 --> 00:18:05.110 align:start position:0%
okay but if left
past<00:18:03.360><c> the</c><00:18:03.520><c> right</c><00:18:03.840><c> pointer</c><00:18:04.160><c> so</c><00:18:04.320><c> if</c><00:18:04.480><c> left</c><00:18:04.720><c> became</c>

00:18:05.110 --> 00:18:05.120 align:start position:0%
past the right pointer so if left became
 

00:18:05.120 --> 00:18:06.310 align:start position:0%
past the right pointer so if left became
greater<00:18:05.520><c> than</c><00:18:05.760><c> right</c>

00:18:06.310 --> 00:18:06.320 align:start position:0%
greater than right
 

00:18:06.320 --> 00:18:08.230 align:start position:0%
greater than right
that's<00:18:06.640><c> when</c><00:18:06.799><c> we</c><00:18:06.960><c> know</c><00:18:07.120><c> we've</c><00:18:07.360><c> ran</c><00:18:07.679><c> out</c><00:18:08.080><c> and</c>

00:18:08.230 --> 00:18:08.240 align:start position:0%
that's when we know we've ran out and
 

00:18:08.240 --> 00:18:09.590 align:start position:0%
that's when we know we've ran out and
that's<00:18:08.480><c> when</c><00:18:08.640><c> we</c><00:18:08.799><c> know</c><00:18:08.960><c> we're</c><00:18:09.120><c> gonna</c>

00:18:09.590 --> 00:18:09.600 align:start position:0%
that's when we know we're gonna
 

00:18:09.600 --> 00:18:11.190 align:start position:0%
that's when we know we're gonna
we're<00:18:09.760><c> gonna</c><00:18:09.919><c> return</c><00:18:10.400><c> zero</c><00:18:10.720><c> meaning</c><00:18:10.960><c> there's</c>

00:18:11.190 --> 00:18:11.200 align:start position:0%
we're gonna return zero meaning there's
 

00:18:11.200 --> 00:18:12.630 align:start position:0%
we're gonna return zero meaning there's
nothing<00:18:11.520><c> left</c><00:18:11.760><c> to</c><00:18:11.919><c> pop</c>

00:18:12.630 --> 00:18:12.640 align:start position:0%
nothing left to pop
 

00:18:12.640 --> 00:18:15.190 align:start position:0%
nothing left to pop
otherwise<00:18:13.600><c> maybe</c><00:18:13.919><c> we've</c><00:18:14.240><c> already</c><00:18:14.720><c> computed</c>

00:18:15.190 --> 00:18:15.200 align:start position:0%
otherwise maybe we've already computed
 

00:18:15.200 --> 00:18:16.870 align:start position:0%
otherwise maybe we've already computed
this<00:18:15.360><c> before</c><00:18:15.760><c> and</c><00:18:15.919><c> it's</c><00:18:16.160><c> already</c><00:18:16.559><c> in</c><00:18:16.720><c> our</c>

00:18:16.870 --> 00:18:16.880 align:start position:0%
this before and it's already in our
 

00:18:16.880 --> 00:18:17.350 align:start position:0%
this before and it's already in our
cache

00:18:17.350 --> 00:18:17.360 align:start position:0%
cache
 

00:18:17.360 --> 00:18:19.110 align:start position:0%
cache
right<00:18:17.520><c> this</c><00:18:17.840><c> left</c><00:18:18.080><c> and</c><00:18:18.240><c> right</c><00:18:18.559><c> pair</c><00:18:18.960><c> is</c>

00:18:19.110 --> 00:18:19.120 align:start position:0%
right this left and right pair is
 

00:18:19.120 --> 00:18:21.110 align:start position:0%
right this left and right pair is
already<00:18:19.520><c> in</c><00:18:19.679><c> dp</c><00:18:20.240><c> in</c><00:18:20.320><c> that</c><00:18:20.559><c> case</c><00:18:20.799><c> we're</c><00:18:20.960><c> just</c>

00:18:21.110 --> 00:18:21.120 align:start position:0%
already in dp in that case we're just
 

00:18:21.120 --> 00:18:22.310 align:start position:0%
already in dp in that case we're just
going<00:18:21.200><c> to</c><00:18:21.280><c> return</c><00:18:21.679><c> dp</c>

00:18:22.310 --> 00:18:22.320 align:start position:0%
going to return dp
 

00:18:22.320 --> 00:18:25.590 align:start position:0%
going to return dp
of<00:18:22.960><c> left</c><00:18:23.600><c> and</c><00:18:23.760><c> right</c><00:18:24.559><c> otherwise</c>

00:18:25.590 --> 00:18:25.600 align:start position:0%
of left and right otherwise
 

00:18:25.600 --> 00:18:27.590 align:start position:0%
of left and right otherwise
we<00:18:25.840><c> know</c><00:18:26.000><c> that</c><00:18:26.240><c> it</c><00:18:26.400><c> hasn't</c><00:18:26.799><c> been</c><00:18:26.960><c> computed</c><00:18:27.440><c> so</c>

00:18:27.590 --> 00:18:27.600 align:start position:0%
we know that it hasn't been computed so
 

00:18:27.600 --> 00:18:29.990 align:start position:0%
we know that it hasn't been computed so
now<00:18:27.760><c> it's</c><00:18:28.000><c> our</c><00:18:28.160><c> time</c><00:18:28.400><c> to</c><00:18:28.559><c> actually</c><00:18:29.039><c> compute</c><00:18:29.520><c> it</c>

00:18:29.990 --> 00:18:30.000 align:start position:0%
now it's our time to actually compute it
 

00:18:30.000 --> 00:18:34.070 align:start position:0%
now it's our time to actually compute it
so<00:18:30.240><c> let's</c><00:18:30.640><c> set</c><00:18:30.880><c> it</c><00:18:31.200><c> initially</c><00:18:32.160><c> to</c><00:18:32.960><c> zero</c>

00:18:34.070 --> 00:18:34.080 align:start position:0%
so let's set it initially to zero
 

00:18:34.080 --> 00:18:35.909 align:start position:0%
so let's set it initially to zero
and<00:18:34.320><c> now</c><00:18:34.559><c> we're</c><00:18:34.720><c> going</c><00:18:34.799><c> to</c><00:18:34.960><c> determine</c><00:18:35.520><c> what</c><00:18:35.760><c> is</c>

00:18:35.909 --> 00:18:35.919 align:start position:0%
and now we're going to determine what is
 

00:18:35.919 --> 00:18:38.870 align:start position:0%
and now we're going to determine what is
the<00:18:36.240><c> max</c><00:18:36.720><c> number</c><00:18:37.120><c> of</c><00:18:37.360><c> coins</c><00:18:37.760><c> we</c><00:18:37.919><c> could</c><00:18:38.240><c> get</c>

00:18:38.870 --> 00:18:38.880 align:start position:0%
the max number of coins we could get
 

00:18:38.880 --> 00:18:41.510 align:start position:0%
the max number of coins we could get
for<00:18:39.200><c> this</c><00:18:39.600><c> pair</c><00:18:40.400><c> so</c><00:18:40.880><c> remember</c><00:18:41.200><c> we're</c><00:18:41.440><c> going</c><00:18:41.520><c> to</c>

00:18:41.510 --> 00:18:41.520 align:start position:0%
for this pair so remember we're going to
 

00:18:41.520 --> 00:18:43.110 align:start position:0%
for this pair so remember we're going to
be<00:18:41.679><c> iterating</c><00:18:42.160><c> through</c><00:18:42.400><c> every</c><00:18:42.799><c> i</c>

00:18:43.110 --> 00:18:43.120 align:start position:0%
be iterating through every i
 

00:18:43.120 --> 00:18:45.990 align:start position:0%
be iterating through every i
considering<00:18:43.840><c> if</c><00:18:44.000><c> at</c><00:18:44.320><c> index</c><00:18:44.799><c> i</c><00:18:45.360><c> that</c><00:18:45.600><c> balloon</c>

00:18:45.990 --> 00:18:46.000 align:start position:0%
considering if at index i that balloon
 

00:18:46.000 --> 00:18:47.909 align:start position:0%
considering if at index i that balloon
was<00:18:46.160><c> the</c><00:18:46.400><c> last</c><00:18:46.720><c> balloon</c><00:18:47.120><c> we</c><00:18:47.360><c> popped</c><00:18:47.600><c> so</c><00:18:47.760><c> let's</c>

00:18:47.909 --> 00:18:47.919 align:start position:0%
was the last balloon we popped so let's
 

00:18:47.919 --> 00:18:49.430 align:start position:0%
was the last balloon we popped so let's
go<00:18:48.080><c> through</c><00:18:48.320><c> every</c><00:18:48.640><c> index</c><00:18:49.039><c> from</c>

00:18:49.430 --> 00:18:49.440 align:start position:0%
go through every index from
 

00:18:49.440 --> 00:18:52.230 align:start position:0%
go through every index from
left<00:18:49.840><c> all</c><00:18:50.000><c> the</c><00:18:50.160><c> way</c><00:18:50.720><c> to</c><00:18:50.960><c> right</c><00:18:51.679><c> and</c><00:18:51.919><c> let's</c>

00:18:52.230 --> 00:18:52.240 align:start position:0%
left all the way to right and let's
 

00:18:52.240 --> 00:18:54.390 align:start position:0%
left all the way to right and let's
compute<00:18:52.720><c> the</c><00:18:52.880><c> number</c><00:18:53.200><c> of</c><00:18:53.440><c> coins</c>

00:18:54.390 --> 00:18:54.400 align:start position:0%
compute the number of coins
 

00:18:54.400 --> 00:18:57.270 align:start position:0%
compute the number of coins
we<00:18:54.559><c> could</c><00:18:54.880><c> get</c><00:18:55.360><c> from</c><00:18:55.600><c> that</c><00:18:55.919><c> so</c><00:18:56.559><c> we</c><00:18:56.799><c> know</c><00:18:57.039><c> that</c>

00:18:57.270 --> 00:18:57.280 align:start position:0%
we could get from that so we know that
 

00:18:57.280 --> 00:18:57.909 align:start position:0%
we could get from that so we know that
if

00:18:57.909 --> 00:18:57.919 align:start position:0%
if
 

00:18:57.919 --> 00:19:00.630 align:start position:0%
if
this<00:18:58.400><c> numbs</c><00:18:58.720><c> of</c><00:18:58.880><c> i</c><00:18:59.039><c> was</c><00:18:59.280><c> popped</c><00:18:59.679><c> last</c><00:19:00.080><c> we'd</c><00:19:00.400><c> get</c>

00:19:00.630 --> 00:19:00.640 align:start position:0%
this numbs of i was popped last we'd get
 

00:19:00.640 --> 00:19:01.190 align:start position:0%
this numbs of i was popped last we'd get
numbs

00:19:01.190 --> 00:19:01.200 align:start position:0%
numbs
 

00:19:01.200 --> 00:19:05.110 align:start position:0%
numbs
of<00:19:01.520><c> i</c><00:19:02.400><c> multiplied</c><00:19:03.600><c> by</c><00:19:04.160><c> nums</c>

00:19:05.110 --> 00:19:05.120 align:start position:0%
of i multiplied by nums
 

00:19:05.120 --> 00:19:09.270 align:start position:0%
of i multiplied by nums
of<00:19:05.760><c> right</c><00:19:06.240><c> plus</c><00:19:06.640><c> 1</c><00:19:07.440><c> multiplied</c>

00:19:09.270 --> 00:19:09.280 align:start position:0%
of right plus 1 multiplied
 

00:19:09.280 --> 00:19:13.110 align:start position:0%
of right plus 1 multiplied
numbs<00:19:09.840><c> of</c><00:19:10.240><c> left</c><00:19:10.880><c> minus</c><00:19:11.440><c> one</c><00:19:12.160><c> right</c><00:19:12.480><c> and</c><00:19:12.640><c> now</c><00:19:12.880><c> to</c>

00:19:13.110 --> 00:19:13.120 align:start position:0%
numbs of left minus one right and now to
 

00:19:13.120 --> 00:19:13.990 align:start position:0%
numbs of left minus one right and now to
coins<00:19:13.440><c> we're</c><00:19:13.600><c> going</c><00:19:13.679><c> to</c>

00:19:13.990 --> 00:19:14.000 align:start position:0%
coins we're going to
 

00:19:14.000 --> 00:19:16.710 align:start position:0%
coins we're going to
add<00:19:14.960><c> the</c><00:19:15.360><c> additional</c><00:19:16.000><c> coins</c><00:19:16.320><c> that</c><00:19:16.400><c> we</c><00:19:16.559><c> would</c>

00:19:16.710 --> 00:19:16.720 align:start position:0%
add the additional coins that we would
 

00:19:16.720 --> 00:19:18.390 align:start position:0%
add the additional coins that we would
get<00:19:16.960><c> from</c><00:19:17.200><c> the</c><00:19:17.440><c> left</c><00:19:17.760><c> and</c><00:19:18.000><c> right</c>

00:19:18.390 --> 00:19:18.400 align:start position:0%
get from the left and right
 

00:19:18.400 --> 00:19:19.669 align:start position:0%
get from the left and right
sub<00:19:18.640><c> arrays</c><00:19:19.039><c> right</c><00:19:19.200><c> so</c><00:19:19.280><c> we're</c><00:19:19.440><c> going</c><00:19:19.520><c> to</c><00:19:19.600><c> be</c>

00:19:19.669 --> 00:19:19.679 align:start position:0%
sub arrays right so we're going to be
 

00:19:19.679 --> 00:19:21.510 align:start position:0%
sub arrays right so we're going to be
calling<00:19:19.919><c> our</c><00:19:20.080><c> depth</c><00:19:20.320><c> first</c><00:19:20.480><c> search</c><00:19:20.799><c> function</c>

00:19:21.510 --> 00:19:21.520 align:start position:0%
calling our depth first search function
 

00:19:21.520 --> 00:19:23.510 align:start position:0%
calling our depth first search function
the<00:19:21.760><c> left</c><00:19:22.000><c> boundary</c><00:19:22.480><c> stays</c><00:19:22.720><c> the</c><00:19:22.880><c> same</c><00:19:23.360><c> and</c>

00:19:23.510 --> 00:19:23.520 align:start position:0%
the left boundary stays the same and
 

00:19:23.520 --> 00:19:24.789 align:start position:0%
the left boundary stays the same and
we're<00:19:23.679><c> gonna</c><00:19:23.840><c> do</c><00:19:24.080><c> i</c>

00:19:24.789 --> 00:19:24.799 align:start position:0%
we're gonna do i
 

00:19:24.799 --> 00:19:27.350 align:start position:0%
we're gonna do i
minus<00:19:25.679><c> one</c><00:19:26.400><c> and</c><00:19:26.559><c> we're</c><00:19:26.720><c> also</c><00:19:27.039><c> going</c><00:19:27.200><c> to</c><00:19:27.280><c> be</c>

00:19:27.350 --> 00:19:27.360 align:start position:0%
minus one and we're also going to be
 

00:19:27.360 --> 00:19:29.029 align:start position:0%
minus one and we're also going to be
calling<00:19:27.679><c> it</c><00:19:27.840><c> for</c><00:19:28.000><c> the</c><00:19:28.240><c> right</c><00:19:28.480><c> subarray</c><00:19:28.880><c> which</c>

00:19:29.029 --> 00:19:29.039 align:start position:0%
calling it for the right subarray which
 

00:19:29.039 --> 00:19:30.390 align:start position:0%
calling it for the right subarray which
we<00:19:29.200><c> know</c><00:19:29.360><c> we</c><00:19:29.520><c> can</c><00:19:29.679><c> get</c>

00:19:30.390 --> 00:19:30.400 align:start position:0%
we know we can get
 

00:19:30.400 --> 00:19:33.510 align:start position:0%
we know we can get
with<00:19:31.120><c> i</c><00:19:31.520><c> plus</c><00:19:31.919><c> one</c><00:19:32.240><c> as</c><00:19:32.400><c> a</c><00:19:32.559><c> left</c><00:19:32.880><c> boundary</c><00:19:33.360><c> and</c>

00:19:33.510 --> 00:19:33.520 align:start position:0%
with i plus one as a left boundary and
 

00:19:33.520 --> 00:19:35.029 align:start position:0%
with i plus one as a left boundary and
our<00:19:33.760><c> right</c><00:19:34.000><c> boundary</c><00:19:34.400><c> is</c><00:19:34.480><c> going</c><00:19:34.559><c> to</c><00:19:34.720><c> stay</c><00:19:34.880><c> the</c>

00:19:35.029 --> 00:19:35.039 align:start position:0%
our right boundary is going to stay the
 

00:19:35.039 --> 00:19:36.630 align:start position:0%
our right boundary is going to stay the
same<00:19:35.200><c> so</c><00:19:35.440><c> now</c><00:19:35.600><c> we've</c><00:19:35.840><c> computed</c><00:19:36.240><c> the</c><00:19:36.400><c> total</c>

00:19:36.630 --> 00:19:36.640 align:start position:0%
same so now we've computed the total
 

00:19:36.640 --> 00:19:38.310 align:start position:0%
same so now we've computed the total
number<00:19:36.880><c> of</c><00:19:36.960><c> coins</c><00:19:37.360><c> right</c><00:19:37.600><c> it</c><00:19:37.679><c> makes</c><00:19:37.840><c> sense</c><00:19:38.160><c> why</c>

00:19:38.310 --> 00:19:38.320 align:start position:0%
number of coins right it makes sense why
 

00:19:38.320 --> 00:19:39.350 align:start position:0%
number of coins right it makes sense why
we're<00:19:38.480><c> doing</c><00:19:38.720><c> this</c>

00:19:39.350 --> 00:19:39.360 align:start position:0%
we're doing this
 

00:19:39.360 --> 00:19:40.870 align:start position:0%
we're doing this
and<00:19:39.520><c> then</c><00:19:39.760><c> calling</c><00:19:40.080><c> our</c><00:19:40.160><c> debt</c><00:19:40.400><c> for</c><00:19:40.559><c> search</c>

00:19:40.870 --> 00:19:40.880 align:start position:0%
and then calling our debt for search
 

00:19:40.880 --> 00:19:42.950 align:start position:0%
and then calling our debt for search
function<00:19:41.679><c> so</c><00:19:41.840><c> now</c><00:19:42.000><c> we</c><00:19:42.160><c> can</c><00:19:42.320><c> potentially</c>

00:19:42.950 --> 00:19:42.960 align:start position:0%
function so now we can potentially
 

00:19:42.960 --> 00:19:44.390 align:start position:0%
function so now we can potentially
update<00:19:43.280><c> the</c><00:19:43.440><c> result</c><00:19:43.760><c> which</c><00:19:44.000><c> we</c><00:19:44.080><c> know</c><00:19:44.240><c> we're</c>

00:19:44.390 --> 00:19:44.400 align:start position:0%
update the result which we know we're
 

00:19:44.400 --> 00:19:45.909 align:start position:0%
update the result which we know we're
storing<00:19:44.880><c> here</c><00:19:45.200><c> in</c><00:19:45.360><c> dp</c>

00:19:45.909 --> 00:19:45.919 align:start position:0%
storing here in dp
 

00:19:45.919 --> 00:19:48.310 align:start position:0%
storing here in dp
of<00:19:46.240><c> left</c><00:19:46.799><c> and</c><00:19:47.039><c> right</c><00:19:47.760><c> so</c><00:19:47.919><c> we're</c><00:19:48.080><c> going</c><00:19:48.160><c> to</c>

00:19:48.310 --> 00:19:48.320 align:start position:0%
of left and right so we're going to
 

00:19:48.320 --> 00:19:50.310 align:start position:0%
of left and right so we're going to
update<00:19:48.640><c> it</c><00:19:48.720><c> to</c><00:19:48.880><c> the</c><00:19:49.039><c> max</c><00:19:49.440><c> of</c><00:19:49.600><c> potentially</c><00:19:50.160><c> what</c>

00:19:50.310 --> 00:19:50.320 align:start position:0%
update it to the max of potentially what
 

00:19:50.320 --> 00:19:51.110 align:start position:0%
update it to the max of potentially what
it<00:19:50.480><c> already</c>

00:19:51.110 --> 00:19:51.120 align:start position:0%
it already
 

00:19:51.120 --> 00:19:53.750 align:start position:0%
it already
is<00:19:51.679><c> and</c><00:19:52.000><c> the</c><00:19:52.240><c> max</c><00:19:52.640><c> of</c><00:19:52.799><c> what</c><00:19:52.960><c> we</c><00:19:53.120><c> just</c><00:19:53.280><c> computed</c>

00:19:53.750 --> 00:19:53.760 align:start position:0%
is and the max of what we just computed
 

00:19:53.760 --> 00:19:55.190 align:start position:0%
is and the max of what we just computed
the<00:19:53.840><c> total</c><00:19:54.160><c> number</c><00:19:54.320><c> of</c><00:19:54.480><c> coins</c><00:19:54.799><c> that</c><00:19:54.960><c> we</c><00:19:55.039><c> just</c>

00:19:55.190 --> 00:19:55.200 align:start position:0%
the total number of coins that we just
 

00:19:55.200 --> 00:19:56.789 align:start position:0%
the total number of coins that we just
computed<00:19:55.760><c> and</c><00:19:55.840><c> so</c><00:19:56.000><c> we're</c><00:19:56.240><c> basically</c><00:19:56.640><c> going</c><00:19:56.720><c> to</c>

00:19:56.789 --> 00:19:56.799 align:start position:0%
computed and so we're basically going to
 

00:19:56.799 --> 00:19:58.630 align:start position:0%
computed and so we're basically going to
be<00:19:56.960><c> running</c><00:19:57.280><c> through</c><00:19:57.520><c> the</c><00:19:57.679><c> entire</c><00:19:58.160><c> loop</c>

00:19:58.630 --> 00:19:58.640 align:start position:0%
be running through the entire loop
 

00:19:58.640 --> 00:20:00.470 align:start position:0%
be running through the entire loop
doing<00:19:58.960><c> that</c><00:19:59.440><c> i</c><00:19:59.520><c> hope</c><00:19:59.760><c> that</c><00:19:59.919><c> this</c><00:20:00.160><c> kind</c><00:20:00.400><c> of</c>

00:20:00.470 --> 00:20:00.480 align:start position:0%
doing that i hope that this kind of
 

00:20:00.480 --> 00:20:01.990 align:start position:0%
doing that i hope that this kind of
makes<00:20:00.720><c> it</c><00:20:00.799><c> a</c><00:20:00.880><c> little</c><00:20:01.039><c> more</c><00:20:01.280><c> obvious</c><00:20:01.679><c> of</c><00:20:01.760><c> why</c>

00:20:01.990 --> 00:20:02.000 align:start position:0%
makes it a little more obvious of why
 

00:20:02.000 --> 00:20:03.750 align:start position:0%
makes it a little more obvious of why
this<00:20:02.159><c> is</c><00:20:02.400><c> n</c><00:20:02.559><c> cubed</c><00:20:02.960><c> we</c><00:20:03.120><c> know</c><00:20:03.280><c> that</c><00:20:03.360><c> this</c><00:20:03.600><c> debt</c>

00:20:03.750 --> 00:20:03.760 align:start position:0%
this is n cubed we know that this debt
 

00:20:03.760 --> 00:20:04.950 align:start position:0%
this is n cubed we know that this debt
for<00:20:03.919><c> search</c><00:20:04.240><c> function</c>

00:20:04.950 --> 00:20:04.960 align:start position:0%
for search function
 

00:20:04.960 --> 00:20:07.110 align:start position:0%
for search function
the<00:20:05.520><c> maximum</c><00:20:06.000><c> possible</c><00:20:06.480><c> number</c><00:20:06.720><c> of</c><00:20:06.799><c> ways</c><00:20:07.039><c> it</c>

00:20:07.110 --> 00:20:07.120 align:start position:0%
the maximum possible number of ways it
 

00:20:07.120 --> 00:20:08.149 align:start position:0%
the maximum possible number of ways it
could<00:20:07.280><c> be</c><00:20:07.440><c> called</c><00:20:07.840><c> is</c>

00:20:08.149 --> 00:20:08.159 align:start position:0%
could be called is
 

00:20:08.159 --> 00:20:10.070 align:start position:0%
could be called is
n<00:20:08.320><c> squared</c><00:20:08.720><c> right</c><00:20:08.960><c> every</c><00:20:09.280><c> pair</c><00:20:09.600><c> of</c><00:20:09.679><c> the</c><00:20:09.840><c> left</c>

00:20:10.070 --> 00:20:10.080 align:start position:0%
n squared right every pair of the left
 

00:20:10.080 --> 00:20:11.990 align:start position:0%
n squared right every pair of the left
and<00:20:10.240><c> right</c><00:20:10.640><c> indices</c><00:20:11.120><c> could</c><00:20:11.280><c> be</c><00:20:11.520><c> n</c><00:20:11.679><c> squared</c>

00:20:11.990 --> 00:20:12.000 align:start position:0%
and right indices could be n squared
 

00:20:12.000 --> 00:20:12.710 align:start position:0%
and right indices could be n squared
times

00:20:12.710 --> 00:20:12.720 align:start position:0%
times
 

00:20:12.720 --> 00:20:14.870 align:start position:0%
times
e<00:20:13.039><c> and</c><00:20:13.120><c> then</c><00:20:13.440><c> if</c><00:20:13.600><c> we</c><00:20:13.840><c> actually</c><00:20:14.320><c> if</c><00:20:14.640><c> it's</c>

00:20:14.870 --> 00:20:14.880 align:start position:0%
e and then if we actually if it's
 

00:20:14.880 --> 00:20:16.390 align:start position:0%
e and then if we actually if it's
already<00:20:15.200><c> been</c><00:20:15.440><c> cached</c><00:20:15.840><c> then</c><00:20:16.000><c> we're</c><00:20:16.240><c> going</c><00:20:16.320><c> to</c>

00:20:16.390 --> 00:20:16.400 align:start position:0%
already been cached then we're going to
 

00:20:16.400 --> 00:20:17.510 align:start position:0%
already been cached then we're going to
return<00:20:16.799><c> it</c><00:20:16.880><c> in</c><00:20:17.039><c> big</c><00:20:17.280><c> o</c>

00:20:17.510 --> 00:20:17.520 align:start position:0%
return it in big o
 

00:20:17.520 --> 00:20:20.070 align:start position:0%
return it in big o
of<00:20:17.760><c> one</c><00:20:18.080><c> time</c><00:20:18.559><c> if</c><00:20:19.120><c> it</c><00:20:19.280><c> hasn't</c><00:20:19.600><c> been</c><00:20:19.840><c> cached</c>

00:20:20.070 --> 00:20:20.080 align:start position:0%
of one time if it hasn't been cached
 

00:20:20.080 --> 00:20:21.430 align:start position:0%
of one time if it hasn't been cached
meaning<00:20:20.400><c> it's</c><00:20:20.559><c> the</c><00:20:20.720><c> first</c><00:20:21.039><c> time</c><00:20:21.200><c> we're</c>

00:20:21.430 --> 00:20:21.440 align:start position:0%
meaning it's the first time we're
 

00:20:21.440 --> 00:20:22.230 align:start position:0%
meaning it's the first time we're
computing<00:20:21.840><c> this</c>

00:20:22.230 --> 00:20:22.240 align:start position:0%
computing this
 

00:20:22.240 --> 00:20:23.669 align:start position:0%
computing this
we're<00:20:22.400><c> going</c><00:20:22.480><c> to</c><00:20:22.559><c> have</c><00:20:22.640><c> to</c><00:20:22.799><c> run</c><00:20:23.120><c> through</c><00:20:23.360><c> a</c>

00:20:23.669 --> 00:20:23.679 align:start position:0%
we're going to have to run through a
 

00:20:23.679 --> 00:20:25.510 align:start position:0%
we're going to have to run through a
linear<00:20:24.240><c> time</c><00:20:24.799><c> loop</c>

00:20:25.510 --> 00:20:25.520 align:start position:0%
linear time loop
 

00:20:25.520 --> 00:20:27.270 align:start position:0%
linear time loop
and<00:20:25.679><c> for</c><00:20:25.919><c> each</c><00:20:26.159><c> of</c><00:20:26.320><c> these</c><00:20:26.559><c> pairs</c><00:20:26.880><c> we</c><00:20:27.039><c> are</c><00:20:27.200><c> going</c>

00:20:27.270 --> 00:20:27.280 align:start position:0%
and for each of these pairs we are going
 

00:20:27.280 --> 00:20:29.430 align:start position:0%
and for each of these pairs we are going
to<00:20:27.360><c> have</c><00:20:27.520><c> to</c><00:20:27.600><c> run</c><00:20:27.840><c> through</c><00:20:28.080><c> a</c><00:20:28.320><c> loop</c><00:20:28.640><c> at</c><00:20:28.880><c> least</c>

00:20:29.430 --> 00:20:29.440 align:start position:0%
to have to run through a loop at least
 

00:20:29.440 --> 00:20:31.270 align:start position:0%
to have to run through a loop at least
once<00:20:30.000><c> so</c><00:20:30.240><c> that's</c><00:20:30.480><c> what's</c><00:20:30.720><c> going</c><00:20:30.799><c> to</c><00:20:30.880><c> give</c><00:20:31.120><c> us</c>

00:20:31.270 --> 00:20:31.280 align:start position:0%
once so that's what's going to give us
 

00:20:31.280 --> 00:20:32.549 align:start position:0%
once so that's what's going to give us
the<00:20:31.520><c> n</c><00:20:31.919><c> cubed</c>

00:20:32.549 --> 00:20:32.559 align:start position:0%
the n cubed
 

00:20:32.559 --> 00:20:35.029 align:start position:0%
the n cubed
time<00:20:32.799><c> complexity</c><00:20:33.760><c> but</c><00:20:33.919><c> yeah</c><00:20:34.240><c> once</c><00:20:34.640><c> this</c><00:20:34.880><c> has</c>

00:20:35.029 --> 00:20:35.039 align:start position:0%
time complexity but yeah once this has
 

00:20:35.039 --> 00:20:36.390 align:start position:0%
time complexity but yeah once this has
been<00:20:35.200><c> computed</c><00:20:35.679><c> we</c><00:20:35.919><c> know</c>

00:20:36.390 --> 00:20:36.400 align:start position:0%
been computed we know
 

00:20:36.400 --> 00:20:38.230 align:start position:0%
been computed we know
you<00:20:36.480><c> know</c><00:20:36.640><c> we</c><00:20:36.799><c> can</c><00:20:36.880><c> just</c><00:20:37.120><c> go</c><00:20:37.280><c> ahead</c><00:20:37.600><c> and</c><00:20:37.760><c> return</c>

00:20:38.230 --> 00:20:38.240 align:start position:0%
you know we can just go ahead and return
 

00:20:38.240 --> 00:20:40.310 align:start position:0%
you know we can just go ahead and return
it<00:20:38.400><c> from</c><00:20:38.640><c> this</c><00:20:39.039><c> recursive</c><00:20:39.600><c> function</c>

00:20:40.310 --> 00:20:40.320 align:start position:0%
it from this recursive function
 

00:20:40.320 --> 00:20:43.830 align:start position:0%
it from this recursive function
and<00:20:40.880><c> that</c><00:20:41.280><c> is</c><00:20:41.600><c> the</c><00:20:41.760><c> entire</c><00:20:42.320><c> thing</c><00:20:42.880><c> so</c>

00:20:43.830 --> 00:20:43.840 align:start position:0%
and that is the entire thing so
 

00:20:43.840 --> 00:20:45.510 align:start position:0%
and that is the entire thing so
you<00:20:44.000><c> know</c><00:20:44.080><c> we</c><00:20:44.240><c> defined</c><00:20:44.640><c> a</c><00:20:44.720><c> function</c><00:20:45.120><c> inside</c><00:20:45.440><c> of</c>

00:20:45.510 --> 00:20:45.520 align:start position:0%
you know we defined a function inside of
 

00:20:45.520 --> 00:20:47.510 align:start position:0%
you know we defined a function inside of
a<00:20:45.600><c> function</c><00:20:46.080><c> but</c><00:20:46.640><c> once</c><00:20:46.880><c> you</c><00:20:47.120><c> know</c>

00:20:47.510 --> 00:20:47.520 align:start position:0%
a function but once you know
 

00:20:47.520 --> 00:20:49.430 align:start position:0%
a function but once you know
you<00:20:47.679><c> know</c><00:20:47.919><c> the</c><00:20:48.240><c> trick</c><00:20:48.720><c> which</c><00:20:48.960><c> is</c><00:20:49.039><c> not</c><00:20:49.200><c> so</c>

00:20:49.430 --> 00:20:49.440 align:start position:0%
you know the trick which is not so
 

00:20:49.440 --> 00:20:51.029 align:start position:0%
you know the trick which is not so
obvious<00:20:49.919><c> we</c><00:20:50.000><c> do</c><00:20:50.159><c> have</c><00:20:50.320><c> to</c><00:20:50.400><c> do</c><00:20:50.640><c> this</c>

00:20:51.029 --> 00:20:51.039 align:start position:0%
obvious we do have to do this
 

00:20:51.039 --> 00:20:53.909 align:start position:0%
obvious we do have to do this
and<00:20:51.200><c> then</c><00:20:52.000><c> we</c><00:20:52.159><c> do</c><00:20:52.320><c> have</c><00:20:52.559><c> that</c><00:20:52.880><c> relationship</c><00:20:53.520><c> of</c>

00:20:53.909 --> 00:20:53.919 align:start position:0%
and then we do have that relationship of
 

00:20:53.919 --> 00:20:55.270 align:start position:0%
and then we do have that relationship of
you<00:20:54.080><c> know</c><00:20:54.240><c> we're</c><00:20:54.400><c> popping</c><00:20:54.799><c> this</c>

00:20:55.270 --> 00:20:55.280 align:start position:0%
you know we're popping this
 

00:20:55.280 --> 00:20:57.669 align:start position:0%
you know we're popping this
this<00:20:55.520><c> balloon</c><00:20:56.159><c> last</c><00:20:56.960><c> it's</c><00:20:57.200><c> not</c><00:20:57.360><c> super</c>

00:20:57.669 --> 00:20:57.679 align:start position:0%
this balloon last it's not super
 

00:20:57.679 --> 00:20:59.270 align:start position:0%
this balloon last it's not super
intuitive<00:20:58.159><c> but</c><00:20:58.320><c> once</c><00:20:58.559><c> you</c><00:20:58.720><c> do</c><00:20:58.880><c> have</c><00:20:59.120><c> it</c>

00:20:59.270 --> 00:20:59.280 align:start position:0%
intuitive but once you do have it
 

00:20:59.280 --> 00:21:00.710 align:start position:0%
intuitive but once you do have it
hopefully<00:20:59.600><c> your</c><00:20:59.840><c> interviewer</c><00:21:00.320><c> gives</c><00:21:00.559><c> you</c>

00:21:00.710 --> 00:21:00.720 align:start position:0%
hopefully your interviewer gives you
 

00:21:00.720 --> 00:21:01.590 align:start position:0%
hopefully your interviewer gives you
that<00:21:01.039><c> hint</c>

00:21:01.590 --> 00:21:01.600 align:start position:0%
that hint
 

00:21:01.600 --> 00:21:03.909 align:start position:0%
that hint
but<00:21:01.919><c> and</c><00:21:02.080><c> if</c><00:21:02.159><c> you</c><00:21:02.320><c> do</c><00:21:02.480><c> get</c><00:21:02.720><c> that</c><00:21:03.200><c> the</c><00:21:03.440><c> code</c><00:21:03.760><c> is</c>

00:21:03.909 --> 00:21:03.919 align:start position:0%
but and if you do get that the code is
 

00:21:03.919 --> 00:21:05.830 align:start position:0%
but and if you do get that the code is
actually<00:21:04.159><c> not</c><00:21:04.400><c> too</c><00:21:04.559><c> bad</c><00:21:04.880><c> as</c><00:21:05.039><c> you</c><00:21:05.120><c> can</c><00:21:05.360><c> see</c><00:21:05.520><c> when</c>

00:21:05.830 --> 00:21:05.840 align:start position:0%
actually not too bad as you can see when
 

00:21:05.840 --> 00:21:06.230 align:start position:0%
actually not too bad as you can see when
you<00:21:05.919><c> do</c>

00:21:06.230 --> 00:21:06.240 align:start position:0%
you do
 

00:21:06.240 --> 00:21:08.149 align:start position:0%
you do
recursion<00:21:07.200><c> so</c><00:21:07.360><c> i</c><00:21:07.440><c> hope</c><00:21:07.600><c> that</c><00:21:07.760><c> this</c><00:21:07.919><c> was</c>

00:21:08.149 --> 00:21:08.159 align:start position:0%
recursion so i hope that this was
 

00:21:08.159 --> 00:21:09.590 align:start position:0%
recursion so i hope that this was
helpful<00:21:08.720><c> if</c><00:21:08.880><c> it</c><00:21:09.039><c> was</c>

00:21:09.590 --> 00:21:09.600 align:start position:0%
helpful if it was
 

00:21:09.600 --> 00:21:11.270 align:start position:0%
helpful if it was
please<00:21:09.840><c> like</c><00:21:10.080><c> and</c><00:21:10.240><c> subscribe</c><00:21:10.720><c> it</c><00:21:10.880><c> supports</c>

00:21:11.270 --> 00:21:11.280 align:start position:0%
please like and subscribe it supports
 

00:21:11.280 --> 00:21:13.510 align:start position:0%
please like and subscribe it supports
the<00:21:11.440><c> channel</c><00:21:11.919><c> a</c><00:21:12.159><c> lot</c><00:21:12.480><c> and</c><00:21:12.640><c> i'll</c><00:21:12.880><c> hopefully</c>

00:21:13.510 --> 00:21:13.520 align:start position:0%
the channel a lot and i'll hopefully
 

00:21:13.520 --> 00:21:17.840 align:start position:0%
the channel a lot and i'll hopefully
see<00:21:13.679><c> you</c><00:21:13.840><c> pretty</c><00:21:14.080><c> soon</c><00:21:14.559><c> thanks</c><00:21:14.799><c> for</c><00:21:14.960><c> watching</c>

