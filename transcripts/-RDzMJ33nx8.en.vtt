WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.670 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.640><c> welcome</c><00:00:01.120><c> back</c><00:00:01.360><c> and</c><00:00:01.439><c> let's</c>

00:00:01.670 --> 00:00:01.680 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.680 --> 00:00:03.510 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.839><c> some</c><00:00:02.000><c> more</c><00:00:02.240><c> neat</c><00:00:02.480><c> code</c><00:00:02.720><c> today</c><00:00:03.040><c> so</c><00:00:03.199><c> today</c>

00:00:03.510 --> 00:00:03.520 align:start position:0%
write some more neat code today so today
 

00:00:03.520 --> 00:00:05.910 align:start position:0%
write some more neat code today so today
let's<00:00:03.840><c> solve</c><00:00:04.160><c> distinct</c><00:00:04.799><c> subsequences</c><00:00:05.759><c> this</c>

00:00:05.910 --> 00:00:05.920 align:start position:0%
let's solve distinct subsequences this
 

00:00:05.920 --> 00:00:07.829 align:start position:0%
let's solve distinct subsequences this
is<00:00:06.080><c> another</c><00:00:06.640><c> hard</c><00:00:06.960><c> problem</c><00:00:07.440><c> and</c><00:00:07.520><c> this</c><00:00:07.759><c> is</c>

00:00:07.829 --> 00:00:07.839 align:start position:0%
is another hard problem and this is
 

00:00:07.839 --> 00:00:09.589 align:start position:0%
is another hard problem and this is
actually<00:00:08.160><c> going</c><00:00:08.240><c> to</c><00:00:08.400><c> be</c><00:00:08.639><c> solved</c><00:00:08.960><c> with</c><00:00:09.120><c> dynamic</c>

00:00:09.589 --> 00:00:09.599 align:start position:0%
actually going to be solved with dynamic
 

00:00:09.599 --> 00:00:11.589 align:start position:0%
actually going to be solved with dynamic
programming<00:00:10.160><c> it's</c><00:00:10.480><c> very</c><00:00:10.719><c> similar</c><00:00:11.200><c> to</c><00:00:11.360><c> some</c>

00:00:11.589 --> 00:00:11.599 align:start position:0%
programming it's very similar to some
 

00:00:11.599 --> 00:00:13.509 align:start position:0%
programming it's very similar to some
other<00:00:11.840><c> dynamic</c><00:00:12.320><c> programming</c><00:00:12.799><c> problems</c>

00:00:13.509 --> 00:00:13.519 align:start position:0%
other dynamic programming problems
 

00:00:13.519 --> 00:00:15.829 align:start position:0%
other dynamic programming problems
involving<00:00:14.080><c> subsequences</c><00:00:14.960><c> particularly</c>

00:00:15.829 --> 00:00:15.839 align:start position:0%
involving subsequences particularly
 

00:00:15.839 --> 00:00:17.670 align:start position:0%
involving subsequences particularly
longest<00:00:16.400><c> common</c><00:00:16.800><c> subsequence</c>

00:00:17.670 --> 00:00:17.680 align:start position:0%
longest common subsequence
 

00:00:17.680 --> 00:00:19.269 align:start position:0%
longest common subsequence
which<00:00:17.920><c> is</c><00:00:18.000><c> a</c><00:00:18.160><c> problem</c><00:00:18.480><c> that</c><00:00:18.640><c> i've</c><00:00:18.800><c> solved</c><00:00:19.199><c> on</c>

00:00:19.269 --> 00:00:19.279 align:start position:0%
which is a problem that i've solved on
 

00:00:19.279 --> 00:00:21.029 align:start position:0%
which is a problem that i've solved on
this<00:00:19.600><c> channel</c><00:00:19.920><c> before</c><00:00:20.320><c> so</c><00:00:20.480><c> if</c><00:00:20.560><c> you</c><00:00:20.720><c> struggle</c>

00:00:21.029 --> 00:00:21.039 align:start position:0%
this channel before so if you struggle
 

00:00:21.039 --> 00:00:21.910 align:start position:0%
this channel before so if you struggle
with<00:00:21.199><c> this</c><00:00:21.439><c> problem</c>

00:00:21.910 --> 00:00:21.920 align:start position:0%
with this problem
 

00:00:21.920 --> 00:00:23.590 align:start position:0%
with this problem
i<00:00:22.080><c> would</c><00:00:22.240><c> recommend</c><00:00:22.640><c> solving</c><00:00:22.960><c> this</c><00:00:23.199><c> one</c><00:00:23.439><c> or</c>

00:00:23.590 --> 00:00:23.600 align:start position:0%
i would recommend solving this one or
 

00:00:23.600 --> 00:00:25.349 align:start position:0%
i would recommend solving this one or
watching<00:00:23.920><c> that</c><00:00:24.080><c> video</c><00:00:24.480><c> before</c>

00:00:25.349 --> 00:00:25.359 align:start position:0%
watching that video before
 

00:00:25.359 --> 00:00:28.070 align:start position:0%
watching that video before
so<00:00:25.519><c> we're</c><00:00:25.680><c> given</c><00:00:26.080><c> two</c><00:00:26.320><c> strings</c><00:00:26.960><c> s</c><00:00:27.359><c> and</c><00:00:27.599><c> t</c><00:00:27.920><c> and</c>

00:00:28.070 --> 00:00:28.080 align:start position:0%
so we're given two strings s and t and
 

00:00:28.080 --> 00:00:29.269 align:start position:0%
so we're given two strings s and t and
we<00:00:28.320><c> want</c><00:00:28.480><c> to</c><00:00:28.560><c> return</c>

00:00:29.269 --> 00:00:29.279 align:start position:0%
we want to return
 

00:00:29.279 --> 00:00:31.910 align:start position:0%
we want to return
the<00:00:29.599><c> total</c><00:00:30.320><c> number</c><00:00:30.720><c> of</c><00:00:30.960><c> distinct</c>

00:00:31.910 --> 00:00:31.920 align:start position:0%
the total number of distinct
 

00:00:31.920 --> 00:00:33.270 align:start position:0%
the total number of distinct
subsequences

00:00:33.270 --> 00:00:33.280 align:start position:0%
subsequences
 

00:00:33.280 --> 00:00:36.470 align:start position:0%
subsequences
of<00:00:33.840><c> s</c><00:00:34.399><c> which</c><00:00:34.800><c> equal</c><00:00:35.360><c> t</c><00:00:35.680><c> so</c><00:00:35.920><c> basically</c><00:00:36.320><c> what</c>

00:00:36.470 --> 00:00:36.480 align:start position:0%
of s which equal t so basically what
 

00:00:36.480 --> 00:00:38.150 align:start position:0%
of s which equal t so basically what
we're<00:00:36.719><c> doing</c><00:00:37.040><c> is</c><00:00:37.200><c> we're</c><00:00:37.520><c> looking</c><00:00:37.840><c> for</c>

00:00:38.150 --> 00:00:38.160 align:start position:0%
we're doing is we're looking for
 

00:00:38.160 --> 00:00:39.270 align:start position:0%
we're doing is we're looking for
subsequences

00:00:39.270 --> 00:00:39.280 align:start position:0%
subsequences
 

00:00:39.280 --> 00:00:42.630 align:start position:0%
subsequences
of<00:00:39.760><c> s</c><00:00:40.239><c> that</c><00:00:40.480><c> happen</c><00:00:40.879><c> to</c><00:00:41.200><c> match</c><00:00:41.600><c> the</c><00:00:41.840><c> entire</c>

00:00:42.630 --> 00:00:42.640 align:start position:0%
of s that happen to match the entire
 

00:00:42.640 --> 00:00:44.950 align:start position:0%
of s that happen to match the entire
string<00:00:43.200><c> t</c><00:00:43.920><c> and</c><00:00:44.079><c> if</c><00:00:44.160><c> you</c><00:00:44.320><c> don't</c><00:00:44.480><c> remember</c><00:00:44.800><c> what</c>

00:00:44.950 --> 00:00:44.960 align:start position:0%
string t and if you don't remember what
 

00:00:44.960 --> 00:00:45.990 align:start position:0%
string t and if you don't remember what
a<00:00:45.039><c> subsequence</c><00:00:45.760><c> is</c>

00:00:45.990 --> 00:00:46.000 align:start position:0%
a subsequence is
 

00:00:46.000 --> 00:00:47.830 align:start position:0%
a subsequence is
basically<00:00:46.559><c> for</c><00:00:46.879><c> let's</c><00:00:47.039><c> say</c><00:00:47.200><c> this</c><00:00:47.440><c> string</c><00:00:47.760><c> a</c>

00:00:47.830 --> 00:00:47.840 align:start position:0%
basically for let's say this string a
 

00:00:47.840 --> 00:00:49.830 align:start position:0%
basically for let's say this string a
subsequence<00:00:48.480><c> is</c><00:00:48.640><c> just</c><00:00:48.879><c> a</c><00:00:49.039><c> subset</c>

00:00:49.830 --> 00:00:49.840 align:start position:0%
subsequence is just a subset
 

00:00:49.840 --> 00:00:51.590 align:start position:0%
subsequence is just a subset
of<00:00:50.239><c> some</c><00:00:50.480><c> particular</c><00:00:51.039><c> characters</c><00:00:51.440><c> so</c>

00:00:51.590 --> 00:00:51.600 align:start position:0%
of some particular characters so
 

00:00:51.600 --> 00:00:53.029 align:start position:0%
of some particular characters so
basically<00:00:52.000><c> maybe</c><00:00:52.239><c> we</c><00:00:52.399><c> don't</c><00:00:52.559><c> want</c><00:00:52.719><c> to</c><00:00:52.800><c> include</c>

00:00:53.029 --> 00:00:53.039 align:start position:0%
basically maybe we don't want to include
 

00:00:53.039 --> 00:00:53.430 align:start position:0%
basically maybe we don't want to include
the<00:00:53.199><c> b</c>

00:00:53.430 --> 00:00:53.440 align:start position:0%
the b
 

00:00:53.440 --> 00:00:55.110 align:start position:0%
the b
we<00:00:53.520><c> don't</c><00:00:53.680><c> want</c><00:00:53.840><c> to</c><00:00:53.920><c> include</c><00:00:54.160><c> the</c><00:00:54.399><c> d</c><00:00:54.800><c> so</c><00:00:54.960><c> this</c>

00:00:55.110 --> 00:00:55.120 align:start position:0%
we don't want to include the d so this
 

00:00:55.120 --> 00:00:57.430 align:start position:0%
we don't want to include the d so this
happens<00:00:55.440><c> to</c><00:00:55.520><c> be</c><00:00:55.680><c> a</c><00:00:55.760><c> subsequence</c><00:00:56.480><c> ace</c><00:00:56.800><c> right</c><00:00:57.120><c> a</c>

00:00:57.430 --> 00:00:57.440 align:start position:0%
happens to be a subsequence ace right a
 

00:00:57.440 --> 00:00:59.830 align:start position:0%
happens to be a subsequence ace right a
c<00:00:57.760><c> e</c><00:00:58.320><c> this</c><00:00:58.559><c> one</c><00:00:58.800><c> is</c><00:00:58.879><c> not</c><00:00:59.039><c> a</c><00:00:59.120><c> subsequence</c>

00:00:59.830 --> 00:00:59.840 align:start position:0%
c e this one is not a subsequence
 

00:00:59.840 --> 00:01:01.189 align:start position:0%
c e this one is not a subsequence
because<00:01:00.079><c> it's</c><00:01:00.239><c> not</c><00:01:00.399><c> in</c><00:01:00.559><c> the</c><00:01:00.640><c> correct</c>

00:01:01.189 --> 00:01:01.199 align:start position:0%
because it's not in the correct
 

00:01:01.199 --> 00:01:02.709 align:start position:0%
because it's not in the correct
order<00:01:01.600><c> of</c><00:01:01.760><c> these</c><00:01:02.000><c> you</c><00:01:02.079><c> can't</c><00:01:02.320><c> change</c><00:01:02.559><c> the</c>

00:01:02.709 --> 00:01:02.719 align:start position:0%
order of these you can't change the
 

00:01:02.719 --> 00:01:04.549 align:start position:0%
order of these you can't change the
relative<00:01:03.280><c> order</c><00:01:03.680><c> of</c><00:01:03.840><c> characters</c><00:01:04.320><c> in</c><00:01:04.479><c> the</c>

00:01:04.549 --> 00:01:04.559 align:start position:0%
relative order of characters in the
 

00:01:04.559 --> 00:01:05.429 align:start position:0%
relative order of characters in the
subsequence

00:01:05.429 --> 00:01:05.439 align:start position:0%
subsequence
 

00:01:05.439 --> 00:01:08.310 align:start position:0%
subsequence
so<00:01:05.600><c> we're</c><00:01:05.840><c> given</c><00:01:06.159><c> an</c><00:01:06.320><c> example</c><00:01:07.040><c> s</c><00:01:07.360><c> and</c><00:01:07.600><c> t</c><00:01:07.920><c> so</c>

00:01:08.310 --> 00:01:08.320 align:start position:0%
so we're given an example s and t so
 

00:01:08.320 --> 00:01:09.510 align:start position:0%
so we're given an example s and t so
basically<00:01:08.799><c> these</c><00:01:09.040><c> are</c><00:01:09.119><c> both</c>

00:01:09.510 --> 00:01:09.520 align:start position:0%
basically these are both
 

00:01:09.520 --> 00:01:10.950 align:start position:0%
basically these are both
rapid<00:01:09.920><c> just</c><00:01:10.159><c> spelled</c><00:01:10.479><c> a</c><00:01:10.560><c> little</c><00:01:10.720><c> bit</c>

00:01:10.950 --> 00:01:10.960 align:start position:0%
rapid just spelled a little bit
 

00:01:10.960 --> 00:01:12.469 align:start position:0%
rapid just spelled a little bit
differently<00:01:11.280><c> right</c><00:01:11.439><c> this</c><00:01:11.600><c> one</c><00:01:11.760><c> has</c><00:01:12.000><c> an</c><00:01:12.159><c> extra</c>

00:01:12.469 --> 00:01:12.479 align:start position:0%
differently right this one has an extra
 

00:01:12.479 --> 00:01:12.710 align:start position:0%
differently right this one has an extra
b

00:01:12.710 --> 00:01:12.720 align:start position:0%
b
 

00:01:12.720 --> 00:01:14.230 align:start position:0%
b
in<00:01:12.880><c> it</c><00:01:12.960><c> so</c><00:01:13.119><c> how</c><00:01:13.280><c> many</c><00:01:13.600><c> different</c><00:01:14.000><c> sub</c>

00:01:14.230 --> 00:01:14.240 align:start position:0%
in it so how many different sub
 

00:01:14.240 --> 00:01:16.390 align:start position:0%
in it so how many different sub
sequences<00:01:15.040><c> of</c><00:01:15.280><c> this</c><00:01:15.520><c> string</c><00:01:16.000><c> s</c>

00:01:16.390 --> 00:01:16.400 align:start position:0%
sequences of this string s
 

00:01:16.400 --> 00:01:19.030 align:start position:0%
sequences of this string s
can<00:01:16.560><c> we</c><00:01:16.880><c> take</c><00:01:17.280><c> that</c><00:01:17.600><c> exactly</c><00:01:18.320><c> match</c><00:01:18.720><c> this</c>

00:01:19.030 --> 00:01:19.040 align:start position:0%
can we take that exactly match this
 

00:01:19.040 --> 00:01:19.910 align:start position:0%
can we take that exactly match this
string<00:01:19.439><c> t</c>

00:01:19.910 --> 00:01:19.920 align:start position:0%
string t
 

00:01:19.920 --> 00:01:21.590 align:start position:0%
string t
well<00:01:20.240><c> let's</c><00:01:20.479><c> look</c><00:01:20.799><c> character</c><00:01:21.119><c> by</c><00:01:21.360><c> character</c>

00:01:21.590 --> 00:01:21.600 align:start position:0%
well let's look character by character
 

00:01:21.600 --> 00:01:22.950 align:start position:0%
well let's look character by character
so<00:01:21.759><c> let's</c><00:01:21.920><c> start</c><00:01:22.159><c> at</c><00:01:22.240><c> the</c><00:01:22.320><c> first</c><00:01:22.560><c> character</c><00:01:22.880><c> of</c>

00:01:22.950 --> 00:01:22.960 align:start position:0%
so let's start at the first character of
 

00:01:22.960 --> 00:01:24.469 align:start position:0%
so let's start at the first character of
this<00:01:23.280><c> the</c><00:01:23.439><c> first</c><00:01:23.600><c> character</c><00:01:24.000><c> of</c><00:01:24.080><c> this</c>

00:01:24.469 --> 00:01:24.479 align:start position:0%
this the first character of this
 

00:01:24.479 --> 00:01:26.310 align:start position:0%
this the first character of this
they<00:01:24.720><c> exactly</c><00:01:25.200><c> match</c><00:01:25.520><c> each</c><00:01:25.680><c> other</c><00:01:25.920><c> right</c><00:01:26.080><c> so</c>

00:01:26.310 --> 00:01:26.320 align:start position:0%
they exactly match each other right so
 

00:01:26.320 --> 00:01:27.910 align:start position:0%
they exactly match each other right so
okay<00:01:26.560><c> that's</c><00:01:26.799><c> good</c><00:01:27.040><c> so</c><00:01:27.439><c> now</c><00:01:27.600><c> we're</c><00:01:27.759><c> going</c><00:01:27.840><c> to</c>

00:01:27.910 --> 00:01:27.920 align:start position:0%
okay that's good so now we're going to
 

00:01:27.920 --> 00:01:29.590 align:start position:0%
okay that's good so now we're going to
look<00:01:28.080><c> at</c><00:01:28.240><c> the</c><00:01:28.400><c> sub</c><00:01:28.720><c> problem</c><00:01:29.040><c> right</c><00:01:29.200><c> we</c><00:01:29.360><c> found</c>

00:01:29.590 --> 00:01:29.600 align:start position:0%
look at the sub problem right we found
 

00:01:29.600 --> 00:01:31.350 align:start position:0%
look at the sub problem right we found
these<00:01:29.840><c> two</c><00:01:30.000><c> match</c><00:01:30.320><c> exactly</c><00:01:30.799><c> now</c><00:01:30.960><c> how</c><00:01:31.119><c> many</c>

00:01:31.350 --> 00:01:31.360 align:start position:0%
these two match exactly now how many
 

00:01:31.360 --> 00:01:33.350 align:start position:0%
these two match exactly now how many
different<00:01:31.680><c> ways</c><00:01:32.000><c> can</c><00:01:32.240><c> these</c><00:01:32.560><c> sub</c><00:01:32.799><c> sequences</c>

00:01:33.350 --> 00:01:33.360 align:start position:0%
different ways can these sub sequences
 

00:01:33.360 --> 00:01:34.390 align:start position:0%
different ways can these sub sequences
match<00:01:33.680><c> each</c><00:01:33.840><c> other</c>

00:01:34.390 --> 00:01:34.400 align:start position:0%
match each other
 

00:01:34.400 --> 00:01:36.390 align:start position:0%
match each other
now<00:01:34.560><c> how</c><00:01:34.720><c> many</c><00:01:34.880><c> ways</c><00:01:35.119><c> can</c><00:01:35.280><c> we</c><00:01:35.439><c> get</c><00:01:35.759><c> this</c><00:01:36.000><c> string</c>

00:01:36.390 --> 00:01:36.400 align:start position:0%
now how many ways can we get this string
 

00:01:36.400 --> 00:01:37.990 align:start position:0%
now how many ways can we get this string
how<00:01:36.560><c> many</c><00:01:36.720><c> sub</c><00:01:36.960><c> sequences</c><00:01:37.439><c> of</c><00:01:37.520><c> it</c><00:01:37.600><c> can</c><00:01:37.759><c> we</c><00:01:37.840><c> get</c>

00:01:37.990 --> 00:01:38.000 align:start position:0%
how many sub sequences of it can we get
 

00:01:38.000 --> 00:01:39.830 align:start position:0%
how many sub sequences of it can we get
that<00:01:38.240><c> match</c><00:01:38.560><c> now</c><00:01:38.720><c> the</c><00:01:38.880><c> remainder</c><00:01:39.439><c> of</c><00:01:39.520><c> this</c>

00:01:39.830 --> 00:01:39.840 align:start position:0%
that match now the remainder of this
 

00:01:39.840 --> 00:01:40.310 align:start position:0%
that match now the remainder of this
string

00:01:40.310 --> 00:01:40.320 align:start position:0%
string
 

00:01:40.320 --> 00:01:42.149 align:start position:0%
string
now<00:01:40.479><c> we</c><00:01:40.720><c> see</c><00:01:41.280><c> again</c><00:01:41.680><c> both</c><00:01:41.920><c> of</c><00:01:42.000><c> these</c>

00:01:42.149 --> 00:01:42.159 align:start position:0%
now we see again both of these
 

00:01:42.159 --> 00:01:43.830 align:start position:0%
now we see again both of these
characters<00:01:42.640><c> are</c><00:01:42.799><c> a</c><00:01:43.040><c> so</c><00:01:43.200><c> so</c><00:01:43.439><c> far</c><00:01:43.600><c> they're</c>

00:01:43.830 --> 00:01:43.840 align:start position:0%
characters are a so so far they're
 

00:01:43.840 --> 00:01:45.990 align:start position:0%
characters are a so so far they're
exactly<00:01:44.240><c> matching</c><00:01:44.640><c> each</c><00:01:44.799><c> other</c><00:01:44.960><c> that's</c><00:01:45.280><c> good</c>

00:01:45.990 --> 00:01:46.000 align:start position:0%
exactly matching each other that's good
 

00:01:46.000 --> 00:01:48.310 align:start position:0%
exactly matching each other that's good
and<00:01:46.399><c> we</c><00:01:46.560><c> get</c><00:01:46.720><c> to</c><00:01:46.880><c> a</c><00:01:47.040><c> b</c><00:01:47.360><c> these</c><00:01:47.600><c> b's</c><00:01:47.920><c> match</c><00:01:48.159><c> each</c>

00:01:48.310 --> 00:01:48.320 align:start position:0%
and we get to a b these b's match each
 

00:01:48.320 --> 00:01:50.230 align:start position:0%
and we get to a b these b's match each
other<00:01:48.560><c> that's</c><00:01:48.880><c> also</c><00:01:49.119><c> good</c><00:01:49.280><c> so</c><00:01:49.520><c> so</c><00:01:49.759><c> far</c><00:01:50.000><c> we're</c>

00:01:50.230 --> 00:01:50.240 align:start position:0%
other that's also good so so far we're
 

00:01:50.240 --> 00:01:51.429 align:start position:0%
other that's also good so so far we're
getting<00:01:50.560><c> pretty</c><00:01:50.880><c> close</c>

00:01:51.429 --> 00:01:51.439 align:start position:0%
getting pretty close
 

00:01:51.439 --> 00:01:53.510 align:start position:0%
getting pretty close
to<00:01:51.600><c> getting</c><00:01:52.079><c> a</c><00:01:52.240><c> subsequence</c><00:01:52.880><c> of</c><00:01:53.040><c> this</c><00:01:53.280><c> to</c>

00:01:53.510 --> 00:01:53.520 align:start position:0%
to getting a subsequence of this to
 

00:01:53.520 --> 00:01:55.190 align:start position:0%
to getting a subsequence of this to
exactly<00:01:54.000><c> match</c><00:01:54.320><c> this</c><00:01:54.479><c> right</c><00:01:54.640><c> we</c><00:01:54.799><c> only</c><00:01:54.960><c> have</c><00:01:55.040><c> to</c>

00:01:55.190 --> 00:01:55.200 align:start position:0%
exactly match this right we only have to
 

00:01:55.200 --> 00:01:57.109 align:start position:0%
exactly match this right we only have to
match<00:01:55.520><c> three</c><00:01:55.920><c> more</c><00:01:56.159><c> characters</c>

00:01:57.109 --> 00:01:57.119 align:start position:0%
match three more characters
 

00:01:57.119 --> 00:02:00.550 align:start position:0%
match three more characters
we<00:01:57.280><c> see</c><00:01:57.600><c> another</c><00:01:58.000><c> b</c><00:01:58.560><c> that's</c><00:01:58.880><c> good</c><00:02:00.000><c> but</c><00:02:00.240><c> now</c><00:02:00.399><c> we</c>

00:02:00.550 --> 00:02:00.560 align:start position:0%
we see another b that's good but now we
 

00:02:00.560 --> 00:02:02.389 align:start position:0%
we see another b that's good but now we
see<00:02:00.799><c> we're</c><00:02:01.040><c> looking</c><00:02:01.280><c> for</c><00:02:01.520><c> an</c><00:02:01.680><c> i</c><00:02:01.920><c> right</c><00:02:02.079><c> we</c><00:02:02.240><c> need</c>

00:02:02.389 --> 00:02:02.399 align:start position:0%
see we're looking for an i right we need
 

00:02:02.399 --> 00:02:02.950 align:start position:0%
see we're looking for an i right we need
an<00:02:02.640><c> i</c>

00:02:02.950 --> 00:02:02.960 align:start position:0%
an i
 

00:02:02.960 --> 00:02:05.190 align:start position:0%
an i
and<00:02:03.119><c> a</c><00:02:03.280><c> t</c><00:02:03.759><c> so</c><00:02:03.920><c> that</c><00:02:04.079><c> we</c><00:02:04.159><c> can</c><00:02:04.320><c> create</c><00:02:04.640><c> an</c><00:02:04.799><c> exact</c>

00:02:05.190 --> 00:02:05.200 align:start position:0%
and a t so that we can create an exact
 

00:02:05.200 --> 00:02:06.469 align:start position:0%
and a t so that we can create an exact
subsequence<00:02:05.840><c> of</c><00:02:05.920><c> this</c><00:02:06.159><c> but</c>

00:02:06.469 --> 00:02:06.479 align:start position:0%
subsequence of this but
 

00:02:06.479 --> 00:02:08.550 align:start position:0%
subsequence of this but
so<00:02:06.719><c> far</c><00:02:06.960><c> we</c><00:02:07.040><c> have</c><00:02:07.200><c> a</c><00:02:07.439><c> b</c><00:02:07.759><c> right</c><00:02:08.000><c> so</c><00:02:08.160><c> what</c><00:02:08.319><c> are</c><00:02:08.479><c> we</c>

00:02:08.550 --> 00:02:08.560 align:start position:0%
so far we have a b right so what are we
 

00:02:08.560 --> 00:02:10.070 align:start position:0%
so far we have a b right so what are we
going<00:02:08.640><c> to</c><00:02:08.800><c> do</c><00:02:09.039><c> in</c><00:02:09.200><c> this</c><00:02:09.440><c> case</c>

00:02:10.070 --> 00:02:10.080 align:start position:0%
going to do in this case
 

00:02:10.080 --> 00:02:12.309 align:start position:0%
going to do in this case
so<00:02:10.479><c> far</c><00:02:10.800><c> what</c><00:02:10.959><c> we've</c><00:02:11.200><c> been</c><00:02:11.440><c> doing</c><00:02:11.760><c> is</c><00:02:12.000><c> we've</c>

00:02:12.309 --> 00:02:12.319 align:start position:0%
so far what we've been doing is we've
 

00:02:12.319 --> 00:02:14.710 align:start position:0%
so far what we've been doing is we've
been<00:02:12.879><c> basically</c><00:02:13.360><c> evaluating</c><00:02:14.080><c> this</c><00:02:14.400><c> we've</c>

00:02:14.710 --> 00:02:14.720 align:start position:0%
been basically evaluating this we've
 

00:02:14.720 --> 00:02:16.150 align:start position:0%
been basically evaluating this we've
seen<00:02:15.040><c> that</c><00:02:15.360><c> at</c><00:02:15.599><c> the</c><00:02:15.840><c> i</c>

00:02:16.150 --> 00:02:16.160 align:start position:0%
seen that at the i
 

00:02:16.160 --> 00:02:18.070 align:start position:0%
seen that at the i
pointer<00:02:16.480><c> which</c><00:02:16.640><c> is</c><00:02:16.720><c> corresponding</c><00:02:17.440><c> to</c><00:02:17.599><c> the</c>

00:02:18.070 --> 00:02:18.080 align:start position:0%
pointer which is corresponding to the
 

00:02:18.080 --> 00:02:19.830 align:start position:0%
pointer which is corresponding to the
string<00:02:18.560><c> s</c><00:02:18.959><c> and</c><00:02:19.040><c> the</c><00:02:19.200><c> j</c><00:02:19.440><c> pointers</c>

00:02:19.830 --> 00:02:19.840 align:start position:0%
string s and the j pointers
 

00:02:19.840 --> 00:02:21.350 align:start position:0%
string s and the j pointers
corresponding<00:02:20.400><c> to</c><00:02:20.560><c> string</c><00:02:20.879><c> t</c>

00:02:21.350 --> 00:02:21.360 align:start position:0%
corresponding to string t
 

00:02:21.360 --> 00:02:23.510 align:start position:0%
corresponding to string t
if<00:02:21.520><c> the</c><00:02:21.760><c> characters</c><00:02:22.400><c> at</c><00:02:22.560><c> those</c><00:02:22.800><c> corresponding</c>

00:02:23.510 --> 00:02:23.520 align:start position:0%
if the characters at those corresponding
 

00:02:23.520 --> 00:02:25.030 align:start position:0%
if the characters at those corresponding
positions<00:02:24.160><c> match</c><00:02:24.480><c> each</c><00:02:24.720><c> other</c>

00:02:25.030 --> 00:02:25.040 align:start position:0%
positions match each other
 

00:02:25.040 --> 00:02:27.030 align:start position:0%
positions match each other
we're<00:02:25.280><c> basically</c><00:02:25.760><c> just</c><00:02:26.080><c> incrementing</c><00:02:26.720><c> both</c>

00:02:27.030 --> 00:02:27.040 align:start position:0%
we're basically just incrementing both
 

00:02:27.040 --> 00:02:28.630 align:start position:0%
we're basically just incrementing both
indices<00:02:27.520><c> right</c><00:02:27.680><c> because</c><00:02:28.080><c> we're</c><00:02:28.239><c> just</c><00:02:28.400><c> trying</c>

00:02:28.630 --> 00:02:28.640 align:start position:0%
indices right because we're just trying
 

00:02:28.640 --> 00:02:30.229 align:start position:0%
indices right because we're just trying
to<00:02:28.800><c> match</c><00:02:29.120><c> that</c><00:02:29.360><c> string</c><00:02:29.840><c> t</c>

00:02:30.229 --> 00:02:30.239 align:start position:0%
to match that string t
 

00:02:30.239 --> 00:02:31.910 align:start position:0%
to match that string t
right<00:02:30.400><c> so</c><00:02:30.640><c> if</c><00:02:30.800><c> both</c><00:02:31.040><c> of</c><00:02:31.120><c> the</c><00:02:31.200><c> characters</c><00:02:31.599><c> match</c>

00:02:31.910 --> 00:02:31.920 align:start position:0%
right so if both of the characters match
 

00:02:31.920 --> 00:02:33.990 align:start position:0%
right so if both of the characters match
we<00:02:32.080><c> can</c><00:02:32.239><c> continue</c><00:02:32.640><c> to</c><00:02:32.800><c> move</c><00:02:33.120><c> on</c><00:02:33.440><c> right</c>

00:02:33.990 --> 00:02:34.000 align:start position:0%
we can continue to move on right
 

00:02:34.000 --> 00:02:36.150 align:start position:0%
we can continue to move on right
so<00:02:34.319><c> this</c><00:02:34.560><c> is</c><00:02:34.800><c> going</c><00:02:35.040><c> to</c><00:02:35.200><c> be</c><00:02:35.440><c> the</c><00:02:35.760><c> else</c>

00:02:36.150 --> 00:02:36.160 align:start position:0%
so this is going to be the else
 

00:02:36.160 --> 00:02:38.229 align:start position:0%
so this is going to be the else
condition<00:02:36.640><c> where</c><00:02:36.879><c> we</c><00:02:37.120><c> just</c><00:02:37.440><c> got</c><00:02:37.680><c> to</c><00:02:37.840><c> right</c><00:02:38.080><c> now</c>

00:02:38.229 --> 00:02:38.239 align:start position:0%
condition where we just got to right now
 

00:02:38.239 --> 00:02:39.110 align:start position:0%
condition where we just got to right now
right<00:02:38.400><c> we're</c><00:02:38.560><c> looking</c><00:02:38.879><c> at</c>

00:02:39.110 --> 00:02:39.120 align:start position:0%
right we're looking at
 

00:02:39.120 --> 00:02:42.150 align:start position:0%
right we're looking at
b<00:02:39.680><c> in</c><00:02:39.840><c> the</c><00:02:40.000><c> string</c><00:02:40.400><c> s</c><00:02:40.640><c> and</c><00:02:40.879><c> i</c><00:02:41.280><c> in</c><00:02:41.440><c> the</c><00:02:41.519><c> string</c><00:02:41.920><c> t</c>

00:02:42.150 --> 00:02:42.160 align:start position:0%
b in the string s and i in the string t
 

00:02:42.160 --> 00:02:43.910 align:start position:0%
b in the string s and i in the string t
right<00:02:42.400><c> they</c><00:02:42.640><c> don't</c><00:02:42.959><c> match</c><00:02:43.280><c> each</c><00:02:43.440><c> other</c><00:02:43.760><c> so</c>

00:02:43.910 --> 00:02:43.920 align:start position:0%
right they don't match each other so
 

00:02:43.920 --> 00:02:45.270 align:start position:0%
right they don't match each other so
what<00:02:44.080><c> we're</c><00:02:44.319><c> going</c><00:02:44.400><c> to</c><00:02:44.480><c> do</c><00:02:44.720><c> is</c><00:02:44.879><c> we're</c><00:02:45.040><c> going</c><00:02:45.120><c> to</c>

00:02:45.270 --> 00:02:45.280 align:start position:0%
what we're going to do is we're going to
 

00:02:45.280 --> 00:02:45.589 align:start position:0%
what we're going to do is we're going to
take

00:02:45.589 --> 00:02:45.599 align:start position:0%
take
 

00:02:45.599 --> 00:02:47.430 align:start position:0%
take
i<00:02:46.080><c> and</c><00:02:46.239><c> increment</c><00:02:46.640><c> it</c><00:02:46.800><c> by</c><00:02:46.959><c> one</c><00:02:47.120><c> we're</c><00:02:47.280><c> going</c><00:02:47.360><c> to</c>

00:02:47.430 --> 00:02:47.440 align:start position:0%
i and increment it by one we're going to
 

00:02:47.440 --> 00:02:49.110 align:start position:0%
i and increment it by one we're going to
take<00:02:47.920><c> the</c><00:02:48.319><c> i</c><00:02:48.560><c> pointer</c>

00:02:49.110 --> 00:02:49.120 align:start position:0%
take the i pointer
 

00:02:49.120 --> 00:02:51.830 align:start position:0%
take the i pointer
and<00:02:49.200><c> then</c><00:02:49.440><c> shift</c><00:02:49.760><c> it</c><00:02:50.160><c> to</c><00:02:50.319><c> this</c><00:02:50.720><c> next</c><00:02:51.040><c> character</c>

00:02:51.830 --> 00:02:51.840 align:start position:0%
and then shift it to this next character
 

00:02:51.840 --> 00:02:52.710 align:start position:0%
and then shift it to this next character
over<00:02:52.160><c> here</c>

00:02:52.710 --> 00:02:52.720 align:start position:0%
over here
 

00:02:52.720 --> 00:02:55.110 align:start position:0%
over here
right<00:02:53.360><c> why</c><00:02:53.599><c> are</c><00:02:53.680><c> we</c><00:02:53.840><c> leaving</c><00:02:54.319><c> j</c><00:02:54.640><c> the</c><00:02:54.800><c> same</c>

00:02:55.110 --> 00:02:55.120 align:start position:0%
right why are we leaving j the same
 

00:02:55.120 --> 00:02:56.790 align:start position:0%
right why are we leaving j the same
though<00:02:55.280><c> basically</c><00:02:55.680><c> our</c><00:02:55.840><c> j</c><00:02:56.080><c> pointer</c><00:02:56.480><c> is</c><00:02:56.640><c> over</c>

00:02:56.790 --> 00:02:56.800 align:start position:0%
though basically our j pointer is over
 

00:02:56.800 --> 00:02:58.550 align:start position:0%
though basically our j pointer is over
here<00:02:57.120><c> and</c><00:02:57.200><c> it's</c><00:02:57.360><c> going</c><00:02:57.440><c> to</c><00:02:57.680><c> stay</c><00:02:58.080><c> at</c><00:02:58.319><c> this</c>

00:02:58.550 --> 00:02:58.560 align:start position:0%
here and it's going to stay at this
 

00:02:58.560 --> 00:02:59.270 align:start position:0%
here and it's going to stay at this
character

00:02:59.270 --> 00:02:59.280 align:start position:0%
character
 

00:02:59.280 --> 00:03:01.030 align:start position:0%
character
why<00:02:59.519><c> is</c><00:02:59.599><c> it</c><00:02:59.760><c> staying</c><00:03:00.080><c> here</c><00:03:00.239><c> because</c><00:03:00.800><c> it's</c>

00:03:01.030 --> 00:03:01.040 align:start position:0%
why is it staying here because it's
 

00:03:01.040 --> 00:03:02.790 align:start position:0%
why is it staying here because it's
required<00:03:01.920><c> for</c><00:03:02.239><c> us</c><00:03:02.400><c> to</c>

00:03:02.790 --> 00:03:02.800 align:start position:0%
required for us to
 

00:03:02.800 --> 00:03:05.430 align:start position:0%
required for us to
match<00:03:03.280><c> every</c><00:03:03.680><c> single</c><00:03:04.080><c> character</c><00:03:04.480><c> in</c><00:03:04.640><c> string</c><00:03:05.120><c> t</c>

00:03:05.430 --> 00:03:05.440 align:start position:0%
match every single character in string t
 

00:03:05.440 --> 00:03:07.190 align:start position:0%
match every single character in string t
right<00:03:05.760><c> that's</c><00:03:06.080><c> what</c><00:03:06.239><c> the</c><00:03:06.480><c> goal</c><00:03:06.800><c> of</c><00:03:06.879><c> this</c>

00:03:07.190 --> 00:03:07.200 align:start position:0%
right that's what the goal of this
 

00:03:07.200 --> 00:03:09.270 align:start position:0%
right that's what the goal of this
problem<00:03:07.599><c> is</c><00:03:07.840><c> we</c><00:03:08.000><c> need</c><00:03:08.239><c> all</c><00:03:08.480><c> sub</c><00:03:08.720><c> sequences</c>

00:03:09.270 --> 00:03:09.280 align:start position:0%
problem is we need all sub sequences
 

00:03:09.280 --> 00:03:09.990 align:start position:0%
problem is we need all sub sequences
from<00:03:09.599><c> s</c>

00:03:09.990 --> 00:03:10.000 align:start position:0%
from s
 

00:03:10.000 --> 00:03:12.390 align:start position:0%
from s
that<00:03:10.239><c> exactly</c><00:03:10.959><c> match</c><00:03:11.440><c> t</c><00:03:11.760><c> so</c><00:03:11.920><c> what</c><00:03:12.000><c> we're</c><00:03:12.159><c> doing</c>

00:03:12.390 --> 00:03:12.400 align:start position:0%
that exactly match t so what we're doing
 

00:03:12.400 --> 00:03:14.550 align:start position:0%
that exactly match t so what we're doing
is<00:03:12.560><c> so</c><00:03:12.879><c> for</c><00:03:13.120><c> now</c><00:03:13.360><c> we're</c><00:03:13.519><c> just</c><00:03:13.680><c> saying</c><00:03:13.920><c> this</c><00:03:14.239><c> b</c>

00:03:14.550 --> 00:03:14.560 align:start position:0%
is so for now we're just saying this b
 

00:03:14.560 --> 00:03:16.309 align:start position:0%
is so for now we're just saying this b
we're<00:03:14.800><c> skipping</c><00:03:15.280><c> it</c><00:03:15.440><c> right</c><00:03:15.920><c> now</c><00:03:16.080><c> we're</c><00:03:16.239><c> going</c>

00:03:16.309 --> 00:03:16.319 align:start position:0%
we're skipping it right now we're going
 

00:03:16.319 --> 00:03:17.750 align:start position:0%
we're skipping it right now we're going
to<00:03:16.400><c> look</c><00:03:16.640><c> at</c><00:03:16.720><c> the</c><00:03:16.800><c> next</c><00:03:17.040><c> character</c><00:03:17.440><c> maybe</c>

00:03:17.750 --> 00:03:17.760 align:start position:0%
to look at the next character maybe
 

00:03:17.760 --> 00:03:19.190 align:start position:0%
to look at the next character maybe
there's<00:03:17.920><c> some</c><00:03:18.159><c> ways</c><00:03:18.400><c> that</c><00:03:18.480><c> we</c><00:03:18.640><c> can</c><00:03:18.800><c> match</c><00:03:19.040><c> the</c>

00:03:19.190 --> 00:03:19.200 align:start position:0%
there's some ways that we can match the
 

00:03:19.200 --> 00:03:20.790 align:start position:0%
there's some ways that we can match the
remainder<00:03:19.760><c> of</c><00:03:19.920><c> this</c><00:03:20.159><c> string</c>

00:03:20.790 --> 00:03:20.800 align:start position:0%
remainder of this string
 

00:03:20.800 --> 00:03:23.190 align:start position:0%
remainder of this string
to<00:03:21.040><c> this</c><00:03:21.280><c> string</c><00:03:22.000><c> okay</c><00:03:22.239><c> so</c><00:03:22.480><c> now</c><00:03:22.800><c> our</c><00:03:23.040><c> eye</c>

00:03:23.190 --> 00:03:23.200 align:start position:0%
to this string okay so now our eye
 

00:03:23.200 --> 00:03:24.309 align:start position:0%
to this string okay so now our eye
pointer<00:03:23.519><c> is</c><00:03:23.680><c> at</c><00:03:23.840><c> this</c>

00:03:24.309 --> 00:03:24.319 align:start position:0%
pointer is at this
 

00:03:24.319 --> 00:03:26.229 align:start position:0%
pointer is at this
character<00:03:24.799><c> i</c><00:03:25.040><c> our</c><00:03:25.280><c> j</c><00:03:25.519><c> pointers</c><00:03:25.920><c> at</c><00:03:26.000><c> this</c>

00:03:26.229 --> 00:03:26.239 align:start position:0%
character i our j pointers at this
 

00:03:26.239 --> 00:03:27.670 align:start position:0%
character i our j pointers at this
character<00:03:26.640><c> i</c><00:03:26.799><c> so</c><00:03:27.040><c> in</c><00:03:27.120><c> this</c><00:03:27.280><c> case</c><00:03:27.519><c> the</c>

00:03:27.670 --> 00:03:27.680 align:start position:0%
character i so in this case the
 

00:03:27.680 --> 00:03:29.190 align:start position:0%
character i so in this case the
characters<00:03:28.080><c> do</c><00:03:28.319><c> match</c><00:03:28.640><c> each</c><00:03:28.799><c> other</c><00:03:28.959><c> so</c><00:03:29.040><c> what</c>

00:03:29.190 --> 00:03:29.200 align:start position:0%
characters do match each other so what
 

00:03:29.200 --> 00:03:30.070 align:start position:0%
characters do match each other so what
are<00:03:29.280><c> we</c><00:03:29.440><c> going</c><00:03:29.519><c> to</c><00:03:29.599><c> do</c>

00:03:30.070 --> 00:03:30.080 align:start position:0%
are we going to do
 

00:03:30.080 --> 00:03:31.830 align:start position:0%
are we going to do
similarly<00:03:30.560><c> to</c><00:03:30.640><c> what</c><00:03:30.799><c> we</c><00:03:30.879><c> did</c><00:03:31.120><c> before</c><00:03:31.680><c> we're</c>

00:03:31.830 --> 00:03:31.840 align:start position:0%
similarly to what we did before we're
 

00:03:31.840 --> 00:03:34.229 align:start position:0%
similarly to what we did before we're
going<00:03:31.920><c> to</c><00:03:32.080><c> increment</c><00:03:32.560><c> both</c><00:03:32.799><c> indices</c><00:03:33.280><c> by</c><00:03:33.519><c> one</c>

00:03:34.229 --> 00:03:34.239 align:start position:0%
going to increment both indices by one
 

00:03:34.239 --> 00:03:36.309 align:start position:0%
going to increment both indices by one
we<00:03:34.400><c> can</c><00:03:35.040><c> move</c><00:03:35.360><c> to</c><00:03:35.519><c> the</c><00:03:35.599><c> next</c><00:03:35.840><c> position</c><00:03:36.159><c> so</c>

00:03:36.309 --> 00:03:36.319 align:start position:0%
we can move to the next position so
 

00:03:36.319 --> 00:03:38.390 align:start position:0%
we can move to the next position so
we're<00:03:36.480><c> at</c><00:03:36.720><c> this</c><00:03:36.959><c> character</c><00:03:37.440><c> now</c><00:03:37.760><c> in</c><00:03:38.000><c> s</c><00:03:38.239><c> we're</c>

00:03:38.390 --> 00:03:38.400 align:start position:0%
we're at this character now in s we're
 

00:03:38.400 --> 00:03:39.509 align:start position:0%
we're at this character now in s we're
at<00:03:38.560><c> this</c><00:03:38.799><c> character</c><00:03:39.200><c> now</c>

00:03:39.509 --> 00:03:39.519 align:start position:0%
at this character now
 

00:03:39.519 --> 00:03:42.390 align:start position:0%
at this character now
in<00:03:39.680><c> t</c><00:03:40.080><c> once</c><00:03:40.480><c> again</c><00:03:41.040><c> these</c><00:03:41.280><c> characters</c><00:03:41.760><c> exactly</c>

00:03:42.390 --> 00:03:42.400 align:start position:0%
in t once again these characters exactly
 

00:03:42.400 --> 00:03:43.430 align:start position:0%
in t once again these characters exactly
match<00:03:42.720><c> each</c><00:03:42.879><c> other</c>

00:03:43.430 --> 00:03:43.440 align:start position:0%
match each other
 

00:03:43.440 --> 00:03:45.030 align:start position:0%
match each other
right<00:03:43.680><c> so</c><00:03:43.840><c> once</c><00:03:44.159><c> again</c><00:03:44.400><c> we're</c><00:03:44.640><c> going</c><00:03:44.720><c> to</c><00:03:44.799><c> take</c>

00:03:45.030 --> 00:03:45.040 align:start position:0%
right so once again we're going to take
 

00:03:45.040 --> 00:03:47.270 align:start position:0%
right so once again we're going to take
both<00:03:45.360><c> pointers</c><00:03:45.840><c> and</c><00:03:46.080><c> shift</c><00:03:46.319><c> them</c><00:03:46.480><c> by</c><00:03:46.799><c> one</c>

00:03:47.270 --> 00:03:47.280 align:start position:0%
both pointers and shift them by one
 

00:03:47.280 --> 00:03:49.990 align:start position:0%
both pointers and shift them by one
now<00:03:47.519><c> we</c><00:03:47.760><c> get</c><00:03:48.000><c> to</c><00:03:48.239><c> a</c><00:03:48.480><c> base</c><00:03:48.879><c> case</c><00:03:49.200><c> right</c><00:03:49.599><c> both</c>

00:03:49.990 --> 00:03:50.000 align:start position:0%
now we get to a base case right both
 

00:03:50.000 --> 00:03:50.949 align:start position:0%
now we get to a base case right both
strings<00:03:50.640><c> are</c>

00:03:50.949 --> 00:03:50.959 align:start position:0%
strings are
 

00:03:50.959 --> 00:03:53.350 align:start position:0%
strings are
empty<00:03:52.000><c> so</c><00:03:52.239><c> what</c><00:03:52.400><c> are</c><00:03:52.480><c> we</c><00:03:52.640><c> going</c><00:03:52.720><c> to</c><00:03:52.799><c> return</c><00:03:53.280><c> in</c>

00:03:53.350 --> 00:03:53.360 align:start position:0%
empty so what are we going to return in
 

00:03:53.360 --> 00:03:55.270 align:start position:0%
empty so what are we going to return in
that<00:03:53.599><c> case</c><00:03:53.920><c> basically</c><00:03:54.480><c> that</c><00:03:54.640><c> tells</c><00:03:54.959><c> us</c><00:03:55.120><c> we</c>

00:03:55.270 --> 00:03:55.280 align:start position:0%
that case basically that tells us we
 

00:03:55.280 --> 00:03:57.270 align:start position:0%
that case basically that tells us we
went<00:03:55.519><c> through</c><00:03:55.840><c> every</c><00:03:56.080><c> single</c><00:03:56.400><c> character</c><00:03:56.799><c> in</c><00:03:56.959><c> t</c>

00:03:57.270 --> 00:03:57.280 align:start position:0%
went through every single character in t
 

00:03:57.280 --> 00:03:58.789 align:start position:0%
went through every single character in t
right<00:03:57.599><c> and</c><00:03:57.680><c> we</c><00:03:57.840><c> matched</c><00:03:58.319><c> every</c><00:03:58.480><c> single</c>

00:03:58.789 --> 00:03:58.799 align:start position:0%
right and we matched every single
 

00:03:58.799 --> 00:04:00.470 align:start position:0%
right and we matched every single
character<00:03:59.360><c> now</c><00:03:59.519><c> there's</c><00:03:59.760><c> no</c><00:04:00.000><c> characters</c>

00:04:00.470 --> 00:04:00.480 align:start position:0%
character now there's no characters
 

00:04:00.480 --> 00:04:02.149 align:start position:0%
character now there's no characters
remaining<00:04:00.879><c> right</c><00:04:01.040><c> so</c><00:04:01.200><c> what</c><00:04:01.360><c> would</c><00:04:01.519><c> the</c><00:04:01.840><c> count</c>

00:04:02.149 --> 00:04:02.159 align:start position:0%
remaining right so what would the count
 

00:04:02.159 --> 00:04:03.190 align:start position:0%
remaining right so what would the count
be<00:04:02.400><c> in</c><00:04:02.560><c> that</c><00:04:02.720><c> case</c>

00:04:03.190 --> 00:04:03.200 align:start position:0%
be in that case
 

00:04:03.200 --> 00:04:05.750 align:start position:0%
be in that case
how<00:04:03.360><c> many</c><00:04:03.599><c> subsequences</c><00:04:04.560><c> of</c><00:04:04.799><c> an</c><00:04:04.959><c> empty</c><00:04:05.280><c> string</c>

00:04:05.750 --> 00:04:05.760 align:start position:0%
how many subsequences of an empty string
 

00:04:05.760 --> 00:04:06.550 align:start position:0%
how many subsequences of an empty string
can<00:04:05.920><c> we</c><00:04:06.080><c> match</c>

00:04:06.550 --> 00:04:06.560 align:start position:0%
can we match
 

00:04:06.560 --> 00:04:08.710 align:start position:0%
can we match
to<00:04:06.720><c> another</c><00:04:07.200><c> empty</c><00:04:07.519><c> string</c><00:04:07.920><c> basically</c><00:04:08.400><c> just</c>

00:04:08.710 --> 00:04:08.720 align:start position:0%
to another empty string basically just
 

00:04:08.720 --> 00:04:10.229 align:start position:0%
to another empty string basically just
one<00:04:08.959><c> right</c><00:04:09.200><c> that's</c><00:04:09.439><c> our</c><00:04:09.519><c> base</c><00:04:09.840><c> case</c><00:04:10.000><c> we're</c>

00:04:10.229 --> 00:04:10.239 align:start position:0%
one right that's our base case we're
 

00:04:10.239 --> 00:04:11.670 align:start position:0%
one right that's our base case we're
returning<00:04:10.720><c> one</c><00:04:11.040><c> now</c>

00:04:11.670 --> 00:04:11.680 align:start position:0%
returning one now
 

00:04:11.680 --> 00:04:13.910 align:start position:0%
returning one now
but<00:04:11.920><c> my</c><00:04:12.239><c> question</c><00:04:12.640><c> to</c><00:04:12.799><c> you</c><00:04:13.120><c> is</c><00:04:13.360><c> hold</c><00:04:13.599><c> on</c><00:04:13.840><c> a</c>

00:04:13.910 --> 00:04:13.920 align:start position:0%
but my question to you is hold on a
 

00:04:13.920 --> 00:04:15.270 align:start position:0%
but my question to you is hold on a
minute<00:04:14.319><c> we're</c><00:04:14.480><c> returning</c>

00:04:15.270 --> 00:04:15.280 align:start position:0%
minute we're returning
 

00:04:15.280 --> 00:04:17.349 align:start position:0%
minute we're returning
one<00:04:15.599><c> right</c><00:04:15.840><c> so</c><00:04:16.160><c> our</c><00:04:16.400><c> result</c><00:04:16.799><c> happens</c><00:04:17.120><c> to</c><00:04:17.199><c> be</c>

00:04:17.349 --> 00:04:17.359 align:start position:0%
one right so our result happens to be
 

00:04:17.359 --> 00:04:19.509 align:start position:0%
one right so our result happens to be
one<00:04:17.600><c> but</c><00:04:17.840><c> in</c><00:04:17.919><c> this</c><00:04:18.239><c> problem</c><00:04:18.639><c> description</c><00:04:19.280><c> they</c>

00:04:19.509 --> 00:04:19.519 align:start position:0%
one but in this problem description they
 

00:04:19.519 --> 00:04:20.710 align:start position:0%
one but in this problem description they
return<00:04:19.840><c> to</c><00:04:20.079><c> three</c>

00:04:20.710 --> 00:04:20.720 align:start position:0%
return to three
 

00:04:20.720 --> 00:04:22.629 align:start position:0%
return to three
why<00:04:21.040><c> is</c><00:04:21.280><c> that</c><00:04:21.519><c> how</c><00:04:21.680><c> did</c><00:04:21.840><c> they</c><00:04:22.000><c> get</c><00:04:22.320><c> three</c>

00:04:22.629 --> 00:04:22.639 align:start position:0%
why is that how did they get three
 

00:04:22.639 --> 00:04:23.990 align:start position:0%
why is that how did they get three
different<00:04:22.960><c> ways</c><00:04:23.199><c> when</c><00:04:23.440><c> our</c><00:04:23.600><c> current</c>

00:04:23.990 --> 00:04:24.000 align:start position:0%
different ways when our current
 

00:04:24.000 --> 00:04:24.710 align:start position:0%
different ways when our current
algorithm

00:04:24.710 --> 00:04:24.720 align:start position:0%
algorithm
 

00:04:24.720 --> 00:04:26.550 align:start position:0%
algorithm
that<00:04:24.880><c> i've</c><00:04:25.040><c> shown</c><00:04:25.280><c> you</c><00:04:25.520><c> these</c><00:04:25.680><c> two</c><00:04:25.919><c> conditions</c>

00:04:26.550 --> 00:04:26.560 align:start position:0%
that i've shown you these two conditions
 

00:04:26.560 --> 00:04:28.230 align:start position:0%
that i've shown you these two conditions
only<00:04:26.800><c> gave</c><00:04:27.040><c> us</c><00:04:27.280><c> a</c><00:04:27.360><c> single</c><00:04:27.759><c> one</c>

00:04:28.230 --> 00:04:28.240 align:start position:0%
only gave us a single one
 

00:04:28.240 --> 00:04:30.150 align:start position:0%
only gave us a single one
so<00:04:28.479><c> what</c><00:04:28.639><c> did</c><00:04:28.800><c> we</c><00:04:29.040><c> end</c><00:04:29.199><c> up</c><00:04:29.360><c> missing</c><00:04:29.759><c> well</c><00:04:29.919><c> let's</c>

00:04:30.150 --> 00:04:30.160 align:start position:0%
so what did we end up missing well let's
 

00:04:30.160 --> 00:04:31.909 align:start position:0%
so what did we end up missing well let's
take<00:04:30.400><c> a</c><00:04:30.479><c> look</c><00:04:30.639><c> at</c><00:04:30.720><c> their</c><00:04:31.040><c> explanation</c><00:04:31.759><c> over</c>

00:04:31.909 --> 00:04:31.919 align:start position:0%
take a look at their explanation over
 

00:04:31.919 --> 00:04:33.510 align:start position:0%
take a look at their explanation over
here<00:04:32.160><c> they</c><00:04:32.320><c> say</c><00:04:32.560><c> there's</c><00:04:32.880><c> three</c><00:04:33.120><c> different</c>

00:04:33.510 --> 00:04:33.520 align:start position:0%
here they say there's three different
 

00:04:33.520 --> 00:04:34.790 align:start position:0%
here they say there's three different
ways<00:04:33.919><c> why</c><00:04:34.240><c> is</c><00:04:34.479><c> that</c>

00:04:34.790 --> 00:04:34.800 align:start position:0%
ways why is that
 

00:04:34.800 --> 00:04:36.710 align:start position:0%
ways why is that
well<00:04:35.040><c> when</c><00:04:35.199><c> you</c><00:04:35.360><c> take</c><00:04:35.600><c> a</c><00:04:35.680><c> look</c><00:04:35.919><c> at</c><00:04:36.000><c> the</c><00:04:36.400><c> b</c>

00:04:36.710 --> 00:04:36.720 align:start position:0%
well when you take a look at the b
 

00:04:36.720 --> 00:04:38.469 align:start position:0%
well when you take a look at the b
characters<00:04:37.280><c> right</c><00:04:37.759><c> what</c><00:04:38.080><c> we</c>

00:04:38.469 --> 00:04:38.479 align:start position:0%
characters right what we
 

00:04:38.479 --> 00:04:41.670 align:start position:0%
characters right what we
said<00:04:39.199><c> what</c><00:04:39.360><c> we</c><00:04:39.600><c> originally</c><00:04:40.160><c> said</c><00:04:40.400><c> is</c><00:04:40.720><c> this</c><00:04:41.120><c> b</c>

00:04:41.670 --> 00:04:41.680 align:start position:0%
said what we originally said is this b
 

00:04:41.680 --> 00:04:44.230 align:start position:0%
said what we originally said is this b
is<00:04:41.840><c> gonna</c><00:04:42.240><c> match</c><00:04:42.880><c> this</c><00:04:43.199><c> b</c><00:04:43.440><c> for</c><00:04:43.680><c> sure</c><00:04:44.080><c> and</c>

00:04:44.230 --> 00:04:44.240 align:start position:0%
is gonna match this b for sure and
 

00:04:44.240 --> 00:04:46.230 align:start position:0%
is gonna match this b for sure and
that's<00:04:44.560><c> the</c><00:04:44.800><c> only</c><00:04:45.280><c> way</c><00:04:45.600><c> that</c><00:04:45.840><c> we</c>

00:04:46.230 --> 00:04:46.240 align:start position:0%
that's the only way that we
 

00:04:46.240 --> 00:04:49.030 align:start position:0%
that's the only way that we
did<00:04:46.479><c> it</c><00:04:46.720><c> but</c><00:04:46.960><c> we</c><00:04:47.520><c> and</c><00:04:47.680><c> then</c><00:04:48.000><c> basically</c><00:04:48.479><c> we</c><00:04:48.639><c> took</c>

00:04:49.030 --> 00:04:49.040 align:start position:0%
did it but we and then basically we took
 

00:04:49.040 --> 00:04:50.390 align:start position:0%
did it but we and then basically we took
like<00:04:49.280><c> over</c><00:04:49.440><c> here</c><00:04:49.600><c> you</c><00:04:49.680><c> can</c><00:04:49.759><c> see</c><00:04:49.919><c> we</c><00:04:50.080><c> took</c><00:04:50.320><c> our</c>

00:04:50.390 --> 00:04:50.400 align:start position:0%
like over here you can see we took our
 

00:04:50.400 --> 00:04:51.990 align:start position:0%
like over here you can see we took our
pointers<00:04:50.720><c> and</c><00:04:50.880><c> incremented</c><00:04:51.440><c> them</c><00:04:51.600><c> both</c><00:04:51.840><c> by</c>

00:04:51.990 --> 00:04:52.000 align:start position:0%
pointers and incremented them both by
 

00:04:52.000 --> 00:04:53.510 align:start position:0%
pointers and incremented them both by
one<00:04:52.160><c> then</c><00:04:52.320><c> we</c><00:04:52.479><c> went</c><00:04:52.639><c> to</c><00:04:52.720><c> the</c><00:04:52.800><c> next</c><00:04:53.120><c> b</c>

00:04:53.510 --> 00:04:53.520 align:start position:0%
one then we went to the next b
 

00:04:53.520 --> 00:04:55.590 align:start position:0%
one then we went to the next b
but<00:04:53.759><c> that</c><00:04:54.000><c> doesn't</c><00:04:54.400><c> necessarily</c><00:04:55.199><c> have</c><00:04:55.360><c> to</c><00:04:55.440><c> be</c>

00:04:55.590 --> 00:04:55.600 align:start position:0%
but that doesn't necessarily have to be
 

00:04:55.600 --> 00:04:57.749 align:start position:0%
but that doesn't necessarily have to be
the<00:04:55.840><c> case</c><00:04:56.479><c> isn't</c><00:04:56.800><c> it</c><00:04:56.960><c> possible</c>

00:04:57.749 --> 00:04:57.759 align:start position:0%
the case isn't it possible
 

00:04:57.759 --> 00:04:59.909 align:start position:0%
the case isn't it possible
just<00:04:58.080><c> because</c><00:04:58.639><c> these</c><00:04:58.880><c> characters</c><00:04:59.440><c> match</c>

00:04:59.909 --> 00:04:59.919 align:start position:0%
just because these characters match
 

00:04:59.919 --> 00:05:00.790 align:start position:0%
just because these characters match
doesn't<00:05:00.400><c> mean</c>

00:05:00.790 --> 00:05:00.800 align:start position:0%
doesn't mean
 

00:05:00.800 --> 00:05:03.029 align:start position:0%
doesn't mean
we<00:05:00.960><c> have</c><00:05:01.120><c> to</c><00:05:01.280><c> require</c><00:05:01.919><c> them</c><00:05:02.160><c> to</c><00:05:02.320><c> match</c><00:05:02.720><c> we</c><00:05:02.880><c> can</c>

00:05:03.029 --> 00:05:03.039 align:start position:0%
we have to require them to match we can
 

00:05:03.039 --> 00:05:03.909 align:start position:0%
we have to require them to match we can
say<00:05:03.360><c> hey</c>

00:05:03.909 --> 00:05:03.919 align:start position:0%
say hey
 

00:05:03.919 --> 00:05:05.590 align:start position:0%
say hey
let's<00:05:04.080><c> just</c><00:05:04.320><c> skip</c><00:05:04.639><c> this</c><00:05:04.800><c> b</c><00:05:05.120><c> even</c><00:05:05.280><c> though</c><00:05:05.440><c> it</c>

00:05:05.590 --> 00:05:05.600 align:start position:0%
let's just skip this b even though it
 

00:05:05.600 --> 00:05:08.070 align:start position:0%
let's just skip this b even though it
matches<00:05:06.080><c> this</c><00:05:06.400><c> b</c><00:05:06.720><c> maybe</c><00:05:07.039><c> there's</c><00:05:07.360><c> another</c><00:05:07.840><c> b</c>

00:05:08.070 --> 00:05:08.080 align:start position:0%
matches this b maybe there's another b
 

00:05:08.080 --> 00:05:11.029 align:start position:0%
matches this b maybe there's another b
over<00:05:08.320><c> here</c><00:05:08.639><c> that</c><00:05:08.800><c> can</c><00:05:09.120><c> also</c><00:05:09.600><c> match</c><00:05:09.919><c> this</c><00:05:10.240><c> b</c><00:05:10.880><c> so</c>

00:05:11.029 --> 00:05:11.039 align:start position:0%
over here that can also match this b so
 

00:05:11.039 --> 00:05:12.629 align:start position:0%
over here that can also match this b so
what<00:05:11.199><c> i'm</c><00:05:11.440><c> saying</c><00:05:11.759><c> here</c><00:05:12.000><c> is</c><00:05:12.160><c> if</c><00:05:12.400><c> these</c>

00:05:12.629 --> 00:05:12.639 align:start position:0%
what i'm saying here is if these
 

00:05:12.639 --> 00:05:14.870 align:start position:0%
what i'm saying here is if these
characters<00:05:13.120><c> match</c><00:05:13.440><c> each</c><00:05:13.600><c> other</c><00:05:13.840><c> right</c><00:05:14.000><c> if</c><00:05:14.160><c> the</c>

00:05:14.870 --> 00:05:14.880 align:start position:0%
characters match each other right if the
 

00:05:14.880 --> 00:05:17.189 align:start position:0%
characters match each other right if the
with<00:05:15.039><c> this</c><00:05:15.280><c> if</c><00:05:15.520><c> condition</c><00:05:16.080><c> we</c><00:05:16.320><c> this</c><00:05:16.560><c> is</c><00:05:16.880><c> one</c>

00:05:17.189 --> 00:05:17.199 align:start position:0%
with this if condition we this is one
 

00:05:17.199 --> 00:05:18.710 align:start position:0%
with this if condition we this is one
way<00:05:17.440><c> we</c><00:05:17.600><c> can</c><00:05:17.759><c> do</c><00:05:17.919><c> it</c><00:05:18.080><c> but</c><00:05:18.240><c> we</c><00:05:18.400><c> can</c>

00:05:18.710 --> 00:05:18.720 align:start position:0%
way we can do it but we can
 

00:05:18.720 --> 00:05:21.110 align:start position:0%
way we can do it but we can
also<00:05:19.120><c> do</c><00:05:19.440><c> another</c><00:05:20.000><c> thing</c><00:05:20.400><c> which</c><00:05:20.639><c> is</c><00:05:20.800><c> we</c><00:05:20.960><c> can</c>

00:05:21.110 --> 00:05:21.120 align:start position:0%
also do another thing which is we can
 

00:05:21.120 --> 00:05:22.550 align:start position:0%
also do another thing which is we can
take<00:05:21.440><c> our</c><00:05:21.680><c> i</c><00:05:21.919><c> pointer</c>

00:05:22.550 --> 00:05:22.560 align:start position:0%
take our i pointer
 

00:05:22.560 --> 00:05:25.189 align:start position:0%
take our i pointer
increment<00:05:23.039><c> it</c><00:05:23.120><c> by</c><00:05:23.360><c> one</c><00:05:23.919><c> and</c><00:05:24.400><c> take</c><00:05:24.639><c> our</c><00:05:24.880><c> j</c>

00:05:25.189 --> 00:05:25.199 align:start position:0%
increment it by one and take our j
 

00:05:25.199 --> 00:05:26.629 align:start position:0%
increment it by one and take our j
pointer<00:05:25.600><c> and</c><00:05:25.759><c> leave</c><00:05:26.000><c> it</c><00:05:26.080><c> the</c><00:05:26.240><c> same</c>

00:05:26.629 --> 00:05:26.639 align:start position:0%
pointer and leave it the same
 

00:05:26.639 --> 00:05:28.469 align:start position:0%
pointer and leave it the same
basically<00:05:27.039><c> we're</c><00:05:27.199><c> doing</c><00:05:27.440><c> over</c><00:05:27.759><c> here</c><00:05:28.160><c> what</c><00:05:28.320><c> we</c>

00:05:28.469 --> 00:05:28.479 align:start position:0%
basically we're doing over here what we
 

00:05:28.479 --> 00:05:30.150 align:start position:0%
basically we're doing over here what we
did<00:05:28.720><c> down</c><00:05:29.039><c> here</c><00:05:29.440><c> so</c><00:05:29.680><c> in</c><00:05:29.840><c> in</c>

00:05:30.150 --> 00:05:30.160 align:start position:0%
did down here so in in
 

00:05:30.160 --> 00:05:32.230 align:start position:0%
did down here so in in
in<00:05:30.320><c> this</c><00:05:30.560><c> if</c><00:05:30.800><c> case</c><00:05:31.120><c> we're</c><00:05:31.280><c> going</c><00:05:31.440><c> to</c><00:05:31.520><c> take</c><00:05:31.840><c> both</c>

00:05:32.230 --> 00:05:32.240 align:start position:0%
in this if case we're going to take both
 

00:05:32.240 --> 00:05:33.430 align:start position:0%
in this if case we're going to take both
of<00:05:32.400><c> these</c><00:05:32.720><c> results</c>

00:05:33.430 --> 00:05:33.440 align:start position:0%
of these results
 

00:05:33.440 --> 00:05:35.670 align:start position:0%
of these results
basically<00:05:34.000><c> counting</c><00:05:34.320><c> the</c><00:05:34.560><c> number</c><00:05:34.800><c> of</c><00:05:34.960><c> ways</c>

00:05:35.670 --> 00:05:35.680 align:start position:0%
basically counting the number of ways
 

00:05:35.680 --> 00:05:37.430 align:start position:0%
basically counting the number of ways
that<00:05:35.840><c> we</c><00:05:35.919><c> can</c><00:05:36.080><c> compute</c><00:05:36.560><c> subsequences</c>

00:05:37.430 --> 00:05:37.440 align:start position:0%
that we can compute subsequences
 

00:05:37.440 --> 00:05:40.310 align:start position:0%
that we can compute subsequences
with<00:05:37.680><c> both</c><00:05:38.080><c> of</c><00:05:38.240><c> these</c><00:05:38.720><c> and</c><00:05:39.039><c> totaling</c><00:05:39.520><c> them</c><00:05:39.919><c> up</c>

00:05:40.310 --> 00:05:40.320 align:start position:0%
with both of these and totaling them up
 

00:05:40.320 --> 00:05:41.670 align:start position:0%
with both of these and totaling them up
and<00:05:40.560><c> that's</c><00:05:40.800><c> what</c><00:05:40.960><c> we're</c><00:05:41.120><c> going</c><00:05:41.199><c> to</c><00:05:41.360><c> end</c><00:05:41.520><c> up</c>

00:05:41.670 --> 00:05:41.680 align:start position:0%
and that's what we're going to end up
 

00:05:41.680 --> 00:05:42.629 align:start position:0%
and that's what we're going to end up
returning

00:05:42.629 --> 00:05:42.639 align:start position:0%
returning
 

00:05:42.639 --> 00:05:44.150 align:start position:0%
returning
so<00:05:42.800><c> what</c><00:05:42.960><c> would</c><00:05:43.120><c> happen</c><00:05:43.520><c> if</c><00:05:43.600><c> we</c><00:05:43.759><c> ended</c><00:05:44.000><c> up</c>

00:05:44.150 --> 00:05:44.160 align:start position:0%
so what would happen if we ended up
 

00:05:44.160 --> 00:05:45.990 align:start position:0%
so what would happen if we ended up
skipping<00:05:44.639><c> this</c><00:05:44.880><c> b</c><00:05:45.199><c> and</c><00:05:45.280><c> then</c><00:05:45.440><c> let's</c><00:05:45.680><c> say</c><00:05:45.840><c> we</c>

00:05:45.990 --> 00:05:46.000 align:start position:0%
skipping this b and then let's say we
 

00:05:46.000 --> 00:05:46.310 align:start position:0%
skipping this b and then let's say we
took

00:05:46.310 --> 00:05:46.320 align:start position:0%
took
 

00:05:46.320 --> 00:05:49.110 align:start position:0%
took
this<00:05:46.560><c> b</c><00:05:46.880><c> and</c><00:05:47.199><c> matched</c><00:05:47.680><c> it</c><00:05:47.919><c> with</c><00:05:48.160><c> this</c><00:05:48.560><c> previous</c>

00:05:49.110 --> 00:05:49.120 align:start position:0%
this b and matched it with this previous
 

00:05:49.120 --> 00:05:50.870 align:start position:0%
this b and matched it with this previous
b<00:05:49.360><c> right</c><00:05:49.600><c> then</c><00:05:49.759><c> what</c><00:05:49.919><c> would</c><00:05:50.160><c> we</c><00:05:50.320><c> get</c><00:05:50.560><c> well</c>

00:05:50.870 --> 00:05:50.880 align:start position:0%
b right then what would we get well
 

00:05:50.880 --> 00:05:52.550 align:start position:0%
b right then what would we get well
then<00:05:51.039><c> we'd</c><00:05:51.280><c> get</c><00:05:51.440><c> to</c><00:05:51.600><c> these</c><00:05:51.919><c> pointers</c><00:05:52.320><c> right</c>

00:05:52.550 --> 00:05:52.560 align:start position:0%
then we'd get to these pointers right
 

00:05:52.560 --> 00:05:54.710 align:start position:0%
then we'd get to these pointers right
and<00:05:52.639><c> again</c><00:05:53.039><c> we</c><00:05:53.199><c> can</c><00:05:53.360><c> say</c><00:05:53.600><c> okay</c><00:05:53.919><c> these</c><00:05:54.240><c> b's</c><00:05:54.639><c> are</c>

00:05:54.710 --> 00:05:54.720 align:start position:0%
and again we can say okay these b's are
 

00:05:54.720 --> 00:05:55.990 align:start position:0%
and again we can say okay these b's are
now<00:05:54.960><c> going</c><00:05:55.039><c> to</c><00:05:55.120><c> match</c><00:05:55.440><c> each</c><00:05:55.600><c> other</c>

00:05:55.990 --> 00:05:56.000 align:start position:0%
now going to match each other
 

00:05:56.000 --> 00:05:58.309 align:start position:0%
now going to match each other
right<00:05:56.319><c> and</c><00:05:56.479><c> then</c><00:05:56.720><c> these</c><00:05:57.039><c> two</c><00:05:57.360><c> i</c><00:05:57.680><c> characters</c>

00:05:58.309 --> 00:05:58.319 align:start position:0%
right and then these two i characters
 

00:05:58.319 --> 00:05:59.430 align:start position:0%
right and then these two i characters
are<00:05:58.479><c> going</c><00:05:58.560><c> to</c><00:05:58.639><c> match</c><00:05:58.880><c> each</c><00:05:59.039><c> other</c><00:05:59.199><c> and</c><00:05:59.280><c> then</c>

00:05:59.430 --> 00:05:59.440 align:start position:0%
are going to match each other and then
 

00:05:59.440 --> 00:06:00.950 align:start position:0%
are going to match each other and then
the<00:05:59.600><c> t's</c><00:06:00.000><c> are</c><00:06:00.080><c> going</c><00:06:00.160><c> to</c><00:06:00.240><c> match</c><00:06:00.479><c> each</c><00:06:00.639><c> other</c><00:06:00.800><c> so</c>

00:06:00.950 --> 00:06:00.960 align:start position:0%
the t's are going to match each other so
 

00:06:00.960 --> 00:06:02.390 align:start position:0%
the t's are going to match each other so
that's<00:06:01.280><c> an</c><00:06:01.440><c> additional</c>

00:06:02.390 --> 00:06:02.400 align:start position:0%
that's an additional
 

00:06:02.400 --> 00:06:04.790 align:start position:0%
that's an additional
one<00:06:02.800><c> way</c><00:06:03.280><c> that</c><00:06:03.520><c> we</c><00:06:03.680><c> could</c><00:06:04.160><c> we</c><00:06:04.319><c> could</c><00:06:04.479><c> take</c><00:06:04.639><c> a</c>

00:06:04.790 --> 00:06:04.800 align:start position:0%
one way that we could we could take a
 

00:06:04.800 --> 00:06:05.749 align:start position:0%
one way that we could we could take a
subsequence<00:06:05.440><c> of</c>

00:06:05.749 --> 00:06:05.759 align:start position:0%
subsequence of
 

00:06:05.759 --> 00:06:07.830 align:start position:0%
subsequence of
s<00:06:06.080><c> and</c><00:06:06.240><c> turn</c><00:06:06.479><c> it</c><00:06:06.639><c> into</c><00:06:06.880><c> t</c><00:06:07.120><c> so</c><00:06:07.280><c> that's</c><00:06:07.520><c> another</c>

00:06:07.830 --> 00:06:07.840 align:start position:0%
s and turn it into t so that's another
 

00:06:07.840 --> 00:06:09.270 align:start position:0%
s and turn it into t so that's another
way<00:06:08.160><c> so</c><00:06:08.319><c> far</c><00:06:08.560><c> our</c><00:06:08.800><c> total</c>

00:06:09.270 --> 00:06:09.280 align:start position:0%
way so far our total
 

00:06:09.280 --> 00:06:11.029 align:start position:0%
way so far our total
is<00:06:09.440><c> two</c><00:06:09.680><c> so</c><00:06:09.840><c> what's</c><00:06:10.080><c> the</c><00:06:10.319><c> third</c><00:06:10.560><c> way</c><00:06:10.800><c> that</c><00:06:10.960><c> we</c>

00:06:11.029 --> 00:06:11.039 align:start position:0%
is two so what's the third way that we
 

00:06:11.039 --> 00:06:13.029 align:start position:0%
is two so what's the third way that we
could<00:06:11.199><c> do</c><00:06:11.360><c> it</c><00:06:11.600><c> well</c><00:06:12.160><c> once</c><00:06:12.479><c> again</c>

00:06:13.029 --> 00:06:13.039 align:start position:0%
could do it well once again
 

00:06:13.039 --> 00:06:15.590 align:start position:0%
could do it well once again
we<00:06:13.199><c> see</c><00:06:13.360><c> that</c><00:06:13.600><c> this</c><00:06:13.919><c> b</c><00:06:14.240><c> matches</c><00:06:14.720><c> this</c><00:06:15.039><c> b</c><00:06:15.280><c> but</c><00:06:15.440><c> it</c>

00:06:15.590 --> 00:06:15.600 align:start position:0%
we see that this b matches this b but it
 

00:06:15.600 --> 00:06:17.510 align:start position:0%
we see that this b matches this b but it
doesn't<00:06:16.000><c> have</c><00:06:16.160><c> to</c><00:06:16.319><c> be</c><00:06:16.560><c> that</c><00:06:16.800><c> way</c>

00:06:17.510 --> 00:06:17.520 align:start position:0%
doesn't have to be that way
 

00:06:17.520 --> 00:06:19.350 align:start position:0%
doesn't have to be that way
in<00:06:17.680><c> another</c><00:06:18.000><c> way</c><00:06:18.160><c> we</c><00:06:18.319><c> could</c><00:06:18.479><c> say</c><00:06:18.720><c> okay</c><00:06:19.039><c> these</c>

00:06:19.350 --> 00:06:19.360 align:start position:0%
in another way we could say okay these
 

00:06:19.360 --> 00:06:21.029 align:start position:0%
in another way we could say okay these
b's<00:06:19.680><c> match</c><00:06:19.919><c> each</c><00:06:20.080><c> other</c><00:06:20.319><c> we're</c><00:06:20.479><c> gonna</c><00:06:20.639><c> now</c>

00:06:21.029 --> 00:06:21.039 align:start position:0%
b's match each other we're gonna now
 

00:06:21.039 --> 00:06:24.150 align:start position:0%
b's match each other we're gonna now
skip<00:06:21.600><c> the</c><00:06:21.919><c> second</c><00:06:22.560><c> b</c><00:06:23.280><c> and</c><00:06:23.440><c> we're</c><00:06:23.600><c> gonna</c><00:06:23.840><c> say</c>

00:06:24.150 --> 00:06:24.160 align:start position:0%
skip the second b and we're gonna say
 

00:06:24.160 --> 00:06:26.950 align:start position:0%
skip the second b and we're gonna say
okay<00:06:24.960><c> these</c><00:06:25.520><c> two</c><00:06:25.759><c> b's</c><00:06:26.160><c> are</c><00:06:26.240><c> gonna</c><00:06:26.479><c> match</c><00:06:26.800><c> each</c>

00:06:26.950 --> 00:06:26.960 align:start position:0%
okay these two b's are gonna match each
 

00:06:26.960 --> 00:06:27.510 align:start position:0%
okay these two b's are gonna match each
other

00:06:27.510 --> 00:06:27.520 align:start position:0%
other
 

00:06:27.520 --> 00:06:30.150 align:start position:0%
other
so<00:06:27.759><c> that</c><00:06:28.000><c> is</c><00:06:28.160><c> what</c><00:06:28.319><c> the</c><00:06:28.479><c> third</c><00:06:28.880><c> way</c><00:06:29.120><c> would</c><00:06:29.360><c> be</c>

00:06:30.150 --> 00:06:30.160 align:start position:0%
so that is what the third way would be
 

00:06:30.160 --> 00:06:31.670 align:start position:0%
so that is what the third way would be
and<00:06:30.240><c> then</c><00:06:30.479><c> of</c><00:06:30.560><c> course</c><00:06:30.800><c> we'd</c><00:06:31.039><c> have</c><00:06:31.199><c> our</c><00:06:31.360><c> eyes</c>

00:06:31.670 --> 00:06:31.680 align:start position:0%
and then of course we'd have our eyes
 

00:06:31.680 --> 00:06:33.510 align:start position:0%
and then of course we'd have our eyes
match<00:06:32.000><c> and</c><00:06:32.080><c> we'd</c><00:06:32.319><c> have</c><00:06:32.400><c> our</c><00:06:32.560><c> t's</c><00:06:32.960><c> match</c>

00:06:33.510 --> 00:06:33.520 align:start position:0%
match and we'd have our t's match
 

00:06:33.520 --> 00:06:35.430 align:start position:0%
match and we'd have our t's match
so<00:06:33.759><c> this</c><00:06:34.160><c> covers</c><00:06:34.639><c> exactly</c><00:06:35.039><c> what</c><00:06:35.199><c> we're</c><00:06:35.360><c> going</c>

00:06:35.430 --> 00:06:35.440 align:start position:0%
so this covers exactly what we're going
 

00:06:35.440 --> 00:06:37.590 align:start position:0%
so this covers exactly what we're going
to<00:06:35.600><c> do</c><00:06:36.319><c> if</c><00:06:36.479><c> the</c><00:06:36.560><c> characters</c><00:06:37.039><c> match</c><00:06:37.280><c> each</c><00:06:37.440><c> other</c>

00:06:37.590 --> 00:06:37.600 align:start position:0%
to do if the characters match each other
 

00:06:37.600 --> 00:06:38.469 align:start position:0%
to do if the characters match each other
and<00:06:37.680><c> this</c><00:06:37.840><c> is</c><00:06:37.919><c> what</c><00:06:38.000><c> we're</c><00:06:38.160><c> going</c><00:06:38.240><c> to</c><00:06:38.319><c> do</c><00:06:38.400><c> if</c>

00:06:38.469 --> 00:06:38.479 align:start position:0%
and this is what we're going to do if
 

00:06:38.479 --> 00:06:39.670 align:start position:0%
and this is what we're going to do if
the<00:06:38.560><c> characters</c><00:06:38.960><c> don't</c><00:06:39.120><c> match</c><00:06:39.360><c> each</c><00:06:39.520><c> other</c>

00:06:39.670 --> 00:06:39.680 align:start position:0%
the characters don't match each other
 

00:06:39.680 --> 00:06:41.270 align:start position:0%
the characters don't match each other
we're<00:06:39.840><c> going</c><00:06:39.919><c> to</c><00:06:40.000><c> do</c><00:06:40.160><c> this</c><00:06:40.319><c> recursively</c><00:06:41.039><c> with</c>

00:06:41.270 --> 00:06:41.280 align:start position:0%
we're going to do this recursively with
 

00:06:41.280 --> 00:06:42.230 align:start position:0%
we're going to do this recursively with
depth<00:06:41.520><c> first</c><00:06:41.759><c> search</c>

00:06:42.230 --> 00:06:42.240 align:start position:0%
depth first search
 

00:06:42.240 --> 00:06:43.749 align:start position:0%
depth first search
or<00:06:42.479><c> backtracking</c><00:06:43.120><c> whatever</c><00:06:43.440><c> you</c><00:06:43.520><c> want</c><00:06:43.680><c> to</c>

00:06:43.749 --> 00:06:43.759 align:start position:0%
or backtracking whatever you want to
 

00:06:43.759 --> 00:06:45.830 align:start position:0%
or backtracking whatever you want to
call<00:06:44.000><c> it</c><00:06:44.319><c> and</c><00:06:44.720><c> we</c><00:06:45.039><c> we</c><00:06:45.199><c> noticed</c><00:06:45.520><c> that</c><00:06:45.680><c> we're</c>

00:06:45.830 --> 00:06:45.840 align:start position:0%
call it and we we noticed that we're
 

00:06:45.840 --> 00:06:46.950 align:start position:0%
call it and we we noticed that we're
probably<00:06:46.080><c> going</c><00:06:46.160><c> to</c><00:06:46.240><c> be</c><00:06:46.400><c> doing</c><00:06:46.560><c> a</c><00:06:46.639><c> lot</c><00:06:46.800><c> of</c>

00:06:46.950 --> 00:06:46.960 align:start position:0%
probably going to be doing a lot of
 

00:06:46.960 --> 00:06:48.950 align:start position:0%
probably going to be doing a lot of
repeated<00:06:47.520><c> work</c><00:06:47.919><c> meaning</c><00:06:48.240><c> our</c>

00:06:48.950 --> 00:06:48.960 align:start position:0%
repeated work meaning our
 

00:06:48.960 --> 00:06:50.550 align:start position:0%
repeated work meaning our
when<00:06:49.199><c> we're</c><00:06:49.360><c> calling</c><00:06:49.680><c> that</c><00:06:49.840><c> function</c><00:06:50.319><c> we</c>

00:06:50.550 --> 00:06:50.560 align:start position:0%
when we're calling that function we
 

00:06:50.560 --> 00:06:52.070 align:start position:0%
when we're calling that function we
might<00:06:50.720><c> be</c><00:06:50.880><c> passing</c><00:06:51.199><c> in</c><00:06:51.360><c> the</c><00:06:51.440><c> same</c><00:06:51.840><c> i</c>

00:06:52.070 --> 00:06:52.080 align:start position:0%
might be passing in the same i
 

00:06:52.080 --> 00:06:54.309 align:start position:0%
might be passing in the same i
value<00:06:52.400><c> and</c><00:06:52.560><c> same</c><00:06:52.880><c> j</c><00:06:53.120><c> value</c><00:06:53.840><c> into</c><00:06:54.080><c> that</c>

00:06:54.309 --> 00:06:54.319 align:start position:0%
value and same j value into that
 

00:06:54.319 --> 00:06:56.150 align:start position:0%
value and same j value into that
function<00:06:54.639><c> so</c><00:06:54.800><c> we're</c><00:06:54.960><c> going</c><00:06:55.039><c> to</c><00:06:55.120><c> use</c><00:06:55.280><c> a</c><00:06:55.520><c> cache</c>

00:06:56.150 --> 00:06:56.160 align:start position:0%
function so we're going to use a cache
 

00:06:56.160 --> 00:06:58.150 align:start position:0%
function so we're going to use a cache
so<00:06:56.400><c> that</c><00:06:56.479><c> we</c><00:06:56.639><c> don't</c><00:06:56.880><c> repeat</c><00:06:57.280><c> the</c><00:06:57.440><c> same</c><00:06:57.759><c> work</c>

00:06:58.150 --> 00:06:58.160 align:start position:0%
so that we don't repeat the same work
 

00:06:58.160 --> 00:07:00.309 align:start position:0%
so that we don't repeat the same work
twice<00:06:58.720><c> and</c><00:06:58.880><c> so</c><00:06:59.039><c> how</c><00:06:59.360><c> big</c><00:06:59.599><c> is</c><00:06:59.680><c> that</c><00:06:59.919><c> cache</c><00:07:00.240><c> going</c>

00:07:00.309 --> 00:07:00.319 align:start position:0%
twice and so how big is that cache going
 

00:07:00.319 --> 00:07:02.070 align:start position:0%
twice and so how big is that cache going
to<00:07:00.400><c> be</c><00:07:00.560><c> well</c><00:07:00.800><c> how</c><00:07:00.960><c> many</c><00:07:01.199><c> possible</c><00:07:01.599><c> ways</c><00:07:01.919><c> could</c>

00:07:02.070 --> 00:07:02.080 align:start position:0%
to be well how many possible ways could
 

00:07:02.080 --> 00:07:03.589 align:start position:0%
to be well how many possible ways could
we<00:07:02.240><c> call</c><00:07:02.479><c> our</c><00:07:02.639><c> depth</c><00:07:02.880><c> first</c><00:07:03.039><c> search</c><00:07:03.280><c> function</c>

00:07:03.589 --> 00:07:03.599 align:start position:0%
we call our depth first search function
 

00:07:03.599 --> 00:07:04.309 align:start position:0%
we call our depth first search function
we<00:07:03.759><c> could</c><00:07:03.919><c> call</c>

00:07:04.309 --> 00:07:04.319 align:start position:0%
we could call
 

00:07:04.319 --> 00:07:06.629 align:start position:0%
we could call
an<00:07:04.560><c> i</c><00:07:04.800><c> value</c><00:07:05.199><c> for</c><00:07:05.360><c> basically</c><00:07:05.840><c> the</c><00:07:06.080><c> length</c><00:07:06.560><c> of</c>

00:07:06.629 --> 00:07:06.639 align:start position:0%
an i value for basically the length of
 

00:07:06.639 --> 00:07:07.350 align:start position:0%
an i value for basically the length of
our<00:07:06.800><c> string</c>

00:07:07.350 --> 00:07:07.360 align:start position:0%
our string
 

00:07:07.360 --> 00:07:09.830 align:start position:0%
our string
s<00:07:07.840><c> and</c><00:07:07.919><c> we</c><00:07:08.080><c> could</c><00:07:08.240><c> call</c><00:07:08.560><c> a</c><00:07:08.720><c> j</c><00:07:08.960><c> value</c><00:07:09.360><c> for</c><00:07:09.599><c> the</c>

00:07:09.830 --> 00:07:09.840 align:start position:0%
s and we could call a j value for the
 

00:07:09.840 --> 00:07:10.390 align:start position:0%
s and we could call a j value for the
length

00:07:10.390 --> 00:07:10.400 align:start position:0%
length
 

00:07:10.400 --> 00:07:12.710 align:start position:0%
length
of<00:07:10.560><c> our</c><00:07:10.720><c> string</c><00:07:11.199><c> t</c><00:07:11.520><c> so</c><00:07:11.680><c> basically</c><00:07:12.319><c> the</c><00:07:12.479><c> number</c>

00:07:12.710 --> 00:07:12.720 align:start position:0%
of our string t so basically the number
 

00:07:12.720 --> 00:07:14.629 align:start position:0%
of our string t so basically the number
of<00:07:12.800><c> times</c><00:07:13.120><c> we</c><00:07:13.280><c> could</c><00:07:13.520><c> call</c><00:07:13.759><c> it</c><00:07:13.919><c> is</c><00:07:14.080><c> going</c><00:07:14.160><c> to</c><00:07:14.319><c> be</c>

00:07:14.629 --> 00:07:14.639 align:start position:0%
of times we could call it is going to be
 

00:07:14.639 --> 00:07:16.710 align:start position:0%
of times we could call it is going to be
the<00:07:14.880><c> length</c><00:07:15.199><c> of</c><00:07:15.360><c> both</c><00:07:15.680><c> strings</c><00:07:16.080><c> multiplied</c><00:07:16.560><c> by</c>

00:07:16.710 --> 00:07:16.720 align:start position:0%
the length of both strings multiplied by
 

00:07:16.720 --> 00:07:18.309 align:start position:0%
the length of both strings multiplied by
each<00:07:16.880><c> other</c><00:07:17.120><c> let's</c><00:07:17.280><c> just</c><00:07:17.440><c> say</c><00:07:17.680><c> that's</c><00:07:17.919><c> big</c>

00:07:18.309 --> 00:07:18.319 align:start position:0%
each other let's just say that's big
 

00:07:18.319 --> 00:07:21.990 align:start position:0%
each other let's just say that's big
o<00:07:18.880><c> of</c><00:07:19.440><c> n</c><00:07:20.080><c> times</c><00:07:20.880><c> m</c><00:07:21.120><c> so</c><00:07:21.280><c> that's</c><00:07:21.440><c> going</c><00:07:21.520><c> to</c><00:07:21.599><c> be</c><00:07:21.759><c> the</c>

00:07:21.990 --> 00:07:22.000 align:start position:0%
o of n times m so that's going to be the
 

00:07:22.000 --> 00:07:23.270 align:start position:0%
o of n times m so that's going to be the
memory<00:07:22.560><c> as</c><00:07:22.880><c> well</c>

00:07:23.270 --> 00:07:23.280 align:start position:0%
memory as well
 

00:07:23.280 --> 00:07:25.430 align:start position:0%
memory as well
as<00:07:23.440><c> the</c><00:07:23.680><c> run</c><00:07:24.000><c> time</c><00:07:24.400><c> of</c><00:07:24.639><c> this</c><00:07:24.880><c> algorithm</c>

00:07:25.430 --> 00:07:25.440 align:start position:0%
as the run time of this algorithm
 

00:07:25.440 --> 00:07:27.029 align:start position:0%
as the run time of this algorithm
because<00:07:25.680><c> we're</c><00:07:25.840><c> going</c><00:07:25.919><c> to</c><00:07:26.000><c> be</c><00:07:26.160><c> caching</c><00:07:26.639><c> it</c>

00:07:27.029 --> 00:07:27.039 align:start position:0%
because we're going to be caching it
 

00:07:27.039 --> 00:07:29.589 align:start position:0%
because we're going to be caching it
i've<00:07:27.280><c> solved</c><00:07:27.599><c> a</c><00:07:27.680><c> lot</c><00:07:27.919><c> of</c><00:07:28.319><c> dp</c><00:07:28.800><c> problems</c><00:07:29.120><c> with</c>

00:07:29.589 --> 00:07:29.599 align:start position:0%
i've solved a lot of dp problems with
 

00:07:29.599 --> 00:07:31.350 align:start position:0%
i've solved a lot of dp problems with
the<00:07:29.759><c> bottom</c><00:07:30.080><c> up</c><00:07:30.240><c> approach</c><00:07:30.560><c> so</c><00:07:30.720><c> this</c><00:07:30.880><c> time</c><00:07:31.120><c> i</c><00:07:31.199><c> am</c>

00:07:31.350 --> 00:07:31.360 align:start position:0%
the bottom up approach so this time i am
 

00:07:31.360 --> 00:07:33.189 align:start position:0%
the bottom up approach so this time i am
going<00:07:31.440><c> to</c><00:07:31.520><c> be</c><00:07:31.680><c> using</c><00:07:31.919><c> the</c><00:07:32.080><c> recursive</c><00:07:32.800><c> approach</c>

00:07:33.189 --> 00:07:33.199 align:start position:0%
going to be using the recursive approach
 

00:07:33.199 --> 00:07:33.990 align:start position:0%
going to be using the recursive approach
which<00:07:33.440><c> is</c><00:07:33.599><c> top</c>

00:07:33.990 --> 00:07:34.000 align:start position:0%
which is top
 

00:07:34.000 --> 00:07:35.990 align:start position:0%
which is top
down<00:07:34.479><c> but</c><00:07:34.639><c> there's</c><00:07:34.880><c> one</c><00:07:35.120><c> last</c><00:07:35.440><c> thing</c><00:07:35.759><c> i</c><00:07:35.840><c> want</c>

00:07:35.990 --> 00:07:36.000 align:start position:0%
down but there's one last thing i want
 

00:07:36.000 --> 00:07:38.309 align:start position:0%
down but there's one last thing i want
to<00:07:36.160><c> cover</c><00:07:36.479><c> before</c><00:07:36.720><c> we</c><00:07:36.880><c> jump</c><00:07:37.199><c> into</c><00:07:37.360><c> the</c><00:07:37.520><c> code</c>

00:07:38.309 --> 00:07:38.319 align:start position:0%
to cover before we jump into the code
 

00:07:38.319 --> 00:07:40.390 align:start position:0%
to cover before we jump into the code
let's<00:07:38.560><c> look</c><00:07:38.800><c> at</c><00:07:39.039><c> two</c><00:07:39.280><c> more</c><00:07:39.599><c> base</c><00:07:39.919><c> cases</c><00:07:40.240><c> so</c>

00:07:40.390 --> 00:07:40.400 align:start position:0%
let's look at two more base cases so
 

00:07:40.400 --> 00:07:41.670 align:start position:0%
let's look at two more base cases so
let's<00:07:40.560><c> say</c><00:07:40.720><c> our</c><00:07:40.880><c> string</c><00:07:41.360><c> s</c>

00:07:41.670 --> 00:07:41.680 align:start position:0%
let's say our string s
 

00:07:41.680 --> 00:07:43.749 align:start position:0%
let's say our string s
had<00:07:41.840><c> a</c><00:07:42.000><c> single</c><00:07:42.319><c> value</c><00:07:42.880><c> a</c><00:07:43.199><c> and</c><00:07:43.280><c> let's</c><00:07:43.440><c> say</c><00:07:43.599><c> our</c>

00:07:43.749 --> 00:07:43.759 align:start position:0%
had a single value a and let's say our
 

00:07:43.759 --> 00:07:44.790 align:start position:0%
had a single value a and let's say our
string<00:07:44.160><c> t</c>

00:07:44.790 --> 00:07:44.800 align:start position:0%
string t
 

00:07:44.800 --> 00:07:47.430 align:start position:0%
string t
was<00:07:45.199><c> empty</c><00:07:45.599><c> right</c><00:07:45.759><c> so</c><00:07:45.919><c> it's</c><00:07:46.080><c> an</c><00:07:46.319><c> empty</c><00:07:46.720><c> string</c>

00:07:47.430 --> 00:07:47.440 align:start position:0%
was empty right so it's an empty string
 

00:07:47.440 --> 00:07:49.749 align:start position:0%
was empty right so it's an empty string
how<00:07:47.599><c> many</c><00:07:48.000><c> subsequences</c><00:07:48.879><c> of</c><00:07:49.039><c> our</c><00:07:49.120><c> string</c><00:07:49.520><c> s</c>

00:07:49.749 --> 00:07:49.759 align:start position:0%
how many subsequences of our string s
 

00:07:49.759 --> 00:07:51.270 align:start position:0%
how many subsequences of our string s
can<00:07:49.919><c> we</c><00:07:50.160><c> take</c><00:07:50.400><c> that</c><00:07:50.639><c> convert</c>

00:07:51.270 --> 00:07:51.280 align:start position:0%
can we take that convert
 

00:07:51.280 --> 00:07:54.550 align:start position:0%
can we take that convert
exactly<00:07:51.840><c> to</c><00:07:52.080><c> t</c><00:07:52.400><c> well</c><00:07:52.800><c> only</c><00:07:53.120><c> a</c><00:07:53.440><c> single</c><00:07:54.240><c> one</c>

00:07:54.550 --> 00:07:54.560 align:start position:0%
exactly to t well only a single one
 

00:07:54.560 --> 00:07:55.189 align:start position:0%
exactly to t well only a single one
right<00:07:54.720><c> so</c>

00:07:55.189 --> 00:07:55.199 align:start position:0%
right so
 

00:07:55.199 --> 00:07:56.710 align:start position:0%
right so
basically<00:07:55.599><c> if</c><00:07:55.759><c> we</c><00:07:55.840><c> just</c><00:07:56.000><c> take</c><00:07:56.240><c> this</c><00:07:56.400><c> entire</c>

00:07:56.710 --> 00:07:56.720 align:start position:0%
basically if we just take this entire
 

00:07:56.720 --> 00:07:58.390 align:start position:0%
basically if we just take this entire
string<00:07:57.039><c> and</c><00:07:57.120><c> just</c><00:07:57.360><c> don't</c><00:07:57.840><c> take</c><00:07:58.160><c> any</c>

00:07:58.390 --> 00:07:58.400 align:start position:0%
string and just don't take any
 

00:07:58.400 --> 00:08:00.070 align:start position:0%
string and just don't take any
characters<00:07:58.800><c> from</c><00:07:58.960><c> it</c><00:07:59.120><c> that</c><00:07:59.440><c> counts</c><00:07:59.759><c> as</c><00:08:00.000><c> a</c>

00:08:00.070 --> 00:08:00.080 align:start position:0%
characters from it that counts as a
 

00:08:00.080 --> 00:08:00.950 align:start position:0%
characters from it that counts as a
subsequence

00:08:00.950 --> 00:08:00.960 align:start position:0%
subsequence
 

00:08:00.960 --> 00:08:03.670 align:start position:0%
subsequence
so<00:08:01.199><c> this</c><00:08:01.759><c> is</c><00:08:01.919><c> gonna</c><00:08:02.319><c> return</c><00:08:02.800><c> one</c><00:08:03.039><c> so</c><00:08:03.199><c> basically</c>

00:08:03.670 --> 00:08:03.680 align:start position:0%
so this is gonna return one so basically
 

00:08:03.680 --> 00:08:04.710 align:start position:0%
so this is gonna return one so basically
if<00:08:03.840><c> our</c><00:08:03.919><c> string</c><00:08:04.400><c> t</c>

00:08:04.710 --> 00:08:04.720 align:start position:0%
if our string t
 

00:08:04.720 --> 00:08:06.550 align:start position:0%
if our string t
is<00:08:05.039><c> empty</c><00:08:05.599><c> because</c><00:08:05.840><c> we</c><00:08:06.000><c> remember</c><00:08:06.400><c> the</c>

00:08:06.550 --> 00:08:06.560 align:start position:0%
is empty because we remember the
 

00:08:06.560 --> 00:08:08.150 align:start position:0%
is empty because we remember the
previous<00:08:06.960><c> case</c><00:08:07.280><c> where</c><00:08:07.440><c> let's</c><00:08:07.680><c> say</c>

00:08:08.150 --> 00:08:08.160 align:start position:0%
previous case where let's say
 

00:08:08.160 --> 00:08:11.589 align:start position:0%
previous case where let's say
string<00:08:08.560><c> t</c><00:08:09.199><c> and</c><00:08:09.520><c> string</c><00:08:10.479><c> s</c><00:08:10.879><c> were</c><00:08:11.120><c> empty</c><00:08:11.440><c> right</c>

00:08:11.589 --> 00:08:11.599 align:start position:0%
string t and string s were empty right
 

00:08:11.599 --> 00:08:12.309 align:start position:0%
string t and string s were empty right
if<00:08:11.680><c> they're</c><00:08:11.919><c> both</c>

00:08:12.309 --> 00:08:12.319 align:start position:0%
if they're both
 

00:08:12.319 --> 00:08:14.629 align:start position:0%
if they're both
empty<00:08:12.639><c> strings</c><00:08:13.360><c> then</c><00:08:13.840><c> in</c><00:08:14.000><c> that</c><00:08:14.160><c> case</c><00:08:14.400><c> we're</c>

00:08:14.629 --> 00:08:14.639 align:start position:0%
empty strings then in that case we're
 

00:08:14.639 --> 00:08:16.150 align:start position:0%
empty strings then in that case we're
also<00:08:15.039><c> ending</c><00:08:15.280><c> up</c><00:08:15.440><c> returning</c><00:08:15.840><c> one</c><00:08:16.000><c> so</c>

00:08:16.150 --> 00:08:16.160 align:start position:0%
also ending up returning one so
 

00:08:16.160 --> 00:08:18.309 align:start position:0%
also ending up returning one so
basically<00:08:16.560><c> the</c><00:08:16.720><c> condition</c><00:08:17.360><c> is</c><00:08:17.599><c> if</c><00:08:17.759><c> our</c><00:08:17.919><c> string</c>

00:08:18.309 --> 00:08:18.319 align:start position:0%
basically the condition is if our string
 

00:08:18.319 --> 00:08:18.790 align:start position:0%
basically the condition is if our string
t

00:08:18.790 --> 00:08:18.800 align:start position:0%
t
 

00:08:18.800 --> 00:08:21.350 align:start position:0%
t
is<00:08:19.039><c> empty</c><00:08:19.360><c> we</c><00:08:19.599><c> return</c><00:08:20.080><c> one</c><00:08:20.400><c> as</c><00:08:20.639><c> the</c><00:08:20.720><c> base</c><00:08:20.960><c> case</c>

00:08:21.350 --> 00:08:21.360 align:start position:0%
is empty we return one as the base case
 

00:08:21.360 --> 00:08:23.270 align:start position:0%
is empty we return one as the base case
what<00:08:21.520><c> about</c><00:08:21.759><c> the</c><00:08:22.000><c> opposite</c><00:08:22.560><c> case</c><00:08:22.960><c> where</c><00:08:23.199><c> our</c>

00:08:23.270 --> 00:08:23.280 align:start position:0%
what about the opposite case where our
 

00:08:23.280 --> 00:08:23.909 align:start position:0%
what about the opposite case where our
string

00:08:23.909 --> 00:08:23.919 align:start position:0%
string
 

00:08:23.919 --> 00:08:26.469 align:start position:0%
string
t<00:08:24.319><c> is</c><00:08:24.639><c> non-empty</c><00:08:25.280><c> we</c><00:08:25.440><c> have</c><00:08:25.520><c> an</c><00:08:25.680><c> a</c><00:08:25.919><c> here</c><00:08:26.319><c> but</c>

00:08:26.469 --> 00:08:26.479 align:start position:0%
t is non-empty we have an a here but
 

00:08:26.479 --> 00:08:27.350 align:start position:0%
t is non-empty we have an a here but
maybe<00:08:26.720><c> our</c><00:08:26.879><c> string</c>

00:08:27.350 --> 00:08:27.360 align:start position:0%
maybe our string
 

00:08:27.360 --> 00:08:30.230 align:start position:0%
maybe our string
s<00:08:27.840><c> is</c><00:08:28.160><c> empty</c><00:08:28.879><c> now</c><00:08:29.120><c> once</c><00:08:29.360><c> again</c><00:08:29.599><c> the</c><00:08:29.840><c> question</c>

00:08:30.230 --> 00:08:30.240 align:start position:0%
s is empty now once again the question
 

00:08:30.240 --> 00:08:30.950 align:start position:0%
s is empty now once again the question
is<00:08:30.400><c> how</c><00:08:30.560><c> many</c>

00:08:30.950 --> 00:08:30.960 align:start position:0%
is how many
 

00:08:30.960 --> 00:08:33.589 align:start position:0%
is how many
subsequences<00:08:31.919><c> of</c><00:08:32.080><c> this</c><00:08:32.320><c> string</c><00:08:32.719><c> s</c><00:08:33.120><c> can</c><00:08:33.360><c> we</c>

00:08:33.589 --> 00:08:33.599 align:start position:0%
subsequences of this string s can we
 

00:08:33.599 --> 00:08:34.230 align:start position:0%
subsequences of this string s can we
take<00:08:33.919><c> that</c>

00:08:34.230 --> 00:08:34.240 align:start position:0%
take that
 

00:08:34.240 --> 00:08:36.790 align:start position:0%
take that
exactly<00:08:35.039><c> match</c><00:08:35.360><c> the</c><00:08:35.599><c> string</c><00:08:35.919><c> t</c><00:08:36.159><c> we're</c><00:08:36.479><c> looking</c>

00:08:36.790 --> 00:08:36.800 align:start position:0%
exactly match the string t we're looking
 

00:08:36.800 --> 00:08:38.709 align:start position:0%
exactly match the string t we're looking
to<00:08:37.039><c> exactly</c><00:08:37.680><c> match</c><00:08:37.919><c> the</c><00:08:38.080><c> string</c><00:08:38.399><c> t</c>

00:08:38.709 --> 00:08:38.719 align:start position:0%
to exactly match the string t
 

00:08:38.719 --> 00:08:40.870 align:start position:0%
to exactly match the string t
well<00:08:39.039><c> since</c><00:08:39.360><c> this</c><00:08:39.599><c> is</c><00:08:39.919><c> empty</c><00:08:40.399><c> there's</c><00:08:40.640><c> no</c>

00:08:40.870 --> 00:08:40.880 align:start position:0%
well since this is empty there's no
 

00:08:40.880 --> 00:08:43.110 align:start position:0%
well since this is empty there's no
characters<00:08:41.440><c> in</c><00:08:41.519><c> it</c><00:08:41.760><c> we</c><00:08:42.000><c> can't</c><00:08:42.320><c> possibly</c><00:08:42.959><c> get</c>

00:08:43.110 --> 00:08:43.120 align:start position:0%
characters in it we can't possibly get
 

00:08:43.120 --> 00:08:43.350 align:start position:0%
characters in it we can't possibly get
an

00:08:43.350 --> 00:08:43.360 align:start position:0%
an
 

00:08:43.360 --> 00:08:45.829 align:start position:0%
an
a<00:08:43.599><c> from</c><00:08:43.839><c> this</c><00:08:44.240><c> so</c><00:08:44.480><c> we</c><00:08:44.640><c> can't</c><00:08:44.880><c> possibly</c><00:08:45.519><c> match</c>

00:08:45.829 --> 00:08:45.839 align:start position:0%
a from this so we can't possibly match
 

00:08:45.839 --> 00:08:46.470 align:start position:0%
a from this so we can't possibly match
this<00:08:46.160><c> a</c>

00:08:46.470 --> 00:08:46.480 align:start position:0%
this a
 

00:08:46.480 --> 00:08:49.190 align:start position:0%
this a
character<00:08:47.040><c> so</c><00:08:47.440><c> therefore</c><00:08:48.000><c> in</c><00:08:48.240><c> this</c><00:08:48.480><c> base</c><00:08:48.800><c> case</c>

00:08:49.190 --> 00:08:49.200 align:start position:0%
character so therefore in this base case
 

00:08:49.200 --> 00:08:50.389 align:start position:0%
character so therefore in this base case
we're<00:08:49.360><c> going</c><00:08:49.440><c> to</c><00:08:49.600><c> end</c><00:08:49.760><c> up</c><00:08:49.920><c> returning</c>

00:08:50.389 --> 00:08:50.399 align:start position:0%
we're going to end up returning
 

00:08:50.399 --> 00:08:52.870 align:start position:0%
we're going to end up returning
zero<00:08:50.880><c> there's</c><00:08:51.279><c> no</c><00:08:51.680><c> subsequences</c><00:08:52.560><c> of</c><00:08:52.720><c> the</c>

00:08:52.870 --> 00:08:52.880 align:start position:0%
zero there's no subsequences of the
 

00:08:52.880 --> 00:08:53.509 align:start position:0%
zero there's no subsequences of the
string<00:08:53.279><c> s</c>

00:08:53.509 --> 00:08:53.519 align:start position:0%
string s
 

00:08:53.519 --> 00:08:55.910 align:start position:0%
string s
that<00:08:53.839><c> match</c><00:08:54.160><c> string</c><00:08:54.560><c> t</c><00:08:55.040><c> so</c><00:08:55.200><c> that's</c><00:08:55.600><c> all</c><00:08:55.839><c> that</c>

00:08:55.910 --> 00:08:55.920 align:start position:0%
that match string t so that's all that
 

00:08:55.920 --> 00:08:57.750 align:start position:0%
that match string t so that's all that
we<00:08:56.080><c> need</c><00:08:56.240><c> to</c><00:08:56.320><c> cover</c><00:08:56.640><c> we</c><00:08:56.800><c> have</c><00:08:56.959><c> our</c><00:08:57.120><c> base</c><00:08:57.360><c> cases</c>

00:08:57.750 --> 00:08:57.760 align:start position:0%
we need to cover we have our base cases
 

00:08:57.760 --> 00:08:59.750 align:start position:0%
we need to cover we have our base cases
handled<00:08:58.240><c> and</c><00:08:58.399><c> we</c><00:08:58.560><c> have</c><00:08:58.800><c> this</c><00:08:59.120><c> logic</c><00:08:59.519><c> that</c><00:08:59.680><c> we</c>

00:08:59.750 --> 00:08:59.760 align:start position:0%
handled and we have this logic that we
 

00:08:59.760 --> 00:09:00.870 align:start position:0%
handled and we have this logic that we
are<00:08:59.920><c> going</c><00:09:00.000><c> to</c><00:09:00.080><c> be</c><00:09:00.240><c> using</c>

00:09:00.870 --> 00:09:00.880 align:start position:0%
are going to be using
 

00:09:00.880 --> 00:09:03.269 align:start position:0%
are going to be using
so<00:09:01.120><c> now</c><00:09:01.279><c> let's</c><00:09:01.440><c> get</c><00:09:01.680><c> into</c><00:09:01.839><c> the</c><00:09:02.000><c> code</c><00:09:02.720><c> so</c><00:09:02.959><c> as</c><00:09:03.120><c> i</c>

00:09:03.269 --> 00:09:03.279 align:start position:0%
so now let's get into the code so as i
 

00:09:03.279 --> 00:09:04.550 align:start position:0%
so now let's get into the code so as i
mentioned<00:09:03.600><c> we</c><00:09:03.760><c> are</c><00:09:03.920><c> going</c><00:09:04.000><c> to</c><00:09:04.080><c> be</c><00:09:04.160><c> using</c><00:09:04.399><c> a</c>

00:09:04.550 --> 00:09:04.560 align:start position:0%
mentioned we are going to be using a
 

00:09:04.560 --> 00:09:06.150 align:start position:0%
mentioned we are going to be using a
cache<00:09:04.959><c> you</c><00:09:05.040><c> could</c><00:09:05.200><c> use</c><00:09:05.360><c> a</c><00:09:05.519><c> two-dimensional</c>

00:09:06.150 --> 00:09:06.160 align:start position:0%
cache you could use a two-dimensional
 

00:09:06.160 --> 00:09:08.470 align:start position:0%
cache you could use a two-dimensional
array<00:09:06.480><c> for</c><00:09:06.640><c> this</c><00:09:06.800><c> but</c><00:09:07.040><c> i</c><00:09:07.120><c> prefer</c><00:09:07.519><c> using</c><00:09:07.920><c> a</c><00:09:08.160><c> hash</c>

00:09:08.470 --> 00:09:08.480 align:start position:0%
array for this but i prefer using a hash
 

00:09:08.480 --> 00:09:10.310 align:start position:0%
array for this but i prefer using a hash
map<00:09:08.720><c> or</c><00:09:08.880><c> dictionary</c><00:09:09.440><c> in</c><00:09:09.600><c> python</c>

00:09:10.310 --> 00:09:10.320 align:start position:0%
map or dictionary in python
 

00:09:10.320 --> 00:09:12.230 align:start position:0%
map or dictionary in python
because<00:09:10.640><c> it</c><00:09:10.800><c> just</c><00:09:11.200><c> is</c><00:09:11.360><c> a</c><00:09:11.440><c> little</c><00:09:11.600><c> bit</c><00:09:11.839><c> easier</c>

00:09:12.230 --> 00:09:12.240 align:start position:0%
because it just is a little bit easier
 

00:09:12.240 --> 00:09:14.150 align:start position:0%
because it just is a little bit easier
for<00:09:12.399><c> me</c><00:09:13.040><c> so</c><00:09:13.200><c> we're</c><00:09:13.360><c> going</c><00:09:13.360><c> to</c><00:09:13.440><c> be</c><00:09:13.600><c> passing</c><00:09:13.920><c> two</c>

00:09:14.150 --> 00:09:14.160 align:start position:0%
for me so we're going to be passing two
 

00:09:14.160 --> 00:09:15.030 align:start position:0%
for me so we're going to be passing two
parameters<00:09:14.800><c> i</c>

00:09:15.030 --> 00:09:15.040 align:start position:0%
parameters i
 

00:09:15.040 --> 00:09:16.949 align:start position:0%
parameters i
and<00:09:15.120><c> j</c><00:09:15.360><c> which</c><00:09:15.600><c> tell</c><00:09:15.839><c> us</c><00:09:16.000><c> the</c><00:09:16.320><c> corresponding</c>

00:09:16.949 --> 00:09:16.959 align:start position:0%
and j which tell us the corresponding
 

00:09:16.959 --> 00:09:18.310 align:start position:0%
and j which tell us the corresponding
positions<00:09:17.440><c> of</c><00:09:17.600><c> string</c><00:09:18.000><c> s</c>

00:09:18.310 --> 00:09:18.320 align:start position:0%
positions of string s
 

00:09:18.320 --> 00:09:20.949 align:start position:0%
positions of string s
and<00:09:18.480><c> string</c><00:09:18.800><c> t</c><00:09:19.040><c> that</c><00:09:19.200><c> we're</c><00:09:19.440><c> currently</c><00:09:20.000><c> at</c><00:09:20.720><c> we</c>

00:09:20.949 --> 00:09:20.959 align:start position:0%
and string t that we're currently at we
 

00:09:20.959 --> 00:09:22.710 align:start position:0%
and string t that we're currently at we
know<00:09:21.120><c> that</c><00:09:21.360><c> one</c><00:09:21.600><c> base</c><00:09:21.920><c> case</c><00:09:22.240><c> is</c><00:09:22.399><c> if</c>

00:09:22.710 --> 00:09:22.720 align:start position:0%
know that one base case is if
 

00:09:22.720 --> 00:09:25.670 align:start position:0%
know that one base case is if
j<00:09:23.360><c> has</c><00:09:23.600><c> reached</c><00:09:23.920><c> the</c><00:09:24.160><c> end</c><00:09:24.320><c> of</c><00:09:24.399><c> the</c><00:09:24.560><c> string</c><00:09:25.440><c> that</c>

00:09:25.670 --> 00:09:25.680 align:start position:0%
j has reached the end of the string that
 

00:09:25.680 --> 00:09:26.150 align:start position:0%
j has reached the end of the string that
means

00:09:26.150 --> 00:09:26.160 align:start position:0%
means
 

00:09:26.160 --> 00:09:28.790 align:start position:0%
means
string<00:09:26.560><c> t</c><00:09:26.880><c> is</c><00:09:27.120><c> empty</c><00:09:27.519><c> that</c><00:09:27.760><c> means</c><00:09:28.399><c> we</c><00:09:28.560><c> can</c>

00:09:28.790 --> 00:09:28.800 align:start position:0%
string t is empty that means we can
 

00:09:28.800 --> 00:09:30.630 align:start position:0%
string t is empty that means we can
return<00:09:29.200><c> one</c><00:09:29.519><c> as</c><00:09:29.680><c> the</c><00:09:29.760><c> base</c><00:09:30.000><c> case</c><00:09:30.240><c> as</c><00:09:30.399><c> we</c>

00:09:30.630 --> 00:09:30.640 align:start position:0%
return one as the base case as we
 

00:09:30.640 --> 00:09:32.150 align:start position:0%
return one as the base case as we
previously<00:09:31.279><c> discussed</c>

00:09:32.150 --> 00:09:32.160 align:start position:0%
previously discussed
 

00:09:32.160 --> 00:09:34.150 align:start position:0%
previously discussed
the<00:09:32.399><c> other</c><00:09:32.640><c> base</c><00:09:32.959><c> case</c><00:09:33.279><c> is</c><00:09:33.440><c> if</c><00:09:33.519><c> we</c><00:09:33.680><c> reach</c><00:09:33.920><c> the</c>

00:09:34.150 --> 00:09:34.160 align:start position:0%
the other base case is if we reach the
 

00:09:34.160 --> 00:09:35.190 align:start position:0%
the other base case is if we reach the
end<00:09:34.399><c> of</c><00:09:34.640><c> string</c>

00:09:35.190 --> 00:09:35.200 align:start position:0%
end of string
 

00:09:35.200 --> 00:09:37.750 align:start position:0%
end of string
s<00:09:35.839><c> and</c><00:09:36.080><c> that</c><00:09:36.240><c> means</c><00:09:36.560><c> we</c><00:09:36.720><c> can't</c><00:09:37.040><c> possibly</c><00:09:37.519><c> match</c>

00:09:37.750 --> 00:09:37.760 align:start position:0%
s and that means we can't possibly match
 

00:09:37.760 --> 00:09:38.470 align:start position:0%
s and that means we can't possibly match
the<00:09:37.920><c> string</c><00:09:38.240><c> t</c>

00:09:38.470 --> 00:09:38.480 align:start position:0%
the string t
 

00:09:38.480 --> 00:09:40.150 align:start position:0%
the string t
anymore<00:09:38.800><c> so</c><00:09:39.040><c> we're</c><00:09:39.200><c> going</c><00:09:39.279><c> to</c><00:09:39.360><c> return</c><00:09:39.760><c> 0</c><00:09:40.000><c> in</c>

00:09:40.150 --> 00:09:40.160 align:start position:0%
anymore so we're going to return 0 in
 

00:09:40.160 --> 00:09:41.750 align:start position:0%
anymore so we're going to return 0 in
that<00:09:40.240><c> case</c><00:09:40.640><c> last</c><00:09:40.959><c> base</c><00:09:41.279><c> case</c>

00:09:41.750 --> 00:09:41.760 align:start position:0%
that case last base case
 

00:09:41.760 --> 00:09:44.710 align:start position:0%
that case last base case
is<00:09:41.920><c> if</c><00:09:42.080><c> this</c><00:09:42.399><c> ij</c><00:09:42.959><c> pair</c><00:09:43.519><c> has</c><00:09:43.839><c> already</c><00:09:44.399><c> been</c>

00:09:44.710 --> 00:09:44.720 align:start position:0%
is if this ij pair has already been
 

00:09:44.720 --> 00:09:45.350 align:start position:0%
is if this ij pair has already been
computed

00:09:45.350 --> 00:09:45.360 align:start position:0%
computed
 

00:09:45.360 --> 00:09:47.910 align:start position:0%
computed
in<00:09:45.680><c> our</c><00:09:46.000><c> cache</c><00:09:46.640><c> if</c><00:09:46.800><c> that's</c><00:09:47.040><c> the</c><00:09:47.200><c> case</c><00:09:47.600><c> then</c><00:09:47.839><c> we</c>

00:09:47.910 --> 00:09:47.920 align:start position:0%
in our cache if that's the case then we
 

00:09:47.920 --> 00:09:48.870 align:start position:0%
in our cache if that's the case then we
can<00:09:48.080><c> return</c>

00:09:48.870 --> 00:09:48.880 align:start position:0%
can return
 

00:09:48.880 --> 00:09:51.590 align:start position:0%
can return
the<00:09:49.040><c> value</c><00:09:49.360><c> that</c><00:09:49.600><c> is</c><00:09:49.760><c> stored</c><00:09:50.240><c> in</c><00:09:50.399><c> our</c><00:09:50.640><c> cache</c><00:09:51.360><c> so</c>

00:09:51.590 --> 00:09:51.600 align:start position:0%
the value that is stored in our cache so
 

00:09:51.600 --> 00:09:53.509 align:start position:0%
the value that is stored in our cache so
then<00:09:51.760><c> we</c><00:09:51.920><c> remember</c><00:09:52.399><c> there's</c><00:09:52.720><c> two</c><00:09:52.959><c> cases</c><00:09:53.360><c> for</c>

00:09:53.509 --> 00:09:53.519 align:start position:0%
then we remember there's two cases for
 

00:09:53.519 --> 00:09:55.670 align:start position:0%
then we remember there's two cases for
the<00:09:53.680><c> logic</c><00:09:54.080><c> that</c><00:09:54.160><c> we</c><00:09:54.320><c> have</c><00:09:54.399><c> to</c><00:09:54.560><c> cover</c><00:09:54.880><c> so</c><00:09:55.120><c> if</c><00:09:55.360><c> s</c>

00:09:55.670 --> 00:09:55.680 align:start position:0%
the logic that we have to cover so if s
 

00:09:55.680 --> 00:09:58.790 align:start position:0%
the logic that we have to cover so if s
of<00:09:55.920><c> i</c><00:09:56.320><c> matches</c><00:09:56.720><c> exactly</c><00:09:57.279><c> t</c><00:09:57.680><c> of</c><00:09:58.000><c> j</c>

00:09:58.790 --> 00:09:58.800 align:start position:0%
of i matches exactly t of j
 

00:09:58.800 --> 00:10:00.470 align:start position:0%
of i matches exactly t of j
then<00:09:59.360><c> we</c><00:09:59.519><c> know</c><00:09:59.760><c> we're</c><00:09:59.920><c> gonna</c><00:10:00.080><c> be</c><00:10:00.240><c> running</c>

00:10:00.470 --> 00:10:00.480 align:start position:0%
then we know we're gonna be running
 

00:10:00.480 --> 00:10:01.829 align:start position:0%
then we know we're gonna be running
depth<00:10:00.720><c> first</c><00:10:00.880><c> search</c><00:10:01.120><c> we're</c><00:10:01.279><c> gonna</c><00:10:01.440><c> be</c><00:10:01.600><c> doing</c>

00:10:01.829 --> 00:10:01.839 align:start position:0%
depth first search we're gonna be doing
 

00:10:01.839 --> 00:10:03.190 align:start position:0%
depth first search we're gonna be doing
it<00:10:01.920><c> two</c><00:10:02.160><c> different</c><00:10:02.399><c> ways</c><00:10:02.640><c> we're</c><00:10:02.800><c> gonna</c><00:10:02.959><c> be</c>

00:10:03.190 --> 00:10:03.200 align:start position:0%
it two different ways we're gonna be
 

00:10:03.200 --> 00:10:05.509 align:start position:0%
it two different ways we're gonna be
looking<00:10:03.440><c> at</c><00:10:03.519><c> the</c><00:10:03.680><c> remainder</c><00:10:04.399><c> of</c><00:10:04.640><c> string</c><00:10:05.120><c> s</c>

00:10:05.509 --> 00:10:05.519 align:start position:0%
looking at the remainder of string s
 

00:10:05.519 --> 00:10:07.670 align:start position:0%
looking at the remainder of string s
and<00:10:05.600><c> the</c><00:10:05.760><c> remainder</c><00:10:06.160><c> of</c><00:10:06.240><c> string</c><00:10:06.640><c> t</c><00:10:07.279><c> and</c><00:10:07.519><c> we're</c>

00:10:07.670 --> 00:10:07.680 align:start position:0%
and the remainder of string t and we're
 

00:10:07.680 --> 00:10:09.030 align:start position:0%
and the remainder of string t and we're
going<00:10:07.760><c> to</c><00:10:08.000><c> also</c><00:10:08.240><c> be</c><00:10:08.399><c> calling</c><00:10:08.640><c> depth</c><00:10:08.880><c> for</c>

00:10:09.030 --> 00:10:09.040 align:start position:0%
going to also be calling depth for
 

00:10:09.040 --> 00:10:09.750 align:start position:0%
going to also be calling depth for
search

00:10:09.750 --> 00:10:09.760 align:start position:0%
search
 

00:10:09.760 --> 00:10:12.790 align:start position:0%
search
with<00:10:10.000><c> the</c><00:10:10.079><c> remainder</c><00:10:10.640><c> of</c><00:10:10.800><c> string</c><00:10:11.360><c> s</c><00:10:12.000><c> but</c><00:10:12.640><c> the</c>

00:10:12.790 --> 00:10:12.800 align:start position:0%
with the remainder of string s but the
 

00:10:12.800 --> 00:10:14.949 align:start position:0%
with the remainder of string s but the
entirety<00:10:13.519><c> of</c><00:10:13.680><c> string</c><00:10:14.160><c> t</c><00:10:14.399><c> so</c><00:10:14.560><c> we're</c><00:10:14.800><c> going</c><00:10:14.880><c> to</c>

00:10:14.949 --> 00:10:14.959 align:start position:0%
entirety of string t so we're going to
 

00:10:14.959 --> 00:10:15.990 align:start position:0%
entirety of string t so we're going to
be<00:10:15.120><c> incrementing</c><00:10:15.680><c> i</c>

00:10:15.990 --> 00:10:16.000 align:start position:0%
be incrementing i
 

00:10:16.000 --> 00:10:18.069 align:start position:0%
be incrementing i
but<00:10:16.160><c> not</c><00:10:16.399><c> incrementing</c><00:10:16.959><c> j</c><00:10:17.279><c> in</c><00:10:17.440><c> this</c><00:10:17.519><c> case</c><00:10:18.000><c> and</c>

00:10:18.069 --> 00:10:18.079 align:start position:0%
but not incrementing j in this case and
 

00:10:18.079 --> 00:10:19.350 align:start position:0%
but not incrementing j in this case and
we're<00:10:18.240><c> going</c><00:10:18.320><c> to</c><00:10:18.399><c> call</c><00:10:18.640><c> both</c><00:10:18.880><c> of</c><00:10:18.959><c> these</c>

00:10:19.350 --> 00:10:19.360 align:start position:0%
we're going to call both of these
 

00:10:19.360 --> 00:10:21.350 align:start position:0%
we're going to call both of these
and<00:10:19.600><c> total</c><00:10:20.079><c> up</c><00:10:20.240><c> the</c><00:10:20.320><c> result</c><00:10:20.800><c> and</c><00:10:20.880><c> then</c><00:10:21.120><c> once</c>

00:10:21.350 --> 00:10:21.360 align:start position:0%
and total up the result and then once
 

00:10:21.360 --> 00:10:23.509 align:start position:0%
and total up the result and then once
that<00:10:21.600><c> has</c><00:10:21.760><c> been</c><00:10:22.079><c> totaled</c><00:10:22.560><c> we</c><00:10:22.720><c> can</c><00:10:22.880><c> return</c><00:10:23.279><c> it</c>

00:10:23.509 --> 00:10:23.519 align:start position:0%
that has been totaled we can return it
 

00:10:23.519 --> 00:10:25.030 align:start position:0%
that has been totaled we can return it
but<00:10:23.680><c> before</c><00:10:24.000><c> we</c><00:10:24.160><c> return</c><00:10:24.480><c> it</c><00:10:24.560><c> we</c><00:10:24.720><c> want</c><00:10:24.800><c> to</c><00:10:24.880><c> make</c>

00:10:25.030 --> 00:10:25.040 align:start position:0%
but before we return it we want to make
 

00:10:25.040 --> 00:10:26.470 align:start position:0%
but before we return it we want to make
sure<00:10:25.200><c> that</c><00:10:25.360><c> we</c><00:10:25.600><c> cache</c><00:10:26.000><c> it</c>

00:10:26.470 --> 00:10:26.480 align:start position:0%
sure that we cache it
 

00:10:26.480 --> 00:10:28.550 align:start position:0%
sure that we cache it
so<00:10:26.720><c> let's</c><00:10:26.880><c> put</c><00:10:27.120><c> it</c><00:10:27.279><c> in</c><00:10:27.360><c> the</c><00:10:27.519><c> cache</c><00:10:27.839><c> at</c><00:10:28.000><c> position</c>

00:10:28.550 --> 00:10:28.560 align:start position:0%
so let's put it in the cache at position
 

00:10:28.560 --> 00:10:29.509 align:start position:0%
so let's put it in the cache at position
i<00:10:28.880><c> j</c>

00:10:29.509 --> 00:10:29.519 align:start position:0%
i j
 

00:10:29.519 --> 00:10:32.150 align:start position:0%
i j
the<00:10:29.760><c> else</c><00:10:30.079><c> condition</c><00:10:30.720><c> is</c><00:10:30.959><c> basically</c><00:10:31.680><c> the</c><00:10:31.920><c> same</c>

00:10:32.150 --> 00:10:32.160 align:start position:0%
the else condition is basically the same
 

00:10:32.160 --> 00:10:32.550 align:start position:0%
the else condition is basically the same
thing

00:10:32.550 --> 00:10:32.560 align:start position:0%
thing
 

00:10:32.560 --> 00:10:35.829 align:start position:0%
thing
as<00:10:32.880><c> this</c><00:10:33.519><c> except</c><00:10:34.240><c> i'm</c><00:10:34.399><c> gonna</c><00:10:34.560><c> copy</c><00:10:34.959><c> paste</c><00:10:35.279><c> it</c>

00:10:35.829 --> 00:10:35.839 align:start position:0%
as this except i'm gonna copy paste it
 

00:10:35.839 --> 00:10:38.790 align:start position:0%
as this except i'm gonna copy paste it
so<00:10:36.079><c> except</c><00:10:36.800><c> this</c><00:10:37.200><c> portion</c><00:10:37.920><c> right</c><00:10:38.399><c> since</c><00:10:38.640><c> these</c>

00:10:38.790 --> 00:10:38.800 align:start position:0%
so except this portion right since these
 

00:10:38.800 --> 00:10:39.990 align:start position:0%
so except this portion right since these
characters<00:10:39.279><c> don't</c><00:10:39.519><c> match</c>

00:10:39.990 --> 00:10:40.000 align:start position:0%
characters don't match
 

00:10:40.000 --> 00:10:42.230 align:start position:0%
characters don't match
we<00:10:40.160><c> have</c><00:10:40.320><c> to</c><00:10:40.640><c> only</c><00:10:41.040><c> shift</c><00:10:41.360><c> our</c><00:10:41.600><c> eye</c><00:10:41.760><c> pointer</c><00:10:42.079><c> we</c>

00:10:42.230 --> 00:10:42.240 align:start position:0%
we have to only shift our eye pointer we
 

00:10:42.240 --> 00:10:43.269 align:start position:0%
we have to only shift our eye pointer we
still<00:10:42.399><c> have</c><00:10:42.560><c> to</c><00:10:42.720><c> look</c><00:10:42.880><c> for</c>

00:10:43.269 --> 00:10:43.279 align:start position:0%
still have to look for
 

00:10:43.279 --> 00:10:45.269 align:start position:0%
still have to look for
a<00:10:43.440><c> character</c><00:10:43.839><c> that</c><00:10:44.000><c> matches</c><00:10:44.640><c> the</c><00:10:44.800><c> character</c>

00:10:45.269 --> 00:10:45.279 align:start position:0%
a character that matches the character
 

00:10:45.279 --> 00:10:46.710 align:start position:0%
a character that matches the character
at<00:10:45.440><c> position</c><00:10:46.000><c> j</c>

00:10:46.710 --> 00:10:46.720 align:start position:0%
at position j
 

00:10:46.720 --> 00:10:48.150 align:start position:0%
at position j
and<00:10:46.959><c> once</c><00:10:47.200><c> either</c><00:10:47.519><c> of</c><00:10:47.600><c> these</c><00:10:47.839><c> has</c><00:10:48.000><c> been</c>

00:10:48.150 --> 00:10:48.160 align:start position:0%
and once either of these has been
 

00:10:48.160 --> 00:10:49.910 align:start position:0%
and once either of these has been
computed<00:10:48.640><c> then</c><00:10:48.880><c> we</c><00:10:48.959><c> can</c><00:10:49.120><c> return</c><00:10:49.519><c> whatever</c>

00:10:49.910 --> 00:10:49.920 align:start position:0%
computed then we can return whatever
 

00:10:49.920 --> 00:10:50.470 align:start position:0%
computed then we can return whatever
value

00:10:50.470 --> 00:10:50.480 align:start position:0%
value
 

00:10:50.480 --> 00:10:53.190 align:start position:0%
value
we<00:10:50.720><c> ended</c><00:10:50.959><c> up</c><00:10:51.120><c> storing</c><00:10:51.600><c> in</c><00:10:51.839><c> our</c><00:10:52.079><c> cache</c><00:10:53.040><c> and</c>

00:10:53.190 --> 00:10:53.200 align:start position:0%
we ended up storing in our cache and
 

00:10:53.200 --> 00:10:55.110 align:start position:0%
we ended up storing in our cache and
this<00:10:53.440><c> is</c><00:10:53.600><c> the</c><00:10:53.760><c> entirety</c><00:10:54.399><c> of</c><00:10:54.560><c> the</c><00:10:54.720><c> depth</c><00:10:54.959><c> first</c>

00:10:55.110 --> 00:10:55.120 align:start position:0%
this is the entirety of the depth first
 

00:10:55.120 --> 00:10:56.949 align:start position:0%
this is the entirety of the depth first
search<00:10:55.440><c> function</c><00:10:55.839><c> pretty</c><00:10:56.079><c> short</c><00:10:56.480><c> because</c><00:10:56.800><c> we</c>

00:10:56.949 --> 00:10:56.959 align:start position:0%
search function pretty short because we
 

00:10:56.959 --> 00:10:58.230 align:start position:0%
search function pretty short because we
didn't<00:10:57.120><c> have</c><00:10:57.279><c> to</c><00:10:57.360><c> pass</c><00:10:57.680><c> in</c><00:10:57.839><c> a</c><00:10:57.920><c> lot</c><00:10:58.079><c> of</c>

00:10:58.230 --> 00:10:58.240 align:start position:0%
didn't have to pass in a lot of
 

00:10:58.240 --> 00:10:59.990 align:start position:0%
didn't have to pass in a lot of
variables<00:10:58.720><c> into</c><00:10:58.880><c> it</c><00:10:59.040><c> because</c><00:10:59.200><c> i</c><00:10:59.360><c> defined</c><00:10:59.760><c> this</c>

00:10:59.990 --> 00:11:00.000 align:start position:0%
variables into it because i defined this
 

00:11:00.000 --> 00:11:01.829 align:start position:0%
variables into it because i defined this
function<00:11:00.399><c> inside</c><00:11:00.800><c> of</c><00:11:00.880><c> another</c><00:11:01.200><c> function</c><00:11:01.680><c> that</c>

00:11:01.829 --> 00:11:01.839 align:start position:0%
function inside of another function that
 

00:11:01.839 --> 00:11:03.269 align:start position:0%
function inside of another function that
just<00:11:02.000><c> makes</c><00:11:02.160><c> things</c><00:11:02.480><c> easier</c><00:11:02.800><c> for</c><00:11:02.959><c> me</c>

00:11:03.269 --> 00:11:03.279 align:start position:0%
just makes things easier for me
 

00:11:03.279 --> 00:11:05.110 align:start position:0%
just makes things easier for me
so<00:11:03.440><c> now</c><00:11:03.680><c> all</c><00:11:03.839><c> we</c><00:11:03.920><c> have</c><00:11:04.000><c> to</c><00:11:04.079><c> do</c><00:11:04.320><c> is</c><00:11:04.560><c> call</c><00:11:04.800><c> it</c><00:11:04.959><c> so</c>

00:11:05.110 --> 00:11:05.120 align:start position:0%
so now all we have to do is call it so
 

00:11:05.120 --> 00:11:06.949 align:start position:0%
so now all we have to do is call it so
let's<00:11:05.360><c> call</c><00:11:06.000><c> debt</c><00:11:06.240><c> for</c><00:11:06.399><c> search</c>

00:11:06.949 --> 00:11:06.959 align:start position:0%
let's call debt for search
 

00:11:06.959 --> 00:11:08.870 align:start position:0%
let's call debt for search
starting<00:11:07.279><c> at</c><00:11:07.440><c> 0</c><00:11:07.760><c> 0</c><00:11:08.079><c> for</c><00:11:08.320><c> both</c><00:11:08.640><c> of</c><00:11:08.720><c> the</c>

00:11:08.870 --> 00:11:08.880 align:start position:0%
starting at 0 0 for both of the
 

00:11:08.880 --> 00:11:10.150 align:start position:0%
starting at 0 0 for both of the
beginning<00:11:09.200><c> of</c><00:11:09.360><c> the</c><00:11:09.519><c> strings</c>

00:11:10.150 --> 00:11:10.160 align:start position:0%
beginning of the strings
 

00:11:10.160 --> 00:11:12.150 align:start position:0%
beginning of the strings
and<00:11:10.240><c> then</c><00:11:10.399><c> we</c><00:11:10.560><c> return</c><00:11:10.959><c> the</c><00:11:11.120><c> result</c><00:11:11.680><c> so</c><00:11:11.839><c> this</c><00:11:12.079><c> is</c>

00:11:12.150 --> 00:11:12.160 align:start position:0%
and then we return the result so this is
 

00:11:12.160 --> 00:11:13.350 align:start position:0%
and then we return the result so this is
going<00:11:12.240><c> to</c><00:11:12.320><c> be</c><00:11:12.560><c> big</c><00:11:12.800><c> o</c>

00:11:13.350 --> 00:11:13.360 align:start position:0%
going to be big o
 

00:11:13.360 --> 00:11:15.670 align:start position:0%
going to be big o
n<00:11:13.600><c> times</c><00:11:14.000><c> m</c><00:11:14.480><c> basically</c><00:11:15.040><c> multiplying</c><00:11:15.519><c> the</c>

00:11:15.670 --> 00:11:15.680 align:start position:0%
n times m basically multiplying the
 

00:11:15.680 --> 00:11:16.949 align:start position:0%
n times m basically multiplying the
length<00:11:16.000><c> of</c><00:11:16.079><c> the</c><00:11:16.160><c> strings</c><00:11:16.480><c> together</c>

00:11:16.949 --> 00:11:16.959 align:start position:0%
length of the strings together
 

00:11:16.959 --> 00:11:19.110 align:start position:0%
length of the strings together
time<00:11:17.360><c> and</c><00:11:17.519><c> memory</c><00:11:17.839><c> complexity</c><00:11:18.640><c> i</c><00:11:18.800><c> hope</c><00:11:18.959><c> that</c>

00:11:19.110 --> 00:11:19.120 align:start position:0%
time and memory complexity i hope that
 

00:11:19.120 --> 00:11:20.069 align:start position:0%
time and memory complexity i hope that
this<00:11:19.279><c> was</c><00:11:19.519><c> helpful</c>

00:11:20.069 --> 00:11:20.079 align:start position:0%
this was helpful
 

00:11:20.079 --> 00:11:22.150 align:start position:0%
this was helpful
if<00:11:20.240><c> it</c><00:11:20.399><c> was</c><00:11:20.880><c> please</c><00:11:21.200><c> like</c><00:11:21.440><c> and</c><00:11:21.519><c> subscribe</c><00:11:22.000><c> it</c>

00:11:22.150 --> 00:11:22.160 align:start position:0%
if it was please like and subscribe it
 

00:11:22.160 --> 00:11:24.150 align:start position:0%
if it was please like and subscribe it
supports<00:11:22.560><c> the</c><00:11:22.720><c> channel</c><00:11:23.120><c> a</c><00:11:23.440><c> lot</c><00:11:23.760><c> and</c><00:11:23.920><c> i'll</c>

00:11:24.150 --> 00:11:24.160 align:start position:0%
supports the channel a lot and i'll
 

00:11:24.160 --> 00:11:24.949 align:start position:0%
supports the channel a lot and i'll
hopefully

00:11:24.949 --> 00:11:24.959 align:start position:0%
hopefully
 

00:11:24.959 --> 00:11:29.839 align:start position:0%
hopefully
see<00:11:25.120><c> you</c><00:11:25.360><c> pretty</c><00:11:25.600><c> soon</c><00:11:26.240><c> thanks</c><00:11:26.480><c> for</c><00:11:26.839><c> watching</c>

