WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.750 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.719><c> welcome</c><00:00:01.120><c> back</c><00:00:01.439><c> and</c><00:00:01.520><c> let's</c>

00:00:01.750 --> 00:00:01.760 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.760 --> 00:00:03.750 align:start position:0%
hey everyone welcome back and let's
write<00:00:02.000><c> some</c><00:00:02.159><c> more</c><00:00:02.399><c> neat</c><00:00:02.639><c> code</c><00:00:02.960><c> today</c><00:00:03.280><c> so</c><00:00:03.439><c> today</c>

00:00:03.750 --> 00:00:03.760 align:start position:0%
write some more neat code today so today
 

00:00:03.760 --> 00:00:04.390 align:start position:0%
write some more neat code today so today
let's<00:00:04.080><c> all</c>

00:00:04.390 --> 00:00:04.400 align:start position:0%
let's all
 

00:00:04.400 --> 00:00:06.869 align:start position:0%
let's all
find<00:00:04.720><c> the</c><00:00:04.960><c> duplicate</c><00:00:05.759><c> number</c><00:00:06.399><c> and</c><00:00:06.560><c> you</c><00:00:06.720><c> can</c>

00:00:06.869 --> 00:00:06.879 align:start position:0%
find the duplicate number and you can
 

00:00:06.879 --> 00:00:07.749 align:start position:0%
find the duplicate number and you can
see<00:00:07.120><c> that</c><00:00:07.279><c> i'm</c><00:00:07.440><c> not</c>

00:00:07.749 --> 00:00:07.759 align:start position:0%
see that i'm not
 

00:00:07.759 --> 00:00:09.830 align:start position:0%
see that i'm not
really<00:00:08.080><c> a</c><00:00:08.240><c> big</c><00:00:08.480><c> fan</c><00:00:08.720><c> of</c><00:00:08.800><c> this</c><00:00:09.120><c> problem</c><00:00:09.599><c> and</c>

00:00:09.830 --> 00:00:09.840 align:start position:0%
really a big fan of this problem and
 

00:00:09.840 --> 00:00:11.910 align:start position:0%
really a big fan of this problem and
maybe<00:00:10.160><c> i'm</c><00:00:10.240><c> just</c><00:00:10.480><c> salty</c><00:00:10.960><c> but</c><00:00:11.120><c> i</c><00:00:11.280><c> really</c><00:00:11.679><c> feel</c>

00:00:11.910 --> 00:00:11.920 align:start position:0%
maybe i'm just salty but i really feel
 

00:00:11.920 --> 00:00:13.350 align:start position:0%
maybe i'm just salty but i really feel
like<00:00:12.160><c> this</c><00:00:12.400><c> type</c><00:00:12.639><c> of</c><00:00:12.799><c> problem</c>

00:00:13.350 --> 00:00:13.360 align:start position:0%
like this type of problem
 

00:00:13.360 --> 00:00:15.270 align:start position:0%
like this type of problem
is<00:00:13.519><c> the</c><00:00:13.679><c> ultimate</c><00:00:14.240><c> test</c><00:00:14.559><c> of</c><00:00:14.719><c> whether</c><00:00:14.960><c> you've</c>

00:00:15.270 --> 00:00:15.280 align:start position:0%
is the ultimate test of whether you've
 

00:00:15.280 --> 00:00:16.870 align:start position:0%
is the ultimate test of whether you've
seen<00:00:15.519><c> the</c><00:00:15.679><c> problem</c><00:00:16.080><c> or</c><00:00:16.320><c> not</c>

00:00:16.870 --> 00:00:16.880 align:start position:0%
seen the problem or not
 

00:00:16.880 --> 00:00:18.470 align:start position:0%
seen the problem or not
but<00:00:17.039><c> i'm</c><00:00:17.199><c> still</c><00:00:17.440><c> solving</c><00:00:17.840><c> it</c><00:00:17.920><c> nonetheless</c>

00:00:18.470 --> 00:00:18.480 align:start position:0%
but i'm still solving it nonetheless
 

00:00:18.480 --> 00:00:20.710 align:start position:0%
but i'm still solving it nonetheless
because<00:00:18.800><c> it's</c><00:00:19.279><c> an</c><00:00:19.439><c> interesting</c><00:00:20.000><c> problem</c>

00:00:20.710 --> 00:00:20.720 align:start position:0%
because it's an interesting problem
 

00:00:20.720 --> 00:00:22.550 align:start position:0%
because it's an interesting problem
and<00:00:20.960><c> it</c><00:00:21.039><c> does</c><00:00:21.279><c> show</c><00:00:21.520><c> up</c><00:00:21.600><c> in</c><00:00:21.760><c> interviews</c><00:00:22.320><c> quite</c>

00:00:22.550 --> 00:00:22.560 align:start position:0%
and it does show up in interviews quite
 

00:00:22.560 --> 00:00:24.630 align:start position:0%
and it does show up in interviews quite
a<00:00:22.640><c> lot</c><00:00:22.880><c> it</c><00:00:23.119><c> seems</c><00:00:23.680><c> i</c><00:00:23.840><c> really</c><00:00:24.080><c> don't</c><00:00:24.320><c> know</c><00:00:24.480><c> how</c>

00:00:24.630 --> 00:00:24.640 align:start position:0%
a lot it seems i really don't know how
 

00:00:24.640 --> 00:00:26.230 align:start position:0%
a lot it seems i really don't know how
anyone<00:00:24.960><c> would</c><00:00:25.119><c> be</c><00:00:25.279><c> able</c><00:00:25.519><c> to</c><00:00:25.680><c> solve</c><00:00:26.000><c> this</c>

00:00:26.230 --> 00:00:26.240 align:start position:0%
anyone would be able to solve this
 

00:00:26.240 --> 00:00:28.070 align:start position:0%
anyone would be able to solve this
problem<00:00:26.720><c> in</c><00:00:26.880><c> a</c><00:00:26.960><c> 30</c><00:00:27.199><c> minute</c><00:00:27.439><c> interview</c><00:00:27.840><c> without</c>

00:00:28.070 --> 00:00:28.080 align:start position:0%
problem in a 30 minute interview without
 

00:00:28.080 --> 00:00:29.750 align:start position:0%
problem in a 30 minute interview without
having<00:00:28.320><c> seen</c><00:00:28.640><c> even</c><00:00:28.880><c> the</c><00:00:28.960><c> person</c><00:00:29.279><c> who</c><00:00:29.439><c> came</c><00:00:29.679><c> up</c>

00:00:29.750 --> 00:00:29.760 align:start position:0%
having seen even the person who came up
 

00:00:29.760 --> 00:00:29.990 align:start position:0%
having seen even the person who came up
with

00:00:29.990 --> 00:00:30.000 align:start position:0%
with
 

00:00:30.000 --> 00:00:32.709 align:start position:0%
with
the<00:00:30.240><c> algorithm</c><00:00:30.800><c> floyd</c><00:00:31.359><c> i</c><00:00:31.840><c> i</c><00:00:32.000><c> doubt</c><00:00:32.320><c> even</c><00:00:32.480><c> he</c>

00:00:32.709 --> 00:00:32.719 align:start position:0%
the algorithm floyd i i doubt even he
 

00:00:32.719 --> 00:00:34.549 align:start position:0%
the algorithm floyd i i doubt even he
could<00:00:32.960><c> solve</c><00:00:33.280><c> this</c><00:00:33.520><c> in</c><00:00:33.600><c> 30</c><00:00:33.920><c> minutes</c><00:00:34.239><c> in</c><00:00:34.399><c> an</c>

00:00:34.549 --> 00:00:34.559 align:start position:0%
could solve this in 30 minutes in an
 

00:00:34.559 --> 00:00:35.590 align:start position:0%
could solve this in 30 minutes in an
interview<00:00:35.040><c> setting</c>

00:00:35.590 --> 00:00:35.600 align:start position:0%
interview setting
 

00:00:35.600 --> 00:00:37.190 align:start position:0%
interview setting
but<00:00:35.760><c> that's</c><00:00:36.079><c> okay</c><00:00:36.320><c> let's</c><00:00:36.559><c> just</c><00:00:36.719><c> learn</c><00:00:37.040><c> the</c>

00:00:37.190 --> 00:00:37.200 align:start position:0%
but that's okay let's just learn the
 

00:00:37.200 --> 00:00:39.430 align:start position:0%
but that's okay let's just learn the
problem<00:00:37.600><c> today</c><00:00:38.399><c> so</c><00:00:38.559><c> we're</c><00:00:38.800><c> given</c><00:00:39.200><c> an</c>

00:00:39.430 --> 00:00:39.440 align:start position:0%
problem today so we're given an
 

00:00:39.440 --> 00:00:42.630 align:start position:0%
problem today so we're given an
integer<00:00:39.920><c> array</c><00:00:40.320><c> of</c><00:00:40.640><c> nums</c><00:00:41.120><c> containing</c><00:00:42.239><c> n</c>

00:00:42.630 --> 00:00:42.640 align:start position:0%
integer array of nums containing n
 

00:00:42.640 --> 00:00:45.350 align:start position:0%
integer array of nums containing n
plus<00:00:43.120><c> one</c><00:00:43.440><c> integers</c><00:00:44.000><c> this</c><00:00:44.160><c> is</c><00:00:44.320><c> the</c><00:00:44.719><c> length</c><00:00:45.200><c> of</c>

00:00:45.350 --> 00:00:45.360 align:start position:0%
plus one integers this is the length of
 

00:00:45.360 --> 00:00:46.310 align:start position:0%
plus one integers this is the length of
the<00:00:45.520><c> array</c><00:00:46.000><c> but</c>

00:00:46.310 --> 00:00:46.320 align:start position:0%
the array but
 

00:00:46.320 --> 00:00:48.790 align:start position:0%
the array but
every<00:00:46.719><c> single</c><00:00:47.280><c> value</c><00:00:47.760><c> in</c><00:00:47.840><c> the</c><00:00:48.000><c> array</c><00:00:48.399><c> is</c><00:00:48.559><c> going</c>

00:00:48.790 --> 00:00:48.800 align:start position:0%
every single value in the array is going
 

00:00:48.800 --> 00:00:50.790 align:start position:0%
every single value in the array is going
to<00:00:49.039><c> be</c><00:00:49.280><c> within</c><00:00:49.840><c> the</c><00:00:50.160><c> range</c>

00:00:50.790 --> 00:00:50.800 align:start position:0%
to be within the range
 

00:00:50.800 --> 00:00:54.150 align:start position:0%
to be within the range
one<00:00:51.280><c> through</c><00:00:51.840><c> n</c><00:00:52.239><c> so</c><00:00:52.480><c> we</c><00:00:52.640><c> have</c><00:00:53.039><c> n</c><00:00:53.440><c> different</c>

00:00:54.150 --> 00:00:54.160 align:start position:0%
one through n so we have n different
 

00:00:54.160 --> 00:00:57.110 align:start position:0%
one through n so we have n different
values<00:00:54.640><c> that</c><00:00:54.879><c> could</c><00:00:55.120><c> be</c><00:00:55.440><c> in</c><00:00:55.920><c> the</c><00:00:56.079><c> array</c><00:00:56.640><c> like</c><00:00:56.960><c> n</c>

00:00:57.110 --> 00:00:57.120 align:start position:0%
values that could be in the array like n
 

00:00:57.120 --> 00:00:57.990 align:start position:0%
values that could be in the array like n
different

00:00:57.990 --> 00:00:58.000 align:start position:0%
different
 

00:00:58.000 --> 00:01:00.630 align:start position:0%
different
choices<00:00:58.480><c> for</c><00:00:58.640><c> the</c><00:00:58.879><c> integers</c><00:00:59.600><c> but</c><00:00:59.840><c> we</c><00:01:00.079><c> have</c><00:01:00.320><c> n</c>

00:01:00.630 --> 00:01:00.640 align:start position:0%
choices for the integers but we have n
 

00:01:00.640 --> 00:01:01.270 align:start position:0%
choices for the integers but we have n
plus

00:01:01.270 --> 00:01:01.280 align:start position:0%
plus
 

00:01:01.280 --> 00:01:03.750 align:start position:0%
plus
one<00:01:01.760><c> integers</c><00:01:02.399><c> so</c><00:01:02.640><c> that</c><00:01:02.879><c> kind</c><00:01:03.039><c> of</c><00:01:03.199><c> implies</c>

00:01:03.750 --> 00:01:03.760 align:start position:0%
one integers so that kind of implies
 

00:01:03.760 --> 00:01:05.030 align:start position:0%
one integers so that kind of implies
that<00:01:04.080><c> at</c><00:01:04.400><c> least</c>

00:01:05.030 --> 00:01:05.040 align:start position:0%
that at least
 

00:01:05.040 --> 00:01:06.870 align:start position:0%
that at least
one<00:01:05.199><c> of</c><00:01:05.360><c> the</c><00:01:05.519><c> numbers</c><00:01:06.159><c> is</c><00:01:06.400><c> going</c><00:01:06.560><c> to</c><00:01:06.720><c> be</c>

00:01:06.870 --> 00:01:06.880 align:start position:0%
one of the numbers is going to be
 

00:01:06.880 --> 00:01:08.469 align:start position:0%
one of the numbers is going to be
repeated<00:01:07.439><c> and</c><00:01:07.600><c> they</c><00:01:07.760><c> tell</c><00:01:08.000><c> us</c><00:01:08.159><c> that</c>

00:01:08.469 --> 00:01:08.479 align:start position:0%
repeated and they tell us that
 

00:01:08.479 --> 00:01:11.030 align:start position:0%
repeated and they tell us that
actually<00:01:08.799><c> it's</c><00:01:09.200><c> only</c><00:01:09.760><c> one</c><00:01:10.479><c> number</c><00:01:10.880><c> is</c>

00:01:11.030 --> 00:01:11.040 align:start position:0%
actually it's only one number is
 

00:01:11.040 --> 00:01:12.630 align:start position:0%
actually it's only one number is
guaranteed<00:01:11.520><c> to</c><00:01:11.680><c> be</c><00:01:11.840><c> repeated</c>

00:01:12.630 --> 00:01:12.640 align:start position:0%
guaranteed to be repeated
 

00:01:12.640 --> 00:01:14.310 align:start position:0%
guaranteed to be repeated
and<00:01:12.799><c> the</c><00:01:13.040><c> only</c><00:01:13.280><c> thing</c><00:01:13.439><c> we</c><00:01:13.600><c> want</c><00:01:13.760><c> to</c><00:01:13.920><c> do</c><00:01:14.159><c> is</c>

00:01:14.310 --> 00:01:14.320 align:start position:0%
and the only thing we want to do is
 

00:01:14.320 --> 00:01:15.830 align:start position:0%
and the only thing we want to do is
return<00:01:14.880><c> the</c><00:01:15.119><c> number</c><00:01:15.439><c> that</c>

00:01:15.830 --> 00:01:15.840 align:start position:0%
return the number that
 

00:01:15.840 --> 00:01:19.109 align:start position:0%
return the number that
is<00:01:16.080><c> repeated</c><00:01:16.720><c> more</c><00:01:16.960><c> than</c><00:01:17.280><c> once</c><00:01:17.920><c> now</c><00:01:18.560><c> the</c><00:01:18.880><c> easy</c>

00:01:19.109 --> 00:01:19.119 align:start position:0%
is repeated more than once now the easy
 

00:01:19.119 --> 00:01:20.550 align:start position:0%
is repeated more than once now the easy
way<00:01:19.280><c> to</c><00:01:19.439><c> solve</c><00:01:19.680><c> this</c><00:01:19.920><c> problem</c><00:01:20.240><c> of</c><00:01:20.320><c> course</c>

00:01:20.550 --> 00:01:20.560 align:start position:0%
way to solve this problem of course
 

00:01:20.560 --> 00:01:22.310 align:start position:0%
way to solve this problem of course
would<00:01:20.720><c> just</c><00:01:20.960><c> be</c><00:01:21.119><c> have</c><00:01:21.280><c> a</c><00:01:21.439><c> hash</c><00:01:21.759><c> set</c><00:01:22.080><c> right</c>

00:01:22.310 --> 00:01:22.320 align:start position:0%
would just be have a hash set right
 

00:01:22.320 --> 00:01:23.990 align:start position:0%
would just be have a hash set right
iterate<00:01:22.720><c> through</c><00:01:22.960><c> every</c><00:01:23.119><c> single</c><00:01:23.520><c> value</c>

00:01:23.990 --> 00:01:24.000 align:start position:0%
iterate through every single value
 

00:01:24.000 --> 00:01:26.789 align:start position:0%
iterate through every single value
find<00:01:24.320><c> the</c><00:01:24.400><c> one</c><00:01:24.640><c> that</c><00:01:24.880><c> occurs</c><00:01:25.520><c> twice</c><00:01:26.320><c> by</c><00:01:26.479><c> using</c>

00:01:26.789 --> 00:01:26.799 align:start position:0%
find the one that occurs twice by using
 

00:01:26.799 --> 00:01:28.550 align:start position:0%
find the one that occurs twice by using
our<00:01:26.960><c> hash</c><00:01:27.280><c> set</c><00:01:27.439><c> that's</c><00:01:27.680><c> going</c><00:01:27.759><c> to</c><00:01:27.840><c> be</c><00:01:28.000><c> o</c><00:01:28.159><c> of</c><00:01:28.320><c> n</c>

00:01:28.550 --> 00:01:28.560 align:start position:0%
our hash set that's going to be o of n
 

00:01:28.560 --> 00:01:31.590 align:start position:0%
our hash set that's going to be o of n
time<00:01:29.040><c> and</c><00:01:29.280><c> o</c><00:01:29.439><c> of</c><00:01:29.600><c> n</c><00:01:29.840><c> memory</c><00:01:30.560><c> but</c><00:01:30.720><c> they</c><00:01:30.960><c> tell</c><00:01:31.200><c> us</c>

00:01:31.590 --> 00:01:31.600 align:start position:0%
time and o of n memory but they tell us
 

00:01:31.600 --> 00:01:33.910 align:start position:0%
time and o of n memory but they tell us
that<00:01:31.840><c> we</c><00:01:32.000><c> can</c><00:01:32.159><c> only</c><00:01:32.400><c> use</c><00:01:32.799><c> constant</c><00:01:33.439><c> extra</c>

00:01:33.910 --> 00:01:33.920 align:start position:0%
that we can only use constant extra
 

00:01:33.920 --> 00:01:34.950 align:start position:0%
that we can only use constant extra
space

00:01:34.950 --> 00:01:34.960 align:start position:0%
space
 

00:01:34.960 --> 00:01:37.830 align:start position:0%
space
and<00:01:35.200><c> we</c><00:01:35.439><c> can't</c><00:01:35.840><c> even</c><00:01:36.240><c> modify</c><00:01:36.799><c> the</c><00:01:37.119><c> input</c><00:01:37.520><c> array</c>

00:01:37.830 --> 00:01:37.840 align:start position:0%
and we can't even modify the input array
 

00:01:37.840 --> 00:01:40.230 align:start position:0%
and we can't even modify the input array
so<00:01:38.000><c> we</c><00:01:38.159><c> can't</c><00:01:38.400><c> even</c><00:01:38.720><c> sort</c><00:01:39.040><c> it</c><00:01:39.200><c> or</c><00:01:39.360><c> anything</c>

00:01:40.230 --> 00:01:40.240 align:start position:0%
so we can't even sort it or anything
 

00:01:40.240 --> 00:01:42.389 align:start position:0%
so we can't even sort it or anything
and<00:01:40.799><c> i</c><00:01:40.960><c> think</c><00:01:41.119><c> those</c><00:01:41.360><c> restrictions</c><00:01:42.000><c> probably</c>

00:01:42.389 --> 00:01:42.399 align:start position:0%
and i think those restrictions probably
 

00:01:42.399 --> 00:01:44.389 align:start position:0%
and i think those restrictions probably
make<00:01:42.640><c> this</c><00:01:42.880><c> a</c><00:01:43.119><c> hard</c><00:01:43.520><c> problem</c><00:01:43.920><c> rather</c><00:01:44.159><c> than</c><00:01:44.320><c> a</c>

00:01:44.389 --> 00:01:44.399 align:start position:0%
make this a hard problem rather than a
 

00:01:44.399 --> 00:01:46.469 align:start position:0%
make this a hard problem rather than a
medium<00:01:44.799><c> problem</c><00:01:45.280><c> but</c><00:01:45.439><c> that's</c><00:01:45.759><c> okay</c>

00:01:46.469 --> 00:01:46.479 align:start position:0%
medium problem but that's okay
 

00:01:46.479 --> 00:01:48.550 align:start position:0%
medium problem but that's okay
so<00:01:46.640><c> there's</c><00:01:46.960><c> two</c><00:01:47.360><c> aspects</c><00:01:47.840><c> to</c><00:01:48.000><c> this</c><00:01:48.240><c> problem</c>

00:01:48.550 --> 00:01:48.560 align:start position:0%
so there's two aspects to this problem
 

00:01:48.560 --> 00:01:50.069 align:start position:0%
so there's two aspects to this problem
and<00:01:48.720><c> i'm</c><00:01:48.880><c> going</c><00:01:48.960><c> to</c><00:01:49.040><c> explain</c><00:01:49.439><c> both</c><00:01:49.680><c> of</c><00:01:49.840><c> them</c><00:01:49.920><c> so</c>

00:01:50.069 --> 00:01:50.079 align:start position:0%
and i'm going to explain both of them so
 

00:01:50.079 --> 00:01:51.830 align:start position:0%
and i'm going to explain both of them so
we're<00:01:50.159><c> going</c><00:01:50.240><c> to</c><00:01:50.320><c> solve</c><00:01:50.560><c> this</c><00:01:50.799><c> in</c><00:01:50.960><c> o</c><00:01:51.119><c> of</c><00:01:51.280><c> n</c><00:01:51.439><c> time</c>

00:01:51.830 --> 00:01:51.840 align:start position:0%
we're going to solve this in o of n time
 

00:01:51.840 --> 00:01:54.230 align:start position:0%
we're going to solve this in o of n time
and<00:01:52.000><c> o</c><00:01:52.159><c> of</c><00:01:52.399><c> 1</c><00:01:52.799><c> space</c><00:01:53.439><c> the</c><00:01:53.600><c> first</c><00:01:53.920><c> thing</c><00:01:54.079><c> to</c>

00:01:54.230 --> 00:01:54.240 align:start position:0%
and o of 1 space the first thing to
 

00:01:54.240 --> 00:01:55.670 align:start position:0%
and o of 1 space the first thing to
recognize<00:01:54.799><c> is</c><00:01:54.960><c> this</c><00:01:55.200><c> is</c><00:01:55.360><c> a</c>

00:01:55.670 --> 00:01:55.680 align:start position:0%
recognize is this is a
 

00:01:55.680 --> 00:01:58.389 align:start position:0%
recognize is this is a
linked<00:01:56.079><c> list</c><00:01:56.560><c> problem</c><00:01:57.439><c> specifically</c><00:01:58.159><c> a</c>

00:01:58.389 --> 00:01:58.399 align:start position:0%
linked list problem specifically a
 

00:01:58.399 --> 00:01:59.510 align:start position:0%
linked list problem specifically a
linked<00:01:58.799><c> list</c>

00:01:59.510 --> 00:01:59.520 align:start position:0%
linked list
 

00:01:59.520 --> 00:02:02.630 align:start position:0%
linked list
cycle<00:02:00.159><c> problem</c><00:02:00.880><c> and</c><00:02:01.360><c> the</c><00:02:01.520><c> second</c><00:02:01.840><c> thing</c><00:02:02.240><c> is</c>

00:02:02.630 --> 00:02:02.640 align:start position:0%
cycle problem and the second thing is
 

00:02:02.640 --> 00:02:06.069 align:start position:0%
cycle problem and the second thing is
to<00:02:02.880><c> know</c><00:02:03.280><c> floyd's</c><00:02:04.320><c> algorithm</c><00:02:05.119><c> which</c><00:02:05.600><c> will</c>

00:02:06.069 --> 00:02:06.079 align:start position:0%
to know floyd's algorithm which will
 

00:02:06.079 --> 00:02:08.469 align:start position:0%
to know floyd's algorithm which will
tell<00:02:06.320><c> you</c><00:02:06.479><c> the</c><00:02:06.640><c> beginning</c><00:02:07.280><c> of</c><00:02:07.439><c> a</c><00:02:07.680><c> cycle</c><00:02:08.160><c> in</c><00:02:08.319><c> a</c>

00:02:08.469 --> 00:02:08.479 align:start position:0%
tell you the beginning of a cycle in a
 

00:02:08.479 --> 00:02:10.389 align:start position:0%
tell you the beginning of a cycle in a
linked<00:02:08.800><c> list</c><00:02:09.119><c> so</c><00:02:09.280><c> there's</c><00:02:09.520><c> two</c><00:02:09.759><c> problems</c><00:02:10.239><c> one</c>

00:02:10.389 --> 00:02:10.399 align:start position:0%
linked list so there's two problems one
 

00:02:10.399 --> 00:02:10.949 align:start position:0%
linked list so there's two problems one
to<00:02:10.560><c> even</c>

00:02:10.949 --> 00:02:10.959 align:start position:0%
to even
 

00:02:10.959 --> 00:02:12.710 align:start position:0%
to even
recognize<00:02:11.599><c> that</c><00:02:11.760><c> this</c><00:02:12.000><c> is</c><00:02:12.080><c> a</c><00:02:12.160><c> linked</c><00:02:12.400><c> list</c>

00:02:12.710 --> 00:02:12.720 align:start position:0%
recognize that this is a linked list
 

00:02:12.720 --> 00:02:15.270 align:start position:0%
recognize that this is a linked list
problem<00:02:13.200><c> and</c><00:02:13.520><c> two</c><00:02:13.840><c> to</c><00:02:14.080><c> know</c><00:02:14.319><c> the</c><00:02:14.560><c> algorithm</c><00:02:15.040><c> to</c>

00:02:15.270 --> 00:02:15.280 align:start position:0%
problem and two to know the algorithm to
 

00:02:15.280 --> 00:02:16.710 align:start position:0%
problem and two to know the algorithm to
actually<00:02:15.680><c> apply</c><00:02:16.239><c> to</c><00:02:16.400><c> it</c>

00:02:16.710 --> 00:02:16.720 align:start position:0%
actually apply to it
 

00:02:16.720 --> 00:02:18.869 align:start position:0%
actually apply to it
once<00:02:17.040><c> you</c><00:02:17.200><c> know</c><00:02:17.440><c> that</c><00:02:17.840><c> so</c><00:02:18.080><c> let</c><00:02:18.239><c> me</c><00:02:18.480><c> actually</c>

00:02:18.869 --> 00:02:18.879 align:start position:0%
once you know that so let me actually
 

00:02:18.879 --> 00:02:20.150 align:start position:0%
once you know that so let me actually
show<00:02:19.040><c> you</c><00:02:19.280><c> how</c><00:02:19.520><c> we</c><00:02:19.680><c> can</c>

00:02:20.150 --> 00:02:20.160 align:start position:0%
show you how we can
 

00:02:20.160 --> 00:02:22.550 align:start position:0%
show you how we can
we<00:02:20.319><c> can</c><00:02:20.959><c> figure</c><00:02:21.280><c> out</c><00:02:21.520><c> both</c><00:02:21.840><c> of</c><00:02:22.000><c> these</c><00:02:22.239><c> things</c>

00:02:22.550 --> 00:02:22.560 align:start position:0%
we can figure out both of these things
 

00:02:22.560 --> 00:02:24.390 align:start position:0%
we can figure out both of these things
and<00:02:22.720><c> yeah</c><00:02:22.959><c> you're</c><00:02:23.200><c> right</c><00:02:23.440><c> it's</c><00:02:23.680><c> probably</c><00:02:24.080><c> not</c>

00:02:24.390 --> 00:02:24.400 align:start position:0%
and yeah you're right it's probably not
 

00:02:24.400 --> 00:02:26.949 align:start position:0%
and yeah you're right it's probably not
super<00:02:24.720><c> intuitive</c><00:02:25.680><c> and</c><00:02:26.080><c> i</c><00:02:26.400><c> i'm</c><00:02:26.560><c> not</c><00:02:26.720><c> really</c>

00:02:26.949 --> 00:02:26.959 align:start position:0%
super intuitive and i i'm not really
 

00:02:26.959 --> 00:02:28.390 align:start position:0%
super intuitive and i i'm not really
sure<00:02:27.200><c> how</c><00:02:27.360><c> you</c><00:02:27.520><c> would</c><00:02:27.599><c> be</c><00:02:27.760><c> able</c><00:02:27.920><c> to</c><00:02:28.000><c> figure</c><00:02:28.239><c> it</c>

00:02:28.390 --> 00:02:28.400 align:start position:0%
sure how you would be able to figure it
 

00:02:28.400 --> 00:02:29.830 align:start position:0%
sure how you would be able to figure it
out<00:02:28.560><c> on</c><00:02:28.720><c> your</c><00:02:28.879><c> own</c><00:02:29.040><c> if</c><00:02:29.200><c> you've</c><00:02:29.360><c> never</c><00:02:29.599><c> done</c>

00:02:29.830 --> 00:02:29.840 align:start position:0%
out on your own if you've never done
 

00:02:29.840 --> 00:02:31.350 align:start position:0%
out on your own if you've never done
something<00:02:30.160><c> like</c><00:02:30.319><c> this</c><00:02:30.560><c> before</c>

00:02:31.350 --> 00:02:31.360 align:start position:0%
something like this before
 

00:02:31.360 --> 00:02:33.670 align:start position:0%
something like this before
so<00:02:31.599><c> remember</c><00:02:32.080><c> that</c><00:02:32.239><c> the</c><00:02:32.480><c> length</c><00:02:32.800><c> of</c><00:02:32.959><c> our</c><00:02:33.200><c> array</c>

00:02:33.670 --> 00:02:33.680 align:start position:0%
so remember that the length of our array
 

00:02:33.680 --> 00:02:35.190 align:start position:0%
so remember that the length of our array
is<00:02:34.000><c> n</c><00:02:34.239><c> plus</c><00:02:34.640><c> 1</c>

00:02:35.190 --> 00:02:35.200 align:start position:0%
is n plus 1
 

00:02:35.200 --> 00:02:37.910 align:start position:0%
is n plus 1
but<00:02:35.599><c> every</c><00:02:36.080><c> value</c><00:02:36.640><c> in</c><00:02:36.720><c> the</c><00:02:36.879><c> array</c><00:02:37.360><c> is</c><00:02:37.519><c> going</c><00:02:37.760><c> to</c>

00:02:37.910 --> 00:02:37.920 align:start position:0%
but every value in the array is going to
 

00:02:37.920 --> 00:02:38.710 align:start position:0%
but every value in the array is going to
be<00:02:38.160><c> between</c>

00:02:38.710 --> 00:02:38.720 align:start position:0%
be between
 

00:02:38.720 --> 00:02:41.750 align:start position:0%
be between
one<00:02:39.200><c> and</c><00:02:39.519><c> n</c><00:02:39.760><c> so</c><00:02:39.920><c> there's</c><00:02:40.239><c> n</c><00:02:40.640><c> different</c><00:02:41.120><c> values</c>

00:02:41.750 --> 00:02:41.760 align:start position:0%
one and n so there's n different values
 

00:02:41.760 --> 00:02:45.270 align:start position:0%
one and n so there's n different values
but<00:02:41.920><c> there's</c><00:02:42.319><c> n</c><00:02:42.560><c> plus</c><00:02:43.040><c> one</c><00:02:43.360><c> positions</c><00:02:44.720><c> so</c><00:02:45.040><c> in</c>

00:02:45.270 --> 00:02:45.280 align:start position:0%
but there's n plus one positions so in
 

00:02:45.280 --> 00:02:45.670 align:start position:0%
but there's n plus one positions so in
this

00:02:45.670 --> 00:02:45.680 align:start position:0%
this
 

00:02:45.680 --> 00:02:48.229 align:start position:0%
this
array<00:02:46.160><c> we</c><00:02:46.319><c> have</c><00:02:46.800><c> five</c><00:02:47.200><c> different</c><00:02:47.680><c> elements</c>

00:02:48.229 --> 00:02:48.239 align:start position:0%
array we have five different elements
 

00:02:48.239 --> 00:02:50.150 align:start position:0%
array we have five different elements
right<00:02:48.560><c> and</c><00:02:48.800><c> we</c><00:02:49.040><c> know</c><00:02:49.280><c> that</c><00:02:49.440><c> the</c><00:02:49.599><c> elements</c><00:02:50.080><c> are</c>

00:02:50.150 --> 00:02:50.160 align:start position:0%
right and we know that the elements are
 

00:02:50.160 --> 00:02:51.509 align:start position:0%
right and we know that the elements are
going<00:02:50.239><c> to</c><00:02:50.319><c> be</c><00:02:50.560><c> in</c><00:02:50.640><c> the</c><00:02:50.879><c> range</c>

00:02:51.509 --> 00:02:51.519 align:start position:0%
going to be in the range
 

00:02:51.519 --> 00:02:54.790 align:start position:0%
going to be in the range
one<00:02:52.080><c> through</c><00:02:52.879><c> four</c><00:02:53.519><c> right</c><00:02:54.000><c> so</c><00:02:54.239><c> basically</c>

00:02:54.790 --> 00:02:54.800 align:start position:0%
one through four right so basically
 

00:02:54.800 --> 00:02:56.630 align:start position:0%
one through four right so basically
instead<00:02:55.360><c> of</c><00:02:55.519><c> thinking</c><00:02:55.920><c> of</c><00:02:56.000><c> these</c><00:02:56.239><c> as</c>

00:02:56.630 --> 00:02:56.640 align:start position:0%
instead of thinking of these as
 

00:02:56.640 --> 00:02:59.830 align:start position:0%
instead of thinking of these as
values<00:02:57.440><c> let's</c><00:02:57.760><c> think</c><00:02:58.000><c> of</c><00:02:58.159><c> them</c><00:02:58.400><c> as</c><00:02:58.800><c> pointers</c>

00:02:59.830 --> 00:02:59.840 align:start position:0%
values let's think of them as pointers
 

00:02:59.840 --> 00:03:03.509 align:start position:0%
values let's think of them as pointers
so<00:03:00.159><c> we</c><00:03:00.560><c> know</c><00:03:00.959><c> for</c><00:03:01.200><c> sure</c><00:03:01.840><c> that</c><00:03:02.400><c> every</c><00:03:03.040><c> single</c>

00:03:03.509 --> 00:03:03.519 align:start position:0%
so we know for sure that every single
 

00:03:03.519 --> 00:03:03.990 align:start position:0%
so we know for sure that every single
value

00:03:03.990 --> 00:03:04.000 align:start position:0%
value
 

00:03:04.000 --> 00:03:06.470 align:start position:0%
value
in<00:03:04.159><c> the</c><00:03:04.319><c> array</c><00:03:04.720><c> is</c><00:03:04.800><c> going</c><00:03:04.959><c> to</c><00:03:05.120><c> be</c><00:03:05.360><c> in</c><00:03:05.519><c> the</c><00:03:05.760><c> range</c>

00:03:06.470 --> 00:03:06.480 align:start position:0%
in the array is going to be in the range
 

00:03:06.480 --> 00:03:08.229 align:start position:0%
in the array is going to be in the range
one<00:03:06.879><c> through</c><00:03:07.280><c> four</c><00:03:07.599><c> that</c><00:03:07.840><c> means</c>

00:03:08.229 --> 00:03:08.239 align:start position:0%
one through four that means
 

00:03:08.239 --> 00:03:10.470 align:start position:0%
one through four that means
if<00:03:08.400><c> we</c><00:03:08.640><c> considered</c><00:03:09.280><c> every</c><00:03:09.599><c> value</c><00:03:10.000><c> as</c><00:03:10.239><c> a</c>

00:03:10.470 --> 00:03:10.480 align:start position:0%
if we considered every value as a
 

00:03:10.480 --> 00:03:11.270 align:start position:0%
if we considered every value as a
pointer

00:03:11.270 --> 00:03:11.280 align:start position:0%
pointer
 

00:03:11.280 --> 00:03:14.229 align:start position:0%
pointer
each<00:03:11.760><c> value</c><00:03:12.159><c> is</c><00:03:12.319><c> going</c><00:03:12.560><c> to</c><00:03:12.879><c> point</c><00:03:13.360><c> at</c><00:03:13.840><c> some</c>

00:03:14.229 --> 00:03:14.239 align:start position:0%
each value is going to point at some
 

00:03:14.239 --> 00:03:15.509 align:start position:0%
each value is going to point at some
position

00:03:15.509 --> 00:03:15.519 align:start position:0%
position
 

00:03:15.519 --> 00:03:18.070 align:start position:0%
position
in<00:03:15.920><c> this</c><00:03:16.319><c> block</c><00:03:16.800><c> of</c><00:03:17.120><c> four</c><00:03:17.440><c> you</c><00:03:17.519><c> can</c><00:03:17.599><c> see</c><00:03:17.760><c> that</c>

00:03:18.070 --> 00:03:18.080 align:start position:0%
in this block of four you can see that
 

00:03:18.080 --> 00:03:18.869 align:start position:0%
in this block of four you can see that
this<00:03:18.400><c> one</c>

00:03:18.869 --> 00:03:18.879 align:start position:0%
this one
 

00:03:18.879 --> 00:03:21.910 align:start position:0%
this one
points<00:03:19.200><c> at</c><00:03:19.360><c> position</c><00:03:20.000><c> one</c><00:03:20.640><c> this</c><00:03:21.120><c> three</c>

00:03:21.910 --> 00:03:21.920 align:start position:0%
points at position one this three
 

00:03:21.920 --> 00:03:24.949 align:start position:0%
points at position one this three
points<00:03:22.319><c> at</c><00:03:22.560><c> position</c><00:03:23.519><c> three</c><00:03:24.239><c> this</c>

00:03:24.949 --> 00:03:24.959 align:start position:0%
points at position three this
 

00:03:24.959 --> 00:03:28.869 align:start position:0%
points at position three this
two<00:03:25.519><c> points</c><00:03:26.000><c> at</c><00:03:26.239><c> position</c><00:03:27.200><c> two</c><00:03:27.840><c> over</c><00:03:28.239><c> here</c>

00:03:28.869 --> 00:03:28.879 align:start position:0%
two points at position two over here
 

00:03:28.879 --> 00:03:32.789 align:start position:0%
two points at position two over here
and<00:03:29.120><c> this</c><00:03:29.920><c> four</c><00:03:30.959><c> points</c><00:03:31.519><c> at</c><00:03:31.840><c> position</c>

00:03:32.789 --> 00:03:32.799 align:start position:0%
and this four points at position
 

00:03:32.799 --> 00:03:36.070 align:start position:0%
and this four points at position
four<00:03:33.519><c> over</c><00:03:34.000><c> here</c><00:03:34.400><c> and</c><00:03:34.480><c> then</c><00:03:34.720><c> this</c><00:03:35.040><c> two</c><00:03:35.440><c> points</c>

00:03:36.070 --> 00:03:36.080 align:start position:0%
four over here and then this two points
 

00:03:36.080 --> 00:03:38.309 align:start position:0%
four over here and then this two points
back<00:03:36.480><c> at</c><00:03:36.720><c> position</c><00:03:37.360><c> four</c><00:03:37.599><c> so</c><00:03:37.840><c> that's</c><00:03:38.080><c> how</c><00:03:38.239><c> you</c>

00:03:38.309 --> 00:03:38.319 align:start position:0%
back at position four so that's how you
 

00:03:38.319 --> 00:03:39.430 align:start position:0%
back at position four so that's how you
can<00:03:38.480><c> kind</c><00:03:38.720><c> of</c><00:03:38.799><c> see</c><00:03:39.040><c> that</c>

00:03:39.430 --> 00:03:39.440 align:start position:0%
can kind of see that
 

00:03:39.440 --> 00:03:41.350 align:start position:0%
can kind of see that
you<00:03:39.519><c> know</c><00:03:39.920><c> in</c><00:03:40.080><c> that</c><00:03:40.239><c> case</c><00:03:40.480><c> there</c><00:03:40.640><c> was</c><00:03:40.879><c> a</c><00:03:41.040><c> cycle</c>

00:03:41.350 --> 00:03:41.360 align:start position:0%
you know in that case there was a cycle
 

00:03:41.360 --> 00:03:42.949 align:start position:0%
you know in that case there was a cycle
and<00:03:41.440><c> you</c><00:03:41.519><c> can</c><00:03:41.680><c> see</c><00:03:41.920><c> i</c><00:03:42.000><c> basically</c><00:03:42.480><c> drew</c><00:03:42.720><c> out</c><00:03:42.799><c> the</c>

00:03:42.949 --> 00:03:42.959 align:start position:0%
and you can see i basically drew out the
 

00:03:42.959 --> 00:03:43.670 align:start position:0%
and you can see i basically drew out the
linked<00:03:43.280><c> list</c>

00:03:43.670 --> 00:03:43.680 align:start position:0%
linked list
 

00:03:43.680 --> 00:03:46.630 align:start position:0%
linked list
version<00:03:44.239><c> of</c><00:03:44.560><c> that</c><00:03:45.200><c> so</c><00:03:45.440><c> it's</c><00:03:45.680><c> not</c><00:03:46.000><c> hard</c><00:03:46.239><c> to</c><00:03:46.400><c> see</c>

00:03:46.630 --> 00:03:46.640 align:start position:0%
version of that so it's not hard to see
 

00:03:46.640 --> 00:03:48.710 align:start position:0%
version of that so it's not hard to see
that<00:03:46.879><c> this</c><00:03:47.280><c> portion</c><00:03:47.760><c> is</c><00:03:47.920><c> going</c><00:03:48.159><c> to</c><00:03:48.319><c> form</c>

00:03:48.710 --> 00:03:48.720 align:start position:0%
that this portion is going to form
 

00:03:48.720 --> 00:03:50.949 align:start position:0%
that this portion is going to form
a<00:03:48.879><c> cycle</c><00:03:49.200><c> because</c><00:03:49.440><c> no</c><00:03:49.599><c> matter</c><00:03:50.000><c> what</c><00:03:50.319><c> value</c><00:03:50.720><c> we</c>

00:03:50.949 --> 00:03:50.959 align:start position:0%
a cycle because no matter what value we
 

00:03:50.959 --> 00:03:53.030 align:start position:0%
a cycle because no matter what value we
look<00:03:51.200><c> at</c><00:03:51.519><c> it's</c><00:03:51.760><c> going</c><00:03:52.000><c> to</c><00:03:52.319><c> point</c><00:03:52.720><c> at</c>

00:03:53.030 --> 00:03:53.040 align:start position:0%
look at it's going to point at
 

00:03:53.040 --> 00:03:55.350 align:start position:0%
look at it's going to point at
some<00:03:53.519><c> other</c><00:03:53.840><c> value</c><00:03:54.319><c> inside</c><00:03:54.799><c> of</c><00:03:54.879><c> this</c><00:03:55.120><c> range</c>

00:03:55.350 --> 00:03:55.360 align:start position:0%
some other value inside of this range
 

00:03:55.360 --> 00:03:56.470 align:start position:0%
some other value inside of this range
there's<00:03:55.519><c> never</c><00:03:55.760><c> going</c><00:03:55.840><c> to</c><00:03:55.920><c> be</c><00:03:56.080><c> an</c>

00:03:56.470 --> 00:03:56.480 align:start position:0%
there's never going to be an
 

00:03:56.480 --> 00:03:58.710 align:start position:0%
there's never going to be an
exit<00:03:56.959><c> condition</c><00:03:57.760><c> none</c><00:03:57.920><c> of</c><00:03:58.080><c> these</c><00:03:58.319><c> values</c><00:03:58.640><c> are</c>

00:03:58.710 --> 00:03:58.720 align:start position:0%
exit condition none of these values are
 

00:03:58.720 --> 00:04:01.110 align:start position:0%
exit condition none of these values are
going<00:03:58.879><c> to</c><00:03:58.959><c> point</c><00:03:59.360><c> outside</c><00:04:00.239><c> of</c><00:04:00.400><c> the</c><00:04:00.640><c> range</c>

00:04:01.110 --> 00:04:01.120 align:start position:0%
going to point outside of the range
 

00:04:01.120 --> 00:04:03.910 align:start position:0%
going to point outside of the range
either<00:04:01.599><c> you</c><00:04:01.760><c> know</c><00:04:02.080><c> over</c><00:04:02.400><c> here</c><00:04:02.879><c> or</c><00:04:03.360><c> over</c><00:04:03.599><c> here</c>

00:04:03.910 --> 00:04:03.920 align:start position:0%
either you know over here or over here
 

00:04:03.920 --> 00:04:05.030 align:start position:0%
either you know over here or over here
none<00:04:04.080><c> of</c><00:04:04.159><c> them</c><00:04:04.319><c> are</c><00:04:04.400><c> going</c><00:04:04.560><c> to</c><00:04:04.640><c> point</c>

00:04:05.030 --> 00:04:05.040 align:start position:0%
none of them are going to point
 

00:04:05.040 --> 00:04:06.949 align:start position:0%
none of them are going to point
outside<00:04:05.519><c> of</c><00:04:05.599><c> the</c><00:04:05.680><c> range</c><00:04:05.920><c> so</c><00:04:06.159><c> this</c><00:04:06.480><c> portion</c><00:04:06.879><c> is</c>

00:04:06.949 --> 00:04:06.959 align:start position:0%
outside of the range so this portion is
 

00:04:06.959 --> 00:04:08.710 align:start position:0%
outside of the range so this portion is
going<00:04:07.120><c> to</c><00:04:07.280><c> form</c><00:04:07.680><c> a</c><00:04:08.000><c> cycle</c>

00:04:08.710 --> 00:04:08.720 align:start position:0%
going to form a cycle
 

00:04:08.720 --> 00:04:11.589 align:start position:0%
going to form a cycle
linked<00:04:09.120><c> list</c><00:04:09.439><c> somewhere</c><00:04:10.000><c> right</c><00:04:10.799><c> what</c><00:04:11.040><c> about</c>

00:04:11.589 --> 00:04:11.599 align:start position:0%
linked list somewhere right what about
 

00:04:11.599 --> 00:04:12.070 align:start position:0%
linked list somewhere right what about
this

00:04:12.070 --> 00:04:12.080 align:start position:0%
this
 

00:04:12.080 --> 00:04:14.710 align:start position:0%
this
value<00:04:12.560><c> is</c><00:04:12.799><c> this</c><00:04:13.120><c> going</c><00:04:13.439><c> to</c><00:04:13.599><c> be</c><00:04:13.920><c> a</c><00:04:14.080><c> part</c><00:04:14.400><c> of</c><00:04:14.480><c> the</c>

00:04:14.710 --> 00:04:14.720 align:start position:0%
value is this going to be a part of the
 

00:04:14.720 --> 00:04:15.509 align:start position:0%
value is this going to be a part of the
cycle

00:04:15.509 --> 00:04:15.519 align:start position:0%
cycle
 

00:04:15.519 --> 00:04:18.949 align:start position:0%
cycle
notice<00:04:16.000><c> how</c><00:04:16.479><c> none</c><00:04:16.799><c> of</c><00:04:17.040><c> these</c><00:04:17.680><c> values</c><00:04:18.400><c> nothing</c>

00:04:18.949 --> 00:04:18.959 align:start position:0%
notice how none of these values nothing
 

00:04:18.959 --> 00:04:19.430 align:start position:0%
notice how none of these values nothing
is

00:04:19.430 --> 00:04:19.440 align:start position:0%
is
 

00:04:19.440 --> 00:04:22.390 align:start position:0%
is
ever<00:04:19.840><c> going</c><00:04:20.079><c> to</c><00:04:20.479><c> point</c><00:04:20.880><c> at</c><00:04:21.199><c> index</c><00:04:21.680><c> 0</c><00:04:22.079><c> because</c>

00:04:22.390 --> 00:04:22.400 align:start position:0%
ever going to point at index 0 because
 

00:04:22.400 --> 00:04:23.590 align:start position:0%
ever going to point at index 0 because
remember<00:04:23.120><c> our</c>

00:04:23.590 --> 00:04:23.600 align:start position:0%
remember our
 

00:04:23.600 --> 00:04:26.790 align:start position:0%
remember our
range<00:04:24.000><c> is</c><00:04:24.160><c> between</c><00:04:24.720><c> 1</c><00:04:25.360><c> through</c><00:04:25.840><c> 4</c><00:04:26.479><c> none</c><00:04:26.639><c> of</c>

00:04:26.790 --> 00:04:26.800 align:start position:0%
range is between 1 through 4 none of
 

00:04:26.800 --> 00:04:28.629 align:start position:0%
range is between 1 through 4 none of
them<00:04:27.040><c> is</c><00:04:27.199><c> going</c><00:04:27.440><c> to</c><00:04:27.600><c> be</c><00:04:27.840><c> zero</c><00:04:28.320><c> so</c>

00:04:28.629 --> 00:04:28.639 align:start position:0%
them is going to be zero so
 

00:04:28.639 --> 00:04:31.030 align:start position:0%
them is going to be zero so
none<00:04:28.800><c> of</c><00:04:28.880><c> them</c><00:04:29.120><c> is</c><00:04:29.199><c> going</c><00:04:29.360><c> to</c><00:04:29.680><c> point</c><00:04:30.080><c> here</c><00:04:30.639><c> so</c>

00:04:31.030 --> 00:04:31.040 align:start position:0%
none of them is going to point here so
 

00:04:31.040 --> 00:04:32.870 align:start position:0%
none of them is going to point here so
we<00:04:31.199><c> can</c><00:04:31.600><c> guarantee</c><00:04:32.240><c> that</c><00:04:32.560><c> this</c>

00:04:32.870 --> 00:04:32.880 align:start position:0%
we can guarantee that this
 

00:04:32.880 --> 00:04:35.030 align:start position:0%
we can guarantee that this
is<00:04:33.120><c> not</c><00:04:33.360><c> going</c><00:04:33.600><c> to</c><00:04:33.759><c> be</c><00:04:33.919><c> a</c><00:04:34.000><c> part</c><00:04:34.240><c> of</c><00:04:34.320><c> the</c><00:04:34.479><c> cycle</c>

00:04:35.030 --> 00:04:35.040 align:start position:0%
is not going to be a part of the cycle
 

00:04:35.040 --> 00:04:36.150 align:start position:0%
is not going to be a part of the cycle
and<00:04:35.199><c> when</c><00:04:35.360><c> you</c><00:04:35.520><c> see</c><00:04:35.759><c> i</c>

00:04:36.150 --> 00:04:36.160 align:start position:0%
and when you see i
 

00:04:36.160 --> 00:04:38.550 align:start position:0%
and when you see i
took<00:04:36.400><c> this</c><00:04:36.639><c> array</c><00:04:37.040><c> drew</c><00:04:37.440><c> it</c><00:04:37.600><c> as</c><00:04:37.759><c> a</c><00:04:37.919><c> linked</c><00:04:38.240><c> list</c>

00:04:38.550 --> 00:04:38.560 align:start position:0%
took this array drew it as a linked list
 

00:04:38.560 --> 00:04:39.430 align:start position:0%
took this array drew it as a linked list
you<00:04:38.720><c> can</c><00:04:38.880><c> see</c>

00:04:39.430 --> 00:04:39.440 align:start position:0%
you can see
 

00:04:39.440 --> 00:04:41.189 align:start position:0%
you can see
this<00:04:39.759><c> is</c><00:04:40.000><c> index</c><00:04:40.320><c> zero</c><00:04:40.639><c> right</c><00:04:40.800><c> you</c><00:04:40.880><c> can</c><00:04:41.040><c> see</c>

00:04:41.189 --> 00:04:41.199 align:start position:0%
this is index zero right you can see
 

00:04:41.199 --> 00:04:43.189 align:start position:0%
this is index zero right you can see
that<00:04:41.440><c> this</c><00:04:41.600><c> was</c><00:04:41.840><c> our</c><00:04:42.160><c> cycle</c><00:04:42.639><c> portion</c>

00:04:43.189 --> 00:04:43.199 align:start position:0%
that this was our cycle portion
 

00:04:43.199 --> 00:04:46.710 align:start position:0%
that this was our cycle portion
but<00:04:43.520><c> this</c><00:04:43.759><c> was</c><00:04:44.080><c> not</c><00:04:44.479><c> included</c><00:04:45.280><c> in</c><00:04:45.440><c> the</c><00:04:45.759><c> cycle</c>

00:04:46.710 --> 00:04:46.720 align:start position:0%
but this was not included in the cycle
 

00:04:46.720 --> 00:04:48.550 align:start position:0%
but this was not included in the cycle
and<00:04:46.880><c> that's</c><00:04:47.199><c> going</c><00:04:47.360><c> to</c><00:04:47.520><c> be</c><00:04:47.759><c> very</c><00:04:48.160><c> important</c>

00:04:48.550 --> 00:04:48.560 align:start position:0%
and that's going to be very important
 

00:04:48.560 --> 00:04:50.950 align:start position:0%
and that's going to be very important
because<00:04:48.800><c> we</c><00:04:49.120><c> do</c><00:04:49.520><c> when</c><00:04:49.759><c> we</c><00:04:50.000><c> start</c><00:04:50.400><c> traversing</c>

00:04:50.950 --> 00:04:50.960 align:start position:0%
because we do when we start traversing
 

00:04:50.960 --> 00:04:52.469 align:start position:0%
because we do when we start traversing
this<00:04:51.199><c> linked</c><00:04:51.440><c> list</c><00:04:51.680><c> we're</c><00:04:51.919><c> always</c><00:04:52.240><c> going</c><00:04:52.400><c> to</c>

00:04:52.469 --> 00:04:52.479 align:start position:0%
this linked list we're always going to
 

00:04:52.479 --> 00:04:53.270 align:start position:0%
this linked list we're always going to
start<00:04:52.880><c> here</c>

00:04:53.270 --> 00:04:53.280 align:start position:0%
start here
 

00:04:53.280 --> 00:04:55.270 align:start position:0%
start here
because<00:04:53.520><c> we</c><00:04:53.840><c> know</c><00:04:54.080><c> this</c><00:04:54.320><c> is</c><00:04:54.560><c> not</c><00:04:54.800><c> a</c><00:04:54.960><c> part</c><00:04:55.199><c> of</c>

00:04:55.270 --> 00:04:55.280 align:start position:0%
because we know this is not a part of
 

00:04:55.280 --> 00:04:56.390 align:start position:0%
because we know this is not a part of
the<00:04:55.600><c> cycle</c>

00:04:56.390 --> 00:04:56.400 align:start position:0%
the cycle
 

00:04:56.400 --> 00:04:59.270 align:start position:0%
the cycle
so<00:04:56.800><c> in</c><00:04:56.960><c> our</c><00:04:57.199><c> input</c><00:04:57.520><c> array</c><00:04:57.840><c> you</c><00:04:58.000><c> can</c><00:04:58.240><c> see</c><00:04:58.479><c> that</c><00:04:58.800><c> 2</c>

00:04:59.270 --> 00:04:59.280 align:start position:0%
so in our input array you can see that 2
 

00:04:59.280 --> 00:05:01.029 align:start position:0%
so in our input array you can see that 2
is<00:04:59.440><c> the</c><00:04:59.680><c> duplicate</c><00:05:00.240><c> right</c><00:05:00.560><c> 2</c>

00:05:01.029 --> 00:05:01.039 align:start position:0%
is the duplicate right 2
 

00:05:01.039 --> 00:05:03.350 align:start position:0%
is the duplicate right 2
is<00:05:01.120><c> the</c><00:05:01.360><c> one</c><00:05:01.600><c> that</c><00:05:01.759><c> shows</c><00:05:02.080><c> up</c><00:05:02.240><c> multiple</c><00:05:02.800><c> times</c>

00:05:03.350 --> 00:05:03.360 align:start position:0%
is the one that shows up multiple times
 

00:05:03.360 --> 00:05:05.510 align:start position:0%
is the one that shows up multiple times
so<00:05:03.520><c> in</c><00:05:03.680><c> the</c><00:05:03.840><c> context</c><00:05:04.400><c> of</c><00:05:04.479><c> this</c><00:05:04.720><c> problem</c>

00:05:05.510 --> 00:05:05.520 align:start position:0%
so in the context of this problem
 

00:05:05.520 --> 00:05:08.550 align:start position:0%
so in the context of this problem
this<00:05:05.919><c> position</c><00:05:06.880><c> is</c><00:05:07.039><c> going</c><00:05:07.199><c> to</c><00:05:07.520><c> point</c><00:05:07.759><c> at</c><00:05:08.080><c> index</c>

00:05:08.550 --> 00:05:08.560 align:start position:0%
this position is going to point at index
 

00:05:08.560 --> 00:05:09.110 align:start position:0%
this position is going to point at index
2

00:05:09.110 --> 00:05:09.120 align:start position:0%
2
 

00:05:09.120 --> 00:05:12.310 align:start position:0%
2
and<00:05:09.520><c> this</c><00:05:09.919><c> position</c><00:05:10.639><c> is</c><00:05:10.800><c> going</c><00:05:11.039><c> to</c><00:05:11.360><c> also</c><00:05:11.919><c> point</c>

00:05:12.310 --> 00:05:12.320 align:start position:0%
and this position is going to also point
 

00:05:12.320 --> 00:05:13.510 align:start position:0%
and this position is going to also point
at<00:05:12.560><c> index</c><00:05:13.120><c> two</c>

00:05:13.510 --> 00:05:13.520 align:start position:0%
at index two
 

00:05:13.520 --> 00:05:15.990 align:start position:0%
at index two
so<00:05:13.840><c> what</c><00:05:14.080><c> does</c><00:05:14.320><c> that</c><00:05:14.720><c> tell</c><00:05:14.960><c> us</c><00:05:15.280><c> about</c><00:05:15.680><c> our</c>

00:05:15.990 --> 00:05:16.000 align:start position:0%
so what does that tell us about our
 

00:05:16.000 --> 00:05:17.110 align:start position:0%
so what does that tell us about our
linked<00:05:16.479><c> list</c>

00:05:17.110 --> 00:05:17.120 align:start position:0%
linked list
 

00:05:17.120 --> 00:05:19.830 align:start position:0%
linked list
that<00:05:17.360><c> means</c><00:05:17.759><c> at</c><00:05:18.000><c> the</c><00:05:18.320><c> node</c><00:05:18.720><c> that's</c><00:05:19.120><c> labeled</c>

00:05:19.830 --> 00:05:19.840 align:start position:0%
that means at the node that's labeled
 

00:05:19.840 --> 00:05:20.629 align:start position:0%
that means at the node that's labeled
two

00:05:20.629 --> 00:05:20.639 align:start position:0%
two
 

00:05:20.639 --> 00:05:23.189 align:start position:0%
two
the<00:05:20.880><c> each</c><00:05:21.280><c> value</c><00:05:21.680><c> of</c><00:05:21.840><c> the</c><00:05:22.000><c> node</c><00:05:22.320><c> each</c><00:05:22.720><c> label</c><00:05:23.039><c> is</c>

00:05:23.189 --> 00:05:23.199 align:start position:0%
the each value of the node each label is
 

00:05:23.199 --> 00:05:25.430 align:start position:0%
the each value of the node each label is
going<00:05:23.440><c> to</c><00:05:23.840><c> map</c><00:05:24.080><c> to</c><00:05:24.240><c> the</c><00:05:24.479><c> index</c><00:05:24.880><c> so</c><00:05:25.120><c> this</c>

00:05:25.430 --> 00:05:25.440 align:start position:0%
going to map to the index so this
 

00:05:25.440 --> 00:05:27.749 align:start position:0%
going to map to the index so this
is<00:05:25.680><c> basically</c><00:05:26.160><c> node</c><00:05:26.479><c> two</c><00:05:26.720><c> right</c><00:05:27.199><c> what</c><00:05:27.360><c> that</c>

00:05:27.749 --> 00:05:27.759 align:start position:0%
is basically node two right what that
 

00:05:27.759 --> 00:05:28.790 align:start position:0%
is basically node two right what that
tells<00:05:28.160><c> us</c><00:05:28.400><c> about</c>

00:05:28.790 --> 00:05:28.800 align:start position:0%
tells us about
 

00:05:28.800 --> 00:05:31.990 align:start position:0%
tells us about
node<00:05:29.199><c> two</c><00:05:29.840><c> is</c><00:05:30.000><c> that</c><00:05:30.479><c> multiple</c><00:05:31.280><c> nodes</c><00:05:31.759><c> are</c>

00:05:31.990 --> 00:05:32.000 align:start position:0%
node two is that multiple nodes are
 

00:05:32.000 --> 00:05:32.710 align:start position:0%
node two is that multiple nodes are
going<00:05:32.240><c> to</c><00:05:32.400><c> be</c>

00:05:32.710 --> 00:05:32.720 align:start position:0%
going to be
 

00:05:32.720 --> 00:05:36.629 align:start position:0%
going to be
pointing<00:05:33.440><c> to</c><00:05:33.759><c> node</c><00:05:34.240><c> two</c><00:05:34.960><c> right</c><00:05:35.680><c> therefore</c>

00:05:36.629 --> 00:05:36.639 align:start position:0%
pointing to node two right therefore
 

00:05:36.639 --> 00:05:39.110 align:start position:0%
pointing to node two right therefore
we<00:05:36.880><c> know</c><00:05:37.199><c> that</c><00:05:37.759><c> this</c><00:05:38.240><c> is</c><00:05:38.400><c> the</c><00:05:38.639><c> one</c><00:05:38.880><c> that's</c>

00:05:39.110 --> 00:05:39.120 align:start position:0%
we know that this is the one that's
 

00:05:39.120 --> 00:05:42.150 align:start position:0%
we know that this is the one that's
going<00:05:39.360><c> to</c><00:05:39.600><c> be</c><00:05:39.840><c> the</c><00:05:40.160><c> start</c><00:05:40.639><c> of</c><00:05:40.800><c> the</c><00:05:41.120><c> cycle</c>

00:05:42.150 --> 00:05:42.160 align:start position:0%
going to be the start of the cycle
 

00:05:42.160 --> 00:05:43.830 align:start position:0%
going to be the start of the cycle
we<00:05:42.400><c> know</c><00:05:42.560><c> for</c><00:05:42.800><c> sure</c><00:05:42.960><c> there's</c><00:05:43.280><c> going</c><00:05:43.440><c> to</c><00:05:43.600><c> be</c><00:05:43.759><c> a</c>

00:05:43.830 --> 00:05:43.840 align:start position:0%
we know for sure there's going to be a
 

00:05:43.840 --> 00:05:45.189 align:start position:0%
we know for sure there's going to be a
cycle<00:05:44.240><c> and</c><00:05:44.320><c> we</c><00:05:44.400><c> know</c><00:05:44.560><c> for</c><00:05:44.720><c> sure</c><00:05:44.880><c> there's</c><00:05:45.120><c> going</c>

00:05:45.189 --> 00:05:45.199 align:start position:0%
cycle and we know for sure there's going
 

00:05:45.199 --> 00:05:47.270 align:start position:0%
cycle and we know for sure there's going
to<00:05:45.280><c> be</c><00:05:45.440><c> a</c><00:05:45.520><c> portion</c><00:05:46.000><c> before</c><00:05:46.560><c> the</c><00:05:46.800><c> cycle</c>

00:05:47.270 --> 00:05:47.280 align:start position:0%
to be a portion before the cycle
 

00:05:47.280 --> 00:05:49.029 align:start position:0%
to be a portion before the cycle
the<00:05:47.440><c> portion</c><00:05:47.840><c> before</c><00:05:48.160><c> the</c><00:05:48.320><c> cycle</c><00:05:48.639><c> of</c><00:05:48.720><c> course</c>

00:05:49.029 --> 00:05:49.039 align:start position:0%
the portion before the cycle of course
 

00:05:49.039 --> 00:05:50.950 align:start position:0%
the portion before the cycle of course
is<00:05:49.199><c> eventually</c><00:05:49.759><c> going</c><00:05:49.919><c> to</c><00:05:50.000><c> lead</c><00:05:50.240><c> us</c><00:05:50.400><c> to</c><00:05:50.639><c> here</c>

00:05:50.950 --> 00:05:50.960 align:start position:0%
is eventually going to lead us to here
 

00:05:50.960 --> 00:05:51.990 align:start position:0%
is eventually going to lead us to here
which<00:05:51.199><c> is</c><00:05:51.280><c> the</c><00:05:51.520><c> start</c>

00:05:51.990 --> 00:05:52.000 align:start position:0%
which is the start
 

00:05:52.000 --> 00:05:54.390 align:start position:0%
which is the start
of<00:05:52.080><c> the</c><00:05:52.320><c> cycle</c><00:05:53.520><c> and</c><00:05:53.759><c> of</c><00:05:53.919><c> course</c><00:05:54.080><c> there's</c><00:05:54.320><c> going</c>

00:05:54.390 --> 00:05:54.400 align:start position:0%
of the cycle and of course there's going
 

00:05:54.400 --> 00:05:56.309 align:start position:0%
of the cycle and of course there's going
to<00:05:54.479><c> be</c><00:05:54.639><c> another</c><00:05:55.039><c> node</c><00:05:55.360><c> that</c><00:05:55.520><c> completes</c><00:05:56.160><c> the</c>

00:05:56.309 --> 00:05:56.319 align:start position:0%
to be another node that completes the
 

00:05:56.319 --> 00:05:57.990 align:start position:0%
to be another node that completes the
cycle<00:05:56.720><c> right</c><00:05:56.960><c> putting</c><00:05:57.280><c> it</c><00:05:57.440><c> back</c>

00:05:57.990 --> 00:05:58.000 align:start position:0%
cycle right putting it back
 

00:05:58.000 --> 00:06:00.230 align:start position:0%
cycle right putting it back
pointing<00:05:58.400><c> back</c><00:05:58.720><c> to</c><00:05:58.960><c> this</c><00:05:59.199><c> node</c><00:05:59.440><c> so</c><00:05:59.680><c> if</c><00:05:59.840><c> we</c><00:06:00.000><c> can</c>

00:06:00.230 --> 00:06:00.240 align:start position:0%
pointing back to this node so if we can
 

00:06:00.240 --> 00:06:02.790 align:start position:0%
pointing back to this node so if we can
somehow<00:06:00.800><c> identify</c><00:06:01.520><c> the</c><00:06:01.759><c> beginning</c><00:06:02.400><c> of</c><00:06:02.560><c> a</c>

00:06:02.790 --> 00:06:02.800 align:start position:0%
somehow identify the beginning of a
 

00:06:02.800 --> 00:06:03.590 align:start position:0%
somehow identify the beginning of a
cycle

00:06:03.590 --> 00:06:03.600 align:start position:0%
cycle
 

00:06:03.600 --> 00:06:06.950 align:start position:0%
cycle
in<00:06:03.840><c> this</c><00:06:04.240><c> linked</c><00:06:04.639><c> list</c><00:06:05.600><c> then</c><00:06:06.160><c> we</c><00:06:06.479><c> will</c><00:06:06.800><c> know</c>

00:06:06.950 --> 00:06:06.960 align:start position:0%
in this linked list then we will know
 

00:06:06.960 --> 00:06:08.550 align:start position:0%
in this linked list then we will know
that<00:06:07.120><c> that</c><00:06:07.360><c> beginning</c><00:06:07.840><c> of</c><00:06:07.919><c> the</c><00:06:08.080><c> cycle</c>

00:06:08.550 --> 00:06:08.560 align:start position:0%
that that beginning of the cycle
 

00:06:08.560 --> 00:06:10.469 align:start position:0%
that that beginning of the cycle
is<00:06:08.720><c> the</c><00:06:08.880><c> return</c><00:06:09.520><c> value</c><00:06:09.919><c> that</c><00:06:10.000><c> we're</c><00:06:10.240><c> looking</c>

00:06:10.469 --> 00:06:10.479 align:start position:0%
is the return value that we're looking
 

00:06:10.479 --> 00:06:12.070 align:start position:0%
is the return value that we're looking
for<00:06:10.639><c> in</c><00:06:10.720><c> the</c><00:06:10.880><c> output</c><00:06:11.199><c> you</c><00:06:11.360><c> can</c><00:06:11.440><c> see</c><00:06:11.680><c> yes</c>

00:06:12.070 --> 00:06:12.080 align:start position:0%
for in the output you can see yes
 

00:06:12.080 --> 00:06:13.830 align:start position:0%
for in the output you can see yes
2<00:06:12.400><c> is</c><00:06:12.479><c> the</c><00:06:12.639><c> duplicate</c><00:06:13.199><c> that's</c><00:06:13.440><c> the</c><00:06:13.520><c> one</c><00:06:13.680><c> we</c>

00:06:13.830 --> 00:06:13.840 align:start position:0%
2 is the duplicate that's the one we
 

00:06:13.840 --> 00:06:15.510 align:start position:0%
2 is the duplicate that's the one we
want<00:06:14.000><c> to</c><00:06:14.080><c> return</c><00:06:14.639><c> therefore</c><00:06:15.120><c> we</c><00:06:15.280><c> want</c><00:06:15.440><c> to</c>

00:06:15.510 --> 00:06:15.520 align:start position:0%
want to return therefore we want to
 

00:06:15.520 --> 00:06:17.270 align:start position:0%
want to return therefore we want to
return<00:06:15.840><c> the</c><00:06:16.080><c> start</c><00:06:16.400><c> of</c><00:06:16.560><c> the</c><00:06:16.720><c> cycle</c>

00:06:17.270 --> 00:06:17.280 align:start position:0%
return the start of the cycle
 

00:06:17.280 --> 00:06:19.830 align:start position:0%
return the start of the cycle
so<00:06:17.440><c> at</c><00:06:17.680><c> this</c><00:06:18.000><c> point</c><00:06:18.319><c> it's</c><00:06:18.639><c> all</c><00:06:18.800><c> about</c><00:06:19.199><c> applying</c>

00:06:19.830 --> 00:06:19.840 align:start position:0%
so at this point it's all about applying
 

00:06:19.840 --> 00:06:22.309 align:start position:0%
so at this point it's all about applying
floyd's<00:06:20.479><c> algorithm</c><00:06:20.960><c> to</c><00:06:21.199><c> find</c><00:06:21.520><c> the</c><00:06:21.680><c> beginning</c>

00:06:22.309 --> 00:06:22.319 align:start position:0%
floyd's algorithm to find the beginning
 

00:06:22.319 --> 00:06:23.590 align:start position:0%
floyd's algorithm to find the beginning
of<00:06:22.560><c> a</c><00:06:22.720><c> cycle</c>

00:06:23.590 --> 00:06:23.600 align:start position:0%
of a cycle
 

00:06:23.600 --> 00:06:25.510 align:start position:0%
of a cycle
so<00:06:23.919><c> that's</c><00:06:24.479><c> once</c><00:06:24.720><c> you've</c><00:06:24.960><c> determined</c><00:06:25.360><c> that</c>

00:06:25.510 --> 00:06:25.520 align:start position:0%
so that's once you've determined that
 

00:06:25.520 --> 00:06:27.110 align:start position:0%
so that's once you've determined that
it's<00:06:25.680><c> a</c><00:06:25.759><c> linked</c><00:06:26.000><c> list</c><00:06:26.240><c> problem</c><00:06:26.639><c> then</c><00:06:26.800><c> you</c><00:06:26.960><c> just</c>

00:06:27.110 --> 00:06:27.120 align:start position:0%
it's a linked list problem then you just
 

00:06:27.120 --> 00:06:27.909 align:start position:0%
it's a linked list problem then you just
need<00:06:27.280><c> to</c><00:06:27.440><c> apply</c>

00:06:27.909 --> 00:06:27.919 align:start position:0%
need to apply
 

00:06:27.919 --> 00:06:29.990 align:start position:0%
need to apply
this<00:06:28.240><c> algorithm</c><00:06:28.800><c> and</c><00:06:28.880><c> this</c><00:06:29.120><c> algorithm</c><00:06:29.600><c> itself</c>

00:06:29.990 --> 00:06:30.000 align:start position:0%
this algorithm and this algorithm itself
 

00:06:30.000 --> 00:06:32.469 align:start position:0%
this algorithm and this algorithm itself
is<00:06:30.080><c> actually</c><00:06:30.479><c> also</c><00:06:30.880><c> not</c><00:06:31.120><c> very</c><00:06:31.440><c> intuitive</c>

00:06:32.469 --> 00:06:32.479 align:start position:0%
is actually also not very intuitive
 

00:06:32.479 --> 00:06:34.070 align:start position:0%
is actually also not very intuitive
so<00:06:32.639><c> let's</c><00:06:32.880><c> look</c><00:06:33.039><c> at</c><00:06:33.199><c> a</c><00:06:33.280><c> slightly</c><00:06:33.680><c> different</c>

00:06:34.070 --> 00:06:34.080 align:start position:0%
so let's look at a slightly different
 

00:06:34.080 --> 00:06:36.150 align:start position:0%
so let's look at a slightly different
example<00:06:34.479><c> so</c><00:06:34.639><c> i</c><00:06:34.720><c> can</c><00:06:34.880><c> illustrate</c><00:06:35.520><c> the</c>

00:06:36.150 --> 00:06:36.160 align:start position:0%
example so i can illustrate the
 

00:06:36.160 --> 00:06:38.390 align:start position:0%
example so i can illustrate the
floyd's<00:06:36.560><c> algorithm</c><00:06:37.520><c> so</c><00:06:37.759><c> first</c><00:06:38.080><c> i'm</c><00:06:38.240><c> just</c>

00:06:38.390 --> 00:06:38.400 align:start position:0%
floyd's algorithm so first i'm just
 

00:06:38.400 --> 00:06:40.469 align:start position:0%
floyd's algorithm so first i'm just
going<00:06:38.479><c> to</c><00:06:38.800><c> tell</c><00:06:39.039><c> you</c><00:06:39.199><c> what</c><00:06:39.360><c> the</c><00:06:39.600><c> algorithm</c><00:06:40.240><c> is</c>

00:06:40.469 --> 00:06:40.479 align:start position:0%
going to tell you what the algorithm is
 

00:06:40.479 --> 00:06:41.830 align:start position:0%
going to tell you what the algorithm is
and<00:06:40.560><c> then</c><00:06:40.800><c> i'm</c><00:06:40.960><c> going</c><00:06:41.039><c> to</c><00:06:41.120><c> explain</c><00:06:41.520><c> a</c><00:06:41.600><c> little</c>

00:06:41.830 --> 00:06:41.840 align:start position:0%
and then i'm going to explain a little
 

00:06:41.840 --> 00:06:44.070 align:start position:0%
and then i'm going to explain a little
bit<00:06:42.000><c> of</c><00:06:42.160><c> the</c><00:06:42.400><c> intuition</c><00:06:43.039><c> of</c><00:06:43.199><c> why</c><00:06:43.440><c> it</c><00:06:43.600><c> actually</c>

00:06:44.070 --> 00:06:44.080 align:start position:0%
bit of the intuition of why it actually
 

00:06:44.080 --> 00:06:44.710 align:start position:0%
bit of the intuition of why it actually
works

00:06:44.710 --> 00:06:44.720 align:start position:0%
works
 

00:06:44.720 --> 00:06:46.550 align:start position:0%
works
so<00:06:44.880><c> the</c><00:06:45.120><c> slow</c><00:06:45.440><c> pointer</c><00:06:45.680><c> and</c><00:06:45.840><c> fast</c><00:06:46.160><c> pointer</c><00:06:46.479><c> are</c>

00:06:46.550 --> 00:06:46.560 align:start position:0%
so the slow pointer and fast pointer are
 

00:06:46.560 --> 00:06:47.990 align:start position:0%
so the slow pointer and fast pointer are
both<00:06:46.800><c> going</c><00:06:46.880><c> to</c><00:06:47.039><c> start</c><00:06:47.280><c> at</c><00:06:47.360><c> this</c><00:06:47.600><c> position</c>

00:06:47.990 --> 00:06:48.000 align:start position:0%
both going to start at this position
 

00:06:48.000 --> 00:06:49.510 align:start position:0%
both going to start at this position
the<00:06:48.080><c> slow</c><00:06:48.400><c> pointer</c><00:06:48.639><c> of</c><00:06:48.720><c> course</c><00:06:49.039><c> is</c><00:06:49.199><c> going</c><00:06:49.360><c> to</c>

00:06:49.510 --> 00:06:49.520 align:start position:0%
the slow pointer of course is going to
 

00:06:49.520 --> 00:06:51.029 align:start position:0%
the slow pointer of course is going to
be<00:06:49.919><c> shifted</c><00:06:50.319><c> by</c><00:06:50.639><c> one</c>

00:06:51.029 --> 00:06:51.039 align:start position:0%
be shifted by one
 

00:06:51.039 --> 00:06:54.230 align:start position:0%
be shifted by one
each<00:06:51.440><c> iteration</c><00:06:52.240><c> so</c><00:06:52.400><c> that's</c><00:06:52.800><c> one</c><00:06:53.120><c> jump</c><00:06:53.759><c> that's</c>

00:06:54.230 --> 00:06:54.240 align:start position:0%
each iteration so that's one jump that's
 

00:06:54.240 --> 00:06:57.510 align:start position:0%
each iteration so that's one jump that's
two<00:06:54.560><c> jumps</c><00:06:55.440><c> that's</c><00:06:56.000><c> three</c><00:06:56.400><c> jumps</c><00:06:57.039><c> so</c><00:06:57.199><c> we</c><00:06:57.360><c> just</c>

00:06:57.510 --> 00:06:57.520 align:start position:0%
two jumps that's three jumps so we just
 

00:06:57.520 --> 00:06:59.110 align:start position:0%
two jumps that's three jumps so we just
made<00:06:57.840><c> three</c><00:06:58.240><c> jumps</c><00:06:58.560><c> with</c><00:06:58.720><c> our</c>

00:06:59.110 --> 00:06:59.120 align:start position:0%
made three jumps with our
 

00:06:59.120 --> 00:07:00.790 align:start position:0%
made three jumps with our
with<00:06:59.360><c> our</c><00:06:59.440><c> slow</c><00:06:59.680><c> pointer</c><00:06:59.919><c> let's</c><00:07:00.160><c> do</c><00:07:00.319><c> the</c><00:07:00.400><c> exact</c>

00:07:00.790 --> 00:07:00.800 align:start position:0%
with our slow pointer let's do the exact
 

00:07:00.800 --> 00:07:02.390 align:start position:0%
with our slow pointer let's do the exact
same<00:07:01.039><c> thing</c><00:07:01.280><c> with</c><00:07:01.440><c> our</c><00:07:01.599><c> fast</c><00:07:01.919><c> pointer</c>

00:07:02.390 --> 00:07:02.400 align:start position:0%
same thing with our fast pointer
 

00:07:02.400 --> 00:07:04.390 align:start position:0%
same thing with our fast pointer
so<00:07:02.720><c> remember</c><00:07:03.120><c> a</c><00:07:03.280><c> jump</c><00:07:03.520><c> with</c><00:07:03.680><c> the</c><00:07:03.840><c> fast</c><00:07:04.080><c> pointer</c>

00:07:04.390 --> 00:07:04.400 align:start position:0%
so remember a jump with the fast pointer
 

00:07:04.400 --> 00:07:06.469 align:start position:0%
so remember a jump with the fast pointer
is<00:07:04.479><c> going</c><00:07:04.560><c> to</c><00:07:04.639><c> be</c><00:07:04.880><c> two</c><00:07:05.199><c> positions</c><00:07:05.680><c> so</c><00:07:05.840><c> that's</c>

00:07:06.469 --> 00:07:06.479 align:start position:0%
is going to be two positions so that's
 

00:07:06.479 --> 00:07:10.230 align:start position:0%
is going to be two positions so that's
one<00:07:06.800><c> jump</c><00:07:08.000><c> that's</c><00:07:09.039><c> two</c><00:07:09.440><c> jumps</c>

00:07:10.230 --> 00:07:10.240 align:start position:0%
one jump that's two jumps
 

00:07:10.240 --> 00:07:12.070 align:start position:0%
one jump that's two jumps
and<00:07:10.400><c> let's</c><00:07:10.639><c> make</c><00:07:10.960><c> two</c><00:07:11.199><c> more</c><00:07:11.440><c> jumps</c><00:07:11.680><c> from</c><00:07:11.840><c> here</c>

00:07:12.070 --> 00:07:12.080 align:start position:0%
and let's make two more jumps from here
 

00:07:12.080 --> 00:07:13.430 align:start position:0%
and let's make two more jumps from here
so<00:07:12.240><c> we're</c><00:07:12.400><c> gonna</c><00:07:12.560><c> go</c><00:07:12.720><c> to</c><00:07:13.039><c> two</c>

00:07:13.430 --> 00:07:13.440 align:start position:0%
so we're gonna go to two
 

00:07:13.440 --> 00:07:16.309 align:start position:0%
so we're gonna go to two
and<00:07:13.759><c> then</c><00:07:14.160><c> back</c><00:07:14.880><c> to</c><00:07:15.280><c> three</c><00:07:15.680><c> so</c><00:07:15.919><c> you</c><00:07:16.000><c> can</c><00:07:16.160><c> see</c>

00:07:16.309 --> 00:07:16.319 align:start position:0%
and then back to three so you can see
 

00:07:16.319 --> 00:07:17.430 align:start position:0%
and then back to three so you can see
that<00:07:16.560><c> it</c><00:07:16.639><c> got</c><00:07:16.800><c> a</c><00:07:16.960><c> little</c><00:07:17.120><c> bit</c>

00:07:17.430 --> 00:07:17.440 align:start position:0%
that it got a little bit
 

00:07:17.440 --> 00:07:19.909 align:start position:0%
that it got a little bit
messy<00:07:18.080><c> but</c><00:07:18.560><c> we</c><00:07:18.720><c> made</c><00:07:19.039><c> three</c><00:07:19.360><c> jumps</c><00:07:19.680><c> with</c><00:07:19.840><c> the</c>

00:07:19.909 --> 00:07:19.919 align:start position:0%
messy but we made three jumps with the
 

00:07:19.919 --> 00:07:21.589 align:start position:0%
messy but we made three jumps with the
fast<00:07:20.240><c> pointer</c><00:07:20.560><c> and</c><00:07:20.639><c> we</c><00:07:20.800><c> made</c><00:07:21.039><c> three</c><00:07:21.280><c> jumps</c>

00:07:21.589 --> 00:07:21.599 align:start position:0%
fast pointer and we made three jumps
 

00:07:21.599 --> 00:07:23.029 align:start position:0%
fast pointer and we made three jumps
with<00:07:21.680><c> a</c><00:07:21.759><c> slow</c><00:07:22.080><c> pointer</c><00:07:22.400><c> and</c><00:07:22.479><c> you</c><00:07:22.560><c> can</c><00:07:22.720><c> see</c>

00:07:23.029 --> 00:07:23.039 align:start position:0%
with a slow pointer and you can see
 

00:07:23.039 --> 00:07:25.270 align:start position:0%
with a slow pointer and you can see
this<00:07:23.280><c> is</c><00:07:23.440><c> the</c><00:07:23.759><c> first</c><00:07:24.160><c> position</c><00:07:24.720><c> that</c><00:07:24.960><c> they</c>

00:07:25.270 --> 00:07:25.280 align:start position:0%
this is the first position that they
 

00:07:25.280 --> 00:07:26.870 align:start position:0%
this is the first position that they
intersected<00:07:26.319><c> at</c>

00:07:26.870 --> 00:07:26.880 align:start position:0%
intersected at
 

00:07:26.880 --> 00:07:30.710 align:start position:0%
intersected at
so<00:07:27.199><c> this</c><00:07:27.759><c> was</c><00:07:28.000><c> the</c><00:07:28.840><c> intersection</c><00:07:29.919><c> of</c>

00:07:30.710 --> 00:07:30.720 align:start position:0%
so this was the intersection of
 

00:07:30.720 --> 00:07:33.350 align:start position:0%
so this was the intersection of
the<00:07:31.599><c> us</c><00:07:32.160><c> of</c><00:07:32.319><c> the</c><00:07:32.479><c> two</c><00:07:32.720><c> pointers</c><00:07:33.039><c> right</c><00:07:33.199><c> this</c>

00:07:33.350 --> 00:07:33.360 align:start position:0%
the us of the two pointers right this
 

00:07:33.360 --> 00:07:34.070 align:start position:0%
the us of the two pointers right this
was<00:07:33.520><c> the</c><00:07:33.680><c> first</c>

00:07:34.070 --> 00:07:34.080 align:start position:0%
was the first
 

00:07:34.080 --> 00:07:36.870 align:start position:0%
was the first
intersection<00:07:35.360><c> so</c><00:07:35.599><c> that's</c><00:07:35.840><c> the</c><00:07:36.080><c> first</c><00:07:36.560><c> phase</c>

00:07:36.870 --> 00:07:36.880 align:start position:0%
intersection so that's the first phase
 

00:07:36.880 --> 00:07:38.790 align:start position:0%
intersection so that's the first phase
of<00:07:36.960><c> this</c><00:07:37.199><c> algorithm</c><00:07:37.680><c> first</c><00:07:37.919><c> we</c><00:07:38.240><c> find</c><00:07:38.560><c> the</c>

00:07:38.790 --> 00:07:38.800 align:start position:0%
of this algorithm first we find the
 

00:07:38.800 --> 00:07:41.110 align:start position:0%
of this algorithm first we find the
first<00:07:39.120><c> position</c><00:07:39.520><c> that</c><00:07:39.680><c> they</c><00:07:39.919><c> intersect</c><00:07:40.560><c> at</c>

00:07:41.110 --> 00:07:41.120 align:start position:0%
first position that they intersect at
 

00:07:41.120 --> 00:07:43.670 align:start position:0%
first position that they intersect at
then<00:07:41.680><c> we</c><00:07:41.919><c> take</c><00:07:42.160><c> our</c><00:07:42.319><c> slow</c><00:07:42.720><c> pointer</c><00:07:43.280><c> leave</c><00:07:43.599><c> it</c>

00:07:43.670 --> 00:07:43.680 align:start position:0%
then we take our slow pointer leave it
 

00:07:43.680 --> 00:07:44.469 align:start position:0%
then we take our slow pointer leave it
here

00:07:44.469 --> 00:07:44.479 align:start position:0%
here
 

00:07:44.479 --> 00:07:46.230 align:start position:0%
here
so<00:07:44.720><c> our</c><00:07:44.879><c> slope</c><00:07:45.120><c> pointer</c><00:07:45.520><c> is</c><00:07:45.599><c> going</c><00:07:45.680><c> to</c><00:07:45.759><c> be</c><00:07:45.919><c> here</c>

00:07:46.230 --> 00:07:46.240 align:start position:0%
so our slope pointer is going to be here
 

00:07:46.240 --> 00:07:47.830 align:start position:0%
so our slope pointer is going to be here
right<00:07:46.720><c> and</c><00:07:46.879><c> then</c><00:07:47.039><c> we're</c><00:07:47.199><c> going</c><00:07:47.280><c> to</c><00:07:47.360><c> be</c><00:07:47.599><c> done</c>

00:07:47.830 --> 00:07:47.840 align:start position:0%
right and then we're going to be done
 

00:07:47.840 --> 00:07:49.110 align:start position:0%
right and then we're going to be done
with<00:07:48.000><c> the</c><00:07:48.160><c> fast</c><00:07:48.479><c> pointer</c><00:07:48.800><c> we're</c><00:07:48.960><c> going</c><00:07:49.039><c> to</c>

00:07:49.110 --> 00:07:49.120 align:start position:0%
with the fast pointer we're going to
 

00:07:49.120 --> 00:07:49.830 align:start position:0%
with the fast pointer we're going to
take<00:07:49.440><c> a</c>

00:07:49.830 --> 00:07:49.840 align:start position:0%
take a
 

00:07:49.840 --> 00:07:52.790 align:start position:0%
take a
second<00:07:50.479><c> slow</c><00:07:51.039><c> pointer</c><00:07:51.680><c> and</c><00:07:51.840><c> put</c><00:07:52.080><c> it</c><00:07:52.319><c> right</c><00:07:52.639><c> at</c>

00:07:52.790 --> 00:07:52.800 align:start position:0%
second slow pointer and put it right at
 

00:07:52.800 --> 00:07:54.550 align:start position:0%
second slow pointer and put it right at
the<00:07:52.960><c> beginning</c><00:07:53.599><c> of</c><00:07:53.759><c> the</c><00:07:53.919><c> array</c>

00:07:54.550 --> 00:07:54.560 align:start position:0%
the beginning of the array
 

00:07:54.560 --> 00:07:57.350 align:start position:0%
the beginning of the array
and<00:07:55.039><c> each</c><00:07:55.360><c> of</c><00:07:55.599><c> these</c><00:07:56.479><c> slow</c><00:07:56.879><c> pointers</c><00:07:57.199><c> we're</c>

00:07:57.350 --> 00:07:57.360 align:start position:0%
and each of these slow pointers we're
 

00:07:57.360 --> 00:07:59.029 align:start position:0%
and each of these slow pointers we're
gonna<00:07:57.599><c> keep</c><00:07:57.919><c> shifting</c><00:07:58.400><c> them</c><00:07:58.639><c> by</c>

00:07:59.029 --> 00:07:59.039 align:start position:0%
gonna keep shifting them by
 

00:07:59.039 --> 00:08:01.749 align:start position:0%
gonna keep shifting them by
one<00:07:59.440><c> until</c><00:07:59.840><c> they</c><00:08:00.160><c> intersect</c><00:08:00.879><c> one</c><00:08:01.120><c> more</c><00:08:01.440><c> time</c>

00:08:01.749 --> 00:08:01.759 align:start position:0%
one until they intersect one more time
 

00:08:01.759 --> 00:08:02.150 align:start position:0%
one until they intersect one more time
so

00:08:02.150 --> 00:08:02.160 align:start position:0%
so
 

00:08:02.160 --> 00:08:03.830 align:start position:0%
so
this<00:08:02.400><c> slow</c><00:08:02.639><c> pointer</c><00:08:03.039><c> is</c><00:08:03.120><c> going</c><00:08:03.199><c> to</c><00:08:03.280><c> be</c><00:08:03.440><c> shifted</c>

00:08:03.830 --> 00:08:03.840 align:start position:0%
this slow pointer is going to be shifted
 

00:08:03.840 --> 00:08:06.469 align:start position:0%
this slow pointer is going to be shifted
by<00:08:04.160><c> one</c><00:08:04.879><c> this</c><00:08:05.199><c> slow</c><00:08:05.520><c> pointer</c><00:08:05.840><c> is</c><00:08:06.080><c> also</c><00:08:06.400><c> going</c>

00:08:06.469 --> 00:08:06.479 align:start position:0%
by one this slow pointer is also going
 

00:08:06.479 --> 00:08:07.749 align:start position:0%
by one this slow pointer is also going
to<00:08:06.560><c> be</c><00:08:06.720><c> shifted</c><00:08:07.120><c> by</c><00:08:07.360><c> one</c>

00:08:07.749 --> 00:08:07.759 align:start position:0%
to be shifted by one
 

00:08:07.759 --> 00:08:09.749 align:start position:0%
to be shifted by one
hey<00:08:08.240><c> and</c><00:08:08.479><c> we</c><00:08:08.639><c> just</c><00:08:08.879><c> found</c><00:08:09.199><c> out</c><00:08:09.280><c> that</c><00:08:09.440><c> they</c>

00:08:09.749 --> 00:08:09.759 align:start position:0%
hey and we just found out that they
 

00:08:09.759 --> 00:08:10.869 align:start position:0%
hey and we just found out that they
intersected<00:08:10.479><c> right</c>

00:08:10.869 --> 00:08:10.879 align:start position:0%
intersected right
 

00:08:10.879 --> 00:08:13.990 align:start position:0%
intersected right
and<00:08:11.360><c> this</c><00:08:11.759><c> second</c><00:08:12.240><c> point</c><00:08:12.639><c> of</c><00:08:12.800><c> intersection</c><00:08:13.599><c> is</c>

00:08:13.990 --> 00:08:14.000 align:start position:0%
and this second point of intersection is
 

00:08:14.000 --> 00:08:16.950 align:start position:0%
and this second point of intersection is
always<00:08:14.639><c> going</c><00:08:14.960><c> to</c><00:08:15.199><c> be</c><00:08:15.440><c> the</c><00:08:15.680><c> result</c><00:08:16.240><c> it's</c><00:08:16.639><c> not</c>

00:08:16.950 --> 00:08:16.960 align:start position:0%
always going to be the result it's not
 

00:08:16.960 --> 00:08:18.550 align:start position:0%
always going to be the result it's not
intuitive<00:08:17.680><c> at</c><00:08:18.080><c> all</c>

00:08:18.550 --> 00:08:18.560 align:start position:0%
intuitive at all
 

00:08:18.560 --> 00:08:20.629 align:start position:0%
intuitive at all
why<00:08:18.800><c> this</c><00:08:18.960><c> is</c><00:08:19.120><c> the</c><00:08:19.280><c> case</c><00:08:19.759><c> yet</c><00:08:20.000><c> but</c><00:08:20.240><c> let</c><00:08:20.400><c> me</c>

00:08:20.629 --> 00:08:20.639 align:start position:0%
why this is the case yet but let me
 

00:08:20.639 --> 00:08:22.469 align:start position:0%
why this is the case yet but let me
explain<00:08:21.120><c> that</c><00:08:21.440><c> but</c><00:08:21.680><c> now</c><00:08:21.919><c> you</c><00:08:22.080><c> know</c><00:08:22.240><c> the</c>

00:08:22.469 --> 00:08:22.479 align:start position:0%
explain that but now you know the
 

00:08:22.479 --> 00:08:24.469 align:start position:0%
explain that but now you know the
algorithm<00:08:23.039><c> if</c><00:08:23.280><c> all</c><00:08:23.440><c> you</c><00:08:23.599><c> wanted</c><00:08:23.840><c> to</c><00:08:24.000><c> do</c><00:08:24.160><c> was</c>

00:08:24.469 --> 00:08:24.479 align:start position:0%
algorithm if all you wanted to do was
 

00:08:24.479 --> 00:08:26.869 align:start position:0%
algorithm if all you wanted to do was
memorize<00:08:25.039><c> it</c><00:08:25.360><c> that's</c><00:08:25.759><c> literally</c><00:08:26.319><c> it</c><00:08:26.560><c> now</c><00:08:26.720><c> you</c>

00:08:26.869 --> 00:08:26.879 align:start position:0%
memorize it that's literally it now you
 

00:08:26.879 --> 00:08:27.749 align:start position:0%
memorize it that's literally it now you
can<00:08:27.039><c> code</c><00:08:27.280><c> it</c><00:08:27.440><c> up</c>

00:08:27.749 --> 00:08:27.759 align:start position:0%
can code it up
 

00:08:27.759 --> 00:08:29.510 align:start position:0%
can code it up
that's<00:08:28.000><c> why</c><00:08:28.240><c> i</c><00:08:28.400><c> don't</c><00:08:28.720><c> like</c><00:08:28.879><c> this</c><00:08:29.120><c> problem</c>

00:08:29.510 --> 00:08:29.520 align:start position:0%
that's why i don't like this problem
 

00:08:29.520 --> 00:08:31.110 align:start position:0%
that's why i don't like this problem
because<00:08:29.680><c> it's</c><00:08:29.919><c> simple</c><00:08:30.319><c> if</c><00:08:30.479><c> you</c>

00:08:31.110 --> 00:08:31.120 align:start position:0%
because it's simple if you
 

00:08:31.120 --> 00:08:33.430 align:start position:0%
because it's simple if you
if<00:08:31.199><c> you've</c><00:08:31.520><c> solved</c><00:08:31.840><c> it</c><00:08:32.000><c> before</c><00:08:32.880><c> so</c><00:08:33.120><c> this</c>

00:08:33.430 --> 00:08:33.440 align:start position:0%
if you've solved it before so this
 

00:08:33.440 --> 00:08:35.269 align:start position:0%
if you've solved it before so this
algorithm<00:08:33.919><c> relies</c><00:08:34.399><c> on</c><00:08:34.560><c> the</c><00:08:34.640><c> fact</c><00:08:34.880><c> that</c><00:08:34.959><c> the</c>

00:08:35.269 --> 00:08:35.279 align:start position:0%
algorithm relies on the fact that the
 

00:08:35.279 --> 00:08:37.350 align:start position:0%
algorithm relies on the fact that the
intersection<00:08:36.159><c> point</c><00:08:36.640><c> like</c><00:08:36.880><c> the</c><00:08:37.039><c> first</c>

00:08:37.350 --> 00:08:37.360 align:start position:0%
intersection point like the first
 

00:08:37.360 --> 00:08:39.350 align:start position:0%
intersection point like the first
intersection<00:08:38.000><c> between</c><00:08:38.320><c> the</c><00:08:38.479><c> two</c><00:08:38.719><c> pointers</c>

00:08:39.350 --> 00:08:39.360 align:start position:0%
intersection between the two pointers
 

00:08:39.360 --> 00:08:42.469 align:start position:0%
intersection between the two pointers
the<00:08:39.680><c> distance</c><00:08:40.159><c> between</c><00:08:40.880><c> this</c><00:08:41.279><c> point</c><00:08:41.760><c> and</c><00:08:42.320><c> the</c>

00:08:42.469 --> 00:08:42.479 align:start position:0%
the distance between this point and the
 

00:08:42.479 --> 00:08:44.310 align:start position:0%
the distance between this point and the
beginning<00:08:42.959><c> of</c><00:08:43.039><c> the</c><00:08:43.279><c> cycle</c><00:08:43.680><c> which</c><00:08:43.919><c> in</c><00:08:44.080><c> this</c>

00:08:44.310 --> 00:08:44.320 align:start position:0%
beginning of the cycle which in this
 

00:08:44.320 --> 00:08:44.710 align:start position:0%
beginning of the cycle which in this
case

00:08:44.710 --> 00:08:44.720 align:start position:0%
case
 

00:08:44.720 --> 00:08:47.910 align:start position:0%
case
is<00:08:45.440><c> one</c><00:08:46.080><c> right</c><00:08:46.399><c> is</c><00:08:46.720><c> always</c><00:08:47.200><c> going</c><00:08:47.440><c> to</c><00:08:47.600><c> be</c><00:08:47.760><c> the</c>

00:08:47.910 --> 00:08:47.920 align:start position:0%
is one right is always going to be the
 

00:08:47.920 --> 00:08:49.990 align:start position:0%
is one right is always going to be the
same<00:08:48.160><c> as</c><00:08:48.320><c> the</c><00:08:48.640><c> starting</c><00:08:49.360><c> point</c>

00:08:49.990 --> 00:08:50.000 align:start position:0%
same as the starting point
 

00:08:50.000 --> 00:08:52.470 align:start position:0%
same as the starting point
distance<00:08:50.800><c> from</c><00:08:51.279><c> the</c><00:08:51.519><c> cycle</c><00:08:51.920><c> from</c><00:08:52.080><c> the</c><00:08:52.240><c> start</c>

00:08:52.470 --> 00:08:52.480 align:start position:0%
distance from the cycle from the start
 

00:08:52.480 --> 00:08:53.990 align:start position:0%
distance from the cycle from the start
of<00:08:52.560><c> the</c><00:08:52.640><c> cycle</c><00:08:53.040><c> that's</c><00:08:53.440><c> also</c>

00:08:53.990 --> 00:08:54.000 align:start position:0%
of the cycle that's also
 

00:08:54.000 --> 00:08:56.070 align:start position:0%
of the cycle that's also
one<00:08:54.320><c> right</c><00:08:54.480><c> since</c><00:08:54.720><c> we</c><00:08:54.959><c> know</c><00:08:55.120><c> that's</c><00:08:55.440><c> the</c><00:08:55.600><c> case</c>

00:08:56.070 --> 00:08:56.080 align:start position:0%
one right since we know that's the case
 

00:08:56.080 --> 00:08:58.550 align:start position:0%
one right since we know that's the case
that's<00:08:56.399><c> how</c><00:08:56.560><c> we</c><00:08:56.720><c> can</c><00:08:56.880><c> take</c><00:08:57.200><c> two</c><00:08:57.519><c> slow</c><00:08:57.920><c> pointers</c>

00:08:58.550 --> 00:08:58.560 align:start position:0%
that's how we can take two slow pointers
 

00:08:58.560 --> 00:09:00.389 align:start position:0%
that's how we can take two slow pointers
start<00:08:58.880><c> one</c><00:08:59.120><c> here</c><00:08:59.519><c> start</c><00:08:59.760><c> one</c><00:08:59.920><c> here</c><00:09:00.160><c> and</c><00:09:00.240><c> then</c>

00:09:00.389 --> 00:09:00.399 align:start position:0%
start one here start one here and then
 

00:09:00.399 --> 00:09:02.230 align:start position:0%
start one here start one here and then
keep<00:09:00.640><c> shifting</c><00:09:01.040><c> until</c><00:09:01.360><c> they</c><00:09:01.600><c> intersect</c>

00:09:02.230 --> 00:09:02.240 align:start position:0%
keep shifting until they intersect
 

00:09:02.240 --> 00:09:04.389 align:start position:0%
keep shifting until they intersect
then<00:09:02.399><c> we</c><00:09:02.560><c> get</c><00:09:02.640><c> the</c><00:09:02.800><c> result</c><00:09:03.279><c> but</c><00:09:03.600><c> why</c><00:09:03.920><c> is</c><00:09:04.000><c> it</c><00:09:04.160><c> the</c>

00:09:04.389 --> 00:09:04.399 align:start position:0%
then we get the result but why is it the
 

00:09:04.399 --> 00:09:06.470 align:start position:0%
then we get the result but why is it the
case<00:09:04.880><c> that</c><00:09:05.040><c> the</c><00:09:05.279><c> distance</c><00:09:05.680><c> between</c><00:09:06.160><c> this</c>

00:09:06.470 --> 00:09:06.480 align:start position:0%
case that the distance between this
 

00:09:06.480 --> 00:09:09.269 align:start position:0%
case that the distance between this
is<00:09:06.560><c> the</c><00:09:06.880><c> same</c><00:09:07.120><c> as</c><00:09:07.279><c> the</c><00:09:07.440><c> distance</c><00:09:07.839><c> between</c><00:09:08.399><c> this</c>

00:09:09.269 --> 00:09:09.279 align:start position:0%
is the same as the distance between this
 

00:09:09.279 --> 00:09:11.190 align:start position:0%
is the same as the distance between this
looking<00:09:09.600><c> at</c><00:09:09.680><c> this</c><00:09:09.920><c> bigger</c><00:09:10.240><c> example</c><00:09:10.800><c> why</c><00:09:10.959><c> is</c><00:09:11.120><c> it</c>

00:09:11.190 --> 00:09:11.200 align:start position:0%
looking at this bigger example why is it
 

00:09:11.200 --> 00:09:11.590 align:start position:0%
looking at this bigger example why is it
that

00:09:11.590 --> 00:09:11.600 align:start position:0%
that
 

00:09:11.600 --> 00:09:14.070 align:start position:0%
that
the<00:09:11.760><c> distance</c><00:09:12.240><c> between</c><00:09:12.480><c> the</c><00:09:12.720><c> start</c><00:09:13.760><c> and</c><00:09:13.920><c> to</c>

00:09:14.070 --> 00:09:14.080 align:start position:0%
the distance between the start and to
 

00:09:14.080 --> 00:09:15.750 align:start position:0%
the distance between the start and to
the<00:09:14.240><c> start</c><00:09:14.480><c> of</c><00:09:14.560><c> the</c><00:09:14.800><c> cycle</c>

00:09:15.750 --> 00:09:15.760 align:start position:0%
the start of the cycle
 

00:09:15.760 --> 00:09:17.269 align:start position:0%
the start of the cycle
is<00:09:15.920><c> always</c><00:09:16.240><c> going</c><00:09:16.399><c> to</c><00:09:16.560><c> be</c><00:09:16.640><c> the</c><00:09:16.720><c> same</c><00:09:16.959><c> between</c>

00:09:17.269 --> 00:09:17.279 align:start position:0%
is always going to be the same between
 

00:09:17.279 --> 00:09:19.350 align:start position:0%
is always going to be the same between
the<00:09:17.519><c> intersection</c><00:09:18.480><c> and</c><00:09:18.640><c> the</c><00:09:18.880><c> start</c><00:09:19.120><c> of</c><00:09:19.200><c> the</c>

00:09:19.350 --> 00:09:19.360 align:start position:0%
the intersection and the start of the
 

00:09:19.360 --> 00:09:20.870 align:start position:0%
the intersection and the start of the
cycle<00:09:19.680><c> why</c><00:09:19.839><c> is</c><00:09:20.000><c> that</c><00:09:20.080><c> the</c><00:09:20.240><c> case</c><00:09:20.480><c> well</c><00:09:20.640><c> let's</c>

00:09:20.870 --> 00:09:20.880 align:start position:0%
cycle why is that the case well let's
 

00:09:20.880 --> 00:09:22.790 align:start position:0%
cycle why is that the case well let's
just<00:09:21.200><c> draw</c><00:09:21.600><c> out</c><00:09:21.920><c> a</c><00:09:22.080><c> few</c>

00:09:22.790 --> 00:09:22.800 align:start position:0%
just draw out a few
 

00:09:22.800 --> 00:09:25.910 align:start position:0%
just draw out a few
distances<00:09:23.760><c> let's</c><00:09:24.000><c> say</c><00:09:24.240><c> the</c><00:09:24.480><c> distance</c><00:09:25.360><c> this</c>

00:09:25.910 --> 00:09:25.920 align:start position:0%
distances let's say the distance this
 

00:09:25.920 --> 00:09:29.190 align:start position:0%
distances let's say the distance this
is<00:09:26.560><c> p</c><00:09:26.959><c> right</c><00:09:27.279><c> basically</c><00:09:28.000><c> p</c><00:09:28.320><c> is</c><00:09:28.399><c> the</c><00:09:28.560><c> number</c><00:09:28.880><c> of</c>

00:09:29.190 --> 00:09:29.200 align:start position:0%
is p right basically p is the number of
 

00:09:29.200 --> 00:09:31.509 align:start position:0%
is p right basically p is the number of
previous<00:09:29.680><c> nodes</c><00:09:30.000><c> we</c><00:09:30.160><c> have</c><00:09:30.399><c> before</c><00:09:30.800><c> the</c><00:09:31.120><c> actual</c>

00:09:31.509 --> 00:09:31.519 align:start position:0%
previous nodes we have before the actual
 

00:09:31.519 --> 00:09:32.550 align:start position:0%
previous nodes we have before the actual
start<00:09:31.839><c> of</c><00:09:31.920><c> the</c><00:09:32.080><c> cycle</c>

00:09:32.550 --> 00:09:32.560 align:start position:0%
start of the cycle
 

00:09:32.560 --> 00:09:34.710 align:start position:0%
start of the cycle
and<00:09:32.720><c> let's</c><00:09:32.959><c> just</c><00:09:33.120><c> say</c><00:09:33.360><c> you</c><00:09:33.440><c> know</c><00:09:33.839><c> arbitrarily</c>

00:09:34.710 --> 00:09:34.720 align:start position:0%
and let's just say you know arbitrarily
 

00:09:34.720 --> 00:09:36.230 align:start position:0%
and let's just say you know arbitrarily
this<00:09:34.959><c> is</c><00:09:35.200><c> this</c><00:09:35.200><c> the</c>

00:09:36.230 --> 00:09:36.240 align:start position:0%
this is this the
 

00:09:36.240 --> 00:09:37.990 align:start position:0%
this is this the
intersection<00:09:36.880><c> point</c><00:09:37.120><c> between</c><00:09:37.519><c> the</c><00:09:37.680><c> two</c>

00:09:37.990 --> 00:09:38.000 align:start position:0%
intersection point between the two
 

00:09:38.000 --> 00:09:40.470 align:start position:0%
intersection point between the two
points<00:09:38.399><c> right</c><00:09:39.040><c> and</c><00:09:39.200><c> we</c><00:09:39.360><c> don't</c><00:09:39.680><c> know</c><00:09:39.920><c> that</c><00:09:40.240><c> this</c>

00:09:40.470 --> 00:09:40.480 align:start position:0%
points right and we don't know that this
 

00:09:40.480 --> 00:09:42.389 align:start position:0%
points right and we don't know that this
is<00:09:40.640><c> going</c><00:09:40.880><c> to</c><00:09:41.040><c> be</c><00:09:41.200><c> the</c><00:09:41.360><c> same</c><00:09:41.760><c> so</c><00:09:41.920><c> let's</c><00:09:42.080><c> just</c>

00:09:42.389 --> 00:09:42.399 align:start position:0%
is going to be the same so let's just
 

00:09:42.399 --> 00:09:43.110 align:start position:0%
is going to be the same so let's just
label<00:09:42.800><c> it</c>

00:09:43.110 --> 00:09:43.120 align:start position:0%
label it
 

00:09:43.120 --> 00:09:45.509 align:start position:0%
label it
x<00:09:43.440><c> for</c><00:09:43.600><c> noun</c><00:09:44.080><c> let's</c><00:09:44.320><c> not</c><00:09:44.480><c> label</c><00:09:44.800><c> it</c><00:09:44.959><c> p</c><00:09:45.279><c> so</c>

00:09:45.509 --> 00:09:45.519 align:start position:0%
x for noun let's not label it p so
 

00:09:45.519 --> 00:09:47.110 align:start position:0%
x for noun let's not label it p so
because<00:09:45.839><c> we</c><00:09:46.000><c> don't</c><00:09:46.160><c> know</c><00:09:46.320><c> for</c><00:09:46.560><c> sure</c><00:09:46.800><c> that</c><00:09:46.959><c> it's</c>

00:09:47.110 --> 00:09:47.120 align:start position:0%
because we don't know for sure that it's
 

00:09:47.120 --> 00:09:48.310 align:start position:0%
because we don't know for sure that it's
going<00:09:47.279><c> to</c><00:09:47.440><c> be</c><00:09:47.600><c> the</c><00:09:47.760><c> same</c>

00:09:48.310 --> 00:09:48.320 align:start position:0%
going to be the same
 

00:09:48.320 --> 00:09:51.190 align:start position:0%
going to be the same
let's<00:09:48.560><c> label</c><00:09:48.880><c> it</c><00:09:49.120><c> x</c><00:09:49.440><c> this</c><00:09:49.600><c> is</c><00:09:49.760><c> our</c><00:09:50.080><c> unknown</c><00:09:51.040><c> and</c>

00:09:51.190 --> 00:09:51.200 align:start position:0%
let's label it x this is our unknown and
 

00:09:51.200 --> 00:09:51.590 align:start position:0%
let's label it x this is our unknown and
then

00:09:51.590 --> 00:09:51.600 align:start position:0%
then
 

00:09:51.600 --> 00:09:55.030 align:start position:0%
then
the<00:09:51.839><c> remaining</c><00:09:52.720><c> portion</c><00:09:53.440><c> of</c><00:09:53.760><c> the</c><00:09:54.000><c> cycle</c>

00:09:55.030 --> 00:09:55.040 align:start position:0%
the remaining portion of the cycle
 

00:09:55.040 --> 00:09:57.750 align:start position:0%
the remaining portion of the cycle
is<00:09:55.279><c> going</c><00:09:55.519><c> to</c><00:09:55.760><c> be</c><00:09:56.480><c> c</c><00:09:56.800><c> which</c><00:09:57.040><c> is</c><00:09:57.200><c> the</c><00:09:57.440><c> length</c><00:09:57.680><c> of</c>

00:09:57.750 --> 00:09:57.760 align:start position:0%
is going to be c which is the length of
 

00:09:57.760 --> 00:10:00.310 align:start position:0%
is going to be c which is the length of
the<00:09:57.920><c> cycle</c><00:09:58.240><c> right</c><00:09:58.480><c> in</c><00:09:58.560><c> this</c><00:09:58.640><c> case</c><00:09:58.880><c> it's</c><00:09:59.200><c> 5</c>

00:10:00.310 --> 00:10:00.320 align:start position:0%
the cycle right in this case it's 5
 

00:10:00.320 --> 00:10:03.350 align:start position:0%
the cycle right in this case it's 5
minus<00:10:01.279><c> x</c><00:10:01.680><c> right</c><00:10:02.000><c> because</c><00:10:02.240><c> the</c><00:10:02.480><c> total</c><00:10:02.880><c> cycle</c>

00:10:03.350 --> 00:10:03.360 align:start position:0%
minus x right because the total cycle
 

00:10:03.360 --> 00:10:06.870 align:start position:0%
minus x right because the total cycle
is<00:10:03.760><c> is</c><00:10:04.079><c> 5</c><00:10:04.640><c> which</c><00:10:04.880><c> is</c><00:10:05.040><c> c</c><00:10:05.600><c> and</c><00:10:05.839><c> this</c><00:10:06.320><c> this</c><00:10:06.640><c> x</c>

00:10:06.870 --> 00:10:06.880 align:start position:0%
is is 5 which is c and this this x
 

00:10:06.880 --> 00:10:08.550 align:start position:0%
is is 5 which is c and this this x
portion<00:10:07.360><c> makes</c><00:10:07.600><c> up</c><00:10:07.760><c> the</c><00:10:07.839><c> remaining</c><00:10:08.320><c> portion</c>

00:10:08.550 --> 00:10:08.560 align:start position:0%
portion makes up the remaining portion
 

00:10:08.560 --> 00:10:09.829 align:start position:0%
portion makes up the remaining portion
of<00:10:08.720><c> the</c><00:10:08.800><c> cycle</c><00:10:09.040><c> that's</c><00:10:09.200><c> why</c><00:10:09.440><c> the</c>

00:10:09.829 --> 00:10:09.839 align:start position:0%
of the cycle that's why the
 

00:10:09.839 --> 00:10:12.870 align:start position:0%
of the cycle that's why the
this<00:10:10.079><c> part</c><00:10:10.320><c> is</c><00:10:10.560><c> c</c><00:10:10.800><c> minus</c><00:10:11.360><c> x</c><00:10:11.920><c> so</c><00:10:12.160><c> we</c><00:10:12.480><c> know</c><00:10:12.720><c> that</c>

00:10:12.870 --> 00:10:12.880 align:start position:0%
this part is c minus x so we know that
 

00:10:12.880 --> 00:10:14.790 align:start position:0%
this part is c minus x so we know that
the<00:10:13.120><c> slow</c><00:10:13.600><c> pointer</c><00:10:14.000><c> is</c><00:10:14.079><c> going</c><00:10:14.160><c> to</c><00:10:14.399><c> start</c><00:10:14.720><c> at</c>

00:10:14.790 --> 00:10:14.800 align:start position:0%
the slow pointer is going to start at
 

00:10:14.800 --> 00:10:16.550 align:start position:0%
the slow pointer is going to start at
the<00:10:14.959><c> beginning</c><00:10:15.519><c> it's</c><00:10:15.760><c> going</c><00:10:15.839><c> to</c><00:10:16.000><c> traverse</c>

00:10:16.550 --> 00:10:16.560 align:start position:0%
the beginning it's going to traverse
 

00:10:16.560 --> 00:10:17.269 align:start position:0%
the beginning it's going to traverse
this<00:10:16.880><c> p</c>

00:10:17.269 --> 00:10:17.279 align:start position:0%
this p
 

00:10:17.279 --> 00:10:19.030 align:start position:0%
this p
portion<00:10:17.760><c> and</c><00:10:17.920><c> then</c><00:10:18.160><c> it's</c><00:10:18.320><c> going</c><00:10:18.399><c> to</c><00:10:18.560><c> traverse</c>

00:10:19.030 --> 00:10:19.040 align:start position:0%
portion and then it's going to traverse
 

00:10:19.040 --> 00:10:21.430 align:start position:0%
portion and then it's going to traverse
the<00:10:19.279><c> c</c><00:10:19.600><c> minus</c><00:10:20.160><c> x</c><00:10:20.399><c> portion</c><00:10:20.880><c> and</c><00:10:21.040><c> it's</c><00:10:21.200><c> going</c><00:10:21.279><c> to</c>

00:10:21.430 --> 00:10:21.440 align:start position:0%
the c minus x portion and it's going to
 

00:10:21.440 --> 00:10:21.910 align:start position:0%
the c minus x portion and it's going to
land

00:10:21.910 --> 00:10:21.920 align:start position:0%
land
 

00:10:21.920 --> 00:10:24.790 align:start position:0%
land
at<00:10:22.079><c> the</c><00:10:22.320><c> intersection</c><00:10:23.120><c> point</c><00:10:23.519><c> right</c><00:10:24.240><c> now</c><00:10:24.560><c> we</c>

00:10:24.790 --> 00:10:24.800 align:start position:0%
at the intersection point right now we
 

00:10:24.800 --> 00:10:25.269 align:start position:0%
at the intersection point right now we
know

00:10:25.269 --> 00:10:25.279 align:start position:0%
know
 

00:10:25.279 --> 00:10:27.269 align:start position:0%
know
that<00:10:25.440><c> the</c><00:10:25.760><c> fast</c><00:10:26.240><c> pointer</c><00:10:26.640><c> is</c><00:10:26.800><c> going</c><00:10:26.880><c> to</c><00:10:26.959><c> do</c>

00:10:27.269 --> 00:10:27.279 align:start position:0%
that the fast pointer is going to do
 

00:10:27.279 --> 00:10:28.630 align:start position:0%
that the fast pointer is going to do
more<00:10:27.519><c> than</c><00:10:27.680><c> that</c><00:10:27.839><c> it's</c><00:10:28.000><c> going</c><00:10:28.079><c> to</c><00:10:28.240><c> of</c><00:10:28.320><c> course</c>

00:10:28.630 --> 00:10:28.640 align:start position:0%
more than that it's going to of course
 

00:10:28.640 --> 00:10:29.990 align:start position:0%
more than that it's going to of course
do<00:10:28.880><c> this</c><00:10:29.120><c> p</c><00:10:29.360><c> portion</c>

00:10:29.990 --> 00:10:30.000 align:start position:0%
do this p portion
 

00:10:30.000 --> 00:10:33.430 align:start position:0%
do this p portion
once<00:10:30.720><c> then</c><00:10:31.200><c> it's</c><00:10:31.360><c> going</c><00:10:31.519><c> to</c><00:10:31.600><c> do</c><00:10:31.920><c> a</c><00:10:32.160><c> complete</c>

00:10:33.430 --> 00:10:33.440 align:start position:0%
once then it's going to do a complete
 

00:10:33.440 --> 00:10:35.670 align:start position:0%
once then it's going to do a complete
loop<00:10:34.160><c> right</c><00:10:34.640><c> because</c><00:10:34.880><c> remember</c><00:10:35.279><c> the</c><00:10:35.360><c> fast</c>

00:10:35.670 --> 00:10:35.680 align:start position:0%
loop right because remember the fast
 

00:10:35.680 --> 00:10:36.470 align:start position:0%
loop right because remember the fast
pointer<00:10:36.000><c> is</c><00:10:36.079><c> going</c><00:10:36.240><c> to</c>

00:10:36.470 --> 00:10:36.480 align:start position:0%
pointer is going to
 

00:10:36.480 --> 00:10:38.470 align:start position:0%
pointer is going to
out<00:10:36.880><c> loop</c><00:10:37.360><c> the</c><00:10:37.519><c> slow</c><00:10:37.839><c> pointer</c><00:10:38.160><c> and</c><00:10:38.240><c> it's</c><00:10:38.399><c> going</c>

00:10:38.470 --> 00:10:38.480 align:start position:0%
out loop the slow pointer and it's going
 

00:10:38.480 --> 00:10:40.630 align:start position:0%
out loop the slow pointer and it's going
to<00:10:38.720><c> overlap</c><00:10:39.600><c> the</c><00:10:39.760><c> slow</c><00:10:40.000><c> pointer</c><00:10:40.320><c> so</c><00:10:40.480><c> it's</c>

00:10:40.630 --> 00:10:40.640 align:start position:0%
to overlap the slow pointer so it's
 

00:10:40.640 --> 00:10:42.550 align:start position:0%
to overlap the slow pointer so it's
going<00:10:40.800><c> to</c><00:10:41.040><c> have</c><00:10:41.279><c> to</c><00:10:41.519><c> complete</c>

00:10:42.550 --> 00:10:42.560 align:start position:0%
going to have to complete
 

00:10:42.560 --> 00:10:45.670 align:start position:0%
going to have to complete
a<00:10:42.959><c> full</c><00:10:43.440><c> at</c><00:10:43.600><c> least</c><00:10:44.000><c> one</c><00:10:44.640><c> full</c><00:10:45.120><c> loop</c>

00:10:45.670 --> 00:10:45.680 align:start position:0%
a full at least one full loop
 

00:10:45.680 --> 00:10:48.310 align:start position:0%
a full at least one full loop
and<00:10:46.079><c> then</c><00:10:46.720><c> once</c><00:10:46.959><c> it</c><00:10:47.360><c> does</c><00:10:47.600><c> a</c><00:10:47.680><c> full</c><00:10:47.920><c> loop</c><00:10:48.160><c> it's</c>

00:10:48.310 --> 00:10:48.320 align:start position:0%
and then once it does a full loop it's
 

00:10:48.320 --> 00:10:49.350 align:start position:0%
and then once it does a full loop it's
going<00:10:48.399><c> to</c><00:10:48.480><c> be</c><00:10:48.640><c> back</c><00:10:48.880><c> here</c>

00:10:49.350 --> 00:10:49.360 align:start position:0%
going to be back here
 

00:10:49.360 --> 00:10:51.590 align:start position:0%
going to be back here
and<00:10:49.600><c> then</c><00:10:49.920><c> it's</c><00:10:50.160><c> going</c><00:10:50.240><c> to</c><00:10:50.399><c> traverse</c><00:10:50.959><c> this</c><00:10:51.279><c> c</c>

00:10:51.590 --> 00:10:51.600 align:start position:0%
and then it's going to traverse this c
 

00:10:51.600 --> 00:10:52.389 align:start position:0%
and then it's going to traverse this c
minus<00:10:52.079><c> x</c>

00:10:52.389 --> 00:10:52.399 align:start position:0%
minus x
 

00:10:52.399 --> 00:10:54.949 align:start position:0%
minus x
portion<00:10:53.040><c> to</c><00:10:53.360><c> get</c><00:10:53.519><c> to</c><00:10:53.680><c> the</c><00:10:53.920><c> intersection</c><00:10:54.640><c> point</c>

00:10:54.949 --> 00:10:54.959 align:start position:0%
portion to get to the intersection point
 

00:10:54.959 --> 00:10:56.230 align:start position:0%
portion to get to the intersection point
right<00:10:55.279><c> we</c><00:10:55.440><c> don't</c><00:10:55.600><c> know</c><00:10:55.839><c> where</c><00:10:56.079><c> the</c>

00:10:56.230 --> 00:10:56.240 align:start position:0%
right we don't know where the
 

00:10:56.240 --> 00:10:57.110 align:start position:0%
right we don't know where the
intersection<00:10:56.880><c> is</c>

00:10:57.110 --> 00:10:57.120 align:start position:0%
intersection is
 

00:10:57.120 --> 00:10:58.870 align:start position:0%
intersection is
obviously<00:10:57.600><c> i</c><00:10:57.680><c> drew</c><00:10:57.920><c> it</c><00:10:58.079><c> over</c><00:10:58.320><c> here</c><00:10:58.640><c> but</c><00:10:58.800><c> it</c>

00:10:58.870 --> 00:10:58.880 align:start position:0%
obviously i drew it over here but it
 

00:10:58.880 --> 00:11:00.710 align:start position:0%
obviously i drew it over here but it
could<00:10:59.120><c> be</c><00:10:59.440><c> anywhere</c><00:11:00.079><c> so</c><00:11:00.320><c> let's</c>

00:11:00.710 --> 00:11:00.720 align:start position:0%
could be anywhere so let's
 

00:11:00.720 --> 00:11:02.870 align:start position:0%
could be anywhere so let's
write<00:11:00.959><c> that</c><00:11:01.200><c> mathematical</c><00:11:01.839><c> equation</c><00:11:02.320><c> out</c><00:11:02.640><c> so</c>

00:11:02.870 --> 00:11:02.880 align:start position:0%
write that mathematical equation out so
 

00:11:02.880 --> 00:11:04.069 align:start position:0%
write that mathematical equation out so
we<00:11:03.120><c> know</c><00:11:03.440><c> that</c>

00:11:04.069 --> 00:11:04.079 align:start position:0%
we know that
 

00:11:04.079 --> 00:11:06.630 align:start position:0%
we know that
two<00:11:04.560><c> times</c><00:11:05.040><c> the</c><00:11:05.279><c> number</c><00:11:05.600><c> of</c><00:11:05.760><c> iterations</c><00:11:06.399><c> the</c>

00:11:06.630 --> 00:11:06.640 align:start position:0%
two times the number of iterations the
 

00:11:06.640 --> 00:11:07.990 align:start position:0%
two times the number of iterations the
slow<00:11:07.040><c> pointer</c><00:11:07.360><c> does</c><00:11:07.680><c> is</c>

00:11:07.990 --> 00:11:08.000 align:start position:0%
slow pointer does is
 

00:11:08.000 --> 00:11:10.470 align:start position:0%
slow pointer does is
equal<00:11:08.560><c> to</c><00:11:08.720><c> the</c><00:11:08.880><c> number</c><00:11:09.440><c> of</c><00:11:09.680><c> iterations</c><00:11:10.320><c> the</c>

00:11:10.470 --> 00:11:10.480 align:start position:0%
equal to the number of iterations the
 

00:11:10.480 --> 00:11:12.310 align:start position:0%
equal to the number of iterations the
fast<00:11:10.880><c> pointer</c><00:11:11.279><c> does</c><00:11:11.519><c> right</c><00:11:11.680><c> how</c><00:11:11.839><c> many</c>

00:11:12.310 --> 00:11:12.320 align:start position:0%
fast pointer does right how many
 

00:11:12.320 --> 00:11:14.150 align:start position:0%
fast pointer does right how many
spaces<00:11:12.800><c> it</c><00:11:12.880><c> moves</c><00:11:13.200><c> versus</c><00:11:13.440><c> how</c><00:11:13.600><c> many</c><00:11:13.760><c> spaces</c>

00:11:14.150 --> 00:11:14.160 align:start position:0%
spaces it moves versus how many spaces
 

00:11:14.160 --> 00:11:15.590 align:start position:0%
spaces it moves versus how many spaces
the<00:11:14.320><c> slow</c><00:11:14.560><c> pointer</c><00:11:14.800><c> moves</c><00:11:15.040><c> of</c><00:11:15.200><c> course</c>

00:11:15.590 --> 00:11:15.600 align:start position:0%
the slow pointer moves of course
 

00:11:15.600 --> 00:11:17.990 align:start position:0%
the slow pointer moves of course
the<00:11:15.760><c> fast</c><00:11:16.079><c> one</c><00:11:16.320><c> is</c><00:11:16.560><c> twice</c><00:11:16.959><c> as</c><00:11:17.200><c> fast</c><00:11:17.600><c> that's</c><00:11:17.839><c> why</c>

00:11:17.990 --> 00:11:18.000 align:start position:0%
the fast one is twice as fast that's why
 

00:11:18.000 --> 00:11:20.150 align:start position:0%
the fast one is twice as fast that's why
we<00:11:18.160><c> have</c><00:11:18.240><c> to</c><00:11:18.320><c> multiply</c><00:11:18.800><c> the</c><00:11:18.959><c> slow</c><00:11:19.279><c> one</c><00:11:19.440><c> by</c><00:11:19.680><c> two</c>

00:11:20.150 --> 00:11:20.160 align:start position:0%
we have to multiply the slow one by two
 

00:11:20.160 --> 00:11:22.630 align:start position:0%
we have to multiply the slow one by two
to<00:11:20.320><c> make</c><00:11:20.560><c> it</c><00:11:20.720><c> equal</c><00:11:21.120><c> to</c><00:11:21.279><c> this</c><00:11:21.519><c> one</c><00:11:22.079><c> and</c><00:11:22.320><c> how</c>

00:11:22.630 --> 00:11:22.640 align:start position:0%
to make it equal to this one and how
 

00:11:22.640 --> 00:11:23.190 align:start position:0%
to make it equal to this one and how
many

00:11:23.190 --> 00:11:23.200 align:start position:0%
many
 

00:11:23.200 --> 00:11:25.190 align:start position:0%
many
iterations<00:11:23.839><c> did</c><00:11:24.000><c> we</c><00:11:24.160><c> say</c><00:11:24.320><c> that</c><00:11:24.480><c> the</c><00:11:24.640><c> fast</c><00:11:24.959><c> one</c>

00:11:25.190 --> 00:11:25.200 align:start position:0%
iterations did we say that the fast one
 

00:11:25.200 --> 00:11:26.870 align:start position:0%
iterations did we say that the fast one
does<00:11:25.519><c> it's</c><00:11:25.680><c> going</c><00:11:25.839><c> to</c><00:11:25.920><c> do</c><00:11:26.160><c> p</c>

00:11:26.870 --> 00:11:26.880 align:start position:0%
does it's going to do p
 

00:11:26.880 --> 00:11:30.310 align:start position:0%
does it's going to do p
plus<00:11:27.680><c> c</c><00:11:28.160><c> x</c><00:11:28.640><c> right</c><00:11:29.040><c> to</c><00:11:29.200><c> get</c><00:11:29.440><c> to</c><00:11:29.600><c> this</c><00:11:29.839><c> position</c>

00:11:30.310 --> 00:11:30.320 align:start position:0%
plus c x right to get to this position
 

00:11:30.320 --> 00:11:31.829 align:start position:0%
plus c x right to get to this position
and<00:11:30.480><c> then</c><00:11:30.640><c> it's</c><00:11:30.800><c> going</c><00:11:30.880><c> to</c><00:11:30.959><c> do</c><00:11:31.200><c> another</c>

00:11:31.829 --> 00:11:31.839 align:start position:0%
and then it's going to do another
 

00:11:31.839 --> 00:11:32.710 align:start position:0%
and then it's going to do another
complete

00:11:32.710 --> 00:11:32.720 align:start position:0%
complete
 

00:11:32.720 --> 00:11:35.670 align:start position:0%
complete
cycle<00:11:33.600><c> starting</c><00:11:34.000><c> from</c><00:11:34.240><c> here</c><00:11:34.720><c> to</c><00:11:34.880><c> get</c><00:11:35.279><c> back</c><00:11:35.519><c> to</c>

00:11:35.670 --> 00:11:35.680 align:start position:0%
cycle starting from here to get back to
 

00:11:35.680 --> 00:11:36.949 align:start position:0%
cycle starting from here to get back to
this<00:11:35.920><c> position</c><00:11:36.399><c> right</c>

00:11:36.949 --> 00:11:36.959 align:start position:0%
this position right
 

00:11:36.959 --> 00:11:40.310 align:start position:0%
this position right
so<00:11:37.600><c> the</c><00:11:37.760><c> fast</c><00:11:38.079><c> pointer</c><00:11:38.480><c> is</c><00:11:38.560><c> going</c><00:11:38.720><c> to</c><00:11:38.880><c> be</c><00:11:39.440><c> p</c>

00:11:40.310 --> 00:11:40.320 align:start position:0%
so the fast pointer is going to be p
 

00:11:40.320 --> 00:11:43.910 align:start position:0%
so the fast pointer is going to be p
plus<00:11:41.279><c> c</c><00:11:42.160><c> minus</c><00:11:43.200><c> x</c>

00:11:43.910 --> 00:11:43.920 align:start position:0%
plus c minus x
 

00:11:43.920 --> 00:11:47.430 align:start position:0%
plus c minus x
plus<00:11:44.560><c> c</c><00:11:45.120><c> again</c><00:11:46.240><c> so</c><00:11:46.480><c> more</c><00:11:46.720><c> simplified</c><00:11:47.279><c> it's</c>

00:11:47.430 --> 00:11:47.440 align:start position:0%
plus c again so more simplified it's
 

00:11:47.440 --> 00:11:47.910 align:start position:0%
plus c again so more simplified it's
going<00:11:47.519><c> to</c><00:11:47.600><c> be</c>

00:11:47.910 --> 00:11:47.920 align:start position:0%
going to be
 

00:11:47.920 --> 00:11:51.350 align:start position:0%
going to be
p<00:11:48.399><c> plus</c><00:11:49.120><c> 2c</c><00:11:50.160><c> minus</c><00:11:50.880><c> x</c>

00:11:51.350 --> 00:11:51.360 align:start position:0%
p plus 2c minus x
 

00:11:51.360 --> 00:11:53.509 align:start position:0%
p plus 2c minus x
the<00:11:51.760><c> the</c><00:11:52.000><c> slope</c><00:11:52.399><c> pointer</c><00:11:52.800><c> is</c><00:11:52.880><c> just</c><00:11:53.200><c> going</c><00:11:53.360><c> to</c>

00:11:53.509 --> 00:11:53.519 align:start position:0%
the the slope pointer is just going to
 

00:11:53.519 --> 00:11:54.870 align:start position:0%
the the slope pointer is just going to
do<00:11:53.760><c> p</c><00:11:54.240><c> and</c><00:11:54.399><c> then</c><00:11:54.639><c> it's</c>

00:11:54.870 --> 00:11:54.880 align:start position:0%
do p and then it's
 

00:11:54.880 --> 00:11:57.829 align:start position:0%
do p and then it's
just<00:11:55.200><c> going</c><00:11:55.440><c> to</c><00:11:55.600><c> do</c><00:11:55.920><c> c</c><00:11:56.240><c> minus</c><00:11:56.800><c> x</c><00:11:57.279><c> so</c><00:11:57.519><c> we'll</c><00:11:57.680><c> have</c>

00:11:57.829 --> 00:11:57.839 align:start position:0%
just going to do c minus x so we'll have
 

00:11:57.839 --> 00:11:59.509 align:start position:0%
just going to do c minus x so we'll have
a<00:11:58.000><c> 2</c><00:11:58.320><c> on</c><00:11:58.399><c> the</c><00:11:58.639><c> outside</c>

00:11:59.509 --> 00:11:59.519 align:start position:0%
a 2 on the outside
 

00:11:59.519 --> 00:12:03.110 align:start position:0%
a 2 on the outside
p<00:12:00.399><c> plus</c><00:12:01.360><c> c</c><00:12:02.160><c> minus</c>

00:12:03.110 --> 00:12:03.120 align:start position:0%
p plus c minus
 

00:12:03.120 --> 00:12:05.670 align:start position:0%
p plus c minus
x<00:12:03.839><c> so</c><00:12:04.000><c> i'm</c><00:12:04.160><c> going</c><00:12:04.320><c> to</c><00:12:04.399><c> take</c><00:12:04.639><c> this</c><00:12:04.880><c> equation</c><00:12:05.440><c> and</c>

00:12:05.670 --> 00:12:05.680 align:start position:0%
x so i'm going to take this equation and
 

00:12:05.680 --> 00:12:07.829 align:start position:0%
x so i'm going to take this equation and
simplify<00:12:06.240><c> it</c><00:12:06.399><c> over</c><00:12:06.639><c> here</c><00:12:06.880><c> to</c><00:12:07.040><c> the</c><00:12:07.279><c> right</c>

00:12:07.829 --> 00:12:07.839 align:start position:0%
simplify it over here to the right
 

00:12:07.839 --> 00:12:09.670 align:start position:0%
simplify it over here to the right
so<00:12:08.240><c> once</c><00:12:08.480><c> we</c><00:12:08.720><c> simplify</c><00:12:09.200><c> it</c><00:12:09.279><c> a</c><00:12:09.360><c> little</c><00:12:09.519><c> bit</c>

00:12:09.670 --> 00:12:09.680 align:start position:0%
so once we simplify it a little bit
 

00:12:09.680 --> 00:12:11.269 align:start position:0%
so once we simplify it a little bit
we're<00:12:09.839><c> going</c><00:12:10.000><c> to</c><00:12:10.079><c> get</c><00:12:10.399><c> 2p</c>

00:12:11.269 --> 00:12:11.279 align:start position:0%
we're going to get 2p
 

00:12:11.279 --> 00:12:14.710 align:start position:0%
we're going to get 2p
plus<00:12:11.760><c> 2c</c><00:12:12.800><c> minus</c><00:12:13.360><c> 2x</c><00:12:14.240><c> which</c><00:12:14.480><c> is</c>

00:12:14.710 --> 00:12:14.720 align:start position:0%
plus 2c minus 2x which is
 

00:12:14.720 --> 00:12:17.829 align:start position:0%
plus 2c minus 2x which is
equal<00:12:15.279><c> to</c><00:12:15.680><c> p</c><00:12:16.320><c> plus</c><00:12:16.720><c> 2c</c>

00:12:17.829 --> 00:12:17.839 align:start position:0%
equal to p plus 2c
 

00:12:17.839 --> 00:12:20.069 align:start position:0%
equal to p plus 2c
minus<00:12:18.480><c> x</c><00:12:19.040><c> and</c><00:12:19.120><c> then</c><00:12:19.279><c> this</c><00:12:19.440><c> is</c><00:12:19.600><c> the</c><00:12:19.680><c> part</c><00:12:19.839><c> where</c>

00:12:20.069 --> 00:12:20.079 align:start position:0%
minus x and then this is the part where
 

00:12:20.079 --> 00:12:21.269 align:start position:0%
minus x and then this is the part where
you<00:12:20.160><c> can</c><00:12:20.240><c> start</c><00:12:20.480><c> doing</c><00:12:20.720><c> a</c><00:12:20.800><c> little</c><00:12:20.959><c> bit</c><00:12:21.120><c> of</c>

00:12:21.269 --> 00:12:21.279 align:start position:0%
you can start doing a little bit of
 

00:12:21.279 --> 00:12:24.389 align:start position:0%
you can start doing a little bit of
algebra<00:12:21.760><c> so</c><00:12:21.920><c> we</c><00:12:22.079><c> can</c><00:12:22.240><c> cross</c><00:12:22.639><c> out</c><00:12:22.800><c> the</c><00:12:23.040><c> 2c</c><00:12:23.920><c> from</c>

00:12:24.389 --> 00:12:24.399 align:start position:0%
algebra so we can cross out the 2c from
 

00:12:24.399 --> 00:12:26.710 align:start position:0%
algebra so we can cross out the 2c from
both<00:12:24.720><c> sides</c><00:12:24.959><c> of</c><00:12:25.040><c> the</c><00:12:25.279><c> equation</c><00:12:26.000><c> we</c><00:12:26.160><c> can</c><00:12:26.320><c> cross</c>

00:12:26.710 --> 00:12:26.720 align:start position:0%
both sides of the equation we can cross
 

00:12:26.720 --> 00:12:27.910 align:start position:0%
both sides of the equation we can cross
out<00:12:27.040><c> one</c><00:12:27.360><c> x</c>

00:12:27.910 --> 00:12:27.920 align:start position:0%
out one x
 

00:12:27.920 --> 00:12:30.150 align:start position:0%
out one x
from<00:12:28.160><c> each</c><00:12:28.399><c> side</c><00:12:28.639><c> of</c><00:12:28.720><c> the</c><00:12:28.880><c> equation</c><00:12:29.839><c> and</c><00:12:30.000><c> we</c>

00:12:30.150 --> 00:12:30.160 align:start position:0%
from each side of the equation and we
 

00:12:30.160 --> 00:12:31.829 align:start position:0%
from each side of the equation and we
can<00:12:30.320><c> cross</c><00:12:30.720><c> out</c><00:12:30.959><c> one</c><00:12:31.360><c> p</c>

00:12:31.829 --> 00:12:31.839 align:start position:0%
can cross out one p
 

00:12:31.839 --> 00:12:34.069 align:start position:0%
can cross out one p
from<00:12:32.079><c> each</c><00:12:32.399><c> side</c><00:12:32.639><c> of</c><00:12:32.720><c> the</c><00:12:32.880><c> equation</c><00:12:33.600><c> once</c><00:12:33.920><c> we</c>

00:12:34.069 --> 00:12:34.079 align:start position:0%
from each side of the equation once we
 

00:12:34.079 --> 00:12:35.910 align:start position:0%
from each side of the equation once we
do<00:12:34.320><c> that</c><00:12:34.560><c> algebra</c><00:12:35.040><c> we're</c><00:12:35.360><c> left</c><00:12:35.600><c> with</c><00:12:35.760><c> the</c>

00:12:35.910 --> 00:12:35.920 align:start position:0%
do that algebra we're left with the
 

00:12:35.920 --> 00:12:37.190 align:start position:0%
do that algebra we're left with the
equation<00:12:36.320><c> and</c><00:12:36.399><c> sorry</c><00:12:36.720><c> that</c><00:12:36.800><c> it's</c><00:12:36.959><c> getting</c><00:12:37.120><c> a</c>

00:12:37.190 --> 00:12:37.200 align:start position:0%
equation and sorry that it's getting a
 

00:12:37.200 --> 00:12:38.470 align:start position:0%
equation and sorry that it's getting a
little<00:12:37.360><c> bit</c><00:12:37.440><c> messy</c><00:12:37.680><c> we're</c><00:12:37.920><c> left</c><00:12:38.079><c> with</c><00:12:38.240><c> a</c>

00:12:38.470 --> 00:12:38.480 align:start position:0%
little bit messy we're left with a
 

00:12:38.480 --> 00:12:39.350 align:start position:0%
little bit messy we're left with a
single<00:12:38.880><c> p</c>

00:12:39.350 --> 00:12:39.360 align:start position:0%
single p
 

00:12:39.360 --> 00:12:41.670 align:start position:0%
single p
and<00:12:39.600><c> a</c><00:12:39.760><c> single</c><00:12:40.240><c> negative</c><00:12:40.639><c> x</c><00:12:40.800><c> so</c><00:12:40.959><c> we</c><00:12:41.040><c> get</c><00:12:41.279><c> p</c>

00:12:41.670 --> 00:12:41.680 align:start position:0%
and a single negative x so we get p
 

00:12:41.680 --> 00:12:42.629 align:start position:0%
and a single negative x so we get p
minus<00:12:42.240><c> x</c>

00:12:42.629 --> 00:12:42.639 align:start position:0%
minus x
 

00:12:42.639 --> 00:12:44.870 align:start position:0%
minus x
is<00:12:42.880><c> equal</c><00:12:43.200><c> to</c><00:12:43.600><c> notice</c><00:12:43.920><c> how</c><00:12:44.079><c> we</c><00:12:44.240><c> crossed</c><00:12:44.560><c> out</c>

00:12:44.870 --> 00:12:44.880 align:start position:0%
is equal to notice how we crossed out
 

00:12:44.880 --> 00:12:47.269 align:start position:0%
is equal to notice how we crossed out
everything<00:12:45.360><c> on</c><00:12:45.440><c> the</c><00:12:45.600><c> right</c><00:12:45.839><c> side</c><00:12:46.000><c> so</c><00:12:46.240><c> we</c><00:12:46.320><c> got</c><00:12:46.560><c> p</c>

00:12:47.269 --> 00:12:47.279 align:start position:0%
everything on the right side so we got p
 

00:12:47.279 --> 00:12:50.629 align:start position:0%
everything on the right side so we got p
minus<00:12:47.760><c> x</c><00:12:48.320><c> is</c><00:12:48.560><c> equal</c><00:12:49.120><c> to</c><00:12:49.440><c> zero</c><00:12:50.160><c> when</c><00:12:50.320><c> we</c>

00:12:50.629 --> 00:12:50.639 align:start position:0%
minus x is equal to zero when we
 

00:12:50.639 --> 00:12:52.310 align:start position:0%
minus x is equal to zero when we
rearrange<00:12:51.360><c> that</c><00:12:51.600><c> we</c><00:12:51.920><c> get</c>

00:12:52.310 --> 00:12:52.320 align:start position:0%
rearrange that we get
 

00:12:52.320 --> 00:12:55.590 align:start position:0%
rearrange that we get
p<00:12:52.880><c> is</c><00:12:53.200><c> equal</c><00:12:53.839><c> to</c><00:12:54.079><c> zero</c><00:12:54.800><c> what</c><00:12:55.040><c> did</c><00:12:55.200><c> we</c><00:12:55.360><c> just</c>

00:12:55.590 --> 00:12:55.600 align:start position:0%
p is equal to zero what did we just
 

00:12:55.600 --> 00:12:57.350 align:start position:0%
p is equal to zero what did we just
prove<00:12:56.000><c> we</c><00:12:56.160><c> just</c><00:12:56.399><c> proved</c><00:12:56.800><c> that</c><00:12:56.959><c> the</c>

00:12:57.350 --> 00:12:57.360 align:start position:0%
prove we just proved that the
 

00:12:57.360 --> 00:12:59.990 align:start position:0%
prove we just proved that the
pre-portion<00:12:58.320><c> of</c><00:12:58.480><c> the</c><00:12:58.639><c> cycle</c><00:12:59.040><c> is</c><00:12:59.279><c> always</c><00:12:59.680><c> equal</c>

00:12:59.990 --> 00:13:00.000 align:start position:0%
pre-portion of the cycle is always equal
 

00:13:00.000 --> 00:13:00.389 align:start position:0%
pre-portion of the cycle is always equal
to

00:13:00.389 --> 00:13:00.399 align:start position:0%
to
 

00:13:00.399 --> 00:13:03.509 align:start position:0%
to
this<00:13:01.200><c> right</c><00:13:01.600><c> so</c><00:13:02.000><c> that's</c><00:13:02.399><c> how</c><00:13:02.639><c> we</c><00:13:02.959><c> know</c>

00:13:03.509 --> 00:13:03.519 align:start position:0%
this right so that's how we know
 

00:13:03.519 --> 00:13:05.750 align:start position:0%
this right so that's how we know
once<00:13:03.839><c> we</c><00:13:04.000><c> have</c><00:13:04.160><c> a</c><00:13:04.320><c> pointer</c><00:13:04.720><c> over</c><00:13:04.959><c> here</c><00:13:05.440><c> then</c><00:13:05.600><c> we</c>

00:13:05.750 --> 00:13:05.760 align:start position:0%
once we have a pointer over here then we
 

00:13:05.760 --> 00:13:08.470 align:start position:0%
once we have a pointer over here then we
can<00:13:06.000><c> set</c><00:13:06.320><c> another</c><00:13:06.880><c> slow</c><00:13:07.279><c> pointer</c><00:13:07.680><c> over</c><00:13:07.920><c> here</c>

00:13:08.470 --> 00:13:08.480 align:start position:0%
can set another slow pointer over here
 

00:13:08.480 --> 00:13:11.269 align:start position:0%
can set another slow pointer over here
keep<00:13:08.800><c> iterating</c><00:13:09.440><c> them</c><00:13:09.600><c> by</c><00:13:09.920><c> one</c><00:13:10.320><c> and</c><00:13:10.480><c> for</c><00:13:10.800><c> sure</c>

00:13:11.269 --> 00:13:11.279 align:start position:0%
keep iterating them by one and for sure
 

00:13:11.279 --> 00:13:11.829 align:start position:0%
keep iterating them by one and for sure
when<00:13:11.440><c> they</c>

00:13:11.829 --> 00:13:11.839 align:start position:0%
when they
 

00:13:11.839 --> 00:13:14.150 align:start position:0%
when they
meet<00:13:12.240><c> they're</c><00:13:12.560><c> going</c><00:13:12.800><c> to</c><00:13:13.040><c> meet</c><00:13:13.440><c> at</c><00:13:13.600><c> the</c><00:13:13.839><c> inner</c>

00:13:14.150 --> 00:13:14.160 align:start position:0%
meet they're going to meet at the inner
 

00:13:14.160 --> 00:13:15.190 align:start position:0%
meet they're going to meet at the inner
at<00:13:14.240><c> the</c><00:13:14.560><c> start</c>

00:13:15.190 --> 00:13:15.200 align:start position:0%
at the start
 

00:13:15.200 --> 00:13:17.590 align:start position:0%
at the start
of<00:13:15.600><c> the</c><00:13:15.839><c> cycle</c><00:13:16.480><c> they're</c><00:13:16.800><c> always</c><00:13:17.200><c> going</c><00:13:17.360><c> to</c>

00:13:17.590 --> 00:13:17.600 align:start position:0%
of the cycle they're always going to
 

00:13:17.600 --> 00:13:19.670 align:start position:0%
of the cycle they're always going to
meet<00:13:17.920><c> at</c><00:13:18.079><c> this</c><00:13:18.399><c> position</c><00:13:18.959><c> so</c><00:13:19.200><c> i</c><00:13:19.279><c> hope</c><00:13:19.440><c> this</c>

00:13:19.670 --> 00:13:19.680 align:start position:0%
meet at this position so i hope this
 

00:13:19.680 --> 00:13:21.829 align:start position:0%
meet at this position so i hope this
explains<00:13:20.320><c> a</c><00:13:20.480><c> little</c><00:13:20.639><c> bit</c><00:13:20.880><c> of</c><00:13:21.040><c> the</c><00:13:21.200><c> intuition</c>

00:13:21.829 --> 00:13:21.839 align:start position:0%
explains a little bit of the intuition
 

00:13:21.839 --> 00:13:23.430 align:start position:0%
explains a little bit of the intuition
and<00:13:22.000><c> a</c><00:13:22.079><c> little</c><00:13:22.240><c> bit</c><00:13:22.399><c> of</c><00:13:22.480><c> how</c><00:13:22.720><c> you</c><00:13:22.880><c> know</c><00:13:22.959><c> this</c><00:13:23.200><c> is</c>

00:13:23.430 --> 00:13:23.440 align:start position:0%
and a little bit of how you know this is
 

00:13:23.440 --> 00:13:25.829 align:start position:0%
and a little bit of how you know this is
very<00:13:24.000><c> rigorous</c><00:13:24.560><c> this</c><00:13:24.720><c> is</c><00:13:24.800><c> a</c><00:13:25.040><c> proof</c><00:13:25.360><c> this</c><00:13:25.600><c> is</c>

00:13:25.829 --> 00:13:25.839 align:start position:0%
very rigorous this is a proof this is
 

00:13:25.839 --> 00:13:27.350 align:start position:0%
very rigorous this is a proof this is
always<00:13:26.240><c> going</c><00:13:26.480><c> to</c><00:13:26.720><c> work</c>

00:13:27.350 --> 00:13:27.360 align:start position:0%
always going to work
 

00:13:27.360 --> 00:13:29.030 align:start position:0%
always going to work
and<00:13:27.519><c> now</c><00:13:27.680><c> you</c><00:13:27.839><c> know</c><00:13:28.160><c> why</c><00:13:28.399><c> it's</c><00:13:28.560><c> always</c><00:13:28.880><c> going</c>

00:13:29.030 --> 00:13:29.040 align:start position:0%
and now you know why it's always going
 

00:13:29.040 --> 00:13:31.030 align:start position:0%
and now you know why it's always going
to<00:13:29.200><c> work</c><00:13:29.440><c> but</c><00:13:29.600><c> the</c><00:13:29.839><c> code</c><00:13:30.160><c> is</c><00:13:30.399><c> actually</c><00:13:30.720><c> really</c>

00:13:31.030 --> 00:13:31.040 align:start position:0%
to work but the code is actually really
 

00:13:31.040 --> 00:13:31.509 align:start position:0%
to work but the code is actually really
simple

00:13:31.509 --> 00:13:31.519 align:start position:0%
simple
 

00:13:31.519 --> 00:13:33.430 align:start position:0%
simple
now<00:13:31.760><c> one</c><00:13:32.160><c> last</c><00:13:32.480><c> thing</c><00:13:32.720><c> i</c><00:13:32.880><c> didn't</c><00:13:33.120><c> mention</c>

00:13:33.430 --> 00:13:33.440 align:start position:0%
now one last thing i didn't mention
 

00:13:33.440 --> 00:13:35.190 align:start position:0%
now one last thing i didn't mention
before<00:13:33.760><c> we</c><00:13:34.000><c> dive</c><00:13:34.240><c> into</c><00:13:34.399><c> the</c><00:13:34.560><c> code</c><00:13:34.800><c> is</c><00:13:34.959><c> that</c>

00:13:35.190 --> 00:13:35.200 align:start position:0%
before we dive into the code is that
 

00:13:35.200 --> 00:13:36.470 align:start position:0%
before we dive into the code is that
notice<00:13:35.600><c> how</c><00:13:35.760><c> this</c><00:13:36.079><c> p</c>

00:13:36.470 --> 00:13:36.480 align:start position:0%
notice how this p
 

00:13:36.480 --> 00:13:39.509 align:start position:0%
notice how this p
this<00:13:36.720><c> pre-portion</c><00:13:37.760><c> could</c><00:13:38.000><c> be</c><00:13:38.480><c> really</c><00:13:39.040><c> long</c>

00:13:39.509 --> 00:13:39.519 align:start position:0%
this pre-portion could be really long
 

00:13:39.519 --> 00:13:42.310 align:start position:0%
this pre-portion could be really long
it<00:13:39.680><c> could</c><00:13:39.920><c> be</c><00:13:40.240><c> even</c><00:13:40.720><c> longer</c><00:13:41.199><c> than</c><00:13:41.360><c> the</c><00:13:41.519><c> entire</c>

00:13:42.310 --> 00:13:42.320 align:start position:0%
it could be even longer than the entire
 

00:13:42.320 --> 00:13:44.629 align:start position:0%
it could be even longer than the entire
length<00:13:42.639><c> of</c><00:13:42.720><c> the</c><00:13:42.959><c> cycle</c><00:13:43.360><c> so</c><00:13:43.600><c> how</c><00:13:43.760><c> would</c><00:13:44.079><c> that</c>

00:13:44.629 --> 00:13:44.639 align:start position:0%
length of the cycle so how would that
 

00:13:44.639 --> 00:13:47.110 align:start position:0%
length of the cycle so how would that
update<00:13:45.040><c> our</c><00:13:45.360><c> math</c><00:13:45.839><c> would</c><00:13:46.000><c> our</c><00:13:46.240><c> math</c><00:13:46.639><c> still</c>

00:13:47.110 --> 00:13:47.120 align:start position:0%
update our math would our math still
 

00:13:47.120 --> 00:13:48.470 align:start position:0%
update our math would our math still
work<00:13:47.519><c> out</c><00:13:47.760><c> in</c><00:13:47.839><c> that</c><00:13:48.079><c> case</c>

00:13:48.470 --> 00:13:48.480 align:start position:0%
work out in that case
 

00:13:48.480 --> 00:13:50.230 align:start position:0%
work out in that case
and<00:13:48.639><c> i</c><00:13:48.800><c> didn't</c><00:13:49.199><c> include</c><00:13:49.600><c> this</c><00:13:49.839><c> in</c><00:13:49.920><c> the</c><00:13:50.000><c> math</c>

00:13:50.230 --> 00:13:50.240 align:start position:0%
and i didn't include this in the math
 

00:13:50.240 --> 00:13:51.590 align:start position:0%
and i didn't include this in the math
because<00:13:50.480><c> i</c><00:13:50.560><c> don't</c><00:13:50.639><c> want</c><00:13:50.720><c> to</c><00:13:50.880><c> over</c><00:13:51.120><c> complicate</c>

00:13:51.590 --> 00:13:51.600 align:start position:0%
because i don't want to over complicate
 

00:13:51.600 --> 00:13:52.470 align:start position:0%
because i don't want to over complicate
it<00:13:51.839><c> too</c><00:13:52.079><c> much</c>

00:13:52.470 --> 00:13:52.480 align:start position:0%
it too much
 

00:13:52.480 --> 00:13:55.110 align:start position:0%
it too much
but<00:13:52.800><c> yes</c><00:13:53.120><c> the</c><00:13:53.279><c> math</c><00:13:53.760><c> would</c><00:13:54.000><c> work</c><00:13:54.560><c> instead</c><00:13:54.959><c> of</c>

00:13:55.110 --> 00:13:55.120 align:start position:0%
but yes the math would work instead of
 

00:13:55.120 --> 00:13:55.750 align:start position:0%
but yes the math would work instead of
having

00:13:55.750 --> 00:13:55.760 align:start position:0%
having
 

00:13:55.760 --> 00:13:58.710 align:start position:0%
having
2c<00:13:56.480><c> over</c><00:13:56.720><c> here</c><00:13:57.040><c> we</c><00:13:57.199><c> would</c><00:13:57.440><c> have</c><00:13:57.600><c> an</c><00:13:58.000><c> n</c><00:13:58.480><c> over</c>

00:13:58.710 --> 00:13:58.720 align:start position:0%
2c over here we would have an n over
 

00:13:58.720 --> 00:13:59.430 align:start position:0%
2c over here we would have an n over
here

00:13:59.430 --> 00:13:59.440 align:start position:0%
here
 

00:13:59.440 --> 00:14:01.189 align:start position:0%
here
and<00:13:59.600><c> the</c><00:13:59.760><c> math</c><00:14:00.000><c> would</c><00:14:00.320><c> end</c><00:14:00.480><c> up</c><00:14:00.639><c> still</c><00:14:00.880><c> working</c>

00:14:01.189 --> 00:14:01.199 align:start position:0%
and the math would end up still working
 

00:14:01.199 --> 00:14:03.110 align:start position:0%
and the math would end up still working
out<00:14:01.360><c> basically</c><00:14:01.760><c> we</c><00:14:01.920><c> would</c><00:14:02.160><c> always</c><00:14:02.480><c> start</c><00:14:02.880><c> back</c>

00:14:03.110 --> 00:14:03.120 align:start position:0%
out basically we would always start back
 

00:14:03.120 --> 00:14:04.069 align:start position:0%
out basically we would always start back
at<00:14:03.199><c> the</c><00:14:03.360><c> beginning</c><00:14:03.760><c> here</c>

00:14:04.069 --> 00:14:04.079 align:start position:0%
at the beginning here
 

00:14:04.079 --> 00:14:06.150 align:start position:0%
at the beginning here
we<00:14:04.320><c> traverse</c><00:14:04.959><c> this</c><00:14:05.199><c> many</c><00:14:05.440><c> nodes</c><00:14:05.760><c> and</c><00:14:05.839><c> then</c>

00:14:06.150 --> 00:14:06.160 align:start position:0%
we traverse this many nodes and then
 

00:14:06.160 --> 00:14:07.110 align:start position:0%
we traverse this many nodes and then
from<00:14:06.560><c> here</c>

00:14:07.110 --> 00:14:07.120 align:start position:0%
from here
 

00:14:07.120 --> 00:14:08.949 align:start position:0%
from here
basically<00:14:07.600><c> instead</c><00:14:07.920><c> of</c><00:14:08.079><c> just</c><00:14:08.320><c> traveling</c><00:14:08.800><c> this</c>

00:14:08.949 --> 00:14:08.959 align:start position:0%
basically instead of just traveling this
 

00:14:08.959 --> 00:14:10.550 align:start position:0%
basically instead of just traveling this
small<00:14:09.279><c> distance</c><00:14:09.680><c> it</c><00:14:09.760><c> could</c><00:14:09.920><c> be</c><00:14:10.000><c> possible</c><00:14:10.399><c> that</c>

00:14:10.550 --> 00:14:10.560 align:start position:0%
small distance it could be possible that
 

00:14:10.560 --> 00:14:11.910 align:start position:0%
small distance it could be possible that
we<00:14:10.639><c> would</c><00:14:10.800><c> have</c><00:14:10.959><c> to</c><00:14:11.040><c> do</c><00:14:11.199><c> multiple</c>

00:14:11.910 --> 00:14:11.920 align:start position:0%
we would have to do multiple
 

00:14:11.920 --> 00:14:13.829 align:start position:0%
we would have to do multiple
loops<00:14:12.639><c> you</c><00:14:12.720><c> know</c><00:14:12.880><c> because</c><00:14:13.199><c> if</c><00:14:13.360><c> this</c><00:14:13.519><c> distance</c>

00:14:13.829 --> 00:14:13.839 align:start position:0%
loops you know because if this distance
 

00:14:13.839 --> 00:14:15.030 align:start position:0%
loops you know because if this distance
was<00:14:14.160><c> really</c><00:14:14.560><c> long</c>

00:14:15.030 --> 00:14:15.040 align:start position:0%
was really long
 

00:14:15.040 --> 00:14:16.389 align:start position:0%
was really long
longer<00:14:15.279><c> than</c><00:14:15.519><c> the</c><00:14:15.600><c> length</c><00:14:15.839><c> of</c><00:14:15.920><c> this</c><00:14:16.079><c> loop</c><00:14:16.240><c> we</c>

00:14:16.389 --> 00:14:16.399 align:start position:0%
longer than the length of this loop we
 

00:14:16.399 --> 00:14:18.230 align:start position:0%
longer than the length of this loop we
would<00:14:16.480><c> have</c><00:14:16.560><c> to</c><00:14:16.639><c> do</c><00:14:16.880><c> multiple</c><00:14:17.279><c> loops</c><00:14:17.680><c> but</c>

00:14:18.230 --> 00:14:18.240 align:start position:0%
would have to do multiple loops but
 

00:14:18.240 --> 00:14:20.470 align:start position:0%
would have to do multiple loops but
after<00:14:18.720><c> all</c><00:14:18.880><c> of</c><00:14:18.959><c> that</c><00:14:19.120><c> the</c><00:14:19.279><c> remainder</c><00:14:20.240><c> would</c>

00:14:20.470 --> 00:14:20.480 align:start position:0%
after all of that the remainder would
 

00:14:20.480 --> 00:14:21.350 align:start position:0%
after all of that the remainder would
still<00:14:20.800><c> be</c>

00:14:21.350 --> 00:14:21.360 align:start position:0%
still be
 

00:14:21.360 --> 00:14:24.550 align:start position:0%
still be
this<00:14:21.680><c> portion</c><00:14:22.639><c> left</c><00:14:23.519><c> so</c><00:14:23.760><c> we</c><00:14:23.839><c> would</c><00:14:24.079><c> still</c><00:14:24.399><c> end</c>

00:14:24.550 --> 00:14:24.560 align:start position:0%
this portion left so we would still end
 

00:14:24.560 --> 00:14:25.990 align:start position:0%
this portion left so we would still end
up<00:14:24.720><c> getting</c><00:14:24.959><c> to</c><00:14:25.199><c> this</c><00:14:25.440><c> position</c>

00:14:25.990 --> 00:14:26.000 align:start position:0%
up getting to this position
 

00:14:26.000 --> 00:14:28.310 align:start position:0%
up getting to this position
the<00:14:26.160><c> enter</c><00:14:26.399><c> the</c><00:14:26.560><c> start</c><00:14:26.880><c> of</c><00:14:26.959><c> the</c><00:14:27.199><c> loop</c><00:14:27.920><c> okay</c><00:14:28.160><c> now</c>

00:14:28.310 --> 00:14:28.320 align:start position:0%
the enter the start of the loop okay now
 

00:14:28.320 --> 00:14:30.230 align:start position:0%
the enter the start of the loop okay now
we<00:14:28.480><c> can</c><00:14:28.639><c> finally</c><00:14:29.040><c> get</c><00:14:29.279><c> into</c><00:14:29.519><c> the</c><00:14:29.600><c> code</c>

00:14:30.230 --> 00:14:30.240 align:start position:0%
we can finally get into the code
 

00:14:30.240 --> 00:14:31.990 align:start position:0%
we can finally get into the code
so<00:14:30.399><c> remember</c><00:14:30.880><c> we're</c><00:14:31.040><c> gonna</c><00:14:31.199><c> be</c><00:14:31.360><c> starting</c><00:14:31.760><c> at</c>

00:14:31.990 --> 00:14:32.000 align:start position:0%
so remember we're gonna be starting at
 

00:14:32.000 --> 00:14:33.590 align:start position:0%
so remember we're gonna be starting at
phase<00:14:32.399><c> one</c><00:14:32.639><c> of</c><00:14:32.720><c> this</c><00:14:32.959><c> algorithm</c><00:14:33.279><c> we're</c><00:14:33.440><c> gonna</c>

00:14:33.590 --> 00:14:33.600 align:start position:0%
phase one of this algorithm we're gonna
 

00:14:33.600 --> 00:14:35.350 align:start position:0%
phase one of this algorithm we're gonna
have<00:14:33.760><c> two</c><00:14:33.920><c> pointers</c><00:14:34.399><c> fast</c><00:14:34.639><c> and</c><00:14:34.800><c> slow</c><00:14:35.040><c> they're</c>

00:14:35.350 --> 00:14:35.360 align:start position:0%
have two pointers fast and slow they're
 

00:14:35.360 --> 00:14:37.269 align:start position:0%
have two pointers fast and slow they're
always<00:14:35.839><c> gonna</c><00:14:36.000><c> start</c><00:14:36.320><c> at</c><00:14:36.560><c> zero</c><00:14:36.959><c> remember</c>

00:14:37.269 --> 00:14:37.279 align:start position:0%
always gonna start at zero remember
 

00:14:37.279 --> 00:14:37.990 align:start position:0%
always gonna start at zero remember
because<00:14:37.519><c> we</c><00:14:37.680><c> know</c>

00:14:37.990 --> 00:14:38.000 align:start position:0%
because we know
 

00:14:38.000 --> 00:14:40.870 align:start position:0%
because we know
zero<00:14:38.480><c> is</c><00:14:38.720><c> not</c><00:14:38.959><c> a</c><00:14:39.120><c> part</c><00:14:39.440><c> of</c><00:14:39.680><c> the</c><00:14:39.920><c> cycle</c><00:14:40.560><c> that's</c>

00:14:40.870 --> 00:14:40.880 align:start position:0%
zero is not a part of the cycle that's
 

00:14:40.880 --> 00:14:41.670 align:start position:0%
zero is not a part of the cycle that's
for<00:14:41.120><c> sure</c>

00:14:41.670 --> 00:14:41.680 align:start position:0%
for sure
 

00:14:41.680 --> 00:14:43.269 align:start position:0%
for sure
and<00:14:41.839><c> we're</c><00:14:42.000><c> gonna</c><00:14:42.240><c> keep</c><00:14:42.639><c> iterating</c><00:14:43.120><c> through</c>

00:14:43.269 --> 00:14:43.279 align:start position:0%
and we're gonna keep iterating through
 

00:14:43.279 --> 00:14:44.949 align:start position:0%
and we're gonna keep iterating through
these<00:14:43.600><c> loops</c><00:14:44.160><c> i</c><00:14:44.240><c> think</c><00:14:44.399><c> there's</c><00:14:44.560><c> an</c><00:14:44.720><c> easier</c>

00:14:44.949 --> 00:14:44.959 align:start position:0%
these loops i think there's an easier
 

00:14:44.959 --> 00:14:46.629 align:start position:0%
these loops i think there's an easier
way<00:14:45.120><c> to</c><00:14:45.199><c> write</c><00:14:45.440><c> this</c><00:14:45.600><c> code</c><00:14:45.839><c> but</c><00:14:46.000><c> i'm</c><00:14:46.160><c> lazy</c><00:14:46.480><c> so</c>

00:14:46.629 --> 00:14:46.639 align:start position:0%
way to write this code but i'm lazy so
 

00:14:46.639 --> 00:14:47.910 align:start position:0%
way to write this code but i'm lazy so
just<00:14:46.880><c> while</c><00:14:47.199><c> true</c>

00:14:47.910 --> 00:14:47.920 align:start position:0%
just while true
 

00:14:47.920 --> 00:14:49.590 align:start position:0%
just while true
we're<00:14:48.160><c> going</c><00:14:48.399><c> to</c><00:14:48.560><c> and</c><00:14:48.720><c> we</c><00:14:49.040><c> start</c><00:14:49.279><c> out</c><00:14:49.440><c> with</c>

00:14:49.590 --> 00:14:49.600 align:start position:0%
we're going to and we start out with
 

00:14:49.600 --> 00:14:51.189 align:start position:0%
we're going to and we start out with
while<00:14:49.839><c> true</c><00:14:50.079><c> because</c><00:14:50.320><c> we</c><00:14:50.399><c> want</c><00:14:50.560><c> to</c><00:14:50.639><c> keep</c><00:14:50.880><c> going</c>

00:14:51.189 --> 00:14:51.199 align:start position:0%
while true because we want to keep going
 

00:14:51.199 --> 00:14:53.189 align:start position:0%
while true because we want to keep going
until<00:14:51.600><c> they</c><00:14:51.839><c> intersect</c><00:14:52.399><c> but</c><00:14:52.560><c> notice</c><00:14:52.800><c> how</c><00:14:52.959><c> they</c>

00:14:53.189 --> 00:14:53.199 align:start position:0%
until they intersect but notice how they
 

00:14:53.199 --> 00:14:55.509 align:start position:0%
until they intersect but notice how they
already<00:14:53.920><c> intersect</c><00:14:54.480><c> at</c><00:14:54.639><c> the</c><00:14:54.720><c> beginning</c>

00:14:55.509 --> 00:14:55.519 align:start position:0%
already intersect at the beginning
 

00:14:55.519 --> 00:14:57.269 align:start position:0%
already intersect at the beginning
so<00:14:55.760><c> we're</c><00:14:55.920><c> going</c><00:14:56.000><c> to</c><00:14:56.160><c> update</c><00:14:56.639><c> slow</c><00:14:57.040><c> so</c>

00:14:57.269 --> 00:14:57.279 align:start position:0%
so we're going to update slow so
 

00:14:57.279 --> 00:14:59.110 align:start position:0%
so we're going to update slow so
basically<00:14:57.839><c> slow</c><00:14:58.320><c> is</c><00:14:58.480><c> going</c><00:14:58.639><c> to</c><00:14:58.800><c> be</c>

00:14:59.110 --> 00:14:59.120 align:start position:0%
basically slow is going to be
 

00:14:59.120 --> 00:15:02.389 align:start position:0%
basically slow is going to be
set<00:14:59.440><c> to</c><00:14:59.760><c> whatever</c><00:15:00.160><c> it</c><00:15:00.399><c> points</c><00:15:00.800><c> at</c><00:15:00.959><c> so</c><00:15:01.600><c> nums</c><00:15:02.079><c> of</c>

00:15:02.389 --> 00:15:02.399 align:start position:0%
set to whatever it points at so nums of
 

00:15:02.399 --> 00:15:05.590 align:start position:0%
set to whatever it points at so nums of
slow<00:15:02.880><c> right</c><00:15:03.839><c> and</c><00:15:04.000><c> then</c><00:15:04.320><c> fast</c><00:15:04.800><c> is</c><00:15:04.959><c> going</c><00:15:05.120><c> to</c><00:15:05.279><c> be</c>

00:15:05.590 --> 00:15:05.600 align:start position:0%
slow right and then fast is going to be
 

00:15:05.600 --> 00:15:08.389 align:start position:0%
slow right and then fast is going to be
the<00:15:05.920><c> opposite</c><00:15:06.480><c> or</c><00:15:06.880><c> the</c><00:15:07.040><c> same</c><00:15:07.279><c> thing</c><00:15:07.680><c> numbs</c><00:15:08.079><c> of</c>

00:15:08.389 --> 00:15:08.399 align:start position:0%
the opposite or the same thing numbs of
 

00:15:08.399 --> 00:15:09.430 align:start position:0%
the opposite or the same thing numbs of
fast<00:15:08.720><c> but</c><00:15:08.880><c> remember</c>

00:15:09.430 --> 00:15:09.440 align:start position:0%
fast but remember
 

00:15:09.440 --> 00:15:12.870 align:start position:0%
fast but remember
we're<00:15:09.680><c> advancing</c><00:15:10.399><c> fast</c><00:15:10.880><c> twice</c><00:15:11.600><c> and</c><00:15:12.160><c> so</c><00:15:12.480><c> we</c><00:15:12.639><c> can</c>

00:15:12.870 --> 00:15:12.880 align:start position:0%
we're advancing fast twice and so we can
 

00:15:12.880 --> 00:15:14.389 align:start position:0%
we're advancing fast twice and so we can
just<00:15:13.120><c> do</c><00:15:13.360><c> this</c><00:15:13.680><c> and</c><00:15:13.920><c> of</c><00:15:14.000><c> course</c>

00:15:14.389 --> 00:15:14.399 align:start position:0%
just do this and of course
 

00:15:14.399 --> 00:15:16.710 align:start position:0%
just do this and of course
fast<00:15:14.800><c> and</c><00:15:14.959><c> slow</c><00:15:15.360><c> are</c><00:15:15.600><c> always</c><00:15:16.160><c> going</c><00:15:16.320><c> to</c><00:15:16.480><c> be</c>

00:15:16.710 --> 00:15:16.720 align:start position:0%
fast and slow are always going to be
 

00:15:16.720 --> 00:15:18.069 align:start position:0%
fast and slow are always going to be
inbounds<00:15:17.279><c> right</c><00:15:17.440><c> they're</c><00:15:17.600><c> never</c><00:15:17.839><c> going</c><00:15:18.000><c> to</c>

00:15:18.069 --> 00:15:18.079 align:start position:0%
inbounds right they're never going to
 

00:15:18.079 --> 00:15:19.750 align:start position:0%
inbounds right they're never going to
point<00:15:18.399><c> out</c><00:15:18.560><c> of</c><00:15:18.720><c> bounds</c><00:15:19.040><c> we</c><00:15:19.199><c> know</c><00:15:19.360><c> that</c><00:15:19.519><c> for</c>

00:15:19.750 --> 00:15:19.760 align:start position:0%
point out of bounds we know that for
 

00:15:19.760 --> 00:15:21.189 align:start position:0%
point out of bounds we know that for
sure<00:15:20.079><c> based</c><00:15:20.320><c> on</c><00:15:20.480><c> the</c><00:15:20.560><c> restrictions</c><00:15:21.120><c> that</c>

00:15:21.189 --> 00:15:21.199 align:start position:0%
sure based on the restrictions that
 

00:15:21.199 --> 00:15:21.910 align:start position:0%
sure based on the restrictions that
we're<00:15:21.360><c> given</c>

00:15:21.910 --> 00:15:21.920 align:start position:0%
we're given
 

00:15:21.920 --> 00:15:25.430 align:start position:0%
we're given
and<00:15:22.240><c> if</c><00:15:22.800><c> slow</c><00:15:23.360><c> is</c><00:15:23.600><c> equal</c><00:15:23.920><c> to</c><00:15:24.160><c> fast</c><00:15:24.880><c> that's</c><00:15:25.199><c> when</c>

00:15:25.430 --> 00:15:25.440 align:start position:0%
and if slow is equal to fast that's when
 

00:15:25.440 --> 00:15:26.470 align:start position:0%
and if slow is equal to fast that's when
we<00:15:25.600><c> can</c><00:15:25.920><c> break</c>

00:15:26.470 --> 00:15:26.480 align:start position:0%
we can break
 

00:15:26.480 --> 00:15:28.470 align:start position:0%
we can break
out<00:15:26.639><c> of</c><00:15:26.800><c> the</c><00:15:26.959><c> loop</c><00:15:27.360><c> if</c><00:15:27.519><c> they're</c><00:15:27.760><c> not</c><00:15:28.079><c> equal</c>

00:15:28.470 --> 00:15:28.480 align:start position:0%
out of the loop if they're not equal
 

00:15:28.480 --> 00:15:29.990 align:start position:0%
out of the loop if they're not equal
then<00:15:28.720><c> we're</c><00:15:28.959><c> not</c><00:15:29.120><c> going</c><00:15:29.199><c> to</c><00:15:29.360><c> break</c><00:15:29.680><c> this</c><00:15:29.839><c> is</c>

00:15:29.990 --> 00:15:30.000 align:start position:0%
then we're not going to break this is
 

00:15:30.000 --> 00:15:31.829 align:start position:0%
then we're not going to break this is
basically<00:15:30.480><c> a</c><00:15:30.639><c> do</c><00:15:30.959><c> while</c><00:15:31.440><c> loop</c>

00:15:31.829 --> 00:15:31.839 align:start position:0%
basically a do while loop
 

00:15:31.839 --> 00:15:33.110 align:start position:0%
basically a do while loop
but<00:15:32.079><c> i</c><00:15:32.160><c> don't</c><00:15:32.240><c> think</c><00:15:32.399><c> you</c><00:15:32.560><c> can</c><00:15:32.639><c> do</c><00:15:32.800><c> that</c><00:15:33.040><c> in</c>

00:15:33.110 --> 00:15:33.120 align:start position:0%
but i don't think you can do that in
 

00:15:33.120 --> 00:15:35.590 align:start position:0%
but i don't think you can do that in
python<00:15:34.000><c> so</c><00:15:34.399><c> once</c><00:15:34.800><c> we've</c><00:15:35.040><c> done</c><00:15:35.279><c> this</c>

00:15:35.590 --> 00:15:35.600 align:start position:0%
python so once we've done this
 

00:15:35.600 --> 00:15:37.829 align:start position:0%
python so once we've done this
that's<00:15:35.839><c> how</c><00:15:36.000><c> we</c><00:15:36.160><c> know</c><00:15:36.399><c> okay</c><00:15:36.800><c> fast</c><00:15:37.199><c> and</c><00:15:37.360><c> slow</c>

00:15:37.829 --> 00:15:37.839 align:start position:0%
that's how we know okay fast and slow
 

00:15:37.839 --> 00:15:39.670 align:start position:0%
that's how we know okay fast and slow
intersected<00:15:38.639><c> here</c>

00:15:39.670 --> 00:15:39.680 align:start position:0%
intersected here
 

00:15:39.680 --> 00:15:42.069 align:start position:0%
intersected here
so<00:15:40.079><c> now</c><00:15:40.480><c> we're</c><00:15:40.639><c> going</c><00:15:40.720><c> to</c><00:15:40.880><c> create</c><00:15:41.199><c> a</c><00:15:41.519><c> second</c>

00:15:42.069 --> 00:15:42.079 align:start position:0%
so now we're going to create a second
 

00:15:42.079 --> 00:15:43.990 align:start position:0%
so now we're going to create a second
slow<00:15:42.560><c> pointer</c><00:15:43.040><c> slow</c><00:15:43.519><c> 2</c>

00:15:43.990 --> 00:15:44.000 align:start position:0%
slow pointer slow 2
 

00:15:44.000 --> 00:15:45.670 align:start position:0%
slow pointer slow 2
we're<00:15:44.160><c> going</c><00:15:44.240><c> to</c><00:15:44.399><c> set</c><00:15:44.639><c> it</c><00:15:44.720><c> to</c><00:15:44.880><c> the</c><00:15:44.959><c> beginning</c>

00:15:45.670 --> 00:15:45.680 align:start position:0%
we're going to set it to the beginning
 

00:15:45.680 --> 00:15:47.430 align:start position:0%
we're going to set it to the beginning
right<00:15:46.079><c> back</c><00:15:46.320><c> at</c><00:15:46.560><c> index</c><00:15:46.880><c> 0</c>

00:15:47.430 --> 00:15:47.440 align:start position:0%
right back at index 0
 

00:15:47.440 --> 00:15:49.030 align:start position:0%
right back at index 0
and<00:15:47.600><c> now</c><00:15:47.839><c> we're</c><00:15:48.000><c> going</c><00:15:48.079><c> to</c><00:15:48.160><c> keep</c><00:15:48.480><c> incrementing</c>

00:15:49.030 --> 00:15:49.040 align:start position:0%
and now we're going to keep incrementing
 

00:15:49.040 --> 00:15:51.269 align:start position:0%
and now we're going to keep incrementing
this<00:15:49.360><c> slow</c><00:15:49.680><c> pointer</c><00:15:50.079><c> and</c><00:15:50.320><c> the</c><00:15:50.639><c> first</c><00:15:50.959><c> slow</c>

00:15:51.269 --> 00:15:51.279 align:start position:0%
this slow pointer and the first slow
 

00:15:51.279 --> 00:15:53.430 align:start position:0%
this slow pointer and the first slow
pointer<00:15:51.600><c> until</c><00:15:52.000><c> they</c><00:15:52.240><c> intersect</c><00:15:52.800><c> so</c><00:15:52.959><c> this</c><00:15:53.199><c> is</c>

00:15:53.430 --> 00:15:53.440 align:start position:0%
pointer until they intersect so this is
 

00:15:53.440 --> 00:15:56.470 align:start position:0%
pointer until they intersect so this is
phase<00:15:54.000><c> two</c><00:15:54.320><c> of</c><00:15:54.480><c> the</c><00:15:54.639><c> algorithm</c><00:15:55.440><c> while</c><00:15:55.839><c> true</c>

00:15:56.470 --> 00:15:56.480 align:start position:0%
phase two of the algorithm while true
 

00:15:56.480 --> 00:15:59.910 align:start position:0%
phase two of the algorithm while true
advance<00:15:57.040><c> the</c><00:15:57.199><c> slow</c><00:15:57.600><c> pointer</c><00:15:58.880><c> by</c><00:15:59.120><c> one</c>

00:15:59.910 --> 00:15:59.920 align:start position:0%
advance the slow pointer by one
 

00:15:59.920 --> 00:16:02.389 align:start position:0%
advance the slow pointer by one
and<00:16:00.160><c> advance</c><00:16:00.639><c> the</c><00:16:00.880><c> second</c><00:16:01.199><c> slow</c><00:16:01.519><c> pointer</c><00:16:02.160><c> by</c>

00:16:02.389 --> 00:16:02.399 align:start position:0%
and advance the second slow pointer by
 

00:16:02.399 --> 00:16:05.189 align:start position:0%
and advance the second slow pointer by
one<00:16:02.800><c> as</c><00:16:02.959><c> well</c><00:16:03.279><c> notice</c><00:16:03.600><c> how</c><00:16:03.920><c> trivial</c><00:16:04.480><c> this</c><00:16:04.720><c> code</c>

00:16:05.189 --> 00:16:05.199 align:start position:0%
one as well notice how trivial this code
 

00:16:05.199 --> 00:16:08.230 align:start position:0%
one as well notice how trivial this code
is<00:16:05.839><c> the</c><00:16:06.000><c> hard</c><00:16:06.320><c> part</c><00:16:06.560><c> is</c><00:16:06.639><c> just</c><00:16:06.959><c> figuring</c><00:16:07.440><c> it</c><00:16:07.600><c> out</c>

00:16:08.230 --> 00:16:08.240 align:start position:0%
is the hard part is just figuring it out
 

00:16:08.240 --> 00:16:09.990 align:start position:0%
is the hard part is just figuring it out
so<00:16:08.800><c> when</c><00:16:08.959><c> we're</c><00:16:09.120><c> going</c><00:16:09.199><c> to</c><00:16:09.279><c> keep</c><00:16:09.440><c> going</c><00:16:09.680><c> until</c>

00:16:09.990 --> 00:16:10.000 align:start position:0%
so when we're going to keep going until
 

00:16:10.000 --> 00:16:11.749 align:start position:0%
so when we're going to keep going until
they<00:16:10.160><c> intersect</c><00:16:10.800><c> so</c>

00:16:11.749 --> 00:16:11.759 align:start position:0%
they intersect so
 

00:16:11.759 --> 00:16:14.550 align:start position:0%
they intersect so
if<00:16:12.320><c> these</c><00:16:12.560><c> were</c><00:16:12.800><c> equal</c><00:16:13.360><c> then</c><00:16:13.600><c> we</c><00:16:13.759><c> can</c><00:16:14.000><c> break</c>

00:16:14.550 --> 00:16:14.560 align:start position:0%
if these were equal then we can break
 

00:16:14.560 --> 00:16:14.949 align:start position:0%
if these were equal then we can break
out

00:16:14.949 --> 00:16:14.959 align:start position:0%
out
 

00:16:14.959 --> 00:16:18.150 align:start position:0%
out
of<00:16:15.519><c> this</c><00:16:16.079><c> loop</c><00:16:16.560><c> and</c><00:16:16.800><c> then</c><00:16:17.360><c> return</c>

00:16:18.150 --> 00:16:18.160 align:start position:0%
of this loop and then return
 

00:16:18.160 --> 00:16:20.470 align:start position:0%
of this loop and then return
the<00:16:18.320><c> slow</c><00:16:19.120><c> pointer</c><00:16:19.600><c> right</c><00:16:19.839><c> we</c><00:16:20.000><c> can</c><00:16:20.079><c> return</c>

00:16:20.470 --> 00:16:20.480 align:start position:0%
the slow pointer right we can return
 

00:16:20.480 --> 00:16:22.790 align:start position:0%
the slow pointer right we can return
either<00:16:20.720><c> of</c><00:16:20.880><c> them</c><00:16:21.040><c> slow</c><00:16:21.360><c> one</c><00:16:21.600><c> or</c><00:16:21.839><c> slow</c><00:16:22.160><c> two</c>

00:16:22.790 --> 00:16:22.800 align:start position:0%
either of them slow one or slow two
 

00:16:22.800 --> 00:16:24.710 align:start position:0%
either of them slow one or slow two
index<00:16:23.199><c> that</c><00:16:23.440><c> they're</c><00:16:23.680><c> at</c><00:16:23.920><c> right</c><00:16:24.160><c> slow</c><00:16:24.480><c> slow</c>

00:16:24.710 --> 00:16:24.720 align:start position:0%
index that they're at right slow slow
 

00:16:24.720 --> 00:16:26.629 align:start position:0%
index that they're at right slow slow
one<00:16:24.880><c> and</c><00:16:24.959><c> slow</c><00:16:25.199><c> two</c><00:16:25.440><c> are</c><00:16:25.600><c> always</c><00:16:25.920><c> an</c><00:16:26.079><c> index</c><00:16:26.480><c> and</c>

00:16:26.629 --> 00:16:26.639 align:start position:0%
one and slow two are always an index and
 

00:16:26.639 --> 00:16:27.670 align:start position:0%
one and slow two are always an index and
the<00:16:26.720><c> index</c><00:16:27.040><c> that</c><00:16:27.199><c> they're</c><00:16:27.440><c> at</c>

00:16:27.670 --> 00:16:27.680 align:start position:0%
the index that they're at
 

00:16:27.680 --> 00:16:29.350 align:start position:0%
the index that they're at
is<00:16:27.839><c> the</c><00:16:28.000><c> duplicate</c><00:16:28.560><c> number</c><00:16:28.880><c> because</c><00:16:29.040><c> we</c><00:16:29.199><c> have</c>

00:16:29.350 --> 00:16:29.360 align:start position:0%
is the duplicate number because we have
 

00:16:29.360 --> 00:16:31.910 align:start position:0%
is the duplicate number because we have
multiple<00:16:29.839><c> values</c><00:16:30.399><c> pointing</c><00:16:30.720><c> to</c><00:16:30.880><c> the</c><00:16:31.120><c> same</c>

00:16:31.910 --> 00:16:31.920 align:start position:0%
multiple values pointing to the same
 

00:16:31.920 --> 00:16:33.670 align:start position:0%
multiple values pointing to the same
value<00:16:32.320><c> that's</c><00:16:32.639><c> the</c><00:16:32.720><c> duplicate</c><00:16:33.440><c> we</c><00:16:33.519><c> can</c>

00:16:33.670 --> 00:16:33.680 align:start position:0%
value that's the duplicate we can
 

00:16:33.680 --> 00:16:35.749 align:start position:0%
value that's the duplicate we can
actually<00:16:34.000><c> take</c><00:16:34.160><c> this</c><00:16:34.399><c> and</c><00:16:34.480><c> return</c><00:16:34.880><c> it</c><00:16:35.120><c> here</c>

00:16:35.749 --> 00:16:35.759 align:start position:0%
actually take this and return it here
 

00:16:35.759 --> 00:16:36.949 align:start position:0%
actually take this and return it here
so<00:16:36.000><c> i'm</c><00:16:36.160><c> just</c><00:16:36.320><c> going</c><00:16:36.399><c> to</c><00:16:36.480><c> go</c><00:16:36.560><c> ahead</c><00:16:36.720><c> and</c><00:16:36.800><c> do</c>

00:16:36.949 --> 00:16:36.959 align:start position:0%
so i'm just going to go ahead and do
 

00:16:36.959 --> 00:16:38.870 align:start position:0%
so i'm just going to go ahead and do
that<00:16:37.199><c> and</c><00:16:37.360><c> this</c><00:16:37.600><c> is</c><00:16:37.759><c> the</c><00:16:37.920><c> entire</c><00:16:38.240><c> solution</c>

00:16:38.870 --> 00:16:38.880 align:start position:0%
that and this is the entire solution
 

00:16:38.880 --> 00:16:40.150 align:start position:0%
that and this is the entire solution
okay<00:16:39.120><c> i</c><00:16:39.199><c> don't</c><00:16:39.279><c> know</c><00:16:39.440><c> what</c><00:16:39.519><c> i</c><00:16:39.600><c> was</c><00:16:39.759><c> thinking</c><00:16:40.079><c> i</c>

00:16:40.150 --> 00:16:40.160 align:start position:0%
okay i don't know what i was thinking i
 

00:16:40.160 --> 00:16:41.829 align:start position:0%
okay i don't know what i was thinking i
don't<00:16:40.320><c> know</c><00:16:40.399><c> why</c><00:16:40.560><c> i</c><00:16:40.639><c> put</c><00:16:40.959><c> fast</c><00:16:41.279><c> on</c><00:16:41.360><c> the</c><00:16:41.519><c> outside</c>

00:16:41.829 --> 00:16:41.839 align:start position:0%
don't know why i put fast on the outside
 

00:16:41.839 --> 00:16:43.430 align:start position:0%
don't know why i put fast on the outside
this<00:16:42.000><c> is</c><00:16:42.240><c> nums</c>

00:16:43.430 --> 00:16:43.440 align:start position:0%
this is nums
 

00:16:43.440 --> 00:16:45.509 align:start position:0%
this is nums
nums<00:16:43.759><c> of</c><00:16:43.920><c> fast</c><00:16:44.240><c> which</c><00:16:44.399><c> is</c><00:16:44.560><c> a</c><00:16:44.639><c> number</c><00:16:45.120><c> which</c><00:16:45.360><c> is</c>

00:16:45.509 --> 00:16:45.519 align:start position:0%
nums of fast which is a number which is
 

00:16:45.519 --> 00:16:47.110 align:start position:0%
nums of fast which is a number which is
a<00:16:45.600><c> different</c><00:16:46.000><c> index</c><00:16:46.480><c> and</c><00:16:46.560><c> then</c><00:16:46.880><c> we're</c><00:16:47.040><c> going</c>

00:16:47.110 --> 00:16:47.120 align:start position:0%
a different index and then we're going
 

00:16:47.120 --> 00:16:48.949 align:start position:0%
a different index and then we're going
to<00:16:47.199><c> use</c><00:16:47.360><c> that</c><00:16:47.600><c> same</c><00:16:47.839><c> index</c><00:16:48.320><c> again</c>

00:16:48.949 --> 00:16:48.959 align:start position:0%
to use that same index again
 

00:16:48.959 --> 00:16:51.110 align:start position:0%
to use that same index again
in<00:16:49.120><c> the</c><00:16:49.360><c> nums</c><00:16:49.759><c> array</c><00:16:50.480><c> that's</c><00:16:50.720><c> how</c><00:16:50.880><c> we're</c>

00:16:51.110 --> 00:16:51.120 align:start position:0%
in the nums array that's how we're
 

00:16:51.120 --> 00:16:53.269 align:start position:0%
in the nums array that's how we're
basically<00:16:51.600><c> advancing</c><00:16:52.160><c> fast</c><00:16:52.560><c> by</c><00:16:52.720><c> two</c><00:16:52.959><c> we</c><00:16:53.120><c> could</c>

00:16:53.269 --> 00:16:53.279 align:start position:0%
basically advancing fast by two we could
 

00:16:53.279 --> 00:16:54.870 align:start position:0%
basically advancing fast by two we could
obviously<00:16:53.600><c> write</c><00:16:53.839><c> it</c><00:16:54.000><c> in</c><00:16:54.160><c> different</c><00:16:54.480><c> lines</c><00:16:54.800><c> of</c>

00:16:54.870 --> 00:16:54.880 align:start position:0%
obviously write it in different lines of
 

00:16:54.880 --> 00:16:56.310 align:start position:0%
obviously write it in different lines of
code<00:16:55.120><c> but</c><00:16:55.279><c> i'm</c><00:16:55.360><c> just</c><00:16:55.440><c> gonna</c><00:16:55.680><c> leave</c><00:16:55.839><c> it</c><00:16:56.000><c> as</c><00:16:56.160><c> it</c>

00:16:56.310 --> 00:16:56.320 align:start position:0%
code but i'm just gonna leave it as it
 

00:16:56.320 --> 00:16:58.150 align:start position:0%
code but i'm just gonna leave it as it
is<00:16:56.560><c> just</c><00:16:56.720><c> because</c><00:16:56.959><c> it's</c><00:16:57.120><c> a</c><00:16:57.199><c> little</c><00:16:57.360><c> bit</c><00:16:57.600><c> neater</c>

00:16:58.150 --> 00:16:58.160 align:start position:0%
is just because it's a little bit neater
 

00:16:58.160 --> 00:16:59.749 align:start position:0%
is just because it's a little bit neater
and<00:16:58.399><c> also</c><00:16:58.800><c> i</c><00:16:58.880><c> don't</c><00:16:59.199><c> i</c><00:16:59.279><c> don't</c><00:16:59.440><c> really</c><00:16:59.600><c> know</c>

00:16:59.749 --> 00:16:59.759 align:start position:0%
and also i don't i don't really know
 

00:16:59.759 --> 00:17:01.350 align:start position:0%
and also i don't i don't really know
what<00:16:59.839><c> i'm</c><00:17:00.000><c> thinking</c><00:17:00.399><c> but</c><00:17:00.639><c> the</c><00:17:00.800><c> slow</c>

00:17:01.350 --> 00:17:01.360 align:start position:0%
what i'm thinking but the slow
 

00:17:01.360 --> 00:17:03.189 align:start position:0%
what i'm thinking but the slow
the<00:17:01.519><c> second</c><00:17:01.839><c> slow</c><00:17:02.160><c> pointer</c><00:17:02.480><c> also</c><00:17:02.720><c> needs</c><00:17:02.959><c> to</c><00:17:03.040><c> be</c>

00:17:03.189 --> 00:17:03.199 align:start position:0%
the second slow pointer also needs to be
 

00:17:03.199 --> 00:17:04.390 align:start position:0%
the second slow pointer also needs to be
advanced<00:17:03.519><c> i</c><00:17:03.600><c> don't</c><00:17:03.680><c> know</c><00:17:03.839><c> why</c><00:17:04.000><c> i</c><00:17:04.079><c> called</c><00:17:04.319><c> it</c>

00:17:04.390 --> 00:17:04.400 align:start position:0%
advanced i don't know why i called it
 

00:17:04.400 --> 00:17:06.309 align:start position:0%
advanced i don't know why i called it
slow<00:17:04.640><c> one</c><00:17:04.799><c> but</c><00:17:04.959><c> that</c><00:17:05.199><c> is</c><00:17:05.360><c> the</c><00:17:05.520><c> entire</c><00:17:05.919><c> code</c>

00:17:06.309 --> 00:17:06.319 align:start position:0%
slow one but that is the entire code
 

00:17:06.319 --> 00:17:07.829 align:start position:0%
slow one but that is the entire code
and<00:17:06.400><c> then</c><00:17:06.640><c> once</c><00:17:06.880><c> they</c><00:17:07.039><c> finally</c><00:17:07.360><c> meet</c><00:17:07.600><c> we</c><00:17:07.679><c> are</c>

00:17:07.829 --> 00:17:07.839 align:start position:0%
and then once they finally meet we are
 

00:17:07.839 --> 00:17:09.990 align:start position:0%
and then once they finally meet we are
going<00:17:07.919><c> to</c><00:17:08.000><c> be</c><00:17:08.079><c> returning</c><00:17:08.559><c> that</c><00:17:09.120><c> index</c>

00:17:09.990 --> 00:17:10.000 align:start position:0%
going to be returning that index
 

00:17:10.000 --> 00:17:11.990 align:start position:0%
going to be returning that index
and<00:17:10.480><c> as</c><00:17:10.640><c> you</c><00:17:10.720><c> can</c><00:17:10.959><c> see</c><00:17:11.199><c> the</c><00:17:11.360><c> solution</c><00:17:11.760><c> does</c>

00:17:11.990 --> 00:17:12.000 align:start position:0%
and as you can see the solution does
 

00:17:12.000 --> 00:17:13.829 align:start position:0%
and as you can see the solution does
work<00:17:12.319><c> it's</c><00:17:12.480><c> in</c><00:17:12.559><c> a</c><00:17:12.640><c> linear</c><00:17:12.959><c> time</c><00:17:13.199><c> solution</c>

00:17:13.829 --> 00:17:13.839 align:start position:0%
work it's in a linear time solution
 

00:17:13.839 --> 00:17:15.590 align:start position:0%
work it's in a linear time solution
we<00:17:14.079><c> definitely</c><00:17:14.559><c> didn't</c><00:17:14.799><c> need</c><00:17:14.959><c> to</c><00:17:15.039><c> use</c><00:17:15.280><c> any</c>

00:17:15.590 --> 00:17:15.600 align:start position:0%
we definitely didn't need to use any
 

00:17:15.600 --> 00:17:17.510 align:start position:0%
we definitely didn't need to use any
extra<00:17:15.839><c> space</c><00:17:16.240><c> we</c><00:17:16.400><c> didn't</c><00:17:16.559><c> need</c><00:17:16.720><c> to</c><00:17:16.880><c> modify</c><00:17:17.360><c> the</c>

00:17:17.510 --> 00:17:17.520 align:start position:0%
extra space we didn't need to modify the
 

00:17:17.520 --> 00:17:18.230 align:start position:0%
extra space we didn't need to modify the
input<00:17:17.760><c> array</c>

00:17:18.230 --> 00:17:18.240 align:start position:0%
input array
 

00:17:18.240 --> 00:17:21.350 align:start position:0%
input array
this<00:17:18.640><c> is</c><00:17:18.880><c> the</c><00:17:19.120><c> floyd's</c><00:17:19.760><c> algorithm</c><00:17:21.120><c> with</c><00:17:21.280><c> a</c>

00:17:21.350 --> 00:17:21.360 align:start position:0%
this is the floyd's algorithm with a
 

00:17:21.360 --> 00:17:22.630 align:start position:0%
this is the floyd's algorithm with a
fast<00:17:21.679><c> and</c><00:17:21.839><c> slow</c><00:17:22.079><c> pointer</c>

00:17:22.630 --> 00:17:22.640 align:start position:0%
fast and slow pointer
 

00:17:22.640 --> 00:17:25.350 align:start position:0%
fast and slow pointer
beginning<00:17:23.039><c> of</c><00:17:23.199><c> a</c><00:17:23.360><c> cycle</c><00:17:23.679><c> detection</c><00:17:24.959><c> so</c><00:17:25.120><c> i</c><00:17:25.199><c> hope</c>

00:17:25.350 --> 00:17:25.360 align:start position:0%
beginning of a cycle detection so i hope
 

00:17:25.360 --> 00:17:26.390 align:start position:0%
beginning of a cycle detection so i hope
that<00:17:25.520><c> this</c><00:17:25.679><c> was</c><00:17:25.839><c> helpful</c>

00:17:26.390 --> 00:17:26.400 align:start position:0%
that this was helpful
 

00:17:26.400 --> 00:17:28.390 align:start position:0%
that this was helpful
if<00:17:26.559><c> it</c><00:17:26.720><c> was</c><00:17:27.039><c> please</c><00:17:27.360><c> like</c><00:17:27.600><c> and</c><00:17:27.679><c> subscribe</c><00:17:28.240><c> it</c>

00:17:28.390 --> 00:17:28.400 align:start position:0%
if it was please like and subscribe it
 

00:17:28.400 --> 00:17:30.230 align:start position:0%
if it was please like and subscribe it
supports<00:17:28.799><c> the</c><00:17:28.960><c> channel</c><00:17:29.360><c> a</c><00:17:29.520><c> lot</c><00:17:29.919><c> and</c><00:17:30.080><c> i'll</c>

00:17:30.230 --> 00:17:30.240 align:start position:0%
supports the channel a lot and i'll
 

00:17:30.240 --> 00:17:31.990 align:start position:0%
supports the channel a lot and i'll
hopefully<00:17:30.799><c> see</c><00:17:31.039><c> you</c><00:17:31.200><c> pretty</c><00:17:31.440><c> soon</c>

00:17:31.990 --> 00:17:32.000 align:start position:0%
hopefully see you pretty soon
 

00:17:32.000 --> 00:17:34.880 align:start position:0%
hopefully see you pretty soon
thanks<00:17:32.240><c> for</c><00:17:32.400><c> watching</c>

