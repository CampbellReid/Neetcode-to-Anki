WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.750 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.640><c> welcome</c><00:00:01.120><c> back</c><00:00:01.439><c> and</c><00:00:01.520><c> let's</c>

00:00:01.750 --> 00:00:01.760 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.760 --> 00:00:03.750 align:start position:0%
hey everyone welcome back and let's
write<00:00:02.000><c> some</c><00:00:02.159><c> more</c><00:00:02.399><c> neat</c><00:00:02.720><c> code</c><00:00:02.960><c> today</c><00:00:03.199><c> so</c><00:00:03.360><c> today</c>

00:00:03.750 --> 00:00:03.760 align:start position:0%
write some more neat code today so today
 

00:00:03.760 --> 00:00:04.470 align:start position:0%
write some more neat code today so today
let's<00:00:04.000><c> solve</c>

00:00:04.470 --> 00:00:04.480 align:start position:0%
let's solve
 

00:00:04.480 --> 00:00:07.030 align:start position:0%
let's solve
word<00:00:04.880><c> search</c><00:00:05.359><c> two</c><00:00:06.000><c> and</c><00:00:06.240><c> once</c><00:00:06.480><c> again</c><00:00:06.799><c> like</c>

00:00:07.030 --> 00:00:07.040 align:start position:0%
word search two and once again like
 

00:00:07.040 --> 00:00:09.190 align:start position:0%
word search two and once again like
usual<00:00:07.440><c> this</c><00:00:07.680><c> is</c><00:00:07.839><c> a</c><00:00:08.000><c> problem</c><00:00:08.400><c> from</c><00:00:08.559><c> the</c><00:00:08.800><c> blind</c>

00:00:09.190 --> 00:00:09.200 align:start position:0%
usual this is a problem from the blind
 

00:00:09.200 --> 00:00:10.709 align:start position:0%
usual this is a problem from the blind
75<00:00:09.840><c> link</c><00:00:10.080><c> code</c><00:00:10.320><c> list</c>

00:00:10.709 --> 00:00:10.719 align:start position:0%
75 link code list
 

00:00:10.719 --> 00:00:12.549 align:start position:0%
75 link code list
a<00:00:10.960><c> list</c><00:00:11.280><c> that</c><00:00:11.360><c> we've</c><00:00:11.599><c> been</c><00:00:11.840><c> tracking</c><00:00:12.240><c> on</c><00:00:12.400><c> this</c>

00:00:12.549 --> 00:00:12.559 align:start position:0%
a list that we've been tracking on this
 

00:00:12.559 --> 00:00:14.070 align:start position:0%
a list that we've been tracking on this
spreadsheet<00:00:13.120><c> and</c><00:00:13.200><c> the</c><00:00:13.360><c> link</c><00:00:13.599><c> will</c><00:00:13.759><c> be</c><00:00:13.840><c> in</c><00:00:14.000><c> the</c>

00:00:14.070 --> 00:00:14.080 align:start position:0%
spreadsheet and the link will be in the
 

00:00:14.080 --> 00:00:15.110 align:start position:0%
spreadsheet and the link will be in the
description<00:00:14.639><c> to</c><00:00:14.799><c> this</c>

00:00:15.110 --> 00:00:15.120 align:start position:0%
description to this
 

00:00:15.120 --> 00:00:17.189 align:start position:0%
description to this
and<00:00:15.200><c> we</c><00:00:15.440><c> are</c><00:00:15.839><c> very</c><00:00:16.160><c> close</c><00:00:16.560><c> actually</c><00:00:16.880><c> to</c><00:00:17.039><c> being</c>

00:00:17.189 --> 00:00:17.199 align:start position:0%
and we are very close actually to being
 

00:00:17.199 --> 00:00:19.429 align:start position:0%
and we are very close actually to being
done<00:00:17.440><c> with</c><00:00:17.600><c> all</c><00:00:17.680><c> the</c><00:00:18.000><c> major</c><00:00:18.480><c> problems</c><00:00:19.039><c> on</c><00:00:19.199><c> this</c>

00:00:19.429 --> 00:00:19.439 align:start position:0%
done with all the major problems on this
 

00:00:19.439 --> 00:00:19.990 align:start position:0%
done with all the major problems on this
list

00:00:19.990 --> 00:00:20.000 align:start position:0%
list
 

00:00:20.000 --> 00:00:22.390 align:start position:0%
list
that<00:00:20.160><c> i</c><00:00:20.320><c> wanted</c><00:00:20.640><c> to</c><00:00:20.800><c> do</c><00:00:21.359><c> and</c><00:00:21.600><c> probably</c><00:00:22.080><c> at</c><00:00:22.160><c> some</c>

00:00:22.390 --> 00:00:22.400 align:start position:0%
that i wanted to do and probably at some
 

00:00:22.400 --> 00:00:23.750 align:start position:0%
that i wanted to do and probably at some
point<00:00:22.640><c> i</c><00:00:22.720><c> will</c><00:00:22.880><c> finish</c><00:00:23.199><c> up</c><00:00:23.359><c> some</c><00:00:23.519><c> of</c><00:00:23.600><c> these</c>

00:00:23.750 --> 00:00:23.760 align:start position:0%
point i will finish up some of these
 

00:00:23.760 --> 00:00:25.589 align:start position:0%
point i will finish up some of these
easy<00:00:24.080><c> ones</c><00:00:24.320><c> like</c><00:00:24.560><c> contains</c><00:00:25.039><c> duplicates</c><00:00:25.519><c> i</c>

00:00:25.589 --> 00:00:25.599 align:start position:0%
easy ones like contains duplicates i
 

00:00:25.599 --> 00:00:27.349 align:start position:0%
easy ones like contains duplicates i
think<00:00:25.760><c> that's</c><00:00:25.920><c> a</c><00:00:26.000><c> pretty</c><00:00:26.320><c> trivial</c><00:00:26.800><c> problem</c>

00:00:27.349 --> 00:00:27.359 align:start position:0%
think that's a pretty trivial problem
 

00:00:27.359 --> 00:00:28.630 align:start position:0%
think that's a pretty trivial problem
don't<00:00:27.519><c> know</c><00:00:27.680><c> how</c><00:00:27.840><c> many</c><00:00:28.000><c> people</c><00:00:28.240><c> are</c><00:00:28.320><c> waiting</c>

00:00:28.630 --> 00:00:28.640 align:start position:0%
don't know how many people are waiting
 

00:00:28.640 --> 00:00:30.550 align:start position:0%
don't know how many people are waiting
for<00:00:28.800><c> a</c><00:00:28.880><c> solution</c><00:00:29.279><c> on</c><00:00:29.439><c> that</c><00:00:29.599><c> one</c><00:00:30.160><c> but</c><00:00:30.400><c> i</c>

00:00:30.550 --> 00:00:30.560 align:start position:0%
for a solution on that one but i
 

00:00:30.560 --> 00:00:32.229 align:start position:0%
for a solution on that one but i
probably<00:00:30.800><c> will</c><00:00:31.039><c> do</c><00:00:31.199><c> it</c><00:00:31.359><c> eventually</c>

00:00:32.229 --> 00:00:32.239 align:start position:0%
probably will do it eventually
 

00:00:32.239 --> 00:00:34.310 align:start position:0%
probably will do it eventually
just<00:00:32.399><c> for</c><00:00:32.559><c> the</c><00:00:32.719><c> sake</c><00:00:32.960><c> of</c><00:00:33.120><c> completeness</c><00:00:34.160><c> so</c>

00:00:34.310 --> 00:00:34.320 align:start position:0%
just for the sake of completeness so
 

00:00:34.320 --> 00:00:36.630 align:start position:0%
just for the sake of completeness so
this<00:00:34.480><c> is</c><00:00:34.640><c> word</c><00:00:34.880><c> search</c><00:00:35.280><c> 2</c><00:00:35.520><c> and</c><00:00:35.600><c> word</c><00:00:35.920><c> search</c><00:00:36.320><c> 1</c>

00:00:36.630 --> 00:00:36.640 align:start position:0%
this is word search 2 and word search 1
 

00:00:36.640 --> 00:00:38.470 align:start position:0%
this is word search 2 and word search 1
actually<00:00:36.960><c> we</c><00:00:37.200><c> already</c><00:00:37.600><c> solved</c><00:00:38.079><c> on</c><00:00:38.239><c> this</c>

00:00:38.470 --> 00:00:38.480 align:start position:0%
actually we already solved on this
 

00:00:38.480 --> 00:00:40.950 align:start position:0%
actually we already solved on this
channel<00:00:38.879><c> and</c><00:00:38.960><c> that</c><00:00:39.200><c> is</c><00:00:39.360><c> leak</c><00:00:39.600><c> code</c><00:00:39.920><c> 79</c><00:00:40.480><c> so</c><00:00:40.640><c> i</c><00:00:40.800><c> do</c>

00:00:40.950 --> 00:00:40.960 align:start position:0%
channel and that is leak code 79 so i do
 

00:00:40.960 --> 00:00:42.790 align:start position:0%
channel and that is leak code 79 so i do
recommend<00:00:41.520><c> understanding</c><00:00:42.079><c> that</c><00:00:42.399><c> problem</c>

00:00:42.790 --> 00:00:42.800 align:start position:0%
recommend understanding that problem
 

00:00:42.800 --> 00:00:44.310 align:start position:0%
recommend understanding that problem
before<00:00:43.120><c> you</c><00:00:43.280><c> try</c><00:00:43.440><c> to</c><00:00:43.520><c> do</c><00:00:43.680><c> this</c><00:00:43.840><c> one</c><00:00:44.079><c> because</c>

00:00:44.310 --> 00:00:44.320 align:start position:0%
before you try to do this one because
 

00:00:44.320 --> 00:00:46.310 align:start position:0%
before you try to do this one because
this<00:00:44.559><c> is</c><00:00:44.640><c> definitely</c><00:00:45.120><c> an</c><00:00:45.280><c> extension</c><00:00:46.000><c> of</c><00:00:46.079><c> that</c>

00:00:46.310 --> 00:00:46.320 align:start position:0%
this is definitely an extension of that
 

00:00:46.320 --> 00:00:46.709 align:start position:0%
this is definitely an extension of that
one

00:00:46.709 --> 00:00:46.719 align:start position:0%
one
 

00:00:46.719 --> 00:00:49.830 align:start position:0%
one
so<00:00:47.120><c> we</c><00:00:47.280><c> are</c><00:00:47.440><c> given</c><00:00:47.760><c> an</c><00:00:48.000><c> m</c><00:00:48.160><c> by</c><00:00:48.399><c> n</c><00:00:48.640><c> board</c><00:00:49.280><c> exactly</c>

00:00:49.830 --> 00:00:49.840 align:start position:0%
so we are given an m by n board exactly
 

00:00:49.840 --> 00:00:51.110 align:start position:0%
so we are given an m by n board exactly
the<00:00:50.000><c> same</c><00:00:50.320><c> as</c><00:00:50.399><c> we</c><00:00:50.559><c> were</c><00:00:50.800><c> in</c>

00:00:51.110 --> 00:00:51.120 align:start position:0%
the same as we were in
 

00:00:51.120 --> 00:00:53.270 align:start position:0%
the same as we were in
in<00:00:51.280><c> word</c><00:00:51.520><c> search</c><00:00:51.840><c> one</c><00:00:52.160><c> and</c><00:00:52.239><c> we</c><00:00:52.399><c> are</c><00:00:52.559><c> given</c><00:00:52.879><c> a</c>

00:00:53.270 --> 00:00:53.280 align:start position:0%
in word search one and we are given a
 

00:00:53.280 --> 00:00:55.189 align:start position:0%
in word search one and we are given a
list<00:00:53.760><c> of</c><00:00:54.000><c> words</c><00:00:54.399><c> this</c><00:00:54.640><c> time</c>

00:00:55.189 --> 00:00:55.199 align:start position:0%
list of words this time
 

00:00:55.199 --> 00:00:57.189 align:start position:0%
list of words this time
previously<00:00:55.760><c> we</c><00:00:55.920><c> were</c><00:00:56.079><c> just</c><00:00:56.239><c> given</c><00:00:56.559><c> a</c><00:00:56.800><c> single</c>

00:00:57.189 --> 00:00:57.199 align:start position:0%
previously we were just given a single
 

00:00:57.199 --> 00:00:58.709 align:start position:0%
previously we were just given a single
word<00:00:57.440><c> but</c><00:00:57.600><c> in</c><00:00:57.680><c> this</c><00:00:57.840><c> case</c><00:00:58.000><c> we're</c><00:00:58.239><c> given</c><00:00:58.480><c> a</c>

00:00:58.709 --> 00:00:58.719 align:start position:0%
word but in this case we're given a
 

00:00:58.719 --> 00:01:01.910 align:start position:0%
word but in this case we're given a
list<00:00:59.120><c> of</c><00:00:59.280><c> words</c><00:01:00.079><c> and</c><00:01:00.320><c> we</c><00:01:00.559><c> want</c><00:01:00.800><c> to</c><00:01:00.960><c> know</c><00:01:01.520><c> from</c>

00:01:01.910 --> 00:01:01.920 align:start position:0%
list of words and we want to know from
 

00:01:01.920 --> 00:01:03.510 align:start position:0%
list of words and we want to know from
that<00:01:02.239><c> list</c><00:01:02.559><c> of</c><00:01:02.719><c> words</c>

00:01:03.510 --> 00:01:03.520 align:start position:0%
that list of words
 

00:01:03.520 --> 00:01:07.030 align:start position:0%
that list of words
which<00:01:03.920><c> of</c><00:01:04.159><c> those</c><00:01:04.559><c> words</c><00:01:05.119><c> exist</c><00:01:05.920><c> in</c><00:01:06.080><c> this</c><00:01:06.479><c> board</c>

00:01:07.030 --> 00:01:07.040 align:start position:0%
which of those words exist in this board
 

00:01:07.040 --> 00:01:09.190 align:start position:0%
which of those words exist in this board
and<00:01:07.200><c> whichever</c><00:01:07.680><c> ones</c><00:01:08.080><c> do</c><00:01:08.320><c> exist</c><00:01:08.799><c> we</c><00:01:08.960><c> want</c><00:01:09.119><c> to</c>

00:01:09.190 --> 00:01:09.200 align:start position:0%
and whichever ones do exist we want to
 

00:01:09.200 --> 00:01:10.789 align:start position:0%
and whichever ones do exist we want to
return<00:01:09.920><c> those</c><00:01:10.240><c> words</c>

00:01:10.789 --> 00:01:10.799 align:start position:0%
return those words
 

00:01:10.799 --> 00:01:12.789 align:start position:0%
return those words
so<00:01:11.119><c> previously</c><00:01:11.600><c> we</c><00:01:11.840><c> only</c><00:01:12.000><c> wanted</c><00:01:12.240><c> to</c><00:01:12.320><c> know</c><00:01:12.479><c> if</c>

00:01:12.789 --> 00:01:12.799 align:start position:0%
so previously we only wanted to know if
 

00:01:12.799 --> 00:01:13.830 align:start position:0%
so previously we only wanted to know if
one<00:01:13.200><c> word</c>

00:01:13.830 --> 00:01:13.840 align:start position:0%
one word
 

00:01:13.840 --> 00:01:15.990 align:start position:0%
one word
existed<00:01:14.400><c> in</c><00:01:14.479><c> here</c><00:01:14.799><c> or</c><00:01:14.960><c> not</c><00:01:15.200><c> so</c><00:01:15.360><c> we</c><00:01:15.520><c> returned</c>

00:01:15.990 --> 00:01:16.000 align:start position:0%
existed in here or not so we returned
 

00:01:16.000 --> 00:01:16.870 align:start position:0%
existed in here or not so we returned
true<00:01:16.240><c> or</c><00:01:16.400><c> false</c>

00:01:16.870 --> 00:01:16.880 align:start position:0%
true or false
 

00:01:16.880 --> 00:01:18.870 align:start position:0%
true or false
but<00:01:17.040><c> in</c><00:01:17.119><c> this</c><00:01:17.280><c> case</c><00:01:17.600><c> we</c><00:01:17.759><c> want</c><00:01:18.000><c> to</c><00:01:18.080><c> know</c><00:01:18.560><c> how</c>

00:01:18.870 --> 00:01:18.880 align:start position:0%
but in this case we want to know how
 

00:01:18.880 --> 00:01:21.510 align:start position:0%
but in this case we want to know how
many<00:01:19.680><c> or</c><00:01:19.920><c> exactly</c><00:01:20.320><c> which</c><00:01:20.640><c> of</c><00:01:20.720><c> these</c><00:01:20.880><c> words</c><00:01:21.280><c> do</c>

00:01:21.510 --> 00:01:21.520 align:start position:0%
many or exactly which of these words do
 

00:01:21.520 --> 00:01:22.390 align:start position:0%
many or exactly which of these words do
exist

00:01:22.390 --> 00:01:22.400 align:start position:0%
exist
 

00:01:22.400 --> 00:01:25.109 align:start position:0%
exist
so<00:01:22.560><c> if</c><00:01:22.720><c> we</c><00:01:22.960><c> just</c><00:01:23.360><c> reuse</c><00:01:24.159><c> our</c><00:01:24.320><c> solution</c><00:01:24.880><c> from</c>

00:01:25.109 --> 00:01:25.119 align:start position:0%
so if we just reuse our solution from
 

00:01:25.119 --> 00:01:26.789 align:start position:0%
so if we just reuse our solution from
the<00:01:25.360><c> first</c><00:01:25.840><c> word</c><00:01:26.240><c> search</c>

00:01:26.789 --> 00:01:26.799 align:start position:0%
the first word search
 

00:01:26.799 --> 00:01:29.030 align:start position:0%
the first word search
what<00:01:27.040><c> we're</c><00:01:27.200><c> gonna</c><00:01:27.520><c> do</c><00:01:27.759><c> is</c><00:01:27.920><c> we're</c><00:01:28.080><c> gonna</c><00:01:28.320><c> go</c><00:01:28.560><c> to</c>

00:01:29.030 --> 00:01:29.040 align:start position:0%
what we're gonna do is we're gonna go to
 

00:01:29.040 --> 00:01:30.630 align:start position:0%
what we're gonna do is we're gonna go to
every<00:01:29.520><c> single</c><00:01:29.920><c> position</c>

00:01:30.630 --> 00:01:30.640 align:start position:0%
every single position
 

00:01:30.640 --> 00:01:33.749 align:start position:0%
every single position
in<00:01:31.200><c> this</c><00:01:31.759><c> grid</c><00:01:32.320><c> and</c><00:01:32.400><c> we're</c><00:01:32.560><c> gonna</c><00:01:32.960><c> start</c><00:01:33.439><c> a</c>

00:01:33.749 --> 00:01:33.759 align:start position:0%
in this grid and we're gonna start a
 

00:01:33.759 --> 00:01:36.310 align:start position:0%
in this grid and we're gonna start a
depth<00:01:34.240><c> first</c><00:01:34.640><c> search</c><00:01:35.040><c> recursively</c><00:01:35.920><c> on</c><00:01:36.079><c> here</c>

00:01:36.310 --> 00:01:36.320 align:start position:0%
depth first search recursively on here
 

00:01:36.320 --> 00:01:37.030 align:start position:0%
depth first search recursively on here
so<00:01:36.479><c> it's</c><00:01:36.640><c> just</c>

00:01:37.030 --> 00:01:37.040 align:start position:0%
so it's just
 

00:01:37.040 --> 00:01:38.469 align:start position:0%
so it's just
backtracking<00:01:37.840><c> right</c><00:01:38.000><c> we're</c><00:01:38.159><c> gonna</c><00:01:38.320><c> be</c>

00:01:38.469 --> 00:01:38.479 align:start position:0%
backtracking right we're gonna be
 

00:01:38.479 --> 00:01:40.149 align:start position:0%
backtracking right we're gonna be
checking<00:01:38.960><c> brute</c><00:01:39.520><c> force</c>

00:01:40.149 --> 00:01:40.159 align:start position:0%
checking brute force
 

00:01:40.159 --> 00:01:42.069 align:start position:0%
checking brute force
what's<00:01:40.560><c> every</c><00:01:40.880><c> word</c><00:01:41.200><c> we</c><00:01:41.360><c> could</c><00:01:41.520><c> come</c><00:01:41.759><c> up</c><00:01:41.840><c> with</c>

00:01:42.069 --> 00:01:42.079 align:start position:0%
what's every word we could come up with
 

00:01:42.079 --> 00:01:43.270 align:start position:0%
what's every word we could come up with
right<00:01:42.320><c> so</c><00:01:42.560><c> starting</c><00:01:42.960><c> at</c>

00:01:43.270 --> 00:01:43.280 align:start position:0%
right so starting at
 

00:01:43.280 --> 00:01:46.469 align:start position:0%
right so starting at
o<00:01:44.000><c> could</c><00:01:44.399><c> we</c><00:01:44.640><c> come</c><00:01:44.960><c> up</c><00:01:45.360><c> with</c><00:01:45.600><c> a</c><00:01:45.759><c> word</c><00:01:46.159><c> in</c><00:01:46.320><c> our</c>

00:01:46.469 --> 00:01:46.479 align:start position:0%
o could we come up with a word in our
 

00:01:46.479 --> 00:01:48.069 align:start position:0%
o could we come up with a word in our
list<00:01:46.799><c> of</c><00:01:46.880><c> words</c><00:01:47.119><c> right</c><00:01:47.280><c> so</c><00:01:47.439><c> we</c><00:01:47.600><c> just</c><00:01:47.759><c> go</c><00:01:47.920><c> in</c>

00:01:48.069 --> 00:01:48.079 align:start position:0%
list of words right so we just go in
 

00:01:48.079 --> 00:01:48.550 align:start position:0%
list of words right so we just go in
every

00:01:48.550 --> 00:01:48.560 align:start position:0%
every
 

00:01:48.560 --> 00:01:50.310 align:start position:0%
every
all<00:01:48.720><c> four</c><00:01:49.040><c> directions</c><00:01:49.520><c> basically</c><00:01:49.920><c> right</c><00:01:50.159><c> so</c>

00:01:50.310 --> 00:01:50.320 align:start position:0%
all four directions basically right so
 

00:01:50.320 --> 00:01:51.910 align:start position:0%
all four directions basically right so
if<00:01:50.399><c> we</c><00:01:50.479><c> go</c><00:01:50.640><c> here</c><00:01:50.880><c> we'll</c><00:01:51.040><c> get</c><00:01:51.280><c> oe</c>

00:01:51.910 --> 00:01:51.920 align:start position:0%
if we go here we'll get oe
 

00:01:51.920 --> 00:01:54.149 align:start position:0%
if we go here we'll get oe
if<00:01:52.079><c> we</c><00:01:52.159><c> go</c><00:01:52.399><c> this</c><00:01:52.560><c> way</c><00:01:52.720><c> we'll</c><00:01:52.880><c> get</c><00:01:53.119><c> oa</c><00:01:53.920><c> right</c>

00:01:54.149 --> 00:01:54.159 align:start position:0%
if we go this way we'll get oa right
 

00:01:54.159 --> 00:01:55.429 align:start position:0%
if we go this way we'll get oa right
etcetera<00:01:54.640><c> etcetera</c><00:01:55.040><c> we</c><00:01:55.119><c> could</c>

00:01:55.429 --> 00:01:55.439 align:start position:0%
etcetera etcetera we could
 

00:01:55.439 --> 00:01:57.190 align:start position:0%
etcetera etcetera we could
you<00:01:55.600><c> know</c><00:01:55.759><c> possibly</c><00:01:56.159><c> make</c><00:01:56.320><c> a</c><00:01:56.399><c> word</c><00:01:56.719><c> like</c><00:01:56.880><c> this</c>

00:01:57.190 --> 00:01:57.200 align:start position:0%
you know possibly make a word like this
 

00:01:57.200 --> 00:01:59.350 align:start position:0%
you know possibly make a word like this
o<00:01:57.600><c> a</c><00:01:58.000><c> a</c><00:01:58.399><c> n</c>

00:01:59.350 --> 00:01:59.360 align:start position:0%
o a a n
 

00:01:59.360 --> 00:02:02.149 align:start position:0%
o a a n
or<00:01:59.520><c> we</c><00:01:59.680><c> could</c><00:01:59.840><c> make</c><00:02:00.000><c> a</c><00:02:00.079><c> word</c><00:02:00.399><c> like</c><00:02:00.560><c> this</c><00:02:00.880><c> o</c><00:02:01.280><c> a</c><00:02:01.759><c> t</c>

00:02:02.149 --> 00:02:02.159 align:start position:0%
or we could make a word like this o a t
 

00:02:02.159 --> 00:02:02.709 align:start position:0%
or we could make a word like this o a t
h

00:02:02.709 --> 00:02:02.719 align:start position:0%
h
 

00:02:02.719 --> 00:02:05.190 align:start position:0%
h
and<00:02:02.960><c> this</c><00:02:03.280><c> happens</c><00:02:03.759><c> to</c><00:02:03.920><c> be</c><00:02:04.159><c> a</c><00:02:04.399><c> word</c><00:02:04.880><c> in</c><00:02:05.040><c> our</c>

00:02:05.190 --> 00:02:05.200 align:start position:0%
and this happens to be a word in our
 

00:02:05.200 --> 00:02:06.550 align:start position:0%
and this happens to be a word in our
list<00:02:05.520><c> of</c><00:02:05.680><c> words</c>

00:02:06.550 --> 00:02:06.560 align:start position:0%
list of words
 

00:02:06.560 --> 00:02:10.309 align:start position:0%
list of words
so<00:02:06.719><c> we</c><00:02:06.880><c> would</c><00:02:07.119><c> return</c><00:02:07.680><c> we</c><00:02:07.840><c> would</c><00:02:08.000><c> say</c><00:02:08.239><c> okay</c><00:02:08.640><c> o</c><00:02:09.360><c> a</c>

00:02:10.309 --> 00:02:10.319 align:start position:0%
so we would return we would say okay o a
 

00:02:10.319 --> 00:02:13.350 align:start position:0%
so we would return we would say okay o a
t<00:02:11.200><c> h</c><00:02:11.920><c> this</c><00:02:12.160><c> is</c><00:02:12.319><c> a</c><00:02:12.480><c> word</c><00:02:12.720><c> so</c><00:02:12.879><c> this</c><00:02:13.120><c> is</c><00:02:13.200><c> going</c><00:02:13.280><c> to</c>

00:02:13.350 --> 00:02:13.360 align:start position:0%
t h this is a word so this is going to
 

00:02:13.360 --> 00:02:15.110 align:start position:0%
t h this is a word so this is going to
be<00:02:13.520><c> added</c><00:02:13.760><c> to</c><00:02:13.920><c> our</c><00:02:14.080><c> solution</c><00:02:14.720><c> set</c>

00:02:15.110 --> 00:02:15.120 align:start position:0%
be added to our solution set
 

00:02:15.120 --> 00:02:17.910 align:start position:0%
be added to our solution set
so<00:02:15.440><c> it's</c><00:02:15.599><c> going</c><00:02:15.760><c> to</c><00:02:15.840><c> go</c><00:02:16.080><c> in</c><00:02:16.239><c> the</c><00:02:16.560><c> output</c><00:02:17.440><c> so</c><00:02:17.680><c> a</c>

00:02:17.910 --> 00:02:17.920 align:start position:0%
so it's going to go in the output so a
 

00:02:17.920 --> 00:02:20.390 align:start position:0%
so it's going to go in the output so a
very<00:02:18.319><c> brute</c><00:02:18.640><c> force</c><00:02:18.959><c> approach</c><00:02:19.280><c> would</c><00:02:19.440><c> be</c><00:02:19.680><c> so</c>

00:02:20.390 --> 00:02:20.400 align:start position:0%
very brute force approach would be so
 

00:02:20.400 --> 00:02:23.110 align:start position:0%
very brute force approach would be so
for<00:02:20.640><c> every</c><00:02:21.040><c> single</c><00:02:21.440><c> word</c><00:02:22.080><c> we're</c><00:02:22.239><c> gonna</c><00:02:22.560><c> run</c><00:02:22.879><c> a</c>

00:02:23.110 --> 00:02:23.120 align:start position:0%
for every single word we're gonna run a
 

00:02:23.120 --> 00:02:24.229 align:start position:0%
for every single word we're gonna run a
depth<00:02:23.360><c> first</c><00:02:23.680><c> search</c>

00:02:24.229 --> 00:02:24.239 align:start position:0%
depth first search
 

00:02:24.239 --> 00:02:26.869 align:start position:0%
depth first search
starting<00:02:24.720><c> at</c><00:02:25.040><c> every</c><00:02:25.680><c> single</c><00:02:26.239><c> position</c><00:02:26.720><c> and</c>

00:02:26.869 --> 00:02:26.879 align:start position:0%
starting at every single position and
 

00:02:26.879 --> 00:02:28.710 align:start position:0%
starting at every single position and
check<00:02:27.200><c> okay</c><00:02:27.440><c> could</c><00:02:27.599><c> we</c><00:02:27.760><c> make</c><00:02:28.000><c> the</c><00:02:28.160><c> word</c>

00:02:28.710 --> 00:02:28.720 align:start position:0%
check okay could we make the word
 

00:02:28.720 --> 00:02:31.030 align:start position:0%
check okay could we make the word
oath<00:02:29.360><c> starting</c><00:02:29.840><c> from</c><00:02:30.080><c> here</c><00:02:30.480><c> could</c><00:02:30.720><c> we</c><00:02:30.879><c> make</c>

00:02:31.030 --> 00:02:31.040 align:start position:0%
oath starting from here could we make
 

00:02:31.040 --> 00:02:31.990 align:start position:0%
oath starting from here could we make
the<00:02:31.200><c> word</c><00:02:31.440><c> oath</c>

00:02:31.990 --> 00:02:32.000 align:start position:0%
the word oath
 

00:02:32.000 --> 00:02:34.390 align:start position:0%
the word oath
starting<00:02:32.319><c> from</c><00:02:32.560><c> here</c><00:02:32.879><c> etc</c><00:02:33.280><c> etc</c><00:02:33.680><c> until</c><00:02:33.920><c> we</c><00:02:34.000><c> get</c>

00:02:34.390 --> 00:02:34.400 align:start position:0%
starting from here etc etc until we get
 

00:02:34.400 --> 00:02:35.509 align:start position:0%
starting from here etc etc until we get
you<00:02:34.480><c> know</c><00:02:34.800><c> all</c><00:02:34.959><c> the</c><00:02:35.120><c> way</c>

00:02:35.509 --> 00:02:35.519 align:start position:0%
you know all the way
 

00:02:35.519 --> 00:02:37.990 align:start position:0%
you know all the way
to<00:02:35.680><c> the</c><00:02:36.000><c> bottom</c><00:02:36.319><c> of</c><00:02:36.400><c> the</c><00:02:36.560><c> grid</c><00:02:37.599><c> and</c><00:02:37.760><c> we</c><00:02:37.920><c> have</c>

00:02:37.990 --> 00:02:38.000 align:start position:0%
to the bottom of the grid and we have
 

00:02:38.000 --> 00:02:39.589 align:start position:0%
to the bottom of the grid and we have
run<00:02:38.239><c> a</c><00:02:38.319><c> depth</c><00:02:38.480><c> first</c><00:02:38.640><c> search</c><00:02:38.959><c> on</c><00:02:39.120><c> every</c><00:02:39.280><c> single</c>

00:02:39.589 --> 00:02:39.599 align:start position:0%
run a depth first search on every single
 

00:02:39.599 --> 00:02:40.710 align:start position:0%
run a depth first search on every single
position<00:02:39.920><c> now</c><00:02:40.080><c> that's</c><00:02:40.319><c> not</c><00:02:40.480><c> going</c><00:02:40.560><c> to</c><00:02:40.640><c> be</c>

00:02:40.710 --> 00:02:40.720 align:start position:0%
position now that's not going to be
 

00:02:40.720 --> 00:02:41.990 align:start position:0%
position now that's not going to be
super<00:02:41.120><c> efficient</c><00:02:41.599><c> right</c>

00:02:41.990 --> 00:02:42.000 align:start position:0%
super efficient right
 

00:02:42.000 --> 00:02:43.190 align:start position:0%
super efficient right
and<00:02:42.160><c> then</c><00:02:42.400><c> we're</c><00:02:42.560><c> going</c><00:02:42.640><c> to</c><00:02:42.720><c> have</c><00:02:42.800><c> to</c><00:02:42.879><c> do</c><00:02:43.040><c> the</c>

00:02:43.190 --> 00:02:43.200 align:start position:0%
and then we're going to have to do the
 

00:02:43.200 --> 00:02:45.750 align:start position:0%
and then we're going to have to do the
exact<00:02:43.760><c> same</c><00:02:44.000><c> thing</c><00:02:44.239><c> for</c><00:02:44.400><c> the</c><00:02:44.720><c> next</c><00:02:45.120><c> word</c><00:02:45.519><c> p</c>

00:02:45.750 --> 00:02:45.760 align:start position:0%
exact same thing for the next word p
 

00:02:45.760 --> 00:02:48.229 align:start position:0%
exact same thing for the next word p
right<00:02:46.000><c> because</c><00:02:46.720><c> maybe</c><00:02:47.120><c> this</c><00:02:47.440><c> word</c><00:02:48.000><c> could</c>

00:02:48.229 --> 00:02:48.239 align:start position:0%
right because maybe this word could
 

00:02:48.239 --> 00:02:50.070 align:start position:0%
right because maybe this word could
exist<00:02:48.480><c> so</c><00:02:48.640><c> we'd</c><00:02:48.879><c> have</c><00:02:49.040><c> to</c><00:02:49.120><c> brute</c><00:02:49.440><c> force</c><00:02:49.680><c> check</c>

00:02:50.070 --> 00:02:50.080 align:start position:0%
exist so we'd have to brute force check
 

00:02:50.080 --> 00:02:53.430 align:start position:0%
exist so we'd have to brute force check
every<00:02:50.480><c> single</c><00:02:50.879><c> position</c><00:02:51.360><c> etc</c><00:02:51.920><c> etc</c><00:02:52.480><c> etc</c>

00:02:53.430 --> 00:02:53.440 align:start position:0%
every single position etc etc etc
 

00:02:53.440 --> 00:02:55.030 align:start position:0%
every single position etc etc etc
and<00:02:53.680><c> one</c><00:02:53.920><c> way</c><00:02:54.080><c> to</c><00:02:54.319><c> analyze</c><00:02:54.720><c> the</c><00:02:54.800><c> time</c>

00:02:55.030 --> 00:02:55.040 align:start position:0%
and one way to analyze the time
 

00:02:55.040 --> 00:02:56.790 align:start position:0%
and one way to analyze the time
complexity<00:02:55.599><c> of</c><00:02:55.760><c> that</c><00:02:56.000><c> would</c><00:02:56.160><c> be</c><00:02:56.400><c> something</c>

00:02:56.790 --> 00:02:56.800 align:start position:0%
complexity of that would be something
 

00:02:56.800 --> 00:02:57.190 align:start position:0%
complexity of that would be something
like

00:02:57.190 --> 00:02:57.200 align:start position:0%
like
 

00:02:57.200 --> 00:03:00.470 align:start position:0%
like
worst<00:02:57.599><c> case</c><00:02:58.480><c> four</c><00:02:59.040><c> and</c><00:02:59.599><c> four</c><00:02:59.920><c> because</c><00:03:00.159><c> that's</c>

00:03:00.470 --> 00:03:00.480 align:start position:0%
worst case four and four because that's
 

00:03:00.480 --> 00:03:01.670 align:start position:0%
worst case four and four because that's
the<00:03:00.640><c> number</c><00:03:00.879><c> of</c><00:03:01.040><c> directions</c>

00:03:01.670 --> 00:03:01.680 align:start position:0%
the number of directions
 

00:03:01.680 --> 00:03:03.830 align:start position:0%
the number of directions
you<00:03:01.760><c> know</c><00:03:01.920><c> from</c><00:03:02.239><c> a</c><00:03:02.800><c> any</c><00:03:03.040><c> position</c><00:03:03.440><c> we</c><00:03:03.519><c> could</c><00:03:03.680><c> go</c>

00:03:03.830 --> 00:03:03.840 align:start position:0%
you know from a any position we could go
 

00:03:03.840 --> 00:03:05.350 align:start position:0%
you know from a any position we could go
we<00:03:03.920><c> could</c><00:03:04.080><c> go</c><00:03:04.239><c> in</c><00:03:04.400><c> four</c><00:03:04.640><c> directions</c><00:03:05.040><c> now</c><00:03:05.200><c> we</c>

00:03:05.350 --> 00:03:05.360 align:start position:0%
we could go in four directions now we
 

00:03:05.360 --> 00:03:06.949 align:start position:0%
we could go in four directions now we
can't<00:03:05.680><c> revisit</c><00:03:06.159><c> the</c><00:03:06.319><c> same</c>

00:03:06.949 --> 00:03:06.959 align:start position:0%
can't revisit the same
 

00:03:06.959 --> 00:03:10.070 align:start position:0%
can't revisit the same
position<00:03:07.440><c> twice</c><00:03:07.840><c> of</c><00:03:08.000><c> course</c><00:03:08.640><c> so</c><00:03:08.959><c> basically</c>

00:03:10.070 --> 00:03:10.080 align:start position:0%
position twice of course so basically
 

00:03:10.080 --> 00:03:11.589 align:start position:0%
position twice of course so basically
the<00:03:10.400><c> length</c><00:03:10.640><c> of</c><00:03:10.800><c> our</c><00:03:10.879><c> depth</c><00:03:11.040><c> for</c><00:03:11.200><c> search</c><00:03:11.519><c> is</c>

00:03:11.589 --> 00:03:11.599 align:start position:0%
the length of our depth for search is
 

00:03:11.599 --> 00:03:13.030 align:start position:0%
the length of our depth for search is
going<00:03:11.680><c> to</c><00:03:11.840><c> be</c><00:03:11.920><c> the</c><00:03:12.080><c> dimensions</c><00:03:12.560><c> of</c><00:03:12.640><c> the</c><00:03:12.800><c> board</c>

00:03:13.030 --> 00:03:13.040 align:start position:0%
going to be the dimensions of the board
 

00:03:13.040 --> 00:03:14.309 align:start position:0%
going to be the dimensions of the board
let's<00:03:13.280><c> call</c><00:03:13.519><c> that</c><00:03:13.760><c> m</c><00:03:14.000><c> by</c>

00:03:14.309 --> 00:03:14.319 align:start position:0%
let's call that m by
 

00:03:14.319 --> 00:03:16.869 align:start position:0%
let's call that m by
n<00:03:14.959><c> right</c><00:03:15.120><c> so</c><00:03:15.280><c> that's</c><00:03:15.519><c> how</c><00:03:15.680><c> much</c><00:03:15.920><c> one</c><00:03:16.239><c> dfs</c><00:03:16.720><c> would</c>

00:03:16.869 --> 00:03:16.879 align:start position:0%
n right so that's how much one dfs would
 

00:03:16.879 --> 00:03:18.390 align:start position:0%
n right so that's how much one dfs would
be<00:03:17.040><c> and</c><00:03:17.120><c> we're</c><00:03:17.280><c> going</c><00:03:17.360><c> to</c><00:03:17.440><c> be</c><00:03:17.599><c> doing</c><00:03:17.840><c> a</c><00:03:17.920><c> dfs</c>

00:03:18.390 --> 00:03:18.400 align:start position:0%
be and we're going to be doing a dfs
 

00:03:18.400 --> 00:03:19.750 align:start position:0%
be and we're going to be doing a dfs
starting<00:03:18.720><c> at</c><00:03:18.879><c> every</c><00:03:19.040><c> single</c><00:03:19.280><c> position</c><00:03:19.599><c> so</c>

00:03:19.750 --> 00:03:19.760 align:start position:0%
starting at every single position so
 

00:03:19.760 --> 00:03:20.790 align:start position:0%
starting at every single position so
it's<00:03:19.920><c> going</c><00:03:19.920><c> to</c><00:03:20.000><c> be</c><00:03:20.159><c> something</c><00:03:20.480><c> like</c>

00:03:20.790 --> 00:03:20.800 align:start position:0%
it's going to be something like
 

00:03:20.800 --> 00:03:23.350 align:start position:0%
it's going to be something like
m<00:03:20.959><c> by</c><00:03:21.280><c> n</c><00:03:21.440><c> to</c><00:03:21.599><c> the</c><00:03:21.840><c> power</c><00:03:22.480><c> or</c><00:03:22.879><c> and</c><00:03:23.040><c> by</c><00:03:23.200><c> n</c>

00:03:23.350 --> 00:03:23.360 align:start position:0%
m by n to the power or and by n
 

00:03:23.360 --> 00:03:24.229 align:start position:0%
m by n to the power or and by n
multiplied

00:03:24.229 --> 00:03:24.239 align:start position:0%
multiplied
 

00:03:24.239 --> 00:03:26.630 align:start position:0%
multiplied
by<00:03:24.480><c> 4</c><00:03:24.720><c> to</c><00:03:24.879><c> the</c><00:03:24.959><c> power</c><00:03:25.360><c> of</c><00:03:25.519><c> m</c><00:03:25.760><c> n</c><00:03:26.239><c> and</c><00:03:26.400><c> we're</c><00:03:26.560><c> going</c>

00:03:26.630 --> 00:03:26.640 align:start position:0%
by 4 to the power of m n and we're going
 

00:03:26.640 --> 00:03:28.550 align:start position:0%
by 4 to the power of m n and we're going
to<00:03:26.720><c> be</c><00:03:26.799><c> doing</c><00:03:27.040><c> this</c><00:03:27.120><c> for</c><00:03:27.280><c> every</c><00:03:27.519><c> single</c><00:03:27.920><c> word</c>

00:03:28.550 --> 00:03:28.560 align:start position:0%
to be doing this for every single word
 

00:03:28.560 --> 00:03:31.110 align:start position:0%
to be doing this for every single word
so<00:03:28.799><c> basically</c><00:03:29.760><c> let's</c><00:03:29.920><c> say</c><00:03:30.159><c> w</c><00:03:30.640><c> is</c><00:03:30.720><c> the</c><00:03:30.879><c> number</c>

00:03:31.110 --> 00:03:31.120 align:start position:0%
so basically let's say w is the number
 

00:03:31.120 --> 00:03:33.030 align:start position:0%
so basically let's say w is the number
of<00:03:31.280><c> words</c><00:03:31.599><c> so</c><00:03:31.760><c> this</c><00:03:31.840><c> is</c><00:03:32.000><c> going</c><00:03:32.080><c> to</c><00:03:32.159><c> be</c><00:03:32.400><c> super</c>

00:03:33.030 --> 00:03:33.040 align:start position:0%
of words so this is going to be super
 

00:03:33.040 --> 00:03:35.589 align:start position:0%
of words so this is going to be super
inefficient<00:03:33.920><c> now</c><00:03:34.159><c> there</c><00:03:34.400><c> is</c><00:03:34.560><c> a</c><00:03:34.640><c> way</c><00:03:34.879><c> basically</c>

00:03:35.589 --> 00:03:35.599 align:start position:0%
inefficient now there is a way basically
 

00:03:35.599 --> 00:03:37.350 align:start position:0%
inefficient now there is a way basically
where<00:03:35.840><c> we</c><00:03:35.920><c> can</c><00:03:36.080><c> make</c><00:03:36.159><c> this</c><00:03:36.400><c> more</c><00:03:36.640><c> efficient</c>

00:03:37.350 --> 00:03:37.360 align:start position:0%
where we can make this more efficient
 

00:03:37.360 --> 00:03:39.910 align:start position:0%
where we can make this more efficient
where<00:03:37.760><c> we</c><00:03:37.920><c> can</c><00:03:38.000><c> get</c><00:03:38.159><c> rid</c><00:03:38.319><c> of</c><00:03:38.480><c> this</c><00:03:38.799><c> constant</c><00:03:39.360><c> w</c>

00:03:39.910 --> 00:03:39.920 align:start position:0%
where we can get rid of this constant w
 

00:03:39.920 --> 00:03:40.710 align:start position:0%
where we can get rid of this constant w
basically

00:03:40.710 --> 00:03:40.720 align:start position:0%
basically
 

00:03:40.720 --> 00:03:42.789 align:start position:0%
basically
the<00:03:40.959><c> solution</c><00:03:41.360><c> is</c><00:03:41.519><c> going</c><00:03:41.680><c> to</c><00:03:41.920><c> be</c><00:03:42.319><c> we're</c><00:03:42.560><c> only</c>

00:03:42.789 --> 00:03:42.799 align:start position:0%
the solution is going to be we're only
 

00:03:42.799 --> 00:03:44.390 align:start position:0%
the solution is going to be we're only
going<00:03:42.879><c> to</c><00:03:43.040><c> have</c><00:03:43.120><c> to</c><00:03:43.200><c> run</c><00:03:43.440><c> dfs</c>

00:03:44.390 --> 00:03:44.400 align:start position:0%
going to have to run dfs
 

00:03:44.400 --> 00:03:46.710 align:start position:0%
going to have to run dfs
starting<00:03:44.799><c> from</c><00:03:45.040><c> each</c><00:03:45.200><c> position</c><00:03:45.920><c> a</c><00:03:46.239><c> single</c>

00:03:46.710 --> 00:03:46.720 align:start position:0%
starting from each position a single
 

00:03:46.720 --> 00:03:47.670 align:start position:0%
starting from each position a single
time<00:03:47.120><c> because</c>

00:03:47.670 --> 00:03:47.680 align:start position:0%
time because
 

00:03:47.680 --> 00:03:49.910 align:start position:0%
time because
as<00:03:48.000><c> we're</c><00:03:48.319><c> checking</c><00:03:48.720><c> you</c><00:03:48.799><c> know</c><00:03:49.280><c> what</c><00:03:49.440><c> are</c><00:03:49.680><c> all</c>

00:03:49.910 --> 00:03:49.920 align:start position:0%
as we're checking you know what are all
 

00:03:49.920 --> 00:03:51.509 align:start position:0%
as we're checking you know what are all
the<00:03:50.159><c> words</c><00:03:50.640><c> we</c><00:03:50.799><c> can</c><00:03:50.959><c> create</c>

00:03:51.509 --> 00:03:51.519 align:start position:0%
the words we can create
 

00:03:51.519 --> 00:03:53.509 align:start position:0%
the words we can create
starting<00:03:52.000><c> at</c><00:03:52.159><c> this</c><00:03:52.400><c> position</c><00:03:52.879><c> right</c><00:03:53.120><c> starting</c>

00:03:53.509 --> 00:03:53.519 align:start position:0%
starting at this position right starting
 

00:03:53.519 --> 00:03:55.350 align:start position:0%
starting at this position right starting
at<00:03:53.680><c> this</c><00:03:54.239><c> character</c><00:03:54.879><c> a</c>

00:03:55.350 --> 00:03:55.360 align:start position:0%
at this character a
 

00:03:55.360 --> 00:03:56.949 align:start position:0%
at this character a
what<00:03:55.519><c> are</c><00:03:55.760><c> all</c><00:03:55.920><c> the</c><00:03:56.159><c> words</c><00:03:56.480><c> that</c><00:03:56.640><c> we</c><00:03:56.799><c> could</c>

00:03:56.949 --> 00:03:56.959 align:start position:0%
what are all the words that we could
 

00:03:56.959 --> 00:03:58.869 align:start position:0%
what are all the words that we could
create<00:03:57.360><c> now</c><00:03:57.920><c> the</c><00:03:58.080><c> main</c><00:03:58.319><c> idea</c><00:03:58.640><c> that</c><00:03:58.720><c> we're</c>

00:03:58.869 --> 00:03:58.879 align:start position:0%
create now the main idea that we're
 

00:03:58.879 --> 00:03:59.990 align:start position:0%
create now the main idea that we're
going<00:03:58.959><c> to</c><00:03:59.040><c> be</c><00:03:59.200><c> doing</c><00:03:59.519><c> instead</c><00:03:59.760><c> of</c>

00:03:59.990 --> 00:04:00.000 align:start position:0%
going to be doing instead of
 

00:04:00.000 --> 00:04:02.229 align:start position:0%
going to be doing instead of
just<00:04:00.319><c> checking</c><00:04:00.640><c> a</c><00:04:00.959><c> single</c><00:04:01.439><c> word</c><00:04:01.760><c> at</c><00:04:01.920><c> a</c><00:04:02.000><c> time</c>

00:04:02.229 --> 00:04:02.239 align:start position:0%
just checking a single word at a time
 

00:04:02.239 --> 00:04:04.149 align:start position:0%
just checking a single word at a time
like<00:04:02.400><c> running</c><00:04:02.720><c> dfs</c><00:04:03.200><c> on</c><00:04:03.280><c> here</c><00:04:03.519><c> just</c><00:04:03.760><c> to</c><00:04:03.920><c> check</c>

00:04:04.149 --> 00:04:04.159 align:start position:0%
like running dfs on here just to check
 

00:04:04.159 --> 00:04:05.670 align:start position:0%
like running dfs on here just to check
if<00:04:04.400><c> this</c><00:04:04.640><c> word</c><00:04:04.959><c> exists</c>

00:04:05.670 --> 00:04:05.680 align:start position:0%
if this word exists
 

00:04:05.680 --> 00:04:08.470 align:start position:0%
if this word exists
let's<00:04:06.000><c> check</c><00:04:06.439><c> simultaneously</c><00:04:07.680><c> let's</c><00:04:08.000><c> check</c>

00:04:08.470 --> 00:04:08.480 align:start position:0%
let's check simultaneously let's check
 

00:04:08.480 --> 00:04:10.309 align:start position:0%
let's check simultaneously let's check
all<00:04:08.799><c> the</c><00:04:08.959><c> words</c><00:04:09.360><c> in</c><00:04:09.519><c> our</c><00:04:09.760><c> set</c>

00:04:10.309 --> 00:04:10.319 align:start position:0%
all the words in our set
 

00:04:10.319 --> 00:04:12.630 align:start position:0%
all the words in our set
which<00:04:10.640><c> of</c><00:04:10.720><c> them</c><00:04:11.040><c> can</c><00:04:11.360><c> be</c><00:04:11.519><c> created</c><00:04:12.159><c> starting</c><00:04:12.560><c> at</c>

00:04:12.630 --> 00:04:12.640 align:start position:0%
which of them can be created starting at
 

00:04:12.640 --> 00:04:14.470 align:start position:0%
which of them can be created starting at
this<00:04:12.879><c> position</c><00:04:13.280><c> so</c><00:04:13.439><c> that's</c><00:04:13.760><c> the</c><00:04:13.920><c> idea</c><00:04:14.319><c> we're</c>

00:04:14.470 --> 00:04:14.480 align:start position:0%
this position so that's the idea we're
 

00:04:14.480 --> 00:04:15.270 align:start position:0%
this position so that's the idea we're
going<00:04:14.560><c> to</c><00:04:14.640><c> be</c><00:04:14.720><c> using</c>

00:04:15.270 --> 00:04:15.280 align:start position:0%
going to be using
 

00:04:15.280 --> 00:04:16.789 align:start position:0%
going to be using
and<00:04:15.680><c> we're</c><00:04:15.840><c> going</c><00:04:15.920><c> to</c><00:04:16.000><c> be</c><00:04:16.160><c> using</c><00:04:16.400><c> a</c><00:04:16.479><c> data</c>

00:04:16.789 --> 00:04:16.799 align:start position:0%
and we're going to be using a data
 

00:04:16.799 --> 00:04:19.110 align:start position:0%
and we're going to be using a data
structure<00:04:17.600><c> which</c><00:04:17.840><c> is</c><00:04:17.919><c> going</c><00:04:18.000><c> to</c><00:04:18.079><c> be</c><00:04:18.320><c> very</c>

00:04:19.110 --> 00:04:19.120 align:start position:0%
structure which is going to be very
 

00:04:19.120 --> 00:04:20.870 align:start position:0%
structure which is going to be very
useful<00:04:19.680><c> for</c><00:04:19.840><c> it</c><00:04:20.239><c> because</c><00:04:20.479><c> what</c><00:04:20.639><c> we're</c><00:04:20.799><c> going</c>

00:04:20.870 --> 00:04:20.880 align:start position:0%
useful for it because what we're going
 

00:04:20.880 --> 00:04:22.390 align:start position:0%
useful for it because what we're going
to<00:04:20.959><c> notice</c><00:04:21.359><c> is</c><00:04:21.759><c> we</c><00:04:22.000><c> can</c>

00:04:22.390 --> 00:04:22.400 align:start position:0%
to notice is we can
 

00:04:22.400 --> 00:04:24.310 align:start position:0%
to notice is we can
check<00:04:22.800><c> all</c><00:04:23.040><c> words</c><00:04:23.360><c> starting</c><00:04:23.680><c> at</c><00:04:23.759><c> here</c><00:04:24.000><c> based</c>

00:04:24.310 --> 00:04:24.320 align:start position:0%
check all words starting at here based
 

00:04:24.320 --> 00:04:26.150 align:start position:0%
check all words starting at here based
on<00:04:24.400><c> the</c><00:04:24.720><c> prefix</c><00:04:25.360><c> right</c><00:04:25.600><c> so</c>

00:04:26.150 --> 00:04:26.160 align:start position:0%
on the prefix right so
 

00:04:26.160 --> 00:04:28.469 align:start position:0%
on the prefix right so
clearly<00:04:26.639><c> here</c><00:04:26.960><c> we</c><00:04:27.199><c> only</c><00:04:27.440><c> want</c><00:04:27.759><c> words</c><00:04:28.160><c> starting</c>

00:04:28.469 --> 00:04:28.479 align:start position:0%
clearly here we only want words starting
 

00:04:28.479 --> 00:04:29.430 align:start position:0%
clearly here we only want words starting
with<00:04:28.720><c> the</c><00:04:28.880><c> letter</c>

00:04:29.430 --> 00:04:29.440 align:start position:0%
with the letter
 

00:04:29.440 --> 00:04:32.310 align:start position:0%
with the letter
a<00:04:29.759><c> right</c><00:04:29.919><c> so</c><00:04:30.080><c> the</c><00:04:30.400><c> prefix</c><00:04:31.040><c> is</c><00:04:31.199><c> going</c><00:04:31.280><c> to</c><00:04:31.360><c> be</c><00:04:31.680><c> a</c>

00:04:32.310 --> 00:04:32.320 align:start position:0%
a right so the prefix is going to be a
 

00:04:32.320 --> 00:04:32.710 align:start position:0%
a right so the prefix is going to be a
and

00:04:32.710 --> 00:04:32.720 align:start position:0%
and
 

00:04:32.720 --> 00:04:34.710 align:start position:0%
and
what<00:04:32.960><c> kind</c><00:04:33.199><c> of</c><00:04:33.360><c> data</c><00:04:33.600><c> structure</c><00:04:34.000><c> can</c><00:04:34.160><c> help</c><00:04:34.479><c> us</c>

00:04:34.710 --> 00:04:34.720 align:start position:0%
what kind of data structure can help us
 

00:04:34.720 --> 00:04:36.390 align:start position:0%
what kind of data structure can help us
organize<00:04:35.520><c> these</c><00:04:35.840><c> words</c>

00:04:36.390 --> 00:04:36.400 align:start position:0%
organize these words
 

00:04:36.400 --> 00:04:39.510 align:start position:0%
organize these words
based<00:04:36.720><c> on</c><00:04:36.960><c> their</c><00:04:37.280><c> prefix</c><00:04:38.160><c> guess</c><00:04:38.880><c> what</c>

00:04:39.510 --> 00:04:39.520 align:start position:0%
based on their prefix guess what
 

00:04:39.520 --> 00:04:40.950 align:start position:0%
based on their prefix guess what
either<00:04:39.919><c> you</c><00:04:40.080><c> have</c><00:04:40.160><c> heard</c><00:04:40.400><c> of</c><00:04:40.479><c> this</c><00:04:40.720><c> data</c>

00:04:40.950 --> 00:04:40.960 align:start position:0%
either you have heard of this data
 

00:04:40.960 --> 00:04:42.950 align:start position:0%
either you have heard of this data
structure<00:04:41.360><c> before</c><00:04:41.919><c> or</c><00:04:42.080><c> you</c><00:04:42.320><c> haven't</c><00:04:42.720><c> if</c><00:04:42.800><c> you</c>

00:04:42.950 --> 00:04:42.960 align:start position:0%
structure before or you haven't if you
 

00:04:42.960 --> 00:04:44.950 align:start position:0%
structure before or you haven't if you
haven't<00:04:43.280><c> heard</c><00:04:43.520><c> of</c><00:04:43.600><c> this</c><00:04:43.759><c> data</c><00:04:44.080><c> structure</c>

00:04:44.950 --> 00:04:44.960 align:start position:0%
haven't heard of this data structure
 

00:04:44.960 --> 00:04:46.710 align:start position:0%
haven't heard of this data structure
then<00:04:45.120><c> you</c><00:04:45.360><c> probably</c><00:04:45.759><c> don't</c><00:04:46.000><c> have</c><00:04:46.160><c> a</c><00:04:46.240><c> chance</c><00:04:46.560><c> of</c>

00:04:46.710 --> 00:04:46.720 align:start position:0%
then you probably don't have a chance of
 

00:04:46.720 --> 00:04:49.189 align:start position:0%
then you probably don't have a chance of
solving<00:04:47.040><c> this</c><00:04:47.280><c> problem</c><00:04:47.759><c> in</c><00:04:47.840><c> the</c><00:04:48.080><c> optimal</c><00:04:48.639><c> way</c>

00:04:49.189 --> 00:04:49.199 align:start position:0%
solving this problem in the optimal way
 

00:04:49.199 --> 00:04:51.110 align:start position:0%
solving this problem in the optimal way
so<00:04:49.440><c> i</c><00:04:49.600><c> would</c><00:04:50.160><c> learn</c><00:04:50.479><c> what</c><00:04:50.639><c> this</c><00:04:50.880><c> data</c>

00:04:51.110 --> 00:04:51.120 align:start position:0%
so i would learn what this data
 

00:04:51.120 --> 00:04:53.030 align:start position:0%
so i would learn what this data
structure<00:04:51.600><c> is</c><00:04:51.759><c> first</c><00:04:52.080><c> but</c><00:04:52.240><c> if</c><00:04:52.320><c> you</c><00:04:52.479><c> do</c><00:04:52.720><c> already</c>

00:04:53.030 --> 00:04:53.040 align:start position:0%
structure is first but if you do already
 

00:04:53.040 --> 00:04:53.510 align:start position:0%
structure is first but if you do already
know<00:04:53.280><c> it</c>

00:04:53.510 --> 00:04:53.520 align:start position:0%
know it
 

00:04:53.520 --> 00:04:55.590 align:start position:0%
know it
the<00:04:53.680><c> solution</c><00:04:54.160><c> is</c><00:04:54.320><c> actually</c><00:04:54.720><c> not</c><00:04:54.960><c> too</c><00:04:55.199><c> bad</c><00:04:55.440><c> to</c>

00:04:55.590 --> 00:04:55.600 align:start position:0%
the solution is actually not too bad to
 

00:04:55.600 --> 00:04:56.950 align:start position:0%
the solution is actually not too bad to
implement<00:04:56.320><c> so</c><00:04:56.560><c> this</c>

00:04:56.950 --> 00:04:56.960 align:start position:0%
implement so this
 

00:04:56.960 --> 00:04:58.150 align:start position:0%
implement so this
the<00:04:57.120><c> data</c><00:04:57.360><c> structure</c><00:04:57.680><c> we're</c><00:04:57.840><c> going</c><00:04:57.919><c> to</c><00:04:58.000><c> be</c>

00:04:58.150 --> 00:04:58.160 align:start position:0%
the data structure we're going to be
 

00:04:58.160 --> 00:05:00.310 align:start position:0%
the data structure we're going to be
using<00:04:58.479><c> is</c><00:04:58.639><c> a</c><00:04:58.880><c> try</c><00:04:59.520><c> aka</c>

00:05:00.310 --> 00:05:00.320 align:start position:0%
using is a try aka
 

00:05:00.320 --> 00:05:02.710 align:start position:0%
using is a try aka
a<00:05:00.639><c> prefix</c><00:05:01.360><c> tree</c><00:05:01.759><c> which</c><00:05:02.000><c> is</c><00:05:02.160><c> going</c><00:05:02.240><c> to</c><00:05:02.320><c> help</c><00:05:02.479><c> us</c>

00:05:02.710 --> 00:05:02.720 align:start position:0%
a prefix tree which is going to help us
 

00:05:02.720 --> 00:05:04.550 align:start position:0%
a prefix tree which is going to help us
organize<00:05:03.120><c> these</c><00:05:03.360><c> words</c><00:05:03.759><c> based</c><00:05:04.080><c> on</c><00:05:04.240><c> their</c>

00:05:04.550 --> 00:05:04.560 align:start position:0%
organize these words based on their
 

00:05:04.560 --> 00:05:05.510 align:start position:0%
organize these words based on their
prefixes

00:05:05.510 --> 00:05:05.520 align:start position:0%
prefixes
 

00:05:05.520 --> 00:05:07.430 align:start position:0%
prefixes
so<00:05:05.759><c> let's</c><00:05:05.919><c> say</c><00:05:06.080><c> we</c><00:05:06.240><c> had</c><00:05:06.320><c> a</c><00:05:06.400><c> pretty</c><00:05:06.720><c> small</c><00:05:07.120><c> grid</c>

00:05:07.430 --> 00:05:07.440 align:start position:0%
so let's say we had a pretty small grid
 

00:05:07.440 --> 00:05:09.350 align:start position:0%
so let's say we had a pretty small grid
and<00:05:07.600><c> we</c><00:05:07.759><c> had</c><00:05:07.840><c> a</c><00:05:07.919><c> pretty</c><00:05:08.240><c> small</c><00:05:08.560><c> list</c><00:05:08.800><c> of</c><00:05:08.960><c> words</c>

00:05:09.350 --> 00:05:09.360 align:start position:0%
and we had a pretty small list of words
 

00:05:09.360 --> 00:05:09.990 align:start position:0%
and we had a pretty small list of words
the<00:05:09.440><c> words</c><00:05:09.680><c> are</c>

00:05:09.990 --> 00:05:10.000 align:start position:0%
the words are
 

00:05:10.000 --> 00:05:12.790 align:start position:0%
the words are
app<00:05:10.479><c> ape</c><00:05:11.039><c> and</c><00:05:11.280><c> ace</c><00:05:11.840><c> so</c><00:05:12.000><c> we</c><00:05:12.160><c> want</c><00:05:12.320><c> to</c><00:05:12.400><c> know</c><00:05:12.560><c> which</c>

00:05:12.790 --> 00:05:12.800 align:start position:0%
app ape and ace so we want to know which
 

00:05:12.800 --> 00:05:14.310 align:start position:0%
app ape and ace so we want to know which
of<00:05:12.880><c> these</c><00:05:13.120><c> words</c><00:05:13.520><c> can</c><00:05:13.680><c> be</c><00:05:13.919><c> found</c>

00:05:14.310 --> 00:05:14.320 align:start position:0%
of these words can be found
 

00:05:14.320 --> 00:05:16.790 align:start position:0%
of these words can be found
inside<00:05:14.720><c> of</c><00:05:14.800><c> this</c><00:05:15.039><c> grid</c><00:05:15.759><c> now</c><00:05:16.080><c> let's</c><00:05:16.320><c> use</c><00:05:16.639><c> the</c>

00:05:16.790 --> 00:05:16.800 align:start position:0%
inside of this grid now let's use the
 

00:05:16.800 --> 00:05:18.790 align:start position:0%
inside of this grid now let's use the
idea<00:05:17.199><c> of</c><00:05:17.440><c> prefixes</c><00:05:18.080><c> that</c><00:05:18.240><c> i</c><00:05:18.320><c> mentioned</c><00:05:18.639><c> so</c>

00:05:18.790 --> 00:05:18.800 align:start position:0%
idea of prefixes that i mentioned so
 

00:05:18.800 --> 00:05:20.550 align:start position:0%
idea of prefixes that i mentioned so
let's<00:05:18.960><c> say</c><00:05:19.120><c> we're</c><00:05:19.280><c> going</c><00:05:19.360><c> to</c><00:05:19.520><c> start</c><00:05:19.840><c> our</c><00:05:19.919><c> dfs</c>

00:05:20.550 --> 00:05:20.560 align:start position:0%
let's say we're going to start our dfs
 

00:05:20.560 --> 00:05:22.390 align:start position:0%
let's say we're going to start our dfs
here<00:05:20.880><c> right</c><00:05:21.120><c> so</c><00:05:21.280><c> this</c><00:05:21.520><c> is</c><00:05:21.600><c> the</c><00:05:21.680><c> first</c><00:05:22.000><c> position</c>

00:05:22.390 --> 00:05:22.400 align:start position:0%
here right so this is the first position
 

00:05:22.400 --> 00:05:23.510 align:start position:0%
here right so this is the first position
we're<00:05:22.560><c> going</c><00:05:22.639><c> to</c><00:05:22.720><c> be</c><00:05:22.880><c> at</c><00:05:23.039><c> and</c><00:05:23.120><c> we</c><00:05:23.280><c> can't</c>

00:05:23.510 --> 00:05:23.520 align:start position:0%
we're going to be at and we can't
 

00:05:23.520 --> 00:05:23.990 align:start position:0%
we're going to be at and we can't
revisit

00:05:23.990 --> 00:05:24.000 align:start position:0%
revisit
 

00:05:24.000 --> 00:05:26.150 align:start position:0%
revisit
this<00:05:24.240><c> position</c><00:05:24.720><c> twice</c><00:05:25.199><c> makes</c><00:05:25.520><c> sense</c><00:05:25.759><c> so</c><00:05:25.919><c> far</c>

00:05:26.150 --> 00:05:26.160 align:start position:0%
this position twice makes sense so far
 

00:05:26.160 --> 00:05:28.150 align:start position:0%
this position twice makes sense so far
so<00:05:26.479><c> so</c><00:05:26.720><c> far</c><00:05:26.960><c> we</c><00:05:27.039><c> have</c><00:05:27.199><c> a</c><00:05:27.360><c> single</c><00:05:27.680><c> character</c>

00:05:28.150 --> 00:05:28.160 align:start position:0%
so so far we have a single character
 

00:05:28.160 --> 00:05:28.469 align:start position:0%
so so far we have a single character
right

00:05:28.469 --> 00:05:28.479 align:start position:0%
right
 

00:05:28.479 --> 00:05:31.510 align:start position:0%
right
we<00:05:28.639><c> have</c><00:05:28.800><c> found</c><00:05:29.039><c> the</c><00:05:29.199><c> character</c><00:05:29.840><c> a</c><00:05:30.400><c> right</c><00:05:30.880><c> so</c>

00:05:31.510 --> 00:05:31.520 align:start position:0%
we have found the character a right so
 

00:05:31.520 --> 00:05:33.510 align:start position:0%
we have found the character a right so
we<00:05:31.680><c> can</c><00:05:31.840><c> basically</c><00:05:32.560><c> we</c><00:05:32.720><c> want</c><00:05:32.880><c> to</c><00:05:32.960><c> know</c><00:05:33.199><c> all</c><00:05:33.360><c> the</c>

00:05:33.510 --> 00:05:33.520 align:start position:0%
we can basically we want to know all the
 

00:05:33.520 --> 00:05:35.110 align:start position:0%
we can basically we want to know all the
words<00:05:33.840><c> that</c><00:05:33.919><c> we</c><00:05:34.080><c> could</c><00:05:34.240><c> create</c><00:05:34.639><c> starting</c><00:05:34.960><c> at</c>

00:05:35.110 --> 00:05:35.120 align:start position:0%
words that we could create starting at
 

00:05:35.120 --> 00:05:36.629 align:start position:0%
words that we could create starting at
this<00:05:35.280><c> position</c><00:05:35.680><c> dfs</c><00:05:36.080><c> from</c><00:05:36.320><c> here</c><00:05:36.479><c> and</c><00:05:36.560><c> of</c>

00:05:36.629 --> 00:05:36.639 align:start position:0%
this position dfs from here and of
 

00:05:36.639 --> 00:05:37.830 align:start position:0%
this position dfs from here and of
course<00:05:36.800><c> then</c><00:05:36.960><c> we're</c><00:05:37.120><c> going</c><00:05:37.199><c> to</c><00:05:37.280><c> repeat</c><00:05:37.680><c> that</c>

00:05:37.830 --> 00:05:37.840 align:start position:0%
course then we're going to repeat that
 

00:05:37.840 --> 00:05:39.510 align:start position:0%
course then we're going to repeat that
by<00:05:38.080><c> doing</c><00:05:38.240><c> a</c><00:05:38.320><c> dfs</c><00:05:38.800><c> from</c><00:05:38.960><c> here</c>

00:05:39.510 --> 00:05:39.520 align:start position:0%
by doing a dfs from here
 

00:05:39.520 --> 00:05:41.350 align:start position:0%
by doing a dfs from here
here<00:05:40.080><c> and</c><00:05:40.240><c> here</c><00:05:40.479><c> but</c><00:05:40.639><c> we're</c><00:05:40.880><c> so</c><00:05:41.039><c> far</c><00:05:41.199><c> we're</c>

00:05:41.350 --> 00:05:41.360 align:start position:0%
here and here but we're so far we're
 

00:05:41.360 --> 00:05:42.550 align:start position:0%
here and here but we're so far we're
only<00:05:41.680><c> starting</c><00:05:42.000><c> here</c>

00:05:42.550 --> 00:05:42.560 align:start position:0%
only starting here
 

00:05:42.560 --> 00:05:45.270 align:start position:0%
only starting here
and<00:05:42.960><c> of</c><00:05:43.440><c> our</c><00:05:43.680><c> entire</c><00:05:44.160><c> list</c><00:05:44.479><c> of</c><00:05:44.560><c> words</c><00:05:44.960><c> we</c><00:05:45.120><c> want</c>

00:05:45.270 --> 00:05:45.280 align:start position:0%
and of our entire list of words we want
 

00:05:45.280 --> 00:05:46.629 align:start position:0%
and of our entire list of words we want
to<00:05:45.440><c> know</c><00:05:45.759><c> which</c><00:05:46.080><c> one</c><00:05:46.240><c> of</c><00:05:46.320><c> them</c>

00:05:46.629 --> 00:05:46.639 align:start position:0%
to know which one of them
 

00:05:46.639 --> 00:05:49.990 align:start position:0%
to know which one of them
have<00:05:46.880><c> a</c><00:05:47.039><c> prefix</c><00:05:48.000><c> of</c><00:05:48.639><c> a</c><00:05:49.199><c> because</c>

00:05:49.990 --> 00:05:50.000 align:start position:0%
have a prefix of a because
 

00:05:50.000 --> 00:05:53.029 align:start position:0%
have a prefix of a because
if<00:05:50.400><c> you</c><00:05:50.560><c> know</c><00:05:50.639><c> if</c><00:05:50.800><c> we</c><00:05:50.960><c> had</c><00:05:51.440><c> a</c><00:05:51.680><c> word</c><00:05:52.080><c> such</c><00:05:52.320><c> as</c>

00:05:53.029 --> 00:05:53.039 align:start position:0%
if you know if we had a word such as
 

00:05:53.039 --> 00:05:55.830 align:start position:0%
if you know if we had a word such as
bat<00:05:53.600><c> then</c><00:05:53.840><c> we'd</c><00:05:54.000><c> say</c><00:05:54.240><c> okay</c><00:05:54.800><c> bat</c><00:05:55.280><c> does</c><00:05:55.520><c> not</c>

00:05:55.830 --> 00:05:55.840 align:start position:0%
bat then we'd say okay bat does not
 

00:05:55.840 --> 00:05:57.590 align:start position:0%
bat then we'd say okay bat does not
start<00:05:56.160><c> with</c><00:05:56.319><c> an</c><00:05:56.479><c> a</c><00:05:56.720><c> so</c><00:05:56.880><c> basically</c><00:05:57.280><c> we</c><00:05:57.440><c> don't</c>

00:05:57.590 --> 00:05:57.600 align:start position:0%
start with an a so basically we don't
 

00:05:57.600 --> 00:05:58.870 align:start position:0%
start with an a so basically we don't
even<00:05:57.759><c> have</c><00:05:57.919><c> to</c><00:05:58.000><c> consider</c><00:05:58.479><c> that</c><00:05:58.639><c> right</c><00:05:58.800><c> we</c>

00:05:58.870 --> 00:05:58.880 align:start position:0%
even have to consider that right we
 

00:05:58.880 --> 00:06:00.710 align:start position:0%
even have to consider that right we
don't<00:05:59.039><c> have</c><00:05:59.120><c> to</c><00:05:59.280><c> run</c><00:05:59.440><c> a</c><00:05:59.520><c> dfs</c><00:06:00.080><c> on</c><00:06:00.240><c> here</c>

00:06:00.710 --> 00:06:00.720 align:start position:0%
don't have to run a dfs on here
 

00:06:00.720 --> 00:06:02.390 align:start position:0%
don't have to run a dfs on here
searching<00:06:01.120><c> for</c><00:06:01.280><c> the</c><00:06:01.360><c> word</c><00:06:01.680><c> bat</c><00:06:02.080><c> it</c><00:06:02.160><c> doesn't</c>

00:06:02.390 --> 00:06:02.400 align:start position:0%
searching for the word bat it doesn't
 

00:06:02.400 --> 00:06:04.309 align:start position:0%
searching for the word bat it doesn't
even<00:06:02.639><c> exist</c><00:06:03.039><c> in</c><00:06:03.120><c> this</c><00:06:03.360><c> position</c>

00:06:04.309 --> 00:06:04.319 align:start position:0%
even exist in this position
 

00:06:04.319 --> 00:06:06.390 align:start position:0%
even exist in this position
right<00:06:04.479><c> the</c><00:06:04.720><c> letter</c><00:06:05.039><c> b</c><00:06:05.280><c> does</c><00:06:05.440><c> not</c><00:06:05.600><c> start</c><00:06:06.000><c> here</c>

00:06:06.390 --> 00:06:06.400 align:start position:0%
right the letter b does not start here
 

00:06:06.400 --> 00:06:07.909 align:start position:0%
right the letter b does not start here
so<00:06:06.560><c> what</c><00:06:06.720><c> we're</c><00:06:06.880><c> gonna</c><00:06:07.120><c> have</c><00:06:07.199><c> to</c><00:06:07.440><c> do</c><00:06:07.759><c> is</c>

00:06:07.909 --> 00:06:07.919 align:start position:0%
so what we're gonna have to do is
 

00:06:07.919 --> 00:06:09.749 align:start position:0%
so what we're gonna have to do is
basically<00:06:08.400><c> go</c><00:06:08.560><c> through</c><00:06:08.800><c> every</c><00:06:09.120><c> single</c><00:06:09.440><c> word</c>

00:06:09.749 --> 00:06:09.759 align:start position:0%
basically go through every single word
 

00:06:09.759 --> 00:06:11.270 align:start position:0%
basically go through every single word
this<00:06:10.000><c> word</c><00:06:10.240><c> starts</c><00:06:10.560><c> with</c><00:06:10.720><c> an</c><00:06:10.880><c> a</c>

00:06:11.270 --> 00:06:11.280 align:start position:0%
this word starts with an a
 

00:06:11.280 --> 00:06:13.189 align:start position:0%
this word starts with an a
this<00:06:11.440><c> word</c><00:06:11.759><c> starts</c><00:06:12.000><c> with</c><00:06:12.160><c> an</c><00:06:12.400><c> a</c><00:06:12.720><c> this</c><00:06:12.960><c> word</c>

00:06:13.189 --> 00:06:13.199 align:start position:0%
this word starts with an a this word
 

00:06:13.199 --> 00:06:14.870 align:start position:0%
this word starts with an a this word
starts<00:06:13.520><c> with</c><00:06:13.600><c> an</c><00:06:13.759><c> a</c><00:06:13.840><c> so</c><00:06:14.000><c> potentially</c>

00:06:14.870 --> 00:06:14.880 align:start position:0%
starts with an a so potentially
 

00:06:14.880 --> 00:06:18.070 align:start position:0%
starts with an a so potentially
so<00:06:15.120><c> far</c><00:06:15.680><c> all</c><00:06:16.000><c> of</c><00:06:16.160><c> the</c><00:06:16.319><c> words</c><00:06:17.039><c> could</c><00:06:17.759><c> be</c>

00:06:18.070 --> 00:06:18.080 align:start position:0%
so far all of the words could be
 

00:06:18.080 --> 00:06:19.749 align:start position:0%
so far all of the words could be
found<00:06:18.479><c> starting</c><00:06:18.800><c> at</c><00:06:18.960><c> this</c><00:06:19.120><c> position</c><00:06:19.440><c> right</c><00:06:19.600><c> so</c>

00:06:19.749 --> 00:06:19.759 align:start position:0%
found starting at this position right so
 

00:06:19.759 --> 00:06:21.909 align:start position:0%
found starting at this position right so
we<00:06:19.919><c> haven't</c><00:06:20.240><c> eliminated</c><00:06:20.960><c> any</c><00:06:21.199><c> of</c><00:06:21.280><c> these</c><00:06:21.600><c> just</c>

00:06:21.909 --> 00:06:21.919 align:start position:0%
we haven't eliminated any of these just
 

00:06:21.919 --> 00:06:22.629 align:start position:0%
we haven't eliminated any of these just
yet

00:06:22.629 --> 00:06:22.639 align:start position:0%
yet
 

00:06:22.639 --> 00:06:25.189 align:start position:0%
yet
so<00:06:22.960><c> now</c><00:06:23.199><c> let's</c><00:06:23.440><c> say</c><00:06:23.600><c> we</c><00:06:23.759><c> go</c><00:06:24.240><c> down</c><00:06:24.720><c> first</c><00:06:25.039><c> right</c>

00:06:25.189 --> 00:06:25.199 align:start position:0%
so now let's say we go down first right
 

00:06:25.199 --> 00:06:26.070 align:start position:0%
so now let's say we go down first right
of<00:06:25.280><c> course</c><00:06:25.520><c> if</c><00:06:25.680><c> we</c><00:06:25.759><c> go</c>

00:06:26.070 --> 00:06:26.080 align:start position:0%
of course if we go
 

00:06:26.080 --> 00:06:28.070 align:start position:0%
of course if we go
up<00:06:26.319><c> that's</c><00:06:26.720><c> out</c><00:06:26.880><c> of</c><00:06:27.039><c> bounds</c><00:06:27.520><c> so</c><00:06:27.919><c> you</c><00:06:28.000><c> know</c>

00:06:28.070 --> 00:06:28.080 align:start position:0%
up that's out of bounds so you know
 

00:06:28.080 --> 00:06:29.350 align:start position:0%
up that's out of bounds so you know
we're<00:06:28.240><c> just</c><00:06:28.400><c> going</c><00:06:28.479><c> to</c><00:06:28.560><c> return</c><00:06:28.960><c> there</c><00:06:29.120><c> because</c>

00:06:29.350 --> 00:06:29.360 align:start position:0%
we're just going to return there because
 

00:06:29.360 --> 00:06:30.390 align:start position:0%
we're just going to return there because
we're<00:06:29.440><c> going</c><00:06:29.520><c> to</c><00:06:29.600><c> see</c><00:06:29.759><c> okay</c>

00:06:30.390 --> 00:06:30.400 align:start position:0%
we're going to see okay
 

00:06:30.400 --> 00:06:33.350 align:start position:0%
we're going to see okay
the<00:06:30.720><c> it</c><00:06:30.960><c> ended</c><00:06:31.199><c> with</c><00:06:31.360><c> the</c><00:06:31.680><c> the</c><00:06:32.080><c> word</c><00:06:32.400><c> a</c><00:06:32.960><c> a</c><00:06:33.199><c> does</c>

00:06:33.350 --> 00:06:33.360 align:start position:0%
the it ended with the the word a a does
 

00:06:33.360 --> 00:06:34.950 align:start position:0%
the it ended with the the word a a does
not<00:06:33.600><c> exist</c><00:06:33.919><c> in</c><00:06:34.080><c> our</c><00:06:34.160><c> list</c><00:06:34.400><c> of</c><00:06:34.479><c> words</c><00:06:34.720><c> so</c><00:06:34.880><c> of</c>

00:06:34.950 --> 00:06:34.960 align:start position:0%
not exist in our list of words so of
 

00:06:34.960 --> 00:06:36.070 align:start position:0%
not exist in our list of words so of
course<00:06:35.120><c> we're</c><00:06:35.280><c> not</c><00:06:35.360><c> gonna</c><00:06:35.520><c> do</c><00:06:35.680><c> that</c><00:06:35.759><c> of</c><00:06:35.840><c> course</c>

00:06:36.070 --> 00:06:36.080 align:start position:0%
course we're not gonna do that of course
 

00:06:36.080 --> 00:06:36.950 align:start position:0%
course we're not gonna do that of course
if<00:06:36.240><c> we</c><00:06:36.319><c> went</c><00:06:36.560><c> left</c>

00:06:36.950 --> 00:06:36.960 align:start position:0%
if we went left
 

00:06:36.960 --> 00:06:39.029 align:start position:0%
if we went left
that<00:06:37.120><c> also</c><00:06:37.440><c> would</c><00:06:37.600><c> not</c><00:06:37.759><c> work</c><00:06:38.080><c> but</c><00:06:38.240><c> we</c><00:06:38.400><c> can</c><00:06:38.720><c> go</c>

00:06:39.029 --> 00:06:39.039 align:start position:0%
that also would not work but we can go
 

00:06:39.039 --> 00:06:40.070 align:start position:0%
that also would not work but we can go
down<00:06:39.520><c> so</c><00:06:39.680><c> let's</c>

00:06:40.070 --> 00:06:40.080 align:start position:0%
down so let's
 

00:06:40.080 --> 00:06:43.270 align:start position:0%
down so let's
start<00:06:40.400><c> going</c><00:06:40.639><c> down</c><00:06:40.960><c> first</c><00:06:41.600><c> so</c><00:06:41.759><c> we</c><00:06:41.919><c> add</c><00:06:42.160><c> a</c><00:06:42.400><c> p</c><00:06:42.880><c> to</c>

00:06:43.270 --> 00:06:43.280 align:start position:0%
start going down first so we add a p to
 

00:06:43.280 --> 00:06:46.230 align:start position:0%
start going down first so we add a p to
our<00:06:43.680><c> word</c><00:06:44.080><c> so</c><00:06:44.319><c> far</c><00:06:44.560><c> so</c><00:06:44.720><c> so</c><00:06:44.960><c> far</c><00:06:45.120><c> we</c><00:06:45.280><c> have</c><00:06:45.520><c> ap</c><00:06:46.080><c> so</c>

00:06:46.230 --> 00:06:46.240 align:start position:0%
our word so far so so far we have ap so
 

00:06:46.240 --> 00:06:47.590 align:start position:0%
our word so far so so far we have ap so
then<00:06:46.400><c> again</c><00:06:46.639><c> we're</c><00:06:46.800><c> going</c><00:06:46.960><c> to</c><00:06:47.120><c> just</c><00:06:47.360><c> go</c>

00:06:47.590 --> 00:06:47.600 align:start position:0%
then again we're going to just go
 

00:06:47.600 --> 00:06:49.189 align:start position:0%
then again we're going to just go
through<00:06:47.840><c> every</c><00:06:48.080><c> single</c><00:06:48.400><c> word</c><00:06:48.720><c> check</c><00:06:48.960><c> okay</c>

00:06:49.189 --> 00:06:49.199 align:start position:0%
through every single word check okay
 

00:06:49.199 --> 00:06:50.469 align:start position:0%
through every single word check okay
does<00:06:49.360><c> this</c><00:06:49.599><c> start</c><00:06:49.759><c> with</c><00:06:50.000><c> ap</c>

00:06:50.469 --> 00:06:50.479 align:start position:0%
does this start with ap
 

00:06:50.479 --> 00:06:52.950 align:start position:0%
does this start with ap
yes<00:06:51.039><c> does</c><00:06:51.280><c> this</c><00:06:51.520><c> start</c><00:06:51.680><c> with</c><00:06:51.840><c> ap</c><00:06:52.240><c> yes</c><00:06:52.720><c> does</c>

00:06:52.950 --> 00:06:52.960 align:start position:0%
yes does this start with ap yes does
 

00:06:52.960 --> 00:06:53.909 align:start position:0%
yes does this start with ap yes does
this<00:06:53.120><c> start</c><00:06:53.360><c> with</c><00:06:53.520><c> ap</c>

00:06:53.909 --> 00:06:53.919 align:start position:0%
this start with ap
 

00:06:53.919 --> 00:06:55.830 align:start position:0%
this start with ap
no<00:06:54.240><c> so</c><00:06:54.560><c> so</c><00:06:54.720><c> we</c><00:06:54.880><c> don't</c><00:06:54.960><c> want</c><00:06:55.120><c> to</c><00:06:55.199><c> consider</c><00:06:55.680><c> this</c>

00:06:55.830 --> 00:06:55.840 align:start position:0%
no so so we don't want to consider this
 

00:06:55.840 --> 00:06:57.670 align:start position:0%
no so so we don't want to consider this
word<00:06:56.160><c> anymore</c><00:06:56.479><c> right</c><00:06:56.800><c> but</c><00:06:57.039><c> as</c><00:06:57.280><c> you</c><00:06:57.360><c> can</c><00:06:57.520><c> see</c>

00:06:57.670 --> 00:06:57.680 align:start position:0%
word anymore right but as you can see
 

00:06:57.680 --> 00:06:59.430 align:start position:0%
word anymore right but as you can see
this<00:06:57.919><c> is</c><00:06:58.000><c> going</c><00:06:58.080><c> to</c><00:06:58.240><c> get</c><00:06:58.400><c> kind</c><00:06:58.560><c> of</c><00:06:58.720><c> complicated</c>

00:06:59.430 --> 00:06:59.440 align:start position:0%
this is going to get kind of complicated
 

00:06:59.440 --> 00:06:59.830 align:start position:0%
this is going to get kind of complicated
right

00:06:59.830 --> 00:06:59.840 align:start position:0%
right
 

00:06:59.840 --> 00:07:01.270 align:start position:0%
right
we're<00:07:00.000><c> having</c><00:07:00.319><c> to</c><00:07:00.400><c> go</c><00:07:00.639><c> through</c><00:07:00.800><c> the</c><00:07:00.960><c> list</c><00:07:01.199><c> of</c>

00:07:01.270 --> 00:07:01.280 align:start position:0%
we're having to go through the list of
 

00:07:01.280 --> 00:07:02.950 align:start position:0%
we're having to go through the list of
words<00:07:01.599><c> every</c><00:07:01.919><c> single</c><00:07:02.240><c> time</c><00:07:02.479><c> that's</c><00:07:02.720><c> not</c>

00:07:02.950 --> 00:07:02.960 align:start position:0%
words every single time that's not
 

00:07:02.960 --> 00:07:04.550 align:start position:0%
words every single time that's not
really<00:07:03.280><c> helping</c><00:07:03.680><c> us</c><00:07:03.840><c> out</c><00:07:04.000><c> in</c><00:07:04.080><c> terms</c><00:07:04.400><c> of</c>

00:07:04.550 --> 00:07:04.560 align:start position:0%
really helping us out in terms of
 

00:07:04.560 --> 00:07:05.830 align:start position:0%
really helping us out in terms of
efficiency

00:07:05.830 --> 00:07:05.840 align:start position:0%
efficiency
 

00:07:05.840 --> 00:07:07.990 align:start position:0%
efficiency
a<00:07:06.160><c> more</c><00:07:06.639><c> intuitive</c><00:07:07.280><c> way</c><00:07:07.440><c> would</c><00:07:07.680><c> be</c><00:07:07.759><c> if</c><00:07:07.919><c> we</c>

00:07:07.990 --> 00:07:08.000 align:start position:0%
a more intuitive way would be if we
 

00:07:08.000 --> 00:07:10.070 align:start position:0%
a more intuitive way would be if we
could<00:07:08.160><c> check</c><00:07:08.400><c> the</c><00:07:08.560><c> prefixes</c><00:07:09.280><c> of</c><00:07:09.360><c> these</c><00:07:09.520><c> words</c>

00:07:10.070 --> 00:07:10.080 align:start position:0%
could check the prefixes of these words
 

00:07:10.080 --> 00:07:12.070 align:start position:0%
could check the prefixes of these words
more<00:07:10.319><c> easily</c><00:07:10.880><c> and</c><00:07:11.039><c> of</c><00:07:11.199><c> course</c><00:07:11.520><c> we</c><00:07:11.599><c> know</c><00:07:11.759><c> a</c><00:07:11.840><c> data</c>

00:07:12.070 --> 00:07:12.080 align:start position:0%
more easily and of course we know a data
 

00:07:12.080 --> 00:07:13.430 align:start position:0%
more easily and of course we know a data
structure<00:07:12.560><c> prefix</c><00:07:13.039><c> tree</c>

00:07:13.430 --> 00:07:13.440 align:start position:0%
structure prefix tree
 

00:07:13.440 --> 00:07:16.309 align:start position:0%
structure prefix tree
is<00:07:13.599><c> exactly</c><00:07:14.000><c> what</c><00:07:14.160><c> that</c><00:07:14.400><c> is</c><00:07:14.639><c> for</c><00:07:15.280><c> so</c><00:07:15.599><c> basically</c>

00:07:16.309 --> 00:07:16.319 align:start position:0%
is exactly what that is for so basically
 

00:07:16.319 --> 00:07:17.990 align:start position:0%
is exactly what that is for so basically
what<00:07:16.479><c> a</c><00:07:16.639><c> prefix</c><00:07:17.120><c> tree</c><00:07:17.360><c> is</c><00:07:17.440><c> going</c><00:07:17.520><c> to</c><00:07:17.680><c> be</c><00:07:17.840><c> it's</c>

00:07:17.990 --> 00:07:18.000 align:start position:0%
what a prefix tree is going to be it's
 

00:07:18.000 --> 00:07:18.550 align:start position:0%
what a prefix tree is going to be it's
going<00:07:18.160><c> to</c><00:07:18.240><c> be</c>

00:07:18.550 --> 00:07:18.560 align:start position:0%
going to be
 

00:07:18.560 --> 00:07:20.150 align:start position:0%
going to be
you<00:07:18.639><c> know</c><00:07:18.880><c> every</c><00:07:19.120><c> single</c><00:07:19.520><c> character</c><00:07:19.919><c> is</c><00:07:20.080><c> going</c>

00:07:20.150 --> 00:07:20.160 align:start position:0%
you know every single character is going
 

00:07:20.160 --> 00:07:22.150 align:start position:0%
you know every single character is going
to<00:07:20.240><c> be</c><00:07:20.319><c> a</c><00:07:20.479><c> node</c><00:07:20.880><c> so</c><00:07:21.120><c> one</c><00:07:21.360><c> node</c><00:07:21.680><c> is</c><00:07:21.759><c> going</c><00:07:21.840><c> to</c><00:07:21.919><c> be</c>

00:07:22.150 --> 00:07:22.160 align:start position:0%
to be a node so one node is going to be
 

00:07:22.160 --> 00:07:22.550 align:start position:0%
to be a node so one node is going to be
a

00:07:22.550 --> 00:07:22.560 align:start position:0%
a
 

00:07:22.560 --> 00:07:24.390 align:start position:0%
a
and<00:07:22.639><c> we're</c><00:07:23.199><c> just</c><00:07:23.360><c> going</c><00:07:23.440><c> to</c><00:07:23.520><c> take</c><00:07:23.759><c> these</c><00:07:24.000><c> words</c>

00:07:24.390 --> 00:07:24.400 align:start position:0%
and we're just going to take these words
 

00:07:24.400 --> 00:07:26.629 align:start position:0%
and we're just going to take these words
and<00:07:24.560><c> add</c><00:07:24.800><c> them</c><00:07:25.039><c> to</c><00:07:25.360><c> our</c><00:07:25.520><c> prefix</c><00:07:26.000><c> tree</c><00:07:26.319><c> so</c>

00:07:26.629 --> 00:07:26.639 align:start position:0%
and add them to our prefix tree so
 

00:07:26.639 --> 00:07:28.629 align:start position:0%
and add them to our prefix tree so
we<00:07:26.800><c> want</c><00:07:27.280><c> all</c><00:07:27.599><c> words</c><00:07:28.080><c> starting</c><00:07:28.400><c> with</c><00:07:28.560><c> the</c>

00:07:28.629 --> 00:07:28.639 align:start position:0%
we want all words starting with the
 

00:07:28.639 --> 00:07:29.990 align:start position:0%
we want all words starting with the
character<00:07:29.120><c> a</c><00:07:29.440><c> to</c><00:07:29.680><c> go</c>

00:07:29.990 --> 00:07:30.000 align:start position:0%
character a to go
 

00:07:30.000 --> 00:07:32.150 align:start position:0%
character a to go
here<00:07:30.319><c> right</c><00:07:30.720><c> so</c><00:07:30.960><c> let's</c><00:07:31.199><c> add</c><00:07:31.520><c> childs</c><00:07:31.919><c> of</c><00:07:32.000><c> these</c>

00:07:32.150 --> 00:07:32.160 align:start position:0%
here right so let's add childs of these
 

00:07:32.160 --> 00:07:34.070 align:start position:0%
here right so let's add childs of these
so<00:07:32.319><c> what</c><00:07:32.479><c> characters</c><00:07:32.960><c> come</c><00:07:33.199><c> after</c><00:07:33.599><c> a</c>

00:07:34.070 --> 00:07:34.080 align:start position:0%
so what characters come after a
 

00:07:34.080 --> 00:07:36.309 align:start position:0%
so what characters come after a
of<00:07:34.160><c> course</c><00:07:34.400><c> we</c><00:07:34.560><c> have</c><00:07:34.720><c> a</c><00:07:34.960><c> p</c><00:07:35.520><c> and</c><00:07:35.680><c> then</c><00:07:35.840><c> we</c><00:07:36.000><c> have</c><00:07:36.080><c> a</c>

00:07:36.309 --> 00:07:36.319 align:start position:0%
of course we have a p and then we have a
 

00:07:36.319 --> 00:07:37.670 align:start position:0%
of course we have a p and then we have a
c<00:07:36.639><c> so</c>

00:07:37.670 --> 00:07:37.680 align:start position:0%
c so
 

00:07:37.680 --> 00:07:39.990 align:start position:0%
c so
all<00:07:37.919><c> words</c><00:07:38.240><c> that</c><00:07:38.479><c> start</c><00:07:38.720><c> with</c><00:07:39.039><c> a</c><00:07:39.360><c> p</c><00:07:39.759><c> are</c><00:07:39.919><c> going</c>

00:07:39.990 --> 00:07:40.000 align:start position:0%
all words that start with a p are going
 

00:07:40.000 --> 00:07:41.350 align:start position:0%
all words that start with a p are going
to<00:07:40.160><c> go</c><00:07:40.319><c> down</c><00:07:40.720><c> here</c>

00:07:41.350 --> 00:07:41.360 align:start position:0%
to go down here
 

00:07:41.360 --> 00:07:43.749 align:start position:0%
to go down here
and<00:07:41.520><c> all</c><00:07:41.759><c> words</c><00:07:42.080><c> that</c><00:07:42.240><c> start</c><00:07:42.479><c> with</c><00:07:42.720><c> a</c><00:07:43.199><c> c</c><00:07:43.599><c> are</c>

00:07:43.749 --> 00:07:43.759 align:start position:0%
and all words that start with a c are
 

00:07:43.759 --> 00:07:45.110 align:start position:0%
and all words that start with a c are
gonna<00:07:43.919><c> go</c><00:07:44.160><c> down</c><00:07:44.560><c> here</c>

00:07:45.110 --> 00:07:45.120 align:start position:0%
gonna go down here
 

00:07:45.120 --> 00:07:46.550 align:start position:0%
gonna go down here
and<00:07:45.280><c> how</c><00:07:45.440><c> many</c><00:07:45.680><c> different</c><00:07:45.919><c> words</c><00:07:46.160><c> do</c><00:07:46.319><c> we</c><00:07:46.400><c> have</c>

00:07:46.550 --> 00:07:46.560 align:start position:0%
and how many different words do we have
 

00:07:46.560 --> 00:07:48.550 align:start position:0%
and how many different words do we have
that<00:07:46.720><c> start</c><00:07:46.960><c> with</c><00:07:47.120><c> ap</c><00:07:47.599><c> we</c><00:07:47.840><c> have</c>

00:07:48.550 --> 00:07:48.560 align:start position:0%
that start with ap we have
 

00:07:48.560 --> 00:07:51.670 align:start position:0%
that start with ap we have
uh<00:07:49.360><c> app</c><00:07:49.919><c> and</c><00:07:50.080><c> we</c><00:07:50.319><c> have</c><00:07:50.720><c> ape</c>

00:07:51.670 --> 00:07:51.680 align:start position:0%
uh app and we have ape
 

00:07:51.680 --> 00:07:54.390 align:start position:0%
uh app and we have ape
and<00:07:51.919><c> all</c><00:07:52.160><c> words</c><00:07:52.479><c> that</c><00:07:52.800><c> start</c><00:07:53.039><c> with</c><00:07:53.199><c> ac</c><00:07:53.919><c> is</c><00:07:54.080><c> just</c>

00:07:54.390 --> 00:07:54.400 align:start position:0%
and all words that start with ac is just
 

00:07:54.400 --> 00:07:55.110 align:start position:0%
and all words that start with ac is just
one<00:07:54.639><c> word</c>

00:07:55.110 --> 00:07:55.120 align:start position:0%
one word
 

00:07:55.120 --> 00:07:57.990 align:start position:0%
one word
ace<00:07:56.000><c> so</c><00:07:56.160><c> do</c><00:07:56.319><c> you</c><00:07:56.479><c> see</c><00:07:56.639><c> how</c><00:07:56.960><c> this</c><00:07:57.199><c> is</c><00:07:57.440><c> this</c><00:07:57.680><c> tree</c>

00:07:57.990 --> 00:07:58.000 align:start position:0%
ace so do you see how this is this tree
 

00:07:58.000 --> 00:08:00.230 align:start position:0%
ace so do you see how this is this tree
is<00:07:58.240><c> organizing</c><00:07:58.960><c> these</c><00:07:59.199><c> words</c><00:07:59.599><c> based</c><00:07:59.919><c> on</c><00:08:00.080><c> the</c>

00:08:00.230 --> 00:08:00.240 align:start position:0%
is organizing these words based on the
 

00:08:00.240 --> 00:08:01.670 align:start position:0%
is organizing these words based on the
prefixes

00:08:01.670 --> 00:08:01.680 align:start position:0%
prefixes
 

00:08:01.680 --> 00:08:04.309 align:start position:0%
prefixes
so<00:08:01.919><c> now</c><00:08:02.400><c> we</c><00:08:02.639><c> started</c><00:08:03.039><c> at</c><00:08:03.280><c> a</c><00:08:03.520><c> right</c><00:08:03.680><c> we</c><00:08:03.840><c> want</c><00:08:04.160><c> all</c>

00:08:04.309 --> 00:08:04.319 align:start position:0%
so now we started at a right we want all
 

00:08:04.319 --> 00:08:05.990 align:start position:0%
so now we started at a right we want all
words<00:08:04.720><c> that</c><00:08:04.879><c> start</c><00:08:05.039><c> at</c><00:08:05.199><c> a</c><00:08:05.360><c> so</c><00:08:05.599><c> so</c><00:08:05.759><c> this</c><00:08:05.919><c> is</c>

00:08:05.990 --> 00:08:06.000 align:start position:0%
words that start at a so so this is
 

00:08:06.000 --> 00:08:07.510 align:start position:0%
words that start at a so so this is
where<00:08:06.160><c> we're</c><00:08:06.319><c> going</c><00:08:06.400><c> to</c><00:08:06.479><c> be</c><00:08:06.639><c> at</c><00:08:06.800><c> so</c><00:08:07.039><c> far</c><00:08:07.199><c> and</c><00:08:07.280><c> we</c>

00:08:07.510 --> 00:08:07.520 align:start position:0%
where we're going to be at so far and we
 

00:08:07.520 --> 00:08:08.070 align:start position:0%
where we're going to be at so far and we
see<00:08:07.759><c> that</c>

00:08:08.070 --> 00:08:08.080 align:start position:0%
see that
 

00:08:08.080 --> 00:08:10.150 align:start position:0%
see that
of<00:08:08.240><c> course</c><00:08:08.479><c> there</c><00:08:08.720><c> are</c><00:08:08.960><c> three</c><00:08:09.280><c> words</c><00:08:09.840><c> that</c>

00:08:10.150 --> 00:08:10.160 align:start position:0%
of course there are three words that
 

00:08:10.160 --> 00:08:11.110 align:start position:0%
of course there are three words that
start<00:08:10.720><c> with</c>

00:08:11.110 --> 00:08:11.120 align:start position:0%
start with
 

00:08:11.120 --> 00:08:14.309 align:start position:0%
start with
a<00:08:11.759><c> and</c><00:08:11.919><c> by</c><00:08:12.160><c> the</c><00:08:12.319><c> way</c><00:08:12.879><c> let's</c><00:08:13.120><c> say</c><00:08:13.440><c> ap</c>

00:08:14.309 --> 00:08:14.319 align:start position:0%
a and by the way let's say ap
 

00:08:14.319 --> 00:08:16.390 align:start position:0%
a and by the way let's say ap
this<00:08:14.560><c> is</c><00:08:14.720><c> not</c><00:08:14.879><c> a</c><00:08:15.039><c> word</c><00:08:15.360><c> even</c><00:08:15.599><c> though</c><00:08:15.919><c> it</c><00:08:16.080><c> is</c><00:08:16.240><c> a</c>

00:08:16.390 --> 00:08:16.400 align:start position:0%
this is not a word even though it is a
 

00:08:16.400 --> 00:08:17.990 align:start position:0%
this is not a word even though it is a
path<00:08:16.720><c> in</c><00:08:16.800><c> our</c><00:08:16.960><c> tribe</c><00:08:17.280><c> because</c><00:08:17.599><c> basically</c>

00:08:17.990 --> 00:08:18.000 align:start position:0%
path in our tribe because basically
 

00:08:18.000 --> 00:08:19.270 align:start position:0%
path in our tribe because basically
let's<00:08:18.160><c> just</c><00:08:18.319><c> say</c><00:08:18.560><c> we</c><00:08:18.800><c> call</c>

00:08:19.270 --> 00:08:19.280 align:start position:0%
let's just say we call
 

00:08:19.280 --> 00:08:21.670 align:start position:0%
let's just say we call
these<00:08:19.599><c> three</c><00:08:20.080><c> leaf</c><00:08:20.400><c> nodes</c><00:08:20.800><c> happen</c><00:08:21.120><c> to</c><00:08:21.280><c> be</c><00:08:21.440><c> the</c>

00:08:21.670 --> 00:08:21.680 align:start position:0%
these three leaf nodes happen to be the
 

00:08:21.680 --> 00:08:23.749 align:start position:0%
these three leaf nodes happen to be the
end<00:08:21.919><c> of</c><00:08:22.000><c> words</c><00:08:22.400><c> it's</c><00:08:22.639><c> possible</c><00:08:23.199><c> that</c><00:08:23.440><c> we</c><00:08:23.599><c> could</c>

00:08:23.749 --> 00:08:23.759 align:start position:0%
end of words it's possible that we could
 

00:08:23.759 --> 00:08:24.950 align:start position:0%
end of words it's possible that we could
have<00:08:24.000><c> a</c><00:08:24.080><c> word</c><00:08:24.400><c> ap</c>

00:08:24.950 --> 00:08:24.960 align:start position:0%
have a word ap
 

00:08:24.960 --> 00:08:26.869 align:start position:0%
have a word ap
but<00:08:25.120><c> in</c><00:08:25.280><c> this</c><00:08:25.360><c> case</c><00:08:25.599><c> we</c><00:08:25.919><c> don't</c><00:08:26.240><c> up</c><00:08:26.400><c> here</c><00:08:26.720><c> right</c>

00:08:26.869 --> 00:08:26.879 align:start position:0%
but in this case we don't up here right
 

00:08:26.879 --> 00:08:27.990 align:start position:0%
but in this case we don't up here right
we<00:08:27.039><c> don't</c><00:08:27.199><c> have</c><00:08:27.440><c> ap</c>

00:08:27.990 --> 00:08:28.000 align:start position:0%
we don't have ap
 

00:08:28.000 --> 00:08:30.070 align:start position:0%
we don't have ap
so<00:08:28.160><c> this</c><00:08:28.879><c> this</c><00:08:29.199><c> node</c><00:08:29.440><c> is</c><00:08:29.599><c> not</c><00:08:29.680><c> going</c><00:08:29.759><c> to</c><00:08:29.840><c> be</c>

00:08:30.070 --> 00:08:30.080 align:start position:0%
so this this node is not going to be
 

00:08:30.080 --> 00:08:31.830 align:start position:0%
so this this node is not going to be
marked<00:08:30.560><c> as</c><00:08:30.720><c> the</c><00:08:30.960><c> end</c><00:08:31.120><c> of</c><00:08:31.280><c> a</c><00:08:31.360><c> word</c>

00:08:31.830 --> 00:08:31.840 align:start position:0%
marked as the end of a word
 

00:08:31.840 --> 00:08:33.829 align:start position:0%
marked as the end of a word
so<00:08:32.080><c> only</c><00:08:32.320><c> these</c><00:08:32.560><c> three</c><00:08:32.800><c> are</c><00:08:32.880><c> marked</c><00:08:33.200><c> as</c><00:08:33.440><c> end</c><00:08:33.680><c> of</c>

00:08:33.829 --> 00:08:33.839 align:start position:0%
so only these three are marked as end of
 

00:08:33.839 --> 00:08:35.829 align:start position:0%
so only these three are marked as end of
words<00:08:34.399><c> but</c><00:08:34.560><c> so</c><00:08:34.800><c> now</c><00:08:34.959><c> when</c><00:08:35.120><c> we</c><00:08:35.279><c> go</c><00:08:35.360><c> down</c><00:08:35.599><c> in</c><00:08:35.680><c> this</c>

00:08:35.829 --> 00:08:35.839 align:start position:0%
words but so now when we go down in this
 

00:08:35.839 --> 00:08:37.350 align:start position:0%
words but so now when we go down in this
direction<00:08:36.240><c> we</c><00:08:36.320><c> go</c><00:08:36.479><c> to</c><00:08:36.640><c> a</c><00:08:36.800><c> p</c>

00:08:37.350 --> 00:08:37.360 align:start position:0%
direction we go to a p
 

00:08:37.360 --> 00:08:39.190 align:start position:0%
direction we go to a p
all<00:08:37.519><c> we're</c><00:08:37.680><c> going</c><00:08:37.760><c> to</c><00:08:37.839><c> do</c><00:08:38.159><c> from</c><00:08:38.399><c> this</c><00:08:38.640><c> position</c>

00:08:39.190 --> 00:08:39.200 align:start position:0%
all we're going to do from this position
 

00:08:39.200 --> 00:08:41.589 align:start position:0%
all we're going to do from this position
is<00:08:39.519><c> check</c><00:08:39.919><c> does</c><00:08:40.159><c> this</c><00:08:40.320><c> have</c><00:08:40.479><c> a</c><00:08:40.640><c> child</c><00:08:41.039><c> p</c>

00:08:41.589 --> 00:08:41.599 align:start position:0%
is check does this have a child p
 

00:08:41.599 --> 00:08:43.029 align:start position:0%
is check does this have a child p
if<00:08:41.760><c> it</c><00:08:41.919><c> does</c><00:08:42.159><c> we're</c><00:08:42.320><c> going</c><00:08:42.399><c> to</c><00:08:42.479><c> say</c><00:08:42.640><c> okay</c><00:08:42.880><c> let's</c>

00:08:43.029 --> 00:08:43.039 align:start position:0%
if it does we're going to say okay let's
 

00:08:43.039 --> 00:08:45.110 align:start position:0%
if it does we're going to say okay let's
go<00:08:43.279><c> there</c><00:08:43.519><c> so</c><00:08:44.000><c> now</c><00:08:44.240><c> this</c><00:08:44.399><c> is</c><00:08:44.480><c> going</c><00:08:44.560><c> to</c><00:08:44.640><c> be</c><00:08:44.880><c> all</c>

00:08:45.110 --> 00:08:45.120 align:start position:0%
go there so now this is going to be all
 

00:08:45.120 --> 00:08:45.590 align:start position:0%
go there so now this is going to be all
words

00:08:45.590 --> 00:08:45.600 align:start position:0%
words
 

00:08:45.600 --> 00:08:48.070 align:start position:0%
words
that<00:08:45.760><c> potentially</c><00:08:46.399><c> start</c><00:08:46.720><c> with</c><00:08:47.040><c> ap</c><00:08:47.440><c> so</c><00:08:47.839><c> this</c>

00:08:48.070 --> 00:08:48.080 align:start position:0%
that potentially start with ap so this
 

00:08:48.080 --> 00:08:49.030 align:start position:0%
that potentially start with ap so this
prefix

00:08:49.030 --> 00:08:49.040 align:start position:0%
prefix
 

00:08:49.040 --> 00:08:51.590 align:start position:0%
prefix
now<00:08:49.279><c> if</c><00:08:49.440><c> we</c><00:08:49.600><c> did</c><00:08:49.839><c> not</c><00:08:50.160><c> have</c><00:08:50.399><c> a</c><00:08:50.560><c> p</c><00:08:51.040><c> right</c><00:08:51.360><c> then</c><00:08:51.519><c> we</c>

00:08:51.590 --> 00:08:51.600 align:start position:0%
now if we did not have a p right then we
 

00:08:51.600 --> 00:08:52.790 align:start position:0%
now if we did not have a p right then we
would<00:08:51.839><c> say</c><00:08:52.080><c> okay</c>

00:08:52.790 --> 00:08:52.800 align:start position:0%
would say okay
 

00:08:52.800 --> 00:08:55.590 align:start position:0%
would say okay
we<00:08:52.959><c> went</c><00:08:53.200><c> down</c><00:08:53.440><c> here</c><00:08:54.000><c> ap</c><00:08:54.800><c> we</c><00:08:54.880><c> don't</c><00:08:55.120><c> have</c><00:08:55.279><c> any</c>

00:08:55.590 --> 00:08:55.600 align:start position:0%
we went down here ap we don't have any
 

00:08:55.600 --> 00:08:56.150 align:start position:0%
we went down here ap we don't have any
words

00:08:56.150 --> 00:08:56.160 align:start position:0%
words
 

00:08:56.160 --> 00:08:58.230 align:start position:0%
words
that<00:08:56.399><c> start</c><00:08:56.640><c> with</c><00:08:56.880><c> ap</c><00:08:57.360><c> so</c><00:08:57.680><c> in</c><00:08:57.760><c> that</c><00:08:57.920><c> case</c><00:08:58.160><c> we</c>

00:08:58.230 --> 00:08:58.240 align:start position:0%
that start with ap so in that case we
 

00:08:58.240 --> 00:08:59.990 align:start position:0%
that start with ap so in that case we
would<00:08:58.399><c> just</c><00:08:58.560><c> return</c><00:08:59.040><c> that's</c><00:08:59.279><c> our</c><00:08:59.440><c> base</c><00:08:59.760><c> case</c>

00:08:59.990 --> 00:09:00.000 align:start position:0%
would just return that's our base case
 

00:09:00.000 --> 00:09:01.590 align:start position:0%
would just return that's our base case
right<00:09:00.160><c> if</c><00:09:00.240><c> we</c><00:09:00.399><c> didn't</c><00:09:00.560><c> have</c><00:09:00.800><c> any</c><00:09:01.040><c> words</c><00:09:01.279><c> with</c><00:09:01.519><c> a</c>

00:09:01.590 --> 00:09:01.600 align:start position:0%
right if we didn't have any words with a
 

00:09:01.600 --> 00:09:02.870 align:start position:0%
right if we didn't have any words with a
prefix<00:09:02.080><c> of</c><00:09:02.240><c> ap</c>

00:09:02.870 --> 00:09:02.880 align:start position:0%
prefix of ap
 

00:09:02.880 --> 00:09:04.790 align:start position:0%
prefix of ap
which<00:09:03.040><c> we</c><00:09:03.200><c> could</c><00:09:03.680><c> check</c><00:09:04.000><c> pretty</c><00:09:04.240><c> easily</c><00:09:04.640><c> with</c>

00:09:04.790 --> 00:09:04.800 align:start position:0%
which we could check pretty easily with
 

00:09:04.800 --> 00:09:05.910 align:start position:0%
which we could check pretty easily with
this<00:09:05.040><c> prefix</c><00:09:05.519><c> tree</c>

00:09:05.910 --> 00:09:05.920 align:start position:0%
this prefix tree
 

00:09:05.920 --> 00:09:07.990 align:start position:0%
this prefix tree
we<00:09:06.080><c> wouldn't</c><00:09:06.399><c> want</c><00:09:06.560><c> to</c><00:09:06.640><c> continue</c><00:09:07.360><c> going</c><00:09:07.680><c> down</c>

00:09:07.990 --> 00:09:08.000 align:start position:0%
we wouldn't want to continue going down
 

00:09:08.000 --> 00:09:09.030 align:start position:0%
we wouldn't want to continue going down
this<00:09:08.240><c> direction</c>

00:09:09.030 --> 00:09:09.040 align:start position:0%
this direction
 

00:09:09.040 --> 00:09:11.590 align:start position:0%
this direction
so<00:09:09.920><c> you</c><00:09:10.080><c> can</c><00:09:10.160><c> see</c><00:09:10.320><c> that</c><00:09:10.800><c> we're</c><00:09:11.040><c> making</c><00:09:11.279><c> things</c>

00:09:11.590 --> 00:09:11.600 align:start position:0%
so you can see that we're making things
 

00:09:11.600 --> 00:09:13.509 align:start position:0%
so you can see that we're making things
a<00:09:11.680><c> lot</c><00:09:11.839><c> more</c><00:09:12.080><c> efficient</c><00:09:12.560><c> for</c><00:09:12.800><c> us</c><00:09:12.959><c> using</c><00:09:13.279><c> this</c>

00:09:13.509 --> 00:09:13.519 align:start position:0%
a lot more efficient for us using this
 

00:09:13.519 --> 00:09:14.389 align:start position:0%
a lot more efficient for us using this
try

00:09:14.389 --> 00:09:14.399 align:start position:0%
try
 

00:09:14.399 --> 00:09:17.030 align:start position:0%
try
so<00:09:14.560><c> now</c><00:09:14.880><c> from</c><00:09:15.600><c> p</c><00:09:15.920><c> we</c><00:09:16.080><c> can't</c><00:09:16.320><c> go</c><00:09:16.480><c> down</c><00:09:16.720><c> that's</c>

00:09:17.030 --> 00:09:17.040 align:start position:0%
so now from p we can't go down that's
 

00:09:17.040 --> 00:09:18.389 align:start position:0%
so now from p we can't go down that's
out<00:09:17.120><c> of</c><00:09:17.200><c> bounds</c><00:09:17.519><c> we</c><00:09:17.600><c> can't</c><00:09:17.760><c> go</c><00:09:18.080><c> left</c>

00:09:18.389 --> 00:09:18.399 align:start position:0%
out of bounds we can't go left
 

00:09:18.399 --> 00:09:20.389 align:start position:0%
out of bounds we can't go left
we<00:09:18.560><c> can't</c><00:09:18.800><c> go</c><00:09:19.200><c> up</c><00:09:19.680><c> because</c><00:09:19.920><c> we</c><00:09:20.080><c> already</c>

00:09:20.389 --> 00:09:20.399 align:start position:0%
we can't go up because we already
 

00:09:20.399 --> 00:09:22.150 align:start position:0%
we can't go up because we already
visited<00:09:20.720><c> that</c><00:09:20.880><c> position</c><00:09:21.279><c> so</c><00:09:21.440><c> we</c><00:09:21.600><c> can</c><00:09:21.680><c> go</c>

00:09:22.150 --> 00:09:22.160 align:start position:0%
visited that position so we can go
 

00:09:22.160 --> 00:09:23.590 align:start position:0%
visited that position so we can go
right<00:09:22.720><c> which</c><00:09:22.959><c> is</c><00:09:23.120><c> going</c><00:09:23.200><c> to</c><00:09:23.279><c> add</c><00:09:23.519><c> the</c>

00:09:23.590 --> 00:09:23.600 align:start position:0%
right which is going to add the
 

00:09:23.600 --> 00:09:26.070 align:start position:0%
right which is going to add the
character<00:09:24.080><c> e</c><00:09:24.320><c> so</c><00:09:24.640><c> from</c><00:09:24.959><c> here</c><00:09:25.279><c> from</c><00:09:25.440><c> this</c><00:09:25.680><c> p</c><00:09:25.920><c> we</c>

00:09:26.070 --> 00:09:26.080 align:start position:0%
character e so from here from this p we
 

00:09:26.080 --> 00:09:27.829 align:start position:0%
character e so from here from this p we
want<00:09:26.240><c> to</c><00:09:26.320><c> check</c><00:09:26.560><c> do</c><00:09:26.720><c> we</c><00:09:26.880><c> have</c><00:09:27.120><c> a</c><00:09:27.360><c> child</c>

00:09:27.829 --> 00:09:27.839 align:start position:0%
want to check do we have a child
 

00:09:27.839 --> 00:09:30.710 align:start position:0%
want to check do we have a child
e<00:09:28.240><c> well</c><00:09:28.480><c> this</c><00:09:28.640><c> is</c><00:09:28.720><c> not</c><00:09:28.959><c> the</c><00:09:29.120><c> e</c><00:09:29.680><c> this</c><00:09:30.080><c> is</c><00:09:30.399><c> though</c>

00:09:30.710 --> 00:09:30.720 align:start position:0%
e well this is not the e this is though
 

00:09:30.720 --> 00:09:31.030 align:start position:0%
e well this is not the e this is though
right

00:09:31.030 --> 00:09:31.040 align:start position:0%
right
 

00:09:31.040 --> 00:09:34.470 align:start position:0%
right
okay<00:09:31.360><c> so</c><00:09:32.080><c> so</c><00:09:32.240><c> far</c><00:09:32.560><c> we</c><00:09:32.880><c> we</c><00:09:33.040><c> did</c><00:09:33.360><c> find</c><00:09:33.920><c> a</c><00:09:34.080><c> path</c>

00:09:34.470 --> 00:09:34.480 align:start position:0%
okay so so far we we did find a path
 

00:09:34.480 --> 00:09:36.550 align:start position:0%
okay so so far we we did find a path
in<00:09:34.560><c> our</c><00:09:34.720><c> prefix</c><00:09:35.200><c> tree</c><00:09:35.360><c> now</c><00:09:35.680><c> let's</c><00:09:36.000><c> check</c><00:09:36.399><c> is</c>

00:09:36.550 --> 00:09:36.560 align:start position:0%
in our prefix tree now let's check is
 

00:09:36.560 --> 00:09:38.550 align:start position:0%
in our prefix tree now let's check is
this<00:09:36.800><c> the</c><00:09:37.040><c> end</c><00:09:37.200><c> of</c><00:09:37.360><c> a</c><00:09:37.440><c> word</c><00:09:37.760><c> since</c><00:09:38.000><c> it's</c><00:09:38.240><c> marked</c>

00:09:38.550 --> 00:09:38.560 align:start position:0%
this the end of a word since it's marked
 

00:09:38.560 --> 00:09:39.910 align:start position:0%
this the end of a word since it's marked
purple<00:09:38.880><c> that's</c><00:09:39.120><c> what</c><00:09:39.200><c> i'm</c><00:09:39.360><c> just</c><00:09:39.519><c> indicating</c>

00:09:39.910 --> 00:09:39.920 align:start position:0%
purple that's what i'm just indicating
 

00:09:39.920 --> 00:09:41.750 align:start position:0%
purple that's what i'm just indicating
so<00:09:40.080><c> yes</c><00:09:40.320><c> this</c><00:09:40.560><c> is</c><00:09:40.720><c> the</c><00:09:40.880><c> end</c><00:09:41.040><c> of</c><00:09:41.200><c> a</c><00:09:41.279><c> word</c>

00:09:41.750 --> 00:09:41.760 align:start position:0%
so yes this is the end of a word
 

00:09:41.760 --> 00:09:44.070 align:start position:0%
so yes this is the end of a word
therefore<00:09:42.480><c> we</c><00:09:42.720><c> found</c><00:09:43.040><c> a</c><00:09:43.200><c> single</c><00:09:43.519><c> word</c><00:09:43.839><c> down</c>

00:09:44.070 --> 00:09:44.080 align:start position:0%
therefore we found a single word down
 

00:09:44.080 --> 00:09:46.070 align:start position:0%
therefore we found a single word down
this<00:09:44.399><c> path</c><00:09:44.720><c> that</c><00:09:44.800><c> we</c><00:09:44.959><c> were</c><00:09:45.120><c> maintaining</c>

00:09:46.070 --> 00:09:46.080 align:start position:0%
this path that we were maintaining
 

00:09:46.080 --> 00:09:49.829 align:start position:0%
this path that we were maintaining
called<00:09:46.640><c> a</c><00:09:47.279><c> p</c><00:09:47.839><c> e</c><00:09:48.240><c> that</c><00:09:48.959><c> yes</c><00:09:49.200><c> you</c><00:09:49.360><c> can</c><00:09:49.440><c> see</c><00:09:49.600><c> it's</c>

00:09:49.829 --> 00:09:49.839 align:start position:0%
called a p e that yes you can see it's
 

00:09:49.839 --> 00:09:51.190 align:start position:0%
called a p e that yes you can see it's
found<00:09:50.080><c> in</c><00:09:50.160><c> our</c><00:09:50.320><c> list</c><00:09:50.560><c> of</c><00:09:50.720><c> words</c>

00:09:51.190 --> 00:09:51.200 align:start position:0%
found in our list of words
 

00:09:51.200 --> 00:09:53.350 align:start position:0%
found in our list of words
so<00:09:51.440><c> therefore</c><00:09:51.920><c> we</c><00:09:52.080><c> found</c><00:09:52.480><c> one</c><00:09:52.800><c> word</c><00:09:53.120><c> that</c><00:09:53.200><c> we</c>

00:09:53.350 --> 00:09:53.360 align:start position:0%
so therefore we found one word that we
 

00:09:53.360 --> 00:09:55.269 align:start position:0%
so therefore we found one word that we
can<00:09:53.519><c> make</c><00:09:54.000><c> from</c><00:09:54.240><c> this</c><00:09:54.560><c> grid</c>

00:09:55.269 --> 00:09:55.279 align:start position:0%
can make from this grid
 

00:09:55.279 --> 00:09:57.670 align:start position:0%
can make from this grid
that<00:09:55.920><c> you</c><00:09:56.080><c> know</c><00:09:56.240><c> can</c><00:09:56.399><c> be</c><00:09:56.560><c> found</c><00:09:56.880><c> basically</c><00:09:57.519><c> so</c>

00:09:57.670 --> 00:09:57.680 align:start position:0%
that you know can be found basically so
 

00:09:57.680 --> 00:09:58.470 align:start position:0%
that you know can be found basically so
we're<00:09:57.839><c> going</c><00:09:57.920><c> to</c><00:09:58.080><c> add</c>

00:09:58.470 --> 00:09:58.480 align:start position:0%
we're going to add
 

00:09:58.480 --> 00:10:01.829 align:start position:0%
we're going to add
ape<00:09:58.959><c> to</c><00:09:59.360><c> our</c><00:09:59.760><c> results</c><00:10:00.720><c> now</c><00:10:00.959><c> from</c><00:10:01.360><c> here</c>

00:10:01.829 --> 00:10:01.839 align:start position:0%
ape to our results now from here
 

00:10:01.839 --> 00:10:03.670 align:start position:0%
ape to our results now from here
we<00:10:02.000><c> would</c><00:10:02.160><c> want</c><00:10:02.320><c> to</c><00:10:02.480><c> continue</c><00:10:03.200><c> now</c><00:10:03.440><c> we</c><00:10:03.519><c> can't</c>

00:10:03.670 --> 00:10:03.680 align:start position:0%
we would want to continue now we can't
 

00:10:03.680 --> 00:10:05.590 align:start position:0%
we would want to continue now we can't
go<00:10:04.240><c> right</c><00:10:04.480><c> we</c><00:10:04.560><c> can't</c><00:10:04.800><c> go</c><00:10:04.959><c> down</c><00:10:05.120><c> we</c><00:10:05.200><c> can't</c><00:10:05.440><c> go</c>

00:10:05.590 --> 00:10:05.600 align:start position:0%
go right we can't go down we can't go
 

00:10:05.600 --> 00:10:07.110 align:start position:0%
go right we can't go down we can't go
left<00:10:05.839><c> because</c><00:10:06.000><c> we</c><00:10:06.160><c> already</c><00:10:06.399><c> visited</c><00:10:06.720><c> there</c><00:10:06.959><c> so</c>

00:10:07.110 --> 00:10:07.120 align:start position:0%
left because we already visited there so
 

00:10:07.120 --> 00:10:07.670 align:start position:0%
left because we already visited there so
we<00:10:07.200><c> would</c><00:10:07.360><c> go</c>

00:10:07.670 --> 00:10:07.680 align:start position:0%
we would go
 

00:10:07.680 --> 00:10:10.069 align:start position:0%
we would go
up<00:10:08.000><c> so</c><00:10:08.160><c> we'd</c><00:10:08.320><c> say</c><00:10:08.560><c> okay</c><00:10:08.800><c> add</c><00:10:09.040><c> a</c><00:10:09.120><c> c</c><00:10:09.440><c> right</c><00:10:09.839><c> so</c>

00:10:10.069 --> 00:10:10.079 align:start position:0%
up so we'd say okay add a c right so
 

00:10:10.079 --> 00:10:11.110 align:start position:0%
up so we'd say okay add a c right so
from<00:10:10.480><c> here</c>

00:10:11.110 --> 00:10:11.120 align:start position:0%
from here
 

00:10:11.120 --> 00:10:14.870 align:start position:0%
from here
a<00:10:11.440><c> p</c><00:10:11.920><c> e</c><00:10:12.800><c> a</c><00:10:13.040><c> p</c><00:10:13.279><c> e</c><00:10:13.519><c> and</c><00:10:13.600><c> then</c><00:10:13.760><c> we</c><00:10:13.920><c> add</c><00:10:14.160><c> a</c><00:10:14.320><c> c</c>

00:10:14.870 --> 00:10:14.880 align:start position:0%
a p e a p e and then we add a c
 

00:10:14.880 --> 00:10:16.710 align:start position:0%
a p e a p e and then we add a c
does<00:10:15.120><c> this</c><00:10:15.360><c> word</c><00:10:15.600><c> exist</c><00:10:16.000><c> well</c><00:10:16.160><c> this</c><00:10:16.399><c> does</c><00:10:16.560><c> not</c>

00:10:16.710 --> 00:10:16.720 align:start position:0%
does this word exist well this does not
 

00:10:16.720 --> 00:10:17.990 align:start position:0%
does this word exist well this does not
have<00:10:16.880><c> a</c><00:10:17.040><c> child</c><00:10:17.440><c> of</c><00:10:17.680><c> c</c>

00:10:17.990 --> 00:10:18.000 align:start position:0%
have a child of c
 

00:10:18.000 --> 00:10:19.509 align:start position:0%
have a child of c
so<00:10:18.160><c> of</c><00:10:18.240><c> course</c><00:10:18.480><c> we</c><00:10:18.640><c> can't</c><00:10:18.880><c> do</c><00:10:19.120><c> that</c><00:10:19.279><c> and</c><00:10:19.360><c> that</c>

00:10:19.509 --> 00:10:19.519 align:start position:0%
so of course we can't do that and that
 

00:10:19.519 --> 00:10:21.990 align:start position:0%
so of course we can't do that and that
makes<00:10:19.760><c> sense</c><00:10:20.079><c> because</c><00:10:20.320><c> this</c><00:10:20.560><c> word</c><00:10:20.880><c> apec</c>

00:10:21.990 --> 00:10:22.000 align:start position:0%
makes sense because this word apec
 

00:10:22.000 --> 00:10:23.750 align:start position:0%
makes sense because this word apec
does<00:10:22.160><c> not</c><00:10:22.399><c> exist</c><00:10:22.720><c> in</c><00:10:22.880><c> our</c><00:10:23.040><c> input</c><00:10:23.360><c> list</c><00:10:23.600><c> of</c>

00:10:23.750 --> 00:10:23.760 align:start position:0%
does not exist in our input list of
 

00:10:23.760 --> 00:10:25.509 align:start position:0%
does not exist in our input list of
words<00:10:24.000><c> so</c><00:10:24.160><c> therefore</c><00:10:24.880><c> at</c><00:10:24.959><c> this</c><00:10:25.200><c> point</c><00:10:25.360><c> we</c>

00:10:25.509 --> 00:10:25.519 align:start position:0%
words so therefore at this point we
 

00:10:25.519 --> 00:10:26.949 align:start position:0%
words so therefore at this point we
would<00:10:25.680><c> return</c><00:10:26.079><c> because</c><00:10:26.320><c> we</c><00:10:26.399><c> don't</c><00:10:26.560><c> even</c><00:10:26.800><c> have</c>

00:10:26.949 --> 00:10:26.959 align:start position:0%
would return because we don't even have
 

00:10:26.959 --> 00:10:29.269 align:start position:0%
would return because we don't even have
any<00:10:27.200><c> words</c><00:10:27.519><c> that</c><00:10:27.760><c> start</c><00:10:28.079><c> with</c><00:10:28.240><c> this</c><00:10:28.480><c> prefix</c>

00:10:29.269 --> 00:10:29.279 align:start position:0%
any words that start with this prefix
 

00:10:29.279 --> 00:10:31.670 align:start position:0%
any words that start with this prefix
so<00:10:29.440><c> so</c><00:10:29.680><c> far</c><00:10:29.920><c> we</c><00:10:30.000><c> did</c><00:10:30.160><c> find</c><00:10:30.480><c> one</c><00:10:30.720><c> word</c><00:10:31.040><c> ape</c><00:10:31.360><c> now</c>

00:10:31.670 --> 00:10:31.680 align:start position:0%
so so far we did find one word ape now
 

00:10:31.680 --> 00:10:33.509 align:start position:0%
so so far we did find one word ape now
when<00:10:31.920><c> we</c><00:10:32.160><c> started</c><00:10:32.560><c> here</c><00:10:32.800><c> the</c><00:10:32.959><c> first</c>

00:10:33.509 --> 00:10:33.519 align:start position:0%
when we started here the first
 

00:10:33.519 --> 00:10:34.870 align:start position:0%
when we started here the first
direction<00:10:33.839><c> we</c><00:10:34.000><c> went</c><00:10:34.160><c> was</c><00:10:34.320><c> down</c><00:10:34.560><c> but</c><00:10:34.720><c> it's</c>

00:10:34.870 --> 00:10:34.880 align:start position:0%
direction we went was down but it's
 

00:10:34.880 --> 00:10:36.550 align:start position:0%
direction we went was down but it's
possible<00:10:35.279><c> we</c><00:10:35.360><c> could</c><00:10:35.519><c> also</c><00:10:35.760><c> go</c><00:10:36.000><c> right</c><00:10:36.160><c> so</c><00:10:36.320><c> let's</c>

00:10:36.550 --> 00:10:36.560 align:start position:0%
possible we could also go right so let's
 

00:10:36.560 --> 00:10:37.750 align:start position:0%
possible we could also go right so let's
do<00:10:36.720><c> that</c><00:10:37.040><c> so</c>

00:10:37.750 --> 00:10:37.760 align:start position:0%
do that so
 

00:10:37.760 --> 00:10:40.069 align:start position:0%
do that so
now<00:10:37.920><c> we</c><00:10:38.079><c> have</c><00:10:38.399><c> ac</c><00:10:38.880><c> so</c><00:10:39.040><c> we</c><00:10:39.200><c> started</c><00:10:39.519><c> here</c><00:10:39.920><c> we</c>

00:10:40.069 --> 00:10:40.079 align:start position:0%
now we have ac so we started here we
 

00:10:40.079 --> 00:10:41.829 align:start position:0%
now we have ac so we started here we
check<00:10:40.320><c> does</c><00:10:40.480><c> this</c><00:10:40.640><c> have</c><00:10:40.800><c> a</c><00:10:40.880><c> child</c><00:10:41.200><c> c</c><00:10:41.440><c> yes</c><00:10:41.680><c> it</c>

00:10:41.829 --> 00:10:41.839 align:start position:0%
check does this have a child c yes it
 

00:10:41.839 --> 00:10:43.590 align:start position:0%
check does this have a child c yes it
does<00:10:42.000><c> it's</c><00:10:42.240><c> over</c><00:10:42.399><c> here</c><00:10:42.640><c> right</c><00:10:42.880><c> so</c><00:10:43.120><c> now</c><00:10:43.440><c> we</c>

00:10:43.590 --> 00:10:43.600 align:start position:0%
does it's over here right so now we
 

00:10:43.600 --> 00:10:45.110 align:start position:0%
does it's over here right so now we
can't<00:10:43.839><c> go</c><00:10:44.000><c> right</c><00:10:44.160><c> we</c><00:10:44.320><c> can't</c><00:10:44.480><c> go</c><00:10:44.720><c> up</c><00:10:44.800><c> we</c><00:10:44.959><c> can't</c>

00:10:45.110 --> 00:10:45.120 align:start position:0%
can't go right we can't go up we can't
 

00:10:45.120 --> 00:10:45.990 align:start position:0%
can't go right we can't go up we can't
go<00:10:45.279><c> back</c><00:10:45.600><c> left</c><00:10:45.760><c> so</c>

00:10:45.990 --> 00:10:46.000 align:start position:0%
go back left so
 

00:10:46.000 --> 00:10:48.790 align:start position:0%
go back left so
now<00:10:46.160><c> we</c><00:10:46.240><c> go</c><00:10:46.480><c> down</c><00:10:46.880><c> a</c><00:10:47.120><c> c</c><00:10:47.440><c> e</c><00:10:47.600><c> do</c><00:10:47.760><c> we</c><00:10:47.839><c> have</c><00:10:48.079><c> a</c><00:10:48.480><c> e</c>

00:10:48.790 --> 00:10:48.800 align:start position:0%
now we go down a c e do we have a e
 

00:10:48.800 --> 00:10:49.430 align:start position:0%
now we go down a c e do we have a e
child

00:10:49.430 --> 00:10:49.440 align:start position:0%
child
 

00:10:49.440 --> 00:10:52.310 align:start position:0%
child
under<00:10:49.760><c> this</c><00:10:50.240><c> c</c><00:10:50.560><c> yes</c><00:10:50.800><c> we</c><00:10:50.959><c> do</c><00:10:51.519><c> and</c><00:10:51.839><c> this</c><00:10:52.079><c> is</c><00:10:52.160><c> the</c>

00:10:52.310 --> 00:10:52.320 align:start position:0%
under this c yes we do and this is the
 

00:10:52.320 --> 00:10:54.150 align:start position:0%
under this c yes we do and this is the
end<00:10:52.480><c> of</c><00:10:52.640><c> a</c><00:10:52.720><c> word</c><00:10:53.040><c> right</c><00:10:53.279><c> it</c><00:10:53.519><c> exists</c><00:10:53.920><c> in</c><00:10:54.000><c> our</c>

00:10:54.150 --> 00:10:54.160 align:start position:0%
end of a word right it exists in our
 

00:10:54.160 --> 00:10:55.829 align:start position:0%
end of a word right it exists in our
list<00:10:54.399><c> of</c><00:10:54.560><c> input</c><00:10:54.800><c> words</c><00:10:55.040><c> so</c><00:10:55.200><c> now</c><00:10:55.360><c> we</c><00:10:55.519><c> found</c>

00:10:55.829 --> 00:10:55.839 align:start position:0%
list of input words so now we found
 

00:10:55.839 --> 00:10:57.030 align:start position:0%
list of input words so now we found
another<00:10:56.399><c> word</c>

00:10:57.030 --> 00:10:57.040 align:start position:0%
another word
 

00:10:57.040 --> 00:10:59.430 align:start position:0%
another word
ace<00:10:57.600><c> and</c><00:10:57.680><c> then</c><00:10:57.839><c> we</c><00:10:58.000><c> would</c><00:10:58.160><c> continue</c><00:10:58.959><c> from</c><00:10:59.200><c> our</c>

00:10:59.430 --> 00:10:59.440 align:start position:0%
ace and then we would continue from our
 

00:10:59.440 --> 00:11:00.630 align:start position:0%
ace and then we would continue from our
grid<00:10:59.760><c> in</c><00:10:59.839><c> the</c><00:11:00.000><c> only</c>

00:11:00.630 --> 00:11:00.640 align:start position:0%
grid in the only
 

00:11:00.640 --> 00:11:02.550 align:start position:0%
grid in the only
position<00:11:01.040><c> we</c><00:11:01.200><c> can</c><00:11:01.279><c> go</c><00:11:01.519><c> to</c><00:11:01.680><c> which</c><00:11:01.839><c> is</c><00:11:01.920><c> the</c><00:11:02.160><c> p</c>

00:11:02.550 --> 00:11:02.560 align:start position:0%
position we can go to which is the p
 

00:11:02.560 --> 00:11:04.310 align:start position:0%
position we can go to which is the p
right<00:11:02.720><c> so</c><00:11:02.880><c> we'd</c><00:11:03.120><c> add</c><00:11:03.279><c> a</c><00:11:03.360><c> p</c><00:11:03.519><c> we'd</c><00:11:03.760><c> say</c><00:11:03.920><c> okay</c><00:11:04.160><c> does</c>

00:11:04.310 --> 00:11:04.320 align:start position:0%
right so we'd add a p we'd say okay does
 

00:11:04.320 --> 00:11:05.829 align:start position:0%
right so we'd add a p we'd say okay does
this<00:11:04.560><c> e</c><00:11:04.800><c> have</c><00:11:04.959><c> a</c><00:11:05.120><c> child</c>

00:11:05.829 --> 00:11:05.839 align:start position:0%
this e have a child
 

00:11:05.839 --> 00:11:07.990 align:start position:0%
this e have a child
p<00:11:06.160><c> it</c><00:11:06.320><c> does</c><00:11:06.640><c> not</c><00:11:07.120><c> so</c><00:11:07.279><c> therefore</c><00:11:07.680><c> we</c><00:11:07.839><c> can't</c>

00:11:07.990 --> 00:11:08.000 align:start position:0%
p it does not so therefore we can't
 

00:11:08.000 --> 00:11:09.350 align:start position:0%
p it does not so therefore we can't
continue<00:11:08.399><c> so</c><00:11:08.560><c> that's</c><00:11:08.720><c> going</c><00:11:08.800><c> to</c><00:11:08.880><c> be</c><00:11:08.959><c> our</c><00:11:09.120><c> base</c>

00:11:09.350 --> 00:11:09.360 align:start position:0%
continue so that's going to be our base
 

00:11:09.360 --> 00:11:09.750 align:start position:0%
continue so that's going to be our base
case

00:11:09.750 --> 00:11:09.760 align:start position:0%
case
 

00:11:09.760 --> 00:11:11.509 align:start position:0%
case
but<00:11:09.920><c> it's</c><00:11:10.079><c> okay</c><00:11:10.399><c> because</c><00:11:10.640><c> we</c><00:11:10.800><c> at</c><00:11:10.880><c> least</c><00:11:11.200><c> found</c>

00:11:11.509 --> 00:11:11.519 align:start position:0%
but it's okay because we at least found
 

00:11:11.519 --> 00:11:13.750 align:start position:0%
but it's okay because we at least found
one<00:11:11.920><c> word</c><00:11:12.480><c> so</c><00:11:12.640><c> we</c><00:11:12.800><c> can</c><00:11:12.880><c> go</c><00:11:13.040><c> ahead</c><00:11:13.200><c> and</c><00:11:13.360><c> add</c><00:11:13.600><c> that</c>

00:11:13.750 --> 00:11:13.760 align:start position:0%
one word so we can go ahead and add that
 

00:11:13.760 --> 00:11:13.990 align:start position:0%
one word so we can go ahead and add that
to

00:11:13.990 --> 00:11:14.000 align:start position:0%
to
 

00:11:14.000 --> 00:11:17.509 align:start position:0%
to
our<00:11:14.079><c> list</c><00:11:14.399><c> of</c><00:11:14.480><c> words</c><00:11:14.880><c> ape</c><00:11:15.519><c> and</c><00:11:16.240><c> ace</c><00:11:16.959><c> so</c><00:11:17.120><c> now</c><00:11:17.360><c> is</c>

00:11:17.509 --> 00:11:17.519 align:start position:0%
our list of words ape and ace so now is
 

00:11:17.519 --> 00:11:19.110 align:start position:0%
our list of words ape and ace so now is
going<00:11:17.600><c> to</c><00:11:17.680><c> be</c><00:11:17.839><c> the</c><00:11:18.000><c> easy</c><00:11:18.240><c> part</c><00:11:18.480><c> so</c><00:11:18.640><c> we</c><00:11:18.880><c> we</c>

00:11:19.110 --> 00:11:19.120 align:start position:0%
going to be the easy part so we we
 

00:11:19.120 --> 00:11:20.870 align:start position:0%
going to be the easy part so we we
started<00:11:19.440><c> our</c><00:11:19.519><c> dfs</c><00:11:20.000><c> from</c><00:11:20.160><c> this</c><00:11:20.399><c> position</c><00:11:20.720><c> now</c>

00:11:20.870 --> 00:11:20.880 align:start position:0%
started our dfs from this position now
 

00:11:20.880 --> 00:11:21.990 align:start position:0%
started our dfs from this position now
let's<00:11:21.120><c> start</c><00:11:21.279><c> the</c><00:11:21.360><c> dfs</c>

00:11:21.990 --> 00:11:22.000 align:start position:0%
let's start the dfs
 

00:11:22.000 --> 00:11:24.550 align:start position:0%
let's start the dfs
from<00:11:22.320><c> c</c><00:11:22.720><c> so</c><00:11:22.880><c> we</c><00:11:23.040><c> look</c><00:11:23.279><c> in</c><00:11:23.360><c> our</c><00:11:23.519><c> prefix</c><00:11:24.000><c> tree</c><00:11:24.399><c> we</c>

00:11:24.550 --> 00:11:24.560 align:start position:0%
from c so we look in our prefix tree we
 

00:11:24.560 --> 00:11:25.350 align:start position:0%
from c so we look in our prefix tree we
do<00:11:24.800><c> have</c>

00:11:25.350 --> 00:11:25.360 align:start position:0%
do have
 

00:11:25.360 --> 00:11:27.190 align:start position:0%
do have
a<00:11:25.440><c> prefix</c><00:11:25.920><c> starting</c><00:11:26.240><c> at</c><00:11:26.480><c> a</c><00:11:26.640><c> do</c><00:11:26.800><c> we</c><00:11:26.959><c> have</c><00:11:27.040><c> a</c>

00:11:27.190 --> 00:11:27.200 align:start position:0%
a prefix starting at a do we have a
 

00:11:27.200 --> 00:11:28.470 align:start position:0%
a prefix starting at a do we have a
prefix<00:11:27.600><c> starting</c><00:11:27.920><c> at</c><00:11:28.160><c> c</c>

00:11:28.470 --> 00:11:28.480 align:start position:0%
prefix starting at c
 

00:11:28.480 --> 00:11:31.269 align:start position:0%
prefix starting at c
we<00:11:28.880><c> don't</c><00:11:29.279><c> so</c><00:11:29.519><c> immediately</c><00:11:30.160><c> we</c><00:11:30.320><c> can</c><00:11:30.480><c> say</c><00:11:30.720><c> okay</c>

00:11:31.269 --> 00:11:31.279 align:start position:0%
we don't so immediately we can say okay
 

00:11:31.279 --> 00:11:32.550 align:start position:0%
we don't so immediately we can say okay
we<00:11:31.440><c> know</c><00:11:31.680><c> for</c><00:11:32.000><c> sure</c>

00:11:32.550 --> 00:11:32.560 align:start position:0%
we know for sure
 

00:11:32.560 --> 00:11:34.470 align:start position:0%
we know for sure
none<00:11:32.720><c> of</c><00:11:32.959><c> our</c><00:11:33.120><c> words</c><00:11:33.760><c> start</c><00:11:34.160><c> with</c><00:11:34.320><c> the</c>

00:11:34.470 --> 00:11:34.480 align:start position:0%
none of our words start with the
 

00:11:34.480 --> 00:11:36.069 align:start position:0%
none of our words start with the
character<00:11:34.959><c> c</c><00:11:35.440><c> we</c><00:11:35.600><c> didn't</c>

00:11:36.069 --> 00:11:36.079 align:start position:0%
character c we didn't
 

00:11:36.079 --> 00:11:37.750 align:start position:0%
character c we didn't
we<00:11:36.240><c> didn't</c><00:11:36.480><c> just</c><00:11:36.800><c> have</c><00:11:36.959><c> to</c><00:11:37.120><c> we</c><00:11:37.279><c> didn't</c><00:11:37.440><c> have</c><00:11:37.519><c> to</c>

00:11:37.750 --> 00:11:37.760 align:start position:0%
we didn't just have to we didn't have to
 

00:11:37.760 --> 00:11:39.990 align:start position:0%
we didn't just have to we didn't have to
run<00:11:38.079><c> through</c><00:11:38.399><c> the</c><00:11:38.720><c> list</c><00:11:39.120><c> of</c><00:11:39.279><c> words</c><00:11:39.600><c> to</c><00:11:39.680><c> do</c><00:11:39.839><c> that</c>

00:11:39.990 --> 00:11:40.000 align:start position:0%
run through the list of words to do that
 

00:11:40.000 --> 00:11:41.110 align:start position:0%
run through the list of words to do that
we<00:11:40.160><c> just</c><00:11:40.480><c> did</c><00:11:40.720><c> that</c>

00:11:41.110 --> 00:11:41.120 align:start position:0%
we just did that
 

00:11:41.120 --> 00:11:43.990 align:start position:0%
we just did that
in<00:11:41.279><c> an</c><00:11:41.519><c> o</c><00:11:41.760><c> of</c><00:11:42.160><c> one</c><00:11:42.560><c> operation</c><00:11:43.120><c> we</c><00:11:43.279><c> just</c><00:11:43.519><c> checked</c>

00:11:43.990 --> 00:11:44.000 align:start position:0%
in an o of one operation we just checked
 

00:11:44.000 --> 00:11:44.790 align:start position:0%
in an o of one operation we just checked
do<00:11:44.240><c> any</c>

00:11:44.790 --> 00:11:44.800 align:start position:0%
do any
 

00:11:44.800 --> 00:11:47.190 align:start position:0%
do any
is<00:11:44.959><c> our</c><00:11:45.200><c> root</c><00:11:45.519><c> node</c><00:11:46.240><c> does</c><00:11:46.480><c> our</c><00:11:46.560><c> root</c><00:11:46.800><c> node</c><00:11:47.040><c> have</c>

00:11:47.190 --> 00:11:47.200 align:start position:0%
is our root node does our root node have
 

00:11:47.200 --> 00:11:47.829 align:start position:0%
is our root node does our root node have
a<00:11:47.279><c> child</c>

00:11:47.829 --> 00:11:47.839 align:start position:0%
a child
 

00:11:47.839 --> 00:11:50.949 align:start position:0%
a child
c<00:11:48.320><c> it</c><00:11:48.399><c> does</c><00:11:48.720><c> not</c><00:11:49.360><c> so</c><00:11:49.600><c> therefore</c><00:11:50.480><c> none</c><00:11:50.720><c> of</c><00:11:50.800><c> the</c>

00:11:50.949 --> 00:11:50.959 align:start position:0%
c it does not so therefore none of the
 

00:11:50.959 --> 00:11:51.509 align:start position:0%
c it does not so therefore none of the
words

00:11:51.509 --> 00:11:51.519 align:start position:0%
words
 

00:11:51.519 --> 00:11:52.949 align:start position:0%
words
start<00:11:51.760><c> with</c><00:11:51.920><c> a</c><00:11:52.000><c> c</c><00:11:52.160><c> so</c><00:11:52.320><c> we</c><00:11:52.399><c> don't</c><00:11:52.560><c> even</c><00:11:52.800><c> have</c><00:11:52.880><c> to</c>

00:11:52.949 --> 00:11:52.959 align:start position:0%
start with a c so we don't even have to
 

00:11:52.959 --> 00:11:55.269 align:start position:0%
start with a c so we don't even have to
continue<00:11:53.440><c> the</c><00:11:53.519><c> dfs</c><00:11:54.160><c> from</c><00:11:54.399><c> this</c><00:11:54.639><c> position</c>

00:11:55.269 --> 00:11:55.279 align:start position:0%
continue the dfs from this position
 

00:11:55.279 --> 00:11:56.949 align:start position:0%
continue the dfs from this position
and<00:11:55.440><c> you</c><00:11:55.600><c> can</c><00:11:55.760><c> tell</c><00:11:56.079><c> that's</c><00:11:56.399><c> the</c><00:11:56.560><c> same</c><00:11:56.880><c> is</c>

00:11:56.949 --> 00:11:56.959 align:start position:0%
and you can tell that's the same is
 

00:11:56.959 --> 00:11:58.389 align:start position:0%
and you can tell that's the same is
going<00:11:57.040><c> to</c><00:11:57.120><c> happen</c><00:11:57.360><c> for</c><00:11:57.519><c> the</c><00:11:57.600><c> character</c><00:11:58.079><c> e</c>

00:11:58.389 --> 00:11:58.399 align:start position:0%
going to happen for the character e
 

00:11:58.399 --> 00:12:00.069 align:start position:0%
going to happen for the character e
none<00:11:58.639><c> of</c><00:11:58.720><c> the</c><00:11:58.800><c> words</c><00:11:59.120><c> start</c><00:11:59.360><c> with</c><00:11:59.519><c> e</c><00:11:59.760><c> we</c><00:11:59.920><c> don't</c>

00:12:00.069 --> 00:12:00.079 align:start position:0%
none of the words start with e we don't
 

00:12:00.079 --> 00:12:02.550 align:start position:0%
none of the words start with e we don't
have<00:12:00.240><c> an</c><00:12:00.480><c> e</c><00:12:00.800><c> root</c><00:12:01.040><c> node</c><00:12:01.279><c> in</c><00:12:01.440><c> our</c><00:12:01.519><c> prefix</c><00:12:02.000><c> tree</c>

00:12:02.550 --> 00:12:02.560 align:start position:0%
have an e root node in our prefix tree
 

00:12:02.560 --> 00:12:04.550 align:start position:0%
have an e root node in our prefix tree
similarly<00:12:03.200><c> p</c><00:12:03.440><c> we</c><00:12:03.600><c> don't</c><00:12:03.760><c> have</c><00:12:03.920><c> any</c><00:12:04.079><c> root</c><00:12:04.320><c> node</c>

00:12:04.550 --> 00:12:04.560 align:start position:0%
similarly p we don't have any root node
 

00:12:04.560 --> 00:12:06.389 align:start position:0%
similarly p we don't have any root node
p<00:12:04.880><c> in</c><00:12:05.040><c> other</c><00:12:05.279><c> words</c><00:12:05.600><c> start</c><00:12:05.760><c> with</c><00:12:06.000><c> p</c>

00:12:06.389 --> 00:12:06.399 align:start position:0%
p in other words start with p
 

00:12:06.399 --> 00:12:08.069 align:start position:0%
p in other words start with p
so<00:12:06.880><c> so</c><00:12:07.040><c> we're</c><00:12:07.200><c> not</c><00:12:07.360><c> going</c><00:12:07.440><c> to</c><00:12:07.519><c> find</c><00:12:07.839><c> any</c>

00:12:08.069 --> 00:12:08.079 align:start position:0%
so so we're not going to find any
 

00:12:08.079 --> 00:12:09.670 align:start position:0%
so so we're not going to find any
additional<00:12:08.639><c> words</c><00:12:09.360><c> in</c>

00:12:09.670 --> 00:12:09.680 align:start position:0%
additional words in
 

00:12:09.680 --> 00:12:12.310 align:start position:0%
additional words in
this<00:12:10.160><c> grid</c><00:12:10.480><c> we</c><00:12:10.639><c> only</c><00:12:10.800><c> found</c><00:12:11.120><c> two</c><00:12:11.360><c> words</c><00:12:11.920><c> ape</c>

00:12:12.310 --> 00:12:12.320 align:start position:0%
this grid we only found two words ape
 

00:12:12.320 --> 00:12:13.110 align:start position:0%
this grid we only found two words ape
and<00:12:12.560><c> ace</c>

00:12:13.110 --> 00:12:13.120 align:start position:0%
and ace
 

00:12:13.120 --> 00:12:15.509 align:start position:0%
and ace
we<00:12:13.360><c> found</c><00:12:13.600><c> ape</c><00:12:13.839><c> and</c><00:12:14.000><c> ace</c><00:12:14.240><c> we</c><00:12:14.320><c> did</c><00:12:14.480><c> not</c><00:12:14.639><c> find</c><00:12:15.040><c> app</c>

00:12:15.509 --> 00:12:15.519 align:start position:0%
we found ape and ace we did not find app
 

00:12:15.519 --> 00:12:17.430 align:start position:0%
we found ape and ace we did not find app
so<00:12:15.760><c> we're</c><00:12:15.920><c> going</c><00:12:16.000><c> to</c><00:12:16.079><c> return</c><00:12:16.480><c> these</c><00:12:16.800><c> two</c><00:12:17.040><c> words</c>

00:12:17.430 --> 00:12:17.440 align:start position:0%
so we're going to return these two words
 

00:12:17.440 --> 00:12:18.069 align:start position:0%
so we're going to return these two words
as<00:12:17.760><c> a</c>

00:12:18.069 --> 00:12:18.079 align:start position:0%
as a
 

00:12:18.079 --> 00:12:19.829 align:start position:0%
as a
list<00:12:18.639><c> so</c><00:12:18.800><c> once</c><00:12:18.959><c> you</c><00:12:19.040><c> kind</c><00:12:19.200><c> of</c><00:12:19.360><c> understand</c><00:12:19.760><c> that</c>

00:12:19.829 --> 00:12:19.839 align:start position:0%
list so once you kind of understand that
 

00:12:19.839 --> 00:12:21.750 align:start position:0%
list so once you kind of understand that
this<00:12:20.079><c> problem</c><00:12:20.399><c> can</c><00:12:20.639><c> be</c><00:12:20.800><c> solved</c><00:12:21.040><c> by</c><00:12:21.200><c> the</c><00:12:21.360><c> prefix</c>

00:12:21.750 --> 00:12:21.760 align:start position:0%
this problem can be solved by the prefix
 

00:12:21.760 --> 00:12:22.230 align:start position:0%
this problem can be solved by the prefix
tree

00:12:22.230 --> 00:12:22.240 align:start position:0%
tree
 

00:12:22.240 --> 00:12:23.829 align:start position:0%
tree
and<00:12:22.320><c> you</c><00:12:22.480><c> know</c><00:12:22.639><c> how</c><00:12:22.800><c> to</c><00:12:22.959><c> implement</c><00:12:23.360><c> a</c><00:12:23.440><c> prefix</c>

00:12:23.829 --> 00:12:23.839 align:start position:0%
and you know how to implement a prefix
 

00:12:23.839 --> 00:12:25.030 align:start position:0%
and you know how to implement a prefix
tree<00:12:24.079><c> and</c><00:12:24.160><c> you</c><00:12:24.240><c> know</c><00:12:24.399><c> how</c><00:12:24.480><c> to</c><00:12:24.639><c> implement</c>

00:12:25.030 --> 00:12:25.040 align:start position:0%
tree and you know how to implement
 

00:12:25.040 --> 00:12:27.030 align:start position:0%
tree and you know how to implement
backtracking<00:12:25.760><c> dfs</c><00:12:26.320><c> which</c><00:12:26.560><c> you</c><00:12:26.639><c> can</c><00:12:26.800><c> learn</c>

00:12:27.030 --> 00:12:27.040 align:start position:0%
backtracking dfs which you can learn
 

00:12:27.040 --> 00:12:27.829 align:start position:0%
backtracking dfs which you can learn
from<00:12:27.279><c> word</c>

00:12:27.829 --> 00:12:27.839 align:start position:0%
from word
 

00:12:27.839 --> 00:12:30.790 align:start position:0%
from word
or<00:12:28.079><c> word</c><00:12:28.639><c> search</c><00:12:29.120><c> one</c><00:12:29.760><c> this</c><00:12:30.000><c> problem</c><00:12:30.399><c> is</c><00:12:30.480><c> not</c>

00:12:30.790 --> 00:12:30.800 align:start position:0%
or word search one this problem is not
 

00:12:30.800 --> 00:12:31.750 align:start position:0%
or word search one this problem is not
too<00:12:31.040><c> difficult</c>

00:12:31.750 --> 00:12:31.760 align:start position:0%
too difficult
 

00:12:31.760 --> 00:12:33.509 align:start position:0%
too difficult
so<00:12:32.000><c> now</c><00:12:32.160><c> let's</c><00:12:32.320><c> write</c><00:12:32.560><c> the</c><00:12:32.720><c> code</c><00:12:33.040><c> so</c><00:12:33.200><c> the</c><00:12:33.279><c> first</c>

00:12:33.509 --> 00:12:33.519 align:start position:0%
so now let's write the code so the first
 

00:12:33.519 --> 00:12:35.110 align:start position:0%
so now let's write the code so the first
thing<00:12:33.680><c> i</c><00:12:33.760><c> want</c><00:12:33.839><c> to</c><00:12:33.920><c> do</c><00:12:34.079><c> is</c><00:12:34.240><c> actually</c><00:12:34.639><c> implement</c>

00:12:35.110 --> 00:12:35.120 align:start position:0%
thing i want to do is actually implement
 

00:12:35.120 --> 00:12:36.069 align:start position:0%
thing i want to do is actually implement
a<00:12:35.279><c> try</c><00:12:35.680><c> node</c>

00:12:36.069 --> 00:12:36.079 align:start position:0%
a try node
 

00:12:36.079 --> 00:12:39.269 align:start position:0%
a try node
class<00:12:36.639><c> or</c><00:12:36.880><c> a</c><00:12:37.040><c> try</c><00:12:37.360><c> class</c><00:12:37.760><c> basically</c><00:12:38.480><c> and</c><00:12:38.880><c> so</c>

00:12:39.269 --> 00:12:39.279 align:start position:0%
class or a try class basically and so
 

00:12:39.279 --> 00:12:41.990 align:start position:0%
class or a try class basically and so
in<00:12:39.360><c> the</c><00:12:39.519><c> constructor</c><00:12:40.320><c> of</c><00:12:40.560><c> this</c><00:12:41.279><c> if</c><00:12:41.440><c> you</c><00:12:41.680><c> have</c>

00:12:41.990 --> 00:12:42.000 align:start position:0%
in the constructor of this if you have
 

00:12:42.000 --> 00:12:43.110 align:start position:0%
in the constructor of this if you have
written<00:12:42.399><c> a</c><00:12:42.560><c> try</c>

00:12:43.110 --> 00:12:43.120 align:start position:0%
written a try
 

00:12:43.120 --> 00:12:45.750 align:start position:0%
written a try
before<00:12:43.680><c> you'll</c><00:12:44.000><c> know</c><00:12:44.480><c> that</c><00:12:44.959><c> there</c><00:12:45.200><c> are</c><00:12:45.279><c> mainly</c>

00:12:45.750 --> 00:12:45.760 align:start position:0%
before you'll know that there are mainly
 

00:12:45.760 --> 00:12:47.990 align:start position:0%
before you'll know that there are mainly
two<00:12:46.079><c> things</c><00:12:46.399><c> that</c><00:12:46.639><c> we</c><00:12:46.800><c> worry</c><00:12:47.120><c> about</c><00:12:47.360><c> for</c><00:12:47.600><c> a</c><00:12:47.680><c> try</c>

00:12:47.990 --> 00:12:48.000 align:start position:0%
two things that we worry about for a try
 

00:12:48.000 --> 00:12:48.870 align:start position:0%
two things that we worry about for a try
node<00:12:48.399><c> and</c><00:12:48.560><c> that</c>

00:12:48.870 --> 00:12:48.880 align:start position:0%
node and that
 

00:12:48.880 --> 00:12:51.590 align:start position:0%
node and that
is<00:12:49.680><c> its</c><00:12:50.000><c> list</c><00:12:50.480><c> of</c><00:12:50.720><c> children</c><00:12:51.200><c> so</c><00:12:51.360><c> that's</c><00:12:51.519><c> going</c>

00:12:51.590 --> 00:12:51.600 align:start position:0%
is its list of children so that's going
 

00:12:51.600 --> 00:12:52.629 align:start position:0%
is its list of children so that's going
to<00:12:51.680><c> be</c><00:12:51.839><c> one</c><00:12:52.160><c> member</c>

00:12:52.629 --> 00:12:52.639 align:start position:0%
to be one member
 

00:12:52.639 --> 00:12:54.230 align:start position:0%
to be one member
variable<00:12:53.040><c> for</c><00:12:53.279><c> this</c><00:12:53.440><c> class</c><00:12:53.760><c> a</c><00:12:53.839><c> list</c><00:12:54.079><c> of</c>

00:12:54.230 --> 00:12:54.240 align:start position:0%
variable for this class a list of
 

00:12:54.240 --> 00:12:55.670 align:start position:0%
variable for this class a list of
children<00:12:54.480><c> now</c><00:12:54.639><c> you</c><00:12:54.720><c> could</c><00:12:54.880><c> use</c><00:12:55.040><c> a</c><00:12:55.200><c> list</c><00:12:55.600><c> in</c>

00:12:55.670 --> 00:12:55.680 align:start position:0%
children now you could use a list in
 

00:12:55.680 --> 00:12:56.470 align:start position:0%
children now you could use a list in
this<00:12:55.920><c> case</c>

00:12:56.470 --> 00:12:56.480 align:start position:0%
this case
 

00:12:56.480 --> 00:12:57.829 align:start position:0%
this case
all<00:12:56.720><c> characters</c><00:12:57.200><c> i</c><00:12:57.279><c> think</c><00:12:57.440><c> are</c><00:12:57.519><c> going</c><00:12:57.600><c> to</c><00:12:57.760><c> be</c>

00:12:57.829 --> 00:12:57.839 align:start position:0%
all characters i think are going to be
 

00:12:57.839 --> 00:12:59.670 align:start position:0%
all characters i think are going to be
from<00:12:58.079><c> lower</c><00:12:58.399><c> case</c><00:12:58.720><c> a</c><00:12:58.880><c> to</c><00:12:59.040><c> z</c><00:12:59.200><c> but</c><00:12:59.360><c> a</c><00:12:59.440><c> more</c>

00:12:59.670 --> 00:12:59.680 align:start position:0%
from lower case a to z but a more
 

00:12:59.680 --> 00:13:01.509 align:start position:0%
from lower case a to z but a more
generic<00:13:00.160><c> way</c><00:13:00.320><c> to</c><00:13:00.399><c> handle</c><00:13:00.800><c> it</c><00:13:00.880><c> is</c><00:13:00.959><c> just</c><00:13:01.200><c> using</c><00:13:01.440><c> a</c>

00:13:01.509 --> 00:13:01.519 align:start position:0%
generic way to handle it is just using a
 

00:13:01.519 --> 00:13:02.389 align:start position:0%
generic way to handle it is just using a
hash<00:13:01.920><c> map</c>

00:13:02.389 --> 00:13:02.399 align:start position:0%
hash map
 

00:13:02.399 --> 00:13:04.230 align:start position:0%
hash map
so<00:13:02.560><c> the</c><00:13:02.720><c> key</c><00:13:02.959><c> is</c><00:13:03.120><c> going</c><00:13:03.200><c> to</c><00:13:03.279><c> be</c><00:13:03.440><c> the</c><00:13:03.519><c> character</c>

00:13:04.230 --> 00:13:04.240 align:start position:0%
so the key is going to be the character
 

00:13:04.240 --> 00:13:06.310 align:start position:0%
so the key is going to be the character
and<00:13:04.560><c> the</c><00:13:04.720><c> value</c><00:13:05.200><c> in</c><00:13:05.279><c> this</c><00:13:05.600><c> hash</c><00:13:05.839><c> map</c><00:13:06.160><c> is</c><00:13:06.240><c> going</c>

00:13:06.310 --> 00:13:06.320 align:start position:0%
and the value in this hash map is going
 

00:13:06.320 --> 00:13:07.430 align:start position:0%
and the value in this hash map is going
to<00:13:06.399><c> be</c><00:13:06.560><c> the</c><00:13:06.880><c> child</c>

00:13:07.430 --> 00:13:07.440 align:start position:0%
to be the child
 

00:13:07.440 --> 00:13:11.030 align:start position:0%
to be the child
node<00:13:08.000><c> the</c><00:13:08.240><c> child</c><00:13:08.800><c> tri</c><00:13:09.279><c> node</c><00:13:10.079><c> and</c><00:13:10.320><c> also</c><00:13:10.800><c> for</c>

00:13:11.030 --> 00:13:11.040 align:start position:0%
node the child tri node and also for
 

00:13:11.040 --> 00:13:11.509 align:start position:0%
node the child tri node and also for
each

00:13:11.509 --> 00:13:11.519 align:start position:0%
each
 

00:13:11.519 --> 00:13:13.590 align:start position:0%
each
node<00:13:11.760><c> you</c><00:13:11.920><c> want</c><00:13:12.000><c> to</c><00:13:12.160><c> be</c><00:13:12.240><c> able</c><00:13:12.320><c> to</c><00:13:12.560><c> mark</c><00:13:13.120><c> if</c><00:13:13.360><c> it</c>

00:13:13.590 --> 00:13:13.600 align:start position:0%
node you want to be able to mark if it
 

00:13:13.600 --> 00:13:15.430 align:start position:0%
node you want to be able to mark if it
is<00:13:13.760><c> the</c><00:13:14.000><c> end</c><00:13:14.160><c> of</c><00:13:14.320><c> a</c><00:13:14.399><c> word</c><00:13:14.639><c> or</c><00:13:14.800><c> not</c><00:13:15.120><c> so</c>

00:13:15.430 --> 00:13:15.440 align:start position:0%
is the end of a word or not so
 

00:13:15.440 --> 00:13:17.910 align:start position:0%
is the end of a word or not so
one<00:13:15.680><c> member</c><00:13:16.000><c> variable</c><00:13:16.399><c> for</c><00:13:16.800><c> is</c><00:13:17.440><c> word</c><00:13:17.760><c> it's</c>

00:13:17.910 --> 00:13:17.920 align:start position:0%
one member variable for is word it's
 

00:13:17.920 --> 00:13:19.430 align:start position:0%
one member variable for is word it's
going<00:13:18.000><c> to</c><00:13:18.079><c> be</c><00:13:18.160><c> a</c><00:13:18.240><c> boolean</c><00:13:18.720><c> initially</c><00:13:19.120><c> we</c><00:13:19.279><c> can</c>

00:13:19.430 --> 00:13:19.440 align:start position:0%
going to be a boolean initially we can
 

00:13:19.440 --> 00:13:20.790 align:start position:0%
going to be a boolean initially we can
set<00:13:19.600><c> it</c><00:13:19.680><c> to</c><00:13:19.920><c> false</c>

00:13:20.790 --> 00:13:20.800 align:start position:0%
set it to false
 

00:13:20.800 --> 00:13:23.030 align:start position:0%
set it to false
now<00:13:20.959><c> to</c><00:13:21.200><c> our</c><00:13:21.440><c> try</c><00:13:21.920><c> we</c><00:13:22.160><c> are</c><00:13:22.240><c> going</c><00:13:22.399><c> to</c><00:13:22.560><c> want</c><00:13:22.800><c> to</c>

00:13:23.030 --> 00:13:23.040 align:start position:0%
now to our try we are going to want to
 

00:13:23.040 --> 00:13:24.949 align:start position:0%
now to our try we are going to want to
add<00:13:23.360><c> words</c><00:13:23.760><c> to</c><00:13:23.920><c> it</c><00:13:24.000><c> so</c><00:13:24.160><c> let's</c><00:13:24.320><c> define</c><00:13:24.720><c> one</c>

00:13:24.949 --> 00:13:24.959 align:start position:0%
add words to it so let's define one
 

00:13:24.959 --> 00:13:26.310 align:start position:0%
add words to it so let's define one
function<00:13:25.440><c> add</c><00:13:25.760><c> word</c>

00:13:26.310 --> 00:13:26.320 align:start position:0%
function add word
 

00:13:26.320 --> 00:13:27.910 align:start position:0%
function add word
and<00:13:26.480><c> this</c><00:13:26.720><c> is</c><00:13:26.800><c> really</c><00:13:27.040><c> going</c><00:13:27.120><c> to</c><00:13:27.200><c> be</c><00:13:27.360><c> the</c><00:13:27.519><c> only</c>

00:13:27.910 --> 00:13:27.920 align:start position:0%
and this is really going to be the only
 

00:13:27.920 --> 00:13:30.069 align:start position:0%
and this is really going to be the only
function<00:13:28.320><c> so</c><00:13:28.720><c> we'll</c><00:13:28.880><c> be</c><00:13:29.040><c> passed</c><00:13:29.360><c> in</c><00:13:29.440><c> a</c><00:13:29.600><c> string</c>

00:13:30.069 --> 00:13:30.079 align:start position:0%
function so we'll be passed in a string
 

00:13:30.079 --> 00:13:31.829 align:start position:0%
function so we'll be passed in a string
a<00:13:30.240><c> word</c><00:13:30.560><c> and</c><00:13:30.639><c> we</c><00:13:30.800><c> just</c><00:13:30.880><c> want</c><00:13:31.040><c> to</c><00:13:31.200><c> add</c><00:13:31.440><c> that</c><00:13:31.600><c> word</c>

00:13:31.829 --> 00:13:31.839 align:start position:0%
a word and we just want to add that word
 

00:13:31.839 --> 00:13:33.110 align:start position:0%
a word and we just want to add that word
to<00:13:32.079><c> our</c><00:13:32.240><c> try</c>

00:13:33.110 --> 00:13:33.120 align:start position:0%
to our try
 

00:13:33.120 --> 00:13:35.750 align:start position:0%
to our try
so<00:13:33.519><c> let's</c><00:13:34.160><c> get</c><00:13:34.399><c> our</c><00:13:34.560><c> current</c><00:13:34.959><c> pointer</c><00:13:35.360><c> to</c><00:13:35.519><c> be</c>

00:13:35.750 --> 00:13:35.760 align:start position:0%
so let's get our current pointer to be
 

00:13:35.760 --> 00:13:36.550 align:start position:0%
so let's get our current pointer to be
at<00:13:36.000><c> the</c>

00:13:36.550 --> 00:13:36.560 align:start position:0%
at the
 

00:13:36.560 --> 00:13:38.710 align:start position:0%
at the
root<00:13:36.800><c> node</c><00:13:37.040><c> which</c><00:13:37.279><c> is</c><00:13:37.440><c> just</c><00:13:37.680><c> the</c><00:13:37.920><c> self</c><00:13:38.320><c> node</c>

00:13:38.710 --> 00:13:38.720 align:start position:0%
root node which is just the self node
 

00:13:38.720 --> 00:13:40.230 align:start position:0%
root node which is just the self node
and<00:13:38.880><c> then</c><00:13:39.120><c> we're</c><00:13:39.279><c> gonna</c><00:13:39.440><c> go</c><00:13:39.680><c> character</c><00:13:40.079><c> by</c>

00:13:40.230 --> 00:13:40.240 align:start position:0%
and then we're gonna go character by
 

00:13:40.240 --> 00:13:41.829 align:start position:0%
and then we're gonna go character by
character<00:13:40.720><c> in</c><00:13:40.880><c> this</c><00:13:41.040><c> word</c><00:13:41.360><c> and</c><00:13:41.440><c> just</c><00:13:41.600><c> start</c>

00:13:41.829 --> 00:13:41.839 align:start position:0%
character in this word and just start
 

00:13:41.839 --> 00:13:43.110 align:start position:0%
character in this word and just start
adding<00:13:42.240><c> them</c>

00:13:43.110 --> 00:13:43.120 align:start position:0%
adding them
 

00:13:43.120 --> 00:13:46.150 align:start position:0%
adding them
now<00:13:43.360><c> it's</c><00:13:43.600><c> possible</c><00:13:44.560><c> that</c><00:13:44.880><c> the</c><00:13:45.360><c> the</c><00:13:45.519><c> character</c>

00:13:46.150 --> 00:13:46.160 align:start position:0%
now it's possible that the the character
 

00:13:46.160 --> 00:13:48.389 align:start position:0%
now it's possible that the the character
might<00:13:46.480><c> not</c><00:13:46.800><c> exist</c><00:13:47.360><c> in</c><00:13:47.519><c> our</c><00:13:47.680><c> tri</c><00:13:47.920><c> node</c><00:13:48.240><c> if</c><00:13:48.320><c> it</c>

00:13:48.389 --> 00:13:48.399 align:start position:0%
might not exist in our tri node if it
 

00:13:48.399 --> 00:13:49.910 align:start position:0%
might not exist in our tri node if it
does<00:13:48.639><c> not</c><00:13:48.880><c> exist</c><00:13:49.199><c> so</c><00:13:49.360><c> if</c><00:13:49.600><c> c</c>

00:13:49.910 --> 00:13:49.920 align:start position:0%
does not exist so if c
 

00:13:49.920 --> 00:13:53.590 align:start position:0%
does not exist so if c
not<00:13:50.399><c> in</c><00:13:51.199><c> current</c><00:13:51.760><c> dot</c><00:13:52.160><c> children</c><00:13:52.800><c> if</c><00:13:53.040><c> this</c>

00:13:53.590 --> 00:13:53.600 align:start position:0%
not in current dot children if this
 

00:13:53.600 --> 00:13:55.269 align:start position:0%
not in current dot children if this
character<00:13:54.000><c> does</c><00:13:54.320><c> not</c><00:13:54.560><c> exist</c><00:13:54.959><c> then</c><00:13:55.120><c> we're</c>

00:13:55.269 --> 00:13:55.279 align:start position:0%
character does not exist then we're
 

00:13:55.279 --> 00:13:57.350 align:start position:0%
character does not exist then we're
going<00:13:55.360><c> to</c><00:13:55.519><c> obviously</c><00:13:56.000><c> have</c><00:13:56.160><c> to</c><00:13:56.399><c> insert</c><00:13:56.880><c> it</c>

00:13:57.350 --> 00:13:57.360 align:start position:0%
going to obviously have to insert it
 

00:13:57.360 --> 00:14:00.230 align:start position:0%
going to obviously have to insert it
so<00:13:57.639><c> current.children</c><00:13:58.959><c> at</c><00:13:59.199><c> character</c><00:13:59.760><c> c</c><00:14:00.079><c> we</c>

00:14:00.230 --> 00:14:00.240 align:start position:0%
so current.children at character c we
 

00:14:00.240 --> 00:14:02.069 align:start position:0%
so current.children at character c we
want<00:14:00.399><c> to</c><00:14:00.480><c> create</c><00:14:00.880><c> a</c><00:14:01.040><c> try</c><00:14:01.360><c> node</c><00:14:01.600><c> for</c><00:14:01.839><c> this</c>

00:14:02.069 --> 00:14:02.079 align:start position:0%
want to create a try node for this
 

00:14:02.079 --> 00:14:03.670 align:start position:0%
want to create a try node for this
particular<00:14:02.720><c> character</c>

00:14:03.670 --> 00:14:03.680 align:start position:0%
particular character
 

00:14:03.680 --> 00:14:05.829 align:start position:0%
particular character
if<00:14:03.920><c> it</c><00:14:04.079><c> already</c><00:14:04.560><c> exists</c><00:14:05.199><c> then</c><00:14:05.440><c> we're</c><00:14:05.600><c> going</c><00:14:05.680><c> to</c>

00:14:05.829 --> 00:14:05.839 align:start position:0%
if it already exists then we're going to
 

00:14:05.839 --> 00:14:07.990 align:start position:0%
if it already exists then we're going to
skip<00:14:06.160><c> this</c><00:14:06.480><c> if</c><00:14:06.639><c> statement</c><00:14:07.120><c> and</c><00:14:07.279><c> simply</c><00:14:07.760><c> we're</c>

00:14:07.990 --> 00:14:08.000 align:start position:0%
skip this if statement and simply we're
 

00:14:08.000 --> 00:14:08.550 align:start position:0%
skip this if statement and simply we're
just<00:14:08.160><c> going</c><00:14:08.240><c> to</c>

00:14:08.550 --> 00:14:08.560 align:start position:0%
just going to
 

00:14:08.560 --> 00:14:10.470 align:start position:0%
just going to
move<00:14:08.880><c> our</c><00:14:09.120><c> current</c><00:14:09.440><c> pointer</c><00:14:09.920><c> to</c><00:14:10.160><c> that</c>

00:14:10.470 --> 00:14:10.480 align:start position:0%
move our current pointer to that
 

00:14:10.480 --> 00:14:13.750 align:start position:0%
move our current pointer to that
position<00:14:11.279><c> so</c><00:14:12.120><c> current.children</c>

00:14:13.750 --> 00:14:13.760 align:start position:0%
position so current.children
 

00:14:13.760 --> 00:14:16.949 align:start position:0%
position so current.children
at<00:14:14.639><c> character</c><00:14:15.279><c> c</c><00:14:15.600><c> so</c><00:14:15.839><c> that's</c><00:14:16.079><c> the</c><00:14:16.399><c> try</c><00:14:16.720><c> node</c>

00:14:16.949 --> 00:14:16.959 align:start position:0%
at character c so that's the try node
 

00:14:16.959 --> 00:14:18.550 align:start position:0%
at character c so that's the try node
that<00:14:17.120><c> we</c><00:14:17.279><c> want</c><00:14:17.519><c> and</c><00:14:17.680><c> at</c><00:14:17.760><c> the</c><00:14:18.000><c> end</c><00:14:18.240><c> all</c><00:14:18.399><c> we</c><00:14:18.480><c> have</c>

00:14:18.550 --> 00:14:18.560 align:start position:0%
that we want and at the end all we have
 

00:14:18.560 --> 00:14:20.949 align:start position:0%
that we want and at the end all we have
to<00:14:18.639><c> do</c><00:14:18.800><c> is</c><00:14:18.959><c> return</c><00:14:19.519><c> the</c><00:14:19.760><c> current</c><00:14:20.160><c> pointer</c>

00:14:20.949 --> 00:14:20.959 align:start position:0%
to do is return the current pointer
 

00:14:20.959 --> 00:14:22.470 align:start position:0%
to do is return the current pointer
or<00:14:21.199><c> actually</c><00:14:21.519><c> not</c><00:14:21.680><c> return</c><00:14:22.079><c> the</c><00:14:22.240><c> current</c>

00:14:22.470 --> 00:14:22.480 align:start position:0%
or actually not return the current
 

00:14:22.480 --> 00:14:24.069 align:start position:0%
or actually not return the current
pointer<00:14:22.720><c> at</c><00:14:22.880><c> the</c><00:14:22.959><c> end</c><00:14:23.120><c> we</c><00:14:23.279><c> have</c><00:14:23.360><c> to</c><00:14:23.519><c> mark</c><00:14:23.760><c> that</c>

00:14:24.069 --> 00:14:24.079 align:start position:0%
pointer at the end we have to mark that
 

00:14:24.079 --> 00:14:25.750 align:start position:0%
pointer at the end we have to mark that
this<00:14:24.399><c> is</c><00:14:24.560><c> now</c><00:14:24.800><c> going</c><00:14:24.959><c> to</c><00:14:25.120><c> be</c><00:14:25.199><c> the</c><00:14:25.360><c> end</c><00:14:25.600><c> of</c><00:14:25.680><c> the</c>

00:14:25.750 --> 00:14:25.760 align:start position:0%
this is now going to be the end of the
 

00:14:25.760 --> 00:14:27.509 align:start position:0%
this is now going to be the end of the
word<00:14:26.079><c> so</c><00:14:26.240><c> the</c><00:14:26.320><c> last</c><00:14:26.560><c> character</c><00:14:26.959><c> that</c><00:14:27.040><c> we</c><00:14:27.199><c> ended</c>

00:14:27.509 --> 00:14:27.519 align:start position:0%
word so the last character that we ended
 

00:14:27.519 --> 00:14:27.750 align:start position:0%
word so the last character that we ended
at

00:14:27.750 --> 00:14:27.760 align:start position:0%
at
 

00:14:27.760 --> 00:14:30.550 align:start position:0%
at
current<00:14:28.560><c> is</c><00:14:28.880><c> word</c><00:14:29.440><c> we</c><00:14:29.600><c> want</c><00:14:29.760><c> to</c><00:14:29.839><c> set</c><00:14:30.079><c> that</c><00:14:30.320><c> to</c>

00:14:30.550 --> 00:14:30.560 align:start position:0%
current is word we want to set that to
 

00:14:30.560 --> 00:14:31.110 align:start position:0%
current is word we want to set that to
true

00:14:31.110 --> 00:14:31.120 align:start position:0%
true
 

00:14:31.120 --> 00:14:33.269 align:start position:0%
true
when<00:14:31.360><c> we</c><00:14:31.600><c> insert</c><00:14:32.000><c> a</c><00:14:32.160><c> word</c><00:14:32.720><c> now</c><00:14:32.880><c> the</c><00:14:33.040><c> reason</c>

00:14:33.269 --> 00:14:33.279 align:start position:0%
when we insert a word now the reason
 

00:14:33.279 --> 00:14:34.790 align:start position:0%
when we insert a word now the reason
we're<00:14:33.360><c> not</c><00:14:33.519><c> going</c><00:14:33.600><c> to</c><00:14:33.680><c> define</c><00:14:34.160><c> a</c><00:14:34.399><c> search</c>

00:14:34.790 --> 00:14:34.800 align:start position:0%
we're not going to define a search
 

00:14:34.800 --> 00:14:36.470 align:start position:0%
we're not going to define a search
function<00:14:35.199><c> like</c><00:14:35.440><c> searching</c><00:14:35.839><c> a</c><00:14:35.920><c> word</c><00:14:36.160><c> in</c><00:14:36.240><c> this</c>

00:14:36.470 --> 00:14:36.480 align:start position:0%
function like searching a word in this
 

00:14:36.480 --> 00:14:37.670 align:start position:0%
function like searching a word in this
trinode<00:14:36.880><c> is</c><00:14:37.040><c> because</c><00:14:37.199><c> we're</c><00:14:37.360><c> going</c><00:14:37.440><c> to</c><00:14:37.519><c> be</c>

00:14:37.670 --> 00:14:37.680 align:start position:0%
trinode is because we're going to be
 

00:14:37.680 --> 00:14:38.350 align:start position:0%
trinode is because we're going to be
doing<00:14:38.000><c> that</c>

00:14:38.350 --> 00:14:38.360 align:start position:0%
doing that
 

00:14:38.360 --> 00:14:40.710 align:start position:0%
doing that
simultaneously<00:14:39.440><c> as</c><00:14:39.680><c> we</c><00:14:39.839><c> do</c><00:14:40.000><c> our</c><00:14:40.160><c> depth</c><00:14:40.399><c> first</c>

00:14:40.710 --> 00:14:40.720 align:start position:0%
simultaneously as we do our depth first
 

00:14:40.720 --> 00:14:41.829 align:start position:0%
simultaneously as we do our depth first
search<00:14:41.279><c> on</c><00:14:41.519><c> the</c>

00:14:41.829 --> 00:14:41.839 align:start position:0%
search on the
 

00:14:41.839 --> 00:14:44.310 align:start position:0%
search on the
board<00:14:42.639><c> so</c><00:14:42.800><c> now</c><00:14:43.040><c> let's</c><00:14:43.279><c> start</c><00:14:43.600><c> getting</c><00:14:44.000><c> into</c>

00:14:44.310 --> 00:14:44.320 align:start position:0%
board so now let's start getting into
 

00:14:44.320 --> 00:14:45.750 align:start position:0%
board so now let's start getting into
the<00:14:44.639><c> dfs</c>

00:14:45.750 --> 00:14:45.760 align:start position:0%
the dfs
 

00:14:45.760 --> 00:14:47.110 align:start position:0%
the dfs
we're<00:14:46.000><c> actually</c><00:14:46.320><c> the</c><00:14:46.480><c> first</c><00:14:46.720><c> thing</c><00:14:46.959><c> we're</c>

00:14:47.110 --> 00:14:47.120 align:start position:0%
we're actually the first thing we're
 

00:14:47.120 --> 00:14:48.790 align:start position:0%
we're actually the first thing we're
going<00:14:47.199><c> to</c><00:14:47.279><c> want</c><00:14:47.440><c> to</c><00:14:47.519><c> do</c><00:14:47.680><c> is</c><00:14:47.760><c> create</c><00:14:48.160><c> a</c><00:14:48.399><c> root</c>

00:14:48.790 --> 00:14:48.800 align:start position:0%
going to want to do is create a root
 

00:14:48.800 --> 00:14:49.990 align:start position:0%
going to want to do is create a root
tri-node

00:14:49.990 --> 00:14:50.000 align:start position:0%
tri-node
 

00:14:50.000 --> 00:14:52.710 align:start position:0%
tri-node
so<00:14:50.959><c> so</c><00:14:51.120><c> let's</c><00:14:51.440><c> create</c><00:14:51.760><c> a</c><00:14:51.920><c> trinode</c><00:14:52.480><c> with</c><00:14:52.560><c> the</c>

00:14:52.710 --> 00:14:52.720 align:start position:0%
so so let's create a trinode with the
 

00:14:52.720 --> 00:14:54.150 align:start position:0%
so so let's create a trinode with the
class<00:14:52.959><c> that</c><00:14:53.120><c> we</c><00:14:53.279><c> just</c><00:14:53.440><c> defined</c><00:14:53.839><c> and</c>

00:14:54.150 --> 00:14:54.160 align:start position:0%
class that we just defined and
 

00:14:54.160 --> 00:14:55.750 align:start position:0%
class that we just defined and
for<00:14:54.320><c> every</c><00:14:54.639><c> word</c><00:14:54.959><c> that</c><00:14:55.040><c> we're</c><00:14:55.199><c> given</c><00:14:55.519><c> in</c><00:14:55.600><c> the</c>

00:14:55.750 --> 00:14:55.760 align:start position:0%
for every word that we're given in the
 

00:14:55.760 --> 00:14:57.990 align:start position:0%
for every word that we're given in the
input<00:14:56.000><c> so</c><00:14:56.160><c> for</c><00:14:56.399><c> w</c><00:14:56.880><c> in</c><00:14:56.959><c> the</c><00:14:57.120><c> list</c><00:14:57.440><c> of</c><00:14:57.519><c> words</c><00:14:57.839><c> we</c>

00:14:57.990 --> 00:14:58.000 align:start position:0%
input so for w in the list of words we
 

00:14:58.000 --> 00:14:59.189 align:start position:0%
input so for w in the list of words we
just<00:14:58.160><c> want</c><00:14:58.240><c> to</c><00:14:58.320><c> go</c><00:14:58.480><c> ahead</c><00:14:58.639><c> and</c><00:14:58.720><c> take</c>

00:14:59.189 --> 00:14:59.199 align:start position:0%
just want to go ahead and take
 

00:14:59.199 --> 00:15:02.150 align:start position:0%
just want to go ahead and take
each<00:14:59.440><c> word</c><00:14:59.760><c> and</c><00:15:00.000><c> add</c><00:15:00.240><c> it</c><00:15:00.399><c> to</c><00:15:00.639><c> our</c><00:15:00.800><c> try</c><00:15:01.279><c> so</c><00:15:01.600><c> root</c>

00:15:02.150 --> 00:15:02.160 align:start position:0%
each word and add it to our try so root
 

00:15:02.160 --> 00:15:03.430 align:start position:0%
each word and add it to our try so root
dot<00:15:02.560><c> add</c>

00:15:03.430 --> 00:15:03.440 align:start position:0%
dot add
 

00:15:03.440 --> 00:15:07.269 align:start position:0%
dot add
word<00:15:04.800><c> w</c><00:15:05.760><c> and</c><00:15:06.000><c> now</c><00:15:06.240><c> we</c><00:15:06.399><c> can</c><00:15:06.560><c> start</c><00:15:06.800><c> going</c><00:15:07.040><c> ahead</c>

00:15:07.269 --> 00:15:07.279 align:start position:0%
word w and now we can start going ahead
 

00:15:07.279 --> 00:15:08.550 align:start position:0%
word w and now we can start going ahead
and<00:15:07.360><c> doing</c><00:15:07.600><c> the</c><00:15:07.760><c> depth</c><00:15:08.000><c> first</c><00:15:08.160><c> search</c><00:15:08.399><c> so</c>

00:15:08.550 --> 00:15:08.560 align:start position:0%
and doing the depth first search so
 

00:15:08.560 --> 00:15:10.470 align:start position:0%
and doing the depth first search so
first<00:15:08.880><c> i</c><00:15:08.959><c> like</c><00:15:09.120><c> to</c><00:15:09.199><c> do</c><00:15:09.360><c> is</c><00:15:09.440><c> get</c><00:15:09.600><c> the</c><00:15:09.760><c> dimensions</c>

00:15:10.470 --> 00:15:10.480 align:start position:0%
first i like to do is get the dimensions
 

00:15:10.480 --> 00:15:12.550 align:start position:0%
first i like to do is get the dimensions
of<00:15:10.560><c> the</c><00:15:10.720><c> board</c><00:15:10.959><c> so</c><00:15:11.199><c> rows</c><00:15:11.600><c> and</c><00:15:11.680><c> columns</c>

00:15:12.550 --> 00:15:12.560 align:start position:0%
of the board so rows and columns
 

00:15:12.560 --> 00:15:14.150 align:start position:0%
of the board so rows and columns
we<00:15:12.720><c> can</c><00:15:12.800><c> get</c><00:15:13.040><c> the</c><00:15:13.279><c> length</c><00:15:13.600><c> of</c><00:15:13.680><c> the</c><00:15:13.760><c> board</c><00:15:14.000><c> we</c>

00:15:14.150 --> 00:15:14.160 align:start position:0%
we can get the length of the board we
 

00:15:14.160 --> 00:15:15.509 align:start position:0%
we can get the length of the board we
know<00:15:14.320><c> for</c><00:15:14.480><c> sure</c><00:15:14.639><c> that</c><00:15:14.800><c> the</c><00:15:14.959><c> board</c><00:15:15.279><c> is</c><00:15:15.360><c> going</c><00:15:15.440><c> to</c>

00:15:15.509 --> 00:15:15.519 align:start position:0%
know for sure that the board is going to
 

00:15:15.519 --> 00:15:17.189 align:start position:0%
know for sure that the board is going to
be<00:15:15.680><c> non-empty</c><00:15:16.399><c> and</c>

00:15:17.189 --> 00:15:17.199 align:start position:0%
be non-empty and
 

00:15:17.199 --> 00:15:19.350 align:start position:0%
be non-empty and
the<00:15:18.000><c> list</c><00:15:18.320><c> of</c><00:15:18.480><c> words</c><00:15:18.880><c> is</c><00:15:19.040><c> going</c><00:15:19.120><c> to</c><00:15:19.199><c> be</c>

00:15:19.350 --> 00:15:19.360 align:start position:0%
the list of words is going to be
 

00:15:19.360 --> 00:15:21.509 align:start position:0%
the list of words is going to be
non-empty<00:15:19.920><c> as</c><00:15:20.079><c> well</c><00:15:20.320><c> they</c><00:15:20.560><c> do</c><00:15:20.800><c> tell</c><00:15:21.040><c> us</c><00:15:21.279><c> that</c>

00:15:21.509 --> 00:15:21.519 align:start position:0%
non-empty as well they do tell us that
 

00:15:21.519 --> 00:15:23.269 align:start position:0%
non-empty as well they do tell us that
in<00:15:21.600><c> the</c><00:15:21.760><c> problem</c><00:15:22.160><c> description</c>

00:15:23.269 --> 00:15:23.279 align:start position:0%
in the problem description
 

00:15:23.279 --> 00:15:25.910 align:start position:0%
in the problem description
now<00:15:23.519><c> i'm</c><00:15:23.680><c> going</c><00:15:23.760><c> to</c><00:15:23.920><c> create</c><00:15:24.399><c> two</c><00:15:24.880><c> sets</c><00:15:25.360><c> result</c>

00:15:25.910 --> 00:15:25.920 align:start position:0%
now i'm going to create two sets result
 

00:15:25.920 --> 00:15:27.269 align:start position:0%
now i'm going to create two sets result
and<00:15:26.160><c> visit</c><00:15:26.480><c> so</c><00:15:26.639><c> result</c>

00:15:27.269 --> 00:15:27.279 align:start position:0%
and visit so result
 

00:15:27.279 --> 00:15:29.509 align:start position:0%
and visit so result
is<00:15:27.440><c> going</c><00:15:27.519><c> to</c><00:15:27.680><c> be</c><00:15:28.160><c> the</c><00:15:28.399><c> set</c><00:15:28.800><c> of</c><00:15:28.959><c> words</c><00:15:29.360><c> it's</c>

00:15:29.509 --> 00:15:29.519 align:start position:0%
is going to be the set of words it's
 

00:15:29.519 --> 00:15:31.269 align:start position:0%
is going to be the set of words it's
possible<00:15:30.000><c> we</c><00:15:30.320><c> could</c><00:15:30.639><c> visit</c>

00:15:31.269 --> 00:15:31.279 align:start position:0%
possible we could visit
 

00:15:31.279 --> 00:15:34.150 align:start position:0%
possible we could visit
the<00:15:31.519><c> same</c><00:15:31.920><c> word</c><00:15:32.399><c> twice</c><00:15:32.880><c> inside</c><00:15:33.199><c> of</c><00:15:33.360><c> our</c><00:15:33.600><c> board</c>

00:15:34.150 --> 00:15:34.160 align:start position:0%
the same word twice inside of our board
 

00:15:34.160 --> 00:15:35.509 align:start position:0%
the same word twice inside of our board
so<00:15:34.320><c> we</c><00:15:34.480><c> don't</c><00:15:34.639><c> want</c><00:15:34.800><c> to</c><00:15:34.880><c> have</c><00:15:35.120><c> to</c>

00:15:35.509 --> 00:15:35.519 align:start position:0%
so we don't want to have to
 

00:15:35.519 --> 00:15:38.150 align:start position:0%
so we don't want to have to
return<00:15:35.920><c> duplicates</c><00:15:36.720><c> and</c><00:15:37.199><c> the</c><00:15:37.360><c> visit</c><00:15:37.759><c> set</c><00:15:38.000><c> is</c>

00:15:38.150 --> 00:15:38.160 align:start position:0%
return duplicates and the visit set is
 

00:15:38.160 --> 00:15:39.990 align:start position:0%
return duplicates and the visit set is
pretty<00:15:38.480><c> self-explanatory</c><00:15:39.440><c> when</c><00:15:39.600><c> we</c><00:15:39.680><c> run</c><00:15:39.920><c> a</c>

00:15:39.990 --> 00:15:40.000 align:start position:0%
pretty self-explanatory when we run a
 

00:15:40.000 --> 00:15:40.710 align:start position:0%
pretty self-explanatory when we run a
dfs

00:15:40.710 --> 00:15:40.720 align:start position:0%
dfs
 

00:15:40.720 --> 00:15:42.949 align:start position:0%
dfs
on<00:15:40.959><c> the</c><00:15:41.199><c> board</c><00:15:41.759><c> we</c><00:15:41.920><c> don't</c><00:15:42.079><c> want</c><00:15:42.240><c> to</c><00:15:42.320><c> get</c><00:15:42.480><c> stuck</c>

00:15:42.949 --> 00:15:42.959 align:start position:0%
on the board we don't want to get stuck
 

00:15:42.959 --> 00:15:45.350 align:start position:0%
on the board we don't want to get stuck
in<00:15:43.199><c> like</c><00:15:43.440><c> an</c><00:15:43.680><c> infinite</c><00:15:44.079><c> loop</c><00:15:44.320><c> or</c><00:15:44.480><c> mainly</c>

00:15:45.350 --> 00:15:45.360 align:start position:0%
in like an infinite loop or mainly
 

00:15:45.360 --> 00:15:47.509 align:start position:0%
in like an infinite loop or mainly
we<00:15:45.519><c> don't</c><00:15:45.759><c> want</c><00:15:46.079><c> to</c><00:15:46.320><c> repeat</c><00:15:46.880><c> the</c><00:15:47.120><c> same</c>

00:15:47.509 --> 00:15:47.519 align:start position:0%
we don't want to repeat the same
 

00:15:47.519 --> 00:15:49.829 align:start position:0%
we don't want to repeat the same
character<00:15:48.079><c> twice</c><00:15:48.399><c> we're</c><00:15:48.639><c> not</c><00:15:48.880><c> allowed</c><00:15:49.360><c> to</c><00:15:49.600><c> do</c>

00:15:49.829 --> 00:15:49.839 align:start position:0%
character twice we're not allowed to do
 

00:15:49.839 --> 00:15:50.389 align:start position:0%
character twice we're not allowed to do
that

00:15:50.389 --> 00:15:50.399 align:start position:0%
that
 

00:15:50.399 --> 00:15:52.069 align:start position:0%
that
so<00:15:50.560><c> once</c><00:15:50.800><c> we</c><00:15:50.880><c> have</c><00:15:51.040><c> those</c><00:15:51.279><c> defined</c><00:15:51.759><c> we</c><00:15:51.920><c> are</c>

00:15:52.069 --> 00:15:52.079 align:start position:0%
so once we have those defined we are
 

00:15:52.079 --> 00:15:54.150 align:start position:0%
so once we have those defined we are
going<00:15:52.240><c> to</c><00:15:53.040><c> define</c><00:15:53.440><c> a</c><00:15:53.600><c> dfs</c>

00:15:54.150 --> 00:15:54.160 align:start position:0%
going to define a dfs
 

00:15:54.160 --> 00:15:55.670 align:start position:0%
going to define a dfs
recursive<00:15:54.720><c> function</c><00:15:55.120><c> we're</c><00:15:55.360><c> going</c><00:15:55.440><c> to</c><00:15:55.519><c> be</c>

00:15:55.670 --> 00:15:55.680 align:start position:0%
recursive function we're going to be
 

00:15:55.680 --> 00:15:57.110 align:start position:0%
recursive function we're going to be
going<00:15:55.920><c> through</c><00:15:56.079><c> every</c><00:15:56.320><c> position</c><00:15:56.720><c> so</c><00:15:56.880><c> we</c><00:15:56.959><c> want</c>

00:15:57.110 --> 00:15:57.120 align:start position:0%
going through every position so we want
 

00:15:57.120 --> 00:15:59.350 align:start position:0%
going through every position so we want
to<00:15:57.199><c> pass</c><00:15:57.440><c> in</c><00:15:57.519><c> the</c><00:15:57.680><c> coordinates</c><00:15:58.320><c> row</c><00:15:58.720><c> column</c><00:15:59.120><c> as</c>

00:15:59.350 --> 00:15:59.360 align:start position:0%
to pass in the coordinates row column as
 

00:15:59.360 --> 00:16:00.389 align:start position:0%
to pass in the coordinates row column as
the<00:15:59.519><c> coordinates</c>

00:16:00.389 --> 00:16:00.399 align:start position:0%
the coordinates
 

00:16:00.399 --> 00:16:02.870 align:start position:0%
the coordinates
we<00:16:00.560><c> want</c><00:16:00.720><c> to</c><00:16:00.880><c> pass</c><00:16:01.279><c> in</c><00:16:01.440><c> the</c><00:16:01.600><c> current</c><00:16:02.240><c> node</c><00:16:02.639><c> that</c>

00:16:02.870 --> 00:16:02.880 align:start position:0%
we want to pass in the current node that
 

00:16:02.880 --> 00:16:03.590 align:start position:0%
we want to pass in the current node that
we're<00:16:03.199><c> at</c>

00:16:03.590 --> 00:16:03.600 align:start position:0%
we're at
 

00:16:03.600 --> 00:16:06.230 align:start position:0%
we're at
in<00:16:03.920><c> our</c><00:16:04.160><c> try</c><00:16:05.040><c> you</c><00:16:05.199><c> know</c><00:16:05.360><c> depending</c><00:16:05.839><c> on</c><00:16:06.000><c> what</c>

00:16:06.230 --> 00:16:06.240 align:start position:0%
in our try you know depending on what
 

00:16:06.240 --> 00:16:08.389 align:start position:0%
in our try you know depending on what
characters<00:16:06.720><c> we've</c><00:16:06.959><c> already</c><00:16:07.360><c> visited</c><00:16:07.759><c> before</c>

00:16:08.389 --> 00:16:08.399 align:start position:0%
characters we've already visited before
 

00:16:08.399 --> 00:16:10.790 align:start position:0%
characters we've already visited before
and<00:16:08.560><c> we</c><00:16:08.720><c> also</c><00:16:08.959><c> want</c><00:16:09.120><c> to</c><00:16:09.279><c> pass</c><00:16:09.519><c> in</c><00:16:09.920><c> what</c><00:16:10.320><c> is</c><00:16:10.560><c> the</c>

00:16:10.790 --> 00:16:10.800 align:start position:0%
and we also want to pass in what is the
 

00:16:10.800 --> 00:16:12.710 align:start position:0%
and we also want to pass in what is the
word<00:16:11.199><c> so</c><00:16:11.440><c> far</c><00:16:11.680><c> so</c><00:16:11.839><c> for</c><00:16:12.000><c> example</c><00:16:12.320><c> you</c><00:16:12.480><c> know</c><00:16:12.560><c> we</c>

00:16:12.710 --> 00:16:12.720 align:start position:0%
word so far so for example you know we
 

00:16:12.720 --> 00:16:14.710 align:start position:0%
word so far so for example you know we
visited<00:16:13.120><c> two</c><00:16:13.360><c> characters</c><00:16:13.920><c> ac</c>

00:16:14.710 --> 00:16:14.720 align:start position:0%
visited two characters ac
 

00:16:14.720 --> 00:16:18.069 align:start position:0%
visited two characters ac
we<00:16:14.959><c> want</c><00:16:15.199><c> that</c><00:16:15.440><c> to</c><00:16:15.600><c> be</c><00:16:15.839><c> stored</c><00:16:16.399><c> in</c><00:16:17.040><c> this</c><00:16:17.680><c> word</c>

00:16:18.069 --> 00:16:18.079 align:start position:0%
we want that to be stored in this word
 

00:16:18.079 --> 00:16:20.470 align:start position:0%
we want that to be stored in this word
variable<00:16:18.959><c> and</c><00:16:19.199><c> of</c><00:16:19.279><c> course</c><00:16:19.519><c> if</c><00:16:19.680><c> the</c><00:16:19.920><c> node</c><00:16:20.320><c> that</c>

00:16:20.470 --> 00:16:20.480 align:start position:0%
variable and of course if the node that
 

00:16:20.480 --> 00:16:22.069 align:start position:0%
variable and of course if the node that
we're<00:16:20.639><c> visiting</c><00:16:21.040><c> happens</c><00:16:21.360><c> to</c><00:16:21.440><c> be</c><00:16:21.600><c> the</c><00:16:21.759><c> end</c><00:16:22.000><c> of</c>

00:16:22.069 --> 00:16:22.079 align:start position:0%
we're visiting happens to be the end of
 

00:16:22.079 --> 00:16:23.350 align:start position:0%
we're visiting happens to be the end of
a<00:16:22.160><c> word</c><00:16:22.399><c> what</c><00:16:22.560><c> we're</c><00:16:22.720><c> going</c><00:16:22.800><c> to</c><00:16:22.880><c> do</c><00:16:23.040><c> is</c><00:16:23.120><c> just</c>

00:16:23.350 --> 00:16:23.360 align:start position:0%
a word what we're going to do is just
 

00:16:23.360 --> 00:16:25.670 align:start position:0%
a word what we're going to do is just
take<00:16:23.519><c> that</c><00:16:23.759><c> word</c><00:16:24.000><c> and</c><00:16:24.240><c> add</c><00:16:24.480><c> it</c><00:16:24.639><c> to</c><00:16:24.880><c> our</c><00:16:25.199><c> result</c>

00:16:25.670 --> 00:16:25.680 align:start position:0%
take that word and add it to our result
 

00:16:25.680 --> 00:16:27.430 align:start position:0%
take that word and add it to our result
which<00:16:25.920><c> is</c><00:16:26.079><c> out</c><00:16:26.320><c> here</c><00:16:26.560><c> we</c><00:16:26.720><c> don't</c><00:16:26.880><c> have</c><00:16:27.040><c> to</c><00:16:27.120><c> pass</c>

00:16:27.430 --> 00:16:27.440 align:start position:0%
which is out here we don't have to pass
 

00:16:27.440 --> 00:16:29.189 align:start position:0%
which is out here we don't have to pass
it<00:16:27.600><c> into</c><00:16:27.759><c> every</c><00:16:28.000><c> recursive</c><00:16:28.639><c> call</c>

00:16:29.189 --> 00:16:29.199 align:start position:0%
it into every recursive call
 

00:16:29.199 --> 00:16:30.790 align:start position:0%
it into every recursive call
so<00:16:29.360><c> for</c><00:16:29.600><c> this</c><00:16:29.759><c> dfs</c><00:16:30.240><c> let's</c><00:16:30.399><c> go</c><00:16:30.560><c> ahead</c><00:16:30.720><c> and</c>

00:16:30.790 --> 00:16:30.800 align:start position:0%
so for this dfs let's go ahead and
 

00:16:30.800 --> 00:16:32.949 align:start position:0%
so for this dfs let's go ahead and
define<00:16:31.279><c> the</c><00:16:31.600><c> base</c><00:16:31.920><c> cases</c><00:16:32.240><c> so</c><00:16:32.399><c> of</c><00:16:32.480><c> course</c><00:16:32.720><c> if</c><00:16:32.880><c> we</c>

00:16:32.949 --> 00:16:32.959 align:start position:0%
define the base cases so of course if we
 

00:16:32.959 --> 00:16:33.910 align:start position:0%
define the base cases so of course if we
go<00:16:33.199><c> out</c><00:16:33.360><c> of</c><00:16:33.440><c> bounds</c>

00:16:33.910 --> 00:16:33.920 align:start position:0%
go out of bounds
 

00:16:33.920 --> 00:16:35.910 align:start position:0%
go out of bounds
row<00:16:34.160><c> is</c><00:16:34.240><c> less</c><00:16:34.480><c> than</c><00:16:34.639><c> 0</c><00:16:35.040><c> or</c><00:16:35.279><c> column</c><00:16:35.600><c> is</c><00:16:35.759><c> less</c>

00:16:35.910 --> 00:16:35.920 align:start position:0%
row is less than 0 or column is less
 

00:16:35.920 --> 00:16:36.949 align:start position:0%
row is less than 0 or column is less
than<00:16:36.160><c> zero</c>

00:16:36.949 --> 00:16:36.959 align:start position:0%
than zero
 

00:16:36.959 --> 00:16:39.910 align:start position:0%
than zero
or<00:16:37.839><c> row</c><00:16:38.399><c> is</c><00:16:38.720><c> too</c><00:16:39.040><c> big</c><00:16:39.360><c> meaning</c><00:16:39.600><c> it's</c><00:16:39.759><c> the</c>

00:16:39.910 --> 00:16:39.920 align:start position:0%
or row is too big meaning it's the
 

00:16:39.920 --> 00:16:40.870 align:start position:0%
or row is too big meaning it's the
number<00:16:40.240><c> of</c><00:16:40.399><c> rows</c>

00:16:40.870 --> 00:16:40.880 align:start position:0%
number of rows
 

00:16:40.880 --> 00:16:42.710 align:start position:0%
number of rows
or<00:16:41.040><c> a</c><00:16:41.199><c> column</c><00:16:41.600><c> is</c><00:16:41.759><c> too</c><00:16:42.000><c> big</c><00:16:42.240><c> meaning</c><00:16:42.480><c> it's</c><00:16:42.639><c> the</c>

00:16:42.710 --> 00:16:42.720 align:start position:0%
or a column is too big meaning it's the
 

00:16:42.720 --> 00:16:44.230 align:start position:0%
or a column is too big meaning it's the
number<00:16:42.959><c> of</c><00:16:43.120><c> columns</c><00:16:43.600><c> or</c>

00:16:44.230 --> 00:16:44.240 align:start position:0%
number of columns or
 

00:16:44.240 --> 00:16:46.870 align:start position:0%
number of columns or
maybe<00:16:44.959><c> this</c><00:16:45.199><c> position</c><00:16:45.680><c> row</c><00:16:45.920><c> column</c><00:16:46.480><c> is</c>

00:16:46.870 --> 00:16:46.880 align:start position:0%
maybe this position row column is
 

00:16:46.880 --> 00:16:49.110 align:start position:0%
maybe this position row column is
already<00:16:47.360><c> been</c><00:16:47.680><c> visited</c><00:16:48.240><c> so</c><00:16:48.399><c> if</c><00:16:48.560><c> it's</c><00:16:48.720><c> already</c>

00:16:49.110 --> 00:16:49.120 align:start position:0%
already been visited so if it's already
 

00:16:49.120 --> 00:16:51.030 align:start position:0%
already been visited so if it's already
in<00:16:49.279><c> visit</c><00:16:49.600><c> then</c><00:16:49.839><c> we're</c><00:16:50.000><c> going</c><00:16:50.079><c> to</c><00:16:50.160><c> return</c>

00:16:51.030 --> 00:16:51.040 align:start position:0%
in visit then we're going to return
 

00:16:51.040 --> 00:16:54.230 align:start position:0%
in visit then we're going to return
or<00:16:51.839><c> maybe</c><00:16:52.320><c> the</c><00:16:52.880><c> character</c><00:16:53.360><c> that</c><00:16:53.519><c> we're</c><00:16:53.839><c> at</c><00:16:54.079><c> for</c>

00:16:54.230 --> 00:16:54.240 align:start position:0%
or maybe the character that we're at for
 

00:16:54.240 --> 00:16:55.590 align:start position:0%
or maybe the character that we're at for
example

00:16:55.590 --> 00:16:55.600 align:start position:0%
example
 

00:16:55.600 --> 00:16:58.949 align:start position:0%
example
board<00:16:56.720><c> at</c><00:16:57.040><c> position</c><00:16:57.600><c> row</c><00:16:57.920><c> column</c><00:16:58.480><c> maybe</c>

00:16:58.949 --> 00:16:58.959 align:start position:0%
board at position row column maybe
 

00:16:58.959 --> 00:17:02.150 align:start position:0%
board at position row column maybe
this<00:16:59.360><c> character</c><00:17:00.480><c> is</c><00:17:00.800><c> not</c><00:17:01.199><c> even</c><00:17:01.759><c> in</c>

00:17:02.150 --> 00:17:02.160 align:start position:0%
this character is not even in
 

00:17:02.160 --> 00:17:05.189 align:start position:0%
this character is not even in
our<00:17:02.480><c> try</c><00:17:03.360><c> maybe</c><00:17:03.680><c> it's</c><00:17:04.079><c> in</c><00:17:04.400><c> bounds</c><00:17:04.880><c> right</c><00:17:05.039><c> but</c>

00:17:05.189 --> 00:17:05.199 align:start position:0%
our try maybe it's in bounds right but
 

00:17:05.199 --> 00:17:05.510 align:start position:0%
our try maybe it's in bounds right but
it's

00:17:05.510 --> 00:17:05.520 align:start position:0%
it's
 

00:17:05.520 --> 00:17:07.669 align:start position:0%
it's
not<00:17:05.760><c> even</c><00:17:06.160><c> in</c><00:17:06.400><c> our</c><00:17:06.640><c> try</c><00:17:07.039><c> at</c><00:17:07.199><c> the</c><00:17:07.360><c> current</c>

00:17:07.669 --> 00:17:07.679 align:start position:0%
not even in our try at the current
 

00:17:07.679 --> 00:17:08.870 align:start position:0%
not even in our try at the current
position<00:17:08.079><c> that</c><00:17:08.240><c> we're</c><00:17:08.559><c> at</c>

00:17:08.870 --> 00:17:08.880 align:start position:0%
position that we're at
 

00:17:08.880 --> 00:17:11.669 align:start position:0%
position that we're at
in<00:17:09.039><c> our</c><00:17:09.280><c> try</c><00:17:09.679><c> node</c><00:17:10.160><c> right</c><00:17:10.400><c> meaning</c><00:17:11.120><c> this</c>

00:17:11.669 --> 00:17:11.679 align:start position:0%
in our try node right meaning this
 

00:17:11.679 --> 00:17:12.549 align:start position:0%
in our try node right meaning this
character

00:17:12.549 --> 00:17:12.559 align:start position:0%
character
 

00:17:12.559 --> 00:17:17.189 align:start position:0%
character
is<00:17:13.280><c> not</c><00:17:14.079><c> in</c><00:17:15.880><c> node.children</c>

00:17:17.189 --> 00:17:17.199 align:start position:0%
is not in node.children
 

00:17:17.199 --> 00:17:19.669 align:start position:0%
is not in node.children
right<00:17:18.160><c> if</c><00:17:18.319><c> it's</c><00:17:18.480><c> not</c><00:17:18.720><c> in</c><00:17:18.799><c> the</c><00:17:18.959><c> children</c><00:17:19.439><c> of</c><00:17:19.520><c> the</c>

00:17:19.669 --> 00:17:19.679 align:start position:0%
right if it's not in the children of the
 

00:17:19.679 --> 00:17:20.870 align:start position:0%
right if it's not in the children of the
current<00:17:19.919><c> node</c><00:17:20.160><c> that</c><00:17:20.240><c> we're</c><00:17:20.400><c> visiting</c><00:17:20.720><c> that</c>

00:17:20.870 --> 00:17:20.880 align:start position:0%
current node that we're visiting that
 

00:17:20.880 --> 00:17:22.309 align:start position:0%
current node that we're visiting that
means<00:17:21.120><c> this</c><00:17:21.280><c> character</c><00:17:21.600><c> doesn't</c><00:17:21.919><c> exist</c><00:17:22.160><c> in</c>

00:17:22.309 --> 00:17:22.319 align:start position:0%
means this character doesn't exist in
 

00:17:22.319 --> 00:17:23.590 align:start position:0%
means this character doesn't exist in
our<00:17:22.480><c> tribe</c><00:17:22.720><c> therefore</c>

00:17:23.590 --> 00:17:23.600 align:start position:0%
our tribe therefore
 

00:17:23.600 --> 00:17:25.829 align:start position:0%
our tribe therefore
it's<00:17:23.839><c> not</c><00:17:24.160><c> one</c><00:17:24.319><c> of</c><00:17:24.480><c> the</c><00:17:24.720><c> words</c><00:17:25.280><c> that</c><00:17:25.360><c> we</c><00:17:25.520><c> were</c>

00:17:25.829 --> 00:17:25.839 align:start position:0%
it's not one of the words that we were
 

00:17:25.839 --> 00:17:27.990 align:start position:0%
it's not one of the words that we were
given<00:17:26.240><c> in</c><00:17:26.400><c> our</c><00:17:26.559><c> input</c><00:17:26.959><c> list</c><00:17:27.199><c> of</c><00:17:27.280><c> words</c><00:17:27.600><c> so</c>

00:17:27.990 --> 00:17:28.000 align:start position:0%
given in our input list of words so
 

00:17:28.000 --> 00:17:29.750 align:start position:0%
given in our input list of words so
if<00:17:28.240><c> any</c><00:17:28.400><c> of</c><00:17:28.480><c> these</c><00:17:28.720><c> are</c><00:17:28.880><c> true</c><00:17:29.360><c> then</c><00:17:29.600><c> we're</c>

00:17:29.750 --> 00:17:29.760 align:start position:0%
if any of these are true then we're
 

00:17:29.760 --> 00:17:31.990 align:start position:0%
if any of these are true then we're
going<00:17:29.840><c> to</c><00:17:29.919><c> return</c><00:17:30.400><c> that's</c><00:17:30.720><c> our</c><00:17:30.880><c> base</c><00:17:31.200><c> case</c><00:17:31.919><c> if</c>

00:17:31.990 --> 00:17:32.000 align:start position:0%
going to return that's our base case if
 

00:17:32.000 --> 00:17:33.590 align:start position:0%
going to return that's our base case if
that's<00:17:32.320><c> not</c><00:17:32.559><c> true</c><00:17:32.799><c> first</c><00:17:33.039><c> thing</c><00:17:33.200><c> we</c><00:17:33.360><c> want</c><00:17:33.520><c> to</c>

00:17:33.590 --> 00:17:33.600 align:start position:0%
that's not true first thing we want to
 

00:17:33.600 --> 00:17:34.950 align:start position:0%
that's not true first thing we want to
do<00:17:33.760><c> is</c><00:17:33.919><c> make</c><00:17:34.080><c> sure</c><00:17:34.320><c> we</c><00:17:34.559><c> mark</c>

00:17:34.950 --> 00:17:34.960 align:start position:0%
do is make sure we mark
 

00:17:34.960 --> 00:17:38.470 align:start position:0%
do is make sure we mark
this<00:17:35.200><c> position</c><00:17:35.760><c> as</c><00:17:36.080><c> visited</c><00:17:37.120><c> and</c><00:17:37.679><c> after</c>

00:17:38.470 --> 00:17:38.480 align:start position:0%
this position as visited and after
 

00:17:38.480 --> 00:17:39.990 align:start position:0%
this position as visited and after
after<00:17:38.720><c> we're</c><00:17:38.960><c> done</c><00:17:39.200><c> the</c><00:17:39.280><c> last</c><00:17:39.520><c> thing</c><00:17:39.679><c> we</c><00:17:39.840><c> do</c>

00:17:39.990 --> 00:17:40.000 align:start position:0%
after we're done the last thing we do
 

00:17:40.000 --> 00:17:41.510 align:start position:0%
after we're done the last thing we do
before<00:17:40.400><c> we</c><00:17:40.559><c> return</c><00:17:40.960><c> is</c><00:17:41.120><c> we're</c><00:17:41.280><c> going</c><00:17:41.360><c> to</c><00:17:41.440><c> have</c>

00:17:41.510 --> 00:17:41.520 align:start position:0%
before we return is we're going to have
 

00:17:41.520 --> 00:17:41.990 align:start position:0%
before we return is we're going to have
to

00:17:41.990 --> 00:17:42.000 align:start position:0%
to
 

00:17:42.000 --> 00:17:44.950 align:start position:0%
to
mark<00:17:42.320><c> this</c><00:17:42.559><c> as</c><00:17:42.799><c> unvisited</c><00:17:44.240><c> basically</c><00:17:44.720><c> since</c>

00:17:44.950 --> 00:17:44.960 align:start position:0%
mark this as unvisited basically since
 

00:17:44.960 --> 00:17:45.270 align:start position:0%
mark this as unvisited basically since
this

00:17:45.270 --> 00:17:45.280 align:start position:0%
this
 

00:17:45.280 --> 00:17:48.310 align:start position:0%
this
is<00:17:45.520><c> backtracking</c><00:17:46.880><c> uh</c><00:17:47.200><c> we</c><00:17:47.520><c> we</c><00:17:47.679><c> can't</c><00:17:47.919><c> visit</c><00:17:48.240><c> the</c>

00:17:48.310 --> 00:17:48.320 align:start position:0%
is backtracking uh we we can't visit the
 

00:17:48.320 --> 00:17:50.230 align:start position:0%
is backtracking uh we we can't visit the
same<00:17:48.559><c> one</c><00:17:48.720><c> twice</c><00:17:49.039><c> but</c><00:17:49.280><c> once</c><00:17:49.520><c> we're</c><00:17:49.679><c> no</c><00:17:49.919><c> longer</c>

00:17:50.230 --> 00:17:50.240 align:start position:0%
same one twice but once we're no longer
 

00:17:50.240 --> 00:17:52.549 align:start position:0%
same one twice but once we're no longer
done<00:17:50.480><c> visiting</c><00:17:50.880><c> it</c><00:17:51.120><c> after</c><00:17:51.360><c> we</c><00:17:51.520><c> return</c>

00:17:52.549 --> 00:17:52.559 align:start position:0%
done visiting it after we return
 

00:17:52.559 --> 00:17:54.630 align:start position:0%
done visiting it after we return
then<00:17:52.799><c> we</c><00:17:52.960><c> can</c><00:17:53.120><c> go</c><00:17:53.280><c> ahead</c><00:17:53.520><c> and</c><00:17:53.919><c> you</c><00:17:54.000><c> know</c><00:17:54.160><c> remove</c>

00:17:54.630 --> 00:17:54.640 align:start position:0%
then we can go ahead and you know remove
 

00:17:54.640 --> 00:17:57.029 align:start position:0%
then we can go ahead and you know remove
this<00:17:54.960><c> position</c><00:17:55.440><c> from</c><00:17:55.760><c> being</c><00:17:56.080><c> visited</c>

00:17:57.029 --> 00:17:57.039 align:start position:0%
this position from being visited
 

00:17:57.039 --> 00:17:59.750 align:start position:0%
this position from being visited
so<00:17:58.000><c> since</c><00:17:58.240><c> we</c><00:17:58.400><c> got</c><00:17:58.640><c> to</c><00:17:58.799><c> a</c><00:17:58.880><c> new</c><00:17:59.200><c> character</c><00:17:59.600><c> we</c>

00:17:59.750 --> 00:17:59.760 align:start position:0%
so since we got to a new character we
 

00:17:59.760 --> 00:18:01.590 align:start position:0%
so since we got to a new character we
want<00:17:59.919><c> to</c><00:18:00.080><c> update</c><00:18:00.400><c> some</c><00:18:00.640><c> variables</c><00:18:01.039><c> so</c><00:18:01.280><c> we</c><00:18:01.440><c> want</c>

00:18:01.590 --> 00:18:01.600 align:start position:0%
want to update some variables so we want
 

00:18:01.600 --> 00:18:02.310 align:start position:0%
want to update some variables so we want
to<00:18:01.760><c> update</c>

00:18:02.310 --> 00:18:02.320 align:start position:0%
to update
 

00:18:02.320 --> 00:18:05.070 align:start position:0%
to update
node<00:18:02.720><c> so</c><00:18:02.960><c> node</c><00:18:03.360><c> is</c><00:18:03.440><c> going</c><00:18:03.520><c> to</c><00:18:03.600><c> be</c><00:18:03.760><c> set</c><00:18:04.000><c> to</c>

00:18:05.070 --> 00:18:05.080 align:start position:0%
node so node is going to be set to
 

00:18:05.080 --> 00:18:06.630 align:start position:0%
node so node is going to be set to
node.children

00:18:06.630 --> 00:18:06.640 align:start position:0%
node.children
 

00:18:06.640 --> 00:18:08.390 align:start position:0%
node.children
of<00:18:06.880><c> the</c><00:18:07.120><c> current</c><00:18:07.440><c> character</c><00:18:07.840><c> that</c><00:18:08.000><c> we</c><00:18:08.080><c> just</c>

00:18:08.390 --> 00:18:08.400 align:start position:0%
of the current character that we just
 

00:18:08.400 --> 00:18:10.150 align:start position:0%
of the current character that we just
visited<00:18:08.799><c> which</c><00:18:09.039><c> is</c><00:18:09.280><c> board</c>

00:18:10.150 --> 00:18:10.160 align:start position:0%
visited which is board
 

00:18:10.160 --> 00:18:13.430 align:start position:0%
visited which is board
at<00:18:10.400><c> position</c><00:18:11.039><c> rc</c><00:18:12.480><c> so</c><00:18:12.640><c> we're</c><00:18:12.799><c> updating</c><00:18:13.200><c> the</c>

00:18:13.430 --> 00:18:13.440 align:start position:0%
at position rc so we're updating the
 

00:18:13.440 --> 00:18:15.350 align:start position:0%
at position rc so we're updating the
node<00:18:13.760><c> because</c><00:18:14.080><c> we</c><00:18:14.240><c> know</c><00:18:14.400><c> that</c><00:18:14.640><c> that</c><00:18:14.880><c> node</c><00:18:15.120><c> does</c>

00:18:15.350 --> 00:18:15.360 align:start position:0%
node because we know that that node does
 

00:18:15.360 --> 00:18:16.230 align:start position:0%
node because we know that that node does
exist

00:18:16.230 --> 00:18:16.240 align:start position:0%
exist
 

00:18:16.240 --> 00:18:18.310 align:start position:0%
exist
and<00:18:16.480><c> we're</c><00:18:16.720><c> updating</c><00:18:17.200><c> the</c><00:18:17.520><c> word</c><00:18:18.000><c> right</c><00:18:18.160><c> so</c>

00:18:18.310 --> 00:18:18.320 align:start position:0%
and we're updating the word right so
 

00:18:18.320 --> 00:18:19.590 align:start position:0%
and we're updating the word right so
we're<00:18:18.400><c> taking</c><00:18:18.640><c> the</c><00:18:18.799><c> current</c><00:18:19.120><c> word</c>

00:18:19.590 --> 00:18:19.600 align:start position:0%
we're taking the current word
 

00:18:19.600 --> 00:18:22.789 align:start position:0%
we're taking the current word
adding<00:18:20.160><c> to</c><00:18:20.400><c> it</c><00:18:21.200><c> the</c><00:18:21.919><c> new</c><00:18:22.160><c> character</c><00:18:22.559><c> that</c><00:18:22.640><c> we</c>

00:18:22.789 --> 00:18:22.799 align:start position:0%
adding to it the new character that we
 

00:18:22.799 --> 00:18:23.510 align:start position:0%
adding to it the new character that we
just<00:18:23.039><c> reached</c>

00:18:23.510 --> 00:18:23.520 align:start position:0%
just reached
 

00:18:23.520 --> 00:18:26.470 align:start position:0%
just reached
board<00:18:23.840><c> at</c><00:18:24.160><c> rc</c><00:18:25.440><c> and</c><00:18:25.679><c> before</c><00:18:26.080><c> we</c><00:18:26.240><c> do</c><00:18:26.400><c> the</c>

00:18:26.470 --> 00:18:26.480 align:start position:0%
board at rc and before we do the
 

00:18:26.480 --> 00:18:28.310 align:start position:0%
board at rc and before we do the
recursive<00:18:27.039><c> case</c><00:18:27.280><c> again</c><00:18:27.600><c> before</c><00:18:27.840><c> we</c><00:18:28.000><c> look</c><00:18:28.160><c> at</c>

00:18:28.310 --> 00:18:28.320 align:start position:0%
recursive case again before we look at
 

00:18:28.320 --> 00:18:29.909 align:start position:0%
recursive case again before we look at
the<00:18:28.480><c> neighboring</c><00:18:28.960><c> positions</c><00:18:29.440><c> we</c><00:18:29.520><c> do</c><00:18:29.679><c> want</c><00:18:29.840><c> to</c>

00:18:29.909 --> 00:18:29.919 align:start position:0%
the neighboring positions we do want to
 

00:18:29.919 --> 00:18:31.750 align:start position:0%
the neighboring positions we do want to
check<00:18:30.240><c> is</c><00:18:30.400><c> this</c><00:18:30.640><c> the</c><00:18:30.799><c> end</c><00:18:30.960><c> of</c><00:18:31.120><c> a</c><00:18:31.200><c> word</c><00:18:31.440><c> so</c><00:18:31.600><c> we</c>

00:18:31.750 --> 00:18:31.760 align:start position:0%
check is this the end of a word so we
 

00:18:31.760 --> 00:18:33.510 align:start position:0%
check is this the end of a word so we
can<00:18:31.840><c> check</c><00:18:32.080><c> that</c><00:18:32.240><c> based</c><00:18:32.559><c> on</c><00:18:32.720><c> our</c><00:18:32.880><c> node</c><00:18:33.120><c> so</c><00:18:33.360><c> if</c>

00:18:33.510 --> 00:18:33.520 align:start position:0%
can check that based on our node so if
 

00:18:33.520 --> 00:18:35.190 align:start position:0%
can check that based on our node so if
node<00:18:34.000><c> is</c><00:18:34.400><c> word</c>

00:18:35.190 --> 00:18:35.200 align:start position:0%
node is word
 

00:18:35.200 --> 00:18:37.669 align:start position:0%
node is word
is<00:18:35.520><c> true</c><00:18:36.160><c> then</c><00:18:36.400><c> of</c><00:18:36.559><c> course</c><00:18:36.960><c> we</c><00:18:37.120><c> can</c><00:18:37.280><c> take</c><00:18:37.520><c> our</c>

00:18:37.669 --> 00:18:37.679 align:start position:0%
is true then of course we can take our
 

00:18:37.679 --> 00:18:38.310 align:start position:0%
is true then of course we can take our
result

00:18:38.310 --> 00:18:38.320 align:start position:0%
result
 

00:18:38.320 --> 00:18:40.870 align:start position:0%
result
and<00:18:38.720><c> add</c><00:18:39.039><c> to</c><00:18:39.200><c> it</c><00:18:39.600><c> the</c><00:18:39.840><c> word</c><00:18:40.160><c> that</c><00:18:40.320><c> we</c><00:18:40.480><c> just</c>

00:18:40.870 --> 00:18:40.880 align:start position:0%
and add to it the word that we just
 

00:18:40.880 --> 00:18:42.390 align:start position:0%
and add to it the word that we just
built<00:18:41.280><c> right</c><00:18:41.440><c> the</c><00:18:41.760><c> string</c>

00:18:42.390 --> 00:18:42.400 align:start position:0%
built right the string
 

00:18:42.400 --> 00:18:44.070 align:start position:0%
built right the string
itself<00:18:42.880><c> not</c><00:18:43.039><c> the</c><00:18:43.280><c> node</c><00:18:43.600><c> we're</c><00:18:43.760><c> not</c><00:18:43.919><c> going</c><00:18:44.000><c> to</c>

00:18:44.070 --> 00:18:44.080 align:start position:0%
itself not the node we're not going to
 

00:18:44.080 --> 00:18:45.350 align:start position:0%
itself not the node we're not going to
add<00:18:44.240><c> the</c><00:18:44.400><c> node</c><00:18:44.640><c> to</c><00:18:44.799><c> result</c><00:18:45.039><c> we're</c><00:18:45.200><c> going</c><00:18:45.280><c> to</c>

00:18:45.350 --> 00:18:45.360 align:start position:0%
add the node to result we're going to
 

00:18:45.360 --> 00:18:46.549 align:start position:0%
add the node to result we're going to
have<00:18:45.520><c> the</c><00:18:45.760><c> string</c>

00:18:46.549 --> 00:18:46.559 align:start position:0%
have the string
 

00:18:46.559 --> 00:18:48.789 align:start position:0%
have the string
word<00:18:47.280><c> so</c><00:18:47.440><c> this</c><00:18:47.679><c> is</c><00:18:47.840><c> just</c><00:18:48.000><c> basically</c><00:18:48.480><c> you</c><00:18:48.640><c> know</c>

00:18:48.789 --> 00:18:48.799 align:start position:0%
word so this is just basically you know
 

00:18:48.799 --> 00:18:50.630 align:start position:0%
word so this is just basically you know
checking<00:18:49.200><c> if</c><00:18:49.360><c> it</c><00:18:49.520><c> actually</c><00:18:49.919><c> is</c><00:18:50.080><c> a</c><00:18:50.160><c> word</c>

00:18:50.630 --> 00:18:50.640 align:start position:0%
checking if it actually is a word
 

00:18:50.640 --> 00:18:52.230 align:start position:0%
checking if it actually is a word
in<00:18:50.799><c> our</c><00:18:50.960><c> list</c><00:18:51.200><c> of</c><00:18:51.280><c> words</c><00:18:51.600><c> and</c><00:18:51.679><c> we're</c><00:18:52.000><c> you</c><00:18:52.160><c> know</c>

00:18:52.230 --> 00:18:52.240 align:start position:0%
in our list of words and we're you know
 

00:18:52.240 --> 00:18:55.029 align:start position:0%
in our list of words and we're you know
doing<00:18:52.559><c> some</c><00:18:53.600><c> uh</c><00:18:53.919><c> bookkeeping</c><00:18:54.640><c> here</c>

00:18:55.029 --> 00:18:55.039 align:start position:0%
doing some uh bookkeeping here
 

00:18:55.039 --> 00:18:57.350 align:start position:0%
doing some uh bookkeeping here
and<00:18:55.280><c> once</c><00:18:55.600><c> that</c><00:18:55.840><c> is</c><00:18:56.000><c> done</c><00:18:56.480><c> we</c><00:18:56.640><c> can</c><00:18:56.799><c> go</c><00:18:56.960><c> ahead</c>

00:18:57.350 --> 00:18:57.360 align:start position:0%
and once that is done we can go ahead
 

00:18:57.360 --> 00:18:59.190 align:start position:0%
and once that is done we can go ahead
and<00:18:57.520><c> actually</c><00:18:57.840><c> do</c><00:18:58.080><c> our</c><00:18:58.160><c> recursive</c><00:18:58.720><c> case</c>

00:18:59.190 --> 00:18:59.200 align:start position:0%
and actually do our recursive case
 

00:18:59.200 --> 00:19:00.950 align:start position:0%
and actually do our recursive case
you<00:18:59.360><c> could</c><00:18:59.520><c> write</c><00:18:59.760><c> it</c><00:18:59.840><c> with</c><00:19:00.000><c> a</c><00:19:00.160><c> loop</c><00:19:00.480><c> but</c><00:19:00.799><c> i</c>

00:19:00.950 --> 00:19:00.960 align:start position:0%
you could write it with a loop but i
 

00:19:00.960 --> 00:19:02.950 align:start position:0%
you could write it with a loop but i
like<00:19:01.120><c> to</c><00:19:01.200><c> be</c><00:19:01.440><c> lazy</c><00:19:01.840><c> and</c><00:19:02.000><c> i</c><00:19:02.080><c> think</c><00:19:02.320><c> it's</c><00:19:02.640><c> pretty</c>

00:19:02.950 --> 00:19:02.960 align:start position:0%
like to be lazy and i think it's pretty
 

00:19:02.960 --> 00:19:04.630 align:start position:0%
like to be lazy and i think it's pretty
okay<00:19:03.280><c> to</c><00:19:03.440><c> just</c><00:19:03.600><c> copy</c><00:19:03.919><c> and</c><00:19:04.080><c> paste</c>

00:19:04.630 --> 00:19:04.640 align:start position:0%
okay to just copy and paste
 

00:19:04.640 --> 00:19:07.430 align:start position:0%
okay to just copy and paste
dfs<00:19:05.280><c> four</c><00:19:05.600><c> times</c><00:19:06.240><c> so</c><00:19:06.400><c> we're</c><00:19:06.559><c> gonna</c><00:19:06.720><c> pass</c><00:19:07.120><c> in</c>

00:19:07.430 --> 00:19:07.440 align:start position:0%
dfs four times so we're gonna pass in
 

00:19:07.440 --> 00:19:08.870 align:start position:0%
dfs four times so we're gonna pass in
the<00:19:07.600><c> coordinates</c><00:19:08.160><c> and</c><00:19:08.240><c> we're</c><00:19:08.400><c> gonna</c><00:19:08.559><c> pass</c><00:19:08.799><c> in</c>

00:19:08.870 --> 00:19:08.880 align:start position:0%
the coordinates and we're gonna pass in
 

00:19:08.880 --> 00:19:10.070 align:start position:0%
the coordinates and we're gonna pass in
the<00:19:08.960><c> node</c><00:19:09.200><c> and</c><00:19:09.360><c> we're</c><00:19:09.440><c> going</c><00:19:09.520><c> to</c><00:19:09.600><c> pass</c><00:19:09.840><c> in</c><00:19:09.919><c> the</c>

00:19:10.070 --> 00:19:10.080 align:start position:0%
the node and we're going to pass in the
 

00:19:10.080 --> 00:19:12.310 align:start position:0%
the node and we're going to pass in the
word<00:19:10.400><c> that</c><00:19:10.640><c> so</c><00:19:10.880><c> far</c><00:19:11.200><c> we</c><00:19:11.360><c> have</c><00:19:11.679><c> built</c>

00:19:12.310 --> 00:19:12.320 align:start position:0%
word that so far we have built
 

00:19:12.320 --> 00:19:14.150 align:start position:0%
word that so far we have built
so<00:19:12.559><c> let's</c><00:19:12.799><c> just</c><00:19:12.960><c> copy</c><00:19:13.360><c> and</c><00:19:13.520><c> paste</c><00:19:13.760><c> this</c><00:19:13.919><c> four</c>

00:19:14.150 --> 00:19:14.160 align:start position:0%
so let's just copy and paste this four
 

00:19:14.160 --> 00:19:15.750 align:start position:0%
so let's just copy and paste this four
times<00:19:14.480><c> going</c><00:19:14.799><c> in</c><00:19:14.960><c> each</c><00:19:15.120><c> of</c><00:19:15.280><c> the</c><00:19:15.440><c> four</c>

00:19:15.750 --> 00:19:15.760 align:start position:0%
times going in each of the four
 

00:19:15.760 --> 00:19:16.390 align:start position:0%
times going in each of the four
directions

00:19:16.390 --> 00:19:16.400 align:start position:0%
directions
 

00:19:16.400 --> 00:19:19.270 align:start position:0%
directions
up<00:19:16.640><c> down</c><00:19:17.039><c> left</c><00:19:17.440><c> right</c><00:19:18.000><c> so</c><00:19:18.240><c> all</c><00:19:18.480><c> that</c><00:19:18.880><c> we</c><00:19:19.120><c> have</c>

00:19:19.270 --> 00:19:19.280 align:start position:0%
up down left right so all that we have
 

00:19:19.280 --> 00:19:21.830 align:start position:0%
up down left right so all that we have
defined<00:19:19.679><c> our</c><00:19:19.840><c> dfs</c><00:19:20.240><c> function</c><00:19:20.640><c> about</c><00:19:21.039><c> 15</c><00:19:21.520><c> lines</c>

00:19:21.830 --> 00:19:21.840 align:start position:0%
defined our dfs function about 15 lines
 

00:19:21.840 --> 00:19:23.510 align:start position:0%
defined our dfs function about 15 lines
of<00:19:22.000><c> code</c><00:19:22.320><c> so</c><00:19:22.559><c> remember</c><00:19:22.960><c> what</c><00:19:23.120><c> we</c><00:19:23.280><c> actually</c>

00:19:23.510 --> 00:19:23.520 align:start position:0%
of code so remember what we actually
 

00:19:23.520 --> 00:19:25.430 align:start position:0%
of code so remember what we actually
want<00:19:23.679><c> to</c><00:19:23.840><c> do</c><00:19:24.000><c> with</c><00:19:24.160><c> that</c><00:19:24.320><c> dfs</c><00:19:24.799><c> is</c><00:19:24.960><c> go</c><00:19:25.200><c> through</c>

00:19:25.430 --> 00:19:25.440 align:start position:0%
want to do with that dfs is go through
 

00:19:25.440 --> 00:19:26.630 align:start position:0%
want to do with that dfs is go through
every<00:19:25.840><c> single</c>

00:19:26.630 --> 00:19:26.640 align:start position:0%
every single
 

00:19:26.640 --> 00:19:28.630 align:start position:0%
every single
position<00:19:27.280><c> every</c><00:19:27.440><c> single</c><00:19:27.760><c> starting</c><00:19:28.160><c> position</c>

00:19:28.630 --> 00:19:28.640 align:start position:0%
position every single starting position
 

00:19:28.640 --> 00:19:30.230 align:start position:0%
position every single starting position
in<00:19:28.799><c> the</c><00:19:28.960><c> grid</c><00:19:29.280><c> so</c><00:19:29.520><c> i'm</c><00:19:29.679><c> going</c><00:19:29.760><c> to</c><00:19:29.840><c> do</c>

00:19:30.230 --> 00:19:30.240 align:start position:0%
in the grid so i'm going to do
 

00:19:30.240 --> 00:19:33.430 align:start position:0%
in the grid so i'm going to do
a<00:19:30.480><c> quick</c><00:19:30.960><c> 2d</c><00:19:31.520><c> loop</c><00:19:31.919><c> a</c><00:19:32.160><c> quick</c><00:19:32.480><c> nested</c><00:19:32.960><c> loop</c><00:19:33.280><c> on</c>

00:19:33.430 --> 00:19:33.440 align:start position:0%
a quick 2d loop a quick nested loop on
 

00:19:33.440 --> 00:19:34.150 align:start position:0%
a quick 2d loop a quick nested loop on
the<00:19:33.600><c> entire</c>

00:19:34.150 --> 00:19:34.160 align:start position:0%
the entire
 

00:19:34.160 --> 00:19:37.510 align:start position:0%
the entire
grid<00:19:35.440><c> and</c><00:19:36.240><c> call</c><00:19:36.480><c> dfs</c><00:19:37.120><c> from</c>

00:19:37.510 --> 00:19:37.520 align:start position:0%
grid and call dfs from
 

00:19:37.520 --> 00:19:39.750 align:start position:0%
grid and call dfs from
each<00:19:37.840><c> starting</c><00:19:38.240><c> position</c><00:19:38.799><c> in</c><00:19:38.960><c> the</c><00:19:39.120><c> grid</c><00:19:39.520><c> now</c>

00:19:39.750 --> 00:19:39.760 align:start position:0%
each starting position in the grid now
 

00:19:39.760 --> 00:19:41.270 align:start position:0%
each starting position in the grid now
for<00:19:40.080><c> node</c><00:19:40.400><c> what</c><00:19:40.480><c> are</c><00:19:40.559><c> we</c><00:19:40.640><c> going</c><00:19:40.799><c> to</c><00:19:40.880><c> pass</c><00:19:41.120><c> in</c>

00:19:41.270 --> 00:19:41.280 align:start position:0%
for node what are we going to pass in
 

00:19:41.280 --> 00:19:42.549 align:start position:0%
for node what are we going to pass in
we're<00:19:41.360><c> going</c><00:19:41.440><c> to</c><00:19:41.520><c> pass</c><00:19:41.760><c> in</c><00:19:41.919><c> our</c><00:19:42.080><c> root</c><00:19:42.320><c> node</c>

00:19:42.549 --> 00:19:42.559 align:start position:0%
we're going to pass in our root node
 

00:19:42.559 --> 00:19:44.150 align:start position:0%
we're going to pass in our root node
that<00:19:42.640><c> we</c><00:19:42.799><c> defined</c><00:19:43.280><c> up</c><00:19:43.360><c> above</c><00:19:43.760><c> and</c><00:19:43.840><c> for</c><00:19:44.080><c> the</c>

00:19:44.150 --> 00:19:44.160 align:start position:0%
that we defined up above and for the
 

00:19:44.160 --> 00:19:44.630 align:start position:0%
that we defined up above and for the
word

00:19:44.630 --> 00:19:44.640 align:start position:0%
word
 

00:19:44.640 --> 00:19:46.630 align:start position:0%
word
initially<00:19:45.200><c> it's</c><00:19:45.440><c> going</c><00:19:45.520><c> to</c><00:19:45.600><c> be</c><00:19:45.919><c> empty</c><00:19:46.400><c> right</c>

00:19:46.630 --> 00:19:46.640 align:start position:0%
initially it's going to be empty right
 

00:19:46.640 --> 00:19:47.909 align:start position:0%
initially it's going to be empty right
so<00:19:46.799><c> that's</c><00:19:47.039><c> what</c><00:19:47.120><c> we're</c><00:19:47.280><c> going</c><00:19:47.360><c> to</c><00:19:47.440><c> pass</c><00:19:47.760><c> in</c>

00:19:47.909 --> 00:19:47.919 align:start position:0%
so that's what we're going to pass in
 

00:19:47.919 --> 00:19:48.789 align:start position:0%
so that's what we're going to pass in
for<00:19:48.080><c> the</c><00:19:48.160><c> word</c>

00:19:48.789 --> 00:19:48.799 align:start position:0%
for the word
 

00:19:48.799 --> 00:19:50.390 align:start position:0%
for the word
once<00:19:49.120><c> that</c><00:19:49.280><c> is</c><00:19:49.440><c> all</c><00:19:49.600><c> said</c><00:19:49.840><c> and</c><00:19:49.919><c> done</c><00:19:50.080><c> we</c><00:19:50.240><c> want</c>

00:19:50.390 --> 00:19:50.400 align:start position:0%
once that is all said and done we want
 

00:19:50.400 --> 00:19:52.070 align:start position:0%
once that is all said and done we want
to<00:19:50.559><c> return</c><00:19:50.960><c> our</c><00:19:51.120><c> result</c><00:19:51.440><c> but</c><00:19:51.600><c> don't</c><00:19:51.760><c> forget</c>

00:19:52.070 --> 00:19:52.080 align:start position:0%
to return our result but don't forget
 

00:19:52.080 --> 00:19:52.950 align:start position:0%
to return our result but don't forget
our<00:19:52.240><c> result</c>

00:19:52.950 --> 00:19:52.960 align:start position:0%
our result
 

00:19:52.960 --> 00:19:55.830 align:start position:0%
our result
is<00:19:53.360><c> a</c><00:19:53.679><c> set</c><00:19:54.240><c> to</c><00:19:54.400><c> eliminate</c><00:19:54.880><c> duplicates</c><00:19:55.440><c> we</c><00:19:55.600><c> can</c>

00:19:55.830 --> 00:19:55.840 align:start position:0%
is a set to eliminate duplicates we can
 

00:19:55.840 --> 00:19:57.270 align:start position:0%
is a set to eliminate duplicates we can
cast<00:19:56.320><c> it</c><00:19:56.480><c> into</c><00:19:56.880><c> a</c>

00:19:57.270 --> 00:19:57.280 align:start position:0%
cast it into a
 

00:19:57.280 --> 00:19:59.830 align:start position:0%
cast it into a
list<00:19:57.840><c> pretty</c><00:19:58.080><c> easily</c><00:19:58.480><c> in</c><00:19:58.640><c> python</c><00:19:59.440><c> so</c><00:19:59.600><c> that's</c>

00:19:59.830 --> 00:19:59.840 align:start position:0%
list pretty easily in python so that's
 

00:19:59.840 --> 00:20:00.950 align:start position:0%
list pretty easily in python so that's
what<00:20:00.000><c> i'm</c><00:20:00.080><c> going</c><00:20:00.160><c> to</c><00:20:00.320><c> do</c>

00:20:00.950 --> 00:20:00.960 align:start position:0%
what i'm going to do
 

00:20:00.960 --> 00:20:03.590 align:start position:0%
what i'm going to do
as<00:20:01.120><c> you</c><00:20:01.200><c> can</c><00:20:01.440><c> see</c><00:20:01.919><c> this</c><00:20:02.159><c> is</c><00:20:02.240><c> the</c><00:20:02.400><c> entire</c><00:20:02.799><c> code</c>

00:20:03.590 --> 00:20:03.600 align:start position:0%
as you can see this is the entire code
 

00:20:03.600 --> 00:20:04.230 align:start position:0%
as you can see this is the entire code
so<00:20:03.840><c> this</c>

00:20:04.230 --> 00:20:04.240 align:start position:0%
so this
 

00:20:04.240 --> 00:20:06.390 align:start position:0%
so this
is<00:20:04.400><c> the</c><00:20:04.559><c> entire</c><00:20:05.039><c> code</c><00:20:05.280><c> and</c><00:20:05.440><c> all</c><00:20:05.600><c> of</c><00:20:05.760><c> its</c><00:20:05.919><c> glory</c>

00:20:06.390 --> 00:20:06.400 align:start position:0%
is the entire code and all of its glory
 

00:20:06.400 --> 00:20:07.270 align:start position:0%
is the entire code and all of its glory
so<00:20:06.880><c> this</c>

00:20:07.270 --> 00:20:07.280 align:start position:0%
so this
 

00:20:07.280 --> 00:20:09.430 align:start position:0%
so this
you<00:20:07.440><c> can</c><00:20:07.520><c> see</c><00:20:07.679><c> that</c><00:20:07.919><c> this</c><00:20:08.080><c> solution</c><00:20:08.480><c> does</c><00:20:08.799><c> work</c>

00:20:09.430 --> 00:20:09.440 align:start position:0%
you can see that this solution does work
 

00:20:09.440 --> 00:20:11.029 align:start position:0%
you can see that this solution does work
once<00:20:09.679><c> or</c><00:20:09.840><c> twice</c><00:20:10.080><c> it</c><00:20:10.240><c> actually</c><00:20:10.480><c> did</c><00:20:10.640><c> give</c><00:20:10.799><c> me</c>

00:20:11.029 --> 00:20:11.039 align:start position:0%
once or twice it actually did give me
 

00:20:11.039 --> 00:20:12.870 align:start position:0%
once or twice it actually did give me
time<00:20:11.280><c> limit</c><00:20:11.600><c> expire</c><00:20:12.000><c> i</c><00:20:12.080><c> think</c><00:20:12.240><c> there</c><00:20:12.559><c> is</c><00:20:12.720><c> a</c>

00:20:12.870 --> 00:20:12.880 align:start position:0%
time limit expire i think there is a
 

00:20:12.880 --> 00:20:13.270 align:start position:0%
time limit expire i think there is a
slight

00:20:13.270 --> 00:20:13.280 align:start position:0%
slight
 

00:20:13.280 --> 00:20:14.870 align:start position:0%
slight
optimization<00:20:13.919><c> that</c><00:20:14.080><c> you</c><00:20:14.159><c> can</c><00:20:14.400><c> make</c><00:20:14.559><c> to</c><00:20:14.720><c> this</c>

00:20:14.870 --> 00:20:14.880 align:start position:0%
optimization that you can make to this
 

00:20:14.880 --> 00:20:15.990 align:start position:0%
optimization that you can make to this
problem<00:20:15.120><c> i</c><00:20:15.280><c> don't</c><00:20:15.360><c> think</c><00:20:15.600><c> it</c><00:20:15.679><c> actually</c>

00:20:15.990 --> 00:20:16.000 align:start position:0%
problem i don't think it actually
 

00:20:16.000 --> 00:20:18.390 align:start position:0%
problem i don't think it actually
improves<00:20:16.480><c> the</c><00:20:16.640><c> overall</c><00:20:17.039><c> time</c><00:20:17.360><c> complexity</c>

00:20:18.390 --> 00:20:18.400 align:start position:0%
improves the overall time complexity
 

00:20:18.400 --> 00:20:21.029 align:start position:0%
improves the overall time complexity
but<00:20:18.640><c> once</c><00:20:18.960><c> you</c><00:20:19.200><c> find</c><00:20:19.520><c> a</c><00:20:19.760><c> word</c><00:20:20.240><c> in</c><00:20:20.400><c> the</c><00:20:20.640><c> try</c>

00:20:21.029 --> 00:20:21.039 align:start position:0%
but once you find a word in the try
 

00:20:21.039 --> 00:20:22.630 align:start position:0%
but once you find a word in the try
basically<00:20:21.520><c> what</c><00:20:21.679><c> you</c><00:20:21.760><c> can</c><00:20:21.919><c> do</c><00:20:22.159><c> is</c><00:20:22.320><c> actually</c>

00:20:22.630 --> 00:20:22.640 align:start position:0%
basically what you can do is actually
 

00:20:22.640 --> 00:20:23.750 align:start position:0%
basically what you can do is actually
remove

00:20:23.750 --> 00:20:23.760 align:start position:0%
remove
 

00:20:23.760 --> 00:20:26.549 align:start position:0%
remove
that<00:20:24.640><c> if</c><00:20:24.799><c> it's</c><00:20:24.960><c> a</c><00:20:25.120><c> leaf</c><00:20:25.440><c> node</c><00:20:25.679><c> you</c><00:20:25.840><c> can</c><00:20:26.000><c> remove</c>

00:20:26.549 --> 00:20:26.559 align:start position:0%
that if it's a leaf node you can remove
 

00:20:26.559 --> 00:20:27.190 align:start position:0%
that if it's a leaf node you can remove
that

00:20:27.190 --> 00:20:27.200 align:start position:0%
that
 

00:20:27.200 --> 00:20:29.350 align:start position:0%
that
from<00:20:27.440><c> the</c><00:20:27.679><c> try</c><00:20:28.480><c> because</c><00:20:28.799><c> you</c><00:20:28.960><c> don't</c><00:20:29.120><c> want</c><00:20:29.280><c> to</c>

00:20:29.350 --> 00:20:29.360 align:start position:0%
from the try because you don't want to
 

00:20:29.360 --> 00:20:30.950 align:start position:0%
from the try because you don't want to
have<00:20:29.520><c> to</c><00:20:29.840><c> you</c><00:20:29.919><c> don't</c><00:20:30.080><c> have</c><00:20:30.159><c> to</c><00:20:30.320><c> search</c><00:20:30.640><c> for</c><00:20:30.799><c> the</c>

00:20:30.950 --> 00:20:30.960 align:start position:0%
have to you don't have to search for the
 

00:20:30.960 --> 00:20:32.950 align:start position:0%
have to you don't have to search for the
same<00:20:31.280><c> word</c><00:20:31.679><c> twice</c><00:20:32.080><c> that's</c><00:20:32.400><c> a</c><00:20:32.640><c> slight</c>

00:20:32.950 --> 00:20:32.960 align:start position:0%
same word twice that's a slight
 

00:20:32.960 --> 00:20:34.950 align:start position:0%
same word twice that's a slight
optimization<00:20:33.600><c> that</c><00:20:33.760><c> you</c><00:20:33.840><c> can</c><00:20:34.000><c> make</c><00:20:34.159><c> but</c><00:20:34.320><c> i</c>

00:20:34.950 --> 00:20:34.960 align:start position:0%
optimization that you can make but i
 

00:20:34.960 --> 00:20:36.710 align:start position:0%
optimization that you can make but i
but<00:20:35.120><c> i</c><00:20:35.200><c> think</c><00:20:35.360><c> this</c><00:20:35.520><c> solution</c><00:20:35.919><c> is</c><00:20:36.080><c> mainly</c><00:20:36.480><c> good</c>

00:20:36.710 --> 00:20:36.720 align:start position:0%
but i think this solution is mainly good
 

00:20:36.720 --> 00:20:39.110 align:start position:0%
but i think this solution is mainly good
enough<00:20:37.360><c> and</c><00:20:37.600><c> it's</c><00:20:37.919><c> too</c><00:20:38.159><c> big</c><00:20:38.400><c> to</c><00:20:38.480><c> even</c>

00:20:39.110 --> 00:20:39.120 align:start position:0%
enough and it's too big to even
 

00:20:39.120 --> 00:20:40.549 align:start position:0%
enough and it's too big to even
fit<00:20:39.360><c> on</c><00:20:39.520><c> the</c><00:20:39.600><c> screen</c><00:20:39.919><c> that's</c><00:20:40.159><c> how</c><00:20:40.240><c> you</c><00:20:40.400><c> know</c>

00:20:40.549 --> 00:20:40.559 align:start position:0%
fit on the screen that's how you know
 

00:20:40.559 --> 00:20:42.390 align:start position:0%
fit on the screen that's how you know
this<00:20:40.720><c> is</c><00:20:40.880><c> a</c><00:20:41.039><c> hard</c><00:20:41.360><c> problem</c><00:20:41.760><c> no</c><00:20:41.919><c> matter</c><00:20:42.240><c> what</c>

00:20:42.390 --> 00:20:42.400 align:start position:0%
this is a hard problem no matter what
 

00:20:42.400 --> 00:20:44.230 align:start position:0%
this is a hard problem no matter what
you<00:20:42.559><c> do</c><00:20:42.799><c> it's</c><00:20:43.039><c> going</c><00:20:43.200><c> to</c><00:20:43.280><c> be</c><00:20:43.520><c> a</c><00:20:43.679><c> lot</c><00:20:43.840><c> of</c><00:20:44.000><c> code</c>

00:20:44.230 --> 00:20:44.240 align:start position:0%
you do it's going to be a lot of code
 

00:20:44.240 --> 00:20:45.350 align:start position:0%
you do it's going to be a lot of code
that<00:20:44.320><c> you</c><00:20:44.480><c> have</c><00:20:44.559><c> to</c><00:20:44.799><c> write</c>

00:20:45.350 --> 00:20:45.360 align:start position:0%
that you have to write
 

00:20:45.360 --> 00:20:47.190 align:start position:0%
that you have to write
but<00:20:45.520><c> i</c><00:20:45.600><c> hope</c><00:20:45.840><c> that</c><00:20:45.919><c> this</c><00:20:46.159><c> was</c><00:20:46.320><c> helpful</c><00:20:46.799><c> if</c><00:20:47.039><c> it</c>

00:20:47.190 --> 00:20:47.200 align:start position:0%
but i hope that this was helpful if it
 

00:20:47.200 --> 00:20:48.950 align:start position:0%
but i hope that this was helpful if it
was<00:20:47.600><c> please</c><00:20:47.919><c> like</c><00:20:48.159><c> and</c><00:20:48.320><c> subscribe</c><00:20:48.799><c> it</c>

00:20:48.950 --> 00:20:48.960 align:start position:0%
was please like and subscribe it
 

00:20:48.960 --> 00:20:50.630 align:start position:0%
was please like and subscribe it
supports<00:20:49.360><c> the</c><00:20:49.440><c> channel</c><00:20:49.840><c> a</c><00:20:50.000><c> lot</c><00:20:50.320><c> and</c><00:20:50.400><c> i'll</c>

00:20:50.630 --> 00:20:50.640 align:start position:0%
supports the channel a lot and i'll
 

00:20:50.640 --> 00:20:51.190 align:start position:0%
supports the channel a lot and i'll
hopefully

00:20:51.190 --> 00:20:51.200 align:start position:0%
hopefully
 

00:20:51.200 --> 00:20:55.200 align:start position:0%
hopefully
see<00:20:51.360><c> you</c><00:20:51.520><c> pretty</c><00:20:51.760><c> soon</c><00:20:52.240><c> thanks</c><00:20:52.480><c> for</c><00:20:52.640><c> watching</c>

