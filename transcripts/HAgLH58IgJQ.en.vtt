WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.829 align:start position:0%
 
one<00:00:00.320><c> welcome</c><00:00:00.799><c> back</c><00:00:01.040><c> and</c><00:00:01.199><c> let's</c><00:00:01.439><c> write</c><00:00:01.680><c> some</c>

00:00:01.829 --> 00:00:01.839 align:start position:0%
one welcome back and let's write some
 

00:00:01.839 --> 00:00:03.750 align:start position:0%
one welcome back and let's write some
more<00:00:02.159><c> neat</c><00:00:02.399><c> code</c><00:00:02.639><c> today</c><00:00:02.960><c> so</c><00:00:03.120><c> today</c><00:00:03.520><c> let's</c>

00:00:03.750 --> 00:00:03.760 align:start position:0%
more neat code today so today let's
 

00:00:03.760 --> 00:00:06.150 align:start position:0%
more neat code today so today let's
solve<00:00:04.080><c> the</c><00:00:04.240><c> problem</c><00:00:04.720><c> reverse</c><00:00:05.359><c> integer</c><00:00:05.920><c> even</c>

00:00:06.150 --> 00:00:06.160 align:start position:0%
solve the problem reverse integer even
 

00:00:06.160 --> 00:00:07.909 align:start position:0%
solve the problem reverse integer even
though<00:00:06.399><c> this</c><00:00:06.640><c> is</c><00:00:06.879><c> marked</c><00:00:07.200><c> as</c><00:00:07.359><c> an</c><00:00:07.520><c> easy</c>

00:00:07.909 --> 00:00:07.919 align:start position:0%
though this is marked as an easy
 

00:00:07.919 --> 00:00:09.430 align:start position:0%
though this is marked as an easy
question<00:00:08.480><c> i</c><00:00:08.559><c> would</c><00:00:08.720><c> say</c><00:00:08.880><c> that</c><00:00:09.040><c> this</c><00:00:09.280><c> is</c>

00:00:09.430 --> 00:00:09.440 align:start position:0%
question i would say that this is
 

00:00:09.440 --> 00:00:12.150 align:start position:0%
question i would say that this is
definitely<00:00:10.080><c> more</c><00:00:10.400><c> of</c><00:00:10.559><c> a</c><00:00:10.639><c> medium</c><00:00:11.200><c> question</c><00:00:11.920><c> and</c>

00:00:12.150 --> 00:00:12.160 align:start position:0%
definitely more of a medium question and
 

00:00:12.160 --> 00:00:14.150 align:start position:0%
definitely more of a medium question and
that's<00:00:12.480><c> probably</c><00:00:12.880><c> why</c><00:00:13.120><c> this</c><00:00:13.440><c> question</c><00:00:13.759><c> has</c><00:00:14.000><c> so</c>

00:00:14.150 --> 00:00:14.160 align:start position:0%
that's probably why this question has so
 

00:00:14.160 --> 00:00:16.710 align:start position:0%
that's probably why this question has so
many<00:00:14.320><c> different</c><00:00:14.880><c> uh</c><00:00:15.360><c> so</c><00:00:15.519><c> many</c><00:00:15.679><c> dislikes</c><00:00:16.480><c> but</c><00:00:16.640><c> i</c>

00:00:16.710 --> 00:00:16.720 align:start position:0%
many different uh so many dislikes but i
 

00:00:16.720 --> 00:00:18.710 align:start position:0%
many different uh so many dislikes but i
don't<00:00:16.880><c> think</c><00:00:17.119><c> it's</c><00:00:17.359><c> actually</c><00:00:17.760><c> a</c><00:00:17.920><c> bad</c><00:00:18.240><c> problem</c>

00:00:18.710 --> 00:00:18.720 align:start position:0%
don't think it's actually a bad problem
 

00:00:18.720 --> 00:00:20.470 align:start position:0%
don't think it's actually a bad problem
it's<00:00:19.119><c> definitely</c><00:00:19.520><c> good</c><00:00:19.760><c> when</c><00:00:19.920><c> it</c><00:00:20.000><c> comes</c><00:00:20.240><c> to</c>

00:00:20.470 --> 00:00:20.480 align:start position:0%
it's definitely good when it comes to
 

00:00:20.480 --> 00:00:23.550 align:start position:0%
it's definitely good when it comes to
bit<00:00:20.720><c> manipulation</c><00:00:21.439><c> so</c><00:00:21.600><c> we're</c><00:00:21.760><c> given</c><00:00:22.160><c> a</c><00:00:22.480><c> signed</c>

00:00:23.550 --> 00:00:23.560 align:start position:0%
bit manipulation so we're given a signed
 

00:00:23.560 --> 00:00:26.470 align:start position:0%
bit manipulation so we're given a signed
32-bit<00:00:24.640><c> integer</c><00:00:25.279><c> x</c><00:00:25.840><c> the</c><00:00:26.000><c> fact</c><00:00:26.160><c> that</c><00:00:26.320><c> it's</c>

00:00:26.470 --> 00:00:26.480 align:start position:0%
32-bit integer x the fact that it's
 

00:00:26.480 --> 00:00:29.429 align:start position:0%
32-bit integer x the fact that it's
32-bit<00:00:27.359><c> is</c><00:00:27.439><c> very</c><00:00:27.760><c> important</c><00:00:28.320><c> here</c><00:00:28.800><c> we</c><00:00:29.039><c> want</c><00:00:29.279><c> to</c>

00:00:29.429 --> 00:00:29.439 align:start position:0%
32-bit is very important here we want to
 

00:00:29.439 --> 00:00:30.470 align:start position:0%
32-bit is very important here we want to
return

00:00:30.470 --> 00:00:30.480 align:start position:0%
return
 

00:00:30.480 --> 00:00:33.750 align:start position:0%
return
this<00:00:30.800><c> integer</c><00:00:31.359><c> x</c><00:00:31.840><c> with</c><00:00:32.239><c> all</c><00:00:32.559><c> of</c><00:00:32.800><c> its</c><00:00:33.120><c> digits</c>

00:00:33.750 --> 00:00:33.760 align:start position:0%
this integer x with all of its digits
 

00:00:33.760 --> 00:00:37.030 align:start position:0%
this integer x with all of its digits
being<00:00:34.239><c> reversed</c><00:00:35.280><c> and</c><00:00:35.440><c> the</c><00:00:35.680><c> only</c><00:00:36.239><c> catch</c><00:00:36.640><c> here</c>

00:00:37.030 --> 00:00:37.040 align:start position:0%
being reversed and the only catch here
 

00:00:37.040 --> 00:00:40.630 align:start position:0%
being reversed and the only catch here
is<00:00:37.520><c> if</c><00:00:37.920><c> reversing</c><00:00:38.640><c> this</c><00:00:38.960><c> integer</c><00:00:39.520><c> x</c><00:00:40.160><c> causes</c>

00:00:40.630 --> 00:00:40.640 align:start position:0%
is if reversing this integer x causes
 

00:00:40.640 --> 00:00:44.470 align:start position:0%
is if reversing this integer x causes
the<00:00:40.879><c> value</c><00:00:41.600><c> to</c><00:00:41.760><c> go</c><00:00:42.160><c> outside</c><00:00:42.879><c> of</c><00:00:43.040><c> the</c><00:00:43.399><c> 32-bit</c>

00:00:44.470 --> 00:00:44.480 align:start position:0%
the value to go outside of the 32-bit
 

00:00:44.480 --> 00:00:47.910 align:start position:0%
the value to go outside of the 32-bit
integer<00:00:45.039><c> range</c><00:00:45.840><c> which</c><00:00:46.079><c> is</c><00:00:46.320><c> this</c><00:00:46.960><c> then</c>

00:00:47.910 --> 00:00:47.920 align:start position:0%
integer range which is this then
 

00:00:47.920 --> 00:00:50.310 align:start position:0%
integer range which is this then
then<00:00:48.239><c> we</c><00:00:48.480><c> basically</c><00:00:48.879><c> want</c><00:00:49.120><c> to</c><00:00:49.280><c> return</c><00:00:49.680><c> 0</c><00:00:50.160><c> if</c>

00:00:50.310 --> 00:00:50.320 align:start position:0%
then we basically want to return 0 if
 

00:00:50.320 --> 00:00:51.750 align:start position:0%
then we basically want to return 0 if
that's<00:00:50.640><c> the</c><00:00:50.800><c> case</c><00:00:51.120><c> because</c><00:00:51.280><c> we're</c><00:00:51.440><c> working</c>

00:00:51.750 --> 00:00:51.760 align:start position:0%
that's the case because we're working
 

00:00:51.760 --> 00:00:53.910 align:start position:0%
that's the case because we're working
with<00:00:51.920><c> 32-bit</c><00:00:52.640><c> integers</c><00:00:53.120><c> if</c><00:00:53.199><c> the</c><00:00:53.440><c> integer</c>

00:00:53.910 --> 00:00:53.920 align:start position:0%
with 32-bit integers if the integer
 

00:00:53.920 --> 00:00:57.510 align:start position:0%
with 32-bit integers if the integer
overflows<00:00:54.879><c> then</c><00:00:55.120><c> we</c><00:00:55.440><c> want</c><00:00:55.600><c> to</c><00:00:55.840><c> return</c><00:00:56.559><c> 0.</c><00:00:57.199><c> and</c>

00:00:57.510 --> 00:00:57.520 align:start position:0%
overflows then we want to return 0. and
 

00:00:57.520 --> 00:00:59.029 align:start position:0%
overflows then we want to return 0. and
this<00:00:57.920><c> is</c><00:00:58.000><c> the</c><00:00:58.239><c> portion</c><00:00:58.559><c> that's</c><00:00:58.800><c> actually</c>

00:00:59.029 --> 00:00:59.039 align:start position:0%
this is the portion that's actually
 

00:00:59.039 --> 00:01:00.790 align:start position:0%
this is the portion that's actually
going<00:00:59.120><c> to</c><00:00:59.199><c> make</c><00:00:59.359><c> the</c><00:00:59.760><c> the</c><00:00:59.920><c> problem</c><00:01:00.320><c> difficult</c>

00:01:00.790 --> 00:01:00.800 align:start position:0%
going to make the the problem difficult
 

00:01:00.800 --> 00:01:02.869 align:start position:0%
going to make the the problem difficult
because<00:01:01.280><c> we</c><00:01:01.440><c> are</c><00:01:01.520><c> working</c><00:01:01.840><c> with</c><00:01:02.079><c> 32-bit</c>

00:01:02.869 --> 00:01:02.879 align:start position:0%
because we are working with 32-bit
 

00:01:02.879 --> 00:01:05.109 align:start position:0%
because we are working with 32-bit
integers<00:01:03.600><c> and</c><00:01:03.760><c> we</c><00:01:03.920><c> cannot</c><00:01:04.400><c> assume</c><00:01:04.799><c> that</c><00:01:04.960><c> we</c>

00:01:05.109 --> 00:01:05.119 align:start position:0%
integers and we cannot assume that we
 

00:01:05.119 --> 00:01:07.670 align:start position:0%
integers and we cannot assume that we
can<00:01:05.360><c> store</c><00:01:05.760><c> 64-bit</c><00:01:06.640><c> integers</c><00:01:07.119><c> or</c><00:01:07.280><c> anything</c>

00:01:07.670 --> 00:01:07.680 align:start position:0%
can store 64-bit integers or anything
 

00:01:07.680 --> 00:01:09.670 align:start position:0%
can store 64-bit integers or anything
greater<00:01:08.080><c> than</c><00:01:08.240><c> 32-bits</c><00:01:09.040><c> that's</c><00:01:09.280><c> what</c><00:01:09.439><c> makes</c>

00:01:09.670 --> 00:01:09.680 align:start position:0%
greater than 32-bits that's what makes
 

00:01:09.680 --> 00:01:12.149 align:start position:0%
greater than 32-bits that's what makes
this<00:01:09.920><c> question</c><00:01:10.640><c> difficult</c><00:01:11.119><c> i</c><00:01:11.360><c> think</c><00:01:11.920><c> because</c>

00:01:12.149 --> 00:01:12.159 align:start position:0%
this question difficult i think because
 

00:01:12.159 --> 00:01:14.070 align:start position:0%
this question difficult i think because
if<00:01:12.240><c> we</c><00:01:12.400><c> just</c><00:01:12.560><c> take</c><00:01:12.799><c> a</c><00:01:12.880><c> look</c><00:01:13.040><c> at</c><00:01:13.200><c> the</c><00:01:13.360><c> standard</c>

00:01:14.070 --> 00:01:14.080 align:start position:0%
if we just take a look at the standard
 

00:01:14.080 --> 00:01:15.590 align:start position:0%
if we just take a look at the standard
procedure<00:01:14.560><c> that</c><00:01:14.720><c> we</c><00:01:14.799><c> would</c><00:01:14.960><c> do</c><00:01:15.200><c> take</c><00:01:15.439><c> the</c>

00:01:15.590 --> 00:01:15.600 align:start position:0%
procedure that we would do take the
 

00:01:15.600 --> 00:01:19.190 align:start position:0%
procedure that we would do take the
first<00:01:15.920><c> example</c><00:01:16.560><c> over</c><00:01:16.880><c> here</c><00:01:17.280><c> we</c><00:01:17.439><c> have</c><00:01:18.000><c> one</c><00:01:18.640><c> two</c>

00:01:19.190 --> 00:01:19.200 align:start position:0%
first example over here we have one two
 

00:01:19.200 --> 00:01:22.789 align:start position:0%
first example over here we have one two
three<00:01:19.840><c> did</c><00:01:20.080><c> you</c><00:01:20.320><c> know</c><00:01:20.960><c> we</c><00:01:21.200><c> can</c><00:01:21.680><c> chop</c><00:01:22.159><c> off</c><00:01:22.400><c> this</c>

00:01:22.789 --> 00:01:22.799 align:start position:0%
three did you know we can chop off this
 

00:01:22.799 --> 00:01:25.030 align:start position:0%
three did you know we can chop off this
one's<00:01:23.200><c> place</c><00:01:23.600><c> digit</c><00:01:24.080><c> pretty</c><00:01:24.400><c> easily</c><00:01:24.799><c> you</c><00:01:24.880><c> can</c>

00:01:25.030 --> 00:01:25.040 align:start position:0%
one's place digit pretty easily you can
 

00:01:25.040 --> 00:01:26.390 align:start position:0%
one's place digit pretty easily you can
do<00:01:25.280><c> that</c><00:01:25.600><c> by</c>

00:01:26.390 --> 00:01:26.400 align:start position:0%
do that by
 

00:01:26.400 --> 00:01:29.910 align:start position:0%
do that by
modding<00:01:27.280><c> this</c><00:01:27.840><c> by</c><00:01:28.080><c> 10.</c><00:01:28.400><c> if</c><00:01:28.479><c> we</c><00:01:28.720><c> mod</c><00:01:29.119><c> by</c><00:01:29.439><c> 10</c>

00:01:29.910 --> 00:01:29.920 align:start position:0%
modding this by 10. if we mod by 10
 

00:01:29.920 --> 00:01:31.910 align:start position:0%
modding this by 10. if we mod by 10
we're<00:01:30.159><c> basically</c><00:01:30.560><c> dividing</c><00:01:31.040><c> this</c><00:01:31.280><c> by</c><00:01:31.520><c> 10</c>

00:01:31.910 --> 00:01:31.920 align:start position:0%
we're basically dividing this by 10
 

00:01:31.920 --> 00:01:34.230 align:start position:0%
we're basically dividing this by 10
except<00:01:32.240><c> we're</c><00:01:32.479><c> getting</c><00:01:32.960><c> the</c><00:01:33.119><c> remainder</c><00:01:34.000><c> which</c>

00:01:34.230 --> 00:01:34.240 align:start position:0%
except we're getting the remainder which
 

00:01:34.240 --> 00:01:35.749 align:start position:0%
except we're getting the remainder which
is<00:01:34.479><c> exactly</c><00:01:34.880><c> what</c><00:01:35.040><c> we</c><00:01:35.119><c> want</c><00:01:35.280><c> that's</c><00:01:35.520><c> how</c><00:01:35.680><c> you</c>

00:01:35.749 --> 00:01:35.759 align:start position:0%
is exactly what we want that's how you
 

00:01:35.759 --> 00:01:38.710 align:start position:0%
is exactly what we want that's how you
get<00:01:35.920><c> the</c><00:01:36.079><c> ones</c><00:01:36.400><c> place</c><00:01:36.640><c> if</c><00:01:36.720><c> i</c><00:01:36.799><c> took</c><00:01:37.079><c> 123</c><00:01:38.159><c> divided</c>

00:01:38.710 --> 00:01:38.720 align:start position:0%
get the ones place if i took 123 divided
 

00:01:38.720 --> 00:01:40.950 align:start position:0%
get the ones place if i took 123 divided
by<00:01:38.960><c> 10</c><00:01:39.360><c> what</c><00:01:39.520><c> would</c><00:01:39.680><c> be</c><00:01:39.840><c> the</c><00:01:40.079><c> remainder</c><00:01:40.880><c> it</c>

00:01:40.950 --> 00:01:40.960 align:start position:0%
by 10 what would be the remainder it
 

00:01:40.960 --> 00:01:42.950 align:start position:0%
by 10 what would be the remainder it
would<00:01:41.119><c> be</c><00:01:41.360><c> 3</c><00:01:41.680><c> of</c><00:01:41.759><c> course</c><00:01:42.079><c> right</c><00:01:42.240><c> so</c><00:01:42.399><c> then</c><00:01:42.799><c> we</c>

00:01:42.950 --> 00:01:42.960 align:start position:0%
would be 3 of course right so then we
 

00:01:42.960 --> 00:01:45.830 align:start position:0%
would be 3 of course right so then we
can<00:01:43.119><c> get</c><00:01:43.439><c> 3.</c><00:01:43.920><c> so</c><00:01:44.079><c> with</c><00:01:44.320><c> this</c><00:01:44.640><c> digit</c><00:01:45.200><c> we</c><00:01:45.360><c> want</c><00:01:45.600><c> to</c>

00:01:45.830 --> 00:01:45.840 align:start position:0%
can get 3. so with this digit we want to
 

00:01:45.840 --> 00:01:48.310 align:start position:0%
can get 3. so with this digit we want to
create<00:01:46.320><c> a</c><00:01:46.560><c> new</c><00:01:46.960><c> integer</c><00:01:47.600><c> right</c><00:01:48.000><c> so</c><00:01:48.159><c> we're</c>

00:01:48.310 --> 00:01:48.320 align:start position:0%
create a new integer right so we're
 

00:01:48.320 --> 00:01:50.310 align:start position:0%
create a new integer right so we're
going<00:01:48.399><c> to</c><00:01:48.560><c> start</c><00:01:48.880><c> our</c><00:01:49.040><c> new</c><00:01:49.280><c> integer</c><00:01:50.000><c> just</c>

00:01:50.310 --> 00:01:50.320 align:start position:0%
going to start our new integer just
 

00:01:50.320 --> 00:01:51.990 align:start position:0%
going to start our new integer just
being<00:01:50.640><c> 3</c><00:01:50.960><c> right</c><00:01:51.119><c> this</c><00:01:51.280><c> is</c><00:01:51.360><c> the</c><00:01:51.520><c> result</c><00:01:51.920><c> that</c>

00:01:51.990 --> 00:01:52.000 align:start position:0%
being 3 right this is the result that
 

00:01:52.000 --> 00:01:54.069 align:start position:0%
being 3 right this is the result that
we're<00:01:52.159><c> returning</c><00:01:52.720><c> it's</c><00:01:52.960><c> going</c><00:01:53.200><c> to</c><00:01:53.360><c> be</c><00:01:53.759><c> three</c>

00:01:54.069 --> 00:01:54.079 align:start position:0%
we're returning it's going to be three
 

00:01:54.079 --> 00:01:55.749 align:start position:0%
we're returning it's going to be three
let<00:01:54.240><c> me</c><00:01:54.560><c> you</c><00:01:54.720><c> know</c><00:01:54.880><c> write</c><00:01:55.040><c> it</c><00:01:55.119><c> down</c><00:01:55.360><c> over</c><00:01:55.520><c> here</c>

00:01:55.749 --> 00:01:55.759 align:start position:0%
let me you know write it down over here
 

00:01:55.759 --> 00:01:58.069 align:start position:0%
let me you know write it down over here
three<00:01:56.320><c> right</c><00:01:56.799><c> then</c><00:01:57.119><c> another</c><00:01:57.520><c> operation</c><00:01:57.920><c> we</c>

00:01:58.069 --> 00:01:58.079 align:start position:0%
three right then another operation we
 

00:01:58.079 --> 00:02:01.109 align:start position:0%
three right then another operation we
can<00:01:58.159><c> do</c><00:01:58.320><c> on</c><00:01:58.479><c> 123.</c><00:01:59.840><c> now</c><00:02:00.000><c> that</c><00:02:00.159><c> we've</c><00:02:00.479><c> processed</c>

00:02:01.109 --> 00:02:01.119 align:start position:0%
can do on 123. now that we've processed
 

00:02:01.119 --> 00:02:02.950 align:start position:0%
can do on 123. now that we've processed
this<00:02:01.439><c> one's</c><00:02:01.840><c> place</c><00:02:02.240><c> we</c><00:02:02.399><c> don't</c><00:02:02.560><c> really</c><00:02:02.799><c> care</c>

00:02:02.950 --> 00:02:02.960 align:start position:0%
this one's place we don't really care
 

00:02:02.960 --> 00:02:04.469 align:start position:0%
this one's place we don't really care
about<00:02:03.119><c> the</c><00:02:03.280><c> ones</c><00:02:03.520><c> place</c><00:02:03.759><c> anymore</c><00:02:04.240><c> right</c><00:02:04.399><c> we</c>

00:02:04.469 --> 00:02:04.479 align:start position:0%
about the ones place anymore right we
 

00:02:04.479 --> 00:02:05.990 align:start position:0%
about the ones place anymore right we
don't<00:02:04.640><c> care</c><00:02:04.799><c> about</c><00:02:04.960><c> this</c><00:02:05.200><c> three</c><00:02:05.520><c> now</c><00:02:05.680><c> we</c><00:02:05.840><c> want</c>

00:02:05.990 --> 00:02:06.000 align:start position:0%
don't care about this three now we want
 

00:02:06.000 --> 00:02:07.830 align:start position:0%
don't care about this three now we want
to<00:02:06.079><c> look</c><00:02:06.240><c> at</c><00:02:06.320><c> the</c><00:02:06.479><c> next</c><00:02:07.040><c> digit</c><00:02:07.360><c> right</c><00:02:07.520><c> so</c><00:02:07.680><c> how</c>

00:02:07.830 --> 00:02:07.840 align:start position:0%
to look at the next digit right so how
 

00:02:07.840 --> 00:02:10.469 align:start position:0%
to look at the next digit right so how
can<00:02:08.080><c> we</c><00:02:08.239><c> basically</c><00:02:08.720><c> chop</c><00:02:09.360><c> this</c><00:02:09.599><c> digit</c><00:02:10.080><c> off</c>

00:02:10.469 --> 00:02:10.479 align:start position:0%
can we basically chop this digit off
 

00:02:10.479 --> 00:02:12.390 align:start position:0%
can we basically chop this digit off
well<00:02:10.640><c> it's</c><00:02:10.879><c> pretty</c><00:02:11.120><c> easy</c><00:02:11.520><c> you</c><00:02:11.760><c> basically</c><00:02:12.160><c> take</c>

00:02:12.390 --> 00:02:12.400 align:start position:0%
well it's pretty easy you basically take
 

00:02:12.400 --> 00:02:15.670 align:start position:0%
well it's pretty easy you basically take
123<00:02:13.599><c> divide</c><00:02:14.080><c> it</c><00:02:14.160><c> by</c><00:02:14.400><c> 10</c><00:02:14.640><c> when</c><00:02:14.800><c> i</c><00:02:14.879><c> say</c><00:02:15.040><c> divide</c>

00:02:15.670 --> 00:02:15.680 align:start position:0%
123 divide it by 10 when i say divide
 

00:02:15.680 --> 00:02:17.510 align:start position:0%
123 divide it by 10 when i say divide
we're<00:02:15.840><c> not</c><00:02:16.080><c> doing</c><00:02:16.400><c> decimal</c><00:02:16.879><c> division</c><00:02:17.360><c> we're</c>

00:02:17.510 --> 00:02:17.520 align:start position:0%
we're not doing decimal division we're
 

00:02:17.520 --> 00:02:19.750 align:start position:0%
we're not doing decimal division we're
doing<00:02:17.840><c> integer</c><00:02:18.239><c> division</c><00:02:18.959><c> so</c>

00:02:19.750 --> 00:02:19.760 align:start position:0%
doing integer division so
 

00:02:19.760 --> 00:02:21.750 align:start position:0%
doing integer division so
when<00:02:19.920><c> you</c><00:02:20.080><c> do</c><00:02:20.239><c> integer</c><00:02:20.640><c> division</c><00:02:20.959><c> we</c><00:02:21.280><c> round</c>

00:02:21.750 --> 00:02:21.760 align:start position:0%
when you do integer division we round
 

00:02:21.760 --> 00:02:24.869 align:start position:0%
when you do integer division we round
towards<00:02:22.400><c> zeros</c><00:02:23.040><c> if</c><00:02:23.200><c> we</c><00:02:23.440><c> divide</c><00:02:23.760><c> this</c><00:02:23.920><c> by</c><00:02:24.160><c> 10</c><00:02:24.720><c> we</c>

00:02:24.869 --> 00:02:24.879 align:start position:0%
towards zeros if we divide this by 10 we
 

00:02:24.879 --> 00:02:28.229 align:start position:0%
towards zeros if we divide this by 10 we
will<00:02:25.200><c> get</c><00:02:25.840><c> 12</c><00:02:26.640><c> because</c><00:02:27.120><c> we're</c><00:02:27.360><c> rounding</c><00:02:27.920><c> down</c>

00:02:28.229 --> 00:02:28.239 align:start position:0%
will get 12 because we're rounding down
 

00:02:28.239 --> 00:02:30.070 align:start position:0%
will get 12 because we're rounding down
we're<00:02:28.480><c> rounding</c><00:02:28.959><c> towards</c><00:02:29.440><c> zero</c><00:02:29.680><c> so</c><00:02:29.840><c> now</c><00:02:30.000><c> we</c>

00:02:30.070 --> 00:02:30.080 align:start position:0%
we're rounding towards zero so now we
 

00:02:30.080 --> 00:02:31.830 align:start position:0%
we're rounding towards zero so now we
have<00:02:30.239><c> 12.</c><00:02:30.640><c> we're</c><00:02:30.800><c> going</c><00:02:30.959><c> to</c><00:02:31.040><c> basically</c><00:02:31.440><c> repeat</c>

00:02:31.830 --> 00:02:31.840 align:start position:0%
have 12. we're going to basically repeat
 

00:02:31.840 --> 00:02:33.670 align:start position:0%
have 12. we're going to basically repeat
that<00:02:32.080><c> exact</c><00:02:32.480><c> same</c><00:02:32.640><c> step</c><00:02:32.959><c> that</c><00:02:33.040><c> we</c><00:02:33.200><c> just</c><00:02:33.360><c> did</c>

00:02:33.670 --> 00:02:33.680 align:start position:0%
that exact same step that we just did
 

00:02:33.680 --> 00:02:35.350 align:start position:0%
that exact same step that we just did
over<00:02:34.000><c> here</c><00:02:34.560><c> basically</c><00:02:34.959><c> now</c><00:02:35.120><c> we're</c><00:02:35.200><c> going</c><00:02:35.280><c> to</c>

00:02:35.350 --> 00:02:35.360 align:start position:0%
over here basically now we're going to
 

00:02:35.360 --> 00:02:36.390 align:start position:0%
over here basically now we're going to
take<00:02:35.519><c> 12</c>

00:02:36.390 --> 00:02:36.400 align:start position:0%
take 12
 

00:02:36.400 --> 00:02:39.190 align:start position:0%
take 12
mod<00:02:36.640><c> it</c><00:02:37.120><c> by</c><00:02:37.840><c> 10</c><00:02:38.400><c> and</c><00:02:38.560><c> now</c><00:02:38.800><c> we're</c><00:02:38.879><c> going</c><00:02:38.959><c> to</c><00:02:39.040><c> get</c>

00:02:39.190 --> 00:02:39.200 align:start position:0%
mod it by 10 and now we're going to get
 

00:02:39.200 --> 00:02:41.190 align:start position:0%
mod it by 10 and now we're going to get
the<00:02:39.280><c> ones</c><00:02:39.680><c> place</c><00:02:39.920><c> which</c><00:02:40.160><c> is</c><00:02:40.560><c> 2</c><00:02:40.800><c> right</c><00:02:40.959><c> that's</c>

00:02:41.190 --> 00:02:41.200 align:start position:0%
the ones place which is 2 right that's
 

00:02:41.200 --> 00:02:43.110 align:start position:0%
the ones place which is 2 right that's
the<00:02:41.280><c> digit</c><00:02:41.599><c> we</c><00:02:41.760><c> were</c><00:02:41.920><c> looking</c><00:02:42.160><c> for</c><00:02:42.319><c> so</c><00:02:42.560><c> now</c><00:02:42.959><c> we</c>

00:02:43.110 --> 00:02:43.120 align:start position:0%
the digit we were looking for so now we
 

00:02:43.120 --> 00:02:45.830 align:start position:0%
the digit we were looking for so now we
want<00:02:43.280><c> to</c><00:02:43.360><c> take</c><00:02:43.599><c> this</c><00:02:43.920><c> 2</c><00:02:44.400><c> and</c><00:02:44.640><c> add</c><00:02:44.879><c> it</c><00:02:45.200><c> over</c><00:02:45.519><c> here</c>

00:02:45.830 --> 00:02:45.840 align:start position:0%
want to take this 2 and add it over here
 

00:02:45.840 --> 00:02:48.229 align:start position:0%
want to take this 2 and add it over here
right<00:02:46.319><c> now</c><00:02:46.480><c> how</c><00:02:46.640><c> can</c><00:02:46.879><c> we</c><00:02:47.040><c> do</c><00:02:47.280><c> that</c><00:02:47.680><c> well</c><00:02:48.080><c> we</c>

00:02:48.229 --> 00:02:48.239 align:start position:0%
right now how can we do that well we
 

00:02:48.239 --> 00:02:50.309 align:start position:0%
right now how can we do that well we
have<00:02:48.480><c> a</c><00:02:48.560><c> digi</c><00:02:48.800><c> we</c><00:02:48.959><c> have</c><00:02:49.120><c> a</c><00:02:49.200><c> value</c><00:02:49.680><c> three</c><00:02:50.160><c> so</c>

00:02:50.309 --> 00:02:50.319 align:start position:0%
have a digi we have a value three so
 

00:02:50.319 --> 00:02:53.270 align:start position:0%
have a digi we have a value three so
let's<00:02:50.640><c> take</c><00:02:50.959><c> three</c><00:02:51.599><c> multiply</c><00:02:52.239><c> it</c><00:02:52.400><c> by</c><00:02:52.640><c> ten</c><00:02:53.040><c> what</c>

00:02:53.270 --> 00:02:53.280 align:start position:0%
let's take three multiply it by ten what
 

00:02:53.280 --> 00:02:55.830 align:start position:0%
let's take three multiply it by ten what
do<00:02:53.440><c> we</c><00:02:53.599><c> get</c><00:02:53.840><c> we</c><00:02:54.000><c> get</c><00:02:54.560><c> thirty</c><00:02:55.040><c> right</c><00:02:55.280><c> why</c><00:02:55.519><c> did</c><00:02:55.680><c> we</c>

00:02:55.830 --> 00:02:55.840 align:start position:0%
do we get we get thirty right why did we
 

00:02:55.840 --> 00:02:57.830 align:start position:0%
do we get we get thirty right why did we
multiply<00:02:56.319><c> it</c><00:02:56.480><c> by</c><00:02:56.640><c> ten</c><00:02:56.879><c> because</c><00:02:57.120><c> we</c><00:02:57.280><c> wanted</c><00:02:57.519><c> to</c>

00:02:57.830 --> 00:02:57.840 align:start position:0%
multiply it by ten because we wanted to
 

00:02:57.840 --> 00:03:01.750 align:start position:0%
multiply it by ten because we wanted to
shift<00:02:58.560><c> this</c><00:02:58.879><c> three</c><00:02:59.519><c> to</c><00:02:59.760><c> the</c><00:03:00.159><c> left</c><00:03:00.800><c> by</c><00:03:01.200><c> one</c>

00:03:01.750 --> 00:03:01.760 align:start position:0%
shift this three to the left by one
 

00:03:01.760 --> 00:03:04.070 align:start position:0%
shift this three to the left by one
because<00:03:02.080><c> now</c><00:03:02.480><c> we're</c><00:03:02.640><c> going</c><00:03:02.720><c> to</c><00:03:02.879><c> take</c><00:03:03.040><c> this</c><00:03:03.360><c> 30</c>

00:03:04.070 --> 00:03:04.080 align:start position:0%
because now we're going to take this 30
 

00:03:04.080 --> 00:03:07.030 align:start position:0%
because now we're going to take this 30
add<00:03:04.800><c> 2</c><00:03:05.200><c> to</c><00:03:05.440><c> it</c><00:03:05.599><c> why</c><00:03:05.760><c> are</c><00:03:05.840><c> we</c><00:03:06.000><c> adding</c><00:03:06.319><c> 2</c><00:03:06.560><c> because</c>

00:03:07.030 --> 00:03:07.040 align:start position:0%
add 2 to it why are we adding 2 because
 

00:03:07.040 --> 00:03:08.790 align:start position:0%
add 2 to it why are we adding 2 because
that's<00:03:07.280><c> the</c><00:03:07.440><c> digit</c><00:03:07.760><c> that</c><00:03:07.840><c> we</c><00:03:08.000><c> just</c><00:03:08.159><c> computed</c>

00:03:08.790 --> 00:03:08.800 align:start position:0%
that's the digit that we just computed
 

00:03:08.800 --> 00:03:11.589 align:start position:0%
that's the digit that we just computed
up<00:03:08.959><c> above</c><00:03:09.280><c> right</c><00:03:09.440><c> so</c><00:03:09.599><c> we</c><00:03:09.840><c> add</c><00:03:10.159><c> 2</c><00:03:10.480><c> to</c><00:03:10.640><c> 30</c><00:03:11.200><c> now</c><00:03:11.440><c> we</c>

00:03:11.589 --> 00:03:11.599 align:start position:0%
up above right so we add 2 to 30 now we
 

00:03:11.599 --> 00:03:15.350 align:start position:0%
up above right so we add 2 to 30 now we
get<00:03:12.239><c> 32</c><00:03:13.519><c> right</c><00:03:14.000><c> so</c><00:03:14.319><c> we've</c><00:03:14.720><c> almost</c><00:03:15.120><c> we're</c>

00:03:15.350 --> 00:03:15.360 align:start position:0%
get 32 right so we've almost we're
 

00:03:15.360 --> 00:03:17.910 align:start position:0%
get 32 right so we've almost we're
almost<00:03:15.760><c> done</c><00:03:16.000><c> reversing</c><00:03:16.720><c> this</c><00:03:17.120><c> integer</c><00:03:17.599><c> right</c>

00:03:17.910 --> 00:03:17.920 align:start position:0%
almost done reversing this integer right
 

00:03:17.920 --> 00:03:19.750 align:start position:0%
almost done reversing this integer right
if<00:03:18.080><c> you</c><00:03:18.159><c> take</c><00:03:18.400><c> a</c><00:03:18.480><c> look</c><00:03:18.720><c> over</c><00:03:18.959><c> here</c><00:03:19.280><c> we</c><00:03:19.519><c> started</c>

00:03:19.750 --> 00:03:19.760 align:start position:0%
if you take a look over here we started
 

00:03:19.760 --> 00:03:23.030 align:start position:0%
if you take a look over here we started
with<00:03:19.920><c> 123</c><00:03:21.200><c> we've</c><00:03:21.360><c> reversed</c><00:03:22.159><c> the</c><00:03:22.560><c> first</c><00:03:22.879><c> two</c>

00:03:23.030 --> 00:03:23.040 align:start position:0%
with 123 we've reversed the first two
 

00:03:23.040 --> 00:03:24.470 align:start position:0%
with 123 we've reversed the first two
digits<00:03:23.440><c> right</c><00:03:23.599><c> but</c><00:03:23.760><c> now</c><00:03:23.840><c> we</c><00:03:24.000><c> want</c><00:03:24.080><c> to</c><00:03:24.159><c> reverse</c>

00:03:24.470 --> 00:03:24.480 align:start position:0%
digits right but now we want to reverse
 

00:03:24.480 --> 00:03:26.470 align:start position:0%
digits right but now we want to reverse
the<00:03:24.560><c> last</c><00:03:24.799><c> one</c><00:03:24.959><c> which</c><00:03:25.200><c> is</c><00:03:25.360><c> one</c><00:03:25.840><c> and</c><00:03:26.000><c> that'll</c><00:03:26.319><c> be</c>

00:03:26.470 --> 00:03:26.480 align:start position:0%
the last one which is one and that'll be
 

00:03:26.480 --> 00:03:27.990 align:start position:0%
the last one which is one and that'll be
pretty<00:03:26.720><c> easy</c><00:03:27.040><c> we'll</c><00:03:27.200><c> just</c><00:03:27.360><c> continue</c><00:03:27.840><c> the</c>

00:03:27.990 --> 00:03:28.000 align:start position:0%
pretty easy we'll just continue the
 

00:03:28.000 --> 00:03:30.070 align:start position:0%
pretty easy we'll just continue the
steps<00:03:28.319><c> that</c><00:03:28.400><c> we've</c><00:03:28.560><c> just</c><00:03:28.959><c> done</c><00:03:29.280><c> up</c><00:03:29.440><c> above</c><00:03:29.920><c> so</c>

00:03:30.070 --> 00:03:30.080 align:start position:0%
steps that we've just done up above so
 

00:03:30.080 --> 00:03:32.789 align:start position:0%
steps that we've just done up above so
then<00:03:30.239><c> we'll</c><00:03:30.480><c> at</c><00:03:30.560><c> the</c><00:03:30.640><c> end</c><00:03:30.879><c> we'll</c><00:03:31.040><c> have</c><00:03:31.280><c> 321</c>

00:03:32.789 --> 00:03:32.799 align:start position:0%
then we'll at the end we'll have 321
 

00:03:32.799 --> 00:03:34.070 align:start position:0%
then we'll at the end we'll have 321
and<00:03:32.879><c> then</c><00:03:33.040><c> we'll</c><00:03:33.200><c> return</c><00:03:33.519><c> that</c><00:03:33.760><c> which</c><00:03:33.920><c> is</c>

00:03:34.070 --> 00:03:34.080 align:start position:0%
and then we'll return that which is
 

00:03:34.080 --> 00:03:36.390 align:start position:0%
and then we'll return that which is
exactly<00:03:34.400><c> what</c><00:03:34.560><c> we</c><00:03:34.720><c> wanted</c><00:03:34.959><c> to</c><00:03:35.120><c> do</c><00:03:35.680><c> and</c><00:03:36.080><c> believe</c>

00:03:36.390 --> 00:03:36.400 align:start position:0%
exactly what we wanted to do and believe
 

00:03:36.400 --> 00:03:38.470 align:start position:0%
exactly what we wanted to do and believe
it<00:03:36.560><c> or</c><00:03:36.640><c> not</c><00:03:36.879><c> we</c><00:03:36.959><c> can</c><00:03:37.120><c> do</c><00:03:37.360><c> this</c><00:03:37.599><c> exact</c><00:03:38.080><c> same</c>

00:03:38.470 --> 00:03:38.480 align:start position:0%
it or not we can do this exact same
 

00:03:38.480 --> 00:03:40.789 align:start position:0%
it or not we can do this exact same
procedure<00:03:39.200><c> on</c><00:03:39.519><c> negative</c><00:03:40.000><c> numbers</c><00:03:40.480><c> and</c><00:03:40.640><c> it</c>

00:03:40.789 --> 00:03:40.799 align:start position:0%
procedure on negative numbers and it
 

00:03:40.799 --> 00:03:43.110 align:start position:0%
procedure on negative numbers and it
works<00:03:41.120><c> out</c><00:03:41.360><c> the</c><00:03:41.599><c> exact</c><00:03:42.159><c> same</c><00:03:42.480><c> so</c><00:03:42.640><c> that's</c><00:03:42.959><c> the</c>

00:03:43.110 --> 00:03:43.120 align:start position:0%
works out the exact same so that's the
 

00:03:43.120 --> 00:03:45.190 align:start position:0%
works out the exact same so that's the
good<00:03:43.280><c> thing</c><00:03:43.680><c> the</c><00:03:43.840><c> only</c><00:03:44.159><c> downside</c><00:03:44.640><c> is</c><00:03:45.040><c> we</c>

00:03:45.190 --> 00:03:45.200 align:start position:0%
good thing the only downside is we
 

00:03:45.200 --> 00:03:47.270 align:start position:0%
good thing the only downside is we
haven't<00:03:45.599><c> covered</c><00:03:46.080><c> what</c><00:03:46.319><c> are</c><00:03:46.400><c> we</c><00:03:46.480><c> going</c><00:03:46.640><c> to</c><00:03:46.799><c> do</c>

00:03:47.270 --> 00:03:47.280 align:start position:0%
haven't covered what are we going to do
 

00:03:47.280 --> 00:03:50.070 align:start position:0%
haven't covered what are we going to do
if<00:03:47.519><c> the</c><00:03:47.760><c> digits</c><00:03:48.319><c> overflow</c><00:03:49.200><c> so</c><00:03:49.440><c> let</c><00:03:49.599><c> me</c><00:03:49.760><c> kind</c><00:03:49.920><c> of</c>

00:03:50.070 --> 00:03:50.080 align:start position:0%
if the digits overflow so let me kind of
 

00:03:50.080 --> 00:03:52.710 align:start position:0%
if the digits overflow so let me kind of
explain<00:03:50.799><c> that</c><00:03:51.040><c> to</c><00:03:51.200><c> you</c><00:03:51.440><c> this</c><00:03:52.080><c> range</c><00:03:52.400><c> that</c><00:03:52.560><c> we</c>

00:03:52.710 --> 00:03:52.720 align:start position:0%
explain that to you this range that we
 

00:03:52.720 --> 00:03:54.789 align:start position:0%
explain that to you this range that we
have<00:03:52.879><c> to</c><00:03:53.360><c> kind</c><00:03:53.519><c> of</c><00:03:53.840><c> meet</c><00:03:54.159><c> oh</c><00:03:54.480><c> in</c><00:03:54.560><c> the</c>

00:03:54.789 --> 00:03:54.799 align:start position:0%
have to kind of meet oh in the
 

00:03:54.799 --> 00:03:57.190 align:start position:0%
have to kind of meet oh in the
description<00:03:55.360><c> they</c><00:03:55.599><c> say</c><00:03:55.840><c> that</c><00:03:56.080><c> if</c><00:03:56.319><c> the</c><00:03:56.799><c> value</c>

00:03:57.190 --> 00:03:57.200 align:start position:0%
description they say that if the value
 

00:03:57.200 --> 00:03:58.949 align:start position:0%
description they say that if the value
goes<00:03:57.519><c> out</c><00:03:57.760><c> of</c><00:03:57.920><c> bounds</c><00:03:58.159><c> so</c><00:03:58.319><c> take</c><00:03:58.480><c> a</c><00:03:58.560><c> look</c><00:03:58.720><c> at</c><00:03:58.799><c> the</c>

00:03:58.949 --> 00:03:58.959 align:start position:0%
goes out of bounds so take a look at the
 

00:03:58.959 --> 00:04:00.710 align:start position:0%
goes out of bounds so take a look at the
left<00:03:59.280><c> they</c><00:03:59.519><c> say</c><00:03:59.680><c> if</c><00:03:59.760><c> it</c><00:03:59.840><c> goes</c><00:04:00.159><c> out</c><00:04:00.319><c> of</c><00:04:00.400><c> bounds</c>

00:04:00.710 --> 00:04:00.720 align:start position:0%
left they say if it goes out of bounds
 

00:04:00.720 --> 00:04:03.509 align:start position:0%
left they say if it goes out of bounds
from<00:04:00.959><c> this</c><00:04:01.439><c> range</c><00:04:01.920><c> then</c><00:04:02.080><c> return</c><00:04:02.560><c> 0.</c><00:04:02.959><c> now</c><00:04:03.200><c> what</c>

00:04:03.509 --> 00:04:03.519 align:start position:0%
from this range then return 0. now what
 

00:04:03.519 --> 00:04:06.149 align:start position:0%
from this range then return 0. now what
is<00:04:03.680><c> the</c><00:04:03.840><c> value</c><00:04:04.400><c> negative</c><00:04:04.879><c> 2</c><00:04:05.439><c> or</c><00:04:05.680><c> 2</c><00:04:05.920><c> to</c><00:04:06.080><c> the</c>

00:04:06.149 --> 00:04:06.159 align:start position:0%
is the value negative 2 or 2 to the
 

00:04:06.159 --> 00:04:08.390 align:start position:0%
is the value negative 2 or 2 to the
power<00:04:06.400><c> of</c><00:04:06.560><c> 31</c><00:04:07.200><c> negative</c><00:04:07.599><c> right</c><00:04:07.840><c> negative</c><00:04:08.159><c> 2</c><00:04:08.319><c> to</c>

00:04:08.390 --> 00:04:08.400 align:start position:0%
power of 31 negative right negative 2 to
 

00:04:08.400 --> 00:04:10.470 align:start position:0%
power of 31 negative right negative 2 to
the<00:04:08.480><c> power</c><00:04:08.720><c> 31</c><00:04:09.200><c> what</c><00:04:09.360><c> is</c><00:04:09.519><c> that</c><00:04:09.680><c> value</c><00:04:10.239><c> well</c><00:04:10.400><c> you</c>

00:04:10.470 --> 00:04:10.480 align:start position:0%
the power 31 what is that value well you
 

00:04:10.480 --> 00:04:13.350 align:start position:0%
the power 31 what is that value well you
can<00:04:10.560><c> see</c><00:04:10.799><c> over</c><00:04:11.040><c> here</c><00:04:11.680><c> this</c><00:04:12.159><c> is</c><00:04:12.400><c> that</c><00:04:12.720><c> full</c>

00:04:13.350 --> 00:04:13.360 align:start position:0%
can see over here this is that full
 

00:04:13.360 --> 00:04:15.589 align:start position:0%
can see over here this is that full
value<00:04:13.680><c> these</c><00:04:13.920><c> are</c><00:04:14.080><c> the</c><00:04:14.159><c> digits</c><00:04:14.799><c> what</c><00:04:15.040><c> is</c><00:04:15.280><c> 2</c><00:04:15.519><c> to</c>

00:04:15.589 --> 00:04:15.599 align:start position:0%
value these are the digits what is 2 to
 

00:04:15.599 --> 00:04:17.990 align:start position:0%
value these are the digits what is 2 to
the<00:04:15.680><c> power</c><00:04:15.920><c> of</c><00:04:16.000><c> 31</c><00:04:16.560><c> minus</c><00:04:16.959><c> 1</c><00:04:17.359><c> this</c><00:04:17.600><c> is</c><00:04:17.759><c> that</c>

00:04:17.990 --> 00:04:18.000 align:start position:0%
the power of 31 minus 1 this is that
 

00:04:18.000 --> 00:04:20.949 align:start position:0%
the power of 31 minus 1 this is that
value<00:04:18.639><c> so</c><00:04:19.120><c> what</c><00:04:19.280><c> if</c><00:04:19.440><c> we</c><00:04:19.600><c> had</c><00:04:19.919><c> a</c><00:04:20.160><c> example</c><00:04:20.720><c> that</c>

00:04:20.949 --> 00:04:20.959 align:start position:0%
value so what if we had a example that
 

00:04:20.959 --> 00:04:23.189 align:start position:0%
value so what if we had a example that
looked<00:04:21.280><c> basically</c><00:04:22.000><c> was</c><00:04:22.400><c> too</c>

00:04:23.189 --> 00:04:23.199 align:start position:0%
looked basically was too
 

00:04:23.199 --> 00:04:25.350 align:start position:0%
looked basically was too
large<00:04:23.600><c> right</c><00:04:23.840><c> what</c><00:04:24.000><c> if</c><00:04:24.080><c> the</c><00:04:24.240><c> value</c><00:04:24.639><c> was</c><00:04:24.960><c> too</c>

00:04:25.350 --> 00:04:25.360 align:start position:0%
large right what if the value was too
 

00:04:25.360 --> 00:04:27.030 align:start position:0%
large right what if the value was too
large<00:04:25.759><c> to</c><00:04:26.000><c> fit</c><00:04:26.160><c> what</c><00:04:26.320><c> if</c><00:04:26.400><c> the</c><00:04:26.560><c> value</c><00:04:26.880><c> was</c>

00:04:27.030 --> 00:04:27.040 align:start position:0%
large to fit what if the value was
 

00:04:27.040 --> 00:04:29.110 align:start position:0%
large to fit what if the value was
actually<00:04:27.440><c> larger</c><00:04:27.919><c> than</c><00:04:28.080><c> the</c><00:04:28.320><c> max</c><00:04:28.720><c> value</c><00:04:29.040><c> that</c>

00:04:29.110 --> 00:04:29.120 align:start position:0%
actually larger than the max value that
 

00:04:29.120 --> 00:04:31.189 align:start position:0%
actually larger than the max value that
we<00:04:29.199><c> can</c><00:04:29.360><c> possibly</c><00:04:29.840><c> have</c><00:04:30.400><c> what</c><00:04:30.639><c> if</c><00:04:30.720><c> the</c><00:04:30.880><c> value</c>

00:04:31.189 --> 00:04:31.199 align:start position:0%
we can possibly have what if the value
 

00:04:31.199 --> 00:04:34.950 align:start position:0%
we can possibly have what if the value
was<00:04:31.520><c> two</c><00:04:32.160><c> one</c><00:04:32.560><c> four</c><00:04:33.040><c> seven</c><00:04:33.759><c> what</c><00:04:33.919><c> if</c><00:04:34.320><c> the</c><00:04:34.560><c> value</c>

00:04:34.950 --> 00:04:34.960 align:start position:0%
was two one four seven what if the value
 

00:04:34.960 --> 00:04:38.070 align:start position:0%
was two one four seven what if the value
was<00:04:35.120><c> the</c><00:04:35.280><c> exact</c><00:04:35.840><c> same</c><00:04:36.400><c> as</c><00:04:36.639><c> this</c><00:04:37.040><c> except</c><00:04:37.600><c> plus</c>

00:04:38.070 --> 00:04:38.080 align:start position:0%
was the exact same as this except plus
 

00:04:38.080 --> 00:04:39.670 align:start position:0%
was the exact same as this except plus
one<00:04:38.400><c> you</c><00:04:38.560><c> can</c><00:04:38.639><c> see</c><00:04:38.800><c> that</c><00:04:38.880><c> this</c><00:04:39.120><c> is</c><00:04:39.199><c> the</c><00:04:39.360><c> exact</c>

00:04:39.670 --> 00:04:39.680 align:start position:0%
one you can see that this is the exact
 

00:04:39.680 --> 00:04:41.990 align:start position:0%
one you can see that this is the exact
same<00:04:39.919><c> value</c><00:04:40.160><c> except</c><00:04:40.479><c> i</c><00:04:40.639><c> added</c><00:04:41.040><c> one</c><00:04:41.440><c> so</c><00:04:41.600><c> this</c><00:04:41.840><c> is</c>

00:04:41.990 --> 00:04:42.000 align:start position:0%
same value except i added one so this is
 

00:04:42.000 --> 00:04:44.950 align:start position:0%
same value except i added one so this is
an<00:04:42.320><c> eight</c><00:04:42.800><c> instead</c><00:04:43.199><c> of</c><00:04:43.360><c> a</c><00:04:43.600><c> seven</c><00:04:44.160><c> and</c><00:04:44.479><c> actually</c>

00:04:44.950 --> 00:04:44.960 align:start position:0%
an eight instead of a seven and actually
 

00:04:44.960 --> 00:04:47.670 align:start position:0%
an eight instead of a seven and actually
what<00:04:45.199><c> if</c><00:04:45.360><c> the</c><00:04:45.600><c> input</c><00:04:46.080><c> value</c><00:04:46.720><c> was</c><00:04:47.120><c> this</c>

00:04:47.670 --> 00:04:47.680 align:start position:0%
what if the input value was this
 

00:04:47.680 --> 00:04:49.590 align:start position:0%
what if the input value was this
basically<00:04:48.080><c> what</c><00:04:48.320><c> if</c><00:04:48.400><c> the</c><00:04:48.639><c> input</c><00:04:48.960><c> value</c><00:04:49.360><c> was</c>

00:04:49.590 --> 00:04:49.600 align:start position:0%
basically what if the input value was
 

00:04:49.600 --> 00:04:52.950 align:start position:0%
basically what if the input value was
the<00:04:49.759><c> reverse</c><00:04:50.479><c> of</c><00:04:51.120><c> the</c><00:04:51.520><c> max</c><00:04:51.840><c> digit</c><00:04:52.240><c> plus</c><00:04:52.639><c> one</c>

00:04:52.950 --> 00:04:52.960 align:start position:0%
the reverse of the max digit plus one
 

00:04:52.960 --> 00:04:53.670 align:start position:0%
the reverse of the max digit plus one
right

00:04:53.670 --> 00:04:53.680 align:start position:0%
right
 

00:04:53.680 --> 00:04:55.830 align:start position:0%
right
let's<00:04:53.840><c> say</c><00:04:54.000><c> this</c><00:04:54.240><c> was</c><00:04:54.400><c> our</c><00:04:54.639><c> input</c><00:04:54.960><c> value</c><00:04:55.440><c> right</c>

00:04:55.830 --> 00:04:55.840 align:start position:0%
let's say this was our input value right
 

00:04:55.840 --> 00:04:57.430 align:start position:0%
let's say this was our input value right
and<00:04:56.000><c> let's</c><00:04:56.160><c> say</c><00:04:56.400><c> we</c><00:04:56.560><c> reversed</c><00:04:57.120><c> it</c><00:04:57.199><c> if</c><00:04:57.360><c> we</c>

00:04:57.430 --> 00:04:57.440 align:start position:0%
and let's say we reversed it if we
 

00:04:57.440 --> 00:04:59.590 align:start position:0%
and let's say we reversed it if we
reversed<00:04:57.919><c> it</c><00:04:58.080><c> this</c><00:04:58.400><c> is</c><00:04:58.560><c> the</c><00:04:58.720><c> reversed</c><00:04:59.199><c> value</c>

00:04:59.590 --> 00:04:59.600 align:start position:0%
reversed it this is the reversed value
 

00:04:59.600 --> 00:05:01.590 align:start position:0%
reversed it this is the reversed value
up<00:04:59.759><c> above</c><00:05:00.080><c> right</c><00:05:00.320><c> this</c><00:05:00.479><c> is</c><00:05:00.560><c> what</c><00:05:00.720><c> we</c><00:05:00.880><c> would</c><00:05:01.199><c> get</c>

00:05:01.590 --> 00:05:01.600 align:start position:0%
up above right this is what we would get
 

00:05:01.600 --> 00:05:03.510 align:start position:0%
up above right this is what we would get
but<00:05:01.759><c> what</c><00:05:02.000><c> we</c><00:05:02.240><c> know</c><00:05:02.560><c> is</c><00:05:02.639><c> this</c><00:05:02.960><c> integer</c><00:05:03.360><c> is</c>

00:05:03.510 --> 00:05:03.520 align:start position:0%
but what we know is this integer is
 

00:05:03.520 --> 00:05:04.710 align:start position:0%
but what we know is this integer is
actually<00:05:03.919><c> too</c>

00:05:04.710 --> 00:05:04.720 align:start position:0%
actually too
 

00:05:04.720 --> 00:05:07.350 align:start position:0%
actually too
large<00:05:05.280><c> this</c><00:05:05.680><c> integer</c><00:05:06.320><c> is</c><00:05:06.639><c> greater</c><00:05:07.039><c> than</c><00:05:07.199><c> the</c>

00:05:07.350 --> 00:05:07.360 align:start position:0%
large this integer is greater than the
 

00:05:07.360 --> 00:05:09.990 align:start position:0%
large this integer is greater than the
one<00:05:07.919><c> up</c><00:05:08.160><c> above</c><00:05:08.639><c> so</c><00:05:08.800><c> this</c><00:05:09.039><c> would</c><00:05:09.199><c> not</c><00:05:09.440><c> even</c><00:05:09.680><c> fit</c>

00:05:09.990 --> 00:05:10.000 align:start position:0%
one up above so this would not even fit
 

00:05:10.000 --> 00:05:11.749 align:start position:0%
one up above so this would not even fit
into<00:05:10.240><c> memory</c><00:05:10.560><c> so</c><00:05:10.720><c> we</c><00:05:10.880><c> would</c><00:05:11.039><c> need</c><00:05:11.199><c> to</c><00:05:11.360><c> return</c>

00:05:11.749 --> 00:05:11.759 align:start position:0%
into memory so we would need to return
 

00:05:11.759 --> 00:05:14.870 align:start position:0%
into memory so we would need to return
zero<00:05:12.240><c> now</c><00:05:12.560><c> how</c><00:05:12.800><c> could</c><00:05:13.039><c> we</c><00:05:13.280><c> detect</c><00:05:14.080><c> that</c><00:05:14.320><c> this</c>

00:05:14.870 --> 00:05:14.880 align:start position:0%
zero now how could we detect that this
 

00:05:14.880 --> 00:05:18.070 align:start position:0%
zero now how could we detect that this
integer<00:05:15.440><c> overflows</c><00:05:16.479><c> without</c><00:05:17.440><c> actually</c>

00:05:18.070 --> 00:05:18.080 align:start position:0%
integer overflows without actually
 

00:05:18.080 --> 00:05:19.990 align:start position:0%
integer overflows without actually
calculating<00:05:18.720><c> it</c><00:05:18.800><c> right</c><00:05:18.960><c> because</c><00:05:19.360><c> we</c><00:05:19.600><c> can't</c>

00:05:19.990 --> 00:05:20.000 align:start position:0%
calculating it right because we can't
 

00:05:20.000 --> 00:05:22.469 align:start position:0%
calculating it right because we can't
have<00:05:20.320><c> this</c><00:05:20.560><c> digit</c><00:05:20.960><c> this</c><00:05:21.120><c> digit</c><00:05:21.680><c> is</c><00:05:21.840><c> impossible</c>

00:05:22.469 --> 00:05:22.479 align:start position:0%
have this digit this digit is impossible
 

00:05:22.479 --> 00:05:24.390 align:start position:0%
have this digit this digit is impossible
to<00:05:22.639><c> have</c><00:05:22.880><c> in</c><00:05:23.039><c> 32</c><00:05:23.600><c> bits</c><00:05:23.840><c> so</c><00:05:23.919><c> how</c><00:05:24.080><c> would</c><00:05:24.240><c> we</c>

00:05:24.390 --> 00:05:24.400 align:start position:0%
to have in 32 bits so how would we
 

00:05:24.400 --> 00:05:27.029 align:start position:0%
to have in 32 bits so how would we
detect<00:05:24.880><c> it</c><00:05:25.120><c> without</c><00:05:25.520><c> actually</c><00:05:26.080><c> building</c><00:05:26.800><c> this</c>

00:05:27.029 --> 00:05:27.039 align:start position:0%
detect it without actually building this
 

00:05:27.039 --> 00:05:29.029 align:start position:0%
detect it without actually building this
number<00:05:27.440><c> without</c><00:05:27.759><c> actually</c><00:05:28.080><c> taking</c><00:05:28.639><c> this</c><00:05:28.960><c> and</c>

00:05:29.029 --> 00:05:29.039 align:start position:0%
number without actually taking this and
 

00:05:29.039 --> 00:05:30.870 align:start position:0%
number without actually taking this and
reversing<00:05:29.600><c> it</c><00:05:29.759><c> all</c><00:05:29.919><c> the</c><00:05:30.000><c> way</c><00:05:30.160><c> to</c><00:05:30.240><c> here</c><00:05:30.560><c> well</c>

00:05:30.870 --> 00:05:30.880 align:start position:0%
reversing it all the way to here well
 

00:05:30.880 --> 00:05:32.310 align:start position:0%
reversing it all the way to here well
that's<00:05:31.120><c> the</c><00:05:31.360><c> trick</c><00:05:31.680><c> that</c><00:05:31.840><c> i'm</c><00:05:31.919><c> going</c><00:05:32.000><c> to</c><00:05:32.160><c> show</c>

00:05:32.310 --> 00:05:32.320 align:start position:0%
that's the trick that i'm going to show
 

00:05:32.320 --> 00:05:35.189 align:start position:0%
that's the trick that i'm going to show
you<00:05:32.720><c> we</c><00:05:33.039><c> actually</c><00:05:33.840><c> are</c><00:05:34.080><c> are</c><00:05:34.240><c> going</c><00:05:34.320><c> to</c><00:05:34.479><c> reverse</c>

00:05:35.189 --> 00:05:35.199 align:start position:0%
you we actually are are going to reverse
 

00:05:35.199 --> 00:05:38.310 align:start position:0%
you we actually are are going to reverse
this<00:05:35.520><c> input</c><00:05:36.160><c> digit</c><00:05:36.560><c> by</c><00:05:36.800><c> digit</c><00:05:37.280><c> except</c><00:05:37.759><c> for</c><00:05:38.000><c> the</c>

00:05:38.310 --> 00:05:38.320 align:start position:0%
this input digit by digit except for the
 

00:05:38.320 --> 00:05:40.390 align:start position:0%
this input digit by digit except for the
last<00:05:38.639><c> digit</c><00:05:38.960><c> we're</c><00:05:39.199><c> not</c><00:05:39.360><c> going</c><00:05:39.520><c> to</c><00:05:39.600><c> reverse</c>

00:05:40.390 --> 00:05:40.400 align:start position:0%
last digit we're not going to reverse
 

00:05:40.400 --> 00:05:42.230 align:start position:0%
last digit we're not going to reverse
we're<00:05:40.560><c> not</c><00:05:40.720><c> going</c><00:05:40.800><c> to</c><00:05:40.960><c> add</c><00:05:41.199><c> the</c><00:05:41.360><c> last</c><00:05:41.759><c> digit</c>

00:05:42.230 --> 00:05:42.240 align:start position:0%
we're not going to add the last digit
 

00:05:42.240 --> 00:05:44.310 align:start position:0%
we're not going to add the last digit
yet<00:05:42.560><c> what</c><00:05:42.720><c> we're</c><00:05:42.960><c> going</c><00:05:43.120><c> to</c><00:05:43.280><c> do</c><00:05:43.600><c> is</c><00:05:43.840><c> once</c><00:05:44.080><c> we've</c>

00:05:44.310 --> 00:05:44.320 align:start position:0%
yet what we're going to do is once we've
 

00:05:44.320 --> 00:05:47.029 align:start position:0%
yet what we're going to do is once we've
reversed<00:05:44.880><c> this</c><00:05:45.600><c> right</c><00:05:45.759><c> we</c><00:05:45.919><c> have</c><00:05:46.160><c> all</c><00:05:46.639><c> but</c><00:05:46.800><c> the</c>

00:05:47.029 --> 00:05:47.039 align:start position:0%
reversed this right we have all but the
 

00:05:47.039 --> 00:05:50.230 align:start position:0%
reversed this right we have all but the
last<00:05:47.520><c> digit</c><00:05:48.160><c> we're</c><00:05:48.320><c> going</c><00:05:48.479><c> to</c><00:05:48.800><c> check</c><00:05:49.360><c> okay</c><00:05:49.840><c> is</c>

00:05:50.230 --> 00:05:50.240 align:start position:0%
last digit we're going to check okay is
 

00:05:50.240 --> 00:05:54.550 align:start position:0%
last digit we're going to check okay is
this<00:05:50.880><c> value</c><00:05:52.000><c> exactly</c><00:05:53.039><c> equal</c><00:05:53.759><c> to</c>

00:05:54.550 --> 00:05:54.560 align:start position:0%
this value exactly equal to
 

00:05:54.560 --> 00:05:57.350 align:start position:0%
this value exactly equal to
this<00:05:55.120><c> value</c><00:05:55.520><c> basically</c><00:05:56.160><c> all</c><00:05:56.639><c> everything</c><00:05:57.199><c> from</c>

00:05:57.350 --> 00:05:57.360 align:start position:0%
this value basically all everything from
 

00:05:57.360 --> 00:06:00.150 align:start position:0%
this value basically all everything from
the<00:05:57.600><c> max</c><00:05:57.919><c> digit</c><00:05:58.400><c> except</c><00:05:58.960><c> the</c><00:05:59.280><c> last</c><00:05:59.600><c> digit</c><00:06:00.000><c> how</c>

00:06:00.150 --> 00:06:00.160 align:start position:0%
the max digit except the last digit how
 

00:06:00.160 --> 00:06:01.830 align:start position:0%
the max digit except the last digit how
are<00:06:00.319><c> we</c><00:06:00.479><c> going</c><00:06:00.560><c> to</c><00:06:00.639><c> actually</c><00:06:01.120><c> get</c><00:06:01.440><c> this</c>

00:06:01.830 --> 00:06:01.840 align:start position:0%
are we going to actually get this
 

00:06:01.840 --> 00:06:03.749 align:start position:0%
are we going to actually get this
basically<00:06:02.240><c> we</c><00:06:02.319><c> can</c><00:06:02.479><c> take</c><00:06:02.720><c> the</c><00:06:02.880><c> max</c><00:06:03.280><c> digit</c><00:06:03.680><c> and</c>

00:06:03.749 --> 00:06:03.759 align:start position:0%
basically we can take the max digit and
 

00:06:03.759 --> 00:06:05.670 align:start position:0%
basically we can take the max digit and
divide<00:06:04.240><c> it</c><00:06:04.319><c> by</c><00:06:04.479><c> 10</c><00:06:04.720><c> right</c><00:06:04.880><c> because</c><00:06:05.199><c> dividing</c>

00:06:05.670 --> 00:06:05.680 align:start position:0%
divide it by 10 right because dividing
 

00:06:05.680 --> 00:06:08.150 align:start position:0%
divide it by 10 right because dividing
by<00:06:06.000><c> 10</c><00:06:06.400><c> we'll</c><00:06:06.639><c> take</c><00:06:06.880><c> the</c><00:06:07.120><c> ones</c><00:06:07.440><c> place</c><00:06:07.759><c> digit</c>

00:06:08.150 --> 00:06:08.160 align:start position:0%
by 10 we'll take the ones place digit
 

00:06:08.160 --> 00:06:10.790 align:start position:0%
by 10 we'll take the ones place digit
and<00:06:08.319><c> chop</c><00:06:08.560><c> it</c><00:06:08.720><c> off</c><00:06:08.880><c> right</c><00:06:09.120><c> so</c><00:06:09.440><c> if</c><00:06:09.520><c> we</c><00:06:09.759><c> do</c><00:06:10.000><c> that</c>

00:06:10.790 --> 00:06:10.800 align:start position:0%
and chop it off right so if we do that
 

00:06:10.800 --> 00:06:13.029 align:start position:0%
and chop it off right so if we do that
like<00:06:11.039><c> this</c><00:06:11.440><c> we're</c><00:06:11.600><c> going</c><00:06:11.680><c> to</c><00:06:11.840><c> check</c><00:06:12.160><c> okay</c><00:06:12.479><c> is</c>

00:06:13.029 --> 00:06:13.039 align:start position:0%
like this we're going to check okay is
 

00:06:13.039 --> 00:06:15.990 align:start position:0%
like this we're going to check okay is
is<00:06:13.360><c> our</c><00:06:13.520><c> reversed</c><00:06:14.160><c> integer</c><00:06:14.800><c> equal</c><00:06:15.440><c> to</c><00:06:15.759><c> this</c>

00:06:15.990 --> 00:06:16.000 align:start position:0%
is our reversed integer equal to this
 

00:06:16.000 --> 00:06:18.790 align:start position:0%
is our reversed integer equal to this
one<00:06:16.479><c> yes</c><00:06:16.960><c> it</c><00:06:17.199><c> is</c><00:06:17.520><c> right</c><00:06:17.759><c> it's</c><00:06:17.919><c> exactly</c><00:06:18.479><c> equal</c>

00:06:18.790 --> 00:06:18.800 align:start position:0%
one yes it is right it's exactly equal
 

00:06:18.800 --> 00:06:20.629 align:start position:0%
one yes it is right it's exactly equal
in<00:06:18.880><c> this</c><00:06:19.120><c> case</c><00:06:19.520><c> okay</c><00:06:19.919><c> and</c><00:06:20.080><c> then</c><00:06:20.240><c> the</c><00:06:20.400><c> next</c>

00:06:20.629 --> 00:06:20.639 align:start position:0%
in this case okay and then the next
 

00:06:20.639 --> 00:06:22.230 align:start position:0%
in this case okay and then the next
question<00:06:20.960><c> we're</c><00:06:21.120><c> gonna</c><00:06:21.360><c> ask</c><00:06:21.600><c> ourselves</c><00:06:22.080><c> is</c>

00:06:22.230 --> 00:06:22.240 align:start position:0%
question we're gonna ask ourselves is
 

00:06:22.240 --> 00:06:24.070 align:start position:0%
question we're gonna ask ourselves is
okay<00:06:22.639><c> we're</c><00:06:22.880><c> trying</c><00:06:23.120><c> to</c><00:06:23.360><c> also</c><00:06:23.680><c> we're</c><00:06:23.840><c> now</c>

00:06:24.070 --> 00:06:24.080 align:start position:0%
okay we're trying to also we're now
 

00:06:24.080 --> 00:06:26.710 align:start position:0%
okay we're trying to also we're now
trying<00:06:24.319><c> to</c><00:06:24.560><c> add</c><00:06:24.960><c> another</c><00:06:25.600><c> digit</c><00:06:26.160><c> we</c><00:06:26.319><c> add</c><00:06:26.560><c> the</c>

00:06:26.710 --> 00:06:26.720 align:start position:0%
trying to add another digit we add the
 

00:06:26.720 --> 00:06:29.189 align:start position:0%
trying to add another digit we add the
ones<00:06:27.120><c> place</c><00:06:27.360><c> digit</c><00:06:27.919><c> okay</c><00:06:28.400><c> so</c><00:06:28.560><c> how</c><00:06:28.720><c> do</c><00:06:28.880><c> we</c><00:06:28.960><c> know</c>

00:06:29.189 --> 00:06:29.199 align:start position:0%
ones place digit okay so how do we know
 

00:06:29.199 --> 00:06:31.029 align:start position:0%
ones place digit okay so how do we know
then<00:06:29.440><c> if</c><00:06:29.919><c> if</c><00:06:30.000><c> the</c><00:06:30.160><c> resulting</c><00:06:30.639><c> integer</c><00:06:30.960><c> is</c>

00:06:31.029 --> 00:06:31.039 align:start position:0%
then if if the resulting integer is
 

00:06:31.039 --> 00:06:33.350 align:start position:0%
then if if the resulting integer is
going<00:06:31.120><c> to</c><00:06:31.199><c> be</c><00:06:31.440><c> greater</c><00:06:32.160><c> than</c><00:06:32.400><c> this</c><00:06:32.720><c> max</c>

00:06:33.350 --> 00:06:33.360 align:start position:0%
going to be greater than this max
 

00:06:33.360 --> 00:06:34.950 align:start position:0%
going to be greater than this max
integer<00:06:33.759><c> up</c><00:06:33.919><c> above</c><00:06:34.240><c> how</c><00:06:34.400><c> do</c><00:06:34.560><c> we</c><00:06:34.639><c> know</c><00:06:34.800><c> that</c>

00:06:34.950 --> 00:06:34.960 align:start position:0%
integer up above how do we know that
 

00:06:34.960 --> 00:06:36.790 align:start position:0%
integer up above how do we know that
well<00:06:35.360><c> all</c><00:06:35.600><c> we</c><00:06:35.680><c> have</c><00:06:35.840><c> to</c><00:06:35.919><c> do</c><00:06:36.240><c> since</c><00:06:36.479><c> we</c><00:06:36.639><c> know</c>

00:06:36.790 --> 00:06:36.800 align:start position:0%
well all we have to do since we know
 

00:06:36.800 --> 00:06:39.590 align:start position:0%
well all we have to do since we know
that<00:06:37.039><c> this</c><00:06:37.280><c> is</c><00:06:37.520><c> equal</c><00:06:38.080><c> to</c><00:06:38.479><c> this</c><00:06:39.039><c> now</c><00:06:39.280><c> all</c><00:06:39.520><c> we</c>

00:06:39.590 --> 00:06:39.600 align:start position:0%
that this is equal to this now all we
 

00:06:39.600 --> 00:06:41.430 align:start position:0%
that this is equal to this now all we
have<00:06:39.680><c> to</c><00:06:39.759><c> do</c><00:06:39.919><c> is</c><00:06:40.000><c> compare</c><00:06:40.400><c> the</c><00:06:40.560><c> ones</c><00:06:40.800><c> place</c><00:06:41.120><c> is</c>

00:06:41.430 --> 00:06:41.440 align:start position:0%
have to do is compare the ones place is
 

00:06:41.440 --> 00:06:42.230 align:start position:0%
have to do is compare the ones place is
eight

00:06:42.230 --> 00:06:42.240 align:start position:0%
eight
 

00:06:42.240 --> 00:06:43.830 align:start position:0%
eight
greater<00:06:43.039><c> than</c>

00:06:43.830 --> 00:06:43.840 align:start position:0%
greater than
 

00:06:43.840 --> 00:06:45.590 align:start position:0%
greater than
this<00:06:44.080><c> integer</c><00:06:44.479><c> we</c><00:06:44.639><c> have</c><00:06:44.800><c> over</c><00:06:44.960><c> here</c><00:06:45.120><c> which</c><00:06:45.360><c> is</c>

00:06:45.590 --> 00:06:45.600 align:start position:0%
this integer we have over here which is
 

00:06:45.600 --> 00:06:48.550 align:start position:0%
this integer we have over here which is
seven<00:06:46.319><c> in</c><00:06:46.479><c> this</c><00:06:46.800><c> case</c><00:06:47.280><c> it</c><00:06:47.600><c> is</c><00:06:47.919><c> greater</c><00:06:48.240><c> than</c><00:06:48.479><c> it</c>

00:06:48.550 --> 00:06:48.560 align:start position:0%
seven in this case it is greater than it
 

00:06:48.560 --> 00:06:50.230 align:start position:0%
seven in this case it is greater than it
right<00:06:48.800><c> so</c><00:06:49.039><c> then</c><00:06:49.440><c> we're</c><00:06:49.599><c> not</c><00:06:49.840><c> actually</c><00:06:50.080><c> going</c>

00:06:50.230 --> 00:06:50.240 align:start position:0%
right so then we're not actually going
 

00:06:50.240 --> 00:06:52.230 align:start position:0%
right so then we're not actually going
to<00:06:50.319><c> take</c><00:06:50.560><c> this</c><00:06:50.800><c> eight</c><00:06:51.039><c> digit</c><00:06:51.360><c> and</c><00:06:51.599><c> add</c><00:06:51.840><c> it</c><00:06:52.000><c> to</c>

00:06:52.230 --> 00:06:52.240 align:start position:0%
to take this eight digit and add it to
 

00:06:52.240 --> 00:06:54.070 align:start position:0%
to take this eight digit and add it to
here<00:06:52.720><c> add</c><00:06:52.880><c> it</c><00:06:52.960><c> to</c><00:06:53.120><c> this</c><00:06:53.280><c> entire</c><00:06:53.599><c> integer</c><00:06:53.919><c> we're</c>

00:06:54.070 --> 00:06:54.080 align:start position:0%
here add it to this entire integer we're
 

00:06:54.080 --> 00:06:55.510 align:start position:0%
here add it to this entire integer we're
actually<00:06:54.319><c> going</c><00:06:54.400><c> to</c><00:06:54.479><c> return</c><00:06:55.039><c> zero</c>

00:06:55.510 --> 00:06:55.520 align:start position:0%
actually going to return zero
 

00:06:55.520 --> 00:06:58.469 align:start position:0%
actually going to return zero
immediately<00:06:56.319><c> so</c><00:06:56.479><c> that's</c><00:06:56.800><c> one</c><00:06:57.280><c> trick</c><00:06:58.000><c> that</c>

00:06:58.469 --> 00:06:58.479 align:start position:0%
immediately so that's one trick that
 

00:06:58.479 --> 00:07:00.309 align:start position:0%
immediately so that's one trick that
we're<00:06:58.639><c> gonna</c><00:06:58.960><c> basically</c><00:06:59.360><c> to</c><00:06:59.759><c> basically</c><00:07:00.160><c> to</c>

00:07:00.309 --> 00:07:00.319 align:start position:0%
we're gonna basically to basically to
 

00:07:00.319 --> 00:07:02.629 align:start position:0%
we're gonna basically to basically to
detect<00:07:00.800><c> if</c><00:07:00.960><c> we</c><00:07:01.199><c> go</c><00:07:01.440><c> out</c><00:07:01.599><c> of</c><00:07:01.680><c> bounds</c><00:07:02.319><c> and</c>

00:07:02.629 --> 00:07:02.639 align:start position:0%
detect if we go out of bounds and
 

00:07:02.639 --> 00:07:04.070 align:start position:0%
detect if we go out of bounds and
basically<00:07:03.039><c> i</c><00:07:03.120><c> just</c><00:07:03.280><c> showed</c><00:07:03.440><c> you</c><00:07:03.599><c> the</c><00:07:03.759><c> example</c>

00:07:04.070 --> 00:07:04.080 align:start position:0%
basically i just showed you the example
 

00:07:04.080 --> 00:07:05.430 align:start position:0%
basically i just showed you the example
of<00:07:04.240><c> what</c><00:07:04.319><c> we</c><00:07:04.479><c> would</c><00:07:04.560><c> do</c><00:07:04.720><c> for</c><00:07:04.960><c> positive</c>

00:07:05.430 --> 00:07:05.440 align:start position:0%
of what we would do for positive
 

00:07:05.440 --> 00:07:07.430 align:start position:0%
of what we would do for positive
integers<00:07:06.000><c> the</c><00:07:06.160><c> exact</c><00:07:06.560><c> same</c><00:07:06.960><c> is</c><00:07:07.039><c> basically</c>

00:07:07.430 --> 00:07:07.440 align:start position:0%
integers the exact same is basically
 

00:07:07.440 --> 00:07:09.189 align:start position:0%
integers the exact same is basically
going<00:07:07.520><c> to</c><00:07:07.599><c> be</c><00:07:07.759><c> true</c><00:07:08.000><c> for</c><00:07:08.240><c> negative</c><00:07:08.639><c> integers</c>

00:07:09.189 --> 00:07:09.199 align:start position:0%
going to be true for negative integers
 

00:07:09.199 --> 00:07:11.990 align:start position:0%
going to be true for negative integers
except<00:07:09.599><c> instead</c><00:07:09.919><c> of</c><00:07:10.080><c> checking</c><00:07:10.639><c> if</c><00:07:11.039><c> this</c><00:07:11.520><c> digit</c>

00:07:11.990 --> 00:07:12.000 align:start position:0%
except instead of checking if this digit
 

00:07:12.000 --> 00:07:14.150 align:start position:0%
except instead of checking if this digit
is<00:07:12.479><c> greater</c><00:07:12.880><c> than</c><00:07:13.120><c> the</c><00:07:13.199><c> ones</c><00:07:13.599><c> place</c><00:07:13.840><c> of</c><00:07:14.000><c> the</c>

00:07:14.150 --> 00:07:14.160 align:start position:0%
is greater than the ones place of the
 

00:07:14.160 --> 00:07:16.070 align:start position:0%
is greater than the ones place of the
max<00:07:14.560><c> negative</c><00:07:14.960><c> integer</c><00:07:15.440><c> or</c><00:07:15.520><c> the</c><00:07:15.680><c> minimum</c>

00:07:16.070 --> 00:07:16.080 align:start position:0%
max negative integer or the minimum
 

00:07:16.080 --> 00:07:17.189 align:start position:0%
max negative integer or the minimum
negative<00:07:16.479><c> integer</c><00:07:16.800><c> we're</c><00:07:16.960><c> not</c><00:07:17.039><c> going</c><00:07:17.120><c> to</c>

00:07:17.189 --> 00:07:17.199 align:start position:0%
negative integer we're not going to
 

00:07:17.199 --> 00:07:18.230 align:start position:0%
negative integer we're not going to
check<00:07:17.360><c> if</c><00:07:17.520><c> it's</c><00:07:17.680><c> greater</c><00:07:17.919><c> we're</c><00:07:18.080><c> going</c><00:07:18.160><c> to</c>

00:07:18.230 --> 00:07:18.240 align:start position:0%
check if it's greater we're going to
 

00:07:18.240 --> 00:07:20.309 align:start position:0%
check if it's greater we're going to
check<00:07:18.479><c> if</c><00:07:18.639><c> it's</c><00:07:19.120><c> less</c><00:07:19.440><c> than</c><00:07:19.840><c> because</c><00:07:20.080><c> this</c><00:07:20.240><c> is</c>

00:07:20.309 --> 00:07:20.319 align:start position:0%
check if it's less than because this is
 

00:07:20.319 --> 00:07:22.390 align:start position:0%
check if it's less than because this is
a<00:07:20.479><c> negative</c><00:07:20.880><c> number</c><00:07:21.199><c> right</c><00:07:21.680><c> so</c><00:07:21.840><c> that's</c><00:07:22.160><c> one</c>

00:07:22.390 --> 00:07:22.400 align:start position:0%
a negative number right so that's one
 

00:07:22.400 --> 00:07:24.870 align:start position:0%
a negative number right so that's one
way<00:07:22.639><c> we</c><00:07:22.800><c> could</c><00:07:22.960><c> detect</c><00:07:23.440><c> if</c><00:07:23.599><c> we</c><00:07:23.840><c> did</c><00:07:24.160><c> go</c><00:07:24.560><c> out</c><00:07:24.720><c> of</c>

00:07:24.870 --> 00:07:24.880 align:start position:0%
way we could detect if we did go out of
 

00:07:24.880 --> 00:07:27.270 align:start position:0%
way we could detect if we did go out of
bounds<00:07:25.599><c> another</c><00:07:26.080><c> way</c><00:07:26.240><c> we</c><00:07:26.400><c> can</c><00:07:26.560><c> actually</c><00:07:26.960><c> check</c>

00:07:27.270 --> 00:07:27.280 align:start position:0%
bounds another way we can actually check
 

00:07:27.280 --> 00:07:28.070 align:start position:0%
bounds another way we can actually check
is

00:07:28.070 --> 00:07:28.080 align:start position:0%
is
 

00:07:28.080 --> 00:07:30.070 align:start position:0%
is
taking<00:07:28.400><c> away</c><00:07:28.720><c> this</c><00:07:29.039><c> final</c><00:07:29.360><c> digit</c><00:07:29.680><c> right</c><00:07:29.840><c> this</c>

00:07:30.070 --> 00:07:30.080 align:start position:0%
taking away this final digit right this
 

00:07:30.080 --> 00:07:32.070 align:start position:0%
taking away this final digit right this
one's<00:07:30.319><c> place</c><00:07:30.560><c> digit</c><00:07:30.880><c> and</c><00:07:31.039><c> taking</c><00:07:31.360><c> away</c><00:07:31.840><c> this</c>

00:07:32.070 --> 00:07:32.080 align:start position:0%
one's place digit and taking away this
 

00:07:32.080 --> 00:07:34.070 align:start position:0%
one's place digit and taking away this
one's<00:07:32.400><c> place</c><00:07:32.639><c> digit</c><00:07:32.960><c> again</c><00:07:33.440><c> and</c><00:07:33.599><c> we</c><00:07:33.759><c> do</c><00:07:33.919><c> know</c>

00:07:34.070 --> 00:07:34.080 align:start position:0%
one's place digit again and we do know
 

00:07:34.080 --> 00:07:35.909 align:start position:0%
one's place digit again and we do know
how<00:07:34.240><c> to</c><00:07:34.319><c> do</c><00:07:34.479><c> that</c><00:07:34.639><c> in</c><00:07:34.720><c> the</c><00:07:34.880><c> code</c><00:07:35.360><c> so</c><00:07:35.599><c> i</c><00:07:35.680><c> won't</c>

00:07:35.909 --> 00:07:35.919 align:start position:0%
how to do that in the code so i won't
 

00:07:35.919 --> 00:07:38.309 align:start position:0%
how to do that in the code so i won't
explain<00:07:36.319><c> it</c><00:07:36.560><c> but</c><00:07:37.039><c> if</c><00:07:37.199><c> we</c><00:07:37.360><c> were</c><00:07:37.520><c> comparing</c><00:07:38.080><c> all</c>

00:07:38.309 --> 00:07:38.319 align:start position:0%
explain it but if we were comparing all
 

00:07:38.319 --> 00:07:40.870 align:start position:0%
explain it but if we were comparing all
of<00:07:38.560><c> these</c><00:07:39.199><c> digits</c><00:07:39.759><c> right</c><00:07:40.240><c> and</c><00:07:40.639><c> we</c><00:07:40.800><c> were</c>

00:07:40.870 --> 00:07:40.880 align:start position:0%
of these digits right and we were
 

00:07:40.880 --> 00:07:42.629 align:start position:0%
of these digits right and we were
comparing<00:07:41.360><c> all</c><00:07:41.520><c> of</c><00:07:41.599><c> these</c><00:07:41.840><c> digits</c><00:07:42.319><c> and</c><00:07:42.479><c> let's</c>

00:07:42.629 --> 00:07:42.639 align:start position:0%
comparing all of these digits and let's
 

00:07:42.639 --> 00:07:45.510 align:start position:0%
comparing all of these digits and let's
say<00:07:42.800><c> we</c><00:07:43.120><c> knew</c><00:07:43.360><c> that</c><00:07:43.599><c> yes</c><00:07:43.919><c> we</c><00:07:44.160><c> are</c><00:07:44.400><c> about</c><00:07:44.879><c> to</c><00:07:45.120><c> add</c>

00:07:45.510 --> 00:07:45.520 align:start position:0%
say we knew that yes we are about to add
 

00:07:45.520 --> 00:07:47.589 align:start position:0%
say we knew that yes we are about to add
another<00:07:46.000><c> digit</c><00:07:46.639><c> we</c><00:07:46.800><c> know</c><00:07:46.960><c> for</c><00:07:47.120><c> sure</c><00:07:47.360><c> we're</c>

00:07:47.589 --> 00:07:47.599 align:start position:0%
another digit we know for sure we're
 

00:07:47.599 --> 00:07:49.510 align:start position:0%
another digit we know for sure we're
going<00:07:47.840><c> to</c><00:07:48.000><c> add</c><00:07:48.240><c> another</c><00:07:48.639><c> digit</c><00:07:49.199><c> then</c><00:07:49.360><c> what</c>

00:07:49.510 --> 00:07:49.520 align:start position:0%
going to add another digit then what
 

00:07:49.520 --> 00:07:52.309 align:start position:0%
going to add another digit then what
we're<00:07:49.680><c> going</c><00:07:49.840><c> to</c><00:07:50.000><c> ask</c><00:07:50.319><c> is</c><00:07:50.720><c> or</c><00:07:51.199><c> is</c><00:07:51.440><c> this</c><00:07:51.840><c> portion</c>

00:07:52.309 --> 00:07:52.319 align:start position:0%
we're going to ask is or is this portion
 

00:07:52.319 --> 00:07:55.749 align:start position:0%
we're going to ask is or is this portion
down<00:07:52.560><c> here</c><00:07:52.800><c> that</c><00:07:52.960><c> i</c><00:07:53.120><c> have</c><00:07:53.360><c> squared</c><00:07:53.759><c> up</c><00:07:54.400><c> is</c><00:07:54.800><c> this</c>

00:07:55.749 --> 00:07:55.759 align:start position:0%
down here that i have squared up is this
 

00:07:55.759 --> 00:07:58.869 align:start position:0%
down here that i have squared up is this
greater<00:07:56.720><c> than</c><00:07:57.199><c> this</c><00:07:57.599><c> over</c><00:07:58.000><c> here</c><00:07:58.400><c> right</c><00:07:58.639><c> for</c>

00:07:58.869 --> 00:07:58.879 align:start position:0%
greater than this over here right for
 

00:07:58.879 --> 00:08:01.589 align:start position:0%
greater than this over here right for
example<00:07:59.440><c> over</c><00:07:59.599><c> here</c><00:07:59.759><c> that</c><00:07:59.919><c> we</c><00:08:00.080><c> have</c><00:08:00.160><c> a</c><00:08:00.240><c> value</c>

00:08:01.589 --> 00:08:01.599 align:start position:0%
example over here that we have a value
 

00:08:01.599 --> 00:08:04.230 align:start position:0%
example over here that we have a value
we<00:08:01.759><c> have</c><00:08:01.840><c> a</c><00:08:01.919><c> value</c><00:08:02.400><c> 2</c><00:08:02.960><c> followed</c><00:08:03.360><c> by</c><00:08:03.919><c> 8</c>

00:08:04.230 --> 00:08:04.240 align:start position:0%
we have a value 2 followed by 8
 

00:08:04.240 --> 00:08:07.029 align:start position:0%
we have a value 2 followed by 8
different<00:08:04.639><c> digits</c><00:08:05.120><c> right</c><00:08:05.680><c> so</c><00:08:05.919><c> suppose</c><00:08:06.800><c> this</c>

00:08:07.029 --> 00:08:07.039 align:start position:0%
different digits right so suppose this
 

00:08:07.039 --> 00:08:09.029 align:start position:0%
different digits right so suppose this
value<00:08:07.520><c> over</c><00:08:07.759><c> here</c><00:08:08.000><c> that</c><00:08:08.160><c> i</c><00:08:08.240><c> have</c><00:08:08.560><c> written</c><00:08:08.879><c> over</c>

00:08:09.029 --> 00:08:09.039 align:start position:0%
value over here that i have written over
 

00:08:09.039 --> 00:08:11.830 align:start position:0%
value over here that i have written over
here<00:08:09.280><c> it</c><00:08:09.440><c> wasn't</c><00:08:09.919><c> 2</c><00:08:10.400><c> followed</c><00:08:10.720><c> by</c><00:08:11.039><c> 8</c><00:08:11.280><c> digits</c><00:08:11.759><c> it</c>

00:08:11.830 --> 00:08:11.840 align:start position:0%
here it wasn't 2 followed by 8 digits it
 

00:08:11.840 --> 00:08:13.830 align:start position:0%
here it wasn't 2 followed by 8 digits it
was<00:08:12.080><c> a</c><00:08:12.319><c> 3</c><00:08:12.960><c> 0</c>

00:08:13.830 --> 00:08:13.840 align:start position:0%
was a 3 0
 

00:08:13.840 --> 00:08:18.710 align:start position:0%
was a 3 0
0<00:08:14.319><c> 0</c><00:08:14.879><c> 0</c><00:08:15.520><c> 0</c><00:08:16.319><c> followed</c><00:08:16.639><c> by</c><00:08:16.879><c> 8</c><00:08:17.120><c> 0's</c><00:08:17.599><c> right</c><00:08:18.319><c> then</c><00:08:18.560><c> we</c>

00:08:18.710 --> 00:08:18.720 align:start position:0%
0 0 0 0 followed by 8 0's right then we
 

00:08:18.720 --> 00:08:21.909 align:start position:0%
0 0 0 0 followed by 8 0's right then we
know<00:08:18.879><c> for</c><00:08:19.039><c> sure</c><00:08:19.360><c> this</c><00:08:19.840><c> is</c><00:08:20.080><c> actually</c><00:08:20.879><c> larger</c>

00:08:21.909 --> 00:08:21.919 align:start position:0%
know for sure this is actually larger
 

00:08:21.919 --> 00:08:24.550 align:start position:0%
know for sure this is actually larger
than<00:08:22.240><c> this</c><00:08:22.879><c> integer</c><00:08:23.280><c> i</c><00:08:23.360><c> have</c><00:08:23.599><c> up</c><00:08:23.759><c> above</c><00:08:24.319><c> since</c>

00:08:24.550 --> 00:08:24.560 align:start position:0%
than this integer i have up above since
 

00:08:24.560 --> 00:08:26.309 align:start position:0%
than this integer i have up above since
we<00:08:24.720><c> know</c><00:08:24.960><c> this</c><00:08:25.120><c> is</c><00:08:25.360><c> larger</c><00:08:25.759><c> and</c><00:08:26.000><c> let's</c><00:08:26.160><c> say</c>

00:08:26.309 --> 00:08:26.319 align:start position:0%
we know this is larger and let's say
 

00:08:26.319 --> 00:08:28.230 align:start position:0%
we know this is larger and let's say
we're<00:08:26.479><c> adding</c><00:08:26.800><c> another</c><00:08:27.199><c> zero</c><00:08:27.599><c> to</c><00:08:27.759><c> it</c><00:08:27.919><c> so</c><00:08:28.080><c> now</c>

00:08:28.230 --> 00:08:28.240 align:start position:0%
we're adding another zero to it so now
 

00:08:28.240 --> 00:08:30.869 align:start position:0%
we're adding another zero to it so now
we<00:08:28.319><c> have</c><00:08:28.639><c> nine</c><00:08:29.280><c> zeros</c><00:08:29.840><c> then</c><00:08:30.000><c> we</c><00:08:30.160><c> know</c><00:08:30.400><c> for</c><00:08:30.639><c> sure</c>

00:08:30.869 --> 00:08:30.879 align:start position:0%
we have nine zeros then we know for sure
 

00:08:30.879 --> 00:08:32.870 align:start position:0%
we have nine zeros then we know for sure
it's<00:08:31.039><c> gonna</c><00:08:31.280><c> be</c><00:08:31.520><c> greater</c><00:08:32.080><c> than</c><00:08:32.320><c> the</c><00:08:32.479><c> max</c>

00:08:32.870 --> 00:08:32.880 align:start position:0%
it's gonna be greater than the max
 

00:08:32.880 --> 00:08:34.949 align:start position:0%
it's gonna be greater than the max
integer<00:08:33.279><c> up</c><00:08:33.440><c> above</c><00:08:33.919><c> because</c><00:08:34.240><c> that</c><00:08:34.640><c> max</c>

00:08:34.949 --> 00:08:34.959 align:start position:0%
integer up above because that max
 

00:08:34.959 --> 00:08:36.949 align:start position:0%
integer up above because that max
integer<00:08:35.360><c> starts</c><00:08:35.599><c> with</c><00:08:35.760><c> a</c><00:08:35.919><c> two</c><00:08:36.320><c> followed</c><00:08:36.719><c> by</c>

00:08:36.949 --> 00:08:36.959 align:start position:0%
integer starts with a two followed by
 

00:08:36.959 --> 00:08:38.630 align:start position:0%
integer starts with a two followed by
nine<00:08:37.279><c> digits</c><00:08:37.599><c> right</c><00:08:37.760><c> we</c><00:08:37.839><c> know</c><00:08:38.000><c> for</c><00:08:38.159><c> sure</c><00:08:38.399><c> this</c>

00:08:38.630 --> 00:08:38.640 align:start position:0%
nine digits right we know for sure this
 

00:08:38.640 --> 00:08:40.469 align:start position:0%
nine digits right we know for sure this
is<00:08:38.719><c> gonna</c><00:08:38.880><c> be</c><00:08:39.039><c> greater</c><00:08:39.519><c> so</c><00:08:39.760><c> basically</c><00:08:40.240><c> that's</c>

00:08:40.469 --> 00:08:40.479 align:start position:0%
is gonna be greater so basically that's
 

00:08:40.479 --> 00:08:42.149 align:start position:0%
is gonna be greater so basically that's
how<00:08:40.640><c> we're</c><00:08:40.800><c> going</c><00:08:40.880><c> to</c><00:08:41.039><c> compare</c><00:08:41.440><c> it</c><00:08:41.760><c> i</c><00:08:41.919><c> know</c>

00:08:42.149 --> 00:08:42.159 align:start position:0%
how we're going to compare it i know
 

00:08:42.159 --> 00:08:44.550 align:start position:0%
how we're going to compare it i know
this<00:08:42.479><c> sounds</c><00:08:42.959><c> confusing</c><00:08:43.680><c> right</c><00:08:44.000><c> but</c><00:08:44.159><c> to</c><00:08:44.320><c> put</c>

00:08:44.550 --> 00:08:44.560 align:start position:0%
this sounds confusing right but to put
 

00:08:44.560 --> 00:08:48.070 align:start position:0%
this sounds confusing right but to put
it<00:08:44.720><c> simply</c><00:08:45.600><c> if</c><00:08:45.760><c> we</c><00:08:46.080><c> compare</c><00:08:46.480><c> this</c><00:08:47.200><c> with</c><00:08:47.760><c> this</c>

00:08:48.070 --> 00:08:48.080 align:start position:0%
it simply if we compare this with this
 

00:08:48.080 --> 00:08:49.350 align:start position:0%
it simply if we compare this with this
up<00:08:48.240><c> above</c><00:08:48.560><c> and</c><00:08:48.640><c> we</c><00:08:48.720><c> know</c><00:08:48.880><c> that</c><00:08:49.040><c> this</c><00:08:49.200><c> is</c>

00:08:49.350 --> 00:08:49.360 align:start position:0%
up above and we know that this is
 

00:08:49.360 --> 00:08:51.509 align:start position:0%
up above and we know that this is
greater<00:08:49.760><c> than</c><00:08:49.920><c> we</c><00:08:50.160><c> know</c><00:08:50.800><c> we're</c><00:08:51.040><c> out</c><00:08:51.200><c> of</c><00:08:51.279><c> bounds</c>

00:08:51.509 --> 00:08:51.519 align:start position:0%
greater than we know we're out of bounds
 

00:08:51.519 --> 00:08:52.870 align:start position:0%
greater than we know we're out of bounds
and<00:08:51.600><c> then</c><00:08:51.760><c> we're</c><00:08:52.080><c> going</c><00:08:52.160><c> to</c><00:08:52.240><c> again</c><00:08:52.560><c> have</c><00:08:52.720><c> to</c>

00:08:52.870 --> 00:08:52.880 align:start position:0%
and then we're going to again have to
 

00:08:52.880 --> 00:08:55.829 align:start position:0%
and then we're going to again have to
return<00:08:53.920><c> zero</c><00:08:54.800><c> i</c><00:08:54.959><c> know</c><00:08:55.120><c> this</c><00:08:55.279><c> seems</c><00:08:55.600><c> really</c>

00:08:55.829 --> 00:08:55.839 align:start position:0%
return zero i know this seems really
 

00:08:55.839 --> 00:08:57.910 align:start position:0%
return zero i know this seems really
complicated<00:08:56.640><c> but</c><00:08:56.880><c> let</c><00:08:57.040><c> me</c><00:08:57.120><c> show</c><00:08:57.279><c> you</c><00:08:57.440><c> the</c><00:08:57.600><c> code</c>

00:08:57.910 --> 00:08:57.920 align:start position:0%
complicated but let me show you the code
 

00:08:57.920 --> 00:08:59.829 align:start position:0%
complicated but let me show you the code
and<00:08:58.080><c> it's</c><00:08:58.240><c> actually</c><00:08:58.560><c> gonna</c><00:08:58.720><c> be</c><00:08:59.200><c> probably</c><00:08:59.600><c> even</c>

00:08:59.829 --> 00:08:59.839 align:start position:0%
and it's actually gonna be probably even
 

00:08:59.839 --> 00:09:01.590 align:start position:0%
and it's actually gonna be probably even
more<00:09:00.080><c> simple</c><00:09:00.560><c> this</c><00:09:00.800><c> is</c><00:09:00.880><c> definitely</c><00:09:01.279><c> why</c><00:09:01.519><c> i</c>

00:09:01.590 --> 00:09:01.600 align:start position:0%
more simple this is definitely why i
 

00:09:01.600 --> 00:09:03.110 align:start position:0%
more simple this is definitely why i
would<00:09:01.760><c> say</c><00:09:01.920><c> this</c><00:09:02.160><c> is</c><00:09:02.240><c> more</c><00:09:02.399><c> of</c><00:09:02.560><c> a</c><00:09:02.720><c> medium</c>

00:09:03.110 --> 00:09:03.120 align:start position:0%
would say this is more of a medium
 

00:09:03.120 --> 00:09:05.990 align:start position:0%
would say this is more of a medium
problem<00:09:03.600><c> not</c><00:09:03.839><c> an</c><00:09:04.080><c> easy</c><00:09:04.560><c> problem</c><00:09:05.279><c> okay</c><00:09:05.519><c> so</c><00:09:05.839><c> now</c>

00:09:05.990 --> 00:09:06.000 align:start position:0%
problem not an easy problem okay so now
 

00:09:06.000 --> 00:09:07.990 align:start position:0%
problem not an easy problem okay so now
let's<00:09:06.240><c> get</c><00:09:06.480><c> into</c><00:09:06.720><c> the</c><00:09:06.800><c> code</c><00:09:07.120><c> and</c><00:09:07.279><c> i</c><00:09:07.519><c> already</c>

00:09:07.990 --> 00:09:08.000 align:start position:0%
let's get into the code and i already
 

00:09:08.000 --> 00:09:09.430 align:start position:0%
let's get into the code and i already
wrote<00:09:08.240><c> out</c><00:09:08.399><c> the</c><00:09:08.560><c> code</c><00:09:08.800><c> because</c><00:09:09.040><c> i</c><00:09:09.120><c> think</c><00:09:09.279><c> it's</c>

00:09:09.430 --> 00:09:09.440 align:start position:0%
wrote out the code because i think it's
 

00:09:09.440 --> 00:09:11.590 align:start position:0%
wrote out the code because i think it's
going<00:09:09.600><c> to</c><00:09:09.680><c> be</c><00:09:09.920><c> more</c><00:09:10.560><c> easy</c><00:09:10.800><c> to</c><00:09:10.959><c> understand</c><00:09:11.440><c> if</c>

00:09:11.590 --> 00:09:11.600 align:start position:0%
going to be more easy to understand if
 

00:09:11.600 --> 00:09:13.430 align:start position:0%
going to be more easy to understand if
you<00:09:11.680><c> can</c><00:09:11.760><c> kind</c><00:09:11.920><c> of</c><00:09:12.080><c> see</c><00:09:12.320><c> the</c><00:09:12.480><c> entire</c><00:09:12.880><c> structure</c>

00:09:13.430 --> 00:09:13.440 align:start position:0%
you can kind of see the entire structure
 

00:09:13.440 --> 00:09:16.630 align:start position:0%
you can kind of see the entire structure
written<00:09:13.839><c> out</c><00:09:14.320><c> so</c><00:09:14.959><c> in</c><00:09:15.120><c> most</c><00:09:15.360><c> languages</c><00:09:15.920><c> you</c><00:09:16.240><c> can</c>

00:09:16.630 --> 00:09:16.640 align:start position:0%
written out so in most languages you can
 

00:09:16.640 --> 00:09:18.949 align:start position:0%
written out so in most languages you can
find<00:09:16.880><c> the</c><00:09:17.120><c> max</c><00:09:17.440><c> integer</c><00:09:17.920><c> and</c><00:09:18.000><c> minimum</c><00:09:18.480><c> integer</c>

00:09:18.949 --> 00:09:18.959 align:start position:0%
find the max integer and minimum integer
 

00:09:18.959 --> 00:09:21.430 align:start position:0%
find the max integer and minimum integer
in<00:09:19.040><c> 32</c><00:09:19.600><c> bits</c><00:09:19.839><c> right</c><00:09:20.320><c> this</c><00:09:20.480><c> is</c><00:09:20.640><c> the</c><00:09:20.720><c> max</c><00:09:20.959><c> integer</c>

00:09:21.430 --> 00:09:21.440 align:start position:0%
in 32 bits right this is the max integer
 

00:09:21.440 --> 00:09:23.110 align:start position:0%
in 32 bits right this is the max integer
this<00:09:21.600><c> is</c><00:09:21.680><c> the</c><00:09:21.839><c> minimum</c><00:09:22.240><c> integer</c><00:09:22.720><c> and</c><00:09:22.880><c> i</c><00:09:22.959><c> have</c>

00:09:23.110 --> 00:09:23.120 align:start position:0%
this is the minimum integer and i have
 

00:09:23.120 --> 00:09:25.829 align:start position:0%
this is the minimum integer and i have
those<00:09:23.360><c> coded</c><00:09:23.839><c> up</c><00:09:23.920><c> above</c><00:09:24.240><c> in</c><00:09:24.399><c> python</c><00:09:25.120><c> the</c><00:09:25.279><c> math</c>

00:09:25.829 --> 00:09:25.839 align:start position:0%
those coded up above in python the math
 

00:09:25.839 --> 00:09:26.949 align:start position:0%
those coded up above in python the math
it<00:09:25.920><c> kind</c><00:09:26.080><c> of</c><00:09:26.240><c> works</c><00:09:26.480><c> out</c><00:09:26.640><c> a</c><00:09:26.640><c> little</c><00:09:26.800><c> bit</c>

00:09:26.949 --> 00:09:26.959 align:start position:0%
it kind of works out a little bit
 

00:09:26.959 --> 00:09:29.030 align:start position:0%
it kind of works out a little bit
differently<00:09:27.600><c> compared</c><00:09:27.920><c> to</c><00:09:28.080><c> most</c><00:09:28.320><c> languages</c>

00:09:29.030 --> 00:09:29.040 align:start position:0%
differently compared to most languages
 

00:09:29.040 --> 00:09:31.590 align:start position:0%
differently compared to most languages
but<00:09:29.200><c> i'm</c><00:09:29.360><c> basically</c><00:09:29.839><c> doing</c><00:09:30.640><c> the</c><00:09:31.279><c> with</c><00:09:31.440><c> the</c>

00:09:31.590 --> 00:09:31.600 align:start position:0%
but i'm basically doing the with the
 

00:09:31.600 --> 00:09:33.430 align:start position:0%
but i'm basically doing the with the
following<00:09:32.000><c> while</c><00:09:32.320><c> loop</c><00:09:32.640><c> i'm</c><00:09:32.720><c> doing</c><00:09:33.040><c> what</c><00:09:33.200><c> i</c>

00:09:33.430 --> 00:09:33.440 align:start position:0%
following while loop i'm doing what i
 

00:09:33.440 --> 00:09:35.750 align:start position:0%
following while loop i'm doing what i
explained<00:09:34.000><c> earlier</c><00:09:34.560><c> in</c><00:09:34.880><c> the</c><00:09:35.120><c> video</c><00:09:35.440><c> so</c><00:09:35.680><c> we</c>

00:09:35.750 --> 00:09:35.760 align:start position:0%
explained earlier in the video so we
 

00:09:35.760 --> 00:09:37.590 align:start position:0%
explained earlier in the video so we
have<00:09:36.000><c> our</c><00:09:36.160><c> result</c><00:09:36.640><c> initially</c><00:09:37.120><c> zero</c><00:09:37.440><c> right</c>

00:09:37.590 --> 00:09:37.600 align:start position:0%
have our result initially zero right
 

00:09:37.600 --> 00:09:40.470 align:start position:0%
have our result initially zero right
we're<00:09:37.839><c> passed</c><00:09:38.240><c> in</c><00:09:38.399><c> some</c><00:09:38.640><c> integer</c><00:09:39.120><c> x</c><00:09:39.519><c> so</c><00:09:40.160><c> while</c>

00:09:40.470 --> 00:09:40.480 align:start position:0%
we're passed in some integer x so while
 

00:09:40.480 --> 00:09:42.949 align:start position:0%
we're passed in some integer x so while
this<00:09:40.800><c> integer</c><00:09:41.200><c> x</c><00:09:41.519><c> is</c><00:09:41.760><c> not</c><00:09:42.160><c> zero</c><00:09:42.720><c> let's</c>

00:09:42.949 --> 00:09:42.959 align:start position:0%
this integer x is not zero let's
 

00:09:42.959 --> 00:09:44.949 align:start position:0%
this integer x is not zero let's
continue<00:09:43.519><c> the</c><00:09:43.760><c> loop</c><00:09:44.080><c> right</c><00:09:44.320><c> now</c><00:09:44.480><c> we're</c><00:09:44.640><c> in</c><00:09:44.800><c> the</c>

00:09:44.949 --> 00:09:44.959 align:start position:0%
continue the loop right now we're in the
 

00:09:44.959 --> 00:09:46.630 align:start position:0%
continue the loop right now we're in the
looping<00:09:45.360><c> phase</c><00:09:45.600><c> we're</c><00:09:45.760><c> going</c><00:09:46.000><c> through</c><00:09:46.240><c> each</c>

00:09:46.630 --> 00:09:46.640 align:start position:0%
looping phase we're going through each
 

00:09:46.640 --> 00:09:49.670 align:start position:0%
looping phase we're going through each
digit<00:09:47.120><c> of</c><00:09:47.440><c> x</c><00:09:48.000><c> what</c><00:09:48.160><c> we</c><00:09:48.399><c> want</c><00:09:48.640><c> to</c><00:09:48.800><c> do</c><00:09:49.120><c> right</c><00:09:49.440><c> just</c>

00:09:49.670 --> 00:09:49.680 align:start position:0%
digit of x what we want to do right just
 

00:09:49.680 --> 00:09:52.150 align:start position:0%
digit of x what we want to do right just
like<00:09:49.839><c> i</c><00:09:50.000><c> mentioned</c><00:09:50.880><c> earlier</c><00:09:51.360><c> we</c><00:09:51.440><c> want</c><00:09:51.600><c> to</c><00:09:51.760><c> take</c>

00:09:52.150 --> 00:09:52.160 align:start position:0%
like i mentioned earlier we want to take
 

00:09:52.160 --> 00:09:55.269 align:start position:0%
like i mentioned earlier we want to take
x<00:09:52.640><c> and</c><00:09:53.120><c> mod</c><00:09:53.440><c> it</c><00:09:53.680><c> by</c><00:09:54.000><c> 10.</c><00:09:54.399><c> now</c><00:09:54.640><c> you</c><00:09:54.720><c> would</c><00:09:55.040><c> you're</c>

00:09:55.269 --> 00:09:55.279 align:start position:0%
x and mod it by 10. now you would you're
 

00:09:55.279 --> 00:09:56.630 align:start position:0%
x and mod it by 10. now you would you're
probably<00:09:55.519><c> wondering</c><00:09:55.839><c> why</c><00:09:56.000><c> can't</c><00:09:56.160><c> i</c><00:09:56.240><c> just</c><00:09:56.399><c> take</c>

00:09:56.630 --> 00:09:56.640 align:start position:0%
probably wondering why can't i just take
 

00:09:56.640 --> 00:09:58.389 align:start position:0%
probably wondering why can't i just take
x<00:09:56.880><c> and</c><00:09:56.959><c> mod</c><00:09:57.120><c> it</c><00:09:57.200><c> by</c><00:09:57.360><c> 10</c><00:09:57.519><c> why</c><00:09:57.680><c> do</c><00:09:57.839><c> i</c><00:09:57.920><c> need</c><00:09:58.080><c> this</c>

00:09:58.389 --> 00:09:58.399 align:start position:0%
x and mod it by 10 why do i need this
 

00:09:58.399 --> 00:10:00.870 align:start position:0%
x and mod it by 10 why do i need this
helper<00:09:58.800><c> function</c><00:09:59.120><c> or</c><00:09:59.200><c> whatever</c><00:10:00.000><c> uh</c><00:10:00.480><c> basically</c>

00:10:00.870 --> 00:10:00.880 align:start position:0%
helper function or whatever uh basically
 

00:10:00.880 --> 00:10:02.790 align:start position:0%
helper function or whatever uh basically
because<00:10:01.120><c> python</c><00:10:01.600><c> is</c><00:10:01.680><c> kind</c><00:10:01.839><c> of</c><00:10:02.000><c> dumb</c><00:10:02.480><c> it</c><00:10:02.640><c> does</c>

00:10:02.790 --> 00:10:02.800 align:start position:0%
because python is kind of dumb it does
 

00:10:02.800 --> 00:10:04.710 align:start position:0%
because python is kind of dumb it does
some<00:10:03.040><c> unexpected</c><00:10:03.600><c> behavior</c><00:10:04.079><c> negative</c><00:10:04.480><c> 1</c>

00:10:04.710 --> 00:10:04.720 align:start position:0%
some unexpected behavior negative 1
 

00:10:04.720 --> 00:10:07.590 align:start position:0%
some unexpected behavior negative 1
modded<00:10:05.120><c> by</c><00:10:05.360><c> 10</c><00:10:05.839><c> should</c><00:10:06.000><c> not</c><00:10:06.240><c> be</c><00:10:06.560><c> 9</c><00:10:07.120><c> in</c><00:10:07.279><c> most</c>

00:10:07.590 --> 00:10:07.600 align:start position:0%
modded by 10 should not be 9 in most
 

00:10:07.600 --> 00:10:09.509 align:start position:0%
modded by 10 should not be 9 in most
cases<00:10:08.399><c> but</c><00:10:08.640><c> python</c><00:10:09.120><c> is</c><00:10:09.200><c> a</c><00:10:09.200><c> little</c><00:10:09.360><c> bit</c>

00:10:09.509 --> 00:10:09.519 align:start position:0%
cases but python is a little bit
 

00:10:09.519 --> 00:10:10.790 align:start position:0%
cases but python is a little bit
different<00:10:09.760><c> than</c><00:10:09.920><c> most</c><00:10:10.079><c> languages</c><00:10:10.480><c> in</c><00:10:10.560><c> most</c>

00:10:10.790 --> 00:10:10.800 align:start position:0%
different than most languages in most
 

00:10:10.800 --> 00:10:12.150 align:start position:0%
different than most languages in most
languages<00:10:11.200><c> you</c><00:10:11.360><c> can</c><00:10:11.440><c> just</c><00:10:11.600><c> do</c><00:10:11.760><c> the</c><00:10:11.920><c> mod</c>

00:10:12.150 --> 00:10:12.160 align:start position:0%
languages you can just do the mod
 

00:10:12.160 --> 00:10:14.230 align:start position:0%
languages you can just do the mod
operator<00:10:12.480><c> but</c><00:10:12.640><c> we're</c><00:10:12.800><c> doing</c><00:10:13.120><c> math</c><00:10:13.519><c> f</c><00:10:13.680><c> mod</c><00:10:14.079><c> to</c>

00:10:14.230 --> 00:10:14.240 align:start position:0%
operator but we're doing math f mod to
 

00:10:14.240 --> 00:10:16.630 align:start position:0%
operator but we're doing math f mod to
get<00:10:14.480><c> that</c><00:10:14.800><c> digit</c><00:10:15.279><c> in</c><00:10:15.440><c> python</c><00:10:16.079><c> once</c><00:10:16.320><c> we</c><00:10:16.480><c> have</c>

00:10:16.630 --> 00:10:16.640 align:start position:0%
get that digit in python once we have
 

00:10:16.640 --> 00:10:18.949 align:start position:0%
get that digit in python once we have
that<00:10:17.040><c> digit</c><00:10:17.600><c> we're</c><00:10:17.920><c> clear</c><00:10:18.240><c> right</c><00:10:18.640><c> then</c><00:10:18.800><c> we</c>

00:10:18.949 --> 00:10:18.959 align:start position:0%
that digit we're clear right then we
 

00:10:18.959 --> 00:10:21.190 align:start position:0%
that digit we're clear right then we
want<00:10:19.120><c> to</c><00:10:19.279><c> take</c><00:10:19.600><c> x</c><00:10:20.000><c> and</c><00:10:20.160><c> divide</c><00:10:20.560><c> it</c><00:10:20.640><c> by</c><00:10:20.800><c> 10.</c>

00:10:21.190 --> 00:10:21.200 align:start position:0%
want to take x and divide it by 10.
 

00:10:21.200 --> 00:10:22.310 align:start position:0%
want to take x and divide it by 10.
you're<00:10:21.360><c> wondering</c><00:10:21.680><c> why</c><00:10:21.839><c> can't</c><00:10:22.079><c> we</c><00:10:22.160><c> just</c>

00:10:22.310 --> 00:10:22.320 align:start position:0%
you're wondering why can't we just
 

00:10:22.320 --> 00:10:23.990 align:start position:0%
you're wondering why can't we just
divide<00:10:22.640><c> it</c><00:10:22.720><c> by</c><00:10:22.880><c> 10</c><00:10:23.040><c> well</c><00:10:23.360><c> python's</c><00:10:23.839><c> a</c><00:10:23.839><c> little</c>

00:10:23.990 --> 00:10:24.000 align:start position:0%
divide it by 10 well python's a little
 

00:10:24.000 --> 00:10:25.670 align:start position:0%
divide it by 10 well python's a little
bit<00:10:24.160><c> weird</c><00:10:24.720><c> so</c>

00:10:25.670 --> 00:10:25.680 align:start position:0%
bit weird so
 

00:10:25.680 --> 00:10:27.350 align:start position:0%
bit weird so
we're<00:10:25.920><c> doing</c><00:10:26.240><c> we're</c><00:10:26.560><c> we're</c><00:10:26.720><c> dividing</c><00:10:27.120><c> it</c><00:10:27.200><c> by</c>

00:10:27.350 --> 00:10:27.360 align:start position:0%
we're doing we're we're dividing it by
 

00:10:27.360 --> 00:10:29.110 align:start position:0%
we're doing we're we're dividing it by
10<00:10:27.680><c> and</c><00:10:27.760><c> then</c><00:10:28.000><c> casting</c><00:10:28.480><c> it</c><00:10:28.560><c> back</c><00:10:28.800><c> to</c><00:10:28.959><c> an</c>

00:10:29.110 --> 00:10:29.120 align:start position:0%
10 and then casting it back to an
 

00:10:29.120 --> 00:10:31.350 align:start position:0%
10 and then casting it back to an
integer<00:10:29.760><c> to</c><00:10:29.920><c> make</c><00:10:30.079><c> sure</c><00:10:30.240><c> that</c><00:10:30.399><c> we</c><00:10:30.480><c> can</c><00:10:30.720><c> round</c>

00:10:31.350 --> 00:10:31.360 align:start position:0%
integer to make sure that we can round
 

00:10:31.360 --> 00:10:33.590 align:start position:0%
integer to make sure that we can round
towards<00:10:31.920><c> zero</c><00:10:32.240><c> in</c><00:10:32.399><c> most</c><00:10:32.640><c> languages</c><00:10:33.200><c> you</c><00:10:33.360><c> won't</c>

00:10:33.590 --> 00:10:33.600 align:start position:0%
towards zero in most languages you won't
 

00:10:33.600 --> 00:10:35.110 align:start position:0%
towards zero in most languages you won't
have<00:10:33.680><c> to</c><00:10:33.839><c> do</c><00:10:33.920><c> this</c><00:10:34.160><c> you</c><00:10:34.240><c> can</c><00:10:34.399><c> just</c><00:10:34.560><c> take</c><00:10:34.880><c> x</c>

00:10:35.110 --> 00:10:35.120 align:start position:0%
have to do this you can just take x
 

00:10:35.120 --> 00:10:37.030 align:start position:0%
have to do this you can just take x
divided<00:10:35.519><c> by</c><00:10:35.680><c> 10</c><00:10:36.079><c> but</c><00:10:36.240><c> python's</c><00:10:36.720><c> a</c><00:10:36.720><c> little</c><00:10:36.880><c> bit</c>

00:10:37.030 --> 00:10:37.040 align:start position:0%
divided by 10 but python's a little bit
 

00:10:37.040 --> 00:10:40.150 align:start position:0%
divided by 10 but python's a little bit
weird<00:10:37.519><c> so</c><00:10:37.760><c> excuse</c><00:10:38.160><c> that</c><00:10:38.480><c> so</c><00:10:38.720><c> then</c><00:10:39.200><c> we</c><00:10:39.600><c> we've</c><00:10:40.000><c> we</c>

00:10:40.150 --> 00:10:40.160 align:start position:0%
weird so excuse that so then we we've we
 

00:10:40.160 --> 00:10:41.990 align:start position:0%
weird so excuse that so then we we've we
have<00:10:40.320><c> the</c><00:10:40.480><c> digit</c><00:10:40.800><c> and</c><00:10:40.880><c> we</c><00:10:41.040><c> took</c><00:10:41.360><c> x</c><00:10:41.680><c> and</c><00:10:41.760><c> we</c>

00:10:41.990 --> 00:10:42.000 align:start position:0%
have the digit and we took x and we
 

00:10:42.000 --> 00:10:44.630 align:start position:0%
have the digit and we took x and we
chopped<00:10:42.399><c> off</c><00:10:42.720><c> the</c><00:10:42.959><c> digit</c><00:10:43.440><c> so</c><00:10:43.600><c> that's</c><00:10:44.000><c> good</c>

00:10:44.630 --> 00:10:44.640 align:start position:0%
chopped off the digit so that's good
 

00:10:44.640 --> 00:10:46.870 align:start position:0%
chopped off the digit so that's good
next<00:10:45.040><c> we</c><00:10:45.279><c> want</c><00:10:45.440><c> to</c><00:10:45.600><c> do</c><00:10:45.760><c> the</c><00:10:46.000><c> stuff</c><00:10:46.240><c> that</c><00:10:46.399><c> i</c><00:10:46.560><c> just</c>

00:10:46.870 --> 00:10:46.880 align:start position:0%
next we want to do the stuff that i just
 

00:10:46.880 --> 00:10:49.110 align:start position:0%
next we want to do the stuff that i just
mentioned<00:10:47.360><c> actually</c><00:10:47.760><c> right</c><00:10:48.240><c> so</c><00:10:48.640><c> i</c><00:10:48.800><c> want</c><00:10:48.959><c> to</c>

00:10:49.110 --> 00:10:49.120 align:start position:0%
mentioned actually right so i want to
 

00:10:49.120 --> 00:10:51.350 align:start position:0%
mentioned actually right so i want to
take<00:10:49.360><c> that</c><00:10:49.600><c> result</c><00:10:49.920><c> right</c><00:10:50.320><c> we</c><00:10:50.480><c> have</c><00:10:50.640><c> a</c><00:10:50.800><c> digit</c>

00:10:51.350 --> 00:10:51.360 align:start position:0%
take that result right we have a digit
 

00:10:51.360 --> 00:10:53.030 align:start position:0%
take that result right we have a digit
we<00:10:51.519><c> want</c><00:10:51.680><c> to</c><00:10:51.920><c> add</c><00:10:52.160><c> it</c><00:10:52.240><c> to</c><00:10:52.399><c> the</c><00:10:52.480><c> result</c><00:10:52.800><c> but</c><00:10:52.959><c> you</c>

00:10:53.030 --> 00:10:53.040 align:start position:0%
we want to add it to the result but you
 

00:10:53.040 --> 00:10:55.110 align:start position:0%
we want to add it to the result but you
can<00:10:53.200><c> see</c><00:10:53.360><c> i'm</c><00:10:53.519><c> doing</c><00:10:53.839><c> a</c><00:10:53.920><c> couple</c><00:10:54.399><c> if</c><00:10:54.640><c> statements</c>

00:10:55.110 --> 00:10:55.120 align:start position:0%
can see i'm doing a couple if statements
 

00:10:55.120 --> 00:10:58.310 align:start position:0%
can see i'm doing a couple if statements
before<00:10:55.600><c> i</c><00:10:55.760><c> actually</c><00:10:56.480><c> execute</c><00:10:57.040><c> this</c><00:10:57.440><c> line</c><00:10:57.920><c> down</c>

00:10:58.310 --> 00:10:58.320 align:start position:0%
before i actually execute this line down
 

00:10:58.320 --> 00:10:59.910 align:start position:0%
before i actually execute this line down
here<00:10:58.720><c> where</c><00:10:58.880><c> i'm</c><00:10:59.040><c> actually</c><00:10:59.360><c> taking</c><00:10:59.680><c> that</c>

00:10:59.910 --> 00:10:59.920 align:start position:0%
here where i'm actually taking that
 

00:10:59.920 --> 00:11:01.910 align:start position:0%
here where i'm actually taking that
digit<00:11:00.240><c> and</c><00:11:00.480><c> adding</c><00:11:00.800><c> it</c><00:11:00.880><c> to</c><00:11:01.040><c> the</c><00:11:01.200><c> result</c><00:11:01.519><c> right</c>

00:11:01.910 --> 00:11:01.920 align:start position:0%
digit and adding it to the result right
 

00:11:01.920 --> 00:11:04.150 align:start position:0%
digit and adding it to the result right
result<00:11:02.240><c> multiplied</c><00:11:02.800><c> by</c><00:11:03.040><c> 10</c><00:11:03.519><c> and</c><00:11:03.600><c> then</c><00:11:03.920><c> add</c>

00:11:04.150 --> 00:11:04.160 align:start position:0%
result multiplied by 10 and then add
 

00:11:04.160 --> 00:11:05.990 align:start position:0%
result multiplied by 10 and then add
that<00:11:04.399><c> digit</c><00:11:04.880><c> which</c><00:11:05.120><c> is</c><00:11:05.200><c> what</c><00:11:05.360><c> we</c><00:11:05.519><c> discussed</c>

00:11:05.990 --> 00:11:06.000 align:start position:0%
that digit which is what we discussed
 

00:11:06.000 --> 00:11:07.750 align:start position:0%
that digit which is what we discussed
earlier<00:11:06.320><c> but</c><00:11:06.480><c> before</c><00:11:06.800><c> i</c><00:11:06.959><c> do</c><00:11:07.120><c> this</c><00:11:07.440><c> i</c><00:11:07.519><c> have</c><00:11:07.680><c> to</c>

00:11:07.750 --> 00:11:07.760 align:start position:0%
earlier but before i do this i have to
 

00:11:07.760 --> 00:11:09.190 align:start position:0%
earlier but before i do this i have to
make<00:11:07.920><c> sure</c><00:11:08.079><c> that</c><00:11:08.240><c> this</c><00:11:08.560><c> is</c><00:11:08.720><c> not</c><00:11:08.880><c> going</c><00:11:09.040><c> to</c>

00:11:09.190 --> 00:11:09.200 align:start position:0%
make sure that this is not going to
 

00:11:09.200 --> 00:11:11.110 align:start position:0%
make sure that this is not going to
overflow<00:11:09.839><c> how</c><00:11:10.000><c> can</c><00:11:10.160><c> i</c><00:11:10.320><c> guarantee</c><00:11:10.800><c> it's</c><00:11:10.959><c> not</c>

00:11:11.110 --> 00:11:11.120 align:start position:0%
overflow how can i guarantee it's not
 

00:11:11.120 --> 00:11:13.269 align:start position:0%
overflow how can i guarantee it's not
going<00:11:11.279><c> to</c><00:11:11.440><c> overflow</c><00:11:12.079><c> well</c><00:11:12.320><c> if</c><00:11:12.399><c> we</c><00:11:12.560><c> take</c><00:11:12.800><c> the</c>

00:11:13.269 --> 00:11:13.279 align:start position:0%
going to overflow well if we take the
 

00:11:13.279 --> 00:11:16.069 align:start position:0%
going to overflow well if we take the
current<00:11:13.600><c> result</c><00:11:14.160><c> and</c><00:11:14.320><c> we</c><00:11:14.480><c> take</c><00:11:14.880><c> the</c><00:11:15.120><c> max</c><00:11:15.519><c> value</c>

00:11:16.069 --> 00:11:16.079 align:start position:0%
current result and we take the max value
 

00:11:16.079 --> 00:11:18.630 align:start position:0%
current result and we take the max value
divided<00:11:16.560><c> by</c><00:11:16.800><c> 10</c><00:11:17.279><c> why</c><00:11:17.440><c> are</c><00:11:17.600><c> we</c><00:11:17.760><c> taking</c><00:11:18.079><c> this</c><00:11:18.320><c> max</c>

00:11:18.630 --> 00:11:18.640 align:start position:0%
divided by 10 why are we taking this max
 

00:11:18.640 --> 00:11:20.550 align:start position:0%
divided by 10 why are we taking this max
value<00:11:18.959><c> up</c><00:11:19.040><c> above</c><00:11:19.360><c> and</c><00:11:19.440><c> dividing</c><00:11:19.839><c> up</c><00:11:19.920><c> by</c><00:11:20.160><c> 10</c>

00:11:20.550 --> 00:11:20.560 align:start position:0%
value up above and dividing up by 10
 

00:11:20.560 --> 00:11:21.990 align:start position:0%
value up above and dividing up by 10
because<00:11:20.800><c> we</c><00:11:20.959><c> don't</c><00:11:21.120><c> want</c><00:11:21.279><c> to</c><00:11:21.440><c> look</c><00:11:21.600><c> at</c><00:11:21.680><c> that</c>

00:11:21.990 --> 00:11:22.000 align:start position:0%
because we don't want to look at that
 

00:11:22.000 --> 00:11:24.949 align:start position:0%
because we don't want to look at that
last<00:11:22.399><c> digit</c><00:11:22.800><c> yet</c><00:11:23.279><c> because</c><00:11:23.839><c> we</c><00:11:24.480><c> can't</c><00:11:24.720><c> look</c><00:11:24.880><c> at</c>

00:11:24.949 --> 00:11:24.959 align:start position:0%
last digit yet because we can't look at
 

00:11:24.959 --> 00:11:26.630 align:start position:0%
last digit yet because we can't look at
that<00:11:25.200><c> last</c><00:11:25.440><c> digit</c><00:11:25.680><c> until</c><00:11:25.920><c> we</c><00:11:26.079><c> know</c><00:11:26.240><c> for</c><00:11:26.399><c> sure</c>

00:11:26.630 --> 00:11:26.640 align:start position:0%
that last digit until we know for sure
 

00:11:26.640 --> 00:11:28.630 align:start position:0%
that last digit until we know for sure
that<00:11:26.800><c> this</c><00:11:27.120><c> value</c><00:11:27.440><c> is</c><00:11:27.519><c> not</c><00:11:27.680><c> going</c><00:11:27.760><c> to</c><00:11:27.920><c> overflow</c>

00:11:28.630 --> 00:11:28.640 align:start position:0%
that this value is not going to overflow
 

00:11:28.640 --> 00:11:29.990 align:start position:0%
that this value is not going to overflow
so<00:11:28.800><c> we're</c><00:11:28.959><c> going</c><00:11:29.040><c> to</c><00:11:29.120><c> compare</c><00:11:29.519><c> every</c><00:11:29.839><c> other</c>

00:11:29.990 --> 00:11:30.000 align:start position:0%
so we're going to compare every other
 

00:11:30.000 --> 00:11:32.790 align:start position:0%
so we're going to compare every other
digit<00:11:30.320><c> so</c><00:11:30.640><c> if</c><00:11:30.880><c> this</c><00:11:31.040><c> result</c><00:11:31.519><c> is</c><00:11:31.839><c> greater</c><00:11:32.480><c> than</c>

00:11:32.790 --> 00:11:32.800 align:start position:0%
digit so if this result is greater than
 

00:11:32.800 --> 00:11:34.790 align:start position:0%
digit so if this result is greater than
max<00:11:33.120><c> divided</c><00:11:33.600><c> by</c><00:11:33.839><c> 10</c><00:11:34.240><c> then</c><00:11:34.480><c> we're</c><00:11:34.640><c> going</c><00:11:34.720><c> to</c>

00:11:34.790 --> 00:11:34.800 align:start position:0%
max divided by 10 then we're going to
 

00:11:34.800 --> 00:11:36.790 align:start position:0%
max divided by 10 then we're going to
return<00:11:35.279><c> 0</c><00:11:35.680><c> because</c><00:11:35.839><c> we</c><00:11:36.079><c> know</c><00:11:36.320><c> it's</c><00:11:36.560><c> going</c><00:11:36.640><c> to</c>

00:11:36.790 --> 00:11:36.800 align:start position:0%
return 0 because we know it's going to
 

00:11:36.800 --> 00:11:39.110 align:start position:0%
return 0 because we know it's going to
overflow<00:11:37.440><c> regardless</c><00:11:38.079><c> of</c><00:11:38.160><c> what</c><00:11:38.399><c> that</c><00:11:38.640><c> digit</c>

00:11:39.110 --> 00:11:39.120 align:start position:0%
overflow regardless of what that digit
 

00:11:39.120 --> 00:11:42.230 align:start position:0%
overflow regardless of what that digit
is<00:11:39.440><c> it's</c><00:11:39.680><c> going</c><00:11:39.839><c> to</c><00:11:40.079><c> overflow</c><00:11:40.880><c> because</c><00:11:41.680><c> uh</c><00:11:42.079><c> the</c>

00:11:42.230 --> 00:11:42.240 align:start position:0%
is it's going to overflow because uh the
 

00:11:42.240 --> 00:11:44.230 align:start position:0%
is it's going to overflow because uh the
result<00:11:42.720><c> the</c><00:11:42.880><c> result</c><00:11:43.200><c> is</c><00:11:43.360><c> already</c><00:11:43.760><c> larger</c><00:11:44.079><c> than</c>

00:11:44.230 --> 00:11:44.240 align:start position:0%
result the result is already larger than
 

00:11:44.240 --> 00:11:46.949 align:start position:0%
result the result is already larger than
max<00:11:44.480><c> divided</c><00:11:44.800><c> by</c><00:11:45.040><c> 10.</c><00:11:45.440><c> so</c><00:11:45.600><c> that's</c><00:11:46.000><c> one</c><00:11:46.320><c> case</c>

00:11:46.949 --> 00:11:46.959 align:start position:0%
max divided by 10. so that's one case
 

00:11:46.959 --> 00:11:49.350 align:start position:0%
max divided by 10. so that's one case
the<00:11:47.120><c> other</c><00:11:47.440><c> case</c><00:11:47.839><c> is</c><00:11:48.320><c> if</c><00:11:48.560><c> the</c><00:11:48.720><c> result</c><00:11:49.200><c> is</c>

00:11:49.350 --> 00:11:49.360 align:start position:0%
the other case is if the result is
 

00:11:49.360 --> 00:11:52.870 align:start position:0%
the other case is if the result is
exactly<00:11:50.399><c> equal</c><00:11:51.040><c> to</c><00:11:51.279><c> max</c><00:11:51.839><c> divided</c><00:11:52.320><c> by</c><00:11:52.480><c> 10</c><00:11:52.720><c> right</c>

00:11:52.870 --> 00:11:52.880 align:start position:0%
exactly equal to max divided by 10 right
 

00:11:52.880 --> 00:11:54.870 align:start position:0%
exactly equal to max divided by 10 right
if<00:11:53.120><c> it's</c><00:11:53.440><c> exactly</c><00:11:53.839><c> equal</c><00:11:54.079><c> to</c><00:11:54.240><c> this</c><00:11:54.560><c> max</c>

00:11:54.870 --> 00:11:54.880 align:start position:0%
if it's exactly equal to this max
 

00:11:54.880 --> 00:11:58.550 align:start position:0%
if it's exactly equal to this max
portion<00:11:55.600><c> except</c><00:11:56.000><c> the</c><00:11:56.240><c> last</c><00:11:56.720><c> digit</c><00:11:57.519><c> and</c><00:11:58.079><c> if</c><00:11:58.399><c> if</c>

00:11:58.550 --> 00:11:58.560 align:start position:0%
portion except the last digit and if if
 

00:11:58.560 --> 00:12:01.750 align:start position:0%
portion except the last digit and if if
that's<00:11:58.959><c> if</c><00:11:59.120><c> that's</c><00:11:59.519><c> true</c><00:12:00.320><c> and</c><00:12:00.720><c> if</c><00:12:00.959><c> the</c><00:12:01.200><c> digit</c>

00:12:01.750 --> 00:12:01.760 align:start position:0%
that's if that's true and if the digit
 

00:12:01.760 --> 00:12:05.670 align:start position:0%
that's if that's true and if the digit
is<00:12:02.079><c> greater</c><00:12:02.880><c> than</c><00:12:03.519><c> 7</c><00:12:04.399><c> where</c><00:12:04.560><c> did</c><00:12:04.720><c> i</c><00:12:04.880><c> get</c><00:12:05.120><c> 7</c><00:12:05.440><c> from</c>

00:12:05.670 --> 00:12:05.680 align:start position:0%
is greater than 7 where did i get 7 from
 

00:12:05.680 --> 00:12:08.550 align:start position:0%
is greater than 7 where did i get 7 from
well<00:12:05.920><c> basically</c><00:12:06.560><c> this</c><00:12:06.800><c> is</c><00:12:07.040><c> max</c><00:12:07.680><c> modded</c><00:12:08.079><c> by</c><00:12:08.240><c> 10.</c>

00:12:08.550 --> 00:12:08.560 align:start position:0%
well basically this is max modded by 10.
 

00:12:08.560 --> 00:12:10.629 align:start position:0%
well basically this is max modded by 10.
if<00:12:08.639><c> you</c><00:12:08.800><c> take</c><00:12:08.959><c> this</c><00:12:09.200><c> max</c><00:12:09.519><c> integer</c><00:12:10.079><c> mod</c><00:12:10.320><c> it</c><00:12:10.399><c> by</c>

00:12:10.629 --> 00:12:10.639 align:start position:0%
if you take this max integer mod it by
 

00:12:10.639 --> 00:12:12.470 align:start position:0%
if you take this max integer mod it by
10<00:12:10.959><c> you're</c><00:12:11.120><c> gonna</c><00:12:11.279><c> get</c><00:12:11.440><c> the</c><00:12:11.600><c> ones</c><00:12:12.000><c> place</c><00:12:12.240><c> which</c>

00:12:12.470 --> 00:12:12.480 align:start position:0%
10 you're gonna get the ones place which
 

00:12:12.480 --> 00:12:14.710 align:start position:0%
10 you're gonna get the ones place which
is<00:12:12.639><c> seven</c><00:12:12.959><c> so</c><00:12:13.120><c> if</c><00:12:13.279><c> the</c><00:12:13.440><c> digit</c><00:12:13.839><c> is</c><00:12:14.079><c> greater</c><00:12:14.480><c> than</c>

00:12:14.710 --> 00:12:14.720 align:start position:0%
is seven so if the digit is greater than
 

00:12:14.720 --> 00:12:17.990 align:start position:0%
is seven so if the digit is greater than
seven<00:12:15.440><c> and</c><00:12:15.760><c> this</c><00:12:16.079><c> previous</c><00:12:16.560><c> portion</c><00:12:17.360><c> executed</c>

00:12:17.990 --> 00:12:18.000 align:start position:0%
seven and this previous portion executed
 

00:12:18.000 --> 00:12:20.069 align:start position:0%
seven and this previous portion executed
as<00:12:18.160><c> true</c><00:12:18.560><c> then</c><00:12:18.800><c> we're</c><00:12:18.959><c> going</c><00:12:19.120><c> to</c><00:12:19.200><c> return</c><00:12:19.600><c> zero</c>

00:12:20.069 --> 00:12:20.079 align:start position:0%
as true then we're going to return zero
 

00:12:20.079 --> 00:12:22.150 align:start position:0%
as true then we're going to return zero
so<00:12:20.240><c> that's</c><00:12:20.560><c> basically</c><00:12:20.959><c> the</c><00:12:21.200><c> case</c><00:12:21.519><c> if</c><00:12:22.000><c> the</c>

00:12:22.150 --> 00:12:22.160 align:start position:0%
so that's basically the case if the
 

00:12:22.160 --> 00:12:24.470 align:start position:0%
so that's basically the case if the
resulting<00:12:23.200><c> integer</c><00:12:23.600><c> is</c><00:12:23.760><c> going</c><00:12:23.839><c> to</c><00:12:23.920><c> be</c><00:12:24.160><c> too</c>

00:12:24.470 --> 00:12:24.480 align:start position:0%
resulting integer is going to be too
 

00:12:24.480 --> 00:12:26.710 align:start position:0%
resulting integer is going to be too
large<00:12:25.040><c> the</c><00:12:25.279><c> bottom</c><00:12:25.680><c> if</c><00:12:25.920><c> statement</c><00:12:26.399><c> is</c><00:12:26.560><c> the</c>

00:12:26.710 --> 00:12:26.720 align:start position:0%
large the bottom if statement is the
 

00:12:26.720 --> 00:12:29.509 align:start position:0%
large the bottom if statement is the
exact<00:12:27.120><c> same</c><00:12:27.600><c> thing</c><00:12:27.920><c> except</c><00:12:28.720><c> if</c><00:12:28.880><c> the</c><00:12:29.040><c> resulting</c>

00:12:29.509 --> 00:12:29.519 align:start position:0%
exact same thing except if the resulting
 

00:12:29.519 --> 00:12:31.670 align:start position:0%
exact same thing except if the resulting
integer<00:12:29.920><c> was</c><00:12:30.079><c> going</c><00:12:30.240><c> to</c><00:12:30.320><c> be</c><00:12:30.560><c> too</c><00:12:31.040><c> small</c><00:12:31.440><c> if</c><00:12:31.600><c> it</c>

00:12:31.670 --> 00:12:31.680 align:start position:0%
integer was going to be too small if it
 

00:12:31.680 --> 00:12:33.590 align:start position:0%
integer was going to be too small if it
was<00:12:31.839><c> going</c><00:12:31.920><c> to</c><00:12:31.920><c> be</c><00:12:32.160><c> smaller</c><00:12:32.720><c> than</c><00:12:32.959><c> the</c><00:12:33.120><c> minimum</c>

00:12:33.590 --> 00:12:33.600 align:start position:0%
was going to be smaller than the minimum
 

00:12:33.600 --> 00:12:35.750 align:start position:0%
was going to be smaller than the minimum
integer<00:12:34.000><c> we</c><00:12:34.160><c> have</c><00:12:34.480><c> up</c><00:12:34.639><c> above</c><00:12:35.120><c> so</c><00:12:35.279><c> if</c><00:12:35.440><c> that</c><00:12:35.600><c> was</c>

00:12:35.750 --> 00:12:35.760 align:start position:0%
integer we have up above so if that was
 

00:12:35.760 --> 00:12:38.150 align:start position:0%
integer we have up above so if that was
the<00:12:35.839><c> case</c><00:12:36.079><c> then</c><00:12:36.320><c> we'd</c><00:12:36.480><c> return</c><00:12:36.880><c> 0</c><00:12:37.360><c> as</c><00:12:37.600><c> well</c><00:12:38.000><c> and</c>

00:12:38.150 --> 00:12:38.160 align:start position:0%
the case then we'd return 0 as well and
 

00:12:38.160 --> 00:12:40.389 align:start position:0%
the case then we'd return 0 as well and
if<00:12:38.320><c> if</c><00:12:38.560><c> those</c><00:12:38.800><c> don't</c><00:12:39.120><c> execute</c><00:12:39.600><c> then</c><00:12:39.920><c> we</c><00:12:40.079><c> can</c><00:12:40.240><c> go</c>

00:12:40.389 --> 00:12:40.399 align:start position:0%
if if those don't execute then we can go
 

00:12:40.399 --> 00:12:42.629 align:start position:0%
if if those don't execute then we can go
ahead<00:12:40.639><c> and</c><00:12:40.800><c> finally</c><00:12:41.360><c> take</c><00:12:41.600><c> that</c><00:12:41.839><c> digit</c><00:12:42.399><c> and</c>

00:12:42.629 --> 00:12:42.639 align:start position:0%
ahead and finally take that digit and
 

00:12:42.639 --> 00:12:44.629 align:start position:0%
ahead and finally take that digit and
add<00:12:42.880><c> it</c><00:12:43.040><c> to</c><00:12:43.279><c> the</c><00:12:43.519><c> result</c><00:12:43.920><c> and</c><00:12:44.000><c> then</c><00:12:44.160><c> we</c><00:12:44.320><c> can</c>

00:12:44.629 --> 00:12:44.639 align:start position:0%
add it to the result and then we can
 

00:12:44.639 --> 00:12:46.310 align:start position:0%
add it to the result and then we can
when<00:12:44.880><c> once</c><00:12:45.120><c> the</c><00:12:45.519><c> while</c><00:12:45.760><c> loop</c><00:12:46.000><c> is</c><00:12:46.079><c> done</c>

00:12:46.310 --> 00:12:46.320 align:start position:0%
when once the while loop is done
 

00:12:46.320 --> 00:12:48.389 align:start position:0%
when once the while loop is done
executing<00:12:47.040><c> if</c><00:12:47.120><c> the</c><00:12:47.279><c> result</c><00:12:47.760><c> has</c><00:12:48.000><c> not</c>

00:12:48.389 --> 00:12:48.399 align:start position:0%
executing if the result has not
 

00:12:48.399 --> 00:12:50.629 align:start position:0%
executing if the result has not
overflowed<00:12:49.279><c> then</c><00:12:49.440><c> we</c><00:12:49.600><c> can</c><00:12:49.760><c> return</c><00:12:50.399><c> that</c>

00:12:50.629 --> 00:12:50.639 align:start position:0%
overflowed then we can return that
 

00:12:50.639 --> 00:12:52.870 align:start position:0%
overflowed then we can return that
result<00:12:51.120><c> so</c><00:12:51.279><c> that</c><00:12:51.440><c> was</c><00:12:51.600><c> a</c><00:12:51.680><c> lot</c><00:12:51.920><c> of</c><00:12:52.079><c> information</c>

00:12:52.870 --> 00:12:52.880 align:start position:0%
result so that was a lot of information
 

00:12:52.880 --> 00:12:54.550 align:start position:0%
result so that was a lot of information
but<00:12:53.040><c> i</c><00:12:53.200><c> hope</c><00:12:53.360><c> that</c><00:12:53.600><c> these</c><00:12:53.839><c> if</c><00:12:54.079><c> statements</c><00:12:54.480><c> are</c>

00:12:54.550 --> 00:12:54.560 align:start position:0%
but i hope that these if statements are
 

00:12:54.560 --> 00:12:56.389 align:start position:0%
but i hope that these if statements are
finally<00:12:54.880><c> starting</c><00:12:55.200><c> to</c><00:12:55.279><c> make</c><00:12:55.519><c> sense</c><00:12:56.079><c> and</c><00:12:56.240><c> the</c>

00:12:56.389 --> 00:12:56.399 align:start position:0%
finally starting to make sense and the
 

00:12:56.399 --> 00:12:58.230 align:start position:0%
finally starting to make sense and the
good<00:12:56.560><c> thing</c><00:12:56.800><c> is</c><00:12:56.959><c> once</c><00:12:57.200><c> you</c><00:12:57.360><c> run</c><00:12:57.519><c> the</c><00:12:57.680><c> code</c><00:12:58.000><c> it</c>

00:12:58.230 --> 00:12:58.240 align:start position:0%
good thing is once you run the code it
 

00:12:58.240 --> 00:13:00.710 align:start position:0%
good thing is once you run the code it
is<00:12:58.480><c> about</c><00:12:58.880><c> as</c><00:12:59.040><c> efficient</c><00:12:59.680><c> as</c><00:12:59.920><c> it</c><00:13:00.000><c> can</c><00:13:00.160><c> possibly</c>

00:13:00.710 --> 00:13:00.720 align:start position:0%
is about as efficient as it can possibly
 

00:13:00.720 --> 00:13:03.670 align:start position:0%
is about as efficient as it can possibly
be<00:13:01.200><c> so</c><00:13:01.360><c> i</c><00:13:01.519><c> hope</c><00:13:01.680><c> that</c><00:13:01.920><c> this</c><00:13:02.160><c> video</c><00:13:02.880><c> was</c><00:13:03.120><c> helpful</c>

00:13:03.670 --> 00:13:03.680 align:start position:0%
be so i hope that this video was helpful
 

00:13:03.680 --> 00:13:06.069 align:start position:0%
be so i hope that this video was helpful
if<00:13:03.839><c> it</c><00:13:04.079><c> was</c><00:13:04.560><c> please</c><00:13:04.959><c> like</c><00:13:05.200><c> and</c><00:13:05.279><c> subscribe</c><00:13:05.920><c> it</c>

00:13:06.069 --> 00:13:06.079 align:start position:0%
if it was please like and subscribe it
 

00:13:06.079 --> 00:13:08.069 align:start position:0%
if it was please like and subscribe it
supports<00:13:06.480><c> the</c><00:13:06.639><c> channel</c><00:13:07.040><c> a</c><00:13:07.279><c> lot</c><00:13:07.680><c> and</c><00:13:07.839><c> i'll</c>

00:13:08.069 --> 00:13:08.079 align:start position:0%
supports the channel a lot and i'll
 

00:13:08.079 --> 00:13:10.470 align:start position:0%
supports the channel a lot and i'll
hopefully<00:13:08.880><c> see</c><00:13:09.040><c> you</c><00:13:09.200><c> pretty</c><00:13:09.519><c> soon</c><00:13:10.079><c> thanks</c><00:13:10.320><c> for</c>

00:13:10.470 --> 00:13:10.480 align:start position:0%
hopefully see you pretty soon thanks for
 

00:13:10.480 --> 00:13:13.200 align:start position:0%
hopefully see you pretty soon thanks for
watching

