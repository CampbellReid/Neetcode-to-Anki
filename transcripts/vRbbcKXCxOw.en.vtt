WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.589 align:start position:0%
 
hey<00:00:00.160><c> everyone</c><00:00:00.640><c> welcome</c><00:00:01.040><c> back</c><00:00:01.280><c> and</c><00:00:01.360><c> let's</c>

00:00:01.589 --> 00:00:01.599 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.599 --> 00:00:03.510 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.839><c> some</c><00:00:02.000><c> more</c><00:00:02.159><c> neat</c><00:00:02.399><c> code</c><00:00:02.720><c> today</c><00:00:02.960><c> so</c><00:00:03.120><c> today</c>

00:00:03.510 --> 00:00:03.520 align:start position:0%
write some more neat code today so today
 

00:00:03.520 --> 00:00:04.230 align:start position:0%
write some more neat code today so today
let's<00:00:03.760><c> solve</c>

00:00:04.230 --> 00:00:04.240 align:start position:0%
let's solve
 

00:00:04.240 --> 00:00:06.309 align:start position:0%
let's solve
same<00:00:04.640><c> tree</c><00:00:05.120><c> so</c><00:00:05.359><c> i'm</c><00:00:05.440><c> going</c><00:00:05.520><c> to</c><00:00:05.680><c> upload</c><00:00:06.000><c> this</c><00:00:06.160><c> on</c>

00:00:06.309 --> 00:00:06.319 align:start position:0%
same tree so i'm going to upload this on
 

00:00:06.319 --> 00:00:07.829 align:start position:0%
same tree so i'm going to upload this on
a<00:00:06.399><c> friday</c><00:00:06.879><c> so</c><00:00:07.200><c> today</c><00:00:07.440><c> we're</c><00:00:07.600><c> going</c><00:00:07.680><c> to</c><00:00:07.759><c> be</c>

00:00:07.829 --> 00:00:07.839 align:start position:0%
a friday so today we're going to be
 

00:00:07.839 --> 00:00:09.430 align:start position:0%
a friday so today we're going to be
doing<00:00:08.160><c> an</c><00:00:08.320><c> easy-ish</c><00:00:08.880><c> problem</c>

00:00:09.430 --> 00:00:09.440 align:start position:0%
doing an easy-ish problem
 

00:00:09.440 --> 00:00:11.749 align:start position:0%
doing an easy-ish problem
so<00:00:09.599><c> we're</c><00:00:09.840><c> given</c><00:00:10.240><c> the</c><00:00:10.480><c> root</c><00:00:10.800><c> of</c><00:00:11.040><c> two</c><00:00:11.280><c> binary</c>

00:00:11.749 --> 00:00:11.759 align:start position:0%
so we're given the root of two binary
 

00:00:11.759 --> 00:00:12.629 align:start position:0%
so we're given the root of two binary
trees<00:00:12.240><c> p</c>

00:00:12.629 --> 00:00:12.639 align:start position:0%
trees p
 

00:00:12.639 --> 00:00:15.030 align:start position:0%
trees p
and<00:00:12.880><c> q</c><00:00:13.519><c> we</c><00:00:13.679><c> need</c><00:00:13.840><c> to</c><00:00:14.000><c> write</c><00:00:14.240><c> a</c><00:00:14.400><c> function</c><00:00:14.799><c> to</c>

00:00:15.030 --> 00:00:15.040 align:start position:0%
and q we need to write a function to
 

00:00:15.040 --> 00:00:15.910 align:start position:0%
and q we need to write a function to
check<00:00:15.360><c> if</c><00:00:15.599><c> they</c>

00:00:15.910 --> 00:00:15.920 align:start position:0%
check if they
 

00:00:15.920 --> 00:00:19.029 align:start position:0%
check if they
are<00:00:16.000><c> the</c><00:00:16.240><c> exact</c><00:00:16.880><c> same</c><00:00:17.279><c> tree</c><00:00:17.760><c> or</c><00:00:18.000><c> not</c><00:00:18.720><c> we</c><00:00:18.880><c> can</c>

00:00:19.029 --> 00:00:19.039 align:start position:0%
are the exact same tree or not we can
 

00:00:19.039 --> 00:00:20.310 align:start position:0%
are the exact same tree or not we can
determine<00:00:19.600><c> that</c><00:00:19.920><c> by</c>

00:00:20.310 --> 00:00:20.320 align:start position:0%
determine that by
 

00:00:20.320 --> 00:00:22.710 align:start position:0%
determine that by
one<00:00:20.720><c> making</c><00:00:21.039><c> sure</c><00:00:21.279><c> that</c><00:00:21.439><c> the</c><00:00:21.680><c> structure</c><00:00:22.560><c> is</c>

00:00:22.710 --> 00:00:22.720 align:start position:0%
one making sure that the structure is
 

00:00:22.720 --> 00:00:23.910 align:start position:0%
one making sure that the structure is
the<00:00:22.880><c> exact</c><00:00:23.359><c> same</c>

00:00:23.910 --> 00:00:23.920 align:start position:0%
the exact same
 

00:00:23.920 --> 00:00:26.470 align:start position:0%
the exact same
so<00:00:24.480><c> for</c><00:00:24.640><c> example</c><00:00:25.279><c> basically</c><00:00:25.680><c> the</c><00:00:25.920><c> number</c><00:00:26.320><c> of</c>

00:00:26.470 --> 00:00:26.480 align:start position:0%
so for example basically the number of
 

00:00:26.480 --> 00:00:28.390 align:start position:0%
so for example basically the number of
nodes<00:00:26.800><c> right</c><00:00:27.039><c> like</c><00:00:27.199><c> they</c><00:00:27.359><c> both</c><00:00:27.599><c> have</c><00:00:27.840><c> a</c><00:00:28.080><c> root</c>

00:00:28.390 --> 00:00:28.400 align:start position:0%
nodes right like they both have a root
 

00:00:28.400 --> 00:00:28.870 align:start position:0%
nodes right like they both have a root
node

00:00:28.870 --> 00:00:28.880 align:start position:0%
node
 

00:00:28.880 --> 00:00:31.029 align:start position:0%
node
they<00:00:29.039><c> both</c><00:00:29.359><c> have</c><00:00:29.599><c> a</c><00:00:29.920><c> left</c><00:00:30.240><c> child</c><00:00:30.720><c> and</c><00:00:30.880><c> they</c>

00:00:31.029 --> 00:00:31.039 align:start position:0%
they both have a left child and they
 

00:00:31.039 --> 00:00:32.950 align:start position:0%
they both have a left child and they
both<00:00:31.279><c> have</c><00:00:31.599><c> a</c><00:00:31.840><c> right</c><00:00:32.160><c> child</c><00:00:32.559><c> right</c><00:00:32.719><c> the</c>

00:00:32.950 --> 00:00:32.960 align:start position:0%
both have a right child right the
 

00:00:32.960 --> 00:00:34.389 align:start position:0%
both have a right child right the
structure<00:00:33.520><c> is</c><00:00:33.600><c> the</c><00:00:33.760><c> same</c>

00:00:34.389 --> 00:00:34.399 align:start position:0%
structure is the same
 

00:00:34.399 --> 00:00:36.470 align:start position:0%
structure is the same
not<00:00:34.640><c> only</c><00:00:34.880><c> that</c><00:00:35.120><c> though</c><00:00:35.360><c> they</c><00:00:35.600><c> also</c><00:00:36.000><c> have</c><00:00:36.320><c> to</c>

00:00:36.470 --> 00:00:36.480 align:start position:0%
not only that though they also have to
 

00:00:36.480 --> 00:00:37.910 align:start position:0%
not only that though they also have to
have<00:00:36.800><c> the</c><00:00:36.960><c> exact</c><00:00:37.440><c> same</c>

00:00:37.910 --> 00:00:37.920 align:start position:0%
have the exact same
 

00:00:37.920 --> 00:00:40.389 align:start position:0%
have the exact same
values<00:00:38.800><c> at</c><00:00:39.040><c> every</c><00:00:39.280><c> node</c><00:00:39.600><c> position</c><00:00:39.920><c> so</c><00:00:40.079><c> in</c><00:00:40.239><c> this</c>

00:00:40.389 --> 00:00:40.399 align:start position:0%
values at every node position so in this
 

00:00:40.399 --> 00:00:41.590 align:start position:0%
values at every node position so in this
case<00:00:40.640><c> we</c><00:00:40.719><c> can</c><00:00:40.879><c> see</c>

00:00:41.590 --> 00:00:41.600 align:start position:0%
case we can see
 

00:00:41.600 --> 00:00:44.310 align:start position:0%
case we can see
they<00:00:41.760><c> have</c><00:00:41.920><c> the</c><00:00:42.000><c> same</c><00:00:42.239><c> value</c><00:00:43.200><c> once</c><00:00:43.520><c> again</c><00:00:44.079><c> same</c>

00:00:44.310 --> 00:00:44.320 align:start position:0%
they have the same value once again same
 

00:00:44.320 --> 00:00:45.910 align:start position:0%
they have the same value once again same
value<00:00:44.719><c> in</c><00:00:44.800><c> the</c><00:00:44.960><c> left</c><00:00:45.200><c> side</c>

00:00:45.910 --> 00:00:45.920 align:start position:0%
value in the left side
 

00:00:45.920 --> 00:00:48.790 align:start position:0%
value in the left side
and<00:00:46.480><c> lastly</c><00:00:47.120><c> same</c><00:00:47.440><c> value</c><00:00:47.920><c> on</c><00:00:48.079><c> the</c><00:00:48.239><c> right</c><00:00:48.480><c> side</c>

00:00:48.790 --> 00:00:48.800 align:start position:0%
and lastly same value on the right side
 

00:00:48.800 --> 00:00:51.029 align:start position:0%
and lastly same value on the right side
so<00:00:49.039><c> these</c><00:00:49.280><c> are</c><00:00:49.520><c> the</c><00:00:49.680><c> exact</c><00:00:50.079><c> same</c><00:00:50.399><c> tree</c><00:00:50.719><c> right</c>

00:00:51.029 --> 00:00:51.039 align:start position:0%
so these are the exact same tree right
 

00:00:51.039 --> 00:00:51.510 align:start position:0%
so these are the exact same tree right
so

00:00:51.510 --> 00:00:51.520 align:start position:0%
so
 

00:00:51.520 --> 00:00:54.229 align:start position:0%
so
we<00:00:51.680><c> can</c><00:00:51.840><c> return</c><00:00:52.480><c> true</c><00:00:53.199><c> now</c><00:00:53.360><c> if</c><00:00:53.520><c> i</c><00:00:53.600><c> got</c><00:00:53.920><c> rid</c><00:00:54.160><c> of</c>

00:00:54.229 --> 00:00:54.239 align:start position:0%
we can return true now if i got rid of
 

00:00:54.239 --> 00:00:55.430 align:start position:0%
we can return true now if i got rid of
one<00:00:54.480><c> of</c><00:00:54.559><c> these</c><00:00:54.800><c> nodes</c><00:00:55.120><c> right</c>

00:00:55.430 --> 00:00:55.440 align:start position:0%
one of these nodes right
 

00:00:55.440 --> 00:00:57.110 align:start position:0%
one of these nodes right
let's<00:00:55.600><c> say</c><00:00:55.760><c> i</c><00:00:55.840><c> just</c><00:00:56.000><c> got</c><00:00:56.160><c> rid</c><00:00:56.320><c> of</c><00:00:56.480><c> this</c><00:00:56.879><c> then</c>

00:00:57.110 --> 00:00:57.120 align:start position:0%
let's say i just got rid of this then
 

00:00:57.120 --> 00:00:58.869 align:start position:0%
let's say i just got rid of this then
it's<00:00:57.280><c> definitely</c><00:00:57.680><c> not</c><00:00:57.920><c> the</c><00:00:58.079><c> same</c><00:00:58.320><c> tree</c><00:00:58.640><c> right</c>

00:00:58.869 --> 00:00:58.879 align:start position:0%
it's definitely not the same tree right
 

00:00:58.879 --> 00:00:59.349 align:start position:0%
it's definitely not the same tree right
or

00:00:59.349 --> 00:00:59.359 align:start position:0%
or
 

00:00:59.359 --> 00:01:01.349 align:start position:0%
or
if<00:00:59.520><c> i</c><00:00:59.680><c> took</c><00:00:59.920><c> this</c><00:01:00.160><c> value</c><00:01:00.640><c> and</c><00:01:00.800><c> changed</c><00:01:01.199><c> it</c>

00:01:01.349 --> 00:01:01.359 align:start position:0%
if i took this value and changed it
 

00:01:01.359 --> 00:01:03.110 align:start position:0%
if i took this value and changed it
let's<00:01:01.600><c> say</c><00:01:01.920><c> to</c><00:01:02.239><c> a</c>

00:01:03.110 --> 00:01:03.120 align:start position:0%
let's say to a
 

00:01:03.120 --> 00:01:05.830 align:start position:0%
let's say to a
hunt<00:01:03.680><c> a</c><00:01:03.840><c> 10</c><00:01:04.159><c> or</c><00:01:04.239><c> whatever</c><00:01:05.040><c> then</c><00:01:05.280><c> it's</c><00:01:05.439><c> also</c><00:01:05.680><c> not</c>

00:01:05.830 --> 00:01:05.840 align:start position:0%
hunt a 10 or whatever then it's also not
 

00:01:05.840 --> 00:01:07.590 align:start position:0%
hunt a 10 or whatever then it's also not
the<00:01:05.920><c> same</c><00:01:06.159><c> tree</c><00:01:06.400><c> because</c><00:01:06.560><c> the</c><00:01:06.720><c> values</c><00:01:07.280><c> in</c><00:01:07.360><c> this</c>

00:01:07.590 --> 00:01:07.600 align:start position:0%
the same tree because the values in this
 

00:01:07.600 --> 00:01:07.910 align:start position:0%
the same tree because the values in this
case

00:01:07.910 --> 00:01:07.920 align:start position:0%
case
 

00:01:07.920 --> 00:01:10.550 align:start position:0%
case
are<00:01:08.080><c> different</c><00:01:08.479><c> right</c><00:01:09.200><c> the</c><00:01:09.680><c> main</c><00:01:10.000><c> thing</c><00:01:10.320><c> to</c>

00:01:10.550 --> 00:01:10.560 align:start position:0%
are different right the main thing to
 

00:01:10.560 --> 00:01:12.230 align:start position:0%
are different right the main thing to
notice<00:01:10.960><c> with</c><00:01:11.119><c> this</c><00:01:11.360><c> problem</c><00:01:11.760><c> is</c><00:01:11.920><c> it</c>

00:01:12.230 --> 00:01:12.240 align:start position:0%
notice with this problem is it
 

00:01:12.240 --> 00:01:15.030 align:start position:0%
notice with this problem is it
lends<00:01:12.560><c> itself</c><00:01:13.200><c> very</c><00:01:13.600><c> well</c><00:01:13.840><c> to</c><00:01:14.000><c> recursion</c><00:01:14.880><c> and</c>

00:01:15.030 --> 00:01:15.040 align:start position:0%
lends itself very well to recursion and
 

00:01:15.040 --> 00:01:16.230 align:start position:0%
lends itself very well to recursion and
we<00:01:15.200><c> know</c><00:01:15.439><c> that</c><00:01:15.680><c> there's</c><00:01:16.000><c> a</c>

00:01:16.230 --> 00:01:16.240 align:start position:0%
we know that there's a
 

00:01:16.240 --> 00:01:18.950 align:start position:0%
we know that there's a
pretty<00:01:16.560><c> convenient</c><00:01:17.360><c> uh</c><00:01:17.680><c> recurs</c><00:01:18.400><c> recursive</c>

00:01:18.950 --> 00:01:18.960 align:start position:0%
pretty convenient uh recurs recursive
 

00:01:18.960 --> 00:01:20.390 align:start position:0%
pretty convenient uh recurs recursive
way<00:01:19.280><c> to</c><00:01:19.520><c> traverse</c>

00:01:20.390 --> 00:01:20.400 align:start position:0%
way to traverse
 

00:01:20.400 --> 00:01:22.550 align:start position:0%
way to traverse
trees<00:01:21.280><c> and</c><00:01:21.439><c> that's</c><00:01:21.759><c> depth</c><00:01:22.000><c> first</c><00:01:22.240><c> search</c>

00:01:22.550 --> 00:01:22.560 align:start position:0%
trees and that's depth first search
 

00:01:22.560 --> 00:01:24.710 align:start position:0%
trees and that's depth first search
we're<00:01:22.720><c> going</c><00:01:22.799><c> to</c><00:01:22.880><c> be</c><00:01:23.040><c> using</c><00:01:23.360><c> that</c><00:01:23.600><c> recursive</c>

00:01:24.710 --> 00:01:24.720 align:start position:0%
we're going to be using that recursive
 

00:01:24.720 --> 00:01:27.990 align:start position:0%
we're going to be using that recursive
uh<00:01:25.200><c> function</c><00:01:25.840><c> to</c><00:01:26.240><c> solve</c><00:01:26.560><c> this</c><00:01:26.799><c> problem</c><00:01:27.439><c> so</c>

00:01:27.990 --> 00:01:28.000 align:start position:0%
uh function to solve this problem so
 

00:01:28.000 --> 00:01:30.149 align:start position:0%
uh function to solve this problem so
remember<00:01:28.479><c> we're</c><00:01:28.720><c> trying</c><00:01:28.960><c> to</c><00:01:29.119><c> check</c><00:01:29.439><c> if</c><00:01:29.759><c> these</c>

00:01:30.149 --> 00:01:30.159 align:start position:0%
remember we're trying to check if these
 

00:01:30.159 --> 00:01:31.190 align:start position:0%
remember we're trying to check if these
are<00:01:30.320><c> the</c><00:01:30.560><c> same</c>

00:01:31.190 --> 00:01:31.200 align:start position:0%
are the same
 

00:01:31.200 --> 00:01:34.310 align:start position:0%
are the same
tree<00:01:31.840><c> right</c><00:01:32.240><c> so</c><00:01:32.560><c> that's</c><00:01:32.960><c> a</c><00:01:33.280><c> big</c><00:01:33.680><c> problem</c><00:01:34.079><c> we're</c>

00:01:34.310 --> 00:01:34.320 align:start position:0%
tree right so that's a big problem we're
 

00:01:34.320 --> 00:01:34.950 align:start position:0%
tree right so that's a big problem we're
comparing

00:01:34.950 --> 00:01:34.960 align:start position:0%
comparing
 

00:01:34.960 --> 00:01:38.390 align:start position:0%
comparing
the<00:01:35.520><c> big</c><00:01:36.159><c> trees</c><00:01:36.640><c> can</c><00:01:36.799><c> we</c><00:01:37.119><c> break</c><00:01:37.520><c> that</c><00:01:37.920><c> down</c>

00:01:38.390 --> 00:01:38.400 align:start position:0%
the big trees can we break that down
 

00:01:38.400 --> 00:01:40.950 align:start position:0%
the big trees can we break that down
recursively<00:01:39.360><c> well</c><00:01:39.920><c> first</c><00:01:40.400><c> thing</c><00:01:40.640><c> to</c>

00:01:40.950 --> 00:01:40.960 align:start position:0%
recursively well first thing to
 

00:01:40.960 --> 00:01:42.149 align:start position:0%
recursively well first thing to
intuitively<00:01:41.600><c> check</c><00:01:41.840><c> is</c>

00:01:42.149 --> 00:01:42.159 align:start position:0%
intuitively check is
 

00:01:42.159 --> 00:01:44.149 align:start position:0%
intuitively check is
we<00:01:42.320><c> really</c><00:01:42.560><c> just</c><00:01:42.720><c> need</c><00:01:42.880><c> to</c><00:01:42.960><c> check</c><00:01:43.439><c> the</c><00:01:43.920><c> root</c>

00:01:44.149 --> 00:01:44.159 align:start position:0%
we really just need to check the root
 

00:01:44.159 --> 00:01:45.910 align:start position:0%
we really just need to check the root
nodes<00:01:44.479><c> right</c><00:01:44.720><c> are</c><00:01:44.960><c> these</c><00:01:45.280><c> the</c><00:01:45.439><c> same</c><00:01:45.680><c> that's</c>

00:01:45.910 --> 00:01:45.920 align:start position:0%
nodes right are these the same that's
 

00:01:45.920 --> 00:01:47.109 align:start position:0%
nodes right are these the same that's
the<00:01:46.079><c> first</c><00:01:46.320><c> thing</c><00:01:46.560><c> to</c><00:01:46.720><c> check</c>

00:01:47.109 --> 00:01:47.119 align:start position:0%
the first thing to check
 

00:01:47.119 --> 00:01:49.830 align:start position:0%
the first thing to check
are<00:01:47.280><c> the</c><00:01:47.439><c> root</c><00:01:47.680><c> nodes</c><00:01:48.000><c> the</c><00:01:48.159><c> same</c><00:01:48.720><c> if</c><00:01:48.880><c> they</c><00:01:49.280><c> are</c>

00:01:49.830 --> 00:01:49.840 align:start position:0%
are the root nodes the same if they are
 

00:01:49.840 --> 00:01:51.670 align:start position:0%
are the root nodes the same if they are
we're<00:01:50.000><c> going</c><00:01:50.159><c> to</c><00:01:50.240><c> continue</c><00:01:50.960><c> the</c><00:01:51.119><c> function</c><00:01:51.439><c> now</c>

00:01:51.670 --> 00:01:51.680 align:start position:0%
we're going to continue the function now
 

00:01:51.680 --> 00:01:53.429 align:start position:0%
we're going to continue the function now
if<00:01:51.759><c> they</c><00:01:51.920><c> were</c><00:01:52.159><c> different</c><00:01:52.560><c> for</c><00:01:52.720><c> example</c><00:01:53.200><c> maybe</c>

00:01:53.429 --> 00:01:53.439 align:start position:0%
if they were different for example maybe
 

00:01:53.439 --> 00:01:54.950 align:start position:0%
if they were different for example maybe
this<00:01:53.680><c> had</c><00:01:53.840><c> a</c><00:01:53.920><c> different</c><00:01:54.240><c> value</c><00:01:54.560><c> if</c><00:01:54.640><c> it</c><00:01:54.720><c> was</c>

00:01:54.950 --> 00:01:54.960 align:start position:0%
this had a different value if it was
 

00:01:54.960 --> 00:01:55.350 align:start position:0%
this had a different value if it was
true

00:01:55.350 --> 00:01:55.360 align:start position:0%
true
 

00:01:55.360 --> 00:01:57.990 align:start position:0%
true
we<00:01:55.680><c> immediately</c><00:01:56.399><c> return</c><00:01:56.880><c> false</c><00:01:57.439><c> right</c><00:01:57.840><c> if</c>

00:01:57.990 --> 00:01:58.000 align:start position:0%
we immediately return false right if
 

00:01:58.000 --> 00:01:59.190 align:start position:0%
we immediately return false right if
even<00:01:58.240><c> a</c><00:01:58.399><c> single</c><00:01:58.799><c> node</c>

00:01:59.190 --> 00:01:59.200 align:start position:0%
even a single node
 

00:01:59.200 --> 00:02:00.789 align:start position:0%
even a single node
doesn't<00:01:59.520><c> match</c><00:01:59.840><c> we</c><00:02:00.000><c> can</c><00:02:00.079><c> return</c><00:02:00.479><c> false</c>

00:02:00.789 --> 00:02:00.799 align:start position:0%
doesn't match we can return false
 

00:02:00.799 --> 00:02:03.109 align:start position:0%
doesn't match we can return false
nothing<00:02:01.200><c> more</c><00:02:01.520><c> is</c><00:02:01.680><c> needed</c><00:02:02.079><c> now</c><00:02:02.320><c> if</c><00:02:02.399><c> they</c><00:02:02.719><c> do</c>

00:02:03.109 --> 00:02:03.119 align:start position:0%
nothing more is needed now if they do
 

00:02:03.119 --> 00:02:05.749 align:start position:0%
nothing more is needed now if they do
match<00:02:03.520><c> right</c><00:02:03.759><c> these</c><00:02:04.000><c> are</c><00:02:04.159><c> equal</c><00:02:04.799><c> great</c><00:02:05.439><c> now</c>

00:02:05.749 --> 00:02:05.759 align:start position:0%
match right these are equal great now
 

00:02:05.759 --> 00:02:07.350 align:start position:0%
match right these are equal great now
this<00:02:06.000><c> is</c><00:02:06.079><c> the</c><00:02:06.240><c> recursive</c><00:02:06.719><c> part</c><00:02:06.960><c> we</c><00:02:07.119><c> don't</c><00:02:07.280><c> have</c>

00:02:07.350 --> 00:02:07.360 align:start position:0%
this is the recursive part we don't have
 

00:02:07.360 --> 00:02:09.109 align:start position:0%
this is the recursive part we don't have
to<00:02:07.520><c> consider</c><00:02:07.920><c> this</c><00:02:08.160><c> node</c><00:02:08.399><c> anymore</c><00:02:08.800><c> and</c><00:02:08.959><c> we</c>

00:02:09.109 --> 00:02:09.119 align:start position:0%
to consider this node anymore and we
 

00:02:09.119 --> 00:02:10.869 align:start position:0%
to consider this node anymore and we
don't<00:02:09.280><c> have</c><00:02:09.360><c> to</c><00:02:09.440><c> consider</c><00:02:09.840><c> this</c><00:02:10.080><c> node</c><00:02:10.319><c> anymore</c>

00:02:10.869 --> 00:02:10.879 align:start position:0%
don't have to consider this node anymore
 

00:02:10.879 --> 00:02:13.510 align:start position:0%
don't have to consider this node anymore
and<00:02:11.120><c> now</c><00:02:11.599><c> we</c><00:02:11.760><c> have</c><00:02:12.080><c> changed</c><00:02:12.560><c> the</c><00:02:12.720><c> problem</c><00:02:13.280><c> now</c>

00:02:13.510 --> 00:02:13.520 align:start position:0%
and now we have changed the problem now
 

00:02:13.520 --> 00:02:14.470 align:start position:0%
and now we have changed the problem now
we<00:02:13.680><c> actually</c><00:02:14.080><c> have</c>

00:02:14.470 --> 00:02:14.480 align:start position:0%
we actually have
 

00:02:14.480 --> 00:02:18.470 align:start position:0%
we actually have
two<00:02:14.879><c> trees</c><00:02:15.520><c> left</c><00:02:16.000><c> we</c><00:02:16.160><c> have</c><00:02:16.480><c> one</c><00:02:17.200><c> left</c><00:02:17.599><c> sub</c><00:02:17.920><c> tree</c>

00:02:18.470 --> 00:02:18.480 align:start position:0%
two trees left we have one left sub tree
 

00:02:18.480 --> 00:02:20.710 align:start position:0%
two trees left we have one left sub tree
right<00:02:18.800><c> these</c><00:02:19.200><c> are</c><00:02:19.360><c> the</c><00:02:19.520><c> left</c><00:02:19.760><c> sub</c><00:02:20.000><c> trees</c><00:02:20.560><c> and</c>

00:02:20.710 --> 00:02:20.720 align:start position:0%
right these are the left sub trees and
 

00:02:20.720 --> 00:02:22.630 align:start position:0%
right these are the left sub trees and
we<00:02:20.879><c> also</c><00:02:21.200><c> have</c><00:02:21.920><c> two</c>

00:02:22.630 --> 00:02:22.640 align:start position:0%
we also have two
 

00:02:22.640 --> 00:02:24.390 align:start position:0%
we also have two
right<00:02:23.120><c> sub</c><00:02:23.360><c> trees</c><00:02:23.599><c> so</c><00:02:23.760><c> this</c><00:02:23.920><c> is</c><00:02:24.000><c> the</c><00:02:24.160><c> right</c>

00:02:24.390 --> 00:02:24.400 align:start position:0%
right sub trees so this is the right
 

00:02:24.400 --> 00:02:25.830 align:start position:0%
right sub trees so this is the right
subtree<00:02:24.959><c> of</c><00:02:25.040><c> the</c><00:02:25.200><c> first</c>

00:02:25.830 --> 00:02:25.840 align:start position:0%
subtree of the first
 

00:02:25.840 --> 00:02:27.589 align:start position:0%
subtree of the first
tree<00:02:26.160><c> and</c><00:02:26.319><c> this</c><00:02:26.560><c> is</c><00:02:26.640><c> the</c><00:02:26.879><c> second</c><00:02:27.360><c> right</c>

00:02:27.589 --> 00:02:27.599 align:start position:0%
tree and this is the second right
 

00:02:27.599 --> 00:02:29.190 align:start position:0%
tree and this is the second right
subtree<00:02:28.160><c> so</c><00:02:28.800><c> now</c>

00:02:29.190 --> 00:02:29.200 align:start position:0%
subtree so now
 

00:02:29.200 --> 00:02:31.509 align:start position:0%
subtree so now
the<00:02:29.440><c> problem</c><00:02:29.840><c> is</c><00:02:30.000><c> change</c><00:02:30.480><c> now</c><00:02:30.720><c> we're</c><00:02:30.959><c> checking</c>

00:02:31.509 --> 00:02:31.519 align:start position:0%
the problem is change now we're checking
 

00:02:31.519 --> 00:02:33.430 align:start position:0%
the problem is change now we're checking
are<00:02:31.920><c> these</c><00:02:32.480><c> two</c><00:02:32.800><c> trees</c>

00:02:33.430 --> 00:02:33.440 align:start position:0%
are these two trees
 

00:02:33.440 --> 00:02:37.350 align:start position:0%
are these two trees
the<00:02:33.680><c> exact</c><00:02:34.080><c> same</c><00:02:35.040><c> and</c><00:02:35.440><c> are</c><00:02:35.840><c> these</c><00:02:36.319><c> two</c><00:02:36.640><c> trees</c>

00:02:37.350 --> 00:02:37.360 align:start position:0%
the exact same and are these two trees
 

00:02:37.360 --> 00:02:39.750 align:start position:0%
the exact same and are these two trees
the<00:02:37.599><c> exact</c><00:02:37.920><c> same</c><00:02:38.319><c> right</c><00:02:38.879><c> so</c><00:02:39.120><c> we've</c><00:02:39.360><c> changed</c>

00:02:39.750 --> 00:02:39.760 align:start position:0%
the exact same right so we've changed
 

00:02:39.760 --> 00:02:40.550 align:start position:0%
the exact same right so we've changed
the<00:02:40.000><c> problem</c>

00:02:40.550 --> 00:02:40.560 align:start position:0%
the problem
 

00:02:40.560 --> 00:02:42.470 align:start position:0%
the problem
it<00:02:40.720><c> becomes</c><00:02:41.200><c> recursive</c><00:02:41.840><c> right</c><00:02:42.000><c> we're</c><00:02:42.319><c> now</c>

00:02:42.470 --> 00:02:42.480 align:start position:0%
it becomes recursive right we're now
 

00:02:42.480 --> 00:02:44.309 align:start position:0%
it becomes recursive right we're now
going<00:02:42.560><c> to</c><00:02:42.640><c> be</c><00:02:42.800><c> looking</c><00:02:43.120><c> at</c><00:02:43.280><c> the</c><00:02:43.519><c> sub</c><00:02:43.840><c> trees</c>

00:02:44.309 --> 00:02:44.319 align:start position:0%
going to be looking at the sub trees
 

00:02:44.319 --> 00:02:45.430 align:start position:0%
going to be looking at the sub trees
comparing<00:02:44.879><c> them</c>

00:02:45.430 --> 00:02:45.440 align:start position:0%
comparing them
 

00:02:45.440 --> 00:02:47.589 align:start position:0%
comparing them
now<00:02:45.840><c> both</c><00:02:46.160><c> of</c><00:02:46.319><c> the</c><00:02:46.480><c> sub</c><00:02:46.720><c> trees</c><00:02:47.120><c> need</c><00:02:47.360><c> to</c><00:02:47.440><c> be</c>

00:02:47.589 --> 00:02:47.599 align:start position:0%
now both of the sub trees need to be
 

00:02:47.599 --> 00:02:49.990 align:start position:0%
now both of the sub trees need to be
equal<00:02:48.000><c> right</c><00:02:48.239><c> these</c><00:02:48.560><c> two</c><00:02:48.800><c> need</c><00:02:48.959><c> to</c><00:02:49.120><c> be</c><00:02:49.280><c> equal</c>

00:02:49.990 --> 00:02:50.000 align:start position:0%
equal right these two need to be equal
 

00:02:50.000 --> 00:02:52.390 align:start position:0%
equal right these two need to be equal
and<00:02:50.400><c> these</c><00:02:50.720><c> two</c><00:02:50.959><c> need</c><00:02:51.120><c> to</c><00:02:51.280><c> be</c><00:02:51.440><c> equal</c><00:02:51.920><c> and</c><00:02:52.160><c> then</c>

00:02:52.390 --> 00:02:52.400 align:start position:0%
and these two need to be equal and then
 

00:02:52.400 --> 00:02:53.830 align:start position:0%
and these two need to be equal and then
we<00:02:52.560><c> can</c><00:02:52.720><c> return</c><00:02:53.200><c> true</c>

00:02:53.830 --> 00:02:53.840 align:start position:0%
we can return true
 

00:02:53.840 --> 00:02:55.509 align:start position:0%
we can return true
and<00:02:54.000><c> we're</c><00:02:54.239><c> just</c><00:02:54.480><c> going</c><00:02:54.560><c> to</c><00:02:54.720><c> continue</c><00:02:55.360><c> to</c>

00:02:55.509 --> 00:02:55.519 align:start position:0%
and we're just going to continue to
 

00:02:55.519 --> 00:02:57.670 align:start position:0%
and we're just going to continue to
break<00:02:55.920><c> this</c><00:02:56.239><c> down</c><00:02:56.720><c> obviously</c><00:02:57.120><c> the</c><00:02:57.280><c> tree</c>

00:02:57.670 --> 00:02:57.680 align:start position:0%
break this down obviously the tree
 

00:02:57.680 --> 00:02:59.990 align:start position:0%
break this down obviously the tree
could<00:02:57.840><c> be</c><00:02:58.080><c> much</c><00:02:58.480><c> larger</c><00:02:58.879><c> than</c><00:02:59.120><c> this</c><00:02:59.599><c> in</c><00:02:59.760><c> which</c>

00:02:59.990 --> 00:03:00.000 align:start position:0%
could be much larger than this in which
 

00:03:00.000 --> 00:03:02.149 align:start position:0%
could be much larger than this in which
case<00:03:00.400><c> we</c><00:03:00.560><c> would</c><00:03:00.720><c> continue</c><00:03:01.120><c> to</c><00:03:01.280><c> do</c><00:03:01.519><c> that</c>

00:03:02.149 --> 00:03:02.159 align:start position:0%
case we would continue to do that
 

00:03:02.159 --> 00:03:04.229 align:start position:0%
case we would continue to do that
now<00:03:02.319><c> let's</c><00:03:02.560><c> not</c><00:03:03.040><c> consider</c><00:03:03.440><c> this</c><00:03:03.680><c> example</c>

00:03:04.229 --> 00:03:04.239 align:start position:0%
now let's not consider this example
 

00:03:04.239 --> 00:03:06.309 align:start position:0%
now let's not consider this example
anymore<00:03:04.800><c> we</c><00:03:04.959><c> know</c><00:03:05.120><c> with</c><00:03:05.280><c> recursive</c><00:03:05.840><c> functions</c>

00:03:06.309 --> 00:03:06.319 align:start position:0%
anymore we know with recursive functions
 

00:03:06.319 --> 00:03:06.630 align:start position:0%
anymore we know with recursive functions
the

00:03:06.630 --> 00:03:06.640 align:start position:0%
the
 

00:03:06.640 --> 00:03:08.550 align:start position:0%
the
the<00:03:06.800><c> main</c><00:03:07.040><c> thing</c><00:03:07.200><c> to</c><00:03:07.360><c> consider</c><00:03:07.840><c> is</c><00:03:08.000><c> the</c><00:03:08.239><c> base</c>

00:03:08.550 --> 00:03:08.560 align:start position:0%
the main thing to consider is the base
 

00:03:08.560 --> 00:03:10.470 align:start position:0%
the main thing to consider is the base
case<00:03:08.879><c> so</c><00:03:09.040><c> what</c><00:03:09.200><c> are</c><00:03:09.360><c> a</c><00:03:09.440><c> couple</c><00:03:09.760><c> base</c><00:03:10.080><c> cases</c>

00:03:10.470 --> 00:03:10.480 align:start position:0%
case so what are a couple base cases
 

00:03:10.480 --> 00:03:11.750 align:start position:0%
case so what are a couple base cases
well<00:03:10.800><c> what</c><00:03:11.040><c> if</c><00:03:11.120><c> we</c><00:03:11.280><c> had</c>

00:03:11.750 --> 00:03:11.760 align:start position:0%
well what if we had
 

00:03:11.760 --> 00:03:14.790 align:start position:0%
well what if we had
two<00:03:12.400><c> null</c><00:03:12.800><c> nodes</c><00:03:13.200><c> right</c><00:03:13.519><c> they're</c><00:03:13.760><c> both</c><00:03:14.239><c> empty</c>

00:03:14.790 --> 00:03:14.800 align:start position:0%
two null nodes right they're both empty
 

00:03:14.800 --> 00:03:16.149 align:start position:0%
two null nodes right they're both empty
what's<00:03:15.360><c> what's</c><00:03:15.680><c> what</c><00:03:15.840><c> are</c><00:03:15.920><c> we</c><00:03:16.000><c> going</c><00:03:16.080><c> to</c>

00:03:16.149 --> 00:03:16.159 align:start position:0%
what's what's what are we going to
 

00:03:16.159 --> 00:03:18.390 align:start position:0%
what's what's what are we going to
return<00:03:16.560><c> then</c><00:03:16.879><c> is</c><00:03:16.959><c> this</c><00:03:17.360><c> the</c><00:03:17.519><c> same</c><00:03:17.840><c> tree</c><00:03:18.080><c> or</c><00:03:18.239><c> is</c>

00:03:18.390 --> 00:03:18.400 align:start position:0%
return then is this the same tree or is
 

00:03:18.400 --> 00:03:19.910 align:start position:0%
return then is this the same tree or is
this<00:03:18.560><c> not</c><00:03:18.720><c> the</c><00:03:18.879><c> same</c><00:03:19.040><c> tree</c><00:03:19.200><c> well</c><00:03:19.360><c> they're</c><00:03:19.599><c> both</c>

00:03:19.910 --> 00:03:19.920 align:start position:0%
this not the same tree well they're both
 

00:03:19.920 --> 00:03:21.430 align:start position:0%
this not the same tree well they're both
empty<00:03:20.400><c> right</c><00:03:20.560><c> so</c><00:03:20.720><c> that's</c><00:03:20.879><c> technically</c><00:03:21.360><c> the</c>

00:03:21.430 --> 00:03:21.440 align:start position:0%
empty right so that's technically the
 

00:03:21.440 --> 00:03:23.270 align:start position:0%
empty right so that's technically the
same<00:03:21.760><c> tree</c><00:03:22.239><c> in</c><00:03:22.319><c> this</c><00:03:22.560><c> base</c><00:03:22.879><c> case</c>

00:03:23.270 --> 00:03:23.280 align:start position:0%
same tree in this base case
 

00:03:23.280 --> 00:03:26.390 align:start position:0%
same tree in this base case
we<00:03:23.519><c> return</c><00:03:24.239><c> true</c><00:03:25.040><c> what</c><00:03:25.280><c> if</c><00:03:25.440><c> the</c><00:03:25.840><c> left</c>

00:03:26.390 --> 00:03:26.400 align:start position:0%
we return true what if the left
 

00:03:26.400 --> 00:03:28.390 align:start position:0%
we return true what if the left
tree<00:03:26.720><c> is</c><00:03:26.959><c> null</c><00:03:27.280><c> but</c><00:03:27.440><c> maybe</c><00:03:27.680><c> the</c><00:03:27.920><c> right</c><00:03:28.159><c> tree</c>

00:03:28.390 --> 00:03:28.400 align:start position:0%
tree is null but maybe the right tree
 

00:03:28.400 --> 00:03:29.750 align:start position:0%
tree is null but maybe the right tree
has<00:03:28.560><c> a</c><00:03:28.720><c> single</c><00:03:29.120><c> node</c><00:03:29.360><c> in</c><00:03:29.519><c> it</c>

00:03:29.750 --> 00:03:29.760 align:start position:0%
has a single node in it
 

00:03:29.760 --> 00:03:31.670 align:start position:0%
has a single node in it
now<00:03:29.920><c> this</c><00:03:30.159><c> is</c><00:03:30.319><c> obviously</c><00:03:30.879><c> going</c><00:03:30.959><c> to</c><00:03:31.040><c> be</c><00:03:31.280><c> false</c>

00:03:31.670 --> 00:03:31.680 align:start position:0%
now this is obviously going to be false
 

00:03:31.680 --> 00:03:33.830 align:start position:0%
now this is obviously going to be false
right<00:03:32.560><c> these</c><00:03:32.799><c> are</c><00:03:32.879><c> not</c><00:03:33.040><c> the</c><00:03:33.120><c> same</c><00:03:33.440><c> tree</c><00:03:33.760><c> and</c>

00:03:33.830 --> 00:03:33.840 align:start position:0%
right these are not the same tree and
 

00:03:33.840 --> 00:03:35.589 align:start position:0%
right these are not the same tree and
the<00:03:34.080><c> exact</c><00:03:34.400><c> same</c><00:03:34.560><c> thing</c><00:03:34.720><c> could</c><00:03:34.879><c> be</c><00:03:35.120><c> true</c><00:03:35.440><c> we</c>

00:03:35.589 --> 00:03:35.599 align:start position:0%
the exact same thing could be true we
 

00:03:35.599 --> 00:03:36.309 align:start position:0%
the exact same thing could be true we
could<00:03:35.760><c> have</c>

00:03:36.309 --> 00:03:36.319 align:start position:0%
could have
 

00:03:36.319 --> 00:03:39.750 align:start position:0%
could have
a<00:03:36.879><c> null</c><00:03:37.360><c> in</c><00:03:37.440><c> the</c><00:03:37.599><c> right</c><00:03:38.080><c> tree</c><00:03:38.480><c> and</c><00:03:38.720><c> a</c><00:03:39.120><c> real</c><00:03:39.440><c> node</c>

00:03:39.750 --> 00:03:39.760 align:start position:0%
a null in the right tree and a real node
 

00:03:39.760 --> 00:03:41.910 align:start position:0%
a null in the right tree and a real node
in<00:03:40.000><c> the</c><00:03:40.239><c> left</c><00:03:40.640><c> tree</c><00:03:40.959><c> and</c><00:03:41.120><c> that</c><00:03:41.200><c> would</c><00:03:41.440><c> also</c><00:03:41.680><c> be</c>

00:03:41.910 --> 00:03:41.920 align:start position:0%
in the left tree and that would also be
 

00:03:41.920 --> 00:03:42.710 align:start position:0%
in the left tree and that would also be
false

00:03:42.710 --> 00:03:42.720 align:start position:0%
false
 

00:03:42.720 --> 00:03:45.589 align:start position:0%
false
now<00:03:43.120><c> the</c><00:03:43.360><c> case</c><00:03:43.680><c> where</c><00:03:44.000><c> both</c><00:03:44.959><c> nodes</c><00:03:45.360><c> are</c>

00:03:45.589 --> 00:03:45.599 align:start position:0%
now the case where both nodes are
 

00:03:45.599 --> 00:03:46.550 align:start position:0%
now the case where both nodes are
non-null

00:03:46.550 --> 00:03:46.560 align:start position:0%
non-null
 

00:03:46.560 --> 00:03:47.750 align:start position:0%
non-null
then<00:03:46.799><c> we're</c><00:03:46.959><c> going</c><00:03:47.040><c> to</c><00:03:47.120><c> be</c><00:03:47.280><c> looking</c><00:03:47.519><c> at</c><00:03:47.599><c> the</c>

00:03:47.750 --> 00:03:47.760 align:start position:0%
then we're going to be looking at the
 

00:03:47.760 --> 00:03:49.830 align:start position:0%
then we're going to be looking at the
values<00:03:48.319><c> obviously</c><00:03:48.799><c> if</c><00:03:48.959><c> the</c><00:03:49.040><c> values</c><00:03:49.519><c> are</c><00:03:49.599><c> the</c>

00:03:49.830 --> 00:03:49.840 align:start position:0%
values obviously if the values are the
 

00:03:49.840 --> 00:03:50.630 align:start position:0%
values obviously if the values are the
same

00:03:50.630 --> 00:03:50.640 align:start position:0%
same
 

00:03:50.640 --> 00:03:52.869 align:start position:0%
same
that's<00:03:51.200><c> true</c><00:03:51.760><c> right</c><00:03:52.319><c> that</c><00:03:52.480><c> we're</c><00:03:52.640><c> going</c><00:03:52.720><c> to</c><00:03:52.799><c> be</c>

00:03:52.869 --> 00:03:52.879 align:start position:0%
that's true right that we're going to be
 

00:03:52.879 --> 00:03:54.630 align:start position:0%
that's true right that we're going to be
returning<00:03:53.280><c> true</c><00:03:53.519><c> they're</c><00:03:53.760><c> the</c><00:03:53.840><c> same</c><00:03:54.080><c> tree</c>

00:03:54.630 --> 00:03:54.640 align:start position:0%
returning true they're the same tree
 

00:03:54.640 --> 00:03:56.309 align:start position:0%
returning true they're the same tree
if<00:03:54.799><c> the</c><00:03:54.879><c> values</c><00:03:55.360><c> are</c><00:03:55.599><c> different</c><00:03:56.000><c> we're</c><00:03:56.239><c> going</c>

00:03:56.309 --> 00:03:56.319 align:start position:0%
if the values are different we're going
 

00:03:56.319 --> 00:03:57.830 align:start position:0%
if the values are different we're going
to<00:03:56.400><c> be</c><00:03:56.480><c> returning</c><00:03:57.040><c> false</c><00:03:57.439><c> so</c>

00:03:57.830 --> 00:03:57.840 align:start position:0%
to be returning false so
 

00:03:57.840 --> 00:03:59.910 align:start position:0%
to be returning false so
these<00:03:58.080><c> are</c><00:03:58.239><c> basically</c><00:03:58.879><c> all</c><00:03:59.120><c> of</c><00:03:59.280><c> the</c><00:03:59.599><c> base</c>

00:03:59.910 --> 00:03:59.920 align:start position:0%
these are basically all of the base
 

00:03:59.920 --> 00:04:01.509 align:start position:0%
these are basically all of the base
cases<00:04:00.400><c> that</c><00:04:00.560><c> i</c><00:04:00.640><c> went</c><00:04:00.879><c> over</c>

00:04:01.509 --> 00:04:01.519 align:start position:0%
cases that i went over
 

00:04:01.519 --> 00:04:04.070 align:start position:0%
cases that i went over
and<00:04:01.680><c> the</c><00:04:01.920><c> code</c><00:04:02.560><c> is</c><00:04:03.120><c> just</c><00:04:03.439><c> basically</c><00:04:03.920><c> going</c><00:04:04.000><c> to</c>

00:04:04.070 --> 00:04:04.080 align:start position:0%
and the code is just basically going to
 

00:04:04.080 --> 00:04:05.910 align:start position:0%
and the code is just basically going to
be<00:04:04.319><c> implementing</c><00:04:04.879><c> exactly</c><00:04:05.360><c> what</c><00:04:05.519><c> we</c><00:04:05.680><c> just</c>

00:04:05.910 --> 00:04:05.920 align:start position:0%
be implementing exactly what we just
 

00:04:05.920 --> 00:04:08.070 align:start position:0%
be implementing exactly what we just
showed<00:04:06.319><c> right</c><00:04:06.560><c> now</c><00:04:06.799><c> so</c><00:04:06.959><c> let's</c><00:04:07.200><c> jump</c><00:04:07.599><c> into</c><00:04:07.840><c> that</c>

00:04:08.070 --> 00:04:08.080 align:start position:0%
showed right now so let's jump into that
 

00:04:08.080 --> 00:04:10.149 align:start position:0%
showed right now so let's jump into that
oh<00:04:08.319><c> and</c><00:04:08.560><c> last</c><00:04:08.879><c> but</c><00:04:09.120><c> not</c><00:04:09.439><c> least</c>

00:04:10.149 --> 00:04:10.159 align:start position:0%
oh and last but not least
 

00:04:10.159 --> 00:04:12.149 align:start position:0%
oh and last but not least
the<00:04:10.400><c> time</c><00:04:10.720><c> complexity</c><00:04:11.280><c> of</c><00:04:11.360><c> this</c><00:04:11.680><c> so</c><00:04:11.840><c> the</c><00:04:11.920><c> time</c>

00:04:12.149 --> 00:04:12.159 align:start position:0%
the time complexity of this so the time
 

00:04:12.159 --> 00:04:13.830 align:start position:0%
the time complexity of this so the time
complexity<00:04:12.720><c> is</c><00:04:12.879><c> overall</c><00:04:13.280><c> going</c><00:04:13.439><c> to</c><00:04:13.519><c> be</c>

00:04:13.830 --> 00:04:13.840 align:start position:0%
complexity is overall going to be
 

00:04:13.840 --> 00:04:16.629 align:start position:0%
complexity is overall going to be
basically<00:04:14.319><c> the</c><00:04:14.640><c> size</c><00:04:15.200><c> of</c><00:04:15.439><c> both</c><00:04:15.840><c> trees</c><00:04:16.320><c> added</c>

00:04:16.629 --> 00:04:16.639 align:start position:0%
basically the size of both trees added
 

00:04:16.639 --> 00:04:18.150 align:start position:0%
basically the size of both trees added
together<00:04:16.959><c> so</c><00:04:17.120><c> the</c><00:04:17.280><c> size</c><00:04:17.600><c> of</c><00:04:17.840><c> p</c>

00:04:18.150 --> 00:04:18.160 align:start position:0%
together so the size of p
 

00:04:18.160 --> 00:04:20.390 align:start position:0%
together so the size of p
plus<00:04:18.560><c> q</c><00:04:18.880><c> because</c><00:04:19.199><c> worst</c><00:04:19.680><c> case</c><00:04:20.000><c> we</c><00:04:20.160><c> would</c><00:04:20.320><c> have</c>

00:04:20.390 --> 00:04:20.400 align:start position:0%
plus q because worst case we would have
 

00:04:20.400 --> 00:04:22.790 align:start position:0%
plus q because worst case we would have
to<00:04:20.560><c> iterate</c><00:04:21.040><c> through</c><00:04:21.359><c> every</c><00:04:21.680><c> single</c><00:04:22.160><c> node</c>

00:04:22.790 --> 00:04:22.800 align:start position:0%
to iterate through every single node
 

00:04:22.800 --> 00:04:25.670 align:start position:0%
to iterate through every single node
in<00:04:23.120><c> both</c><00:04:23.600><c> trees</c><00:04:24.320><c> so</c><00:04:24.560><c> that's</c><00:04:24.960><c> basically</c><00:04:25.440><c> the</c>

00:04:25.670 --> 00:04:25.680 align:start position:0%
in both trees so that's basically the
 

00:04:25.680 --> 00:04:27.430 align:start position:0%
in both trees so that's basically the
overall<00:04:26.160><c> time</c><00:04:26.400><c> complexity</c>

00:04:27.430 --> 00:04:27.440 align:start position:0%
overall time complexity
 

00:04:27.440 --> 00:04:28.950 align:start position:0%
overall time complexity
so<00:04:27.840><c> like</c><00:04:28.080><c> i</c><00:04:28.160><c> said</c><00:04:28.320><c> this</c><00:04:28.479><c> is</c><00:04:28.560><c> going</c><00:04:28.639><c> to</c><00:04:28.800><c> be</c><00:04:28.880><c> a</c>

00:04:28.950 --> 00:04:28.960 align:start position:0%
so like i said this is going to be a
 

00:04:28.960 --> 00:04:30.870 align:start position:0%
so like i said this is going to be a
recursive<00:04:29.440><c> function</c><00:04:29.840><c> since</c><00:04:30.080><c> we</c><00:04:30.320><c> already</c><00:04:30.639><c> went</c>

00:04:30.870 --> 00:04:30.880 align:start position:0%
recursive function since we already went
 

00:04:30.880 --> 00:04:32.390 align:start position:0%
recursive function since we already went
through<00:04:31.040><c> most</c><00:04:31.360><c> of</c><00:04:31.440><c> the</c><00:04:31.520><c> base</c><00:04:31.759><c> cases</c><00:04:32.160><c> this</c><00:04:32.320><c> is</c>

00:04:32.390 --> 00:04:32.400 align:start position:0%
through most of the base cases this is
 

00:04:32.400 --> 00:04:34.310 align:start position:0%
through most of the base cases this is
going<00:04:32.479><c> to</c><00:04:32.560><c> be</c><00:04:32.720><c> pretty</c><00:04:33.040><c> easy</c><00:04:33.520><c> peasy</c><00:04:34.000><c> so</c>

00:04:34.310 --> 00:04:34.320 align:start position:0%
going to be pretty easy peasy so
 

00:04:34.320 --> 00:04:36.070 align:start position:0%
going to be pretty easy peasy so
if<00:04:34.479><c> you</c><00:04:34.639><c> know</c><00:04:34.880><c> debt</c><00:04:35.040><c> first</c><00:04:35.199><c> search</c><00:04:35.520><c> already</c><00:04:35.919><c> we</c>

00:04:36.070 --> 00:04:36.080 align:start position:0%
if you know debt first search already we
 

00:04:36.080 --> 00:04:37.670 align:start position:0%
if you know debt first search already we
know<00:04:36.240><c> the</c><00:04:36.400><c> base</c><00:04:36.639><c> case</c><00:04:36.880><c> is</c><00:04:37.040><c> important</c>

00:04:37.670 --> 00:04:37.680 align:start position:0%
know the base case is important
 

00:04:37.680 --> 00:04:40.629 align:start position:0%
know the base case is important
so<00:04:37.759><c> if</c><00:04:37.919><c> the</c><00:04:38.000><c> first</c><00:04:38.320><c> tree</c><00:04:38.720><c> is</c><00:04:39.040><c> empty</c><00:04:39.759><c> and</c><00:04:40.160><c> if</c><00:04:40.400><c> the</c>

00:04:40.629 --> 00:04:40.639 align:start position:0%
so if the first tree is empty and if the
 

00:04:40.639 --> 00:04:42.230 align:start position:0%
so if the first tree is empty and if the
second<00:04:40.960><c> tree</c><00:04:41.280><c> is</c><00:04:41.440><c> empty</c><00:04:41.759><c> so</c>

00:04:42.230 --> 00:04:42.240 align:start position:0%
second tree is empty so
 

00:04:42.240 --> 00:04:45.590 align:start position:0%
second tree is empty so
if<00:04:42.560><c> p</c><00:04:43.120><c> and</c><00:04:43.520><c> q</c><00:04:44.000><c> are</c><00:04:44.320><c> empty</c><00:04:45.040><c> then</c><00:04:45.280><c> what</c><00:04:45.440><c> are</c><00:04:45.520><c> we</c>

00:04:45.590 --> 00:04:45.600 align:start position:0%
if p and q are empty then what are we
 

00:04:45.600 --> 00:04:46.230 align:start position:0%
if p and q are empty then what are we
gonna<00:04:45.919><c> do</c>

00:04:46.230 --> 00:04:46.240 align:start position:0%
gonna do
 

00:04:46.240 --> 00:04:47.909 align:start position:0%
gonna do
we're<00:04:46.400><c> gonna</c><00:04:46.560><c> return</c><00:04:47.040><c> true</c><00:04:47.440><c> because</c><00:04:47.759><c> they're</c>

00:04:47.909 --> 00:04:47.919 align:start position:0%
we're gonna return true because they're
 

00:04:47.919 --> 00:04:50.230 align:start position:0%
we're gonna return true because they're
both<00:04:48.320><c> empty</c><00:04:48.639><c> trees</c><00:04:49.199><c> empty</c><00:04:49.600><c> trees</c><00:04:50.000><c> are</c>

00:04:50.230 --> 00:04:50.240 align:start position:0%
both empty trees empty trees are
 

00:04:50.240 --> 00:04:51.590 align:start position:0%
both empty trees empty trees are
technically<00:04:50.800><c> equal</c>

00:04:51.590 --> 00:04:51.600 align:start position:0%
technically equal
 

00:04:51.600 --> 00:04:54.310 align:start position:0%
technically equal
now<00:04:51.840><c> if</c><00:04:52.000><c> they're</c><00:04:52.320><c> both</c><00:04:52.960><c> not</c><00:04:53.280><c> empty</c><00:04:53.600><c> but</c><00:04:53.840><c> maybe</c>

00:04:54.310 --> 00:04:54.320 align:start position:0%
now if they're both not empty but maybe
 

00:04:54.320 --> 00:04:55.110 align:start position:0%
now if they're both not empty but maybe
one<00:04:54.560><c> of</c><00:04:54.720><c> them</c>

00:04:55.110 --> 00:04:55.120 align:start position:0%
one of them
 

00:04:55.120 --> 00:04:57.590 align:start position:0%
one of them
is<00:04:55.280><c> empty</c><00:04:55.600><c> so</c><00:04:55.759><c> if</c><00:04:56.000><c> this</c><00:04:56.800><c> this</c><00:04:56.960><c> statement</c><00:04:57.360><c> did</c>

00:04:57.590 --> 00:04:57.600 align:start position:0%
is empty so if this this statement did
 

00:04:57.600 --> 00:04:58.550 align:start position:0%
is empty so if this this statement did
not<00:04:57.840><c> execute</c>

00:04:58.550 --> 00:04:58.560 align:start position:0%
not execute
 

00:04:58.560 --> 00:04:59.749 align:start position:0%
not execute
then<00:04:58.720><c> we're</c><00:04:58.880><c> going</c><00:04:58.960><c> to</c><00:04:59.040><c> go</c><00:04:59.199><c> to</c><00:04:59.360><c> the</c><00:04:59.440><c> next</c><00:04:59.600><c> one</c>

00:04:59.749 --> 00:04:59.759 align:start position:0%
then we're going to go to the next one
 

00:04:59.759 --> 00:05:02.070 align:start position:0%
then we're going to go to the next one
so<00:05:00.000><c> if</c><00:05:00.240><c> not</c><00:05:00.560><c> p</c><00:05:01.199><c> or</c>

00:05:02.070 --> 00:05:02.080 align:start position:0%
so if not p or
 

00:05:02.080 --> 00:05:04.390 align:start position:0%
so if not p or
not<00:05:02.639><c> q</c><00:05:03.039><c> the</c><00:05:03.120><c> only</c><00:05:03.360><c> thing</c><00:05:03.600><c> difference</c><00:05:04.000><c> between</c>

00:05:04.390 --> 00:05:04.400 align:start position:0%
not q the only thing difference between
 

00:05:04.400 --> 00:05:06.870 align:start position:0%
not q the only thing difference between
this<00:05:04.880><c> and</c><00:05:05.199><c> the</c><00:05:05.440><c> one</c><00:05:05.600><c> above</c><00:05:06.000><c> is</c><00:05:06.160><c> this</c><00:05:06.320><c> one</c><00:05:06.560><c> is</c>

00:05:06.870 --> 00:05:06.880 align:start position:0%
this and the one above is this one is
 

00:05:06.880 --> 00:05:09.670 align:start position:0%
this and the one above is this one is
and<00:05:07.440><c> this</c><00:05:07.680><c> one</c><00:05:07.919><c> is</c><00:05:08.240><c> or</c><00:05:08.560><c> so</c><00:05:08.720><c> if</c><00:05:08.880><c> this</c><00:05:09.199><c> one</c><00:05:09.440><c> did</c>

00:05:09.670 --> 00:05:09.680 align:start position:0%
and this one is or so if this one did
 

00:05:09.680 --> 00:05:10.070 align:start position:0%
and this one is or so if this one did
not

00:05:10.070 --> 00:05:10.080 align:start position:0%
not
 

00:05:10.080 --> 00:05:12.550 align:start position:0%
not
execute<00:05:10.720><c> that</c><00:05:10.960><c> means</c><00:05:11.520><c> both</c><00:05:11.759><c> of</c><00:05:11.919><c> them</c><00:05:12.160><c> are</c><00:05:12.320><c> not</c>

00:05:12.550 --> 00:05:12.560 align:start position:0%
execute that means both of them are not
 

00:05:12.560 --> 00:05:13.510 align:start position:0%
execute that means both of them are not
null<00:05:12.960><c> but</c><00:05:13.199><c> if</c>

00:05:13.510 --> 00:05:13.520 align:start position:0%
null but if
 

00:05:13.520 --> 00:05:16.390 align:start position:0%
null but if
this<00:05:13.840><c> executes</c><00:05:14.560><c> that</c><00:05:14.720><c> means</c><00:05:15.440><c> only</c><00:05:16.080><c> one</c><00:05:16.240><c> of</c>

00:05:16.390 --> 00:05:16.400 align:start position:0%
this executes that means only one of
 

00:05:16.400 --> 00:05:16.790 align:start position:0%
this executes that means only one of
them

00:05:16.790 --> 00:05:16.800 align:start position:0%
them
 

00:05:16.800 --> 00:05:19.029 align:start position:0%
them
is<00:05:17.039><c> null</c><00:05:17.520><c> now</c><00:05:17.759><c> what</c><00:05:17.919><c> happens</c><00:05:18.240><c> if</c><00:05:18.560><c> one</c><00:05:18.720><c> of</c><00:05:18.800><c> them</c>

00:05:19.029 --> 00:05:19.039 align:start position:0%
is null now what happens if one of them
 

00:05:19.039 --> 00:05:20.950 align:start position:0%
is null now what happens if one of them
is<00:05:19.280><c> null</c><00:05:19.680><c> but</c><00:05:19.919><c> the</c><00:05:20.160><c> other</c><00:05:20.400><c> one</c><00:05:20.639><c> is</c>

00:05:20.950 --> 00:05:20.960 align:start position:0%
is null but the other one is
 

00:05:20.960 --> 00:05:23.510 align:start position:0%
is null but the other one is
not<00:05:21.199><c> null</c><00:05:21.759><c> well</c><00:05:22.000><c> then</c><00:05:22.639><c> they're</c><00:05:22.880><c> not</c><00:05:23.120><c> the</c><00:05:23.199><c> same</c>

00:05:23.510 --> 00:05:23.520 align:start position:0%
not null well then they're not the same
 

00:05:23.520 --> 00:05:24.950 align:start position:0%
not null well then they're not the same
tree<00:05:23.840><c> right</c><00:05:24.080><c> so</c><00:05:24.320><c> we're</c><00:05:24.479><c> going</c><00:05:24.639><c> to</c><00:05:24.720><c> have</c><00:05:24.880><c> to</c>

00:05:24.950 --> 00:05:24.960 align:start position:0%
tree right so we're going to have to
 

00:05:24.960 --> 00:05:26.790 align:start position:0%
tree right so we're going to have to
return<00:05:25.360><c> false</c><00:05:25.680><c> in</c><00:05:25.840><c> that</c><00:05:26.080><c> case</c>

00:05:26.790 --> 00:05:26.800 align:start position:0%
return false in that case
 

00:05:26.800 --> 00:05:28.870 align:start position:0%
return false in that case
and<00:05:26.960><c> we</c><00:05:27.120><c> had</c><00:05:27.440><c> one</c><00:05:27.680><c> more</c><00:05:28.000><c> base</c><00:05:28.240><c> case</c><00:05:28.479><c> right</c><00:05:28.639><c> so</c>

00:05:28.870 --> 00:05:28.880 align:start position:0%
and we had one more base case right so
 

00:05:28.880 --> 00:05:31.430 align:start position:0%
and we had one more base case right so
let's<00:05:29.120><c> say</c><00:05:29.759><c> if</c><00:05:30.000><c> neither</c><00:05:30.320><c> of</c><00:05:30.560><c> these</c><00:05:30.880><c> statements</c>

00:05:31.430 --> 00:05:31.440 align:start position:0%
let's say if neither of these statements
 

00:05:31.440 --> 00:05:32.070 align:start position:0%
let's say if neither of these statements
executes

00:05:32.070 --> 00:05:32.080 align:start position:0%
executes
 

00:05:32.080 --> 00:05:34.150 align:start position:0%
executes
that<00:05:32.240><c> means</c><00:05:32.560><c> that</c><00:05:32.880><c> both</c><00:05:33.199><c> of</c><00:05:33.280><c> the</c><00:05:33.440><c> trees</c><00:05:33.840><c> are</c>

00:05:34.150 --> 00:05:34.160 align:start position:0%
that means that both of the trees are
 

00:05:34.160 --> 00:05:35.670 align:start position:0%
that means that both of the trees are
non-empty<00:05:35.120><c> so</c>

00:05:35.670 --> 00:05:35.680 align:start position:0%
non-empty so
 

00:05:35.680 --> 00:05:37.670 align:start position:0%
non-empty so
now<00:05:35.919><c> we</c><00:05:36.000><c> can</c><00:05:36.240><c> actually</c><00:05:36.560><c> look</c><00:05:36.720><c> at</c><00:05:36.800><c> the</c><00:05:37.039><c> values</c>

00:05:37.670 --> 00:05:37.680 align:start position:0%
now we can actually look at the values
 

00:05:37.680 --> 00:05:38.950 align:start position:0%
now we can actually look at the values
so<00:05:37.919><c> if</c><00:05:38.080><c> p</c><00:05:38.479><c> dot</c>

00:05:38.950 --> 00:05:38.960 align:start position:0%
so if p dot
 

00:05:38.960 --> 00:05:43.110 align:start position:0%
so if p dot
val<00:05:39.840><c> is</c><00:05:40.479><c> not</c><00:05:40.960><c> equal</c><00:05:41.600><c> to</c><00:05:41.919><c> q</c><00:05:42.160><c> dot</c><00:05:42.479><c> val</c>

00:05:43.110 --> 00:05:43.120 align:start position:0%
val is not equal to q dot val
 

00:05:43.120 --> 00:05:45.590 align:start position:0%
val is not equal to q dot val
what<00:05:43.280><c> does</c><00:05:43.520><c> that</c><00:05:43.759><c> tell</c><00:05:44.080><c> us</c><00:05:44.639><c> that</c><00:05:44.880><c> tells</c><00:05:45.280><c> us</c>

00:05:45.590 --> 00:05:45.600 align:start position:0%
what does that tell us that tells us
 

00:05:45.600 --> 00:05:47.270 align:start position:0%
what does that tell us that tells us
that<00:05:45.840><c> the</c><00:05:46.000><c> values</c><00:05:46.400><c> are</c><00:05:46.560><c> not</c><00:05:46.720><c> the</c><00:05:46.800><c> same</c><00:05:46.960><c> so</c><00:05:47.120><c> the</c>

00:05:47.270 --> 00:05:47.280 align:start position:0%
that the values are not the same so the
 

00:05:47.280 --> 00:05:48.310 align:start position:0%
that the values are not the same so the
trees<00:05:47.520><c> are</c><00:05:47.680><c> not</c><00:05:47.840><c> the</c><00:05:47.919><c> same</c>

00:05:48.310 --> 00:05:48.320 align:start position:0%
trees are not the same
 

00:05:48.320 --> 00:05:51.350 align:start position:0%
trees are not the same
so<00:05:48.960><c> we</c><00:05:49.120><c> can</c><00:05:49.280><c> return</c><00:05:50.000><c> false</c><00:05:50.320><c> in</c><00:05:50.400><c> this</c><00:05:50.639><c> case</c>

00:05:51.350 --> 00:05:51.360 align:start position:0%
so we can return false in this case
 

00:05:51.360 --> 00:05:53.749 align:start position:0%
so we can return false in this case
one<00:05:51.600><c> thing</c><00:05:51.759><c> to</c><00:05:51.919><c> notice</c><00:05:52.320><c> here</c><00:05:52.560><c> is</c><00:05:52.639><c> that</c><00:05:53.120><c> both</c><00:05:53.520><c> of</c>

00:05:53.749 --> 00:05:53.759 align:start position:0%
one thing to notice here is that both of
 

00:05:53.759 --> 00:05:54.550 align:start position:0%
one thing to notice here is that both of
these<00:05:54.160><c> two</c>

00:05:54.550 --> 00:05:54.560 align:start position:0%
these two
 

00:05:54.560 --> 00:05:56.629 align:start position:0%
these two
are<00:05:54.800><c> executing</c><00:05:55.360><c> the</c><00:05:55.520><c> exact</c><00:05:55.919><c> same</c><00:05:56.160><c> thing</c><00:05:56.400><c> right</c>

00:05:56.629 --> 00:05:56.639 align:start position:0%
are executing the exact same thing right
 

00:05:56.639 --> 00:05:57.909 align:start position:0%
are executing the exact same thing right
this<00:05:56.800><c> is</c><00:05:56.960><c> returning</c><00:05:57.440><c> false</c>

00:05:57.909 --> 00:05:57.919 align:start position:0%
this is returning false
 

00:05:57.919 --> 00:05:59.749 align:start position:0%
this is returning false
and<00:05:58.160><c> this</c><00:05:58.400><c> is</c><00:05:58.479><c> returning</c><00:05:58.960><c> false</c><00:05:59.280><c> so</c><00:05:59.440><c> we</c><00:05:59.600><c> can</c>

00:05:59.749 --> 00:05:59.759 align:start position:0%
and this is returning false so we can
 

00:05:59.759 --> 00:06:01.510 align:start position:0%
and this is returning false so we can
actually<00:06:00.080><c> condense</c><00:06:00.639><c> this</c><00:06:00.800><c> i'm</c><00:06:00.960><c> going</c><00:06:01.039><c> to</c><00:06:01.120><c> copy</c>

00:06:01.510 --> 00:06:01.520 align:start position:0%
actually condense this i'm going to copy
 

00:06:01.520 --> 00:06:03.029 align:start position:0%
actually condense this i'm going to copy
and<00:06:01.600><c> paste</c><00:06:01.919><c> this</c><00:06:02.080><c> here</c><00:06:02.400><c> so</c><00:06:02.639><c> if</c>

00:06:03.029 --> 00:06:03.039 align:start position:0%
and paste this here so if
 

00:06:03.039 --> 00:06:06.070 align:start position:0%
and paste this here so if
if<00:06:03.600><c> this</c><00:06:04.000><c> is</c><00:06:04.240><c> true</c><00:06:04.800><c> or</c><00:06:05.680><c> if</c>

00:06:06.070 --> 00:06:06.080 align:start position:0%
if this is true or if
 

00:06:06.080 --> 00:06:08.550 align:start position:0%
if this is true or if
this<00:06:06.400><c> last</c><00:06:06.720><c> thing</c><00:06:06.960><c> is</c><00:06:07.120><c> true</c><00:06:07.680><c> then</c><00:06:07.840><c> we</c><00:06:08.000><c> can</c><00:06:08.240><c> also</c>

00:06:08.550 --> 00:06:08.560 align:start position:0%
this last thing is true then we can also
 

00:06:08.560 --> 00:06:10.550 align:start position:0%
this last thing is true then we can also
return<00:06:08.880><c> false</c><00:06:09.199><c> we</c><00:06:09.360><c> don't</c><00:06:09.600><c> actually</c><00:06:09.919><c> need</c>

00:06:10.550 --> 00:06:10.560 align:start position:0%
return false we don't actually need
 

00:06:10.560 --> 00:06:13.110 align:start position:0%
return false we don't actually need
this<00:06:11.039><c> third</c><00:06:11.360><c> condition</c><00:06:12.400><c> so</c><00:06:12.639><c> if</c><00:06:12.880><c> this</c>

00:06:13.110 --> 00:06:13.120 align:start position:0%
this third condition so if this
 

00:06:13.120 --> 00:06:14.790 align:start position:0%
this third condition so if this
statement<00:06:13.600><c> does</c><00:06:13.840><c> not</c><00:06:14.080><c> execute</c>

00:06:14.790 --> 00:06:14.800 align:start position:0%
statement does not execute
 

00:06:14.800 --> 00:06:17.510 align:start position:0%
statement does not execute
that<00:06:15.039><c> means</c><00:06:15.520><c> that</c><00:06:15.840><c> both</c><00:06:16.160><c> of</c><00:06:16.240><c> the</c><00:06:16.479><c> nodes</c><00:06:17.039><c> p</c><00:06:17.360><c> and</c>

00:06:17.510 --> 00:06:17.520 align:start position:0%
that means that both of the nodes p and
 

00:06:17.520 --> 00:06:17.830 align:start position:0%
that means that both of the nodes p and
q

00:06:17.830 --> 00:06:17.840 align:start position:0%
q
 

00:06:17.840 --> 00:06:21.029 align:start position:0%
q
are<00:06:18.160><c> not</c><00:06:18.560><c> are</c><00:06:19.360><c> are</c><00:06:19.520><c> non-empty</c><00:06:20.240><c> right</c><00:06:20.639><c> and</c><00:06:20.880><c> the</c>

00:06:21.029 --> 00:06:21.039 align:start position:0%
are not are are non-empty right and the
 

00:06:21.039 --> 00:06:23.510 align:start position:0%
are not are are non-empty right and the
values<00:06:21.600><c> are</c><00:06:21.759><c> actually</c><00:06:22.160><c> the</c><00:06:22.479><c> same</c>

00:06:23.510 --> 00:06:23.520 align:start position:0%
values are actually the same
 

00:06:23.520 --> 00:06:25.110 align:start position:0%
values are actually the same
because<00:06:23.840><c> if</c><00:06:23.919><c> this</c><00:06:24.080><c> does</c><00:06:24.240><c> not</c><00:06:24.479><c> execute</c><00:06:24.880><c> so</c><00:06:24.960><c> then</c>

00:06:25.110 --> 00:06:25.120 align:start position:0%
because if this does not execute so then
 

00:06:25.120 --> 00:06:26.629 align:start position:0%
because if this does not execute so then
what<00:06:25.199><c> are</c><00:06:25.280><c> we</c><00:06:25.440><c> going</c><00:06:25.520><c> to</c><00:06:25.600><c> do</c><00:06:25.840><c> over</c><00:06:26.160><c> here</c><00:06:26.479><c> now</c>

00:06:26.629 --> 00:06:26.639 align:start position:0%
what are we going to do over here now
 

00:06:26.639 --> 00:06:28.710 align:start position:0%
what are we going to do over here now
we're<00:06:26.800><c> going</c><00:06:26.880><c> to</c><00:06:26.960><c> do</c><00:06:27.120><c> the</c><00:06:27.280><c> recursive</c><00:06:28.160><c> step</c>

00:06:28.710 --> 00:06:28.720 align:start position:0%
we're going to do the recursive step
 

00:06:28.720 --> 00:06:31.830 align:start position:0%
we're going to do the recursive step
we're<00:06:28.880><c> going</c><00:06:29.039><c> to</c><00:06:29.199><c> call</c><00:06:30.080><c> is</c><00:06:30.639><c> same</c><00:06:31.039><c> tree</c>

00:06:31.830 --> 00:06:31.840 align:start position:0%
we're going to call is same tree
 

00:06:31.840 --> 00:06:35.590 align:start position:0%
we're going to call is same tree
on<00:06:32.080><c> the</c><00:06:32.479><c> left</c><00:06:32.880><c> and</c><00:06:33.199><c> right</c><00:06:33.600><c> subtree</c><00:06:34.160><c> so</c><00:06:34.319><c> if</c><00:06:34.560><c> p</c>

00:06:35.590 --> 00:06:35.600 align:start position:0%
on the left and right subtree so if p
 

00:06:35.600 --> 00:06:37.830 align:start position:0%
on the left and right subtree so if p
we're<00:06:35.759><c> going</c><00:06:35.840><c> to</c><00:06:35.919><c> call</c><00:06:36.080><c> it</c><00:06:36.240><c> on</c><00:06:36.400><c> p</c><00:06:36.720><c> left</c><00:06:37.199><c> and</c><00:06:37.440><c> q</c>

00:06:37.830 --> 00:06:37.840 align:start position:0%
we're going to call it on p left and q
 

00:06:37.840 --> 00:06:38.790 align:start position:0%
we're going to call it on p left and q
left

00:06:38.790 --> 00:06:38.800 align:start position:0%
left
 

00:06:38.800 --> 00:06:42.629 align:start position:0%
left
and<00:06:39.120><c> we're</c><00:06:39.280><c> going</c><00:06:39.440><c> to</c><00:06:39.600><c> call</c><00:06:39.840><c> it</c><00:06:40.479><c> on</c><00:06:41.280><c> p</c><00:06:41.759><c> right</c>

00:06:42.629 --> 00:06:42.639 align:start position:0%
and we're going to call it on p right
 

00:06:42.639 --> 00:06:45.670 align:start position:0%
and we're going to call it on p right
and<00:06:43.039><c> q</c><00:06:43.360><c> right</c><00:06:44.800><c> and</c><00:06:45.039><c> what</c><00:06:45.199><c> do</c><00:06:45.360><c> we</c>

00:06:45.670 --> 00:06:45.680 align:start position:0%
and q right and what do we
 

00:06:45.680 --> 00:06:48.469 align:start position:0%
and q right and what do we
want<00:06:46.000><c> to</c><00:06:46.240><c> know</c><00:06:46.880><c> from</c><00:06:47.520><c> for</c><00:06:47.680><c> the</c><00:06:48.080><c> when</c><00:06:48.319><c> we're</c>

00:06:48.469 --> 00:06:48.479 align:start position:0%
want to know from for the when we're
 

00:06:48.479 --> 00:06:50.070 align:start position:0%
want to know from for the when we're
comparing<00:06:49.039><c> the</c><00:06:49.199><c> left</c><00:06:49.520><c> tree</c>

00:06:50.070 --> 00:06:50.080 align:start position:0%
comparing the left tree
 

00:06:50.080 --> 00:06:51.830 align:start position:0%
comparing the left tree
and<00:06:50.400><c> the</c><00:06:50.639><c> right</c><00:06:50.960><c> trees</c><00:06:51.280><c> what</c><00:06:51.440><c> do</c><00:06:51.520><c> we</c><00:06:51.599><c> want</c><00:06:51.759><c> to</c>

00:06:51.830 --> 00:06:51.840 align:start position:0%
and the right trees what do we want to
 

00:06:51.840 --> 00:06:53.510 align:start position:0%
and the right trees what do we want to
know<00:06:52.080><c> we</c><00:06:52.160><c> want</c><00:06:52.319><c> to</c><00:06:52.400><c> know</c><00:06:52.639><c> that</c><00:06:52.960><c> both</c>

00:06:53.510 --> 00:06:53.520 align:start position:0%
know we want to know that both
 

00:06:53.520 --> 00:06:55.909 align:start position:0%
know we want to know that both
of<00:06:53.599><c> the</c><00:06:54.160><c> the</c><00:06:54.400><c> left</c><00:06:54.720><c> sub</c><00:06:54.960><c> trees</c><00:06:55.360><c> and</c><00:06:55.520><c> the</c><00:06:55.680><c> right</c>

00:06:55.909 --> 00:06:55.919 align:start position:0%
of the the left sub trees and the right
 

00:06:55.919 --> 00:06:56.550 align:start position:0%
of the the left sub trees and the right
sub<00:06:56.160><c> trees</c>

00:06:56.550 --> 00:06:56.560 align:start position:0%
sub trees
 

00:06:56.560 --> 00:06:59.350 align:start position:0%
sub trees
are<00:06:56.880><c> equal</c><00:06:57.199><c> so</c><00:06:57.360><c> we</c><00:06:57.599><c> want</c><00:06:57.919><c> this</c><00:06:58.240><c> to</c><00:06:58.319><c> be</c><00:06:58.560><c> true</c><00:06:59.199><c> and</c>

00:06:59.350 --> 00:06:59.360 align:start position:0%
are equal so we want this to be true and
 

00:06:59.360 --> 00:07:01.589 align:start position:0%
are equal so we want this to be true and
we<00:06:59.599><c> want</c><00:06:59.840><c> this</c><00:07:00.080><c> to</c><00:07:00.319><c> return</c><00:07:00.720><c> true</c><00:07:01.120><c> as</c><00:07:01.280><c> well</c><00:07:01.520><c> so</c>

00:07:01.589 --> 00:07:01.599 align:start position:0%
we want this to return true as well so
 

00:07:01.599 --> 00:07:02.469 align:start position:0%
we want this to return true as well so
we're<00:07:01.759><c> gonna</c><00:07:02.000><c> take</c>

00:07:02.469 --> 00:07:02.479 align:start position:0%
we're gonna take
 

00:07:02.479 --> 00:07:05.909 align:start position:0%
we're gonna take
these<00:07:02.880><c> two</c><00:07:03.520><c> uh</c><00:07:04.400><c> the</c><00:07:04.560><c> return</c><00:07:05.039><c> values</c><00:07:05.440><c> of</c><00:07:05.599><c> these</c>

00:07:05.909 --> 00:07:05.919 align:start position:0%
these two uh the return values of these
 

00:07:05.919 --> 00:07:07.830 align:start position:0%
these two uh the return values of these
two<00:07:06.240><c> function</c><00:07:06.720><c> calls</c><00:07:07.120><c> and</c><00:07:07.360><c> we're</c><00:07:07.520><c> gonna</c>

00:07:07.830 --> 00:07:07.840 align:start position:0%
two function calls and we're gonna
 

00:07:07.840 --> 00:07:11.270 align:start position:0%
two function calls and we're gonna
and<00:07:08.240><c> them</c><00:07:08.479><c> together</c><00:07:09.360><c> and</c><00:07:09.520><c> if</c><00:07:09.680><c> the</c><00:07:10.000><c> and</c><00:07:10.479><c> is</c><00:07:10.720><c> true</c>

00:07:11.270 --> 00:07:11.280 align:start position:0%
and them together and if the and is true
 

00:07:11.280 --> 00:07:13.909 align:start position:0%
and them together and if the and is true
we're<00:07:11.440><c> gonna</c><00:07:11.599><c> return</c><00:07:12.160><c> true</c><00:07:12.639><c> if</c><00:07:12.800><c> the</c><00:07:13.120><c> and</c><00:07:13.599><c> is</c>

00:07:13.909 --> 00:07:13.919 align:start position:0%
we're gonna return true if the and is
 

00:07:13.919 --> 00:07:14.390 align:start position:0%
we're gonna return true if the and is
false

00:07:14.390 --> 00:07:14.400 align:start position:0%
false
 

00:07:14.400 --> 00:07:16.469 align:start position:0%
false
we're<00:07:14.560><c> gonna</c><00:07:14.800><c> end</c><00:07:14.960><c> up</c><00:07:15.120><c> returning</c><00:07:15.680><c> false</c><00:07:16.319><c> and</c>

00:07:16.469 --> 00:07:16.479 align:start position:0%
we're gonna end up returning false and
 

00:07:16.479 --> 00:07:18.309 align:start position:0%
we're gonna end up returning false and
this<00:07:16.800><c> is</c><00:07:17.039><c> the</c><00:07:17.199><c> recursive</c><00:07:17.759><c> step</c>

00:07:18.309 --> 00:07:18.319 align:start position:0%
this is the recursive step
 

00:07:18.319 --> 00:07:19.909 align:start position:0%
this is the recursive step
this<00:07:18.560><c> is</c><00:07:18.960><c> the</c><00:07:19.120><c> only</c><00:07:19.360><c> thing</c><00:07:19.520><c> that</c><00:07:19.599><c> we</c><00:07:19.759><c> have</c><00:07:19.840><c> to</c>

00:07:19.909 --> 00:07:19.919 align:start position:0%
this is the only thing that we have to
 

00:07:19.919 --> 00:07:22.230 align:start position:0%
this is the only thing that we have to
return<00:07:20.639><c> this</c><00:07:20.960><c> is</c><00:07:21.120><c> the</c><00:07:21.280><c> entire</c>

00:07:22.230 --> 00:07:22.240 align:start position:0%
return this is the entire
 

00:07:22.240 --> 00:07:24.550 align:start position:0%
return this is the entire
function<00:07:23.360><c> so</c><00:07:23.520><c> this</c><00:07:23.759><c> is</c><00:07:23.919><c> a</c><00:07:24.080><c> pretty</c><00:07:24.319><c> good</c>

00:07:24.550 --> 00:07:24.560 align:start position:0%
function so this is a pretty good
 

00:07:24.560 --> 00:07:26.950 align:start position:0%
function so this is a pretty good
problem<00:07:25.039><c> to</c><00:07:25.199><c> practice</c><00:07:25.680><c> your</c><00:07:25.919><c> tree</c><00:07:26.240><c> traversals</c>

00:07:26.950 --> 00:07:26.960 align:start position:0%
problem to practice your tree traversals
 

00:07:26.960 --> 00:07:28.230 align:start position:0%
problem to practice your tree traversals
your<00:07:27.280><c> debt</c><00:07:27.440><c> for</c><00:07:27.680><c> search</c>

00:07:28.230 --> 00:07:28.240 align:start position:0%
your debt for search
 

00:07:28.240 --> 00:07:30.550 align:start position:0%
your debt for search
practicing<00:07:29.280><c> so</c><00:07:29.680><c> i</c><00:07:29.759><c> think</c><00:07:29.919><c> it's</c><00:07:30.080><c> a</c><00:07:30.160><c> pretty</c><00:07:30.319><c> good</c>

00:07:30.550 --> 00:07:30.560 align:start position:0%
practicing so i think it's a pretty good
 

00:07:30.560 --> 00:07:31.589 align:start position:0%
practicing so i think it's a pretty good
problem

00:07:31.589 --> 00:07:31.599 align:start position:0%
problem
 

00:07:31.599 --> 00:07:33.670 align:start position:0%
problem
and<00:07:31.840><c> i</c><00:07:32.000><c> hope</c><00:07:32.240><c> that</c><00:07:32.400><c> this</c><00:07:32.639><c> was</c><00:07:32.960><c> helpful</c><00:07:33.360><c> i</c><00:07:33.520><c> hope</c>

00:07:33.670 --> 00:07:33.680 align:start position:0%
and i hope that this was helpful i hope
 

00:07:33.680 --> 00:07:35.670 align:start position:0%
and i hope that this was helpful i hope
you<00:07:33.759><c> do</c><00:07:34.000><c> understand</c><00:07:34.400><c> the</c><00:07:34.560><c> edge</c><00:07:34.800><c> cases</c><00:07:35.280><c> and</c><00:07:35.520><c> how</c>

00:07:35.670 --> 00:07:35.680 align:start position:0%
you do understand the edge cases and how
 

00:07:35.680 --> 00:07:37.189 align:start position:0%
you do understand the edge cases and how
we<00:07:35.840><c> simplified</c><00:07:36.400><c> the</c><00:07:36.639><c> code</c>

00:07:37.189 --> 00:07:37.199 align:start position:0%
we simplified the code
 

00:07:37.199 --> 00:07:39.430 align:start position:0%
we simplified the code
if<00:07:37.360><c> it</c><00:07:37.520><c> was</c><00:07:38.080><c> please</c><00:07:38.400><c> like</c><00:07:38.639><c> and</c><00:07:38.720><c> subscribe</c><00:07:39.280><c> it</c>

00:07:39.430 --> 00:07:39.440 align:start position:0%
if it was please like and subscribe it
 

00:07:39.440 --> 00:07:40.390 align:start position:0%
if it was please like and subscribe it
supports<00:07:39.759><c> the</c><00:07:39.919><c> channel</c>

00:07:40.390 --> 00:07:40.400 align:start position:0%
supports the channel
 

00:07:40.400 --> 00:07:42.390 align:start position:0%
supports the channel
a<00:07:40.639><c> lot</c><00:07:40.960><c> and</c><00:07:41.120><c> i'll</c><00:07:41.360><c> hopefully</c><00:07:41.919><c> see</c><00:07:42.080><c> you</c><00:07:42.160><c> pretty</c>

00:07:42.390 --> 00:07:42.400 align:start position:0%
a lot and i'll hopefully see you pretty
 

00:07:42.400 --> 00:07:45.840 align:start position:0%
a lot and i'll hopefully see you pretty
soon<00:07:42.720><c> thank</c><00:07:42.880><c> you</c><00:07:43.039><c> so</c><00:07:43.199><c> much</c><00:07:43.360><c> for</c><00:07:43.520><c> watching</c>

