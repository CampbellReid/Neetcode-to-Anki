WEBVTT
Kind: captions
Language: en

00:00:00.040 --> 00:00:01.630 align:start position:0%
 
hey<00:00:00.199><c> everyone</c><00:00:00.680><c> welcome</c><00:00:01.079><c> back</c><00:00:01.280><c> and</c><00:00:01.439><c> let's</c>

00:00:01.630 --> 00:00:01.640 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.640 --> 00:00:03.590 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.880><c> some</c><00:00:02.000><c> more</c><00:00:02.200><c> neat</c><00:00:02.560><c> code</c><00:00:02.840><c> today</c><00:00:03.159><c> so</c><00:00:03.320><c> today</c>

00:00:03.590 --> 00:00:03.600 align:start position:0%
write some more neat code today so today
 

00:00:03.600 --> 00:00:06.190 align:start position:0%
write some more neat code today so today
let's<00:00:03.840><c> solve</c><00:00:04.240><c> swim</c><00:00:04.680><c> in</c><00:00:05.000><c> Rising</c><00:00:05.560><c> water</c><00:00:06.000><c> this</c><00:00:06.080><c> is</c>

00:00:06.190 --> 00:00:06.200 align:start position:0%
let's solve swim in Rising water this is
 

00:00:06.200 --> 00:00:08.870 align:start position:0%
let's solve swim in Rising water this is
a<00:00:06.399><c> graph</c><00:00:06.799><c> problem</c><00:00:07.120><c> we're</c><00:00:07.319><c> given</c><00:00:07.560><c> an</c><00:00:07.879><c> N</c><00:00:08.240><c> byn</c>

00:00:08.870 --> 00:00:08.880 align:start position:0%
a graph problem we're given an N byn
 

00:00:08.880 --> 00:00:11.509 align:start position:0%
a graph problem we're given an N byn
grid<00:00:09.320><c> so</c><00:00:09.480><c> it's</c><00:00:09.599><c> going</c><00:00:09.679><c> to</c><00:00:09.800><c> be</c><00:00:09.920><c> a</c><00:00:10.080><c> square</c><00:00:10.519><c> grid</c>

00:00:11.509 --> 00:00:11.519 align:start position:0%
grid so it's going to be a square grid
 

00:00:11.519 --> 00:00:13.990 align:start position:0%
grid so it's going to be a square grid
each<00:00:11.960><c> position</c><00:00:12.400><c> in</c><00:00:12.559><c> the</c><00:00:12.759><c> grid</c><00:00:13.200><c> represents</c><00:00:13.759><c> the</c>

00:00:13.990 --> 00:00:14.000 align:start position:0%
each position in the grid represents the
 

00:00:14.000 --> 00:00:16.870 align:start position:0%
each position in the grid represents the
elevation<00:00:14.879><c> at</c><00:00:15.120><c> that</c><00:00:15.400><c> point</c><00:00:15.879><c> and</c><00:00:16.039><c> so</c><00:00:16.279><c> basically</c>

00:00:16.870 --> 00:00:16.880 align:start position:0%
elevation at that point and so basically
 

00:00:16.880 --> 00:00:19.710 align:start position:0%
elevation at that point and so basically
some<00:00:17.119><c> amount</c><00:00:17.359><c> of</c><00:00:17.600><c> rain</c><00:00:18.080><c> is</c><00:00:18.240><c> falling</c><00:00:18.720><c> at</c><00:00:18.960><c> time</c><00:00:19.240><c> T</c>

00:00:19.710 --> 00:00:19.720 align:start position:0%
some amount of rain is falling at time T
 

00:00:19.720 --> 00:00:21.509 align:start position:0%
some amount of rain is falling at time T
the<00:00:20.000><c> depth</c><00:00:20.279><c> of</c><00:00:20.400><c> the</c><00:00:20.560><c> water</c><00:00:20.920><c> everywhere</c><00:00:21.359><c> is</c>

00:00:21.509 --> 00:00:21.519 align:start position:0%
the depth of the water everywhere is
 

00:00:21.519 --> 00:00:23.150 align:start position:0%
the depth of the water everywhere is
going<00:00:21.600><c> to</c><00:00:21.760><c> be</c><00:00:21.960><c> T</c><00:00:22.400><c> but</c><00:00:22.480><c> you're</c><00:00:22.600><c> going</c><00:00:22.720><c> to</c><00:00:22.880><c> find</c>

00:00:23.150 --> 00:00:23.160 align:start position:0%
going to be T but you're going to find
 

00:00:23.160 --> 00:00:24.550 align:start position:0%
going to be T but you're going to find
that<00:00:23.279><c> we</c><00:00:23.439><c> actually</c><00:00:23.640><c> don't</c><00:00:23.840><c> need</c><00:00:24.039><c> to</c><00:00:24.240><c> worry</c>

00:00:24.550 --> 00:00:24.560 align:start position:0%
that we actually don't need to worry
 

00:00:24.560 --> 00:00:26.189 align:start position:0%
that we actually don't need to worry
about<00:00:24.840><c> this</c><00:00:25.039><c> T</c><00:00:25.400><c> variable</c><00:00:25.800><c> we</c><00:00:25.880><c> don't</c><00:00:26.039><c> really</c>

00:00:26.189 --> 00:00:26.199 align:start position:0%
about this T variable we don't really
 

00:00:26.199 --> 00:00:28.589 align:start position:0%
about this T variable we don't really
need<00:00:26.359><c> to</c><00:00:26.480><c> worry</c><00:00:26.760><c> about</c><00:00:26.960><c> the</c><00:00:27.119><c> water</c><00:00:27.599><c> itself</c>

00:00:28.589 --> 00:00:28.599 align:start position:0%
need to worry about the water itself
 

00:00:28.599 --> 00:00:31.109 align:start position:0%
need to worry about the water itself
because<00:00:29.279><c> we</c><00:00:29.400><c> are</c><00:00:29.599><c> allowed</c><00:00:30.039><c> to</c><00:00:30.160><c> swim</c><00:00:30.560><c> at</c><00:00:30.759><c> any</c>

00:00:31.109 --> 00:00:31.119 align:start position:0%
because we are allowed to swim at any
 

00:00:31.119 --> 00:00:33.830 align:start position:0%
because we are allowed to swim at any
position<00:00:31.720><c> so</c><00:00:32.040><c> from</c><00:00:32.320><c> one</c><00:00:32.680><c> square</c><00:00:33.120><c> to</c><00:00:33.399><c> another</c>

00:00:33.830 --> 00:00:33.840 align:start position:0%
position so from one square to another
 

00:00:33.840 --> 00:00:37.709 align:start position:0%
position so from one square to another
square<00:00:34.760><c> if</c><00:00:34.920><c> and</c><00:00:35.239><c> only</c><00:00:35.879><c> if</c><00:00:36.360><c> the</c><00:00:36.640><c> elevation</c><00:00:37.440><c> of</c>

00:00:37.709 --> 00:00:37.719 align:start position:0%
square if and only if the elevation of
 

00:00:37.719 --> 00:00:40.549 align:start position:0%
square if and only if the elevation of
both<00:00:38.120><c> the</c><00:00:38.320><c> squares</c><00:00:38.920><c> is</c><00:00:39.280><c> less</c><00:00:39.600><c> than</c><00:00:39.879><c> or</c><00:00:40.200><c> equal</c>

00:00:40.549 --> 00:00:40.559 align:start position:0%
both the squares is less than or equal
 

00:00:40.559 --> 00:00:43.190 align:start position:0%
both the squares is less than or equal
to<00:00:40.879><c> t</c><00:00:41.360><c> t</c><00:00:41.680><c> is</c><00:00:41.840><c> the</c><00:00:42.000><c> amount</c><00:00:42.200><c> of</c><00:00:42.480><c> time</c><00:00:42.800><c> that's</c>

00:00:43.190 --> 00:00:43.200 align:start position:0%
to t t is the amount of time that's
 

00:00:43.200 --> 00:00:44.950 align:start position:0%
to t t is the amount of time that's
passed<00:00:43.920><c> and</c><00:00:44.079><c> like</c><00:00:44.200><c> I</c><00:00:44.280><c> said</c><00:00:44.480><c> we're</c><00:00:44.640><c> actually</c>

00:00:44.950 --> 00:00:44.960 align:start position:0%
passed and like I said we're actually
 

00:00:44.960 --> 00:00:46.670 align:start position:0%
passed and like I said we're actually
not<00:00:45.160><c> going</c><00:00:45.280><c> to</c><00:00:45.440><c> have</c><00:00:45.520><c> to</c><00:00:45.680><c> keep</c><00:00:45.960><c> track</c><00:00:46.280><c> of</c><00:00:46.480><c> what</c>

00:00:46.670 --> 00:00:46.680 align:start position:0%
not going to have to keep track of what
 

00:00:46.680 --> 00:00:49.150 align:start position:0%
not going to have to keep track of what
T<00:00:47.079><c> is</c><00:00:47.440><c> the</c><00:00:47.600><c> reason</c><00:00:47.960><c> being</c><00:00:48.440><c> let's</c><00:00:48.640><c> keep</c><00:00:48.800><c> reading</c>

00:00:49.150 --> 00:00:49.160 align:start position:0%
T is the reason being let's keep reading
 

00:00:49.160 --> 00:00:52.229 align:start position:0%
T is the reason being let's keep reading
the<00:00:49.399><c> problem</c><00:00:50.320><c> we</c><00:00:50.480><c> can</c><00:00:50.640><c> swim</c><00:00:51.120><c> an</c><00:00:51.520><c> infinite</c>

00:00:52.229 --> 00:00:52.239 align:start position:0%
the problem we can swim an infinite
 

00:00:52.239 --> 00:00:55.029 align:start position:0%
the problem we can swim an infinite
distance<00:00:52.840><c> in</c><00:00:53.239><c> zero</c><00:00:53.719><c> time</c><00:00:54.199><c> so</c><00:00:54.559><c> you</c><00:00:54.680><c> know</c><00:00:54.879><c> if</c>

00:00:55.029 --> 00:00:55.039 align:start position:0%
distance in zero time so you know if
 

00:00:55.039 --> 00:00:58.630 align:start position:0%
distance in zero time so you know if
let's<00:00:55.280><c> say</c><00:00:56.199><c> this</c><00:00:56.399><c> was</c><00:00:56.640><c> our</c><00:00:57.120><c> our</c><00:00:57.280><c> 2D</c><00:00:57.640><c> grid</c><00:00:57.960><c> right</c>

00:00:58.630 --> 00:00:58.640 align:start position:0%
let's say this was our our 2D grid right
 

00:00:58.640 --> 00:01:01.189 align:start position:0%
let's say this was our our 2D grid right
1111<00:00:59.640><c> uh</c><00:00:59.760><c> we</c><00:01:00.039><c> could</c><00:01:00.239><c> swim</c><00:01:00.600><c> this</c><00:01:00.760><c> entire</c>

00:01:01.189 --> 00:01:01.199 align:start position:0%
1111 uh we could swim this entire
 

00:01:01.199 --> 00:01:04.270 align:start position:0%
1111 uh we could swim this entire
distance<00:01:01.680><c> in</c><00:01:02.160><c> zero</c><00:01:02.719><c> time</c><00:01:03.559><c> and</c><00:01:03.719><c> the</c><00:01:03.920><c> question</c>

00:01:04.270 --> 00:01:04.280 align:start position:0%
distance in zero time and the question
 

00:01:04.280 --> 00:01:06.870 align:start position:0%
distance in zero time and the question
they're<00:01:04.519><c> asking</c><00:01:04.920><c> is</c><00:01:05.320><c> if</c><00:01:05.479><c> we</c><00:01:05.720><c> start</c><00:01:06.080><c> at</c><00:01:06.240><c> the</c><00:01:06.520><c> top</c>

00:01:06.870 --> 00:01:06.880 align:start position:0%
they're asking is if we start at the top
 

00:01:06.880 --> 00:01:09.590 align:start position:0%
they're asking is if we start at the top
left<00:01:07.119><c> of</c><00:01:07.280><c> the</c><00:01:07.479><c> grid</c><00:01:08.119><c> and</c><00:01:08.280><c> we</c><00:01:08.439><c> go</c><00:01:08.600><c> to</c><00:01:08.799><c> the</c><00:01:09.080><c> bottom</c>

00:01:09.590 --> 00:01:09.600 align:start position:0%
left of the grid and we go to the bottom
 

00:01:09.600 --> 00:01:12.950 align:start position:0%
left of the grid and we go to the bottom
right<00:01:09.840><c> of</c><00:01:09.960><c> the</c><00:01:10.159><c> grid</c><00:01:10.960><c> What</c><00:01:11.159><c> is</c><00:01:11.400><c> the</c><00:01:11.640><c> least</c><00:01:12.400><c> time</c>

00:01:12.950 --> 00:01:12.960 align:start position:0%
right of the grid What is the least time
 

00:01:12.960 --> 00:01:15.670 align:start position:0%
right of the grid What is the least time
it<00:01:13.240><c> takes</c><00:01:13.840><c> for</c><00:01:14.119><c> us</c><00:01:14.360><c> to</c><00:01:14.560><c> reach</c><00:01:14.960><c> the</c><00:01:15.200><c> bottom</c>

00:01:15.670 --> 00:01:15.680 align:start position:0%
it takes for us to reach the bottom
 

00:01:15.680 --> 00:01:18.469 align:start position:0%
it takes for us to reach the bottom
right<00:01:16.080><c> Square</c><00:01:16.960><c> so</c><00:01:17.200><c> clearly</c><00:01:17.600><c> we</c><00:01:17.759><c> want</c><00:01:18.000><c> to</c><00:01:18.200><c> know</c>

00:01:18.469 --> 00:01:18.479 align:start position:0%
right Square so clearly we want to know
 

00:01:18.479 --> 00:01:20.390 align:start position:0%
right Square so clearly we want to know
the<00:01:18.720><c> time</c><00:01:19.040><c> but</c><00:01:19.240><c> why</c><00:01:19.400><c> did</c><00:01:19.560><c> I</c><00:01:19.680><c> say</c><00:01:19.960><c> we</c><00:01:20.079><c> don't</c>

00:01:20.390 --> 00:01:20.400 align:start position:0%
the time but why did I say we don't
 

00:01:20.400 --> 00:01:22.510 align:start position:0%
the time but why did I say we don't
actually<00:01:20.680><c> have</c><00:01:20.799><c> to</c><00:01:21.000><c> keep</c><00:01:21.320><c> track</c><00:01:21.600><c> of</c><00:01:21.840><c> this</c><00:01:22.040><c> time</c>

00:01:22.510 --> 00:01:22.520 align:start position:0%
actually have to keep track of this time
 

00:01:22.520 --> 00:01:24.469 align:start position:0%
actually have to keep track of this time
because<00:01:22.880><c> think</c><00:01:23.159><c> about</c><00:01:23.400><c> it</c><00:01:23.960><c> initially</c><00:01:24.360><c> we're</c>

00:01:24.469 --> 00:01:24.479 align:start position:0%
because think about it initially we're
 

00:01:24.479 --> 00:01:26.149 align:start position:0%
because think about it initially we're
going<00:01:24.600><c> to</c><00:01:24.680><c> be</c><00:01:24.799><c> at</c><00:01:25.000><c> time</c><00:01:25.320><c> zero</c><00:01:25.680><c> so</c><00:01:25.799><c> let's</c><00:01:25.960><c> say</c>

00:01:26.149 --> 00:01:26.159 align:start position:0%
going to be at time zero so let's say
 

00:01:26.159 --> 00:01:28.350 align:start position:0%
going to be at time zero so let's say
the<00:01:26.400><c> top</c><00:01:26.680><c> left</c><00:01:26.920><c> of</c><00:01:27.040><c> our</c><00:01:27.240><c> grid</c><00:01:27.640><c> is</c><00:01:27.880><c> zero</c><00:01:28.240><c> then</c>

00:01:28.350 --> 00:01:28.360 align:start position:0%
the top left of our grid is zero then
 

00:01:28.360 --> 00:01:31.230 align:start position:0%
the top left of our grid is zero then
let's<00:01:28.560><c> say</c><00:01:28.759><c> the</c><00:01:29.079><c> right</c><00:01:29.640><c> and</c><00:01:30.000><c> bottom</c><00:01:30.720><c> are</c><00:01:31.040><c> are</c>

00:01:31.230 --> 00:01:31.240 align:start position:0%
let's say the right and bottom are are
 

00:01:31.240 --> 00:01:33.069 align:start position:0%
let's say the right and bottom are are
two<00:01:31.680><c> right</c><00:01:31.840><c> and</c><00:01:31.960><c> then</c><00:01:32.320><c> maybe</c><00:01:32.600><c> the</c><00:01:32.720><c> bottom</c>

00:01:33.069 --> 00:01:33.079 align:start position:0%
two right and then maybe the bottom
 

00:01:33.079 --> 00:01:34.950 align:start position:0%
two right and then maybe the bottom
right<00:01:33.360><c> is</c><00:01:33.479><c> also</c><00:01:33.799><c> two</c><00:01:34.040><c> so</c><00:01:34.159><c> this</c><00:01:34.240><c> is</c><00:01:34.360><c> our</c><00:01:34.560><c> grid</c>

00:01:34.950 --> 00:01:34.960 align:start position:0%
right is also two so this is our grid
 

00:01:34.960 --> 00:01:36.870 align:start position:0%
right is also two so this is our grid
right<00:01:35.079><c> we're</c><00:01:35.320><c> starting</c><00:01:35.799><c> here</c><00:01:36.200><c> we</c><00:01:36.320><c> want</c><00:01:36.439><c> to</c><00:01:36.640><c> get</c>

00:01:36.870 --> 00:01:36.880 align:start position:0%
right we're starting here we want to get
 

00:01:36.880 --> 00:01:40.310 align:start position:0%
right we're starting here we want to get
to<00:01:37.040><c> the</c><00:01:37.200><c> bottom</c><00:01:37.600><c> right</c><00:01:38.479><c> so</c><00:01:39.479><c> both</c><00:01:39.680><c> of</c><00:01:39.799><c> the</c><00:01:40.040><c> paths</c>

00:01:40.310 --> 00:01:40.320 align:start position:0%
to the bottom right so both of the paths
 

00:01:40.320 --> 00:01:42.630 align:start position:0%
to the bottom right so both of the paths
are<00:01:40.560><c> pretty</c><00:01:40.759><c> much</c><00:01:41.040><c> the</c><00:01:41.200><c> same</c><00:01:41.479><c> to</c><00:01:41.759><c> get</c><00:01:42.000><c> there</c><00:01:42.240><c> so</c>

00:01:42.630 --> 00:01:42.640 align:start position:0%
are pretty much the same to get there so
 

00:01:42.640 --> 00:01:44.749 align:start position:0%
are pretty much the same to get there so
my<00:01:42.840><c> question</c><00:01:43.079><c> to</c><00:01:43.240><c> you</c><00:01:43.439><c> is</c><00:01:43.960><c> what</c><00:01:44.159><c> is</c><00:01:44.360><c> going</c><00:01:44.560><c> to</c>

00:01:44.749 --> 00:01:44.759 align:start position:0%
my question to you is what is going to
 

00:01:44.759 --> 00:01:47.550 align:start position:0%
my question to you is what is going to
be<00:01:45.240><c> the</c><00:01:45.479><c> time</c><00:01:45.680><c> it</c><00:01:45.960><c> takes</c><00:01:46.200><c> for</c><00:01:46.360><c> us</c><00:01:46.520><c> to</c><00:01:46.759><c> get</c><00:01:47.040><c> here</c>

00:01:47.550 --> 00:01:47.560 align:start position:0%
be the time it takes for us to get here
 

00:01:47.560 --> 00:01:50.389 align:start position:0%
be the time it takes for us to get here
well<00:01:47.960><c> remember</c><00:01:48.960><c> initially</c><00:01:49.520><c> there's</c><00:01:49.880><c> zero</c>

00:01:50.389 --> 00:01:50.399 align:start position:0%
well remember initially there's zero
 

00:01:50.399 --> 00:01:52.789 align:start position:0%
well remember initially there's zero
water<00:01:51.040><c> and</c><00:01:51.240><c> for</c><00:01:51.439><c> us</c><00:01:51.600><c> to</c><00:01:51.759><c> be</c><00:01:51.880><c> able</c><00:01:52.079><c> to</c><00:01:52.320><c> reach</c>

00:01:52.789 --> 00:01:52.799 align:start position:0%
water and for us to be able to reach
 

00:01:52.799 --> 00:01:55.469 align:start position:0%
water and for us to be able to reach
this<00:01:53.040><c> position</c><00:01:53.439><c> too</c><00:01:54.119><c> we</c><00:01:54.240><c> can</c><00:01:54.479><c> only</c><00:01:54.880><c> reach</c><00:01:55.159><c> it</c>

00:01:55.469 --> 00:01:55.479 align:start position:0%
this position too we can only reach it
 

00:01:55.479 --> 00:01:58.870 align:start position:0%
this position too we can only reach it
if<00:01:55.719><c> T</c><00:01:56.399><c> is</c><00:01:56.680><c> less</c><00:01:56.960><c> than</c><00:01:57.119><c> or</c><00:01:57.320><c> equal</c><00:01:57.640><c> to</c><00:01:57.960><c> 2</c><00:01:58.600><c> because</c>

00:01:58.870 --> 00:01:58.880 align:start position:0%
if T is less than or equal to 2 because
 

00:01:58.880 --> 00:02:00.990 align:start position:0%
if T is less than or equal to 2 because
that's<00:01:59.119><c> the</c><00:01:59.320><c> maximum</c><00:02:00.039><c> elevation</c><00:02:00.680><c> that</c><00:02:00.799><c> we've</c>

00:02:00.990 --> 00:02:01.000 align:start position:0%
that's the maximum elevation that we've
 

00:02:01.000 --> 00:02:03.389 align:start position:0%
that's the maximum elevation that we've
gone<00:02:01.240><c> at</c><00:02:01.439><c> so</c><00:02:01.719><c> really</c><00:02:02.280><c> what</c><00:02:02.439><c> the</c><00:02:02.680><c> question</c><00:02:03.039><c> is</c>

00:02:03.389 --> 00:02:03.399 align:start position:0%
gone at so really what the question is
 

00:02:03.399 --> 00:02:06.749 align:start position:0%
gone at so really what the question is
asking<00:02:04.320><c> is</c><00:02:05.000><c> what's</c><00:02:05.320><c> going</c><00:02:05.520><c> to</c><00:02:05.680><c> be</c><00:02:05.920><c> the</c><00:02:06.200><c> path</c>

00:02:06.749 --> 00:02:06.759 align:start position:0%
asking is what's going to be the path
 

00:02:06.759 --> 00:02:10.669 align:start position:0%
asking is what's going to be the path
from<00:02:07.000><c> the</c><00:02:07.240><c> top</c><00:02:07.759><c> left</c><00:02:08.759><c> to</c><00:02:09.080><c> the</c><00:02:09.319><c> bottom</c><00:02:09.879><c> right</c>

00:02:10.669 --> 00:02:10.679 align:start position:0%
from the top left to the bottom right
 

00:02:10.679 --> 00:02:14.470 align:start position:0%
from the top left to the bottom right
such<00:02:11.200><c> that</c><00:02:11.879><c> the</c><00:02:12.319><c> the</c><00:02:12.640><c> maximum</c><00:02:13.400><c> height</c><00:02:13.840><c> along</c>

00:02:14.470 --> 00:02:14.480 align:start position:0%
such that the the maximum height along
 

00:02:14.480 --> 00:02:16.949 align:start position:0%
such that the the maximum height along
this<00:02:14.840><c> path</c><00:02:15.200><c> is</c><00:02:15.480><c> minimized</c><00:02:16.319><c> right</c><00:02:16.480><c> because</c><00:02:16.720><c> the</c>

00:02:16.949 --> 00:02:16.959 align:start position:0%
this path is minimized right because the
 

00:02:16.959 --> 00:02:18.910 align:start position:0%
this path is minimized right because the
bottleneck<00:02:17.680><c> is</c><00:02:17.840><c> going</c><00:02:17.920><c> to</c><00:02:18.080><c> be</c><00:02:18.360><c> whatever</c><00:02:18.720><c> the</c>

00:02:18.910 --> 00:02:18.920 align:start position:0%
bottleneck is going to be whatever the
 

00:02:18.920 --> 00:02:21.430 align:start position:0%
bottleneck is going to be whatever the
maximum<00:02:19.560><c> height</c><00:02:19.959><c> is</c><00:02:20.400><c> because</c><00:02:20.640><c> if</c><00:02:20.760><c> the</c><00:02:20.920><c> maximum</c>

00:02:21.430 --> 00:02:21.440 align:start position:0%
maximum height is because if the maximum
 

00:02:21.440 --> 00:02:24.229 align:start position:0%
maximum height is because if the maximum
height<00:02:21.720><c> is</c><00:02:21.920><c> let's</c><00:02:22.160><c> say</c><00:02:22.840><c> uh</c><00:02:23.000><c> four</c><00:02:23.680><c> then</c><00:02:24.080><c> no</c>

00:02:24.229 --> 00:02:24.239 align:start position:0%
height is let's say uh four then no
 

00:02:24.239 --> 00:02:26.270 align:start position:0%
height is let's say uh four then no
matter<00:02:24.599><c> what</c><00:02:24.800><c> we</c><00:02:25.000><c> do</c><00:02:25.599><c> we're</c><00:02:25.760><c> going</c><00:02:25.840><c> to</c><00:02:26.000><c> have</c><00:02:26.080><c> to</c>

00:02:26.270 --> 00:02:26.280 align:start position:0%
matter what we do we're going to have to
 

00:02:26.280 --> 00:02:28.270 align:start position:0%
matter what we do we're going to have to
wait<00:02:26.519><c> for</c><00:02:26.840><c> time</c><00:02:27.080><c> to</c><00:02:27.239><c> be</c><00:02:27.480><c> less</c><00:02:27.680><c> than</c><00:02:27.800><c> or</c><00:02:28.000><c> equal</c>

00:02:28.270 --> 00:02:28.280 align:start position:0%
wait for time to be less than or equal
 

00:02:28.280 --> 00:02:31.670 align:start position:0%
wait for time to be less than or equal
to<00:02:28.519><c> four</c><00:02:29.400><c> so</c><00:02:29.560><c> the</c><00:02:29.959><c> question</c><00:02:30.280><c> is</c><00:02:30.800><c> what</c><00:02:31.160><c> path</c><00:02:31.480><c> can</c>

00:02:31.670 --> 00:02:31.680 align:start position:0%
to four so the question is what path can
 

00:02:31.680 --> 00:02:35.790 align:start position:0%
to four so the question is what path can
we<00:02:32.000><c> take</c><00:02:32.599><c> to</c><00:02:32.920><c> minimize</c><00:02:33.840><c> what</c><00:02:34.000><c> the</c><00:02:34.200><c> t</c><00:02:34.680><c> is</c><00:02:35.640><c> and</c>

00:02:35.790 --> 00:02:35.800 align:start position:0%
we take to minimize what the t is and
 

00:02:35.800 --> 00:02:38.949 align:start position:0%
we take to minimize what the t is and
then<00:02:36.160><c> return</c><00:02:36.599><c> that</c><00:02:36.840><c> particular</c><00:02:37.280><c> T</c><00:02:37.680><c> value</c><00:02:38.680><c> so</c>

00:02:38.949 --> 00:02:38.959 align:start position:0%
then return that particular T value so
 

00:02:38.959 --> 00:02:40.869 align:start position:0%
then return that particular T value so
in<00:02:39.280><c> this</c><00:02:39.560><c> first</c><00:02:39.920><c> example</c><00:02:40.400><c> this</c><00:02:40.480><c> is</c><00:02:40.640><c> what</c><00:02:40.760><c> the</c>

00:02:40.869 --> 00:02:40.879 align:start position:0%
in this first example this is what the
 

00:02:40.879 --> 00:02:42.750 align:start position:0%
in this first example this is what the
grid<00:02:41.400><c> actually</c><00:02:41.800><c> looks</c><00:02:42.080><c> like</c><00:02:42.239><c> and</c><00:02:42.360><c> you</c><00:02:42.440><c> can</c><00:02:42.560><c> see</c>

00:02:42.750 --> 00:02:42.760 align:start position:0%
grid actually looks like and you can see
 

00:02:42.760 --> 00:02:44.910 align:start position:0%
grid actually looks like and you can see
we<00:02:42.879><c> have</c><00:02:43.040><c> two</c><00:02:43.280><c> paths</c><00:02:43.599><c> right</c><00:02:43.760><c> we</c><00:02:43.840><c> can</c><00:02:44.040><c> go</c><00:02:44.560><c> like</c>

00:02:44.910 --> 00:02:44.920 align:start position:0%
we have two paths right we can go like
 

00:02:44.920 --> 00:02:47.990 align:start position:0%
we have two paths right we can go like
this<00:02:45.440><c> bottom</c><00:02:46.159><c> right</c><00:02:47.159><c> and</c><00:02:47.360><c> what's</c><00:02:47.560><c> going</c><00:02:47.640><c> to</c><00:02:47.800><c> be</c>

00:02:47.990 --> 00:02:48.000 align:start position:0%
this bottom right and what's going to be
 

00:02:48.000 --> 00:02:50.350 align:start position:0%
this bottom right and what's going to be
the<00:02:48.239><c> max</c><00:02:48.720><c> elevation</c><00:02:49.280><c> we</c><00:02:49.440><c> reach</c><00:02:49.760><c> along</c><00:02:50.120><c> this</c>

00:02:50.350 --> 00:02:50.360 align:start position:0%
the max elevation we reach along this
 

00:02:50.360 --> 00:02:52.110 align:start position:0%
the max elevation we reach along this
path<00:02:50.599><c> it's</c><00:02:50.760><c> going</c><00:02:50.840><c> to</c><00:02:50.959><c> be</c><00:02:51.239><c> three</c><00:02:51.720><c> right</c><00:02:51.879><c> so</c>

00:02:52.110 --> 00:02:52.120 align:start position:0%
path it's going to be three right so
 

00:02:52.120 --> 00:02:53.990 align:start position:0%
path it's going to be three right so
that<00:02:52.319><c> therefore</c><00:02:52.640><c> the</c><00:02:52.840><c> time</c><00:02:53.080><c> we</c><00:02:53.400><c> return</c><00:02:53.640><c> has</c><00:02:53.879><c> to</c>

00:02:53.990 --> 00:02:54.000 align:start position:0%
that therefore the time we return has to
 

00:02:54.000 --> 00:02:57.710 align:start position:0%
that therefore the time we return has to
be<00:02:54.239><c> three</c><00:02:54.920><c> or</c><00:02:55.640><c> uh</c><00:02:55.760><c> if</c><00:02:55.879><c> we</c><00:02:56.080><c> go</c><00:02:56.400><c> along</c><00:02:56.840><c> this</c><00:02:57.159><c> path</c>

00:02:57.710 --> 00:02:57.720 align:start position:0%
be three or uh if we go along this path
 

00:02:57.720 --> 00:02:59.309 align:start position:0%
be three or uh if we go along this path
same<00:02:58.040><c> thing</c><00:02:58.360><c> right</c><00:02:58.519><c> even</c><00:02:58.720><c> though</c><00:02:58.920><c> this</c><00:02:59.040><c> is</c><00:02:59.159><c> a</c>

00:02:59.309 --> 00:02:59.319 align:start position:0%
same thing right even though this is a
 

00:02:59.319 --> 00:03:01.630 align:start position:0%
same thing right even though this is a
two<00:02:59.640><c> so</c><00:02:59.840><c> so</c><00:03:00.080><c> for</c><00:03:00.239><c> us</c><00:03:00.400><c> to</c><00:03:00.599><c> reach</c><00:03:01.040><c> this</c><00:03:01.319><c> position</c>

00:03:01.630 --> 00:03:01.640 align:start position:0%
two so so for us to reach this position
 

00:03:01.640 --> 00:03:03.390 align:start position:0%
two so so for us to reach this position
to<00:03:01.840><c> reach</c><00:03:02.120><c> this</c><00:03:02.280><c> two</c><00:03:02.680><c> we</c><00:03:02.760><c> would</c><00:03:02.959><c> have</c><00:03:03.080><c> to</c><00:03:03.239><c> wait</c>

00:03:03.390 --> 00:03:03.400 align:start position:0%
to reach this two we would have to wait
 

00:03:03.400 --> 00:03:05.789 align:start position:0%
to reach this two we would have to wait
for<00:03:03.680><c> time</c><00:03:03.879><c> to</c><00:03:04.000><c> be</c><00:03:04.159><c> less</c><00:03:04.360><c> than</c><00:03:04.440><c> or</c><00:03:04.599><c> equal</c><00:03:04.799><c> to</c><00:03:04.959><c> two</c>

00:03:05.789 --> 00:03:05.799 align:start position:0%
for time to be less than or equal to two
 

00:03:05.799 --> 00:03:08.149 align:start position:0%
for time to be less than or equal to two
but<00:03:06.360><c> to</c><00:03:06.640><c> reach</c><00:03:07.120><c> this</c><00:03:07.280><c> third</c><00:03:07.599><c> position</c><00:03:08.000><c> no</c>

00:03:08.149 --> 00:03:08.159 align:start position:0%
but to reach this third position no
 

00:03:08.159 --> 00:03:09.509 align:start position:0%
but to reach this third position no
matter<00:03:08.519><c> what</c><00:03:08.760><c> we're</c><00:03:08.879><c> going</c><00:03:09.000><c> to</c><00:03:09.120><c> have</c><00:03:09.200><c> to</c><00:03:09.360><c> wait</c>

00:03:09.509 --> 00:03:09.519 align:start position:0%
matter what we're going to have to wait
 

00:03:09.519 --> 00:03:12.309 align:start position:0%
matter what we're going to have to wait
for<00:03:09.760><c> time</c><00:03:10.040><c> to</c><00:03:10.280><c> equal</c><00:03:10.720><c> three</c><00:03:11.599><c> now</c><00:03:11.799><c> of</c><00:03:11.959><c> course</c>

00:03:12.309 --> 00:03:12.319 align:start position:0%
for time to equal three now of course
 

00:03:12.319 --> 00:03:14.990 align:start position:0%
for time to equal three now of course
one<00:03:12.680><c> idea</c><00:03:13.080><c> you</c><00:03:13.239><c> might</c><00:03:13.560><c> have</c><00:03:13.840><c> is</c><00:03:14.040><c> just</c><00:03:14.440><c> consider</c>

00:03:14.990 --> 00:03:15.000 align:start position:0%
one idea you might have is just consider
 

00:03:15.000 --> 00:03:18.229 align:start position:0%
one idea you might have is just consider
every<00:03:15.319><c> single</c><00:03:15.879><c> possible</c><00:03:16.440><c> path</c><00:03:17.400><c> and</c><00:03:17.599><c> then</c><00:03:17.879><c> take</c>

00:03:18.229 --> 00:03:18.239 align:start position:0%
every single possible path and then take
 

00:03:18.239 --> 00:03:20.589 align:start position:0%
every single possible path and then take
along<00:03:18.720><c> each</c><00:03:19.040><c> path</c><00:03:19.440><c> what</c><00:03:19.599><c> is</c><00:03:19.799><c> the</c><00:03:20.040><c> maximum</c>

00:03:20.589 --> 00:03:20.599 align:start position:0%
along each path what is the maximum
 

00:03:20.599 --> 00:03:23.270 align:start position:0%
along each path what is the maximum
height<00:03:21.080><c> and</c><00:03:21.239><c> then</c><00:03:21.720><c> return</c><00:03:21.959><c> the</c><00:03:22.239><c> minimum</c><00:03:23.080><c> of</c>

00:03:23.270 --> 00:03:23.280 align:start position:0%
height and then return the minimum of
 

00:03:23.280 --> 00:03:26.110 align:start position:0%
height and then return the minimum of
the<00:03:23.440><c> maximum</c><00:03:24.360><c> height</c><00:03:24.680><c> from</c><00:03:24.959><c> all</c><00:03:25.239><c> those</c><00:03:25.560><c> paths</c>

00:03:26.110 --> 00:03:26.120 align:start position:0%
the maximum height from all those paths
 

00:03:26.120 --> 00:03:27.869 align:start position:0%
the maximum height from all those paths
right<00:03:26.480><c> and</c><00:03:26.840><c> if</c><00:03:26.920><c> we're</c><00:03:27.080><c> going</c><00:03:27.159><c> to</c><00:03:27.440><c> be</c><00:03:27.640><c> going</c>

00:03:27.869 --> 00:03:27.879 align:start position:0%
right and if we're going to be going
 

00:03:27.879 --> 00:03:29.390 align:start position:0%
right and if we're going to be going
through<00:03:28.159><c> every</c><00:03:28.360><c> single</c><00:03:28.799><c> path</c><00:03:29.080><c> it's</c><00:03:29.200><c> going</c><00:03:29.280><c> to</c>

00:03:29.390 --> 00:03:29.400 align:start position:0%
through every single path it's going to
 

00:03:29.400 --> 00:03:31.710 align:start position:0%
through every single path it's going to
be<00:03:29.879><c> exponential</c><00:03:30.799><c> but</c><00:03:30.920><c> there's</c><00:03:31.200><c> actually</c><00:03:31.480><c> a</c>

00:03:31.710 --> 00:03:31.720 align:start position:0%
be exponential but there's actually a
 

00:03:31.720 --> 00:03:34.110 align:start position:0%
be exponential but there's actually a
trick<00:03:32.280><c> a</c><00:03:32.560><c> greedy</c><00:03:33.040><c> way</c><00:03:33.280><c> we</c><00:03:33.360><c> can</c><00:03:33.519><c> solve</c><00:03:33.879><c> this</c>

00:03:34.110 --> 00:03:34.120 align:start position:0%
trick a greedy way we can solve this
 

00:03:34.120 --> 00:03:35.830 align:start position:0%
trick a greedy way we can solve this
problem<00:03:34.439><c> and</c><00:03:34.519><c> you</c><00:03:34.680><c> might</c><00:03:34.879><c> remember</c><00:03:35.280><c> a</c><00:03:35.439><c> greedy</c>

00:03:35.830 --> 00:03:35.840 align:start position:0%
problem and you might remember a greedy
 

00:03:35.840 --> 00:03:38.390 align:start position:0%
problem and you might remember a greedy
algorithm<00:03:36.439><c> called</c><00:03:36.680><c> jigra</c><00:03:37.360><c> algorithm</c><00:03:38.159><c> and</c><00:03:38.280><c> we</c>

00:03:38.390 --> 00:03:38.400 align:start position:0%
algorithm called jigra algorithm and we
 

00:03:38.400 --> 00:03:40.509 align:start position:0%
algorithm called jigra algorithm and we
can<00:03:38.519><c> do</c><00:03:38.680><c> a</c><00:03:38.959><c> modified</c><00:03:39.599><c> version</c><00:03:40.040><c> of</c><00:03:40.280><c> this</c>

00:03:40.509 --> 00:03:40.519 align:start position:0%
can do a modified version of this
 

00:03:40.519 --> 00:03:42.149 align:start position:0%
can do a modified version of this
algorithm<00:03:41.200><c> which</c><00:03:41.280><c> will</c><00:03:41.480><c> give</c><00:03:41.599><c> us</c><00:03:41.720><c> a</c><00:03:41.920><c> Time</c>

00:03:42.149 --> 00:03:42.159 align:start position:0%
algorithm which will give us a Time
 

00:03:42.159 --> 00:03:46.509 align:start position:0%
algorithm which will give us a Time
complexity<00:03:42.680><c> of</c><00:03:42.879><c> n^2</c><00:03:43.799><c> *</c><00:03:44.519><c> log</c><00:03:45.080><c> n</c><00:03:45.840><c> so</c><00:03:46.040><c> let</c><00:03:46.159><c> me</c><00:03:46.319><c> show</c>

00:03:46.509 --> 00:03:46.519 align:start position:0%
complexity of n^2 * log n so let me show
 

00:03:46.519 --> 00:03:49.390 align:start position:0%
complexity of n^2 * log n so let me show
you<00:03:46.799><c> that</c><00:03:47.040><c> solution</c><00:03:47.599><c> right</c><00:03:47.840><c> now</c><00:03:48.840><c> so</c><00:03:49.080><c> like</c><00:03:49.239><c> I</c>

00:03:49.390 --> 00:03:49.400 align:start position:0%
you that solution right now so like I
 

00:03:49.400 --> 00:03:50.990 align:start position:0%
you that solution right now so like I
said<00:03:49.599><c> we're</c><00:03:49.720><c> going</c><00:03:49.840><c> to</c><00:03:49.959><c> be</c><00:03:50.080><c> doing</c><00:03:50.319><c> a</c><00:03:50.480><c> modified</c>

00:03:50.990 --> 00:03:51.000 align:start position:0%
said we're going to be doing a modified
 

00:03:51.000 --> 00:03:53.069 align:start position:0%
said we're going to be doing a modified
version<00:03:51.280><c> of</c><00:03:51.439><c> jra's</c><00:03:52.040><c> algorithm</c><00:03:52.599><c> it's</c><00:03:52.879><c> pretty</c>

00:03:53.069 --> 00:03:53.079 align:start position:0%
version of jra's algorithm it's pretty
 

00:03:53.079 --> 00:03:55.190 align:start position:0%
version of jra's algorithm it's pretty
much<00:03:53.319><c> exactly</c><00:03:53.840><c> like</c><00:03:54.040><c> this</c><00:03:54.200><c> algorithm</c><00:03:54.799><c> just</c><00:03:55.000><c> a</c>

00:03:55.190 --> 00:03:55.200 align:start position:0%
much exactly like this algorithm just a
 

00:03:55.200 --> 00:03:57.030 align:start position:0%
much exactly like this algorithm just a
slight<00:03:55.599><c> difference</c><00:03:56.200><c> and</c><00:03:56.319><c> you</c><00:03:56.480><c> might</c><00:03:56.680><c> know</c>

00:03:57.030 --> 00:03:57.040 align:start position:0%
slight difference and you might know
 

00:03:57.040 --> 00:03:59.910 align:start position:0%
slight difference and you might know
that<00:03:57.480><c> this</c><00:03:57.680><c> algorithm</c><00:03:58.200><c> requires</c><00:03:58.760><c> a</c><00:03:59.000><c> minimum</c>

00:03:59.910 --> 00:03:59.920 align:start position:0%
that this algorithm requires a minimum
 

00:03:59.920 --> 00:04:02.429 align:start position:0%
that this algorithm requires a minimum
Heap<00:04:00.560><c> now</c><00:04:00.760><c> this</c><00:04:01.360><c> it's</c><00:04:01.480><c> a</c><00:04:01.640><c> breath</c><00:04:01.920><c> first</c><00:04:02.159><c> search</c>

00:04:02.429 --> 00:04:02.439 align:start position:0%
Heap now this it's a breath first search
 

00:04:02.439 --> 00:04:04.830 align:start position:0%
Heap now this it's a breath first search
jer's<00:04:02.879><c> algorithm</c><00:04:03.319><c> is</c><00:04:03.480><c> basically</c><00:04:03.879><c> a</c><00:04:04.120><c> BFS</c>

00:04:04.830 --> 00:04:04.840 align:start position:0%
jer's algorithm is basically a BFS
 

00:04:04.840 --> 00:04:06.390 align:start position:0%
jer's algorithm is basically a BFS
search<00:04:05.159><c> a</c><00:04:05.319><c> breath</c><00:04:05.519><c> first</c><00:04:05.760><c> search</c><00:04:06.000><c> but</c><00:04:06.120><c> instead</c>

00:04:06.390 --> 00:04:06.400 align:start position:0%
search a breath first search but instead
 

00:04:06.400 --> 00:04:08.710 align:start position:0%
search a breath first search but instead
of<00:04:06.519><c> doing</c><00:04:06.840><c> a</c><00:04:07.079><c> regular</c><00:04:07.760><c> Q</c><00:04:08.200><c> we're</c><00:04:08.360><c> going</c><00:04:08.439><c> to</c><00:04:08.560><c> be</c>

00:04:08.710 --> 00:04:08.720 align:start position:0%
of doing a regular Q we're going to be
 

00:04:08.720 --> 00:04:11.869 align:start position:0%
of doing a regular Q we're going to be
using<00:04:09.000><c> a</c><00:04:09.280><c> priority</c><00:04:09.879><c> CU</c><00:04:10.280><c> AKA</c><00:04:11.000><c> a</c><00:04:11.239><c> heap</c><00:04:11.599><c> so</c><00:04:11.760><c> we're</c>

00:04:11.869 --> 00:04:11.879 align:start position:0%
using a priority CU AKA a heap so we're
 

00:04:11.879 --> 00:04:13.710 align:start position:0%
using a priority CU AKA a heap so we're
going<00:04:12.000><c> to</c><00:04:12.079><c> use</c><00:04:12.239><c> a</c><00:04:12.439><c> minimum</c><00:04:12.920><c> Heap</c><00:04:13.480><c> which</c><00:04:13.599><c> is</c>

00:04:13.710 --> 00:04:13.720 align:start position:0%
going to use a minimum Heap which is
 

00:04:13.720 --> 00:04:15.750 align:start position:0%
going to use a minimum Heap which is
going<00:04:13.840><c> to</c><00:04:14.000><c> contain</c><00:04:14.439><c> the</c><00:04:14.720><c> frontier</c><00:04:15.400><c> of</c><00:04:15.560><c> where</c>

00:04:15.750 --> 00:04:15.760 align:start position:0%
going to contain the frontier of where
 

00:04:15.760 --> 00:04:18.229 align:start position:0%
going to contain the frontier of where
we're<00:04:15.959><c> at</c><00:04:16.199><c> so</c><00:04:16.639><c> consider</c><00:04:17.079><c> we</c><00:04:17.239><c> start</c><00:04:17.560><c> at</c><00:04:17.680><c> the</c><00:04:17.919><c> top</c>

00:04:18.229 --> 00:04:18.239 align:start position:0%
we're at so consider we start at the top
 

00:04:18.239 --> 00:04:20.310 align:start position:0%
we're at so consider we start at the top
left<00:04:18.759><c> what's</c><00:04:18.959><c> our</c><00:04:19.280><c> Frontier</c><00:04:19.919><c> going</c><00:04:20.040><c> to</c><00:04:20.199><c> be</c>

00:04:20.310 --> 00:04:20.320 align:start position:0%
left what's our Frontier going to be
 

00:04:20.320 --> 00:04:22.230 align:start position:0%
left what's our Frontier going to be
it's<00:04:20.440><c> going</c><00:04:20.560><c> to</c><00:04:20.639><c> be</c><00:04:20.799><c> the</c><00:04:20.959><c> adjacent</c><00:04:21.680><c> positions</c>

00:04:22.230 --> 00:04:22.240 align:start position:0%
it's going to be the adjacent positions
 

00:04:22.240 --> 00:04:25.150 align:start position:0%
it's going to be the adjacent positions
right<00:04:22.520><c> this</c><00:04:22.800><c> position</c><00:04:23.600><c> and</c><00:04:24.080><c> the</c><00:04:24.400><c> bottom</c>

00:04:25.150 --> 00:04:25.160 align:start position:0%
right this position and the bottom
 

00:04:25.160 --> 00:04:26.710 align:start position:0%
right this position and the bottom
position<00:04:25.840><c> which</c><00:04:26.000><c> are</c><00:04:26.160><c> going</c><00:04:26.280><c> to</c><00:04:26.360><c> be</c><00:04:26.479><c> in</c><00:04:26.560><c> our</c>

00:04:26.710 --> 00:04:26.720 align:start position:0%
position which are going to be in our
 

00:04:26.720 --> 00:04:28.270 align:start position:0%
position which are going to be in our
Frontier<00:04:27.199><c> so</c><00:04:27.320><c> we're</c><00:04:27.440><c> going</c><00:04:27.520><c> to</c><00:04:27.639><c> take</c><00:04:27.919><c> both</c><00:04:28.080><c> of</c>

00:04:28.270 --> 00:04:28.280 align:start position:0%
Frontier so we're going to take both of
 

00:04:28.280 --> 00:04:30.390 align:start position:0%
Frontier so we're going to take both of
those<00:04:28.440><c> and</c><00:04:28.680><c> add</c><00:04:28.880><c> them</c><00:04:29.160><c> to</c><00:04:29.280><c> our</c><00:04:29.400><c> front</c><00:04:29.840><c> here</c><00:04:30.080><c> so</c>

00:04:30.390 --> 00:04:30.400 align:start position:0%
those and add them to our front here so
 

00:04:30.400 --> 00:04:31.430 align:start position:0%
those and add them to our front here so
we're<00:04:30.600><c> really</c><00:04:30.759><c> going</c><00:04:30.880><c> to</c><00:04:31.039><c> add</c><00:04:31.240><c> the</c>

00:04:31.430 --> 00:04:31.440 align:start position:0%
we're really going to add the
 

00:04:31.440 --> 00:04:35.350 align:start position:0%
we're really going to add the
coordinates<00:04:32.160><c> of</c><00:04:32.400><c> these</c><00:04:32.880><c> positions</c><00:04:34.199><c> so</c><00:04:35.199><c> think</c>

00:04:35.350 --> 00:04:35.360 align:start position:0%
coordinates of these positions so think
 

00:04:35.360 --> 00:04:38.590 align:start position:0%
coordinates of these positions so think
of<00:04:35.600><c> the</c><00:04:35.800><c> columns</c><00:04:36.360><c> as</c><00:04:36.520><c> being</c><00:04:36.759><c> 012</c><00:04:37.759><c> and</c><00:04:38.000><c> the</c><00:04:38.160><c> rows</c>

00:04:38.590 --> 00:04:38.600 align:start position:0%
of the columns as being 012 and the rows
 

00:04:38.600 --> 00:04:40.430 align:start position:0%
of the columns as being 012 and the rows
also<00:04:38.840><c> being</c><00:04:39.000><c> 012</c><00:04:39.639><c> remember</c><00:04:39.960><c> this</c><00:04:40.080><c> is</c><00:04:40.199><c> our</c>

00:04:40.430 --> 00:04:40.440 align:start position:0%
also being 012 remember this is our
 

00:04:40.440 --> 00:04:42.670 align:start position:0%
also being 012 remember this is our
Target<00:04:40.960><c> position</c><00:04:41.600><c> we</c><00:04:41.720><c> want</c><00:04:41.840><c> to</c><00:04:42.000><c> know</c><00:04:42.360><c> from</c>

00:04:42.670 --> 00:04:42.680 align:start position:0%
Target position we want to know from
 

00:04:42.680 --> 00:04:44.590 align:start position:0%
Target position we want to know from
here<00:04:43.160><c> what's</c><00:04:43.360><c> going</c><00:04:43.440><c> to</c><00:04:43.560><c> be</c><00:04:43.720><c> the</c><00:04:44.000><c> path</c><00:04:44.320><c> that</c><00:04:44.479><c> we</c>

00:04:44.590 --> 00:04:44.600 align:start position:0%
here what's going to be the path that we
 

00:04:44.600 --> 00:04:46.670 align:start position:0%
here what's going to be the path that we
can<00:04:44.880><c> take</c><00:04:45.199><c> that's</c><00:04:45.360><c> going</c><00:04:45.479><c> to</c><00:04:45.720><c> get</c><00:04:45.919><c> us</c><00:04:46.199><c> here</c>

00:04:46.670 --> 00:04:46.680 align:start position:0%
can take that's going to get us here
 

00:04:46.680 --> 00:04:49.270 align:start position:0%
can take that's going to get us here
such<00:04:46.919><c> that</c><00:04:47.120><c> the</c><00:04:47.479><c> maximum</c><00:04:48.160><c> height</c><00:04:48.479><c> along</c><00:04:49.000><c> this</c>

00:04:49.270 --> 00:04:49.280 align:start position:0%
such that the maximum height along this
 

00:04:49.280 --> 00:04:52.629 align:start position:0%
such that the maximum height along this
path<00:04:49.800><c> is</c><00:04:50.320><c> minimized</c><00:04:51.320><c> so</c><00:04:51.720><c> why</c><00:04:51.880><c> am</c><00:04:52.000><c> I</c><00:04:52.199><c> using</c><00:04:52.440><c> a</c>

00:04:52.629 --> 00:04:52.639 align:start position:0%
path is minimized so why am I using a
 

00:04:52.639 --> 00:04:55.070 align:start position:0%
path is minimized so why am I using a
Min<00:04:52.960><c> Heap</c><00:04:53.240><c> why</c><00:04:53.360><c> am</c><00:04:53.479><c> I</c><00:04:53.680><c> using</c><00:04:53.919><c> Jar's</c><00:04:54.440><c> algorithm</c>

00:04:55.070 --> 00:04:55.080 align:start position:0%
Min Heap why am I using Jar's algorithm
 

00:04:55.080 --> 00:04:57.029 align:start position:0%
Min Heap why am I using Jar's algorithm
because<00:04:55.400><c> remember</c><00:04:55.800><c> we're</c><00:04:56.039><c> being</c><00:04:56.400><c> greedy</c><00:04:56.960><c> what</c>

00:04:57.029 --> 00:04:57.039 align:start position:0%
because remember we're being greedy what
 

00:04:57.039 --> 00:04:59.070 align:start position:0%
because remember we're being greedy what
did<00:04:57.199><c> I</c><00:04:57.360><c> just</c><00:04:57.560><c> say</c><00:04:57.800><c> we</c><00:04:57.919><c> want</c><00:04:58.039><c> to</c><00:04:58.320><c> minimize</c><00:04:58.880><c> the</c>

00:04:59.070 --> 00:04:59.080 align:start position:0%
did I just say we want to minimize the
 

00:04:59.080 --> 00:05:01.230 align:start position:0%
did I just say we want to minimize the
maximum<00:04:59.759><c> height</c><00:05:00.000><c> along</c><00:05:00.360><c> the</c><00:05:00.560><c> path</c><00:05:00.840><c> that</c><00:05:01.000><c> takes</c>

00:05:01.230 --> 00:05:01.240 align:start position:0%
maximum height along the path that takes
 

00:05:01.240 --> 00:05:03.870 align:start position:0%
maximum height along the path that takes
us<00:05:01.360><c> to</c><00:05:01.520><c> the</c><00:05:01.680><c> result</c><00:05:02.280><c> so</c><00:05:02.479><c> if</c><00:05:02.600><c> we</c><00:05:02.840><c> start</c><00:05:03.240><c> here</c><00:05:03.600><c> at</c>

00:05:03.870 --> 00:05:03.880 align:start position:0%
us to the result so if we start here at
 

00:05:03.880 --> 00:05:06.070 align:start position:0%
us to the result so if we start here at
zero<00:05:04.520><c> which</c><00:05:04.759><c> one</c><00:05:04.919><c> of</c><00:05:05.120><c> these</c><00:05:05.440><c> paths</c><00:05:05.720><c> am</c><00:05:05.840><c> I</c><00:05:05.960><c> going</c>

00:05:06.070 --> 00:05:06.080 align:start position:0%
zero which one of these paths am I going
 

00:05:06.080 --> 00:05:08.029 align:start position:0%
zero which one of these paths am I going
to<00:05:06.240><c> choose</c><00:05:06.639><c> first</c><00:05:07.120><c> would</c><00:05:07.280><c> I</c><00:05:07.440><c> choose</c><00:05:07.840><c> the</c>

00:05:08.029 --> 00:05:08.039 align:start position:0%
to choose first would I choose the
 

00:05:08.039 --> 00:05:10.510 align:start position:0%
to choose first would I choose the
height<00:05:08.360><c> of</c><00:05:08.639><c> two</c><00:05:09.400><c> or</c><00:05:09.600><c> would</c><00:05:09.759><c> I</c><00:05:09.919><c> choose</c><00:05:10.320><c> the</c>

00:05:10.510 --> 00:05:10.520 align:start position:0%
height of two or would I choose the
 

00:05:10.520 --> 00:05:13.189 align:start position:0%
height of two or would I choose the
height<00:05:10.800><c> of</c><00:05:11.080><c> one</c><00:05:11.800><c> well</c><00:05:12.320><c> of</c><00:05:12.479><c> course</c><00:05:12.720><c> we'd</c><00:05:12.960><c> want</c>

00:05:13.189 --> 00:05:13.199 align:start position:0%
height of one well of course we'd want
 

00:05:13.199 --> 00:05:15.070 align:start position:0%
height of one well of course we'd want
the<00:05:13.479><c> minimum</c><00:05:14.080><c> height</c><00:05:14.400><c> right</c><00:05:14.560><c> because</c><00:05:14.759><c> it's</c>

00:05:15.070 --> 00:05:15.080 align:start position:0%
the minimum height right because it's
 

00:05:15.080 --> 00:05:17.350 align:start position:0%
the minimum height right because it's
possible<00:05:15.759><c> with</c><00:05:16.000><c> a</c><00:05:16.160><c> height</c><00:05:16.400><c> of</c><00:05:16.560><c> one</c><00:05:17.039><c> we</c><00:05:17.160><c> could</c>

00:05:17.350 --> 00:05:17.360 align:start position:0%
possible with a height of one we could
 

00:05:17.360 --> 00:05:19.749 align:start position:0%
possible with a height of one we could
also<00:05:17.680><c> find</c><00:05:18.080><c> another</c><00:05:18.680><c> path</c><00:05:19.160><c> that</c><00:05:19.240><c> will</c><00:05:19.440><c> take</c><00:05:19.600><c> us</c>

00:05:19.749 --> 00:05:19.759 align:start position:0%
also find another path that will take us
 

00:05:19.759 --> 00:05:21.430 align:start position:0%
also find another path that will take us
to<00:05:19.919><c> the</c><00:05:20.039><c> result</c><00:05:20.319><c> where</c><00:05:20.479><c> the</c><00:05:20.600><c> max</c><00:05:20.919><c> height</c><00:05:21.120><c> will</c>

00:05:21.430 --> 00:05:21.440 align:start position:0%
to the result where the max height will
 

00:05:21.440 --> 00:05:24.790 align:start position:0%
to the result where the max height will
still<00:05:22.039><c> remain</c><00:05:22.520><c> as</c><00:05:22.759><c> being</c><00:05:23.360><c> one</c><00:05:24.160><c> right</c><00:05:24.440><c> whereas</c>

00:05:24.790 --> 00:05:24.800 align:start position:0%
still remain as being one right whereas
 

00:05:24.800 --> 00:05:26.430 align:start position:0%
still remain as being one right whereas
if<00:05:24.919><c> we</c><00:05:25.080><c> go</c><00:05:25.240><c> down</c><00:05:25.479><c> this</c><00:05:25.680><c> path</c><00:05:25.880><c> we're</c><00:05:26.080><c> basically</c>

00:05:26.430 --> 00:05:26.440 align:start position:0%
if we go down this path we're basically
 

00:05:26.440 --> 00:05:28.550 align:start position:0%
if we go down this path we're basically
guaranteeing<00:05:27.199><c> okay</c><00:05:27.560><c> the</c><00:05:27.759><c> maximum</c><00:05:28.199><c> height</c>

00:05:28.550 --> 00:05:28.560 align:start position:0%
guaranteeing okay the maximum height
 

00:05:28.560 --> 00:05:30.150 align:start position:0%
guaranteeing okay the maximum height
along<00:05:28.880><c> the</c><00:05:29.080><c> path</c><00:05:29.319><c> to</c><00:05:29.520><c> the</c><00:05:29.720><c> the</c><00:05:29.840><c> result</c><00:05:30.080><c> is</c>

00:05:30.150 --> 00:05:30.160 align:start position:0%
along the path to the the result is
 

00:05:30.160 --> 00:05:32.909 align:start position:0%
along the path to the the result is
going<00:05:30.280><c> to</c><00:05:30.400><c> be</c><00:05:30.919><c> at</c><00:05:31.199><c> minimum</c><00:05:31.880><c> two</c><00:05:32.319><c> so</c><00:05:32.520><c> of</c><00:05:32.680><c> course</c>

00:05:32.909 --> 00:05:32.919 align:start position:0%
going to be at minimum two so of course
 

00:05:32.919 --> 00:05:35.670 align:start position:0%
going to be at minimum two so of course
we<00:05:33.039><c> want</c><00:05:33.160><c> to</c><00:05:33.479><c> try</c><00:05:34.160><c> the</c><00:05:34.360><c> Min</c><00:05:34.919><c> path</c><00:05:35.280><c> first</c><00:05:35.600><c> we</c>

00:05:35.670 --> 00:05:35.680 align:start position:0%
we want to try the Min path first we
 

00:05:35.680 --> 00:05:38.430 align:start position:0%
we want to try the Min path first we
want<00:05:35.800><c> to</c><00:05:35.919><c> try</c><00:05:36.160><c> the</c><00:05:36.360><c> smaller</c><00:05:36.960><c> height</c><00:05:37.360><c> first</c><00:05:38.199><c> so</c>

00:05:38.430 --> 00:05:38.440 align:start position:0%
want to try the smaller height first so
 

00:05:38.440 --> 00:05:40.550 align:start position:0%
want to try the smaller height first so
when<00:05:38.600><c> we</c><00:05:38.880><c> take</c><00:05:39.160><c> a</c><00:05:39.400><c> position</c><00:05:39.880><c> like</c><00:05:40.080><c> this</c><00:05:40.280><c> and</c>

00:05:40.550 --> 00:05:40.560 align:start position:0%
when we take a position like this and
 

00:05:40.560 --> 00:05:42.270 align:start position:0%
when we take a position like this and
add<00:05:40.720><c> it</c><00:05:40.880><c> to</c><00:05:41.080><c> our</c><00:05:41.280><c> Min</c><00:05:41.600><c> Heap</c><00:05:41.880><c> we're</c><00:05:42.000><c> going</c><00:05:42.080><c> to</c>

00:05:42.270 --> 00:05:42.280 align:start position:0%
add it to our Min Heap we're going to
 

00:05:42.280 --> 00:05:44.710 align:start position:0%
add it to our Min Heap we're going to
add<00:05:42.560><c> three</c><00:05:43.000><c> values</c><00:05:43.759><c> the</c><00:05:44.000><c> first</c><00:05:44.280><c> one</c><00:05:44.479><c> is</c><00:05:44.600><c> going</c>

00:05:44.710 --> 00:05:44.720 align:start position:0%
add three values the first one is going
 

00:05:44.720 --> 00:05:47.029 align:start position:0%
add three values the first one is going
to<00:05:44.840><c> be</c><00:05:45.000><c> the</c><00:05:45.240><c> key</c><00:05:45.720><c> for</c><00:05:46.000><c> our</c><00:05:46.199><c> minimum</c><00:05:46.639><c> Heap</c><00:05:46.919><c> which</c>

00:05:47.029 --> 00:05:47.039 align:start position:0%
to be the key for our minimum Heap which
 

00:05:47.039 --> 00:05:48.950 align:start position:0%
to be the key for our minimum Heap which
is<00:05:47.160><c> going</c><00:05:47.240><c> to</c><00:05:47.360><c> be</c><00:05:47.759><c> the</c><00:05:48.000><c> height</c><00:05:48.360><c> so</c><00:05:48.600><c> in</c><00:05:48.800><c> this</c>

00:05:48.950 --> 00:05:48.960 align:start position:0%
is going to be the height so in this
 

00:05:48.960 --> 00:05:51.270 align:start position:0%
is going to be the height so in this
position<00:05:49.319><c> the</c><00:05:49.520><c> height</c><00:05:49.800><c> is</c><00:05:50.080><c> one</c><00:05:50.720><c> so</c><00:05:51.039><c> that's</c>

00:05:51.270 --> 00:05:51.280 align:start position:0%
position the height is one so that's
 

00:05:51.280 --> 00:05:53.230 align:start position:0%
position the height is one so that's
what<00:05:51.400><c> we're</c><00:05:51.560><c> going</c><00:05:51.680><c> to</c><00:05:51.840><c> add</c><00:05:52.120><c> as</c><00:05:52.240><c> the</c><00:05:52.479><c> main</c><00:05:52.919><c> key</c>

00:05:53.230 --> 00:05:53.240 align:start position:0%
what we're going to add as the main key
 

00:05:53.240 --> 00:05:55.550 align:start position:0%
what we're going to add as the main key
for<00:05:53.520><c> this</c><00:05:53.919><c> Min</c><00:05:54.240><c> Heap</c><00:05:54.520><c> right</c><00:05:54.639><c> so</c><00:05:54.759><c> when</c><00:05:54.919><c> we</c><00:05:55.120><c> pop</c><00:05:55.360><c> a</c>

00:05:55.550 --> 00:05:55.560 align:start position:0%
for this Min Heap right so when we pop a
 

00:05:55.560 --> 00:05:57.390 align:start position:0%
for this Min Heap right so when we pop a
value<00:05:55.880><c> from</c><00:05:56.120><c> this</c><00:05:56.280><c> Min</c><00:05:56.560><c> Heap</c><00:05:56.800><c> we</c><00:05:56.880><c> want</c><00:05:57.000><c> to</c><00:05:57.160><c> pop</c>

00:05:57.390 --> 00:05:57.400 align:start position:0%
value from this Min Heap we want to pop
 

00:05:57.400 --> 00:06:00.309 align:start position:0%
value from this Min Heap we want to pop
the<00:05:57.520><c> one</c><00:05:57.919><c> that</c><00:05:58.080><c> had</c><00:05:58.199><c> a</c><00:05:58.440><c> minimum</c><00:05:59.039><c> height</c>

00:06:00.309 --> 00:06:00.319 align:start position:0%
the one that had a minimum height
 

00:06:00.319 --> 00:06:01.749 align:start position:0%
the one that had a minimum height
the<00:06:00.479><c> other</c><00:06:00.680><c> two</c><00:06:00.919><c> values</c><00:06:01.319><c> of</c><00:06:01.440><c> course</c><00:06:01.600><c> we're</c>

00:06:01.749 --> 00:06:01.759 align:start position:0%
the other two values of course we're
 

00:06:01.759 --> 00:06:03.150 align:start position:0%
the other two values of course we're
going<00:06:01.840><c> to</c><00:06:01.919><c> be</c><00:06:02.039><c> adding</c><00:06:02.280><c> are</c><00:06:02.440><c> the</c><00:06:02.600><c> row</c><00:06:02.960><c> and</c>

00:06:03.150 --> 00:06:03.160 align:start position:0%
going to be adding are the row and
 

00:06:03.160 --> 00:06:04.469 align:start position:0%
going to be adding are the row and
column<00:06:03.520><c> which</c><00:06:03.639><c> are</c><00:06:03.800><c> basically</c><00:06:04.240><c> the</c>

00:06:04.469 --> 00:06:04.479 align:start position:0%
column which are basically the
 

00:06:04.479 --> 00:06:07.070 align:start position:0%
column which are basically the
coordinates<00:06:05.120><c> of</c><00:06:05.319><c> this</c><00:06:05.639><c> position</c><00:06:06.639><c> and</c><00:06:06.800><c> I'm</c>

00:06:07.070 --> 00:06:07.080 align:start position:0%
coordinates of this position and I'm
 

00:06:07.080 --> 00:06:08.350 align:start position:0%
coordinates of this position and I'm
probably<00:06:07.280><c> not</c><00:06:07.440><c> going</c><00:06:07.520><c> to</c><00:06:07.680><c> write</c><00:06:07.919><c> them</c><00:06:08.080><c> out</c>

00:06:08.350 --> 00:06:08.360 align:start position:0%
probably not going to write them out
 

00:06:08.360 --> 00:06:09.830 align:start position:0%
probably not going to write them out
each<00:06:08.599><c> time</c><00:06:08.840><c> just</c><00:06:08.960><c> to</c><00:06:09.120><c> keep</c><00:06:09.360><c> this</c><00:06:09.520><c> code</c><00:06:09.759><c> a</c>

00:06:09.830 --> 00:06:09.840 align:start position:0%
each time just to keep this code a
 

00:06:09.840 --> 00:06:11.950 align:start position:0%
each time just to keep this code a
little<00:06:10.000><c> bit</c><00:06:10.160><c> cleaner</c><00:06:10.919><c> so</c><00:06:11.240><c> that's</c><00:06:11.520><c> kind</c><00:06:11.639><c> of</c><00:06:11.800><c> the</c>

00:06:11.950 --> 00:06:11.960 align:start position:0%
little bit cleaner so that's kind of the
 

00:06:11.960 --> 00:06:13.909 align:start position:0%
little bit cleaner so that's kind of the
main<00:06:12.319><c> idea</c><00:06:12.919><c> and</c><00:06:13.160><c> each</c><00:06:13.400><c> time</c><00:06:13.560><c> we're</c><00:06:13.720><c> going</c><00:06:13.800><c> to</c>

00:06:13.909 --> 00:06:13.919 align:start position:0%
main idea and each time we're going to
 

00:06:13.919 --> 00:06:16.670 align:start position:0%
main idea and each time we're going to
be<00:06:14.080><c> popping</c><00:06:14.720><c> the</c><00:06:14.840><c> minimum</c><00:06:15.240><c> from</c><00:06:15.400><c> our</c><00:06:15.599><c> Min</c><00:06:15.880><c> Heap</c>

00:06:16.670 --> 00:06:16.680 align:start position:0%
be popping the minimum from our Min Heap
 

00:06:16.680 --> 00:06:18.309 align:start position:0%
be popping the minimum from our Min Heap
uh<00:06:16.840><c> you</c><00:06:16.919><c> know</c><00:06:17.080><c> and</c><00:06:17.199><c> then</c><00:06:17.400><c> continuing</c><00:06:18.039><c> on</c><00:06:18.199><c> the</c>

00:06:18.309 --> 00:06:18.319 align:start position:0%
uh you know and then continuing on the
 

00:06:18.319 --> 00:06:19.990 align:start position:0%
uh you know and then continuing on the
frontier<00:06:18.880><c> so</c><00:06:19.039><c> you</c><00:06:19.160><c> know</c><00:06:19.240><c> if</c><00:06:19.360><c> we</c><00:06:19.479><c> pop</c><00:06:19.800><c> this</c>

00:06:19.990 --> 00:06:20.000 align:start position:0%
frontier so you know if we pop this
 

00:06:20.000 --> 00:06:21.430 align:start position:0%
frontier so you know if we pop this
value<00:06:20.479><c> then</c><00:06:20.599><c> we're</c><00:06:20.720><c> going</c><00:06:20.840><c> to</c><00:06:20.919><c> look</c><00:06:21.080><c> at</c><00:06:21.240><c> its</c>

00:06:21.430 --> 00:06:21.440 align:start position:0%
value then we're going to look at its
 

00:06:21.440 --> 00:06:24.029 align:start position:0%
value then we're going to look at its
neighbors<00:06:22.039><c> bottom</c><00:06:22.479><c> and</c><00:06:23.080><c> right</c><00:06:23.680><c> the</c><00:06:23.759><c> other</c><00:06:23.919><c> two</c>

00:06:24.029 --> 00:06:24.039 align:start position:0%
neighbors bottom and right the other two
 

00:06:24.039 --> 00:06:25.710 align:start position:0%
neighbors bottom and right the other two
neighbors<00:06:24.400><c> are</c><00:06:24.520><c> out</c><00:06:24.680><c> of</c><00:06:24.800><c> bounds</c><00:06:25.199><c> or</c><00:06:25.599><c> which</c>

00:06:25.710 --> 00:06:25.720 align:start position:0%
neighbors are out of bounds or which
 

00:06:25.720 --> 00:06:27.150 align:start position:0%
neighbors are out of bounds or which
have<00:06:25.960><c> already</c><00:06:26.240><c> been</c><00:06:26.479><c> visited</c><00:06:26.840><c> we</c><00:06:26.919><c> don't</c><00:06:27.039><c> want</c>

00:06:27.150 --> 00:06:27.160 align:start position:0%
have already been visited we don't want
 

00:06:27.160 --> 00:06:29.029 align:start position:0%
have already been visited we don't want
to<00:06:27.280><c> visit</c><00:06:27.560><c> the</c><00:06:27.680><c> same</c><00:06:28.160><c> uh</c><00:06:28.280><c> position</c><00:06:28.680><c> twice</c><00:06:28.919><c> so</c>

00:06:29.029 --> 00:06:29.039 align:start position:0%
to visit the same uh position twice so
 

00:06:29.039 --> 00:06:31.189 align:start position:0%
to visit the same uh position twice so
we're<00:06:29.160><c> going</c><00:06:29.240><c> to</c><00:06:29.319><c> have</c><00:06:29.400><c> a</c><00:06:29.720><c> visit</c><00:06:30.360><c> hash</c><00:06:30.759><c> set</c><00:06:30.919><c> for</c>

00:06:31.189 --> 00:06:31.199 align:start position:0%
we're going to have a visit hash set for
 

00:06:31.199 --> 00:06:32.710 align:start position:0%
we're going to have a visit hash set for
that<00:06:31.360><c> but</c><00:06:31.440><c> I'm</c><00:06:31.560><c> not</c><00:06:31.680><c> going</c><00:06:31.759><c> to</c><00:06:31.919><c> draw</c><00:06:32.240><c> that</c><00:06:32.520><c> just</c>

00:06:32.710 --> 00:06:32.720 align:start position:0%
that but I'm not going to draw that just
 

00:06:32.720 --> 00:06:34.790 align:start position:0%
that but I'm not going to draw that just
to<00:06:32.919><c> keep</c><00:06:33.120><c> things</c><00:06:33.319><c> a</c><00:06:33.400><c> little</c><00:06:33.560><c> bit</c><00:06:33.720><c> more</c><00:06:33.960><c> simple</c>

00:06:34.790 --> 00:06:34.800 align:start position:0%
to keep things a little bit more simple
 

00:06:34.800 --> 00:06:37.589 align:start position:0%
to keep things a little bit more simple
and<00:06:35.080><c> suppose</c><00:06:35.639><c> we</c><00:06:35.880><c> take</c><00:06:36.199><c> two</c><00:06:36.599><c> pths</c><00:06:37.240><c> you</c><00:06:37.360><c> know</c>

00:06:37.589 --> 00:06:37.599 align:start position:0%
and suppose we take two pths you know
 

00:06:37.599 --> 00:06:39.390 align:start position:0%
and suppose we take two pths you know
bottom<00:06:37.960><c> right</c><00:06:38.120><c> and</c><00:06:38.240><c> we</c><00:06:38.360><c> get</c><00:06:38.479><c> to</c><00:06:38.720><c> this</c><00:06:38.880><c> two</c>

00:06:39.390 --> 00:06:39.400 align:start position:0%
bottom right and we get to this two
 

00:06:39.400 --> 00:06:41.350 align:start position:0%
bottom right and we get to this two
position<00:06:40.000><c> and</c><00:06:40.120><c> we</c><00:06:40.240><c> take</c><00:06:40.479><c> another</c><00:06:40.919><c> path</c><00:06:41.240><c> you</c>

00:06:41.350 --> 00:06:41.360 align:start position:0%
position and we take another path you
 

00:06:41.360 --> 00:06:43.589 align:start position:0%
position and we take another path you
know<00:06:41.800><c> top</c><00:06:42.160><c> right</c><00:06:42.520><c> and</c><00:06:42.639><c> then</c><00:06:42.800><c> go</c><00:06:43.000><c> down</c><00:06:43.319><c> and</c><00:06:43.479><c> get</c>

00:06:43.589 --> 00:06:43.599 align:start position:0%
know top right and then go down and get
 

00:06:43.599 --> 00:06:45.950 align:start position:0%
know top right and then go down and get
to<00:06:43.919><c> this</c><00:06:44.160><c> position</c><00:06:44.560><c> this</c><00:06:44.720><c> one</c><00:06:45.160><c> position</c><00:06:45.680><c> right</c>

00:06:45.950 --> 00:06:45.960 align:start position:0%
to this position this one position right
 

00:06:45.960 --> 00:06:48.629 align:start position:0%
to this position this one position right
and<00:06:46.120><c> remember</c><00:06:46.479><c> our</c><00:06:46.759><c> goal</c><00:06:47.160><c> is</c><00:06:47.319><c> to</c><00:06:47.639><c> find</c><00:06:48.400><c> uh</c><00:06:48.479><c> to</c>

00:06:48.629 --> 00:06:48.639 align:start position:0%
and remember our goal is to find uh to
 

00:06:48.639 --> 00:06:51.749 align:start position:0%
and remember our goal is to find uh to
get<00:06:48.759><c> to</c><00:06:49.000><c> this</c><00:06:49.639><c> this</c><00:06:49.840><c> end</c><00:06:50.199><c> point</c><00:06:50.560><c> right</c><00:06:50.759><c> so</c><00:06:51.280><c> from</c>

00:06:51.749 --> 00:06:51.759 align:start position:0%
get to this this end point right so from
 

00:06:51.759 --> 00:06:54.830 align:start position:0%
get to this this end point right so from
these<00:06:52.080><c> two</c><00:06:53.000><c> which</c><00:06:53.199><c> of</c><00:06:53.560><c> these</c><00:06:53.840><c> two</c><00:06:54.199><c> would</c><00:06:54.400><c> I</c><00:06:54.560><c> say</c>

00:06:54.830 --> 00:06:54.840 align:start position:0%
these two which of these two would I say
 

00:06:54.840 --> 00:06:56.550 align:start position:0%
these two which of these two would I say
is<00:06:55.080><c> going</c><00:06:55.319><c> going</c><00:06:55.440><c> to</c><00:06:55.599><c> be</c><00:06:55.759><c> the</c><00:06:55.960><c> path</c><00:06:56.199><c> that</c><00:06:56.280><c> leads</c>

00:06:56.550 --> 00:06:56.560 align:start position:0%
is going going to be the path that leads
 

00:06:56.560 --> 00:06:58.670 align:start position:0%
is going going to be the path that leads
to<00:06:56.720><c> the</c><00:06:56.879><c> result</c><00:06:57.520><c> of</c><00:06:57.759><c> course</c><00:06:58.120><c> I</c><00:06:58.199><c> would</c><00:06:58.360><c> want</c><00:06:58.520><c> to</c>

00:06:58.670 --> 00:06:58.680 align:start position:0%
to the result of course I would want to
 

00:06:58.680 --> 00:07:00.510 align:start position:0%
to the result of course I would want to
favor<00:06:59.120><c> this</c><00:06:59.240><c> one</c><00:06:59.639><c> by</c><00:06:59.800><c> looking</c><00:07:00.080><c> at</c><00:07:00.199><c> it</c><00:07:00.400><c> right</c>

00:07:00.510 --> 00:07:00.520 align:start position:0%
favor this one by looking at it right
 

00:07:00.520 --> 00:07:02.869 align:start position:0%
favor this one by looking at it right
because<00:07:00.960><c> okay</c><00:07:01.160><c> the</c><00:07:01.319><c> height</c><00:07:01.560><c> over</c><00:07:01.800><c> here</c><00:07:02.039><c> is</c><00:07:02.280><c> one</c>

00:07:02.869 --> 00:07:02.879 align:start position:0%
because okay the height over here is one
 

00:07:02.879 --> 00:07:05.469 align:start position:0%
because okay the height over here is one
the<00:07:03.039><c> height</c><00:07:03.280><c> over</c><00:07:03.520><c> here</c><00:07:04.000><c> is</c><00:07:04.280><c> two</c><00:07:04.879><c> so</c><00:07:05.120><c> that</c><00:07:05.280><c> must</c>

00:07:05.469 --> 00:07:05.479 align:start position:0%
the height over here is two so that must
 

00:07:05.479 --> 00:07:07.670 align:start position:0%
the height over here is two so that must
mean<00:07:05.720><c> that</c><00:07:06.039><c> this</c><00:07:06.319><c> path</c><00:07:06.560><c> is</c><00:07:06.680><c> going</c><00:07:06.800><c> to</c><00:07:06.960><c> be</c><00:07:07.400><c> the</c>

00:07:07.670 --> 00:07:07.680 align:start position:0%
mean that this path is going to be the
 

00:07:07.680 --> 00:07:09.469 align:start position:0%
mean that this path is going to be the
path<00:07:07.919><c> with</c><00:07:08.039><c> a</c><00:07:08.199><c> smaller</c><00:07:08.680><c> Max</c><00:07:09.039><c> height</c><00:07:09.319><c> but</c>

00:07:09.469 --> 00:07:09.479 align:start position:0%
path with a smaller Max height but
 

00:07:09.479 --> 00:07:12.430 align:start position:0%
path with a smaller Max height but
that's<00:07:09.840><c> not</c><00:07:10.400><c> actually</c><00:07:10.919><c> true</c><00:07:11.599><c> take</c><00:07:11.759><c> a</c><00:07:11.960><c> look</c><00:07:12.160><c> at</c>

00:07:12.430 --> 00:07:12.440 align:start position:0%
that's not actually true take a look at
 

00:07:12.440 --> 00:07:15.309 align:start position:0%
that's not actually true take a look at
this<00:07:12.720><c> path</c><00:07:13.160><c> there's</c><00:07:13.360><c> a</c><00:07:13.720><c> three</c><00:07:14.440><c> along</c><00:07:15.000><c> this</c>

00:07:15.309 --> 00:07:15.319 align:start position:0%
this path there's a three along this
 

00:07:15.319 --> 00:07:18.309 align:start position:0%
this path there's a three along this
path<00:07:15.840><c> whereas</c><00:07:16.400><c> the</c><00:07:16.680><c> maximum</c><00:07:17.440><c> height</c><00:07:17.720><c> along</c>

00:07:18.309 --> 00:07:18.319 align:start position:0%
path whereas the maximum height along
 

00:07:18.319 --> 00:07:22.029 align:start position:0%
path whereas the maximum height along
this<00:07:18.680><c> path</c><00:07:19.440><c> uh</c><00:07:19.680><c> was</c><00:07:19.800><c> a</c><00:07:20.039><c> two</c><00:07:20.919><c> right</c><00:07:21.240><c> this</c><00:07:21.400><c> two</c><00:07:21.720><c> or</c>

00:07:22.029 --> 00:07:22.039 align:start position:0%
this path uh was a two right this two or
 

00:07:22.039 --> 00:07:24.670 align:start position:0%
this path uh was a two right this two or
this<00:07:22.240><c> two</c><00:07:22.800><c> so</c><00:07:23.160><c> of</c><00:07:23.319><c> course</c><00:07:23.800><c> I</c><00:07:23.879><c> would</c><00:07:24.240><c> actually</c>

00:07:24.670 --> 00:07:24.680 align:start position:0%
this two so of course I would actually
 

00:07:24.680 --> 00:07:27.110 align:start position:0%
this two so of course I would actually
want<00:07:25.400><c> this</c><00:07:25.759><c> path</c><00:07:26.120><c> to</c><00:07:26.280><c> be</c><00:07:26.440><c> the</c><00:07:26.560><c> one</c><00:07:26.720><c> that</c><00:07:26.840><c> leads</c>

00:07:27.110 --> 00:07:27.120 align:start position:0%
want this path to be the one that leads
 

00:07:27.120 --> 00:07:29.070 align:start position:0%
want this path to be the one that leads
us<00:07:27.280><c> to</c><00:07:27.400><c> the</c><00:07:27.560><c> result</c><00:07:27.960><c> because</c><00:07:28.280><c> the</c><00:07:28.479><c> max</c><00:07:28.840><c> height</c>

00:07:29.070 --> 00:07:29.080 align:start position:0%
us to the result because the max height
 

00:07:29.080 --> 00:07:31.790 align:start position:0%
us to the result because the max height
along<00:07:29.360><c> that</c><00:07:29.560><c> that</c><00:07:29.800><c> path</c><00:07:30.039><c> is</c><00:07:30.120><c> a</c><00:07:30.400><c> two</c><00:07:31.039><c> so</c><00:07:31.319><c> how</c><00:07:31.520><c> can</c>

00:07:31.790 --> 00:07:31.800 align:start position:0%
along that that path is a two so how can
 

00:07:31.800 --> 00:07:34.950 align:start position:0%
along that that path is a two so how can
I<00:07:32.280><c> do</c><00:07:32.599><c> that</c><00:07:33.000><c> this</c><00:07:33.120><c> is</c><00:07:33.280><c> where</c><00:07:33.479><c> we</c><00:07:33.759><c> modify</c><00:07:34.319><c> jra's</c>

00:07:34.950 --> 00:07:34.960 align:start position:0%
I do that this is where we modify jra's
 

00:07:34.960 --> 00:07:36.950 align:start position:0%
I do that this is where we modify jra's
algorithm<00:07:35.639><c> we</c><00:07:35.720><c> don't</c><00:07:35.960><c> really</c><00:07:36.199><c> care</c><00:07:36.440><c> about</c><00:07:36.680><c> the</c>

00:07:36.950 --> 00:07:36.960 align:start position:0%
algorithm we don't really care about the
 

00:07:36.960 --> 00:07:38.869 align:start position:0%
algorithm we don't really care about the
edge<00:07:37.479><c> weights</c><00:07:37.840><c> in</c><00:07:37.960><c> this</c><00:07:38.120><c> algorithm</c><00:07:38.560><c> we're</c><00:07:38.680><c> not</c>

00:07:38.869 --> 00:07:38.879 align:start position:0%
edge weights in this algorithm we're not
 

00:07:38.879 --> 00:07:41.390 align:start position:0%
edge weights in this algorithm we're not
finding<00:07:39.280><c> the</c><00:07:39.479><c> shortest</c><00:07:40.080><c> path</c><00:07:40.479><c> we're</c><00:07:40.720><c> finding</c>

00:07:41.390 --> 00:07:41.400 align:start position:0%
finding the shortest path we're finding
 

00:07:41.400 --> 00:07:44.350 align:start position:0%
finding the shortest path we're finding
the<00:07:41.639><c> path</c><00:07:42.039><c> with</c><00:07:42.199><c> the</c><00:07:42.479><c> smallest</c><00:07:43.160><c> Max</c><00:07:43.720><c> height</c><00:07:44.159><c> so</c>

00:07:44.350 --> 00:07:44.360 align:start position:0%
the path with the smallest Max height so
 

00:07:44.360 --> 00:07:47.149 align:start position:0%
the path with the smallest Max height so
when<00:07:44.479><c> I</c><00:07:44.800><c> get</c><00:07:44.960><c> to</c><00:07:45.319><c> this</c><00:07:45.800><c> position</c><00:07:46.520><c> when</c><00:07:46.639><c> I</c><00:07:46.879><c> get</c>

00:07:47.149 --> 00:07:47.159 align:start position:0%
when I get to this position when I get
 

00:07:47.159 --> 00:07:49.390 align:start position:0%
when I get to this position when I get
here<00:07:47.639><c> what</c><00:07:47.800><c> I'm</c><00:07:48.080><c> actually</c><00:07:48.400><c> going</c><00:07:48.479><c> to</c><00:07:48.680><c> say</c><00:07:49.199><c> is</c>

00:07:49.390 --> 00:07:49.400 align:start position:0%
here what I'm actually going to say is
 

00:07:49.400 --> 00:07:51.670 align:start position:0%
here what I'm actually going to say is
the<00:07:49.680><c> value</c><00:07:50.120><c> I'm</c><00:07:50.240><c> going</c><00:07:50.360><c> to</c><00:07:50.879><c> put</c><00:07:51.080><c> here</c><00:07:51.400><c> when</c><00:07:51.520><c> I</c>

00:07:51.670 --> 00:07:51.680 align:start position:0%
the value I'm going to put here when I
 

00:07:51.680 --> 00:07:53.149 align:start position:0%
the value I'm going to put here when I
add<00:07:51.919><c> this</c><00:07:52.039><c> to</c><00:07:52.159><c> the</c><00:07:52.280><c> Min</c><00:07:52.520><c> Heap</c><00:07:52.759><c> it's</c><00:07:52.919><c> not</c><00:07:53.080><c> going</c>

00:07:53.149 --> 00:07:53.159 align:start position:0%
add this to the Min Heap it's not going
 

00:07:53.159 --> 00:07:56.270 align:start position:0%
add this to the Min Heap it's not going
to<00:07:53.280><c> be</c><00:07:53.560><c> a</c><00:07:53.840><c> one</c><00:07:54.520><c> with</c><00:07:54.680><c> the</c><00:07:54.840><c> row</c><00:07:55.080><c> and</c><00:07:55.360><c> column</c><00:07:56.039><c> I'm</c>

00:07:56.270 --> 00:07:56.280 align:start position:0%
to be a one with the row and column I'm
 

00:07:56.280 --> 00:07:58.990 align:start position:0%
to be a one with the row and column I'm
actually<00:07:56.560><c> going</c><00:07:56.680><c> to</c><00:07:56.919><c> add</c><00:07:57.360><c> a</c><00:07:57.759><c> three</c><00:07:58.560><c> because</c>

00:07:58.990 --> 00:07:59.000 align:start position:0%
actually going to add a three because
 

00:07:59.000 --> 00:08:01.670 align:start position:0%
actually going to add a three because
I'm<00:07:59.520><c> saying</c><00:07:59.919><c> to</c><00:08:00.360><c> get</c><00:08:00.560><c> to</c><00:08:00.879><c> this</c><00:08:01.159><c> position</c><00:08:01.560><c> in</c>

00:08:01.670 --> 00:08:01.680 align:start position:0%
I'm saying to get to this position in
 

00:08:01.680 --> 00:08:04.309 align:start position:0%
I'm saying to get to this position in
the<00:08:01.919><c> first</c><00:08:02.280><c> place</c><00:08:02.680><c> it</c><00:08:02.840><c> took</c><00:08:03.080><c> us</c><00:08:03.319><c> a</c><00:08:03.560><c> Max</c><00:08:03.960><c> height</c>

00:08:04.309 --> 00:08:04.319 align:start position:0%
the first place it took us a Max height
 

00:08:04.319 --> 00:08:07.710 align:start position:0%
the first place it took us a Max height
of<00:08:04.680><c> three</c><00:08:05.400><c> so</c><00:08:05.680><c> it's</c><00:08:06.159><c> it's</c><00:08:06.360><c> a</c><00:08:06.479><c> bit</c><00:08:06.759><c> disingenuous</c>

00:08:07.710 --> 00:08:07.720 align:start position:0%
of three so it's it's a bit disingenuous
 

00:08:07.720 --> 00:08:10.149 align:start position:0%
of three so it's it's a bit disingenuous
to<00:08:07.879><c> say</c><00:08:08.120><c> that</c><00:08:08.440><c> this</c><00:08:08.759><c> path</c><00:08:09.159><c> only</c><00:08:09.440><c> took</c><00:08:09.639><c> a</c><00:08:09.800><c> Max</c>

00:08:10.149 --> 00:08:10.159 align:start position:0%
to say that this path only took a Max
 

00:08:10.159 --> 00:08:11.950 align:start position:0%
to say that this path only took a Max
height<00:08:10.440><c> of</c><00:08:10.639><c> one</c><00:08:10.960><c> so</c><00:08:11.159><c> I'm</c><00:08:11.280><c> not</c><00:08:11.400><c> going</c><00:08:11.479><c> to</c><00:08:11.599><c> add</c><00:08:11.759><c> a</c>

00:08:11.950 --> 00:08:11.960 align:start position:0%
height of one so I'm not going to add a
 

00:08:11.960 --> 00:08:13.670 align:start position:0%
height of one so I'm not going to add a
one<00:08:12.280><c> in</c><00:08:12.479><c> this</c><00:08:12.639><c> position</c><00:08:12.960><c> I'm</c><00:08:13.080><c> going</c><00:08:13.159><c> to</c><00:08:13.280><c> add</c><00:08:13.400><c> a</c>

00:08:13.670 --> 00:08:13.680 align:start position:0%
one in this position I'm going to add a
 

00:08:13.680 --> 00:08:16.670 align:start position:0%
one in this position I'm going to add a
three<00:08:14.319><c> so</c><00:08:14.560><c> each</c><00:08:14.759><c> time</c><00:08:15.000><c> we</c><00:08:15.240><c> add</c><00:08:15.759><c> a</c><00:08:15.960><c> coordinate</c>

00:08:16.670 --> 00:08:16.680 align:start position:0%
three so each time we add a coordinate
 

00:08:16.680 --> 00:08:19.350 align:start position:0%
three so each time we add a coordinate
to<00:08:16.879><c> the</c><00:08:17.039><c> Min</c><00:08:17.360><c> heat</c><00:08:17.639><c> we</c><00:08:17.800><c> want</c><00:08:18.039><c> the</c><00:08:18.400><c> maximum</c><00:08:19.199><c> of</c>

00:08:19.350 --> 00:08:19.360 align:start position:0%
to the Min heat we want the maximum of
 

00:08:19.360 --> 00:08:22.309 align:start position:0%
to the Min heat we want the maximum of
its<00:08:19.639><c> own</c><00:08:20.159><c> height</c><00:08:20.800><c> and</c><00:08:21.280><c> the</c><00:08:21.479><c> height</c><00:08:21.759><c> that</c><00:08:21.960><c> came</c>

00:08:22.309 --> 00:08:22.319 align:start position:0%
its own height and the height that came
 

00:08:22.319 --> 00:08:24.950 align:start position:0%
its own height and the height that came
before<00:08:22.759><c> it</c><00:08:23.759><c> so</c><00:08:23.960><c> with</c><00:08:24.120><c> that</c><00:08:24.280><c> being</c><00:08:24.520><c> said</c><00:08:24.759><c> let's</c>

00:08:24.950 --> 00:08:24.960 align:start position:0%
before it so with that being said let's
 

00:08:24.960 --> 00:08:26.909 align:start position:0%
before it so with that being said let's
go<00:08:25.120><c> through</c><00:08:25.319><c> a</c><00:08:25.520><c> really</c><00:08:25.800><c> quick</c><00:08:26.039><c> dry</c><00:08:26.400><c> run</c><00:08:26.639><c> so</c>

00:08:26.909 --> 00:08:26.919 align:start position:0%
go through a really quick dry run so
 

00:08:26.919 --> 00:08:30.110 align:start position:0%
go through a really quick dry run so
initially<00:08:27.319><c> we</c><00:08:27.520><c> have</c><00:08:27.960><c> zero</c><00:08:28.960><c> uh</c><00:08:29.520><c> our</c><00:08:29.639><c> Min</c><00:08:29.879><c> Heap</c>

00:08:30.110 --> 00:08:30.120 align:start position:0%
initially we have zero uh our Min Heap
 

00:08:30.120 --> 00:08:31.909 align:start position:0%
initially we have zero uh our Min Heap
let's<00:08:30.400><c> pop</c><00:08:30.639><c> it</c><00:08:31.039><c> and</c><00:08:31.159><c> then</c><00:08:31.440><c> let's</c><00:08:31.599><c> get</c><00:08:31.720><c> its</c>

00:08:31.909 --> 00:08:31.919 align:start position:0%
let's pop it and then let's get its
 

00:08:31.919 --> 00:08:34.550 align:start position:0%
let's pop it and then let's get its
neighbor<00:08:32.360><c> so</c><00:08:32.519><c> we</c><00:08:32.640><c> have</c><00:08:32.800><c> a</c><00:08:33.000><c> two</c><00:08:33.880><c> below</c><00:08:34.200><c> it</c><00:08:34.440><c> and</c>

00:08:34.550 --> 00:08:34.560 align:start position:0%
neighbor so we have a two below it and
 

00:08:34.560 --> 00:08:36.829 align:start position:0%
neighbor so we have a two below it and
we<00:08:34.719><c> have</c><00:08:34.880><c> a</c><00:08:35.080><c> one</c><00:08:35.599><c> to</c><00:08:35.760><c> the</c><00:08:35.919><c> right</c><00:08:36.120><c> so</c><00:08:36.279><c> let's</c><00:08:36.560><c> add</c>

00:08:36.829 --> 00:08:36.839 align:start position:0%
we have a one to the right so let's add
 

00:08:36.839 --> 00:08:39.630 align:start position:0%
we have a one to the right so let's add
those<00:08:37.080><c> so</c><00:08:37.200><c> we</c><00:08:37.360><c> add</c><00:08:37.719><c> one</c><00:08:38.320><c> row</c><00:08:38.719><c> column</c><00:08:39.200><c> and</c><00:08:39.399><c> we</c>

00:08:39.630 --> 00:08:39.640 align:start position:0%
those so we add one row column and we
 

00:08:39.640 --> 00:08:43.709 align:start position:0%
those so we add one row column and we
add<00:08:40.200><c> two</c><00:08:41.039><c> row</c><00:08:41.760><c> column</c><00:08:42.760><c> so</c><00:08:43.000><c> excuse</c><00:08:43.320><c> me</c><00:08:43.440><c> if</c><00:08:43.560><c> this</c>

00:08:43.709 --> 00:08:43.719 align:start position:0%
add two row column so excuse me if this
 

00:08:43.719 --> 00:08:45.110 align:start position:0%
add two row column so excuse me if this
drawing<00:08:44.000><c> gets</c><00:08:44.159><c> a</c><00:08:44.240><c> little</c><00:08:44.360><c> bit</c><00:08:44.519><c> messy</c><00:08:44.839><c> but</c><00:08:44.920><c> so</c>

00:08:45.110 --> 00:08:45.120 align:start position:0%
drawing gets a little bit messy but so
 

00:08:45.120 --> 00:08:46.350 align:start position:0%
drawing gets a little bit messy but so
now<00:08:45.320><c> once</c><00:08:45.600><c> again</c><00:08:45.720><c> we're</c><00:08:45.839><c> going</c><00:08:45.920><c> to</c><00:08:46.040><c> pop</c><00:08:46.240><c> from</c>

00:08:46.350 --> 00:08:46.360 align:start position:0%
now once again we're going to pop from
 

00:08:46.360 --> 00:08:48.430 align:start position:0%
now once again we're going to pop from
the<00:08:46.480><c> Min</c><00:08:46.760><c> heat</c><00:08:46.920><c> we're</c><00:08:47.040><c> going</c><00:08:47.120><c> to</c><00:08:47.279><c> pop</c><00:08:47.720><c> this</c><00:08:47.920><c> one</c>

00:08:48.430 --> 00:08:48.440 align:start position:0%
the Min heat we're going to pop this one
 

00:08:48.440 --> 00:08:50.630 align:start position:0%
the Min heat we're going to pop this one
because<00:08:48.680><c> it</c><00:08:48.800><c> has</c><00:08:48.920><c> a</c><00:08:49.120><c> smaller</c><00:08:49.920><c> Max</c><00:08:50.279><c> height</c><00:08:50.480><c> so</c>

00:08:50.630 --> 00:08:50.640 align:start position:0%
because it has a smaller Max height so
 

00:08:50.640 --> 00:08:52.829 align:start position:0%
because it has a smaller Max height so
we're<00:08:50.800><c> going</c><00:08:50.880><c> to</c><00:08:51.640><c> uh</c><00:08:51.839><c> pop</c><00:08:52.080><c> it</c><00:08:52.440><c> we're</c><00:08:52.560><c> going</c><00:08:52.680><c> to</c>

00:08:52.829 --> 00:08:52.839 align:start position:0%
we're going to uh pop it we're going to
 

00:08:52.839 --> 00:08:55.750 align:start position:0%
we're going to uh pop it we're going to
add<00:08:53.080><c> its</c><00:08:53.320><c> two</c><00:08:53.600><c> neighbors</c><00:08:54.279><c> right</c><00:08:55.080><c> uh</c><00:08:55.279><c> right</c><00:08:55.519><c> and</c>

00:08:55.750 --> 00:08:55.760 align:start position:0%
add its two neighbors right uh right and
 

00:08:55.760 --> 00:08:58.110 align:start position:0%
add its two neighbors right uh right and
bottom<00:08:56.240><c> and</c><00:08:56.480><c> those</c><00:08:56.720><c> two</c><00:08:56.920><c> neighbors</c><00:08:57.519><c> have</c><00:08:57.839><c> a</c>

00:08:58.110 --> 00:08:58.120 align:start position:0%
bottom and those two neighbors have a
 

00:08:58.120 --> 00:09:02.190 align:start position:0%
bottom and those two neighbors have a
height<00:08:58.480><c> of</c><00:08:58.800><c> three</c><00:08:59.920><c> and</c><00:09:00.600><c> four</c><00:09:01.320><c> respectively</c>

00:09:02.190 --> 00:09:02.200 align:start position:0%
height of three and four respectively
 

00:09:02.200 --> 00:09:04.509 align:start position:0%
height of three and four respectively
right<00:09:02.560><c> so</c><00:09:02.800><c> those</c><00:09:02.920><c> are</c><00:09:03.120><c> the</c><00:09:03.279><c> max</c><00:09:03.600><c> Heights</c><00:09:04.120><c> along</c>

00:09:04.509 --> 00:09:04.519 align:start position:0%
right so those are the max Heights along
 

00:09:04.519 --> 00:09:07.110 align:start position:0%
right so those are the max Heights along
each<00:09:04.680><c> of</c><00:09:04.920><c> those</c><00:09:05.200><c> paths</c><00:09:05.800><c> so</c><00:09:06.000><c> we</c><00:09:06.160><c> add</c><00:09:06.440><c> those</c><00:09:06.640><c> four</c>

00:09:07.110 --> 00:09:07.120 align:start position:0%
each of those paths so we add those four
 

00:09:07.120 --> 00:09:10.750 align:start position:0%
each of those paths so we add those four
and<00:09:07.519><c> that</c><00:09:07.800><c> three</c><00:09:08.600><c> to</c><00:09:09.240><c> our</c><00:09:09.440><c> Min</c><00:09:09.760><c> Heap</c><00:09:10.120><c> and</c><00:09:10.360><c> now</c>

00:09:10.750 --> 00:09:10.760 align:start position:0%
and that three to our Min Heap and now
 

00:09:10.760 --> 00:09:13.350 align:start position:0%
and that three to our Min Heap and now
we're<00:09:11.040><c> going</c><00:09:11.320><c> to</c><00:09:12.120><c> pop</c><00:09:12.480><c> again</c><00:09:12.800><c> from</c><00:09:12.959><c> the</c><00:09:13.079><c> Min</c>

00:09:13.350 --> 00:09:13.360 align:start position:0%
we're going to pop again from the Min
 

00:09:13.360 --> 00:09:14.750 align:start position:0%
we're going to pop again from the Min
Heap<00:09:13.600><c> this</c><00:09:13.720><c> time</c><00:09:13.839><c> we're</c><00:09:13.959><c> going</c><00:09:14.079><c> to</c><00:09:14.200><c> pop</c><00:09:14.480><c> this</c>

00:09:14.750 --> 00:09:14.760 align:start position:0%
Heap this time we're going to pop this
 

00:09:14.760 --> 00:09:16.990 align:start position:0%
Heap this time we're going to pop this
two<00:09:15.680><c> uh</c><00:09:15.800><c> because</c><00:09:16.079><c> that's</c><00:09:16.240><c> the</c><00:09:16.360><c> minimum</c><00:09:16.760><c> height</c>

00:09:16.990 --> 00:09:17.000 align:start position:0%
two uh because that's the minimum height
 

00:09:17.000 --> 00:09:18.230 align:start position:0%
two uh because that's the minimum height
right<00:09:17.120><c> now</c><00:09:17.240><c> so</c><00:09:17.360><c> we're</c><00:09:17.440><c> going</c><00:09:17.560><c> to</c><00:09:17.680><c> pop</c><00:09:17.880><c> this</c><00:09:18.000><c> to</c>

00:09:18.230 --> 00:09:18.240 align:start position:0%
right now so we're going to pop this to
 

00:09:18.240 --> 00:09:19.630 align:start position:0%
right now so we're going to pop this to
we're<00:09:18.360><c> going</c><00:09:18.480><c> to</c><00:09:18.560><c> look</c><00:09:18.720><c> at</c><00:09:18.839><c> the</c><00:09:19.079><c> bottom</c><00:09:19.480><c> and</c>

00:09:19.630 --> 00:09:19.640 align:start position:0%
we're going to look at the bottom and
 

00:09:19.640 --> 00:09:21.230 align:start position:0%
we're going to look at the bottom and
the<00:09:19.800><c> right</c><00:09:20.040><c> now</c><00:09:20.200><c> the</c><00:09:20.360><c> right</c><00:09:20.600><c> has</c><00:09:20.760><c> already</c><00:09:21.040><c> been</c>

00:09:21.230 --> 00:09:21.240 align:start position:0%
the right now the right has already been
 

00:09:21.240 --> 00:09:22.910 align:start position:0%
the right now the right has already been
visited<00:09:21.720><c> but</c><00:09:21.839><c> the</c><00:09:22.040><c> bottom</c><00:09:22.440><c> has</c><00:09:22.560><c> not</c><00:09:22.760><c> been</c>

00:09:22.910 --> 00:09:22.920 align:start position:0%
visited but the bottom has not been
 

00:09:22.920 --> 00:09:24.670 align:start position:0%
visited but the bottom has not been
added<00:09:23.200><c> to</c><00:09:23.399><c> the</c><00:09:23.519><c> Min</c><00:09:23.760><c> Heap</c><00:09:24.040><c> yet</c><00:09:24.160><c> so</c><00:09:24.279><c> let's</c><00:09:24.480><c> add</c>

00:09:24.670 --> 00:09:24.680 align:start position:0%
added to the Min Heap yet so let's add
 

00:09:24.680 --> 00:09:26.350 align:start position:0%
added to the Min Heap yet so let's add
that<00:09:24.800><c> to</c><00:09:24.920><c> the</c><00:09:25.000><c> Min</c><00:09:25.240><c> Heap</c><00:09:25.440><c> it</c><00:09:25.560><c> has</c><00:09:25.680><c> a</c><00:09:25.839><c> height</c><00:09:26.079><c> of</c>

00:09:26.350 --> 00:09:26.360 align:start position:0%
that to the Min Heap it has a height of
 

00:09:26.360 --> 00:09:28.310 align:start position:0%
that to the Min Heap it has a height of
one<00:09:27.160><c> and</c><00:09:27.440><c> you</c><00:09:27.560><c> know</c><00:09:27.680><c> we'll</c><00:09:27.880><c> add</c><00:09:28.120><c> those</c>

00:09:28.310 --> 00:09:28.320 align:start position:0%
one and you know we'll add those
 

00:09:28.320 --> 00:09:29.790 align:start position:0%
one and you know we'll add those
coordinates<00:09:28.800><c> but</c><00:09:28.920><c> I'm</c><00:09:29.000><c> just</c><00:09:29.120><c> writing</c><00:09:29.519><c> row</c>

00:09:29.790 --> 00:09:29.800 align:start position:0%
coordinates but I'm just writing row
 

00:09:29.800 --> 00:09:31.750 align:start position:0%
coordinates but I'm just writing row
column<00:09:30.279><c> just</c><00:09:30.519><c> because</c><00:09:31.079><c> to</c><00:09:31.240><c> keep</c><00:09:31.399><c> it</c><00:09:31.519><c> a</c><00:09:31.600><c> little</c>

00:09:31.750 --> 00:09:31.760 align:start position:0%
column just because to keep it a little
 

00:09:31.760 --> 00:09:34.150 align:start position:0%
column just because to keep it a little
bit<00:09:31.880><c> cleaner</c><00:09:32.600><c> but</c><00:09:32.920><c> actually</c><00:09:33.640><c> hold</c><00:09:33.839><c> on</c><00:09:34.000><c> a</c>

00:09:34.150 --> 00:09:34.160 align:start position:0%
bit cleaner but actually hold on a
 

00:09:34.160 --> 00:09:36.310 align:start position:0%
bit cleaner but actually hold on a
second<00:09:34.480><c> I</c><00:09:34.600><c> added</c><00:09:34.880><c> a</c><00:09:35.120><c> one</c><00:09:35.560><c> here</c><00:09:35.880><c> was</c><00:09:36.000><c> that</c><00:09:36.200><c> the</c>

00:09:36.310 --> 00:09:36.320 align:start position:0%
second I added a one here was that the
 

00:09:36.320 --> 00:09:38.110 align:start position:0%
second I added a one here was that the
correct<00:09:36.680><c> thing</c><00:09:36.839><c> to</c><00:09:37.040><c> do</c><00:09:37.399><c> because</c><00:09:37.720><c> the</c><00:09:37.959><c> the</c>

00:09:38.110 --> 00:09:38.120 align:start position:0%
correct thing to do because the the
 

00:09:38.120 --> 00:09:39.949 align:start position:0%
correct thing to do because the the
position<00:09:38.440><c> that</c><00:09:38.600><c> came</c><00:09:38.880><c> before</c><00:09:39.160><c> it</c><00:09:39.320><c> was</c><00:09:39.480><c> a</c><00:09:39.640><c> two</c>

00:09:39.949 --> 00:09:39.959 align:start position:0%
position that came before it was a two
 

00:09:39.959 --> 00:09:42.230 align:start position:0%
position that came before it was a two
it's<00:09:40.200><c> disingenuous</c><00:09:41.040><c> to</c><00:09:41.200><c> say</c><00:09:41.399><c> that</c><00:09:41.680><c> this</c><00:09:42.040><c> to</c>

00:09:42.230 --> 00:09:42.240 align:start position:0%
it's disingenuous to say that this to
 

00:09:42.240 --> 00:09:44.230 align:start position:0%
it's disingenuous to say that this to
reach<00:09:42.640><c> this</c><00:09:42.839><c> position</c><00:09:43.240><c> only</c><00:09:43.560><c> takes</c><00:09:43.800><c> a</c><00:09:44.000><c> height</c>

00:09:44.230 --> 00:09:44.240 align:start position:0%
reach this position only takes a height
 

00:09:44.240 --> 00:09:46.470 align:start position:0%
reach this position only takes a height
of<00:09:44.440><c> one</c><00:09:44.920><c> when</c><00:09:45.079><c> in</c><00:09:45.360><c> reality</c><00:09:45.800><c> what</c><00:09:45.959><c> came</c><00:09:46.240><c> before</c>

00:09:46.470 --> 00:09:46.480 align:start position:0%
of one when in reality what came before
 

00:09:46.480 --> 00:09:48.590 align:start position:0%
of one when in reality what came before
it<00:09:46.640><c> was</c><00:09:46.760><c> a</c><00:09:46.959><c> two</c><00:09:47.519><c> so</c><00:09:47.720><c> what</c><00:09:47.839><c> we're</c><00:09:48.079><c> adding</c><00:09:48.519><c> what</c>

00:09:48.590 --> 00:09:48.600 align:start position:0%
it was a two so what we're adding what
 

00:09:48.600 --> 00:09:50.870 align:start position:0%
it was a two so what we're adding what
we're<00:09:48.839><c> really</c><00:09:49.079><c> adding</c><00:09:49.360><c> to</c><00:09:49.519><c> it</c><00:09:49.680><c> is</c><00:09:49.800><c> the</c><00:09:50.040><c> maximum</c>

00:09:50.870 --> 00:09:50.880 align:start position:0%
we're really adding to it is the maximum
 

00:09:50.880 --> 00:09:53.470 align:start position:0%
we're really adding to it is the maximum
of<00:09:51.519><c> itself</c><00:09:52.120><c> which</c><00:09:52.279><c> is</c><00:09:52.480><c> one</c><00:09:52.839><c> and</c><00:09:53.040><c> the</c><00:09:53.120><c> one</c><00:09:53.279><c> that</c>

00:09:53.470 --> 00:09:53.480 align:start position:0%
of itself which is one and the one that
 

00:09:53.480 --> 00:09:55.710 align:start position:0%
of itself which is one and the one that
came<00:09:53.640><c> before</c><00:09:53.880><c> it</c><00:09:54.040><c> which</c><00:09:54.160><c> is</c><00:09:54.360><c> two</c><00:09:54.920><c> so</c><00:09:55.360><c> the</c><00:09:55.480><c> max</c>

00:09:55.710 --> 00:09:55.720 align:start position:0%
came before it which is two so the max
 

00:09:55.720 --> 00:09:57.269 align:start position:0%
came before it which is two so the max
of<00:09:55.880><c> one</c><00:09:56.000><c> and</c><00:09:56.160><c> two</c><00:09:56.360><c> is</c><00:09:56.760><c> obviously</c><00:09:57.040><c> going</c><00:09:57.160><c> to</c>

00:09:57.269 --> 00:09:57.279 align:start position:0%
of one and two is obviously going to
 

00:09:57.279 --> 00:09:58.910 align:start position:0%
of one and two is obviously going to
evaluate<00:09:57.720><c> to</c><00:09:57.920><c> two</c><00:09:58.160><c> so</c><00:09:58.320><c> we're</c><00:09:58.440><c> going</c><00:09:58.519><c> to</c><00:09:58.680><c> add</c>

00:09:58.910 --> 00:09:58.920 align:start position:0%
evaluate to two so we're going to add
 

00:09:58.920 --> 00:10:02.069 align:start position:0%
evaluate to two so we're going to add
two<00:09:59.680><c> and</c><00:09:59.839><c> the</c><00:10:00.000><c> row</c><00:10:00.360><c> column</c><00:10:00.959><c> to</c><00:10:01.240><c> the</c><00:10:01.440><c> Heap</c><00:10:02.000><c> now</c>

00:10:02.069 --> 00:10:02.079 align:start position:0%
two and the row column to the Heap now
 

00:10:02.079 --> 00:10:03.630 align:start position:0%
two and the row column to the Heap now
we're<00:10:02.240><c> going</c><00:10:02.320><c> to</c><00:10:02.480><c> pop</c><00:10:03.040><c> again</c><00:10:03.320><c> from</c><00:10:03.480><c> the</c>

00:10:03.630 --> 00:10:03.640 align:start position:0%
we're going to pop again from the
 

00:10:03.640 --> 00:10:05.269 align:start position:0%
we're going to pop again from the
minimum<00:10:04.079><c> Heap</c><00:10:04.480><c> and</c><00:10:04.640><c> this</c><00:10:04.720><c> is</c><00:10:04.839><c> going</c><00:10:04.959><c> to</c><00:10:05.040><c> be</c><00:10:05.200><c> the</c>

00:10:05.269 --> 00:10:05.279 align:start position:0%
minimum Heap and this is going to be the
 

00:10:05.279 --> 00:10:06.910 align:start position:0%
minimum Heap and this is going to be the
one<00:10:05.399><c> that</c><00:10:05.519><c> we</c><00:10:05.720><c> pop</c><00:10:06.160><c> so</c><00:10:06.320><c> we'll</c><00:10:06.519><c> add</c><00:10:06.720><c> its</c>

00:10:06.910 --> 00:10:06.920 align:start position:0%
one that we pop so we'll add its
 

00:10:06.920 --> 00:10:08.150 align:start position:0%
one that we pop so we'll add its
neighbors<00:10:07.360><c> it</c><00:10:07.480><c> doesn't</c><00:10:07.680><c> have</c><00:10:07.800><c> a</c><00:10:07.920><c> bottom</c>

00:10:08.150 --> 00:10:08.160 align:start position:0%
neighbors it doesn't have a bottom
 

00:10:08.160 --> 00:10:09.470 align:start position:0%
neighbors it doesn't have a bottom
neighbor<00:10:08.440><c> it</c><00:10:08.519><c> doesn't</c><00:10:08.720><c> have</c><00:10:08.800><c> a</c><00:10:08.920><c> left</c><00:10:09.120><c> neighbor</c>

00:10:09.470 --> 00:10:09.480 align:start position:0%
neighbor it doesn't have a left neighbor
 

00:10:09.480 --> 00:10:10.790 align:start position:0%
neighbor it doesn't have a left neighbor
the<00:10:09.680><c> above</c><00:10:09.959><c> neighbor</c><00:10:10.240><c> has</c><00:10:10.360><c> already</c><00:10:10.600><c> been</c>

00:10:10.790 --> 00:10:10.800 align:start position:0%
the above neighbor has already been
 

00:10:10.800 --> 00:10:12.590 align:start position:0%
the above neighbor has already been
visited<00:10:11.240><c> the</c><00:10:11.480><c> right</c><00:10:11.680><c> neighbor</c><00:10:12.120><c> hasn't</c><00:10:12.399><c> been</c>

00:10:12.590 --> 00:10:12.600 align:start position:0%
visited the right neighbor hasn't been
 

00:10:12.600 --> 00:10:14.990 align:start position:0%
visited the right neighbor hasn't been
visited<00:10:13.120><c> so</c><00:10:13.279><c> let's</c><00:10:13.560><c> add</c><00:10:13.760><c> that</c><00:10:13.880><c> to</c><00:10:14.000><c> the</c><00:10:14.120><c> m</c><00:10:14.440><c> Heap</c>

00:10:14.990 --> 00:10:15.000 align:start position:0%
visited so let's add that to the m Heap
 

00:10:15.000 --> 00:10:17.030 align:start position:0%
visited so let's add that to the m Heap
so<00:10:15.720><c> again</c><00:10:15.920><c> we'll</c><00:10:16.120><c> take</c><00:10:16.279><c> the</c><00:10:16.440><c> maximum</c><00:10:16.880><c> of</c>

00:10:17.030 --> 00:10:17.040 align:start position:0%
so again we'll take the maximum of
 

00:10:17.040 --> 00:10:18.990 align:start position:0%
so again we'll take the maximum of
itself<00:10:17.519><c> and</c><00:10:17.680><c> what</c><00:10:17.839><c> came</c><00:10:18.079><c> before</c><00:10:18.320><c> it</c><00:10:18.760><c> so</c>

00:10:18.990 --> 00:10:19.000 align:start position:0%
itself and what came before it so
 

00:10:19.000 --> 00:10:21.630 align:start position:0%
itself and what came before it so
basically<00:10:19.360><c> the</c><00:10:19.480><c> max</c><00:10:19.720><c> of</c><00:10:19.880><c> two</c><00:10:20.120><c> and</c><00:10:20.279><c> two</c><00:10:20.720><c> so</c><00:10:21.000><c> two</c>

00:10:21.630 --> 00:10:21.640 align:start position:0%
basically the max of two and two so two
 

00:10:21.640 --> 00:10:23.389 align:start position:0%
basically the max of two and two so two
is<00:10:21.800><c> going</c><00:10:21.880><c> to</c><00:10:22.000><c> be</c><00:10:22.160><c> what</c><00:10:22.279><c> we</c><00:10:22.480><c> add</c><00:10:22.800><c> and</c><00:10:22.959><c> of</c><00:10:23.079><c> course</c>

00:10:23.389 --> 00:10:23.399 align:start position:0%
is going to be what we add and of course
 

00:10:23.399 --> 00:10:25.190 align:start position:0%
is going to be what we add and of course
its<00:10:23.640><c> coordinates</c><00:10:24.600><c> once</c><00:10:24.839><c> again</c><00:10:25.000><c> we're</c><00:10:25.120><c> going</c>

00:10:25.190 --> 00:10:25.200 align:start position:0%
its coordinates once again we're going
 

00:10:25.200 --> 00:10:27.590 align:start position:0%
its coordinates once again we're going
to<00:10:25.360><c> pop</c><00:10:25.560><c> from</c><00:10:25.680><c> the</c><00:10:25.839><c> in</c><00:10:26.120><c> Heap</c><00:10:26.640><c> pop</c><00:10:26.880><c> the</c><00:10:27.040><c> same</c><00:10:27.279><c> one</c>

00:10:27.590 --> 00:10:27.600 align:start position:0%
to pop from the in Heap pop the same one
 

00:10:27.600 --> 00:10:30.430 align:start position:0%
to pop from the in Heap pop the same one
this<00:10:27.800><c> two</c><00:10:28.440><c> We'll</c><00:10:28.680><c> add</c><00:10:28.920><c> its</c><00:10:29.360><c> neighbors</c><00:10:30.240><c> uh</c><00:10:30.360><c> it</c>

00:10:30.430 --> 00:10:30.440 align:start position:0%
this two We'll add its neighbors uh it
 

00:10:30.440 --> 00:10:33.110 align:start position:0%
this two We'll add its neighbors uh it
only<00:10:30.680><c> has</c><00:10:30.839><c> one</c><00:10:31.040><c> neighbor</c><00:10:31.519><c> this</c><00:10:31.959><c> height</c><00:10:32.200><c> of</c><00:10:32.480><c> one</c>

00:10:33.110 --> 00:10:33.120 align:start position:0%
only has one neighbor this height of one
 

00:10:33.120 --> 00:10:34.870 align:start position:0%
only has one neighbor this height of one
but<00:10:33.279><c> that's</c><00:10:33.519><c> actually</c><00:10:33.720><c> going</c><00:10:33.839><c> to</c><00:10:33.959><c> be</c><00:10:34.079><c> a</c><00:10:34.279><c> two</c>

00:10:34.870 --> 00:10:34.880 align:start position:0%
but that's actually going to be a two
 

00:10:34.880 --> 00:10:36.230 align:start position:0%
but that's actually going to be a two
because<00:10:35.160><c> we</c><00:10:35.279><c> know</c><00:10:35.600><c> that</c><00:10:35.800><c> you</c><00:10:35.920><c> know</c><00:10:36.079><c> the</c>

00:10:36.230 --> 00:10:36.240 align:start position:0%
because we know that you know the
 

00:10:36.240 --> 00:10:38.710 align:start position:0%
because we know that you know the
maximum<00:10:36.639><c> height</c><00:10:36.839><c> along</c><00:10:37.160><c> this</c><00:10:37.560><c> path</c><00:10:37.920><c> itself</c>

00:10:38.710 --> 00:10:38.720 align:start position:0%
maximum height along this path itself
 

00:10:38.720 --> 00:10:41.550 align:start position:0%
maximum height along this path itself
was<00:10:38.920><c> two</c><00:10:39.440><c> so</c><00:10:39.600><c> we're</c><00:10:39.720><c> going</c><00:10:39.800><c> to</c><00:10:39.880><c> add</c><00:10:40.040><c> a</c><00:10:40.200><c> two</c><00:10:40.800><c> row</c>

00:10:41.550 --> 00:10:41.560 align:start position:0%
was two so we're going to add a two row
 

00:10:41.560 --> 00:10:43.870 align:start position:0%
was two so we're going to add a two row
column<00:10:42.240><c> now</c><00:10:42.480><c> once</c><00:10:42.800><c> again</c><00:10:43.120><c> one</c><00:10:43.399><c> last</c><00:10:43.720><c> time</c>

00:10:43.870 --> 00:10:43.880 align:start position:0%
column now once again one last time
 

00:10:43.880 --> 00:10:45.470 align:start position:0%
column now once again one last time
we're<00:10:44.040><c> going</c><00:10:44.120><c> to</c><00:10:44.320><c> pop</c><00:10:44.560><c> from</c><00:10:44.680><c> the</c><00:10:44.800><c> Min</c><00:10:45.120><c> Heap</c>

00:10:45.470 --> 00:10:45.480 align:start position:0%
we're going to pop from the Min Heap
 

00:10:45.480 --> 00:10:48.190 align:start position:0%
we're going to pop from the Min Heap
we're<00:10:45.639><c> going</c><00:10:45.720><c> to</c><00:10:45.920><c> pop</c><00:10:46.279><c> this</c><00:10:46.519><c> value</c><00:10:47.279><c> we</c><00:10:47.519><c> pop</c><00:10:47.760><c> it</c>

00:10:48.190 --> 00:10:48.200 align:start position:0%
we're going to pop this value we pop it
 

00:10:48.200 --> 00:10:49.870 align:start position:0%
we're going to pop this value we pop it
and<00:10:48.639><c> before</c><00:10:48.920><c> we</c><00:10:49.120><c> continue</c><00:10:49.519><c> we're</c><00:10:49.680><c> going</c><00:10:49.760><c> to</c>

00:10:49.870 --> 00:10:49.880 align:start position:0%
and before we continue we're going to
 

00:10:49.880 --> 00:10:52.790 align:start position:0%
and before we continue we're going to
see<00:10:50.160><c> that</c><00:10:50.440><c> okay</c><00:10:50.680><c> it's</c><00:10:51.160><c> its</c><00:10:51.480><c> coordinates</c><00:10:52.480><c> are</c>

00:10:52.790 --> 00:10:52.800 align:start position:0%
see that okay it's its coordinates are
 

00:10:52.800 --> 00:10:55.230 align:start position:0%
see that okay it's its coordinates are
the<00:10:53.040><c> destination</c><00:10:53.720><c> coordinates</c><00:10:54.399><c> so</c><00:10:54.800><c> we</c><00:10:54.920><c> can</c>

00:10:55.230 --> 00:10:55.240 align:start position:0%
the destination coordinates so we can
 

00:10:55.240 --> 00:10:56.710 align:start position:0%
the destination coordinates so we can
return<00:10:55.519><c> now</c><00:10:55.760><c> what</c><00:10:55.880><c> are</c><00:10:55.959><c> we</c><00:10:56.079><c> going</c><00:10:56.200><c> to</c><00:10:56.440><c> return</c>

00:10:56.710 --> 00:10:56.720 align:start position:0%
return now what are we going to return
 

00:10:56.720 --> 00:10:58.870 align:start position:0%
return now what are we going to return
well<00:10:56.920><c> what</c><00:10:57.040><c> was</c><00:10:57.200><c> the</c><00:10:57.360><c> max</c><00:10:57.680><c> height</c><00:10:58.040><c> along</c><00:10:58.519><c> this</c>

00:10:58.870 --> 00:10:58.880 align:start position:0%
well what was the max height along this
 

00:10:58.880 --> 00:11:01.389 align:start position:0%
well what was the max height along this
path<00:10:59.440><c> what</c><00:10:59.560><c> was</c><00:10:59.720><c> the</c><00:10:59.880><c> max</c><00:11:00.240><c> height</c><00:11:00.600><c> along</c><00:11:01.079><c> this</c>

00:11:01.389 --> 00:11:01.399 align:start position:0%
path what was the max height along this
 

00:11:01.399 --> 00:11:04.190 align:start position:0%
path what was the max height along this
path<00:11:02.079><c> that</c><00:11:02.720><c> uh</c><00:11:02.839><c> we</c><00:11:02.959><c> had</c><00:11:03.120><c> to</c><00:11:03.240><c> do</c><00:11:03.560><c> obviously</c><00:11:03.959><c> a</c>

00:11:04.190 --> 00:11:04.200 align:start position:0%
path that uh we had to do obviously a
 

00:11:04.200 --> 00:11:06.389 align:start position:0%
path that uh we had to do obviously a
two<00:11:04.600><c> in</c><00:11:04.800><c> either</c><00:11:05.040><c> of</c><00:11:05.240><c> these</c><00:11:05.519><c> positions</c><00:11:06.160><c> but</c><00:11:06.279><c> are</c>

00:11:06.389 --> 00:11:06.399 align:start position:0%
two in either of these positions but are
 

00:11:06.399 --> 00:11:07.590 align:start position:0%
two in either of these positions but are
we<00:11:06.560><c> actually</c><00:11:06.760><c> going</c><00:11:06.880><c> to</c><00:11:07.079><c> have</c><00:11:07.200><c> to</c><00:11:07.399><c> look</c>

00:11:07.590 --> 00:11:07.600 align:start position:0%
we actually going to have to look
 

00:11:07.600 --> 00:11:09.629 align:start position:0%
we actually going to have to look
through<00:11:07.839><c> the</c><00:11:08.000><c> entire</c><00:11:08.399><c> path</c><00:11:08.720><c> again</c><00:11:09.120><c> no</c><00:11:09.399><c> because</c>

00:11:09.629 --> 00:11:09.639 align:start position:0%
through the entire path again no because
 

00:11:09.639 --> 00:11:11.670 align:start position:0%
through the entire path again no because
when<00:11:09.800><c> we</c><00:11:10.040><c> added</c><00:11:10.440><c> this</c><00:11:10.560><c> to</c><00:11:10.720><c> the</c><00:11:10.839><c> Min</c><00:11:11.120><c> Heap</c><00:11:11.440><c> we</c>

00:11:11.670 --> 00:11:11.680 align:start position:0%
when we added this to the Min Heap we
 

00:11:11.680 --> 00:11:14.150 align:start position:0%
when we added this to the Min Heap we
added<00:11:11.959><c> it</c><00:11:12.160><c> as</c><00:11:12.320><c> a</c><00:11:12.519><c> two</c><00:11:13.279><c> and</c><00:11:13.399><c> then</c><00:11:13.560><c> we</c><00:11:13.720><c> added</c><00:11:13.959><c> its</c>

00:11:14.150 --> 00:11:14.160 align:start position:0%
added it as a two and then we added its
 

00:11:14.160 --> 00:11:16.470 align:start position:0%
added it as a two and then we added its
coordinates<00:11:14.839><c> so</c><00:11:15.000><c> we</c><00:11:15.160><c> can</c><00:11:15.440><c> say</c><00:11:15.920><c> that</c><00:11:16.040><c> the</c><00:11:16.200><c> max</c>

00:11:16.470 --> 00:11:16.480 align:start position:0%
coordinates so we can say that the max
 

00:11:16.480 --> 00:11:18.990 align:start position:0%
coordinates so we can say that the max
height<00:11:16.680><c> to</c><00:11:16.839><c> reach</c><00:11:17.040><c> it</c><00:11:17.360><c> was</c><00:11:17.639><c> a</c><00:11:17.920><c> two</c><00:11:18.560><c> this</c><00:11:18.639><c> is</c><00:11:18.800><c> the</c>

00:11:18.990 --> 00:11:19.000 align:start position:0%
height to reach it was a two this is the
 

00:11:19.000 --> 00:11:20.910 align:start position:0%
height to reach it was a two this is the
value<00:11:19.240><c> that</c><00:11:19.360><c> we're</c><00:11:19.480><c> going</c><00:11:19.560><c> to</c><00:11:19.880><c> return</c><00:11:20.560><c> and</c>

00:11:20.910 --> 00:11:20.920 align:start position:0%
value that we're going to return and
 

00:11:20.920 --> 00:11:23.590 align:start position:0%
value that we're going to return and
then<00:11:21.079><c> we're</c><00:11:21.320><c> done</c><00:11:21.639><c> so</c><00:11:22.519><c> that's</c><00:11:22.760><c> kind</c><00:11:22.880><c> of</c><00:11:23.399><c> the</c>

00:11:23.590 --> 00:11:23.600 align:start position:0%
then we're done so that's kind of the
 

00:11:23.600 --> 00:11:25.509 align:start position:0%
then we're done so that's kind of the
general<00:11:24.000><c> picture</c><00:11:24.399><c> of</c><00:11:24.560><c> how</c><00:11:24.760><c> this</c><00:11:24.920><c> algorithm</c><00:11:25.399><c> is</c>

00:11:25.509 --> 00:11:25.519 align:start position:0%
general picture of how this algorithm is
 

00:11:25.519 --> 00:11:27.550 align:start position:0%
general picture of how this algorithm is
going<00:11:25.600><c> to</c><00:11:25.800><c> work</c><00:11:26.279><c> coding</c><00:11:26.600><c> it</c><00:11:26.760><c> up</c><00:11:26.959><c> is</c><00:11:27.120><c> not</c><00:11:27.320><c> too</c>

00:11:27.550 --> 00:11:27.560 align:start position:0%
going to work coding it up is not too
 

00:11:27.560 --> 00:11:30.350 align:start position:0%
going to work coding it up is not too
bad<00:11:27.800><c> if</c><00:11:27.880><c> you</c><00:11:28.040><c> know</c><00:11:28.600><c> Jar's</c><00:11:29.279><c> Alm</c><00:11:29.760><c> and</c><00:11:29.920><c> you</c><00:11:30.079><c> know</c>

00:11:30.350 --> 00:11:30.360 align:start position:0%
bad if you know Jar's Alm and you know
 

00:11:30.360 --> 00:11:33.230 align:start position:0%
bad if you know Jar's Alm and you know
how<00:11:30.480><c> to</c><00:11:30.839><c> use</c><00:11:31.160><c> a</c><00:11:31.360><c> minimum</c><00:11:31.839><c> Heap</c><00:11:32.519><c> so</c><00:11:32.800><c> now</c><00:11:32.959><c> let's</c>

00:11:33.230 --> 00:11:33.240 align:start position:0%
how to use a minimum Heap so now let's
 

00:11:33.240 --> 00:11:35.430 align:start position:0%
how to use a minimum Heap so now let's
dive<00:11:33.480><c> into</c><00:11:33.760><c> that</c><00:11:33.959><c> code</c><00:11:34.760><c> so</c><00:11:34.959><c> the</c><00:11:35.079><c> first</c><00:11:35.279><c> thing</c>

00:11:35.430 --> 00:11:35.440 align:start position:0%
dive into that code so the first thing
 

00:11:35.440 --> 00:11:37.350 align:start position:0%
dive into that code so the first thing
I'm<00:11:35.560><c> going</c><00:11:35.639><c> to</c><00:11:35.839><c> do</c><00:11:36.079><c> is</c><00:11:36.279><c> get</c><00:11:36.440><c> the</c><00:11:36.720><c> length</c><00:11:37.079><c> of</c><00:11:37.200><c> the</c>

00:11:37.350 --> 00:11:37.360 align:start position:0%
I'm going to do is get the length of the
 

00:11:37.360 --> 00:11:39.030 align:start position:0%
I'm going to do is get the length of the
grid<00:11:37.600><c> we</c><00:11:37.720><c> know</c><00:11:37.839><c> it's</c><00:11:37.959><c> a</c><00:11:38.120><c> square</c><00:11:38.480><c> grid</c><00:11:38.800><c> so</c><00:11:38.959><c> we</c>

00:11:39.030 --> 00:11:39.040 align:start position:0%
grid we know it's a square grid so we
 

00:11:39.040 --> 00:11:41.870 align:start position:0%
grid we know it's a square grid so we
can<00:11:39.279><c> just</c><00:11:39.839><c> uh</c><00:11:40.440><c> say</c><00:11:40.720><c> that</c><00:11:40.880><c> n</c><00:11:41.279><c> is</c><00:11:41.480><c> both</c><00:11:41.639><c> of</c><00:11:41.760><c> the</c>

00:11:41.870 --> 00:11:41.880 align:start position:0%
can just uh say that n is both of the
 

00:11:41.880 --> 00:11:43.430 align:start position:0%
can just uh say that n is both of the
dimensions<00:11:42.279><c> we</c><00:11:42.399><c> are</c><00:11:42.519><c> going</c><00:11:42.600><c> to</c><00:11:42.720><c> have</c><00:11:42.880><c> a</c><00:11:43.079><c> visit</c>

00:11:43.430 --> 00:11:43.440 align:start position:0%
dimensions we are going to have a visit
 

00:11:43.440 --> 00:11:45.550 align:start position:0%
dimensions we are going to have a visit
hash<00:11:43.800><c> set</c><00:11:44.360><c> to</c><00:11:44.560><c> make</c><00:11:44.680><c> sure</c><00:11:44.839><c> we</c><00:11:44.959><c> don't</c><00:11:45.120><c> visit</c><00:11:45.480><c> the</c>

00:11:45.550 --> 00:11:45.560 align:start position:0%
hash set to make sure we don't visit the
 

00:11:45.560 --> 00:11:48.069 align:start position:0%
hash set to make sure we don't visit the
same<00:11:45.800><c> coordinate</c><00:11:46.320><c> twice</c><00:11:46.880><c> so</c><00:11:47.079><c> let's</c><00:11:47.320><c> do</c><00:11:47.639><c> that</c>

00:11:48.069 --> 00:11:48.079 align:start position:0%
same coordinate twice so let's do that
 

00:11:48.079 --> 00:11:50.389 align:start position:0%
same coordinate twice so let's do that
we're<00:11:48.320><c> also</c><00:11:48.639><c> going</c><00:11:48.720><c> to</c><00:11:48.920><c> have</c><00:11:49.040><c> a</c><00:11:49.279><c> minimum</c><00:11:49.800><c> Heap</c>

00:11:50.389 --> 00:11:50.399 align:start position:0%
we're also going to have a minimum Heap
 

00:11:50.399 --> 00:11:51.829 align:start position:0%
we're also going to have a minimum Heap
remember<00:11:50.839><c> we're</c><00:11:51.000><c> going</c><00:11:51.079><c> to</c><00:11:51.200><c> initialize</c><00:11:51.720><c> the</c>

00:11:51.829 --> 00:11:51.839 align:start position:0%
remember we're going to initialize the
 

00:11:51.839 --> 00:11:55.110 align:start position:0%
remember we're going to initialize the
minimum<00:11:52.240><c> Heap</c><00:11:52.920><c> with</c><00:11:53.639><c> values</c><00:11:54.519><c> the</c><00:11:54.639><c> first</c><00:11:54.880><c> value</c>

00:11:55.110 --> 00:11:55.120 align:start position:0%
minimum Heap with values the first value
 

00:11:55.120 --> 00:11:56.269 align:start position:0%
minimum Heap with values the first value
is<00:11:55.200><c> going</c><00:11:55.320><c> to</c><00:11:55.399><c> be</c><00:11:55.519><c> the</c><00:11:55.680><c> time</c><00:11:55.959><c> that's</c><00:11:56.079><c> going</c><00:11:56.200><c> to</c>

00:11:56.269 --> 00:11:56.279 align:start position:0%
is going to be the time that's going to
 

00:11:56.279 --> 00:11:57.750 align:start position:0%
is going to be the time that's going to
be<00:11:56.399><c> the</c><00:11:56.560><c> key</c><00:11:56.880><c> that's</c><00:11:57.000><c> going</c><00:11:57.079><c> to</c><00:11:57.240><c> determine</c>

00:11:57.750 --> 00:11:57.760 align:start position:0%
be the key that's going to determine
 

00:11:57.760 --> 00:11:59.470 align:start position:0%
be the key that's going to determine
what<00:11:57.880><c> we</c><00:11:58.040><c> actually</c><00:11:58.440><c> pop</c><00:11:58.720><c> from</c><00:11:58.880><c> them</c><00:11:59.000><c> in</c><00:11:59.279><c> Heap</c>

00:11:59.470 --> 00:11:59.480 align:start position:0%
what we actually pop from them in Heap
 

00:11:59.480 --> 00:12:00.310 align:start position:0%
what we actually pop from them in Heap
and<00:11:59.560><c> then</c><00:11:59.639><c> we're</c><00:11:59.760><c> going</c><00:11:59.839><c> to</c><00:11:59.959><c> add</c><00:12:00.120><c> the</c>

00:12:00.310 --> 00:12:00.320 align:start position:0%
and then we're going to add the
 

00:12:00.320 --> 00:12:03.069 align:start position:0%
and then we're going to add the
coordinates<00:12:01.320><c> the</c><00:12:01.519><c> time</c><00:12:01.800><c> is</c><00:12:02.000><c> basically</c><00:12:02.760><c> also</c>

00:12:03.069 --> 00:12:03.079 align:start position:0%
coordinates the time is basically also
 

00:12:03.079 --> 00:12:05.150 align:start position:0%
coordinates the time is basically also
the<00:12:03.279><c> max</c><00:12:03.680><c> height</c><00:12:03.920><c> so</c><00:12:04.040><c> you</c><00:12:04.120><c> can</c><00:12:04.320><c> call</c><00:12:04.480><c> it</c><00:12:04.720><c> time</c>

00:12:05.150 --> 00:12:05.160 align:start position:0%
the max height so you can call it time
 

00:12:05.160 --> 00:12:07.509 align:start position:0%
the max height so you can call it time
or<00:12:05.519><c> the</c><00:12:06.040><c> you</c><00:12:06.160><c> know</c><00:12:06.399><c> Max</c><00:12:06.720><c> height</c><00:12:07.000><c> that</c><00:12:07.200><c> it'll</c>

00:12:07.509 --> 00:12:07.519 align:start position:0%
or the you know Max height that it'll
 

00:12:07.519 --> 00:12:09.870 align:start position:0%
or the you know Max height that it'll
take<00:12:08.040><c> and</c><00:12:08.480><c> initially</c><00:12:08.959><c> we're</c><00:12:09.399><c> going</c><00:12:09.519><c> to</c><00:12:09.680><c> add</c>

00:12:09.870 --> 00:12:09.880 align:start position:0%
take and initially we're going to add
 

00:12:09.880 --> 00:12:12.150 align:start position:0%
take and initially we're going to add
the<00:12:10.040><c> top</c><00:12:10.399><c> left</c><00:12:10.720><c> coordinate</c><00:12:11.279><c> so</c><00:12:11.440><c> what</c><00:12:11.560><c> are</c><00:12:11.800><c> the</c>

00:12:12.150 --> 00:12:12.160 align:start position:0%
the top left coordinate so what are the
 

00:12:12.160 --> 00:12:13.389 align:start position:0%
the top left coordinate so what are the
what's<00:12:12.320><c> the</c><00:12:12.519><c> height</c><00:12:12.720><c> of</c><00:12:12.839><c> the</c><00:12:12.959><c> top</c><00:12:13.199><c> left</c>

00:12:13.389 --> 00:12:13.399 align:start position:0%
what's the height of the top left
 

00:12:13.399 --> 00:12:15.509 align:start position:0%
what's the height of the top left
coordinate<00:12:13.839><c> it's</c><00:12:13.959><c> going</c><00:12:14.079><c> to</c><00:12:14.160><c> be</c><00:12:14.360><c> whatever</c><00:12:14.920><c> is</c>

00:12:15.509 --> 00:12:15.519 align:start position:0%
coordinate it's going to be whatever is
 

00:12:15.519 --> 00:12:17.150 align:start position:0%
coordinate it's going to be whatever is
in<00:12:15.680><c> that</c><00:12:15.880><c> position</c><00:12:16.240><c> in</c><00:12:16.360><c> the</c><00:12:16.519><c> grid</c><00:12:16.920><c> and</c><00:12:17.040><c> the</c>

00:12:17.150 --> 00:12:17.160 align:start position:0%
in that position in the grid and the
 

00:12:17.160 --> 00:12:19.030 align:start position:0%
in that position in the grid and the
coordinates<00:12:18.000><c> themselves</c><00:12:18.279><c> are</c><00:12:18.440><c> going</c><00:12:18.519><c> to</c><00:12:18.600><c> be</c><00:12:18.720><c> 0</c>

00:12:19.030 --> 00:12:19.040 align:start position:0%
coordinates themselves are going to be 0
 

00:12:19.040 --> 00:12:21.350 align:start position:0%
coordinates themselves are going to be 0
0<00:12:19.440><c> that's</c><00:12:19.600><c> the</c><00:12:19.800><c> top</c><00:12:20.079><c> left</c><00:12:20.680><c> and</c><00:12:20.959><c> since</c><00:12:21.160><c> we're</c>

00:12:21.350 --> 00:12:21.360 align:start position:0%
0 that's the top left and since we're
 

00:12:21.360 --> 00:12:22.990 align:start position:0%
0 that's the top left and since we're
adding<00:12:21.680><c> this</c><00:12:21.800><c> to</c><00:12:21.920><c> the</c><00:12:22.000><c> Min</c><00:12:22.320><c> Heap</c><00:12:22.560><c> we</c><00:12:22.680><c> can</c><00:12:22.839><c> go</c>

00:12:22.990 --> 00:12:23.000 align:start position:0%
adding this to the Min Heap we can go
 

00:12:23.000 --> 00:12:26.150 align:start position:0%
adding this to the Min Heap we can go
ahead<00:12:23.600><c> and</c><00:12:23.880><c> actually</c><00:12:24.240><c> add</c><00:12:24.480><c> to</c><00:12:24.800><c> visit</c><00:12:25.760><c> uh</c><00:12:25.959><c> the</c>

00:12:26.150 --> 00:12:26.160 align:start position:0%
ahead and actually add to visit uh the
 

00:12:26.160 --> 00:12:28.829 align:start position:0%
ahead and actually add to visit uh the
position<00:12:26.920><c> 0</c><00:12:27.399><c> 0</c><00:12:28.240><c> cuz</c><00:12:28.360><c> we</c><00:12:28.480><c> don't</c><00:12:28.600><c> want</c><00:12:28.680><c> to</c><00:12:28.760><c> have</c>

00:12:28.829 --> 00:12:28.839 align:start position:0%
position 0 0 cuz we don't want to have
 

00:12:28.839 --> 00:12:31.389 align:start position:0%
position 0 0 cuz we don't want to have
to<00:12:28.959><c> visit</c><00:12:29.440><c> that</c><00:12:29.680><c> again</c><00:12:30.240><c> and</c><00:12:30.800><c> last</c><00:12:31.000><c> but</c><00:12:31.160><c> not</c>

00:12:31.389 --> 00:12:31.399 align:start position:0%
to visit that again and last but not
 

00:12:31.399 --> 00:12:33.230 align:start position:0%
to visit that again and last but not
least<00:12:31.880><c> we're</c><00:12:32.040><c> going</c><00:12:32.160><c> to</c><00:12:32.360><c> need</c><00:12:32.800><c> a</c><00:12:32.959><c> little</c>

00:12:33.230 --> 00:12:33.240 align:start position:0%
least we're going to need a little
 

00:12:33.240 --> 00:12:35.949 align:start position:0%
least we're going to need a little
helper<00:12:33.839><c> variable</c><00:12:34.320><c> for</c><00:12:34.560><c> us</c><00:12:35.199><c> directions</c><00:12:35.880><c> which</c>

00:12:35.949 --> 00:12:35.959 align:start position:0%
helper variable for us directions which
 

00:12:35.959 --> 00:12:38.030 align:start position:0%
helper variable for us directions which
are<00:12:36.199><c> going</c><00:12:36.279><c> to</c><00:12:36.440><c> tell</c><00:12:36.639><c> us</c><00:12:36.839><c> the</c><00:12:37.000><c> four</c><00:12:37.519><c> directions</c>

00:12:38.030 --> 00:12:38.040 align:start position:0%
are going to tell us the four directions
 

00:12:38.040 --> 00:12:41.110 align:start position:0%
are going to tell us the four directions
that<00:12:38.160><c> we</c><00:12:38.279><c> can</c><00:12:38.440><c> travel</c><00:12:38.839><c> in</c><00:12:39.639><c> 01</c><00:12:40.639><c> uh</c><00:12:40.720><c> you'll</c><00:12:40.880><c> see</c>

00:12:41.110 --> 00:12:41.120 align:start position:0%
that we can travel in 01 uh you'll see
 

00:12:41.120 --> 00:12:42.670 align:start position:0%
that we can travel in 01 uh you'll see
where<00:12:41.320><c> we're</c><00:12:41.519><c> going</c><00:12:41.600><c> to</c><00:12:41.720><c> be</c><00:12:41.880><c> using</c><00:12:42.240><c> these</c><00:12:42.519><c> in</c>

00:12:42.670 --> 00:12:42.680 align:start position:0%
where we're going to be using these in
 

00:12:42.680 --> 00:12:44.230 align:start position:0%
where we're going to be using these in
just<00:12:42.839><c> a</c><00:12:43.040><c> moment</c><00:12:43.399><c> it'll</c><00:12:43.600><c> make</c><00:12:43.760><c> the</c><00:12:43.880><c> code</c><00:12:44.160><c> a</c>

00:12:44.230 --> 00:12:44.240 align:start position:0%
just a moment it'll make the code a
 

00:12:44.240 --> 00:12:46.030 align:start position:0%
just a moment it'll make the code a
little<00:12:44.399><c> bit</c><00:12:44.560><c> cleaner</c><00:12:44.920><c> for</c><00:12:45.160><c> us</c><00:12:45.440><c> mainly</c><00:12:45.839><c> that's</c>

00:12:46.030 --> 00:12:46.040 align:start position:0%
little bit cleaner for us mainly that's
 

00:12:46.040 --> 00:12:47.870 align:start position:0%
little bit cleaner for us mainly that's
why<00:12:46.160><c> I'm</c><00:12:46.320><c> doing</c><00:12:46.600><c> it</c><00:12:47.079><c> so</c><00:12:47.279><c> these</c><00:12:47.399><c> are</c><00:12:47.519><c> the</c><00:12:47.639><c> four</c>

00:12:47.870 --> 00:12:47.880 align:start position:0%
why I'm doing it so these are the four
 

00:12:47.880 --> 00:12:49.509 align:start position:0%
why I'm doing it so these are the four
directions<00:12:48.320><c> we</c><00:12:48.399><c> can</c><00:12:48.560><c> travel</c><00:12:48.880><c> in</c><00:12:49.279><c> that's</c><00:12:49.440><c> going</c>

00:12:49.509 --> 00:12:49.519 align:start position:0%
directions we can travel in that's going
 

00:12:49.519 --> 00:12:51.069 align:start position:0%
directions we can travel in that's going
to<00:12:49.639><c> be</c><00:12:49.800><c> useful</c><00:12:50.160><c> for</c><00:12:50.320><c> us</c><00:12:50.440><c> when</c><00:12:50.600><c> we're</c><00:12:50.720><c> doing</c><00:12:50.920><c> our</c>

00:12:51.069 --> 00:12:51.079 align:start position:0%
to be useful for us when we're doing our
 

00:12:51.079 --> 00:12:54.829 align:start position:0%
to be useful for us when we're doing our
BFS<00:12:51.839><c> solution</c><00:12:52.839><c> so</c><00:12:53.360><c> while</c><00:12:53.639><c> our</c><00:12:53.880><c> Min</c><00:12:54.279><c> Heap</c><00:12:54.639><c> is</c>

00:12:54.829 --> 00:12:54.839 align:start position:0%
BFS solution so while our Min Heap is
 

00:12:54.839 --> 00:12:56.629 align:start position:0%
BFS solution so while our Min Heap is
nonempty<00:12:55.800><c> that's</c><00:12:55.959><c> when</c><00:12:56.120><c> we're</c><00:12:56.240><c> going</c><00:12:56.320><c> to</c><00:12:56.440><c> be</c>

00:12:56.629 --> 00:12:56.639 align:start position:0%
nonempty that's when we're going to be
 

00:12:56.639 --> 00:12:58.069 align:start position:0%
nonempty that's when we're going to be
popping<00:12:57.079><c> just</c><00:12:57.240><c> like</c><00:12:57.399><c> I</c><00:12:57.480><c> showed</c><00:12:57.839><c> in</c><00:12:57.959><c> the</c>

00:12:58.069 --> 00:12:58.079 align:start position:0%
popping just like I showed in the
 

00:12:58.079 --> 00:13:00.230 align:start position:0%
popping just like I showed in the
drawing<00:12:58.480><c> explanation</c><00:12:58.920><c> so</c><00:12:59.240><c> we</c><00:12:59.320><c> can</c><00:12:59.519><c> say</c><00:13:00.000><c> in</c>

00:13:00.230 --> 00:13:00.240 align:start position:0%
drawing explanation so we can say in
 

00:13:00.240 --> 00:13:02.150 align:start position:0%
drawing explanation so we can say in
Python<00:13:00.600><c> at</c><00:13:00.720><c> least</c><00:13:00.920><c> the</c><00:13:01.040><c> way</c><00:13:01.199><c> we</c><00:13:01.320><c> can</c><00:13:01.560><c> pop</c><00:13:01.880><c> from</c>

00:13:02.150 --> 00:13:02.160 align:start position:0%
Python at least the way we can pop from
 

00:13:02.160 --> 00:13:04.430 align:start position:0%
Python at least the way we can pop from
A<00:13:02.360><c> Min</c><00:13:02.720><c> Heap</c><00:13:02.959><c> is</c><00:13:03.079><c> going</c><00:13:03.160><c> to</c><00:13:03.279><c> be</c><00:13:03.399><c> Heap</c><00:13:03.639><c> q.</c><00:13:04.120><c> Heap</c>

00:13:04.430 --> 00:13:04.440 align:start position:0%
A Min Heap is going to be Heap q. Heap
 

00:13:04.440 --> 00:13:05.790 align:start position:0%
A Min Heap is going to be Heap q. Heap
pop<00:13:04.880><c> and</c><00:13:04.959><c> we're</c><00:13:05.079><c> going</c><00:13:05.199><c> to</c><00:13:05.320><c> get</c><00:13:05.519><c> three</c>

00:13:05.790 --> 00:13:05.800 align:start position:0%
pop and we're going to get three
 

00:13:05.800 --> 00:13:08.030 align:start position:0%
pop and we're going to get three
variables<00:13:06.360><c> right</c><00:13:06.519><c> the</c><00:13:06.800><c> time</c><00:13:07.279><c> or</c><00:13:07.560><c> the</c><00:13:07.680><c> max</c>

00:13:08.030 --> 00:13:08.040 align:start position:0%
variables right the time or the max
 

00:13:08.040 --> 00:13:11.110 align:start position:0%
variables right the time or the max
height<00:13:08.279><c> it</c><00:13:08.399><c> took</c><00:13:08.639><c> us</c><00:13:09.519><c> uh</c><00:13:09.639><c> and</c><00:13:09.800><c> the</c><00:13:09.920><c> row</c><00:13:10.360><c> column</c>

00:13:11.110 --> 00:13:11.120 align:start position:0%
height it took us uh and the row column
 

00:13:11.120 --> 00:13:12.389 align:start position:0%
height it took us uh and the row column
so<00:13:11.560><c> those</c><00:13:11.680><c> are</c><00:13:11.800><c> going</c><00:13:11.920><c> to</c><00:13:12.000><c> be</c><00:13:12.120><c> the</c><00:13:12.240><c> three</c>

00:13:12.389 --> 00:13:12.399 align:start position:0%
so those are going to be the three
 

00:13:12.399 --> 00:13:15.189 align:start position:0%
so those are going to be the three
things<00:13:12.600><c> that</c><00:13:12.760><c> we</c><00:13:12.920><c> pop</c><00:13:13.600><c> now</c><00:13:14.120><c> if</c><00:13:14.680><c> we're</c><00:13:14.920><c> also</c>

00:13:15.189 --> 00:13:15.199 align:start position:0%
things that we pop now if we're also
 

00:13:15.199 --> 00:13:18.150 align:start position:0%
things that we pop now if we're also
going<00:13:15.320><c> to</c><00:13:15.480><c> take</c><00:13:15.720><c> this</c><00:13:15.959><c> and</c><00:13:16.240><c> add</c><00:13:16.399><c> it</c><00:13:16.600><c> to</c><00:13:17.160><c> visit</c>

00:13:18.150 --> 00:13:18.160 align:start position:0%
going to take this and add it to visit
 

00:13:18.160 --> 00:13:20.629 align:start position:0%
going to take this and add it to visit
uh<00:13:18.920><c> because</c><00:13:19.480><c> this</c><00:13:19.800><c> previously</c><00:13:20.279><c> was</c><00:13:20.440><c> not</c>

00:13:20.629 --> 00:13:20.639 align:start position:0%
uh because this previously was not
 

00:13:20.639 --> 00:13:22.030 align:start position:0%
uh because this previously was not
visited<00:13:21.199><c> so</c><00:13:21.360><c> we</c><00:13:21.440><c> can</c><00:13:21.560><c> say</c><00:13:21.760><c> that</c><00:13:21.920><c> this</c>

00:13:22.030 --> 00:13:22.040 align:start position:0%
visited so we can say that this
 

00:13:22.040 --> 00:13:24.829 align:start position:0%
visited so we can say that this
coordinate<00:13:22.519><c> has</c><00:13:22.639><c> now</c><00:13:22.800><c> been</c><00:13:22.959><c> visited</c><00:13:23.959><c> now</c><00:13:24.320><c> if</c>

00:13:24.829 --> 00:13:24.839 align:start position:0%
coordinate has now been visited now if
 

00:13:24.839 --> 00:13:27.670 align:start position:0%
coordinate has now been visited now if
this<00:13:25.000><c> is</c><00:13:25.160><c> the</c><00:13:25.399><c> destination</c><00:13:26.199><c> so</c><00:13:26.560><c> if</c><00:13:26.760><c> row</c><00:13:27.240><c> is</c><00:13:27.440><c> n</c>

00:13:27.670 --> 00:13:27.680 align:start position:0%
this is the destination so if row is n
 

00:13:27.680 --> 00:13:29.750 align:start position:0%
this is the destination so if row is n
minus<00:13:28.000><c> one</c><00:13:28.360><c> and</c>

00:13:29.750 --> 00:13:29.760 align:start position:0%
minus one and
 

00:13:29.760 --> 00:13:32.670 align:start position:0%
minus one and
column<00:13:30.440><c> is</c><00:13:30.880><c> n</c><00:13:31.240><c> minus</c><00:13:31.600><c> one</c><00:13:32.079><c> that</c><00:13:32.199><c> means</c><00:13:32.440><c> we've</c>

00:13:32.670 --> 00:13:32.680 align:start position:0%
column is n minus one that means we've
 

00:13:32.680 --> 00:13:34.189 align:start position:0%
column is n minus one that means we've
reached<00:13:33.040><c> the</c><00:13:33.240><c> destination</c><00:13:33.800><c> so</c><00:13:33.959><c> what</c><00:13:34.079><c> we're</c>

00:13:34.189 --> 00:13:34.199 align:start position:0%
reached the destination so what we're
 

00:13:34.199 --> 00:13:36.150 align:start position:0%
reached the destination so what we're
going<00:13:34.279><c> to</c><00:13:34.560><c> return</c><00:13:34.920><c> is</c><00:13:35.079><c> whatever</c><00:13:35.440><c> the</c><00:13:35.680><c> time</c><00:13:35.959><c> or</c>

00:13:36.150 --> 00:13:36.160 align:start position:0%
going to return is whatever the time or
 

00:13:36.160 --> 00:13:38.750 align:start position:0%
going to return is whatever the time or
the<00:13:36.320><c> max</c><00:13:36.680><c> height</c><00:13:36.880><c> it</c><00:13:37.120><c> took</c><00:13:37.360><c> us</c><00:13:37.800><c> to</c><00:13:38.079><c> get</c><00:13:38.240><c> to</c><00:13:38.519><c> this</c>

00:13:38.750 --> 00:13:38.760 align:start position:0%
the max height it took us to get to this
 

00:13:38.760 --> 00:13:40.750 align:start position:0%
the max height it took us to get to this
position<00:13:39.440><c> but</c><00:13:39.600><c> if</c><00:13:39.680><c> we're</c><00:13:39.880><c> not</c><00:13:40.040><c> returning</c><00:13:40.480><c> it</c>

00:13:40.750 --> 00:13:40.760 align:start position:0%
position but if we're not returning it
 

00:13:40.760 --> 00:13:41.750 align:start position:0%
position but if we're not returning it
that's<00:13:40.920><c> when</c><00:13:41.079><c> we're</c><00:13:41.240><c> going</c><00:13:41.320><c> to</c><00:13:41.480><c> actually</c>

00:13:41.750 --> 00:13:41.760 align:start position:0%
that's when we're going to actually
 

00:13:41.760 --> 00:13:44.509 align:start position:0%
that's when we're going to actually
start<00:13:42.040><c> traversing</c><00:13:43.000><c> the</c><00:13:43.160><c> four</c><00:13:43.560><c> neighbors</c><00:13:44.360><c> so</c>

00:13:44.509 --> 00:13:44.519 align:start position:0%
start traversing the four neighbors so
 

00:13:44.519 --> 00:13:46.550 align:start position:0%
start traversing the four neighbors so
we're<00:13:44.639><c> going</c><00:13:44.760><c> to</c><00:13:44.920><c> use</c><00:13:45.399><c> the</c><00:13:45.600><c> difference</c><00:13:45.959><c> in</c><00:13:46.160><c> R</c>

00:13:46.550 --> 00:13:46.560 align:start position:0%
we're going to use the difference in R
 

00:13:46.560 --> 00:13:48.829 align:start position:0%
we're going to use the difference in R
the<00:13:46.720><c> difference</c><00:13:47.160><c> in</c><00:13:47.480><c> column</c><00:13:48.199><c> the</c><00:13:48.440><c> basically</c>

00:13:48.829 --> 00:13:48.839 align:start position:0%
the difference in column the basically
 

00:13:48.839 --> 00:13:51.749 align:start position:0%
the difference in column the basically
the<00:13:49.120><c> directions</c><00:13:50.120><c> in</c><00:13:50.720><c> our</c><00:13:51.079><c> directions</c>

00:13:51.749 --> 00:13:51.759 align:start position:0%
the directions in our directions
 

00:13:51.759 --> 00:13:53.990 align:start position:0%
the directions in our directions
variable<00:13:52.279><c> that</c><00:13:52.399><c> we</c><00:13:52.560><c> defined</c><00:13:53.199><c> and</c><00:13:53.440><c> using</c><00:13:53.800><c> those</c>

00:13:53.990 --> 00:13:54.000 align:start position:0%
variable that we defined and using those
 

00:13:54.000 --> 00:13:55.550 align:start position:0%
variable that we defined and using those
we're<00:13:54.120><c> going</c><00:13:54.199><c> to</c><00:13:54.360><c> compute</c><00:13:54.680><c> the</c><00:13:54.839><c> neighbor</c><00:13:55.279><c> row</c>

00:13:55.550 --> 00:13:55.560 align:start position:0%
we're going to compute the neighbor row
 

00:13:55.560 --> 00:13:57.870 align:start position:0%
we're going to compute the neighbor row
and<00:13:55.680><c> the</c><00:13:55.800><c> neighbor</c><00:13:56.279><c> column</c><00:13:57.000><c> we</c><00:13:57.120><c> can</c><00:13:57.360><c> say</c><00:13:57.759><c> the</c>

00:13:57.870 --> 00:13:57.880 align:start position:0%
and the neighbor column we can say the
 

00:13:57.880 --> 00:14:00.030 align:start position:0%
and the neighbor column we can say the
neighbor<00:13:58.199><c> row</c><00:13:58.399><c> is</c><00:13:58.480><c> just</c><00:13:58.600><c> going</c><00:13:58.680><c> to</c><00:13:58.759><c> be</c><00:13:59.120><c> R</c><00:13:59.480><c> plus</c>

00:14:00.030 --> 00:14:00.040 align:start position:0%
neighbor row is just going to be R plus
 

00:14:00.040 --> 00:14:02.670 align:start position:0%
neighbor row is just going to be R plus
Dr<00:14:00.680><c> neighbor</c><00:14:01.160><c> column</c><00:14:01.519><c> is</c><00:14:01.680><c> just</c><00:14:01.839><c> going</c><00:14:01.920><c> to</c><00:14:02.079><c> be</c>

00:14:02.670 --> 00:14:02.680 align:start position:0%
Dr neighbor column is just going to be
 

00:14:02.680 --> 00:14:05.470 align:start position:0%
Dr neighbor column is just going to be
the<00:14:03.279><c> column</c><00:14:03.839><c> plus</c><00:14:04.440><c> the</c><00:14:04.800><c> difference</c><00:14:05.160><c> in</c><00:14:05.320><c> the</c>

00:14:05.470 --> 00:14:05.480 align:start position:0%
the column plus the difference in the
 

00:14:05.480 --> 00:14:07.389 align:start position:0%
the column plus the difference in the
column<00:14:06.240><c> now</c><00:14:06.440><c> it's</c><00:14:06.639><c> possible</c><00:14:07.000><c> that</c><00:14:07.240><c> these</c>

00:14:07.389 --> 00:14:07.399 align:start position:0%
column now it's possible that these
 

00:14:07.399 --> 00:14:08.949 align:start position:0%
column now it's possible that these
could<00:14:07.560><c> be</c><00:14:07.759><c> out</c><00:14:07.920><c> of</c><00:14:08.120><c> bounds</c><00:14:08.600><c> or</c><00:14:08.800><c> this</c>

00:14:08.949 --> 00:14:08.959 align:start position:0%
could be out of bounds or this
 

00:14:08.959 --> 00:14:10.710 align:start position:0%
could be out of bounds or this
coordinate<00:14:09.399><c> has</c><00:14:09.600><c> already</c><00:14:09.880><c> been</c><00:14:10.160><c> visited</c><00:14:10.560><c> so</c>

00:14:10.710 --> 00:14:10.720 align:start position:0%
coordinate has already been visited so
 

00:14:10.720 --> 00:14:12.870 align:start position:0%
coordinate has already been visited so
let's<00:14:10.959><c> check</c><00:14:11.240><c> that</c><00:14:11.440><c> so</c><00:14:11.600><c> if</c><00:14:11.759><c> neighbor</c><00:14:12.160><c> row</c><00:14:12.720><c> is</c>

00:14:12.870 --> 00:14:12.880 align:start position:0%
let's check that so if neighbor row is
 

00:14:12.880 --> 00:14:16.269 align:start position:0%
let's check that so if neighbor row is
less<00:14:13.120><c> than</c><00:14:13.360><c> zero</c><00:14:14.000><c> or</c><00:14:14.560><c> neighbor</c><00:14:15.199><c> column</c><00:14:15.800><c> is</c>

00:14:16.269 --> 00:14:16.279 align:start position:0%
less than zero or neighbor column is
 

00:14:16.279 --> 00:14:20.749 align:start position:0%
less than zero or neighbor column is
less<00:14:16.560><c> than</c><00:14:16.800><c> zero</c><00:14:17.480><c> or</c><00:14:18.279><c> neighbor</c><00:14:19.279><c> row</c><00:14:19.920><c> is</c><00:14:20.279><c> equal</c>

00:14:20.749 --> 00:14:20.759 align:start position:0%
less than zero or neighbor row is equal
 

00:14:20.759 --> 00:14:24.110 align:start position:0%
less than zero or neighbor row is equal
to<00:14:21.279><c> n</c><00:14:22.279><c> meaning</c><00:14:22.600><c> it's</c><00:14:22.759><c> out</c><00:14:22.959><c> of</c><00:14:23.160><c> bounds</c><00:14:23.680><c> or</c>

00:14:24.110 --> 00:14:24.120 align:start position:0%
to n meaning it's out of bounds or
 

00:14:24.120 --> 00:14:27.509 align:start position:0%
to n meaning it's out of bounds or
neighbor<00:14:24.639><c> column</c><00:14:25.639><c> is</c><00:14:26.000><c> equal</c><00:14:26.360><c> to</c><00:14:26.759><c> n</c><00:14:27.199><c> meaning</c>

00:14:27.509 --> 00:14:27.519 align:start position:0%
neighbor column is equal to n meaning
 

00:14:27.519 --> 00:14:29.910 align:start position:0%
neighbor column is equal to n meaning
it's<00:14:27.759><c> also</c><00:14:28.040><c> out</c><00:14:28.199><c> of</c><00:14:28.399><c> bounds</c><00:14:29.120><c> or</c><00:14:29.399><c> this</c><00:14:29.600><c> position</c>

00:14:29.910 --> 00:14:29.920 align:start position:0%
it's also out of bounds or this position
 

00:14:29.920 --> 00:14:31.749 align:start position:0%
it's also out of bounds or this position
has<00:14:30.120><c> already</c><00:14:30.360><c> been</c><00:14:30.600><c> visited</c><00:14:31.000><c> so</c><00:14:31.160><c> we</c><00:14:31.279><c> can</c><00:14:31.399><c> check</c>

00:14:31.749 --> 00:14:31.759 align:start position:0%
has already been visited so we can check
 

00:14:31.759 --> 00:14:34.430 align:start position:0%
has already been visited so we can check
that<00:14:32.399><c> like</c><00:14:33.160><c> this</c><00:14:33.360><c> so</c><00:14:33.560><c> neighbor</c><00:14:33.880><c> row</c><00:14:34.079><c> neighbor</c>

00:14:34.430 --> 00:14:34.440 align:start position:0%
that like this so neighbor row neighbor
 

00:14:34.440 --> 00:14:37.790 align:start position:0%
that like this so neighbor row neighbor
column<00:14:35.160><c> in</c><00:14:35.800><c> visit</c><00:14:36.480><c> so</c><00:14:36.720><c> if</c><00:14:36.920><c> any</c><00:14:37.199><c> of</c><00:14:37.440><c> these</c>

00:14:37.790 --> 00:14:37.800 align:start position:0%
column in visit so if any of these
 

00:14:37.800 --> 00:14:39.350 align:start position:0%
column in visit so if any of these
evaluate<00:14:38.279><c> to</c><00:14:38.440><c> true</c><00:14:38.759><c> then</c><00:14:38.880><c> we're</c><00:14:39.000><c> going</c><00:14:39.120><c> to</c>

00:14:39.350 --> 00:14:39.360 align:start position:0%
evaluate to true then we're going to
 

00:14:39.360 --> 00:14:41.110 align:start position:0%
evaluate to true then we're going to
skip<00:14:39.880><c> this</c><00:14:40.079><c> position</c><00:14:40.519><c> basically</c><00:14:40.880><c> we're</c><00:14:41.040><c> going</c>

00:14:41.110 --> 00:14:41.120 align:start position:0%
skip this position basically we're going
 

00:14:41.120 --> 00:14:43.670 align:start position:0%
skip this position basically we're going
to<00:14:41.320><c> continue</c><00:14:41.839><c> to</c><00:14:42.040><c> the</c><00:14:42.320><c> next</c><00:14:42.720><c> iteration</c><00:14:43.399><c> of</c><00:14:43.519><c> the</c>

00:14:43.670 --> 00:14:43.680 align:start position:0%
to continue to the next iteration of the
 

00:14:43.680 --> 00:14:47.030 align:start position:0%
to continue to the next iteration of the
loop<00:14:44.279><c> but</c><00:14:44.440><c> if</c><00:14:44.600><c> none</c><00:14:44.759><c> of</c><00:14:44.959><c> these</c><00:14:45.519><c> do</c><00:14:46.040><c> evaluate</c>

00:14:47.030 --> 00:14:47.040 align:start position:0%
loop but if none of these do evaluate
 

00:14:47.040 --> 00:14:49.550 align:start position:0%
loop but if none of these do evaluate
then<00:14:47.519><c> we</c><00:14:47.639><c> want</c><00:14:47.839><c> to</c><00:14:48.120><c> mark</c><00:14:48.560><c> this</c><00:14:48.839><c> position</c><00:14:49.279><c> as</c>

00:14:49.550 --> 00:14:49.560 align:start position:0%
then we want to mark this position as
 

00:14:49.560 --> 00:14:51.470 align:start position:0%
then we want to mark this position as
visit<00:14:49.959><c> because</c><00:14:50.160><c> we're</c><00:14:50.399><c> about</c><00:14:50.600><c> to</c><00:14:50.880><c> add</c><00:14:51.079><c> it</c><00:14:51.240><c> to</c>

00:14:51.470 --> 00:14:51.480 align:start position:0%
visit because we're about to add it to
 

00:14:51.480 --> 00:14:54.670 align:start position:0%
visit because we're about to add it to
our<00:14:51.720><c> Min</c><00:14:52.160><c> Heap</c><00:14:52.680><c> so</c><00:14:52.880><c> let's</c><00:14:53.160><c> first</c><00:14:53.519><c> add</c><00:14:53.959><c> U</c><00:14:54.199><c> Market</c>

00:14:54.670 --> 00:14:54.680 align:start position:0%
our Min Heap so let's first add U Market
 

00:14:54.680 --> 00:14:56.829 align:start position:0%
our Min Heap so let's first add U Market
as<00:14:55.000><c> visit</c><00:14:55.680><c> and</c><00:14:55.880><c> actually</c><00:14:56.160><c> I</c><00:14:56.279><c> just</c><00:14:56.399><c> noticed</c><00:14:56.759><c> if</c>

00:14:56.829 --> 00:14:56.839 align:start position:0%
as visit and actually I just noticed if
 

00:14:56.839 --> 00:14:59.069 align:start position:0%
as visit and actually I just noticed if
we're<00:14:56.959><c> going</c><00:14:57.079><c> to</c><00:14:57.160><c> be</c><00:14:57.279><c> marking</c><00:14:57.639><c> it</c><00:14:57.880><c> as</c><00:14:58.120><c> visit</c><00:14:58.759><c> uh</c>

00:14:59.069 --> 00:14:59.079 align:start position:0%
we're going to be marking it as visit uh
 

00:14:59.079 --> 00:15:00.430 align:start position:0%
we're going to be marking it as visit uh
right<00:14:59.240><c> as</c><00:14:59.399><c> we</c><00:14:59.560><c> add</c><00:14:59.680><c> it</c><00:14:59.800><c> to</c><00:14:59.920><c> the</c><00:15:00.000><c> Min</c><00:15:00.240><c> Heap</c>

00:15:00.430 --> 00:15:00.440 align:start position:0%
right as we add it to the Min Heap
 

00:15:00.440 --> 00:15:02.269 align:start position:0%
right as we add it to the Min Heap
there's<00:15:00.600><c> no</c><00:15:00.759><c> need</c><00:15:00.959><c> to</c><00:15:01.160><c> Mark</c><00:15:01.480><c> something</c><00:15:02.040><c> as</c>

00:15:02.269 --> 00:15:02.279 align:start position:0%
there's no need to Mark something as
 

00:15:02.279 --> 00:15:04.030 align:start position:0%
there's no need to Mark something as
visited<00:15:02.800><c> after</c><00:15:03.040><c> it's</c><00:15:03.240><c> been</c><00:15:03.480><c> popped</c><00:15:03.800><c> from</c><00:15:03.959><c> the</c>

00:15:04.030 --> 00:15:04.040 align:start position:0%
visited after it's been popped from the
 

00:15:04.040 --> 00:15:05.350 align:start position:0%
visited after it's been popped from the
Min<00:15:04.279><c> Heap</c><00:15:04.480><c> so</c><00:15:04.560><c> I'm</c><00:15:04.639><c> going</c><00:15:04.720><c> to</c><00:15:04.839><c> delete</c><00:15:05.199><c> that</c>

00:15:05.350 --> 00:15:05.360 align:start position:0%
Min Heap so I'm going to delete that
 

00:15:05.360 --> 00:15:07.350 align:start position:0%
Min Heap so I'm going to delete that
line<00:15:05.600><c> of</c><00:15:05.839><c> above</c><00:15:06.440><c> and</c><00:15:06.519><c> so</c><00:15:06.680><c> we're</c><00:15:06.839><c> going</c><00:15:06.920><c> to</c><00:15:07.079><c> mark</c>

00:15:07.350 --> 00:15:07.360 align:start position:0%
line of above and so we're going to mark
 

00:15:07.360 --> 00:15:08.829 align:start position:0%
line of above and so we're going to mark
this<00:15:07.560><c> as</c><00:15:07.720><c> visit</c><00:15:08.120><c> and</c><00:15:08.240><c> then</c><00:15:08.360><c> we're</c><00:15:08.519><c> going</c><00:15:08.600><c> to</c><00:15:08.720><c> go</c>

00:15:08.829 --> 00:15:08.839 align:start position:0%
this as visit and then we're going to go
 

00:15:08.839 --> 00:15:11.269 align:start position:0%
this as visit and then we're going to go
ahead<00:15:09.040><c> and</c><00:15:09.199><c> add</c><00:15:09.360><c> it</c><00:15:09.480><c> to</c><00:15:09.639><c> our</c><00:15:09.920><c> our</c><00:15:10.120><c> Min</c><00:15:10.800><c> um</c><00:15:11.000><c> Heap</c>

00:15:11.269 --> 00:15:11.279 align:start position:0%
ahead and add it to our our Min um Heap
 

00:15:11.279 --> 00:15:13.870 align:start position:0%
ahead and add it to our our Min um Heap
so<00:15:11.399><c> we're</c><00:15:11.519><c> going</c><00:15:11.600><c> to</c><00:15:11.680><c> say</c><00:15:11.800><c> Heap</c><00:15:12.040><c> q.</c><00:15:12.600><c> Heap</c><00:15:13.120><c> push</c>

00:15:13.870 --> 00:15:13.880 align:start position:0%
so we're going to say Heap q. Heap push
 

00:15:13.880 --> 00:15:16.990 align:start position:0%
so we're going to say Heap q. Heap push
to<00:15:14.199><c> the</c><00:15:14.399><c> Min</c><00:15:14.759><c> Heap</c><00:15:15.480><c> this</c><00:15:15.959><c> uh</c><00:15:16.160><c> coordinate</c><00:15:16.800><c> so</c>

00:15:16.990 --> 00:15:17.000 align:start position:0%
to the Min Heap this uh coordinate so
 

00:15:17.000 --> 00:15:18.990 align:start position:0%
to the Min Heap this uh coordinate so
what<00:15:17.120><c> are</c><00:15:17.279><c> we</c><00:15:17.519><c> adding</c><00:15:18.199><c> as</c><00:15:18.360><c> the</c><00:15:18.480><c> coordinate</c><00:15:18.880><c> so</c>

00:15:18.990 --> 00:15:19.000 align:start position:0%
what are we adding as the coordinate so
 

00:15:19.000 --> 00:15:20.350 align:start position:0%
what are we adding as the coordinate so
of<00:15:19.120><c> course</c><00:15:19.240><c> we're</c><00:15:19.360><c> going</c><00:15:19.480><c> to</c><00:15:19.720><c> add</c><00:15:20.160><c> the</c>

00:15:20.350 --> 00:15:20.360 align:start position:0%
of course we're going to add the
 

00:15:20.360 --> 00:15:23.550 align:start position:0%
of course we're going to add the
neighbor<00:15:20.839><c> row</c><00:15:21.639><c> and</c><00:15:22.160><c> the</c><00:15:22.320><c> neighbor</c><00:15:23.040><c> column</c><00:15:23.399><c> but</c>

00:15:23.550 --> 00:15:23.560 align:start position:0%
neighbor row and the neighbor column but
 

00:15:23.560 --> 00:15:25.230 align:start position:0%
neighbor row and the neighbor column but
remember<00:15:23.839><c> what's</c><00:15:24.040><c> the</c><00:15:24.240><c> first</c><00:15:24.600><c> variable</c><00:15:25.000><c> we're</c>

00:15:25.230 --> 00:15:25.240 align:start position:0%
remember what's the first variable we're
 

00:15:25.240 --> 00:15:27.150 align:start position:0%
remember what's the first variable we're
adding<00:15:25.519><c> we're</c><00:15:25.720><c> adding</c><00:15:26.040><c> the</c><00:15:26.440><c> max</c><00:15:26.800><c> height</c><00:15:27.040><c> that</c>

00:15:27.150 --> 00:15:27.160 align:start position:0%
adding we're adding the max height that
 

00:15:27.160 --> 00:15:29.509 align:start position:0%
adding we're adding the max height that
it<00:15:27.320><c> took</c><00:15:27.639><c> so</c><00:15:27.839><c> we're</c><00:15:28.040><c> either</c><00:15:28.279><c> going</c><00:15:28.399><c> to</c><00:15:28.600><c> say</c><00:15:29.240><c> the</c>

00:15:29.509 --> 00:15:29.519 align:start position:0%
it took so we're either going to say the
 

00:15:29.519 --> 00:15:33.269 align:start position:0%
it took so we're either going to say the
maximum<00:15:30.199><c> of</c><00:15:30.759><c> itself</c><00:15:31.759><c> or</c><00:15:32.120><c> or</c><00:15:32.279><c> rather</c><00:15:32.600><c> it's</c><00:15:32.880><c> its</c>

00:15:33.269 --> 00:15:33.279 align:start position:0%
maximum of itself or or rather it's its
 

00:15:33.279 --> 00:15:37.030 align:start position:0%
maximum of itself or or rather it's its
uh<00:15:33.680><c> previous</c><00:15:34.519><c> position</c><00:15:34.880><c> so</c><00:15:35.120><c> maximum</c><00:15:35.639><c> of</c><00:15:35.880><c> T</c><00:15:36.680><c> and</c>

00:15:37.030 --> 00:15:37.040 align:start position:0%
uh previous position so maximum of T and
 

00:15:37.040 --> 00:15:39.829 align:start position:0%
uh previous position so maximum of T and
the<00:15:37.240><c> maximum</c><00:15:37.759><c> of</c><00:15:38.000><c> whatever</c><00:15:38.639><c> the</c><00:15:38.839><c> height</c><00:15:39.199><c> is</c><00:15:39.519><c> at</c>

00:15:39.829 --> 00:15:39.839 align:start position:0%
the maximum of whatever the height is at
 

00:15:39.839 --> 00:15:41.550 align:start position:0%
the maximum of whatever the height is at
this<00:15:40.120><c> particular</c><00:15:40.639><c> position</c><00:15:41.000><c> so</c><00:15:41.199><c> the</c><00:15:41.360><c> height</c>

00:15:41.550 --> 00:15:41.560 align:start position:0%
this particular position so the height
 

00:15:41.560 --> 00:15:44.590 align:start position:0%
this particular position so the height
at<00:15:41.720><c> neighbor</c><00:15:42.120><c> row</c><00:15:42.839><c> neighbor</c><00:15:43.839><c> column</c><00:15:44.319><c> so</c><00:15:44.480><c> this</c>

00:15:44.590 --> 00:15:44.600 align:start position:0%
at neighbor row neighbor column so this
 

00:15:44.600 --> 00:15:47.069 align:start position:0%
at neighbor row neighbor column so this
will<00:15:44.759><c> make</c><00:15:45.040><c> sure</c><00:15:45.680><c> that</c><00:15:45.920><c> the</c><00:15:46.399><c> value</c><00:15:46.680><c> that</c><00:15:46.839><c> we</c>

00:15:47.069 --> 00:15:47.079 align:start position:0%
will make sure that the value that we
 

00:15:47.079 --> 00:15:49.309 align:start position:0%
will make sure that the value that we
add<00:15:47.399><c> here</c><00:15:47.680><c> is</c><00:15:47.920><c> always</c><00:15:48.240><c> going</c><00:15:48.399><c> to</c><00:15:48.519><c> be</c><00:15:48.680><c> the</c><00:15:48.920><c> max</c>

00:15:49.309 --> 00:15:49.319 align:start position:0%
add here is always going to be the max
 

00:15:49.319 --> 00:15:51.710 align:start position:0%
add here is always going to be the max
height<00:15:49.680><c> along</c><00:15:50.120><c> the</c><00:15:50.480><c> path</c><00:15:50.959><c> that</c><00:15:51.120><c> it</c><00:15:51.279><c> took</c><00:15:51.519><c> for</c>

00:15:51.710 --> 00:15:51.720 align:start position:0%
height along the path that it took for
 

00:15:51.720 --> 00:15:54.069 align:start position:0%
height along the path that it took for
us<00:15:52.079><c> to</c><00:15:52.360><c> reach</c><00:15:52.800><c> this</c><00:15:53.160><c> neighbor</c><00:15:53.600><c> row</c><00:15:53.920><c> and</c>

00:15:54.069 --> 00:15:54.079 align:start position:0%
us to reach this neighbor row and
 

00:15:54.079 --> 00:15:56.550 align:start position:0%
us to reach this neighbor row and
neighbor<00:15:54.480><c> column</c><00:15:54.959><c> position</c><00:15:55.920><c> and</c><00:15:56.199><c> believe</c><00:15:56.440><c> it</c>

00:15:56.550 --> 00:15:56.560 align:start position:0%
neighbor column position and believe it
 

00:15:56.560 --> 00:15:58.230 align:start position:0%
neighbor column position and believe it
or<00:15:56.680><c> not</c><00:15:56.959><c> that</c><00:15:57.079><c> is</c><00:15:57.240><c> the</c><00:15:57.399><c> entire</c><00:15:57.720><c> code</c><00:15:57.959><c> we</c><00:15:58.079><c> don't</c>

00:15:58.230 --> 00:15:58.240 align:start position:0%
or not that is the entire code we don't
 

00:15:58.240 --> 00:15:59.749 align:start position:0%
or not that is the entire code we don't
have<00:15:58.319><c> to</c><00:15:58.440><c> put</c><00:15:58.560><c> a</c><00:15:59.040><c> return</c><00:15:59.199><c> statement</c><00:15:59.519><c> on</c><00:15:59.639><c> the</c>

00:15:59.749 --> 00:15:59.759 align:start position:0%
have to put a return statement on the
 

00:15:59.759 --> 00:16:01.509 align:start position:0%
have to put a return statement on the
outside<00:16:00.160><c> because</c><00:16:00.360><c> it's</c><00:16:00.560><c> guaranteed</c><00:16:01.120><c> that</c><00:16:01.279><c> we</c>

00:16:01.509 --> 00:16:01.519 align:start position:0%
outside because it's guaranteed that we
 

00:16:01.519 --> 00:16:03.949 align:start position:0%
outside because it's guaranteed that we
can<00:16:01.800><c> reach</c><00:16:02.199><c> the</c><00:16:02.440><c> target</c><00:16:02.920><c> position</c><00:16:03.560><c> and</c><00:16:03.720><c> once</c>

00:16:03.949 --> 00:16:03.959 align:start position:0%
can reach the target position and once
 

00:16:03.959 --> 00:16:05.550 align:start position:0%
can reach the target position and once
we<00:16:04.079><c> do</c><00:16:04.360><c> we're</c><00:16:04.560><c> automatically</c><00:16:05.120><c> going</c><00:16:05.199><c> to</c>

00:16:05.550 --> 00:16:05.560 align:start position:0%
we do we're automatically going to
 

00:16:05.560 --> 00:16:07.710 align:start position:0%
we do we're automatically going to
return<00:16:06.120><c> whatever</c><00:16:06.399><c> the</c><00:16:06.560><c> max</c><00:16:06.959><c> height</c><00:16:07.240><c> was</c><00:16:07.519><c> to</c>

00:16:07.710 --> 00:16:07.720 align:start position:0%
return whatever the max height was to
 

00:16:07.720 --> 00:16:09.870 align:start position:0%
return whatever the max height was to
reach<00:16:08.040><c> that</c><00:16:08.240><c> Target</c><00:16:08.600><c> position</c><00:16:09.040><c> so</c><00:16:09.600><c> this</c><00:16:09.759><c> is</c>

00:16:09.870 --> 00:16:09.880 align:start position:0%
reach that Target position so this is
 

00:16:09.880 --> 00:16:12.230 align:start position:0%
reach that Target position so this is
the<00:16:10.040><c> entire</c><00:16:10.440><c> code</c><00:16:11.279><c> you</c><00:16:11.399><c> can</c><00:16:11.519><c> see</c><00:16:11.720><c> that</c><00:16:11.839><c> it</c><00:16:11.959><c> is</c>

00:16:12.230 --> 00:16:12.240 align:start position:0%
the entire code you can see that it is
 

00:16:12.240 --> 00:16:13.910 align:start position:0%
the entire code you can see that it is
very<00:16:12.720><c> efficient</c><00:16:13.120><c> it's</c><00:16:13.199><c> a</c><00:16:13.360><c> very</c><00:16:13.560><c> efficient</c>

00:16:13.910 --> 00:16:13.920 align:start position:0%
very efficient it's a very efficient
 

00:16:13.920 --> 00:16:15.710 align:start position:0%
very efficient it's a very efficient
solution<00:16:14.319><c> so</c><00:16:14.440><c> I</c><00:16:14.560><c> hope</c><00:16:14.759><c> this</c><00:16:14.959><c> was</c><00:16:15.120><c> helpful</c><00:16:15.600><c> if</c>

00:16:15.710 --> 00:16:15.720 align:start position:0%
solution so I hope this was helpful if
 

00:16:15.720 --> 00:16:17.550 align:start position:0%
solution so I hope this was helpful if
it<00:16:15.880><c> was</c><00:16:16.279><c> please</c><00:16:16.560><c> like</c><00:16:16.720><c> And</c><00:16:16.920><c> subscribe</c><00:16:17.440><c> it</c>

00:16:17.550 --> 00:16:17.560 align:start position:0%
it was please like And subscribe it
 

00:16:17.560 --> 00:16:19.470 align:start position:0%
it was please like And subscribe it
supports<00:16:17.920><c> the</c><00:16:18.079><c> channel</c><00:16:18.519><c> a</c><00:16:18.720><c> lot</c><00:16:19.079><c> and</c><00:16:19.199><c> I'll</c>

00:16:19.470 --> 00:16:19.480 align:start position:0%
supports the channel a lot and I'll
 

00:16:19.480 --> 00:16:21.590 align:start position:0%
supports the channel a lot and I'll
hopefully<00:16:19.959><c> see</c><00:16:20.160><c> you</c><00:16:20.360><c> pretty</c><00:16:20.600><c> soon</c><00:16:21.160><c> thanks</c><00:16:21.399><c> for</c>

00:16:21.590 --> 00:16:21.600 align:start position:0%
hopefully see you pretty soon thanks for
 

00:16:21.600 --> 00:16:24.160 align:start position:0%
hopefully see you pretty soon thanks for
watching

