WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.750 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.719><c> welcome</c><00:00:01.199><c> back</c><00:00:01.439><c> and</c><00:00:01.520><c> let's</c>

00:00:01.750 --> 00:00:01.760 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.760 --> 00:00:03.750 align:start position:0%
hey everyone welcome back and let's
write<00:00:02.000><c> some</c><00:00:02.159><c> more</c><00:00:02.399><c> neat</c><00:00:02.639><c> code</c><00:00:02.960><c> today</c><00:00:03.280><c> so</c><00:00:03.439><c> today</c>

00:00:03.750 --> 00:00:03.760 align:start position:0%
write some more neat code today so today
 

00:00:03.760 --> 00:00:04.550 align:start position:0%
write some more neat code today so today
let's<00:00:04.080><c> solve</c>

00:00:04.550 --> 00:00:04.560 align:start position:0%
let's solve
 

00:00:04.560 --> 00:00:06.950 align:start position:0%
let's solve
edit<00:00:04.960><c> distance</c><00:00:05.759><c> so</c><00:00:06.000><c> this</c><00:00:06.160><c> is</c><00:00:06.319><c> a</c><00:00:06.399><c> dynamic</c>

00:00:06.950 --> 00:00:06.960 align:start position:0%
edit distance so this is a dynamic
 

00:00:06.960 --> 00:00:08.470 align:start position:0%
edit distance so this is a dynamic
programming<00:00:07.520><c> problem</c><00:00:07.919><c> and</c><00:00:08.000><c> this</c><00:00:08.240><c> is</c>

00:00:08.470 --> 00:00:08.480 align:start position:0%
programming problem and this is
 

00:00:08.480 --> 00:00:11.030 align:start position:0%
programming problem and this is
very<00:00:08.960><c> similar</c><00:00:09.440><c> to</c><00:00:09.599><c> the</c><00:00:09.760><c> problem</c><00:00:10.320><c> longest</c>

00:00:11.030 --> 00:00:11.040 align:start position:0%
very similar to the problem longest
 

00:00:11.040 --> 00:00:13.030 align:start position:0%
very similar to the problem longest
common<00:00:11.599><c> subsequence</c><00:00:12.320><c> which</c><00:00:12.480><c> is</c><00:00:12.639><c> a</c><00:00:12.719><c> problem</c>

00:00:13.030 --> 00:00:13.040 align:start position:0%
common subsequence which is a problem
 

00:00:13.040 --> 00:00:14.870 align:start position:0%
common subsequence which is a problem
i've<00:00:13.280><c> solved</c><00:00:13.599><c> on</c><00:00:13.759><c> this</c><00:00:13.920><c> channel</c><00:00:14.320><c> so</c>

00:00:14.870 --> 00:00:14.880 align:start position:0%
i've solved on this channel so
 

00:00:14.880 --> 00:00:17.109 align:start position:0%
i've solved on this channel so
this<00:00:15.120><c> problem</c><00:00:15.440><c> is</c><00:00:15.599><c> basically</c><00:00:16.080><c> an</c><00:00:16.240><c> extension</c>

00:00:17.109 --> 00:00:17.119 align:start position:0%
this problem is basically an extension
 

00:00:17.119 --> 00:00:18.390 align:start position:0%
this problem is basically an extension
of<00:00:17.359><c> that</c><00:00:17.680><c> problem</c>

00:00:18.390 --> 00:00:18.400 align:start position:0%
of that problem
 

00:00:18.400 --> 00:00:21.029 align:start position:0%
of that problem
so<00:00:18.560><c> we're</c><00:00:18.800><c> given</c><00:00:19.359><c> two</c><00:00:19.680><c> strings</c><00:00:20.240><c> word</c><00:00:20.640><c> one</c><00:00:20.880><c> and</c>

00:00:21.029 --> 00:00:21.039 align:start position:0%
so we're given two strings word one and
 

00:00:21.039 --> 00:00:21.830 align:start position:0%
so we're given two strings word one and
word<00:00:21.439><c> two</c>

00:00:21.830 --> 00:00:21.840 align:start position:0%
word two
 

00:00:21.840 --> 00:00:24.470 align:start position:0%
word two
and<00:00:22.000><c> our</c><00:00:22.320><c> goal</c><00:00:22.800><c> is</c><00:00:22.960><c> to</c><00:00:23.119><c> return</c><00:00:23.680><c> the</c><00:00:23.920><c> minimum</c>

00:00:24.470 --> 00:00:24.480 align:start position:0%
and our goal is to return the minimum
 

00:00:24.480 --> 00:00:25.349 align:start position:0%
and our goal is to return the minimum
number<00:00:24.960><c> of</c>

00:00:25.349 --> 00:00:25.359 align:start position:0%
number of
 

00:00:25.359 --> 00:00:28.630 align:start position:0%
number of
operations<00:00:26.240><c> required</c><00:00:27.119><c> to</c><00:00:27.279><c> take</c><00:00:27.680><c> word</c><00:00:28.080><c> one</c>

00:00:28.630 --> 00:00:28.640 align:start position:0%
operations required to take word one
 

00:00:28.640 --> 00:00:32.310 align:start position:0%
operations required to take word one
and<00:00:28.880><c> convert</c><00:00:29.519><c> it</c><00:00:29.760><c> into</c><00:00:30.240><c> word</c><00:00:30.800><c> two</c><00:00:31.359><c> and</c><00:00:31.599><c> we</c><00:00:31.840><c> only</c>

00:00:32.310 --> 00:00:32.320 align:start position:0%
and convert it into word two and we only
 

00:00:32.320 --> 00:00:32.950 align:start position:0%
and convert it into word two and we only
have

00:00:32.950 --> 00:00:32.960 align:start position:0%
have
 

00:00:32.960 --> 00:00:35.830 align:start position:0%
have
three<00:00:33.520><c> operations</c><00:00:34.480><c> available</c><00:00:35.040><c> to</c><00:00:35.280><c> us</c>

00:00:35.830 --> 00:00:35.840 align:start position:0%
three operations available to us
 

00:00:35.840 --> 00:00:37.270 align:start position:0%
three operations available to us
inserting<00:00:36.480><c> a</c><00:00:36.640><c> character</c>

00:00:37.270 --> 00:00:37.280 align:start position:0%
inserting a character
 

00:00:37.280 --> 00:00:39.110 align:start position:0%
inserting a character
into<00:00:37.680><c> word</c><00:00:38.079><c> one</c><00:00:38.320><c> right</c><00:00:38.559><c> remember</c><00:00:38.960><c> because</c>

00:00:39.110 --> 00:00:39.120 align:start position:0%
into word one right remember because
 

00:00:39.120 --> 00:00:40.709 align:start position:0%
into word one right remember because
we're<00:00:39.280><c> trying</c><00:00:39.520><c> to</c><00:00:39.680><c> take</c><00:00:40.000><c> word</c><00:00:40.320><c> one</c><00:00:40.559><c> and</c>

00:00:40.709 --> 00:00:40.719 align:start position:0%
we're trying to take word one and
 

00:00:40.719 --> 00:00:41.510 align:start position:0%
we're trying to take word one and
convert<00:00:41.280><c> it</c>

00:00:41.510 --> 00:00:41.520 align:start position:0%
convert it
 

00:00:41.520 --> 00:00:44.389 align:start position:0%
convert it
into<00:00:41.840><c> word</c><00:00:42.160><c> two</c><00:00:42.399><c> we</c><00:00:42.559><c> can't</c><00:00:42.960><c> change</c><00:00:43.520><c> word</c><00:00:44.000><c> two</c>

00:00:44.389 --> 00:00:44.399 align:start position:0%
into word two we can't change word two
 

00:00:44.399 --> 00:00:46.069 align:start position:0%
into word two we can't change word two
we<00:00:44.559><c> can</c><00:00:44.800><c> delete</c><00:00:45.280><c> a</c><00:00:45.440><c> character</c>

00:00:46.069 --> 00:00:46.079 align:start position:0%
we can delete a character
 

00:00:46.079 --> 00:00:47.830 align:start position:0%
we can delete a character
from<00:00:46.320><c> word</c><00:00:46.719><c> one</c><00:00:47.039><c> because</c><00:00:47.200><c> we</c><00:00:47.360><c> can't</c><00:00:47.600><c> change</c>

00:00:47.830 --> 00:00:47.840 align:start position:0%
from word one because we can't change
 

00:00:47.840 --> 00:00:50.790 align:start position:0%
from word one because we can't change
word<00:00:48.160><c> two</c><00:00:48.800><c> and</c><00:00:49.039><c> we</c><00:00:49.200><c> can</c><00:00:49.360><c> replace</c><00:00:50.000><c> a</c><00:00:50.160><c> character</c>

00:00:50.790 --> 00:00:50.800 align:start position:0%
word two and we can replace a character
 

00:00:50.800 --> 00:00:53.270 align:start position:0%
word two and we can replace a character
in<00:00:51.039><c> word</c><00:00:51.440><c> one</c><00:00:51.920><c> and</c><00:00:52.079><c> so</c><00:00:52.239><c> replacing</c><00:00:52.879><c> a</c><00:00:52.960><c> character</c>

00:00:53.270 --> 00:00:53.280 align:start position:0%
in word one and so replacing a character
 

00:00:53.280 --> 00:00:54.549 align:start position:0%
in word one and so replacing a character
is<00:00:53.440><c> basically</c><00:00:53.920><c> changing</c>

00:00:54.549 --> 00:00:54.559 align:start position:0%
is basically changing
 

00:00:54.559 --> 00:00:57.350 align:start position:0%
is basically changing
one<00:00:54.800><c> character</c><00:00:55.360><c> into</c><00:00:55.760><c> another</c><00:00:56.640><c> so</c><00:00:56.960><c> in</c><00:00:57.120><c> this</c>

00:00:57.350 --> 00:00:57.360 align:start position:0%
one character into another so in this
 

00:00:57.360 --> 00:00:57.830 align:start position:0%
one character into another so in this
case

00:00:57.830 --> 00:00:57.840 align:start position:0%
case
 

00:00:57.840 --> 00:00:59.590 align:start position:0%
case
there's<00:00:58.160><c> three</c><00:00:58.480><c> operations</c><00:00:59.120><c> it</c><00:00:59.199><c> would</c><00:00:59.359><c> take</c>

00:00:59.590 --> 00:00:59.600 align:start position:0%
there's three operations it would take
 

00:00:59.600 --> 00:01:01.750 align:start position:0%
there's three operations it would take
to<00:00:59.760><c> take</c><00:01:00.160><c> horse</c><00:01:00.640><c> and</c><00:01:00.800><c> turn</c><00:01:01.039><c> it</c><00:01:01.199><c> into</c>

00:01:01.750 --> 00:01:01.760 align:start position:0%
to take horse and turn it into
 

00:01:01.760 --> 00:01:03.990 align:start position:0%
to take horse and turn it into
this<00:01:02.079><c> string</c><00:01:02.800><c> of</c><00:01:02.879><c> course</c><00:01:03.199><c> we'd</c><00:01:03.359><c> want</c><00:01:03.520><c> to</c><00:01:03.680><c> get</c>

00:01:03.990 --> 00:01:04.000 align:start position:0%
this string of course we'd want to get
 

00:01:04.000 --> 00:01:04.950 align:start position:0%
this string of course we'd want to get
rid<00:01:04.479><c> of</c><00:01:04.640><c> the</c>

00:01:04.950 --> 00:01:04.960 align:start position:0%
rid of the
 

00:01:04.960 --> 00:01:06.950 align:start position:0%
rid of the
h<00:01:05.360><c> right</c><00:01:05.680><c> but</c><00:01:06.080><c> we</c><00:01:06.240><c> would</c><00:01:06.400><c> do</c><00:01:06.560><c> that</c><00:01:06.799><c> by</c>

00:01:06.950 --> 00:01:06.960 align:start position:0%
h right but we would do that by
 

00:01:06.960 --> 00:01:08.630 align:start position:0%
h right but we would do that by
replacing<00:01:07.600><c> the</c><00:01:07.840><c> h</c><00:01:08.159><c> with</c><00:01:08.320><c> an</c>

00:01:08.630 --> 00:01:08.640 align:start position:0%
replacing the h with an
 

00:01:08.640 --> 00:01:11.429 align:start position:0%
replacing the h with an
r<00:01:09.119><c> so</c><00:01:09.680><c> this</c><00:01:09.920><c> is</c><00:01:10.000><c> going</c><00:01:10.080><c> to</c><00:01:10.159><c> be</c><00:01:10.320><c> an</c><00:01:10.640><c> r</c><00:01:11.119><c> and</c><00:01:11.280><c> then</c>

00:01:11.429 --> 00:01:11.439 align:start position:0%
r so this is going to be an r and then
 

00:01:11.439 --> 00:01:11.990 align:start position:0%
r so this is going to be an r and then
we<00:01:11.600><c> have</c>

00:01:11.990 --> 00:01:12.000 align:start position:0%
we have
 

00:01:12.000 --> 00:01:15.109 align:start position:0%
we have
two<00:01:12.320><c> r's</c><00:01:12.720><c> right</c><00:01:13.040><c> so</c><00:01:13.200><c> we'd</c><00:01:13.439><c> get</c><00:01:13.760><c> rid</c><00:01:14.240><c> of</c><00:01:14.479><c> this</c><00:01:14.880><c> r</c>

00:01:15.109 --> 00:01:15.119 align:start position:0%
two r's right so we'd get rid of this r
 

00:01:15.119 --> 00:01:15.749 align:start position:0%
two r's right so we'd get rid of this r
so<00:01:15.280><c> we</c>

00:01:15.749 --> 00:01:15.759 align:start position:0%
so we
 

00:01:15.759 --> 00:01:18.550 align:start position:0%
so we
can<00:01:16.000><c> get</c><00:01:16.240><c> rid</c><00:01:16.400><c> of</c><00:01:16.560><c> that</c><00:01:17.280><c> and</c><00:01:17.520><c> lastly</c><00:01:18.080><c> we</c><00:01:18.240><c> see</c><00:01:18.400><c> we</c>

00:01:18.550 --> 00:01:18.560 align:start position:0%
can get rid of that and lastly we see we
 

00:01:18.560 --> 00:01:18.870 align:start position:0%
can get rid of that and lastly we see we
have

00:01:18.870 --> 00:01:18.880 align:start position:0%
have
 

00:01:18.880 --> 00:01:21.910 align:start position:0%
have
r<00:01:19.280><c> o</c><00:01:19.680><c> s</c><00:01:20.000><c> we</c><00:01:20.159><c> have</c><00:01:20.240><c> an</c><00:01:20.479><c> extra</c><00:01:21.040><c> e</c><00:01:21.520><c> so</c><00:01:21.680><c> we're</c><00:01:21.840><c> going</c>

00:01:21.910 --> 00:01:21.920 align:start position:0%
r o s we have an extra e so we're going
 

00:01:21.920 --> 00:01:22.310 align:start position:0%
r o s we have an extra e so we're going
to<00:01:22.000><c> get</c>

00:01:22.310 --> 00:01:22.320 align:start position:0%
to get
 

00:01:22.320 --> 00:01:24.950 align:start position:0%
to get
rid<00:01:22.560><c> of</c><00:01:22.720><c> the</c><00:01:22.960><c> e</c><00:01:23.360><c> as</c><00:01:23.600><c> well</c><00:01:23.920><c> so</c><00:01:24.080><c> we</c><00:01:24.240><c> did</c><00:01:24.400><c> that</c><00:01:24.640><c> in</c>

00:01:24.950 --> 00:01:24.960 align:start position:0%
rid of the e as well so we did that in
 

00:01:24.960 --> 00:01:26.149 align:start position:0%
rid of the e as well so we did that in
three<00:01:25.439><c> operations</c>

00:01:26.149 --> 00:01:26.159 align:start position:0%
three operations
 

00:01:26.159 --> 00:01:28.630 align:start position:0%
three operations
so<00:01:26.400><c> we</c><00:01:26.560><c> can</c><00:01:26.720><c> return</c><00:01:27.200><c> three</c><00:01:27.759><c> so</c><00:01:28.080><c> first</c><00:01:28.320><c> of</c><00:01:28.479><c> all</c>

00:01:28.630 --> 00:01:28.640 align:start position:0%
so we can return three so first of all
 

00:01:28.640 --> 00:01:31.109 align:start position:0%
so we can return three so first of all
let's<00:01:28.960><c> analyze</c><00:01:29.520><c> some</c><00:01:29.840><c> simple</c><00:01:30.320><c> cases</c>

00:01:31.109 --> 00:01:31.119 align:start position:0%
let's analyze some simple cases
 

00:01:31.119 --> 00:01:33.510 align:start position:0%
let's analyze some simple cases
what<00:01:31.360><c> if</c><00:01:31.520><c> we</c><00:01:31.759><c> had</c><00:01:32.000><c> the</c><00:01:32.240><c> case</c><00:01:32.560><c> where</c><00:01:32.799><c> word</c><00:01:33.119><c> one</c>

00:01:33.510 --> 00:01:33.520 align:start position:0%
what if we had the case where word one
 

00:01:33.520 --> 00:01:35.109 align:start position:0%
what if we had the case where word one
and<00:01:33.840><c> word</c><00:01:34.240><c> two</c><00:01:34.560><c> were</c><00:01:34.799><c> both</c>

00:01:35.109 --> 00:01:35.119 align:start position:0%
and word two were both
 

00:01:35.119 --> 00:01:37.270 align:start position:0%
and word two were both
just<00:01:35.520><c> empty</c><00:01:35.920><c> strings</c><00:01:36.320><c> how</c><00:01:36.479><c> many</c><00:01:36.720><c> operations</c>

00:01:37.270 --> 00:01:37.280 align:start position:0%
just empty strings how many operations
 

00:01:37.280 --> 00:01:39.030 align:start position:0%
just empty strings how many operations
does<00:01:37.520><c> it</c><00:01:37.600><c> take</c><00:01:37.840><c> then</c><00:01:38.079><c> to</c><00:01:38.240><c> take</c><00:01:38.479><c> word</c><00:01:38.720><c> one</c><00:01:38.960><c> and</c>

00:01:39.030 --> 00:01:39.040 align:start position:0%
does it take then to take word one and
 

00:01:39.040 --> 00:01:40.310 align:start position:0%
does it take then to take word one and
convert<00:01:39.439><c> it</c><00:01:39.520><c> into</c><00:01:39.759><c> word</c><00:01:40.000><c> two</c>

00:01:40.310 --> 00:01:40.320 align:start position:0%
convert it into word two
 

00:01:40.320 --> 00:01:42.069 align:start position:0%
convert it into word two
obviously<00:01:40.880><c> zero</c><00:01:41.280><c> right</c><00:01:41.439><c> we</c><00:01:41.520><c> don't</c><00:01:41.680><c> have</c><00:01:41.759><c> to</c><00:01:41.840><c> do</c>

00:01:42.069 --> 00:01:42.079 align:start position:0%
obviously zero right we don't have to do
 

00:01:42.079 --> 00:01:44.230 align:start position:0%
obviously zero right we don't have to do
anything<00:01:42.479><c> they're</c><00:01:42.799><c> already</c><00:01:43.360><c> the</c><00:01:43.520><c> same</c>

00:01:44.230 --> 00:01:44.240 align:start position:0%
anything they're already the same
 

00:01:44.240 --> 00:01:47.109 align:start position:0%
anything they're already the same
similarly<00:01:44.960><c> if</c><00:01:45.119><c> word</c><00:01:45.439><c> one</c><00:01:45.680><c> was</c><00:01:45.840><c> let's</c><00:01:46.079><c> say</c><00:01:46.320><c> abc</c>

00:01:47.109 --> 00:01:47.119 align:start position:0%
similarly if word one was let's say abc
 

00:01:47.119 --> 00:01:47.910 align:start position:0%
similarly if word one was let's say abc
and<00:01:47.360><c> word</c><00:01:47.600><c> two</c>

00:01:47.910 --> 00:01:47.920 align:start position:0%
and word two
 

00:01:47.920 --> 00:01:51.030 align:start position:0%
and word two
is<00:01:48.159><c> also</c><00:01:48.799><c> a</c><00:01:49.119><c> b</c><00:01:49.520><c> c</c><00:01:50.079><c> we</c><00:01:50.479><c> also</c>

00:01:51.030 --> 00:01:51.040 align:start position:0%
is also a b c we also
 

00:01:51.040 --> 00:01:52.469 align:start position:0%
is also a b c we also
don't<00:01:51.360><c> have</c><00:01:51.520><c> to</c><00:01:51.600><c> do</c><00:01:51.759><c> anything</c><00:01:52.079><c> right</c><00:01:52.240><c> we'd</c>

00:01:52.469 --> 00:01:52.479 align:start position:0%
don't have to do anything right we'd
 

00:01:52.479 --> 00:01:54.389 align:start position:0%
don't have to do anything right we'd
look<00:01:52.720><c> at</c><00:01:52.799><c> the</c><00:01:52.960><c> first</c><00:01:53.280><c> character</c><00:01:53.920><c> see</c><00:01:54.159><c> oh</c>

00:01:54.389 --> 00:01:54.399 align:start position:0%
look at the first character see oh
 

00:01:54.399 --> 00:01:55.510 align:start position:0%
look at the first character see oh
they're<00:01:54.560><c> the</c><00:01:54.720><c> same</c><00:01:55.040><c> right</c>

00:01:55.510 --> 00:01:55.520 align:start position:0%
they're the same right
 

00:01:55.520 --> 00:01:57.350 align:start position:0%
they're the same right
since<00:01:55.759><c> they're</c><00:01:56.000><c> the</c><00:01:56.240><c> same</c><00:01:56.640><c> of</c><00:01:56.799><c> course</c><00:01:57.200><c> we</c>

00:01:57.350 --> 00:01:57.360 align:start position:0%
since they're the same of course we
 

00:01:57.360 --> 00:01:58.870 align:start position:0%
since they're the same of course we
don't<00:01:57.520><c> have</c><00:01:57.600><c> to</c><00:01:57.759><c> consider</c><00:01:58.240><c> them</c><00:01:58.399><c> anymore</c>

00:01:58.870 --> 00:01:58.880 align:start position:0%
don't have to consider them anymore
 

00:01:58.880 --> 00:01:59.270 align:start position:0%
don't have to consider them anymore
right

00:01:59.270 --> 00:01:59.280 align:start position:0%
right
 

00:01:59.280 --> 00:02:01.190 align:start position:0%
right
then<00:01:59.840><c> all</c><00:02:00.000><c> we</c><00:02:00.159><c> have</c><00:02:00.320><c> to</c><00:02:00.399><c> do</c><00:02:00.560><c> is</c><00:02:00.640><c> compare</c><00:02:01.040><c> the</c>

00:02:01.190 --> 00:02:01.200 align:start position:0%
then all we have to do is compare the
 

00:02:01.200 --> 00:02:03.109 align:start position:0%
then all we have to do is compare the
remainder<00:02:01.840><c> of</c><00:02:02.000><c> each</c><00:02:02.240><c> string</c><00:02:02.640><c> right</c><00:02:02.799><c> but</c><00:02:02.960><c> then</c>

00:02:03.109 --> 00:02:03.119 align:start position:0%
remainder of each string right but then
 

00:02:03.119 --> 00:02:04.630 align:start position:0%
remainder of each string right but then
we<00:02:03.280><c> see</c><00:02:03.600><c> again</c><00:02:04.079><c> hey</c><00:02:04.320><c> b</c>

00:02:04.630 --> 00:02:04.640 align:start position:0%
we see again hey b
 

00:02:04.640 --> 00:02:07.830 align:start position:0%
we see again hey b
is<00:02:04.719><c> the</c><00:02:04.880><c> same</c><00:02:05.680><c> good</c><00:02:06.320><c> c</c><00:02:06.640><c> is</c><00:02:06.799><c> also</c><00:02:07.119><c> the</c><00:02:07.280><c> same</c>

00:02:07.830 --> 00:02:07.840 align:start position:0%
is the same good c is also the same
 

00:02:07.840 --> 00:02:10.550 align:start position:0%
is the same good c is also the same
good<00:02:08.239><c> and</c><00:02:08.399><c> look</c><00:02:08.959><c> perfectly</c><00:02:09.599><c> timed</c><00:02:10.080><c> there's</c><00:02:10.319><c> no</c>

00:02:10.550 --> 00:02:10.560 align:start position:0%
good and look perfectly timed there's no
 

00:02:10.560 --> 00:02:12.229 align:start position:0%
good and look perfectly timed there's no
characters<00:02:11.039><c> left</c><00:02:11.280><c> in</c><00:02:11.360><c> word</c><00:02:11.599><c> one</c><00:02:11.920><c> and</c><00:02:12.000><c> there's</c>

00:02:12.229 --> 00:02:12.239 align:start position:0%
characters left in word one and there's
 

00:02:12.239 --> 00:02:13.910 align:start position:0%
characters left in word one and there's
no<00:02:12.480><c> characters</c><00:02:12.879><c> left</c><00:02:13.200><c> in</c><00:02:13.280><c> word</c><00:02:13.599><c> two</c>

00:02:13.910 --> 00:02:13.920 align:start position:0%
no characters left in word two
 

00:02:13.920 --> 00:02:16.550 align:start position:0%
no characters left in word two
therefore<00:02:14.879><c> zero</c><00:02:15.280><c> operations</c><00:02:15.920><c> were</c><00:02:16.080><c> needed</c>

00:02:16.550 --> 00:02:16.560 align:start position:0%
therefore zero operations were needed
 

00:02:16.560 --> 00:02:17.430 align:start position:0%
therefore zero operations were needed
right

00:02:17.430 --> 00:02:17.440 align:start position:0%
right
 

00:02:17.440 --> 00:02:20.550 align:start position:0%
right
what<00:02:17.840><c> if</c><00:02:18.480><c> word</c><00:02:18.879><c> one</c><00:02:19.120><c> was</c><00:02:19.520><c> abc</c>

00:02:20.550 --> 00:02:20.560 align:start position:0%
what if word one was abc
 

00:02:20.560 --> 00:02:23.510 align:start position:0%
what if word one was abc
and<00:02:20.800><c> word</c><00:02:21.200><c> two</c><00:02:21.599><c> was</c><00:02:22.000><c> empty</c><00:02:22.720><c> then</c><00:02:23.120><c> what</c><00:02:23.280><c> would</c>

00:02:23.510 --> 00:02:23.520 align:start position:0%
and word two was empty then what would
 

00:02:23.520 --> 00:02:25.510 align:start position:0%
and word two was empty then what would
we<00:02:23.599><c> do</c><00:02:23.840><c> is</c><00:02:24.000><c> it</c><00:02:24.080><c> even</c><00:02:24.400><c> possible</c><00:02:24.800><c> to</c><00:02:24.959><c> take</c><00:02:25.280><c> this</c>

00:02:25.510 --> 00:02:25.520 align:start position:0%
we do is it even possible to take this
 

00:02:25.520 --> 00:02:27.030 align:start position:0%
we do is it even possible to take this
word<00:02:25.840><c> and</c><00:02:25.920><c> then</c><00:02:26.080><c> convert</c><00:02:26.480><c> it</c><00:02:26.560><c> into</c><00:02:26.800><c> an</c>

00:02:27.030 --> 00:02:27.040 align:start position:0%
word and then convert it into an
 

00:02:27.040 --> 00:02:29.750 align:start position:0%
word and then convert it into an
empty<00:02:27.680><c> of</c><00:02:27.920><c> course</c><00:02:28.319><c> it</c><00:02:28.480><c> is</c><00:02:28.959><c> in</c><00:02:29.120><c> this</c><00:02:29.360><c> problem</c>

00:02:29.750 --> 00:02:29.760 align:start position:0%
empty of course it is in this problem
 

00:02:29.760 --> 00:02:30.229 align:start position:0%
empty of course it is in this problem
it's

00:02:30.229 --> 00:02:30.239 align:start position:0%
it's
 

00:02:30.239 --> 00:02:32.470 align:start position:0%
it's
always<00:02:30.720><c> going</c><00:02:30.959><c> to</c><00:02:31.120><c> be</c><00:02:31.280><c> possible</c><00:02:31.680><c> to</c><00:02:31.840><c> take</c><00:02:32.080><c> word</c>

00:02:32.470 --> 00:02:32.480 align:start position:0%
always going to be possible to take word
 

00:02:32.480 --> 00:02:34.150 align:start position:0%
always going to be possible to take word
one<00:02:32.800><c> and</c><00:02:32.959><c> convert</c><00:02:33.280><c> it</c><00:02:33.360><c> into</c><00:02:33.599><c> word</c><00:02:33.760><c> two</c><00:02:34.000><c> right</c>

00:02:34.150 --> 00:02:34.160 align:start position:0%
one and convert it into word two right
 

00:02:34.160 --> 00:02:36.150 align:start position:0%
one and convert it into word two right
because<00:02:34.400><c> we</c><00:02:34.560><c> can</c><00:02:34.800><c> insert</c><00:02:35.200><c> a</c><00:02:35.280><c> character</c><00:02:35.840><c> we</c><00:02:36.000><c> can</c>

00:02:36.150 --> 00:02:36.160 align:start position:0%
because we can insert a character we can
 

00:02:36.160 --> 00:02:37.430 align:start position:0%
because we can insert a character we can
delete<00:02:36.640><c> a</c><00:02:36.800><c> character</c>

00:02:37.430 --> 00:02:37.440 align:start position:0%
delete a character
 

00:02:37.440 --> 00:02:39.270 align:start position:0%
delete a character
or<00:02:37.680><c> we</c><00:02:37.840><c> can</c><00:02:38.000><c> replace</c><00:02:38.480><c> a</c><00:02:38.560><c> character</c><00:02:38.959><c> so</c><00:02:39.120><c> it's</c>

00:02:39.270 --> 00:02:39.280 align:start position:0%
or we can replace a character so it's
 

00:02:39.280 --> 00:02:40.869 align:start position:0%
or we can replace a character so it's
always<00:02:39.680><c> going</c><00:02:39.920><c> to</c><00:02:40.000><c> be</c><00:02:40.160><c> possible</c>

00:02:40.869 --> 00:02:40.879 align:start position:0%
always going to be possible
 

00:02:40.879 --> 00:02:43.670 align:start position:0%
always going to be possible
because<00:02:41.920><c> in</c><00:02:42.080><c> the</c><00:02:42.239><c> worst</c><00:02:42.640><c> case</c><00:02:43.120><c> right</c><00:02:43.440><c> this</c><00:02:43.599><c> is</c>

00:02:43.670 --> 00:02:43.680 align:start position:0%
because in the worst case right this is
 

00:02:43.680 --> 00:02:44.470 align:start position:0%
because in the worst case right this is
what<00:02:43.840><c> we</c><00:02:44.000><c> could</c><00:02:44.160><c> do</c>

00:02:44.470 --> 00:02:44.480 align:start position:0%
what we could do
 

00:02:44.480 --> 00:02:46.710 align:start position:0%
what we could do
we<00:02:44.640><c> could</c><00:02:44.800><c> take</c><00:02:45.280><c> every</c><00:02:45.599><c> single</c><00:02:46.000><c> character</c><00:02:46.560><c> in</c>

00:02:46.710 --> 00:02:46.720 align:start position:0%
we could take every single character in
 

00:02:46.720 --> 00:02:48.309 align:start position:0%
we could take every single character in
word<00:02:46.959><c> one</c><00:02:47.280><c> and</c><00:02:47.360><c> just</c><00:02:47.599><c> delete</c><00:02:48.000><c> it</c>

00:02:48.309 --> 00:02:48.319 align:start position:0%
word one and just delete it
 

00:02:48.319 --> 00:02:50.070 align:start position:0%
word one and just delete it
delete<00:02:48.720><c> that</c><00:02:48.879><c> delete</c><00:02:49.200><c> that</c><00:02:49.360><c> because</c><00:02:49.840><c> none</c><00:02:50.000><c> of</c>

00:02:50.070 --> 00:02:50.080 align:start position:0%
delete that delete that because none of
 

00:02:50.080 --> 00:02:51.509 align:start position:0%
delete that delete that because none of
these<00:02:50.319><c> show</c><00:02:50.560><c> up</c><00:02:50.720><c> in</c><00:02:50.879><c> word</c><00:02:51.120><c> two</c>

00:02:51.509 --> 00:02:51.519 align:start position:0%
these show up in word two
 

00:02:51.519 --> 00:02:53.430 align:start position:0%
these show up in word two
just<00:02:51.680><c> delete</c><00:02:52.160><c> all</c><00:02:52.319><c> of</c><00:02:52.480><c> them</c><00:02:52.720><c> if</c><00:02:52.879><c> there</c><00:02:53.120><c> was</c>

00:02:53.430 --> 00:02:53.440 align:start position:0%
just delete all of them if there was
 

00:02:53.440 --> 00:02:55.110 align:start position:0%
just delete all of them if there was
some<00:02:53.599><c> character</c><00:02:54.000><c> maybe</c><00:02:54.239><c> there's</c><00:02:54.480><c> a</c><00:02:54.640><c> z</c><00:02:54.879><c> over</c>

00:02:55.110 --> 00:02:55.120 align:start position:0%
some character maybe there's a z over
 

00:02:55.120 --> 00:02:55.509 align:start position:0%
some character maybe there's a z over
here

00:02:55.509 --> 00:02:55.519 align:start position:0%
here
 

00:02:55.519 --> 00:02:57.589 align:start position:0%
here
then<00:02:55.680><c> we</c><00:02:55.840><c> could</c><00:02:56.000><c> just</c><00:02:56.239><c> copy</c><00:02:56.720><c> every</c><00:02:56.959><c> character</c>

00:02:57.589 --> 00:02:57.599 align:start position:0%
then we could just copy every character
 

00:02:57.599 --> 00:02:59.030 align:start position:0%
then we could just copy every character
after<00:02:57.920><c> we've</c><00:02:58.159><c> deleted</c><00:02:58.560><c> these</c>

00:02:59.030 --> 00:02:59.040 align:start position:0%
after we've deleted these
 

00:02:59.040 --> 00:03:00.790 align:start position:0%
after we've deleted these
and<00:02:59.120><c> then</c><00:02:59.360><c> copy</c><00:02:59.680><c> it</c><00:02:59.920><c> over</c><00:03:00.080><c> here</c><00:03:00.319><c> right</c><00:03:00.560><c> add</c>

00:03:00.790 --> 00:03:00.800 align:start position:0%
and then copy it over here right add
 

00:03:00.800 --> 00:03:02.550 align:start position:0%
and then copy it over here right add
that<00:03:00.959><c> z</c><00:03:01.200><c> but</c><00:03:01.360><c> no</c><00:03:01.599><c> we</c><00:03:01.680><c> don't</c><00:03:01.920><c> need</c><00:03:02.080><c> to</c>

00:03:02.550 --> 00:03:02.560 align:start position:0%
that z but no we don't need to
 

00:03:02.560 --> 00:03:05.509 align:start position:0%
that z but no we don't need to
so<00:03:02.879><c> my</c><00:03:03.120><c> question</c><00:03:03.440><c> to</c><00:03:03.599><c> you</c><00:03:03.840><c> is</c><00:03:04.239><c> if</c><00:03:04.480><c> word</c><00:03:04.959><c> two</c><00:03:05.280><c> is</c>

00:03:05.509 --> 00:03:05.519 align:start position:0%
so my question to you is if word two is
 

00:03:05.519 --> 00:03:06.070 align:start position:0%
so my question to you is if word two is
empty

00:03:06.070 --> 00:03:06.080 align:start position:0%
empty
 

00:03:06.080 --> 00:03:08.790 align:start position:0%
empty
and<00:03:06.239><c> word</c><00:03:06.640><c> one</c><00:03:07.040><c> is</c><00:03:07.200><c> not</c><00:03:07.519><c> empty</c><00:03:08.000><c> then</c><00:03:08.239><c> what's</c>

00:03:08.790 --> 00:03:08.800 align:start position:0%
and word one is not empty then what's
 

00:03:08.800 --> 00:03:09.910 align:start position:0%
and word one is not empty then what's
this<00:03:08.959><c> is</c><00:03:09.120><c> a</c><00:03:09.200><c> base</c><00:03:09.519><c> case</c>

00:03:09.910 --> 00:03:09.920 align:start position:0%
this is a base case
 

00:03:09.920 --> 00:03:11.750 align:start position:0%
this is a base case
how<00:03:10.080><c> many</c><00:03:10.319><c> operations</c><00:03:10.879><c> is</c><00:03:10.959><c> it</c><00:03:11.040><c> gonna</c><00:03:11.280><c> take</c><00:03:11.519><c> is</c>

00:03:11.750 --> 00:03:11.760 align:start position:0%
how many operations is it gonna take is
 

00:03:11.760 --> 00:03:14.309 align:start position:0%
how many operations is it gonna take is
always<00:03:12.239><c> going</c><00:03:12.400><c> to</c><00:03:12.560><c> take</c><00:03:12.879><c> the</c><00:03:13.200><c> length</c><00:03:13.680><c> of</c><00:03:13.920><c> word</c>

00:03:14.309 --> 00:03:14.319 align:start position:0%
always going to take the length of word
 

00:03:14.319 --> 00:03:16.149 align:start position:0%
always going to take the length of word
one<00:03:14.560><c> whatever</c><00:03:14.959><c> the</c><00:03:15.200><c> length</c><00:03:15.519><c> happens</c><00:03:15.840><c> to</c><00:03:15.920><c> be</c>

00:03:16.149 --> 00:03:16.159 align:start position:0%
one whatever the length happens to be
 

00:03:16.159 --> 00:03:17.430 align:start position:0%
one whatever the length happens to be
because<00:03:16.319><c> we're</c><00:03:16.480><c> gonna</c><00:03:16.640><c> have</c><00:03:16.720><c> to</c><00:03:16.879><c> delete</c>

00:03:17.430 --> 00:03:17.440 align:start position:0%
because we're gonna have to delete
 

00:03:17.440 --> 00:03:19.670 align:start position:0%
because we're gonna have to delete
every<00:03:17.760><c> single</c><00:03:18.159><c> character</c><00:03:18.800><c> right</c><00:03:19.040><c> so</c><00:03:19.360><c> that's</c>

00:03:19.670 --> 00:03:19.680 align:start position:0%
every single character right so that's
 

00:03:19.680 --> 00:03:21.509 align:start position:0%
every single character right so that's
one<00:03:19.920><c> base</c><00:03:20.159><c> case</c><00:03:20.400><c> word</c><00:03:20.640><c> two</c><00:03:20.879><c> is</c><00:03:21.040><c> empty</c>

00:03:21.509 --> 00:03:21.519 align:start position:0%
one base case word two is empty
 

00:03:21.519 --> 00:03:23.509 align:start position:0%
one base case word two is empty
what<00:03:21.680><c> about</c><00:03:21.920><c> the</c><00:03:22.159><c> opposite</c><00:03:22.720><c> case</c><00:03:23.200><c> what</c><00:03:23.360><c> if</c>

00:03:23.509 --> 00:03:23.519 align:start position:0%
what about the opposite case what if
 

00:03:23.519 --> 00:03:25.190 align:start position:0%
what about the opposite case what if
word<00:03:23.840><c> two</c><00:03:24.080><c> was</c><00:03:24.319><c> abc</c>

00:03:25.190 --> 00:03:25.200 align:start position:0%
word two was abc
 

00:03:25.200 --> 00:03:27.910 align:start position:0%
word two was abc
and<00:03:25.440><c> word</c><00:03:25.760><c> one</c><00:03:26.159><c> was</c><00:03:26.400><c> empty</c><00:03:26.879><c> is</c><00:03:27.040><c> this</c><00:03:27.360><c> possible</c>

00:03:27.910 --> 00:03:27.920 align:start position:0%
and word one was empty is this possible
 

00:03:27.920 --> 00:03:29.430 align:start position:0%
and word one was empty is this possible
is<00:03:28.080><c> it</c><00:03:28.239><c> possible</c><00:03:28.640><c> to</c><00:03:28.720><c> take</c><00:03:28.879><c> word</c><00:03:29.120><c> one</c><00:03:29.360><c> and</c>

00:03:29.430 --> 00:03:29.440 align:start position:0%
is it possible to take word one and
 

00:03:29.440 --> 00:03:30.789 align:start position:0%
is it possible to take word one and
convert<00:03:29.840><c> it</c><00:03:29.920><c> to</c><00:03:30.080><c> word</c><00:03:30.319><c> two</c>

00:03:30.789 --> 00:03:30.799 align:start position:0%
convert it to word two
 

00:03:30.799 --> 00:03:32.149 align:start position:0%
convert it to word two
of<00:03:30.879><c> course</c><00:03:31.200><c> it</c><00:03:31.280><c> is</c><00:03:31.440><c> right</c><00:03:31.680><c> because</c><00:03:31.920><c> we're</c>

00:03:32.149 --> 00:03:32.159 align:start position:0%
of course it is right because we're
 

00:03:32.159 --> 00:03:34.309 align:start position:0%
of course it is right because we're
allowed<00:03:32.480><c> to</c><00:03:32.720><c> insert</c><00:03:33.280><c> characters</c><00:03:33.760><c> in</c><00:03:33.840><c> here</c><00:03:34.080><c> so</c>

00:03:34.309 --> 00:03:34.319 align:start position:0%
allowed to insert characters in here so
 

00:03:34.319 --> 00:03:35.990 align:start position:0%
allowed to insert characters in here so
basically<00:03:34.720><c> we</c><00:03:34.879><c> could</c><00:03:34.959><c> just</c><00:03:35.280><c> read</c><00:03:35.599><c> character</c>

00:03:35.990 --> 00:03:36.000 align:start position:0%
basically we could just read character
 

00:03:36.000 --> 00:03:37.190 align:start position:0%
basically we could just read character
by<00:03:36.159><c> character</c><00:03:36.640><c> a</c>

00:03:37.190 --> 00:03:37.200 align:start position:0%
by character a
 

00:03:37.200 --> 00:03:40.149 align:start position:0%
by character a
add<00:03:37.440><c> that</c><00:03:37.599><c> here</c><00:03:37.840><c> b</c><00:03:38.159><c> add</c><00:03:38.400><c> that</c><00:03:38.560><c> here</c><00:03:39.040><c> c</c><00:03:39.680><c> add</c><00:03:39.920><c> that</c>

00:03:40.149 --> 00:03:40.159 align:start position:0%
add that here b add that here c add that
 

00:03:40.159 --> 00:03:40.550 align:start position:0%
add that here b add that here c add that
here

00:03:40.550 --> 00:03:40.560 align:start position:0%
here
 

00:03:40.560 --> 00:03:42.309 align:start position:0%
here
as<00:03:40.720><c> well</c><00:03:40.959><c> right</c><00:03:41.200><c> so</c><00:03:41.360><c> we</c><00:03:41.440><c> can</c><00:03:41.599><c> just</c><00:03:41.760><c> copy</c><00:03:42.080><c> every</c>

00:03:42.309 --> 00:03:42.319 align:start position:0%
as well right so we can just copy every
 

00:03:42.319 --> 00:03:44.470 align:start position:0%
as well right so we can just copy every
character<00:03:42.799><c> so</c><00:03:42.959><c> my</c><00:03:43.200><c> question</c><00:03:43.519><c> to</c><00:03:43.680><c> you</c><00:03:43.920><c> is</c><00:03:44.080><c> in</c>

00:03:44.470 --> 00:03:44.480 align:start position:0%
character so my question to you is in
 

00:03:44.480 --> 00:03:46.949 align:start position:0%
character so my question to you is in
in<00:03:44.640><c> this</c><00:03:44.879><c> case</c><00:03:45.200><c> the</c><00:03:45.440><c> opposite</c><00:03:46.000><c> case</c><00:03:46.640><c> where</c>

00:03:46.949 --> 00:03:46.959 align:start position:0%
in this case the opposite case where
 

00:03:46.959 --> 00:03:47.830 align:start position:0%
in this case the opposite case where
word<00:03:47.280><c> two</c><00:03:47.599><c> is</c>

00:03:47.830 --> 00:03:47.840 align:start position:0%
word two is
 

00:03:47.840 --> 00:03:50.630 align:start position:0%
word two is
non-empty<00:03:48.720><c> but</c><00:03:48.879><c> word</c><00:03:49.280><c> one</c><00:03:49.680><c> is</c><00:03:49.840><c> empty</c><00:03:50.239><c> how</c><00:03:50.400><c> many</c>

00:03:50.630 --> 00:03:50.640 align:start position:0%
non-empty but word one is empty how many
 

00:03:50.640 --> 00:03:52.070 align:start position:0%
non-empty but word one is empty how many
operations<00:03:51.200><c> is</c><00:03:51.280><c> it</c><00:03:51.360><c> gonna</c><00:03:51.599><c> take</c><00:03:51.760><c> well</c><00:03:51.920><c> we're</c>

00:03:52.070 --> 00:03:52.080 align:start position:0%
operations is it gonna take well we're
 

00:03:52.080 --> 00:03:52.550 align:start position:0%
operations is it gonna take well we're
just<00:03:52.239><c> gonna</c>

00:03:52.550 --> 00:03:52.560 align:start position:0%
just gonna
 

00:03:52.560 --> 00:03:54.949 align:start position:0%
just gonna
copy<00:03:53.040><c> each</c><00:03:53.360><c> character</c><00:03:53.840><c> in</c><00:03:54.000><c> here</c><00:03:54.239><c> right</c><00:03:54.560><c> so</c><00:03:54.799><c> in</c>

00:03:54.949 --> 00:03:54.959 align:start position:0%
copy each character in here right so in
 

00:03:54.959 --> 00:03:56.710 align:start position:0%
copy each character in here right so in
this<00:03:55.120><c> case</c><00:03:55.360><c> it's</c><00:03:55.519><c> gonna</c><00:03:55.680><c> take</c><00:03:55.920><c> the</c><00:03:56.159><c> length</c>

00:03:56.710 --> 00:03:56.720 align:start position:0%
this case it's gonna take the length
 

00:03:56.720 --> 00:03:59.110 align:start position:0%
this case it's gonna take the length
of<00:03:56.879><c> word</c><00:03:57.599><c> two</c><00:03:58.000><c> that's</c><00:03:58.239><c> how</c><00:03:58.400><c> many</c><00:03:58.640><c> operations</c>

00:03:59.110 --> 00:03:59.120 align:start position:0%
of word two that's how many operations
 

00:03:59.120 --> 00:04:00.630 align:start position:0%
of word two that's how many operations
it's<00:03:59.280><c> going</c><00:03:59.439><c> to</c><00:03:59.439><c> take</c><00:03:59.680><c> right</c><00:03:59.920><c> so</c><00:04:00.159><c> basically</c>

00:04:00.630 --> 00:04:00.640 align:start position:0%
it's going to take right so basically
 

00:04:00.640 --> 00:04:01.990 align:start position:0%
it's going to take right so basically
what<00:04:00.799><c> i'm</c><00:04:00.959><c> getting</c><00:04:01.200><c> at</c><00:04:01.439><c> is</c><00:04:01.599><c> if</c>

00:04:01.990 --> 00:04:02.000 align:start position:0%
what i'm getting at is if
 

00:04:02.000 --> 00:04:04.470 align:start position:0%
what i'm getting at is if
word<00:04:02.400><c> one</c><00:04:02.720><c> is</c><00:04:02.959><c> empty</c><00:04:03.360><c> and</c><00:04:03.439><c> word</c><00:04:04.000><c> two</c><00:04:04.319><c> is</c>

00:04:04.470 --> 00:04:04.480 align:start position:0%
word one is empty and word two is
 

00:04:04.480 --> 00:04:05.350 align:start position:0%
word one is empty and word two is
non-empty

00:04:05.350 --> 00:04:05.360 align:start position:0%
non-empty
 

00:04:05.360 --> 00:04:07.110 align:start position:0%
non-empty
then<00:04:05.599><c> we're</c><00:04:05.760><c> gonna</c><00:04:05.920><c> return</c><00:04:06.480><c> the</c><00:04:06.640><c> length</c><00:04:06.959><c> of</c>

00:04:07.110 --> 00:04:07.120 align:start position:0%
then we're gonna return the length of
 

00:04:07.120 --> 00:04:09.830 align:start position:0%
then we're gonna return the length of
this<00:04:07.599><c> as</c><00:04:07.840><c> the</c><00:04:08.239><c> minimum</c><00:04:08.640><c> number</c><00:04:08.879><c> of</c><00:04:09.120><c> operations</c>

00:04:09.830 --> 00:04:09.840 align:start position:0%
this as the minimum number of operations
 

00:04:09.840 --> 00:04:12.390 align:start position:0%
this as the minimum number of operations
if<00:04:10.000><c> the</c><00:04:10.239><c> opposite</c><00:04:10.720><c> was</c><00:04:10.959><c> true</c><00:04:11.519><c> right</c><00:04:12.080><c> maybe</c>

00:04:12.390 --> 00:04:12.400 align:start position:0%
if the opposite was true right maybe
 

00:04:12.400 --> 00:04:14.550 align:start position:0%
if the opposite was true right maybe
this<00:04:12.640><c> is</c><00:04:12.799><c> empty</c><00:04:13.120><c> but</c><00:04:13.280><c> this</c><00:04:13.519><c> is</c><00:04:13.599><c> not</c><00:04:13.920><c> empty</c><00:04:14.319><c> then</c>

00:04:14.550 --> 00:04:14.560 align:start position:0%
this is empty but this is not empty then
 

00:04:14.560 --> 00:04:17.030 align:start position:0%
this is empty but this is not empty then
we'd<00:04:14.720><c> return</c><00:04:15.120><c> the</c><00:04:15.280><c> length</c><00:04:15.680><c> of</c><00:04:16.000><c> the</c><00:04:16.239><c> non-empty</c>

00:04:17.030 --> 00:04:17.040 align:start position:0%
we'd return the length of the non-empty
 

00:04:17.040 --> 00:04:18.550 align:start position:0%
we'd return the length of the non-empty
one<00:04:17.280><c> if</c><00:04:17.440><c> one</c><00:04:17.600><c> of</c><00:04:17.759><c> them</c><00:04:17.840><c> is</c><00:04:18.000><c> empty</c><00:04:18.320><c> we're</c><00:04:18.479><c> going</c>

00:04:18.550 --> 00:04:18.560 align:start position:0%
one if one of them is empty we're going
 

00:04:18.560 --> 00:04:20.629 align:start position:0%
one if one of them is empty we're going
to<00:04:18.639><c> return</c><00:04:19.040><c> the</c><00:04:19.280><c> length</c><00:04:19.600><c> of</c><00:04:19.680><c> the</c><00:04:19.919><c> non-empty</c>

00:04:20.629 --> 00:04:20.639 align:start position:0%
to return the length of the non-empty
 

00:04:20.639 --> 00:04:22.150 align:start position:0%
to return the length of the non-empty
string<00:04:21.120><c> that's</c><00:04:21.359><c> going</c><00:04:21.440><c> to</c><00:04:21.600><c> be</c><00:04:21.680><c> the</c><00:04:21.759><c> minimum</c>

00:04:22.150 --> 00:04:22.160 align:start position:0%
string that's going to be the minimum
 

00:04:22.160 --> 00:04:23.350 align:start position:0%
string that's going to be the minimum
number<00:04:22.479><c> of</c><00:04:22.639><c> operations</c>

00:04:23.350 --> 00:04:23.360 align:start position:0%
number of operations
 

00:04:23.360 --> 00:04:24.870 align:start position:0%
number of operations
this<00:04:23.520><c> is</c><00:04:23.680><c> important</c><00:04:24.160><c> because</c><00:04:24.400><c> this</c><00:04:24.560><c> is</c><00:04:24.720><c> our</c>

00:04:24.870 --> 00:04:24.880 align:start position:0%
this is important because this is our
 

00:04:24.880 --> 00:04:27.510 align:start position:0%
this is important because this is our
base<00:04:25.199><c> case</c><00:04:25.840><c> so</c><00:04:26.080><c> now</c><00:04:26.240><c> let's</c><00:04:26.560><c> try</c><00:04:26.800><c> to</c><00:04:27.040><c> brute</c>

00:04:27.510 --> 00:04:27.520 align:start position:0%
base case so now let's try to brute
 

00:04:27.520 --> 00:04:28.310 align:start position:0%
base case so now let's try to brute
force<00:04:27.919><c> this</c>

00:04:28.310 --> 00:04:28.320 align:start position:0%
force this
 

00:04:28.320 --> 00:04:29.749 align:start position:0%
force this
how<00:04:28.479><c> are</c><00:04:28.639><c> we</c><00:04:28.800><c> going</c><00:04:28.880><c> to</c><00:04:28.960><c> handle</c><00:04:29.360><c> it</c><00:04:29.440><c> well</c><00:04:29.600><c> we're</c>

00:04:29.749 --> 00:04:29.759 align:start position:0%
how are we going to handle it well we're
 

00:04:29.759 --> 00:04:31.110 align:start position:0%
how are we going to handle it well we're
going<00:04:29.840><c> to</c><00:04:30.000><c> have</c><00:04:30.160><c> two</c><00:04:30.400><c> pointers</c><00:04:30.800><c> right</c><00:04:30.960><c> we're</c>

00:04:31.110 --> 00:04:31.120 align:start position:0%
going to have two pointers right we're
 

00:04:31.120 --> 00:04:32.310 align:start position:0%
going to have two pointers right we're
going<00:04:31.199><c> to</c><00:04:31.280><c> have</c><00:04:31.440><c> one</c><00:04:31.759><c> pointer</c>

00:04:32.310 --> 00:04:32.320 align:start position:0%
going to have one pointer
 

00:04:32.320 --> 00:04:34.150 align:start position:0%
going to have one pointer
pointing<00:04:32.720><c> at</c><00:04:32.960><c> a</c><00:04:33.040><c> character</c><00:04:33.440><c> in</c><00:04:33.520><c> word</c><00:04:33.840><c> one</c><00:04:34.000><c> and</c>

00:04:34.150 --> 00:04:34.160 align:start position:0%
pointing at a character in word one and
 

00:04:34.160 --> 00:04:35.830 align:start position:0%
pointing at a character in word one and
a<00:04:34.240><c> second</c><00:04:34.560><c> pointer</c><00:04:34.960><c> pointing</c><00:04:35.280><c> at</c><00:04:35.360><c> a</c><00:04:35.440><c> character</c>

00:04:35.830 --> 00:04:35.840 align:start position:0%
a second pointer pointing at a character
 

00:04:35.840 --> 00:04:37.510 align:start position:0%
a second pointer pointing at a character
in<00:04:36.000><c> word</c><00:04:36.320><c> two</c><00:04:36.639><c> we're</c><00:04:36.800><c> going</c><00:04:36.880><c> to</c><00:04:37.040><c> compare</c>

00:04:37.510 --> 00:04:37.520 align:start position:0%
in word two we're going to compare
 

00:04:37.520 --> 00:04:38.790 align:start position:0%
in word two we're going to compare
character<00:04:37.919><c> by</c><00:04:38.160><c> character</c>

00:04:38.790 --> 00:04:38.800 align:start position:0%
character by character
 

00:04:38.800 --> 00:04:41.670 align:start position:0%
character by character
so<00:04:39.280><c> the</c><00:04:39.680><c> the</c><00:04:39.919><c> one</c><00:04:40.240><c> case</c><00:04:40.560><c> is</c><00:04:40.960><c> what</c><00:04:41.199><c> if</c><00:04:41.360><c> they're</c>

00:04:41.670 --> 00:04:41.680 align:start position:0%
so the the one case is what if they're
 

00:04:41.680 --> 00:04:43.110 align:start position:0%
so the the one case is what if they're
exactly<00:04:42.400><c> equal</c>

00:04:43.110 --> 00:04:43.120 align:start position:0%
exactly equal
 

00:04:43.120 --> 00:04:45.430 align:start position:0%
exactly equal
then<00:04:43.440><c> what</c><00:04:43.840><c> what</c><00:04:44.080><c> is</c><00:04:44.160><c> the</c><00:04:44.479><c> sub</c><00:04:44.880><c> problem</c><00:04:45.199><c> then</c>

00:04:45.430 --> 00:04:45.440 align:start position:0%
then what what is the sub problem then
 

00:04:45.440 --> 00:04:46.870 align:start position:0%
then what what is the sub problem then
right<00:04:45.600><c> because</c><00:04:45.919><c> we</c><00:04:46.000><c> don't</c><00:04:46.240><c> have</c><00:04:46.320><c> to</c><00:04:46.479><c> consider</c>

00:04:46.870 --> 00:04:46.880 align:start position:0%
right because we don't have to consider
 

00:04:46.880 --> 00:04:48.070 align:start position:0%
right because we don't have to consider
these<00:04:47.120><c> characters</c><00:04:47.520><c> anymore</c>

00:04:48.070 --> 00:04:48.080 align:start position:0%
these characters anymore
 

00:04:48.080 --> 00:04:49.830 align:start position:0%
these characters anymore
now<00:04:48.240><c> we're</c><00:04:48.400><c> dealing</c><00:04:48.720><c> with</c><00:04:48.880><c> the</c><00:04:49.120><c> sub</c><00:04:49.440><c> problem</c>

00:04:49.830 --> 00:04:49.840 align:start position:0%
now we're dealing with the sub problem
 

00:04:49.840 --> 00:04:51.590 align:start position:0%
now we're dealing with the sub problem
of<00:04:49.919><c> the</c><00:04:50.080><c> remainder</c><00:04:50.720><c> of</c><00:04:50.960><c> the</c>

00:04:51.590 --> 00:04:51.600 align:start position:0%
of the remainder of the
 

00:04:51.600 --> 00:04:53.749 align:start position:0%
of the remainder of the
of<00:04:51.759><c> those</c><00:04:52.000><c> strings</c><00:04:52.800><c> so</c><00:04:53.040><c> basically</c><00:04:53.440><c> if</c><00:04:53.600><c> i'm</c>

00:04:53.749 --> 00:04:53.759 align:start position:0%
of those strings so basically if i'm
 

00:04:53.759 --> 00:04:55.590 align:start position:0%
of those strings so basically if i'm
calling<00:04:54.080><c> the</c><00:04:54.160><c> pointer</c><00:04:54.560><c> in</c><00:04:54.639><c> word</c><00:04:54.960><c> one</c><00:04:55.280><c> i</c><00:04:55.520><c> and</c>

00:04:55.590 --> 00:04:55.600 align:start position:0%
calling the pointer in word one i and
 

00:04:55.600 --> 00:04:57.590 align:start position:0%
calling the pointer in word one i and
i'm<00:04:55.680><c> calling</c><00:04:55.919><c> the</c><00:04:56.080><c> pointer</c><00:04:56.479><c> in</c><00:04:56.560><c> word</c><00:04:56.800><c> to</c><00:04:57.120><c> j</c>

00:04:57.590 --> 00:04:57.600 align:start position:0%
i'm calling the pointer in word to j
 

00:04:57.600 --> 00:05:00.629 align:start position:0%
i'm calling the pointer in word to j
if<00:04:57.759><c> these</c><00:04:58.080><c> characters</c><00:04:58.720><c> are</c><00:04:59.120><c> equal</c><00:04:59.919><c> that</c><00:05:00.160><c> means</c>

00:05:00.629 --> 00:05:00.639 align:start position:0%
if these characters are equal that means
 

00:05:00.639 --> 00:05:03.670 align:start position:0%
if these characters are equal that means
we<00:05:00.800><c> can</c><00:05:00.960><c> basically</c><00:05:01.520><c> say</c><00:05:01.840><c> i</c><00:05:02.479><c> plus</c><00:05:02.960><c> one</c><00:05:03.360><c> is</c><00:05:03.520><c> the</c>

00:05:03.670 --> 00:05:03.680 align:start position:0%
we can basically say i plus one is the
 

00:05:03.680 --> 00:05:04.710 align:start position:0%
we can basically say i plus one is the
new<00:05:03.919><c> problem</c><00:05:04.400><c> and</c>

00:05:04.710 --> 00:05:04.720 align:start position:0%
new problem and
 

00:05:04.720 --> 00:05:07.510 align:start position:0%
new problem and
j<00:05:05.280><c> plus</c><00:05:05.680><c> one</c><00:05:06.000><c> is</c><00:05:06.160><c> the</c><00:05:06.560><c> is</c><00:05:06.720><c> the</c><00:05:06.880><c> new</c><00:05:07.039><c> problem</c><00:05:07.440><c> in</c>

00:05:07.510 --> 00:05:07.520 align:start position:0%
j plus one is the is the new problem in
 

00:05:07.520 --> 00:05:08.469 align:start position:0%
j plus one is the is the new problem in
word<00:05:07.759><c> two</c><00:05:07.919><c> right</c><00:05:08.080><c> so</c>

00:05:08.469 --> 00:05:08.479 align:start position:0%
word two right so
 

00:05:08.479 --> 00:05:09.909 align:start position:0%
word two right so
we're<00:05:08.639><c> just</c><00:05:08.800><c> shifting</c><00:05:09.199><c> our</c><00:05:09.360><c> pointers</c><00:05:09.680><c> like</c>

00:05:09.909 --> 00:05:09.919 align:start position:0%
we're just shifting our pointers like
 

00:05:09.919 --> 00:05:12.310 align:start position:0%
we're just shifting our pointers like
that<00:05:10.560><c> so</c><00:05:10.800><c> basically</c><00:05:11.360><c> to</c><00:05:11.600><c> summarize</c>

00:05:12.310 --> 00:05:12.320 align:start position:0%
that so basically to summarize
 

00:05:12.320 --> 00:05:14.469 align:start position:0%
that so basically to summarize
if<00:05:12.560><c> these</c><00:05:12.880><c> characters</c><00:05:13.600><c> are</c><00:05:13.840><c> equal</c><00:05:14.160><c> right</c><00:05:14.400><c> at</c>

00:05:14.469 --> 00:05:14.479 align:start position:0%
if these characters are equal right at
 

00:05:14.479 --> 00:05:15.350 align:start position:0%
if these characters are equal right at
the<00:05:14.720><c> i</c><00:05:14.960><c> and</c><00:05:15.039><c> j</c>

00:05:15.350 --> 00:05:15.360 align:start position:0%
the i and j
 

00:05:15.360 --> 00:05:16.790 align:start position:0%
the i and j
pointer<00:05:15.840><c> basically</c><00:05:16.160><c> what</c><00:05:16.320><c> i'm</c><00:05:16.400><c> saying</c><00:05:16.720><c> the</c>

00:05:16.790 --> 00:05:16.800 align:start position:0%
pointer basically what i'm saying the
 

00:05:16.800 --> 00:05:18.070 align:start position:0%
pointer basically what i'm saying the
characters<00:05:17.199><c> are</c><00:05:17.360><c> equal</c><00:05:17.600><c> then</c><00:05:17.759><c> we're</c><00:05:17.919><c> just</c>

00:05:18.070 --> 00:05:18.080 align:start position:0%
characters are equal then we're just
 

00:05:18.080 --> 00:05:19.749 align:start position:0%
characters are equal then we're just
going<00:05:18.240><c> to</c><00:05:18.400><c> increment</c><00:05:18.880><c> i</c><00:05:19.120><c> by</c><00:05:19.360><c> 1</c>

00:05:19.749 --> 00:05:19.759 align:start position:0%
going to increment i by 1
 

00:05:19.759 --> 00:05:21.909 align:start position:0%
going to increment i by 1
and<00:05:20.000><c> increment</c><00:05:20.479><c> j</c><00:05:20.639><c> by</c><00:05:20.880><c> 1.</c><00:05:21.280><c> the</c><00:05:21.440><c> number</c><00:05:21.680><c> of</c>

00:05:21.909 --> 00:05:21.919 align:start position:0%
and increment j by 1. the number of
 

00:05:21.919 --> 00:05:23.830 align:start position:0%
and increment j by 1. the number of
operations<00:05:22.560><c> we</c><00:05:22.720><c> had</c><00:05:22.880><c> to</c><00:05:22.960><c> do</c><00:05:23.120><c> was</c><00:05:23.360><c> exactly</c>

00:05:23.830 --> 00:05:23.840 align:start position:0%
operations we had to do was exactly
 

00:05:23.840 --> 00:05:25.350 align:start position:0%
operations we had to do was exactly
zero<00:05:24.160><c> right</c><00:05:24.320><c> we</c><00:05:24.479><c> didn't</c><00:05:24.639><c> have</c><00:05:24.720><c> to</c><00:05:24.880><c> do</c><00:05:25.039><c> anything</c>

00:05:25.350 --> 00:05:25.360 align:start position:0%
zero right we didn't have to do anything
 

00:05:25.360 --> 00:05:27.270 align:start position:0%
zero right we didn't have to do anything
they<00:05:25.520><c> were</c><00:05:25.759><c> already</c><00:05:26.400><c> equal</c><00:05:26.720><c> we</c><00:05:26.880><c> didn't</c><00:05:27.120><c> have</c>

00:05:27.270 --> 00:05:27.280 align:start position:0%
they were already equal we didn't have
 

00:05:27.280 --> 00:05:27.670 align:start position:0%
they were already equal we didn't have
to

00:05:27.670 --> 00:05:27.680 align:start position:0%
to
 

00:05:27.680 --> 00:05:30.150 align:start position:0%
to
modify<00:05:28.160><c> word</c><00:05:28.479><c> one</c><00:05:28.800><c> at</c><00:05:29.039><c> all</c><00:05:29.520><c> to</c><00:05:29.680><c> the</c><00:05:29.840><c> next</c>

00:05:30.150 --> 00:05:30.160 align:start position:0%
modify word one at all to the next
 

00:05:30.160 --> 00:05:31.110 align:start position:0%
modify word one at all to the next
character<00:05:30.479><c> so</c><00:05:30.720><c> our</c><00:05:30.880><c> i</c>

00:05:31.110 --> 00:05:31.120 align:start position:0%
character so our i
 

00:05:31.120 --> 00:05:32.629 align:start position:0%
character so our i
pointer<00:05:31.360><c> is</c><00:05:31.520><c> going</c><00:05:31.600><c> to</c><00:05:31.680><c> be</c><00:05:31.759><c> over</c><00:05:32.000><c> here</c><00:05:32.240><c> our</c><00:05:32.400><c> j</c>

00:05:32.629 --> 00:05:32.639 align:start position:0%
pointer is going to be over here our j
 

00:05:32.639 --> 00:05:33.830 align:start position:0%
pointer is going to be over here our j
pointer<00:05:32.880><c> is</c><00:05:32.960><c> going</c><00:05:33.039><c> to</c><00:05:33.120><c> be</c><00:05:33.199><c> here</c><00:05:33.440><c> because</c><00:05:33.680><c> we</c>

00:05:33.830 --> 00:05:33.840 align:start position:0%
pointer is going to be here because we
 

00:05:33.840 --> 00:05:35.909 align:start position:0%
pointer is going to be here because we
incremented<00:05:34.400><c> both</c><00:05:34.639><c> of</c><00:05:34.720><c> them</c><00:05:34.880><c> by</c><00:05:35.120><c> one</c><00:05:35.440><c> so</c><00:05:35.680><c> now</c>

00:05:35.909 --> 00:05:35.919 align:start position:0%
incremented both of them by one so now
 

00:05:35.919 --> 00:05:37.510 align:start position:0%
incremented both of them by one so now
let's<00:05:36.160><c> compare</c><00:05:36.560><c> the</c><00:05:36.720><c> characters</c>

00:05:37.510 --> 00:05:37.520 align:start position:0%
let's compare the characters
 

00:05:37.520 --> 00:05:41.029 align:start position:0%
let's compare the characters
c<00:05:37.919><c> and</c><00:05:38.160><c> b</c><00:05:38.800><c> are</c><00:05:39.120><c> not</c><00:05:39.600><c> equal</c><00:05:39.919><c> right</c><00:05:40.160><c> so</c><00:05:40.400><c> now</c><00:05:40.720><c> our</c>

00:05:41.029 --> 00:05:41.039 align:start position:0%
c and b are not equal right so now our
 

00:05:41.039 --> 00:05:42.950 align:start position:0%
c and b are not equal right so now our
else<00:05:41.440><c> condition</c><00:05:42.160><c> condition</c><00:05:42.560><c> is</c><00:05:42.720><c> going</c><00:05:42.800><c> to</c>

00:05:42.950 --> 00:05:42.960 align:start position:0%
else condition condition is going to
 

00:05:42.960 --> 00:05:44.550 align:start position:0%
else condition condition is going to
execute<00:05:43.440><c> and</c><00:05:43.600><c> we</c><00:05:43.759><c> don't</c><00:05:44.080><c> know</c>

00:05:44.550 --> 00:05:44.560 align:start position:0%
execute and we don't know
 

00:05:44.560 --> 00:05:46.790 align:start position:0%
execute and we don't know
we<00:05:44.800><c> know</c><00:05:44.960><c> we</c><00:05:45.120><c> have</c><00:05:45.440><c> three</c><00:05:45.919><c> options</c><00:05:46.400><c> we</c><00:05:46.560><c> can</c>

00:05:46.790 --> 00:05:46.800 align:start position:0%
we know we have three options we can
 

00:05:46.800 --> 00:05:47.830 align:start position:0%
we know we have three options we can
insert<00:05:47.199><c> a</c><00:05:47.360><c> character</c>

00:05:47.830 --> 00:05:47.840 align:start position:0%
insert a character
 

00:05:47.840 --> 00:05:49.909 align:start position:0%
insert a character
delete<00:05:48.240><c> a</c><00:05:48.400><c> character</c><00:05:48.960><c> or</c><00:05:49.199><c> replace</c><00:05:49.840><c> a</c>

00:05:49.909 --> 00:05:49.919 align:start position:0%
delete a character or replace a
 

00:05:49.919 --> 00:05:51.749 align:start position:0%
delete a character or replace a
character<00:05:50.639><c> from</c><00:05:50.960><c> word</c><00:05:51.280><c> one</c>

00:05:51.749 --> 00:05:51.759 align:start position:0%
character from word one
 

00:05:51.759 --> 00:05:54.230 align:start position:0%
character from word one
but<00:05:51.919><c> we</c><00:05:52.160><c> don't</c><00:05:52.320><c> know</c><00:05:52.560><c> which</c><00:05:52.880><c> one</c><00:05:53.120><c> to</c><00:05:53.360><c> do</c><00:05:53.759><c> right</c>

00:05:54.230 --> 00:05:54.240 align:start position:0%
but we don't know which one to do right
 

00:05:54.240 --> 00:05:55.590 align:start position:0%
but we don't know which one to do right
so<00:05:54.639><c> let's</c><00:05:54.880><c> just</c><00:05:55.120><c> try</c>

00:05:55.590 --> 00:05:55.600 align:start position:0%
so let's just try
 

00:05:55.600 --> 00:05:58.790 align:start position:0%
so let's just try
all<00:05:55.919><c> three</c><00:05:56.880><c> what</c><00:05:57.120><c> happens</c><00:05:57.520><c> if</c><00:05:57.680><c> we</c><00:05:58.080><c> insert</c>

00:05:58.790 --> 00:05:58.800 align:start position:0%
all three what happens if we insert
 

00:05:58.800 --> 00:06:01.029 align:start position:0%
all three what happens if we insert
a<00:05:58.960><c> character</c><00:05:59.840><c> what</c><00:06:00.080><c> character</c><00:06:00.560><c> are</c><00:06:00.639><c> we</c><00:06:00.800><c> gonna</c>

00:06:01.029 --> 00:06:01.039 align:start position:0%
a character what character are we gonna
 

00:06:01.039 --> 00:06:02.550 align:start position:0%
a character what character are we gonna
wanna<00:06:01.440><c> insert</c><00:06:01.919><c> over</c><00:06:02.080><c> here</c>

00:06:02.550 --> 00:06:02.560 align:start position:0%
wanna insert over here
 

00:06:02.560 --> 00:06:04.070 align:start position:0%
wanna insert over here
obviously<00:06:03.120><c> we'd</c><00:06:03.280><c> wanna</c><00:06:03.680><c> insert</c><00:06:04.000><c> the</c>

00:06:04.070 --> 00:06:04.080 align:start position:0%
obviously we'd wanna insert the
 

00:06:04.080 --> 00:06:06.230 align:start position:0%
obviously we'd wanna insert the
character<00:06:04.639><c> from</c><00:06:04.960><c> word</c><00:06:05.280><c> two</c><00:06:05.600><c> we</c><00:06:05.680><c> don't</c><00:06:05.919><c> know</c><00:06:06.160><c> if</c>

00:06:06.230 --> 00:06:06.240 align:start position:0%
character from word two we don't know if
 

00:06:06.240 --> 00:06:08.629 align:start position:0%
character from word two we don't know if
that's<00:06:06.479><c> going</c><00:06:06.560><c> to</c><00:06:06.720><c> end</c><00:06:06.960><c> up</c><00:06:07.120><c> making</c><00:06:07.520><c> word</c><00:06:07.840><c> one</c>

00:06:08.629 --> 00:06:08.639 align:start position:0%
that's going to end up making word one
 

00:06:08.639 --> 00:06:10.870 align:start position:0%
that's going to end up making word one
exactly<00:06:09.360><c> into</c><00:06:09.680><c> word</c><00:06:09.919><c> two</c><00:06:10.240><c> in</c><00:06:10.319><c> the</c><00:06:10.479><c> minimum</c>

00:06:10.870 --> 00:06:10.880 align:start position:0%
exactly into word two in the minimum
 

00:06:10.880 --> 00:06:13.029 align:start position:0%
exactly into word two in the minimum
number<00:06:11.199><c> of</c><00:06:11.360><c> operations</c><00:06:12.000><c> but</c><00:06:12.160><c> let's</c><00:06:12.400><c> just</c><00:06:12.720><c> try</c>

00:06:13.029 --> 00:06:13.039 align:start position:0%
number of operations but let's just try
 

00:06:13.039 --> 00:06:14.790 align:start position:0%
number of operations but let's just try
it<00:06:13.199><c> and</c><00:06:13.440><c> see</c><00:06:13.680><c> what</c><00:06:13.919><c> happens</c>

00:06:14.790 --> 00:06:14.800 align:start position:0%
it and see what happens
 

00:06:14.800 --> 00:06:17.909 align:start position:0%
it and see what happens
right<00:06:15.199><c> so</c><00:06:15.440><c> what</c><00:06:15.600><c> would</c><00:06:15.840><c> we</c><00:06:16.160><c> do</c><00:06:16.639><c> if</c><00:06:16.800><c> we</c><00:06:17.120><c> inserted</c>

00:06:17.909 --> 00:06:17.919 align:start position:0%
right so what would we do if we inserted
 

00:06:17.919 --> 00:06:21.029 align:start position:0%
right so what would we do if we inserted
a<00:06:18.319><c> c</c><00:06:19.039><c> over</c><00:06:19.440><c> here</c><00:06:19.759><c> right</c><00:06:19.919><c> we're</c><00:06:20.319><c> not</c><00:06:20.479><c> deleting</c><00:06:20.960><c> a</c>

00:06:21.029 --> 00:06:21.039 align:start position:0%
a c over here right we're not deleting a
 

00:06:21.039 --> 00:06:23.189 align:start position:0%
a c over here right we're not deleting a
character<00:06:21.520><c> all</c><00:06:21.680><c> we're</c><00:06:21.840><c> doing</c><00:06:22.160><c> is</c><00:06:22.319><c> inserting</c><00:06:22.960><c> a</c>

00:06:23.189 --> 00:06:23.199 align:start position:0%
character all we're doing is inserting a
 

00:06:23.199 --> 00:06:23.510 align:start position:0%
character all we're doing is inserting a
c

00:06:23.510 --> 00:06:23.520 align:start position:0%
c
 

00:06:23.520 --> 00:06:27.270 align:start position:0%
c
over<00:06:23.759><c> here</c><00:06:24.400><c> in</c><00:06:24.639><c> that</c><00:06:24.960><c> case</c><00:06:25.520><c> our</c><00:06:26.000><c> i</c><00:06:26.400><c> pointer</c><00:06:26.960><c> is</c>

00:06:27.270 --> 00:06:27.280 align:start position:0%
over here in that case our i pointer is
 

00:06:27.280 --> 00:06:30.070 align:start position:0%
over here in that case our i pointer is
still<00:06:27.759><c> going</c><00:06:28.000><c> to</c><00:06:28.160><c> be</c><00:06:28.479><c> pointing</c><00:06:28.960><c> at</c><00:06:29.199><c> this</c><00:06:29.600><c> b</c>

00:06:30.070 --> 00:06:30.080 align:start position:0%
still going to be pointing at this b
 

00:06:30.080 --> 00:06:30.469 align:start position:0%
still going to be pointing at this b
right

00:06:30.469 --> 00:06:30.479 align:start position:0%
right
 

00:06:30.479 --> 00:06:33.350 align:start position:0%
right
but<00:06:30.880><c> since</c><00:06:31.199><c> we</c><00:06:31.520><c> inserted</c><00:06:32.080><c> a</c><00:06:32.319><c> c</c><00:06:32.800><c> over</c><00:06:33.039><c> here</c><00:06:33.280><c> it's</c>

00:06:33.350 --> 00:06:33.360 align:start position:0%
but since we inserted a c over here it's
 

00:06:33.360 --> 00:06:33.990 align:start position:0%
but since we inserted a c over here it's
hard<00:06:33.600><c> to</c><00:06:33.680><c> read</c>

00:06:33.990 --> 00:06:34.000 align:start position:0%
hard to read
 

00:06:34.000 --> 00:06:36.309 align:start position:0%
hard to read
but<00:06:34.240><c> let's</c><00:06:34.400><c> say</c><00:06:34.639><c> i</c><00:06:34.800><c> inserted</c><00:06:35.199><c> a</c><00:06:35.360><c> c</c><00:06:35.680><c> in</c><00:06:35.840><c> between</c>

00:06:36.309 --> 00:06:36.319 align:start position:0%
but let's say i inserted a c in between
 

00:06:36.319 --> 00:06:37.270 align:start position:0%
but let's say i inserted a c in between
over<00:06:36.560><c> here</c>

00:06:37.270 --> 00:06:37.280 align:start position:0%
over here
 

00:06:37.280 --> 00:06:39.749 align:start position:0%
over here
that<00:06:37.520><c> means</c><00:06:37.759><c> we</c><00:06:38.080><c> took</c><00:06:38.479><c> care</c><00:06:38.800><c> of</c><00:06:38.960><c> the</c><00:06:39.199><c> c</c><00:06:39.520><c> from</c>

00:06:39.749 --> 00:06:39.759 align:start position:0%
that means we took care of the c from
 

00:06:39.759 --> 00:06:41.029 align:start position:0%
that means we took care of the c from
word<00:06:40.160><c> two</c><00:06:40.400><c> right</c><00:06:40.639><c> so</c>

00:06:41.029 --> 00:06:41.039 align:start position:0%
word two right so
 

00:06:41.039 --> 00:06:43.029 align:start position:0%
word two right so
basically<00:06:41.680><c> we</c><00:06:41.840><c> don't</c><00:06:42.080><c> need</c><00:06:42.319><c> to</c><00:06:42.560><c> find</c><00:06:42.880><c> a</c>

00:06:43.029 --> 00:06:43.039 align:start position:0%
basically we don't need to find a
 

00:06:43.039 --> 00:06:45.350 align:start position:0%
basically we don't need to find a
matching<00:06:43.520><c> c</c><00:06:43.840><c> for</c><00:06:44.000><c> it</c><00:06:44.160><c> anymore</c><00:06:44.639><c> we</c><00:06:44.880><c> do</c><00:06:45.039><c> need</c><00:06:45.199><c> to</c>

00:06:45.350 --> 00:06:45.360 align:start position:0%
matching c for it anymore we do need to
 

00:06:45.360 --> 00:06:46.469 align:start position:0%
matching c for it anymore we do need to
find<00:06:45.600><c> a</c><00:06:45.680><c> matching</c><00:06:46.240><c> b</c>

00:06:46.469 --> 00:06:46.479 align:start position:0%
find a matching b
 

00:06:46.479 --> 00:06:48.790 align:start position:0%
find a matching b
somewhere<00:06:46.960><c> over</c><00:06:47.280><c> here</c><00:06:47.840><c> right</c><00:06:48.160><c> so</c><00:06:48.319><c> we're</c><00:06:48.479><c> gonna</c>

00:06:48.790 --> 00:06:48.800 align:start position:0%
somewhere over here right so we're gonna
 

00:06:48.800 --> 00:06:49.749 align:start position:0%
somewhere over here right so we're gonna
leave<00:06:49.120><c> our</c><00:06:49.440><c> i</c>

00:06:49.749 --> 00:06:49.759 align:start position:0%
leave our i
 

00:06:49.759 --> 00:06:51.670 align:start position:0%
leave our i
pointer<00:06:50.240><c> where</c><00:06:50.560><c> it</c><00:06:50.720><c> is</c><00:06:50.960><c> but</c><00:06:51.120><c> we're</c><00:06:51.280><c> gonna</c><00:06:51.440><c> take</c>

00:06:51.670 --> 00:06:51.680 align:start position:0%
pointer where it is but we're gonna take
 

00:06:51.680 --> 00:06:54.150 align:start position:0%
pointer where it is but we're gonna take
our<00:06:52.000><c> j</c><00:06:52.400><c> pointer</c><00:06:52.960><c> and</c><00:06:53.039><c> then</c><00:06:53.360><c> shift</c><00:06:53.759><c> it</c><00:06:53.840><c> to</c><00:06:54.000><c> the</c>

00:06:54.150 --> 00:06:54.160 align:start position:0%
our j pointer and then shift it to the
 

00:06:54.160 --> 00:06:55.110 align:start position:0%
our j pointer and then shift it to the
next<00:06:54.479><c> position</c>

00:06:55.110 --> 00:06:55.120 align:start position:0%
next position
 

00:06:55.120 --> 00:06:57.510 align:start position:0%
next position
in<00:06:55.360><c> word</c><00:06:55.680><c> two</c><00:06:55.919><c> that's</c><00:06:56.160><c> what</c><00:06:56.319><c> we</c><00:06:56.560><c> would</c><00:06:56.880><c> do</c><00:06:57.280><c> if</c>

00:06:57.510 --> 00:06:57.520 align:start position:0%
in word two that's what we would do if
 

00:06:57.520 --> 00:06:59.029 align:start position:0%
in word two that's what we would do if
we<00:06:57.759><c> inserted</c><00:06:58.319><c> a</c><00:06:58.400><c> character</c>

00:06:59.029 --> 00:06:59.039 align:start position:0%
we inserted a character
 

00:06:59.039 --> 00:07:01.589 align:start position:0%
we inserted a character
so<00:06:59.440><c> as</c><00:06:59.599><c> you</c><00:06:59.759><c> can</c><00:07:00.000><c> see</c><00:07:00.720><c> when</c><00:07:00.880><c> we</c><00:07:01.120><c> insert</c><00:07:01.520><c> a</c>

00:07:01.589 --> 00:07:01.599 align:start position:0%
so as you can see when we insert a
 

00:07:01.599 --> 00:07:02.230 align:start position:0%
so as you can see when we insert a
character

00:07:02.230 --> 00:07:02.240 align:start position:0%
character
 

00:07:02.240 --> 00:07:04.550 align:start position:0%
character
we<00:07:02.479><c> are</c><00:07:02.720><c> taking</c><00:07:03.280><c> one</c><00:07:03.680><c> operation</c><00:07:04.240><c> right</c><00:07:04.400><c> so</c>

00:07:04.550 --> 00:07:04.560 align:start position:0%
we are taking one operation right so
 

00:07:04.560 --> 00:07:06.070 align:start position:0%
we are taking one operation right so
we're<00:07:04.639><c> gonna</c><00:07:04.800><c> have</c><00:07:04.880><c> to</c><00:07:05.120><c> add</c><00:07:05.360><c> a</c><00:07:05.520><c> one</c><00:07:05.759><c> to</c><00:07:05.919><c> the</c>

00:07:06.070 --> 00:07:06.080 align:start position:0%
we're gonna have to add a one to the
 

00:07:06.080 --> 00:07:07.510 align:start position:0%
we're gonna have to add a one to the
number<00:07:06.319><c> of</c><00:07:06.479><c> operations</c><00:07:07.039><c> we</c><00:07:07.199><c> did</c>

00:07:07.510 --> 00:07:07.520 align:start position:0%
number of operations we did
 

00:07:07.520 --> 00:07:10.230 align:start position:0%
number of operations we did
but<00:07:07.680><c> when</c><00:07:07.919><c> we</c><00:07:08.400><c> when</c><00:07:08.560><c> we</c><00:07:08.960><c> shift</c><00:07:09.280><c> our</c><00:07:09.440><c> pointers</c>

00:07:10.230 --> 00:07:10.240 align:start position:0%
but when we when we shift our pointers
 

00:07:10.240 --> 00:07:10.790 align:start position:0%
but when we when we shift our pointers
the<00:07:10.479><c> i</c>

00:07:10.790 --> 00:07:10.800 align:start position:0%
the i
 

00:07:10.800 --> 00:07:13.830 align:start position:0%
the i
pointer<00:07:11.199><c> stays</c><00:07:11.520><c> the</c><00:07:11.759><c> exact</c><00:07:12.160><c> same</c><00:07:12.720><c> but</c><00:07:13.120><c> j</c>

00:07:13.830 --> 00:07:13.840 align:start position:0%
pointer stays the exact same but j
 

00:07:13.840 --> 00:07:16.950 align:start position:0%
pointer stays the exact same but j
is<00:07:14.160><c> incremented</c><00:07:15.039><c> by</c><00:07:15.360><c> one</c><00:07:16.000><c> so</c><00:07:16.160><c> that's</c><00:07:16.560><c> one</c>

00:07:16.950 --> 00:07:16.960 align:start position:0%
is incremented by one so that's one
 

00:07:16.960 --> 00:07:18.309 align:start position:0%
is incremented by one so that's one
possibility

00:07:18.309 --> 00:07:18.319 align:start position:0%
possibility
 

00:07:18.319 --> 00:07:20.309 align:start position:0%
possibility
another<00:07:18.720><c> possibility</c><00:07:19.360><c> is</c><00:07:19.520><c> we</c><00:07:19.759><c> delete</c><00:07:20.240><c> a</c>

00:07:20.309 --> 00:07:20.319 align:start position:0%
another possibility is we delete a
 

00:07:20.319 --> 00:07:22.230 align:start position:0%
another possibility is we delete a
character<00:07:20.720><c> so</c><00:07:20.960><c> we're</c><00:07:21.199><c> allowed</c><00:07:21.680><c> to</c><00:07:21.840><c> delete</c>

00:07:22.230 --> 00:07:22.240 align:start position:0%
character so we're allowed to delete
 

00:07:22.240 --> 00:07:23.270 align:start position:0%
character so we're allowed to delete
characters<00:07:22.800><c> from</c>

00:07:23.270 --> 00:07:23.280 align:start position:0%
characters from
 

00:07:23.280 --> 00:07:25.350 align:start position:0%
characters from
our<00:07:23.440><c> word</c><00:07:23.840><c> one</c><00:07:24.160><c> right</c><00:07:24.479><c> so</c><00:07:24.720><c> what</c><00:07:24.880><c> would</c><00:07:25.039><c> happen</c>

00:07:25.350 --> 00:07:25.360 align:start position:0%
our word one right so what would happen
 

00:07:25.360 --> 00:07:27.110 align:start position:0%
our word one right so what would happen
if<00:07:25.599><c> i</c><00:07:25.680><c> just</c><00:07:25.919><c> deleted</c><00:07:26.479><c> this</c><00:07:26.639><c> character</c><00:07:26.960><c> what</c>

00:07:27.110 --> 00:07:27.120 align:start position:0%
if i just deleted this character what
 

00:07:27.120 --> 00:07:28.230 align:start position:0%
if i just deleted this character what
we're<00:07:27.440><c> saying</c><00:07:27.840><c> is</c>

00:07:28.230 --> 00:07:28.240 align:start position:0%
we're saying is
 

00:07:28.240 --> 00:07:31.670 align:start position:0%
we're saying is
okay<00:07:28.560><c> i</c><00:07:28.800><c> can't</c><00:07:29.199><c> find</c><00:07:29.599><c> a</c><00:07:29.759><c> matching</c><00:07:30.319><c> c</c><00:07:31.120><c> in</c><00:07:31.360><c> this</c>

00:07:31.670 --> 00:07:31.680 align:start position:0%
okay i can't find a matching c in this
 

00:07:31.680 --> 00:07:32.950 align:start position:0%
okay i can't find a matching c in this
position<00:07:32.160><c> right</c>

00:07:32.950 --> 00:07:32.960 align:start position:0%
position right
 

00:07:32.960 --> 00:07:34.629 align:start position:0%
position right
and<00:07:33.120><c> we</c><00:07:33.360><c> and</c><00:07:33.520><c> we</c><00:07:33.680><c> don't</c><00:07:33.919><c> have</c><00:07:34.080><c> a</c><00:07:34.240><c> b</c>

00:07:34.629 --> 00:07:34.639 align:start position:0%
and we and we don't have a b
 

00:07:34.639 --> 00:07:36.629 align:start position:0%
and we and we don't have a b
corresponding<00:07:35.599><c> to</c><00:07:35.759><c> that</c><00:07:35.919><c> position</c><00:07:36.319><c> so</c><00:07:36.479><c> i'm</c>

00:07:36.629 --> 00:07:36.639 align:start position:0%
corresponding to that position so i'm
 

00:07:36.639 --> 00:07:38.550 align:start position:0%
corresponding to that position so i'm
just<00:07:36.800><c> going</c><00:07:36.960><c> to</c><00:07:37.120><c> ignore</c><00:07:37.759><c> this</c><00:07:38.000><c> guy</c>

00:07:38.550 --> 00:07:38.560 align:start position:0%
just going to ignore this guy
 

00:07:38.560 --> 00:07:40.870 align:start position:0%
just going to ignore this guy
and<00:07:38.800><c> hopefully</c><00:07:39.680><c> the</c><00:07:39.919><c> remainder</c><00:07:40.560><c> of</c><00:07:40.720><c> the</c>

00:07:40.870 --> 00:07:40.880 align:start position:0%
and hopefully the remainder of the
 

00:07:40.880 --> 00:07:42.629 align:start position:0%
and hopefully the remainder of the
strings<00:07:41.280><c> can</c><00:07:41.440><c> match</c><00:07:41.759><c> up</c><00:07:42.000><c> right</c><00:07:42.160><c> so</c><00:07:42.319><c> what</c><00:07:42.479><c> i'm</c>

00:07:42.629 --> 00:07:42.639 align:start position:0%
strings can match up right so what i'm
 

00:07:42.639 --> 00:07:44.070 align:start position:0%
strings can match up right so what i'm
saying<00:07:42.960><c> is</c><00:07:43.199><c> i'm</c><00:07:43.360><c> going</c><00:07:43.440><c> to</c><00:07:43.599><c> take</c><00:07:43.840><c> our</c>

00:07:44.070 --> 00:07:44.080 align:start position:0%
saying is i'm going to take our
 

00:07:44.080 --> 00:07:46.150 align:start position:0%
saying is i'm going to take our
eye<00:07:44.319><c> pointer</c><00:07:44.800><c> and</c><00:07:45.039><c> yes</c><00:07:45.360><c> i</c><00:07:45.520><c> am</c><00:07:45.680><c> going</c><00:07:45.759><c> to</c><00:07:45.919><c> shift</c>

00:07:46.150 --> 00:07:46.160 align:start position:0%
eye pointer and yes i am going to shift
 

00:07:46.160 --> 00:07:48.070 align:start position:0%
eye pointer and yes i am going to shift
it<00:07:46.240><c> to</c><00:07:46.400><c> the</c><00:07:46.479><c> next</c><00:07:46.720><c> position</c><00:07:47.039><c> because</c><00:07:47.199><c> i</c><00:07:47.440><c> just</c><00:07:47.680><c> i</c>

00:07:48.070 --> 00:07:48.080 align:start position:0%
it to the next position because i just i
 

00:07:48.080 --> 00:07:49.670 align:start position:0%
it to the next position because i just i
want<00:07:48.160><c> to</c><00:07:48.240><c> pretend</c><00:07:48.639><c> like</c><00:07:48.800><c> this</c><00:07:48.960><c> character</c>

00:07:49.670 --> 00:07:49.680 align:start position:0%
want to pretend like this character
 

00:07:49.680 --> 00:07:52.390 align:start position:0%
want to pretend like this character
never<00:07:50.000><c> existed</c><00:07:51.039><c> but</c><00:07:51.199><c> it</c><00:07:51.360><c> does</c><00:07:51.599><c> take</c><00:07:52.000><c> one</c>

00:07:52.390 --> 00:07:52.400 align:start position:0%
never existed but it does take one
 

00:07:52.400 --> 00:07:54.790 align:start position:0%
never existed but it does take one
operation<00:07:53.120><c> to</c><00:07:53.280><c> complete</c><00:07:53.759><c> that</c><00:07:54.080><c> but</c><00:07:54.319><c> since</c><00:07:54.560><c> we</c>

00:07:54.790 --> 00:07:54.800 align:start position:0%
operation to complete that but since we
 

00:07:54.800 --> 00:07:55.350 align:start position:0%
operation to complete that but since we
did<00:07:54.960><c> not</c>

00:07:55.350 --> 00:07:55.360 align:start position:0%
did not
 

00:07:55.360 --> 00:07:57.990 align:start position:0%
did not
find<00:07:55.759><c> a</c><00:07:56.000><c> matching</c><00:07:56.560><c> c</c><00:07:56.879><c> yet</c><00:07:57.120><c> right</c><00:07:57.360><c> we</c><00:07:57.520><c> have</c><00:07:57.680><c> to</c>

00:07:57.990 --> 00:07:58.000 align:start position:0%
find a matching c yet right we have to
 

00:07:58.000 --> 00:07:59.670 align:start position:0%
find a matching c yet right we have to
leave<00:07:58.319><c> our</c><00:07:58.479><c> j</c><00:07:58.720><c> pointer</c><00:07:59.120><c> here</c><00:07:59.280><c> right</c><00:07:59.440><c> we</c><00:07:59.520><c> have</c>

00:07:59.670 --> 00:07:59.680 align:start position:0%
leave our j pointer here right we have
 

00:07:59.680 --> 00:08:01.830 align:start position:0%
leave our j pointer here right we have
to<00:07:59.759><c> keep</c><00:08:00.080><c> searching</c><00:08:00.639><c> until</c><00:08:01.039><c> we</c><00:08:01.360><c> find</c><00:08:01.680><c> a</c>

00:08:01.830 --> 00:08:01.840 align:start position:0%
to keep searching until we find a
 

00:08:01.840 --> 00:08:02.710 align:start position:0%
to keep searching until we find a
matching<00:08:02.319><c> c</c>

00:08:02.710 --> 00:08:02.720 align:start position:0%
matching c
 

00:08:02.720 --> 00:08:05.350 align:start position:0%
matching c
ultimately<00:08:03.199><c> we</c><00:08:03.520><c> want</c><00:08:03.840><c> word</c><00:08:04.240><c> one</c><00:08:04.720><c> to</c><00:08:04.960><c> match</c>

00:08:05.350 --> 00:08:05.360 align:start position:0%
ultimately we want word one to match
 

00:08:05.360 --> 00:08:06.309 align:start position:0%
ultimately we want word one to match
word<00:08:05.759><c> two</c>

00:08:06.309 --> 00:08:06.319 align:start position:0%
word two
 

00:08:06.319 --> 00:08:08.869 align:start position:0%
word two
so<00:08:06.560><c> in</c><00:08:06.720><c> this</c><00:08:06.960><c> case</c><00:08:07.280><c> for</c><00:08:07.440><c> the</c><00:08:07.599><c> delete</c><00:08:08.160><c> operation</c>

00:08:08.869 --> 00:08:08.879 align:start position:0%
so in this case for the delete operation
 

00:08:08.879 --> 00:08:10.710 align:start position:0%
so in this case for the delete operation
what<00:08:09.039><c> we're</c><00:08:09.280><c> saying</c><00:08:09.520><c> is</c><00:08:09.759><c> i</c><00:08:10.080><c> is</c><00:08:10.240><c> going</c><00:08:10.400><c> to</c><00:08:10.560><c> be</c>

00:08:10.710 --> 00:08:10.720 align:start position:0%
what we're saying is i is going to be
 

00:08:10.720 --> 00:08:13.270 align:start position:0%
what we're saying is i is going to be
shifted<00:08:11.120><c> but</c><00:08:11.360><c> j</c><00:08:11.840><c> is</c><00:08:12.000><c> going</c><00:08:12.160><c> to</c><00:08:12.240><c> stay</c><00:08:12.560><c> the</c><00:08:12.720><c> exact</c>

00:08:13.270 --> 00:08:13.280 align:start position:0%
shifted but j is going to stay the exact
 

00:08:13.280 --> 00:08:17.189 align:start position:0%
shifted but j is going to stay the exact
same<00:08:13.919><c> so</c><00:08:14.319><c> i</c><00:08:14.639><c> plus</c><00:08:15.039><c> 1</c><00:08:15.520><c> but</c><00:08:15.919><c> j</c><00:08:16.240><c> stays</c><00:08:16.639><c> the</c><00:08:16.800><c> same</c>

00:08:17.189 --> 00:08:17.199 align:start position:0%
same so i plus 1 but j stays the same
 

00:08:17.199 --> 00:08:20.150 align:start position:0%
same so i plus 1 but j stays the same
as<00:08:17.360><c> you</c><00:08:17.440><c> can</c><00:08:17.680><c> see</c><00:08:18.479><c> this</c><00:08:18.720><c> is</c><00:08:19.120><c> you</c><00:08:19.199><c> know</c><00:08:19.840><c> kind</c><00:08:20.000><c> of</c>

00:08:20.150 --> 00:08:20.160 align:start position:0%
as you can see this is you know kind of
 

00:08:20.160 --> 00:08:21.589 align:start position:0%
as you can see this is you know kind of
a<00:08:20.319><c> pattern</c><00:08:20.800><c> we're</c><00:08:21.039><c> starting</c><00:08:21.280><c> to</c><00:08:21.360><c> see</c><00:08:21.520><c> a</c>

00:08:21.589 --> 00:08:21.599 align:start position:0%
a pattern we're starting to see a
 

00:08:21.599 --> 00:08:22.629 align:start position:0%
a pattern we're starting to see a
pattern<00:08:22.000><c> right</c>

00:08:22.629 --> 00:08:22.639 align:start position:0%
pattern right
 

00:08:22.639 --> 00:08:24.790 align:start position:0%
pattern right
and<00:08:22.800><c> the</c><00:08:23.120><c> last</c><00:08:23.440><c> thing</c><00:08:23.680><c> that</c><00:08:23.840><c> we</c><00:08:24.000><c> can</c><00:08:24.240><c> do</c><00:08:24.560><c> is</c>

00:08:24.790 --> 00:08:24.800 align:start position:0%
and the last thing that we can do is
 

00:08:24.800 --> 00:08:25.670 align:start position:0%
and the last thing that we can do is
replace

00:08:25.670 --> 00:08:25.680 align:start position:0%
replace
 

00:08:25.680 --> 00:08:29.110 align:start position:0%
replace
a<00:08:25.919><c> character</c><00:08:26.720><c> from</c><00:08:27.039><c> word</c><00:08:27.360><c> one</c><00:08:28.080><c> that</c><00:08:28.639><c> shows</c><00:08:28.960><c> up</c>

00:08:29.110 --> 00:08:29.120 align:start position:0%
a character from word one that shows up
 

00:08:29.120 --> 00:08:30.710 align:start position:0%
a character from word one that shows up
in<00:08:29.199><c> word</c><00:08:29.440><c> two</c><00:08:29.680><c> right</c><00:08:29.919><c> obviously</c><00:08:30.400><c> if</c><00:08:30.560><c> we're</c>

00:08:30.710 --> 00:08:30.720 align:start position:0%
in word two right obviously if we're
 

00:08:30.720 --> 00:08:32.389 align:start position:0%
in word two right obviously if we're
replacing<00:08:31.199><c> a</c><00:08:31.360><c> character</c><00:08:31.759><c> from</c><00:08:32.000><c> word</c>

00:08:32.389 --> 00:08:32.399 align:start position:0%
replacing a character from word
 

00:08:32.399 --> 00:08:34.230 align:start position:0%
replacing a character from word
one<00:08:32.880><c> right</c><00:08:33.120><c> we're</c><00:08:33.279><c> gonna</c><00:08:33.440><c> want</c><00:08:33.760><c> the</c><00:08:33.839><c> character</c>

00:08:34.230 --> 00:08:34.240 align:start position:0%
one right we're gonna want the character
 

00:08:34.240 --> 00:08:35.430 align:start position:0%
one right we're gonna want the character
that's<00:08:34.640><c> matching</c>

00:08:35.430 --> 00:08:35.440 align:start position:0%
that's matching
 

00:08:35.440 --> 00:08:37.269 align:start position:0%
that's matching
in<00:08:35.599><c> word</c><00:08:35.839><c> two</c><00:08:36.000><c> right</c><00:08:36.159><c> so</c><00:08:36.399><c> what</c><00:08:36.560><c> we'd</c><00:08:36.800><c> wanna</c><00:08:37.039><c> do</c>

00:08:37.269 --> 00:08:37.279 align:start position:0%
in word two right so what we'd wanna do
 

00:08:37.279 --> 00:08:38.469 align:start position:0%
in word two right so what we'd wanna do
is<00:08:37.440><c> take</c><00:08:37.680><c> this</c><00:08:38.000><c> b</c>

00:08:38.469 --> 00:08:38.479 align:start position:0%
is take this b
 

00:08:38.479 --> 00:08:42.070 align:start position:0%
is take this b
and<00:08:38.719><c> replace</c><00:08:39.440><c> it</c><00:08:39.680><c> with</c><00:08:40.159><c> a</c><00:08:40.640><c> c</c><00:08:41.039><c> character</c><00:08:41.680><c> right</c>

00:08:42.070 --> 00:08:42.080 align:start position:0%
and replace it with a c character right
 

00:08:42.080 --> 00:08:44.790 align:start position:0%
and replace it with a c character right
if<00:08:42.320><c> we</c><00:08:42.640><c> did</c><00:08:42.959><c> that</c><00:08:43.440><c> clearly</c><00:08:44.320><c> these</c><00:08:44.560><c> two</c>

00:08:44.790 --> 00:08:44.800 align:start position:0%
if we did that clearly these two
 

00:08:44.800 --> 00:08:46.150 align:start position:0%
if we did that clearly these two
characters<00:08:45.279><c> match</c><00:08:45.600><c> right</c><00:08:45.760><c> we</c>

00:08:46.150 --> 00:08:46.160 align:start position:0%
characters match right we
 

00:08:46.160 --> 00:08:48.310 align:start position:0%
characters match right we
made<00:08:46.480><c> them</c><00:08:46.800><c> match</c><00:08:47.200><c> we</c><00:08:47.519><c> forced</c><00:08:48.000><c> these</c>

00:08:48.310 --> 00:08:48.320 align:start position:0%
made them match we forced these
 

00:08:48.320 --> 00:08:49.590 align:start position:0%
made them match we forced these
characters<00:08:48.800><c> to</c><00:08:49.040><c> match</c>

00:08:49.590 --> 00:08:49.600 align:start position:0%
characters to match
 

00:08:49.600 --> 00:08:52.150 align:start position:0%
characters to match
so<00:08:49.920><c> in</c><00:08:50.080><c> that</c><00:08:50.320><c> case</c><00:08:50.800><c> we</c><00:08:51.120><c> we</c><00:08:51.279><c> know</c><00:08:51.440><c> that</c><00:08:51.680><c> the</c><00:08:51.839><c> c</c>

00:08:52.150 --> 00:08:52.160 align:start position:0%
so in that case we we know that the c
 

00:08:52.160 --> 00:08:53.110 align:start position:0%
so in that case we we know that the c
has<00:08:52.320><c> a</c><00:08:52.399><c> matching</c><00:08:52.800><c> c</c>

00:08:53.110 --> 00:08:53.120 align:start position:0%
has a matching c
 

00:08:53.120 --> 00:08:55.350 align:start position:0%
has a matching c
up<00:08:53.279><c> here</c><00:08:53.760><c> so</c><00:08:53.920><c> we</c><00:08:54.080><c> can</c><00:08:54.240><c> take</c><00:08:54.480><c> this</c><00:08:54.720><c> i</c><00:08:54.959><c> pointer</c>

00:08:55.350 --> 00:08:55.360 align:start position:0%
up here so we can take this i pointer
 

00:08:55.360 --> 00:08:57.430 align:start position:0%
up here so we can take this i pointer
and<00:08:55.519><c> shift</c><00:08:55.839><c> it</c><00:08:56.080><c> and</c><00:08:56.320><c> we</c><00:08:56.399><c> can</c><00:08:56.560><c> take</c><00:08:56.800><c> our</c><00:08:57.040><c> j</c>

00:08:57.430 --> 00:08:57.440 align:start position:0%
and shift it and we can take our j
 

00:08:57.440 --> 00:08:59.350 align:start position:0%
and shift it and we can take our j
pointer<00:08:58.000><c> and</c><00:08:58.240><c> shift</c><00:08:58.560><c> it</c><00:08:58.800><c> to</c><00:08:58.959><c> the</c><00:08:59.120><c> next</c>

00:08:59.350 --> 00:08:59.360 align:start position:0%
pointer and shift it to the next
 

00:08:59.360 --> 00:09:00.790 align:start position:0%
pointer and shift it to the next
position<00:08:59.920><c> right</c><00:09:00.399><c> so</c>

00:09:00.790 --> 00:09:00.800 align:start position:0%
position right so
 

00:09:00.800 --> 00:09:03.670 align:start position:0%
position right so
the<00:09:00.959><c> replace</c><00:09:02.320><c> actually</c><00:09:02.800><c> ends</c><00:09:03.040><c> up</c><00:09:03.200><c> doing</c><00:09:03.519><c> the</c>

00:09:03.670 --> 00:09:03.680 align:start position:0%
the replace actually ends up doing the
 

00:09:03.680 --> 00:09:04.949 align:start position:0%
the replace actually ends up doing the
exact<00:09:04.080><c> same</c><00:09:04.399><c> thing</c><00:09:04.640><c> as</c>

00:09:04.949 --> 00:09:04.959 align:start position:0%
exact same thing as
 

00:09:04.959 --> 00:09:07.110 align:start position:0%
exact same thing as
if<00:09:05.120><c> the</c><00:09:05.279><c> characters</c><00:09:05.760><c> were</c><00:09:06.080><c> equal</c><00:09:06.720><c> and</c><00:09:06.880><c> that</c>

00:09:07.110 --> 00:09:07.120 align:start position:0%
if the characters were equal and that
 

00:09:07.120 --> 00:09:08.949 align:start position:0%
if the characters were equal and that
makes<00:09:07.440><c> sense</c><00:09:07.839><c> because</c><00:09:08.080><c> what</c><00:09:08.240><c> we're</c><00:09:08.560><c> doing</c><00:09:08.800><c> is</c>

00:09:08.949 --> 00:09:08.959 align:start position:0%
makes sense because what we're doing is
 

00:09:08.959 --> 00:09:09.350 align:start position:0%
makes sense because what we're doing is
we're

00:09:09.350 --> 00:09:09.360 align:start position:0%
we're
 

00:09:09.360 --> 00:09:11.509 align:start position:0%
we're
forcing<00:09:09.839><c> them</c><00:09:10.080><c> to</c><00:09:10.240><c> be</c><00:09:10.480><c> equal</c><00:09:11.200><c> with</c><00:09:11.360><c> the</c>

00:09:11.509 --> 00:09:11.519 align:start position:0%
forcing them to be equal with the
 

00:09:11.519 --> 00:09:12.870 align:start position:0%
forcing them to be equal with the
replace<00:09:12.160><c> operation</c>

00:09:12.870 --> 00:09:12.880 align:start position:0%
replace operation
 

00:09:12.880 --> 00:09:15.509 align:start position:0%
replace operation
the<00:09:13.120><c> difference</c><00:09:13.600><c> between</c><00:09:13.920><c> the</c><00:09:14.080><c> replace</c><00:09:15.040><c> and</c>

00:09:15.509 --> 00:09:15.519 align:start position:0%
the difference between the replace and
 

00:09:15.519 --> 00:09:17.509 align:start position:0%
the difference between the replace and
and<00:09:15.680><c> if</c><00:09:15.760><c> they</c><00:09:15.920><c> were</c><00:09:16.160><c> already</c><00:09:16.720><c> originally</c>

00:09:17.509 --> 00:09:17.519 align:start position:0%
and if they were already originally
 

00:09:17.519 --> 00:09:17.990 align:start position:0%
and if they were already originally
equal

00:09:17.990 --> 00:09:18.000 align:start position:0%
equal
 

00:09:18.000 --> 00:09:20.949 align:start position:0%
equal
is<00:09:18.160><c> that</c><00:09:18.240><c> the</c><00:09:18.399><c> replace</c><00:09:19.360><c> does</c><00:09:19.839><c> take</c><00:09:20.080><c> a</c><00:09:20.399><c> single</c>

00:09:20.949 --> 00:09:20.959 align:start position:0%
is that the replace does take a single
 

00:09:20.959 --> 00:09:23.509 align:start position:0%
is that the replace does take a single
operation<00:09:21.920><c> if</c><00:09:22.080><c> they</c><00:09:22.160><c> were</c><00:09:22.480><c> already</c><00:09:23.040><c> equal</c>

00:09:23.509 --> 00:09:23.519 align:start position:0%
operation if they were already equal
 

00:09:23.519 --> 00:09:25.509 align:start position:0%
operation if they were already equal
the<00:09:23.680><c> number</c><00:09:23.920><c> of</c><00:09:24.160><c> operations</c><00:09:24.800><c> it</c><00:09:24.880><c> takes</c><00:09:25.279><c> is</c>

00:09:25.509 --> 00:09:25.519 align:start position:0%
the number of operations it takes is
 

00:09:25.519 --> 00:09:26.550 align:start position:0%
the number of operations it takes is
zero<00:09:26.000><c> right</c>

00:09:26.550 --> 00:09:26.560 align:start position:0%
zero right
 

00:09:26.560 --> 00:09:28.870 align:start position:0%
zero right
so<00:09:26.800><c> it</c><00:09:26.959><c> does</c><00:09:27.279><c> come</c><00:09:27.519><c> with</c><00:09:27.760><c> a</c><00:09:27.920><c> cost</c><00:09:28.399><c> even</c><00:09:28.640><c> though</c>

00:09:28.870 --> 00:09:28.880 align:start position:0%
so it does come with a cost even though
 

00:09:28.880 --> 00:09:30.870 align:start position:0%
so it does come with a cost even though
replace<00:09:29.440><c> is</c><00:09:29.680><c> pretty</c><00:09:30.000><c> powerful</c>

00:09:30.870 --> 00:09:30.880 align:start position:0%
replace is pretty powerful
 

00:09:30.880 --> 00:09:32.470 align:start position:0%
replace is pretty powerful
as<00:09:31.040><c> i</c><00:09:31.200><c> said</c><00:09:31.360><c> with</c><00:09:31.600><c> replace</c><00:09:32.080><c> what</c><00:09:32.240><c> we're</c><00:09:32.399><c> going</c>

00:09:32.470 --> 00:09:32.480 align:start position:0%
as i said with replace what we're going
 

00:09:32.480 --> 00:09:33.990 align:start position:0%
as i said with replace what we're going
to<00:09:32.560><c> do</c><00:09:32.720><c> is</c><00:09:32.959><c> increment</c><00:09:33.440><c> i</c>

00:09:33.990 --> 00:09:34.000 align:start position:0%
to do is increment i
 

00:09:34.000 --> 00:09:37.350 align:start position:0%
to do is increment i
and<00:09:34.399><c> increment</c><00:09:35.040><c> j</c><00:09:35.680><c> so</c><00:09:35.920><c> let's</c><00:09:36.240><c> just</c><00:09:36.959><c> go</c><00:09:37.120><c> with</c>

00:09:37.350 --> 00:09:37.360 align:start position:0%
and increment j so let's just go with
 

00:09:37.360 --> 00:09:38.949 align:start position:0%
and increment j so let's just go with
the<00:09:37.440><c> replace</c><00:09:38.000><c> operation</c><00:09:38.480><c> because</c><00:09:38.720><c> that's</c>

00:09:38.949 --> 00:09:38.959 align:start position:0%
the replace operation because that's
 

00:09:38.959 --> 00:09:40.150 align:start position:0%
the replace operation because that's
actually<00:09:39.200><c> going</c><00:09:39.279><c> to</c><00:09:39.440><c> end</c><00:09:39.600><c> up</c>

00:09:40.150 --> 00:09:40.160 align:start position:0%
actually going to end up
 

00:09:40.160 --> 00:09:42.230 align:start position:0%
actually going to end up
being<00:09:40.399><c> the</c><00:09:40.560><c> minimum</c><00:09:41.040><c> solution</c><00:09:41.440><c> so</c><00:09:41.680><c> now</c><00:09:42.000><c> we</c>

00:09:42.230 --> 00:09:42.240 align:start position:0%
being the minimum solution so now we
 

00:09:42.240 --> 00:09:43.430 align:start position:0%
being the minimum solution so now we
shifted<00:09:42.560><c> our</c><00:09:42.720><c> pointers</c><00:09:43.040><c> to</c><00:09:43.120><c> the</c><00:09:43.200><c> next</c>

00:09:43.430 --> 00:09:43.440 align:start position:0%
shifted our pointers to the next
 

00:09:43.440 --> 00:09:44.310 align:start position:0%
shifted our pointers to the next
position<00:09:43.839><c> we</c><00:09:44.000><c> see</c>

00:09:44.310 --> 00:09:44.320 align:start position:0%
position we see
 

00:09:44.320 --> 00:09:46.870 align:start position:0%
position we see
d<00:09:44.959><c> and</c><00:09:45.120><c> d</c><00:09:45.360><c> they</c><00:09:45.600><c> match</c><00:09:45.920><c> each</c><00:09:46.080><c> other</c><00:09:46.240><c> so</c><00:09:46.480><c> this</c><00:09:46.800><c> is</c>

00:09:46.870 --> 00:09:46.880 align:start position:0%
d and d they match each other so this is
 

00:09:46.880 --> 00:09:48.230 align:start position:0%
d and d they match each other so this is
the<00:09:47.040><c> statement</c><00:09:47.360><c> that's</c><00:09:47.600><c> going</c><00:09:47.680><c> to</c><00:09:47.839><c> execute</c>

00:09:48.230 --> 00:09:48.240 align:start position:0%
the statement that's going to execute
 

00:09:48.240 --> 00:09:49.590 align:start position:0%
the statement that's going to execute
and<00:09:48.320><c> we</c><00:09:48.480><c> know</c><00:09:48.640><c> that</c><00:09:48.880><c> takes</c><00:09:49.200><c> 0</c>

00:09:49.590 --> 00:09:49.600 align:start position:0%
and we know that takes 0
 

00:09:49.600 --> 00:09:50.790 align:start position:0%
and we know that takes 0
operations<00:09:50.160><c> right</c><00:09:50.320><c> so</c><00:09:50.480><c> we're</c><00:09:50.560><c> going</c><00:09:50.640><c> to</c>

00:09:50.790 --> 00:09:50.800 align:start position:0%
operations right so we're going to
 

00:09:50.800 --> 00:09:53.190 align:start position:0%
operations right so we're going to
increment<00:09:51.600><c> both</c><00:09:51.920><c> pointers</c><00:09:52.480><c> by</c><00:09:52.720><c> 1.</c>

00:09:53.190 --> 00:09:53.200 align:start position:0%
increment both pointers by 1.
 

00:09:53.200 --> 00:09:55.110 align:start position:0%
increment both pointers by 1.
j<00:09:53.440><c> is</c><00:09:53.519><c> going</c><00:09:53.600><c> to</c><00:09:53.680><c> be</c><00:09:53.839><c> over</c><00:09:54.000><c> here</c><00:09:54.240><c> now</c><00:09:54.720><c> i</c><00:09:55.040><c> is</c>

00:09:55.110 --> 00:09:55.120 align:start position:0%
j is going to be over here now i is
 

00:09:55.120 --> 00:09:57.350 align:start position:0%
j is going to be over here now i is
going<00:09:55.279><c> to</c><00:09:55.360><c> be</c><00:09:55.519><c> over</c><00:09:55.680><c> here</c><00:09:56.160><c> notice</c><00:09:56.640><c> now</c><00:09:56.959><c> how</c><00:09:57.120><c> we</c>

00:09:57.350 --> 00:09:57.360 align:start position:0%
going to be over here notice now how we
 

00:09:57.360 --> 00:09:57.990 align:start position:0%
going to be over here notice now how we
have<00:09:57.600><c> two</c>

00:09:57.990 --> 00:09:58.000 align:start position:0%
have two
 

00:09:58.000 --> 00:10:00.150 align:start position:0%
have two
empty<00:09:58.399><c> strings</c><00:09:58.800><c> remember</c><00:09:59.200><c> the</c><00:09:59.360><c> base</c><00:09:59.680><c> case</c><00:09:59.920><c> if</c>

00:10:00.150 --> 00:10:00.160 align:start position:0%
empty strings remember the base case if
 

00:10:00.160 --> 00:10:01.670 align:start position:0%
empty strings remember the base case if
both<00:10:00.480><c> strings</c><00:10:00.880><c> are</c><00:10:01.120><c> empty</c>

00:10:01.670 --> 00:10:01.680 align:start position:0%
both strings are empty
 

00:10:01.680 --> 00:10:03.990 align:start position:0%
both strings are empty
we<00:10:01.839><c> can</c><00:10:01.920><c> return</c><00:10:02.480><c> 0</c><00:10:02.880><c> because</c><00:10:03.200><c> it</c><00:10:03.279><c> takes</c><00:10:03.600><c> zero</c>

00:10:03.990 --> 00:10:04.000 align:start position:0%
we can return 0 because it takes zero
 

00:10:04.000 --> 00:10:05.590 align:start position:0%
we can return 0 because it takes zero
operations<00:10:04.640><c> to</c><00:10:04.800><c> make</c><00:10:05.040><c> them</c>

00:10:05.590 --> 00:10:05.600 align:start position:0%
operations to make them
 

00:10:05.600 --> 00:10:07.430 align:start position:0%
operations to make them
equal<00:10:05.920><c> right</c><00:10:06.079><c> they're</c><00:10:06.320><c> already</c><00:10:06.800><c> equal</c><00:10:07.279><c> so</c>

00:10:07.430 --> 00:10:07.440 align:start position:0%
equal right they're already equal so
 

00:10:07.440 --> 00:10:09.430 align:start position:0%
equal right they're already equal so
we're<00:10:07.760><c> done</c><00:10:08.160><c> we</c><00:10:08.320><c> return</c>

00:10:09.430 --> 00:10:09.440 align:start position:0%
we're done we return
 

00:10:09.440 --> 00:10:11.829 align:start position:0%
we're done we return
zero<00:10:09.920><c> how</c><00:10:10.079><c> many</c><00:10:10.399><c> operations</c><00:10:11.120><c> did</c><00:10:11.279><c> it</c><00:10:11.440><c> take</c><00:10:11.680><c> by</c>

00:10:11.829 --> 00:10:11.839 align:start position:0%
zero how many operations did it take by
 

00:10:11.839 --> 00:10:12.470 align:start position:0%
zero how many operations did it take by
the<00:10:11.920><c> way</c><00:10:12.079><c> if</c><00:10:12.160><c> we</c>

00:10:12.470 --> 00:10:12.480 align:start position:0%
the way if we
 

00:10:12.480 --> 00:10:13.990 align:start position:0%
the way if we
if<00:10:12.560><c> you</c><00:10:12.720><c> were</c><00:10:12.880><c> counting</c><00:10:13.279><c> we</c><00:10:13.440><c> did</c><00:10:13.680><c> have</c><00:10:13.839><c> to</c>

00:10:13.990 --> 00:10:14.000 align:start position:0%
if you were counting we did have to
 

00:10:14.000 --> 00:10:15.910 align:start position:0%
if you were counting we did have to
execute<00:10:14.480><c> a</c><00:10:14.720><c> single</c><00:10:15.120><c> replace</c>

00:10:15.910 --> 00:10:15.920 align:start position:0%
execute a single replace
 

00:10:15.920 --> 00:10:18.470 align:start position:0%
execute a single replace
operation<00:10:16.720><c> that</c><00:10:16.959><c> took</c><00:10:17.360><c> one</c><00:10:17.680><c> operation</c><00:10:18.160><c> so</c><00:10:18.399><c> the</c>

00:10:18.470 --> 00:10:18.480 align:start position:0%
operation that took one operation so the
 

00:10:18.480 --> 00:10:19.590 align:start position:0%
operation that took one operation so the
result<00:10:18.959><c> is</c>

00:10:19.590 --> 00:10:19.600 align:start position:0%
result is
 

00:10:19.600 --> 00:10:21.910 align:start position:0%
result is
one<00:10:20.240><c> so</c><00:10:20.399><c> we</c><00:10:20.560><c> are</c><00:10:20.720><c> noticing</c><00:10:21.200><c> that</c><00:10:21.360><c> the</c><00:10:21.600><c> sub</c>

00:10:21.910 --> 00:10:21.920 align:start position:0%
one so we are noticing that the sub
 

00:10:21.920 --> 00:10:22.630 align:start position:0%
one so we are noticing that the sub
problems

00:10:22.630 --> 00:10:22.640 align:start position:0%
problems
 

00:10:22.640 --> 00:10:24.949 align:start position:0%
problems
are<00:10:22.880><c> good</c><00:10:23.200><c> to</c><00:10:23.440><c> solve</c><00:10:23.760><c> before</c><00:10:24.160><c> we</c><00:10:24.320><c> try</c><00:10:24.560><c> to</c><00:10:24.720><c> solve</c>

00:10:24.949 --> 00:10:24.959 align:start position:0%
are good to solve before we try to solve
 

00:10:24.959 --> 00:10:25.910 align:start position:0%
are good to solve before we try to solve
the<00:10:25.200><c> original</c>

00:10:25.910 --> 00:10:25.920 align:start position:0%
the original
 

00:10:25.920 --> 00:10:28.069 align:start position:0%
the original
problem<00:10:26.399><c> of</c><00:10:26.560><c> comparing</c><00:10:26.959><c> the</c><00:10:27.200><c> entire</c><00:10:27.600><c> lists</c>

00:10:28.069 --> 00:10:28.079 align:start position:0%
problem of comparing the entire lists
 

00:10:28.079 --> 00:10:29.509 align:start position:0%
problem of comparing the entire lists
let<00:10:28.240><c> me</c><00:10:28.399><c> reformat</c><00:10:29.200><c> this</c>

00:10:29.509 --> 00:10:29.519 align:start position:0%
let me reformat this
 

00:10:29.519 --> 00:10:32.550 align:start position:0%
let me reformat this
into<00:10:29.839><c> the</c><00:10:30.000><c> dynamic</c><00:10:30.640><c> programming</c><00:10:31.200><c> explanation</c>

00:10:32.550 --> 00:10:32.560 align:start position:0%
into the dynamic programming explanation
 

00:10:32.560 --> 00:10:34.389 align:start position:0%
into the dynamic programming explanation
so<00:10:32.800><c> you</c><00:10:32.959><c> may</c><00:10:33.200><c> have</c><00:10:33.440><c> seen</c><00:10:33.760><c> something</c><00:10:34.079><c> like</c><00:10:34.240><c> this</c>

00:10:34.389 --> 00:10:34.399 align:start position:0%
so you may have seen something like this
 

00:10:34.399 --> 00:10:35.509 align:start position:0%
so you may have seen something like this
before<00:10:34.800><c> this</c><00:10:35.040><c> is</c><00:10:35.120><c> going</c><00:10:35.200><c> to</c><00:10:35.279><c> be</c><00:10:35.360><c> a</c>

00:10:35.509 --> 00:10:35.519 align:start position:0%
before this is going to be a
 

00:10:35.519 --> 00:10:37.350 align:start position:0%
before this is going to be a
two-dimensional<00:10:36.399><c> dynamic</c><00:10:36.800><c> programming</c>

00:10:37.350 --> 00:10:37.360 align:start position:0%
two-dimensional dynamic programming
 

00:10:37.360 --> 00:10:37.829 align:start position:0%
two-dimensional dynamic programming
problem

00:10:37.829 --> 00:10:37.839 align:start position:0%
problem
 

00:10:37.839 --> 00:10:39.670 align:start position:0%
problem
it's<00:10:38.079><c> good</c><00:10:38.240><c> to</c><00:10:38.399><c> visualize</c><00:10:39.040><c> it</c><00:10:39.200><c> kind</c><00:10:39.279><c> of</c><00:10:39.440><c> like</c>

00:10:39.670 --> 00:10:39.680 align:start position:0%
it's good to visualize it kind of like
 

00:10:39.680 --> 00:10:41.670 align:start position:0%
it's good to visualize it kind of like
this<00:10:39.920><c> so</c><00:10:40.079><c> what</c><00:10:40.240><c> we're</c><00:10:40.399><c> doing</c><00:10:40.720><c> here</c><00:10:41.040><c> is</c><00:10:41.279><c> we</c><00:10:41.519><c> are</c>

00:10:41.670 --> 00:10:41.680 align:start position:0%
this so what we're doing here is we are
 

00:10:41.680 --> 00:10:43.430 align:start position:0%
this so what we're doing here is we are
comparing<00:10:42.320><c> these</c><00:10:42.560><c> two</c><00:10:42.800><c> strings</c>

00:10:43.430 --> 00:10:43.440 align:start position:0%
comparing these two strings
 

00:10:43.440 --> 00:10:45.350 align:start position:0%
comparing these two strings
and<00:10:43.680><c> for</c><00:10:44.000><c> this</c><00:10:44.240><c> position</c><00:10:44.720><c> this</c><00:10:44.880><c> is</c><00:10:45.040><c> what</c><00:10:45.200><c> we</c>

00:10:45.350 --> 00:10:45.360 align:start position:0%
and for this position this is what we
 

00:10:45.360 --> 00:10:46.470 align:start position:0%
and for this position this is what we
want<00:10:45.519><c> to</c><00:10:45.680><c> calculate</c>

00:10:46.470 --> 00:10:46.480 align:start position:0%
want to calculate
 

00:10:46.480 --> 00:10:48.150 align:start position:0%
want to calculate
in<00:10:46.720><c> this</c><00:10:46.880><c> position</c><00:10:47.360><c> what</c><00:10:47.519><c> we're</c><00:10:47.680><c> going</c><00:10:47.760><c> to</c><00:10:47.920><c> do</c>

00:10:48.150 --> 00:10:48.160 align:start position:0%
in this position what we're going to do
 

00:10:48.160 --> 00:10:49.509 align:start position:0%
in this position what we're going to do
is<00:10:48.320><c> we're</c><00:10:48.480><c> going</c><00:10:48.560><c> to</c><00:10:48.800><c> store</c>

00:10:49.509 --> 00:10:49.519 align:start position:0%
is we're going to store
 

00:10:49.519 --> 00:10:51.590 align:start position:0%
is we're going to store
the<00:10:49.920><c> basically</c><00:10:50.480><c> the</c><00:10:50.720><c> minimum</c><00:10:51.200><c> number</c><00:10:51.440><c> of</c>

00:10:51.590 --> 00:10:51.600 align:start position:0%
the basically the minimum number of
 

00:10:51.600 --> 00:10:52.870 align:start position:0%
the basically the minimum number of
operations<00:10:52.480><c> for</c>

00:10:52.870 --> 00:10:52.880 align:start position:0%
operations for
 

00:10:52.880 --> 00:10:54.870 align:start position:0%
operations for
these<00:10:53.120><c> two</c><00:10:53.360><c> strings</c><00:10:53.920><c> starting</c><00:10:54.480><c> at</c><00:10:54.640><c> this</c>

00:10:54.870 --> 00:10:54.880 align:start position:0%
these two strings starting at this
 

00:10:54.880 --> 00:10:56.230 align:start position:0%
these two strings starting at this
character<00:10:55.279><c> for</c><00:10:55.440><c> word</c><00:10:55.760><c> two</c>

00:10:56.230 --> 00:10:56.240 align:start position:0%
character for word two
 

00:10:56.240 --> 00:10:57.990 align:start position:0%
character for word two
starting<00:10:56.560><c> at</c><00:10:56.720><c> this</c><00:10:56.959><c> character</c><00:10:57.360><c> for</c><00:10:57.519><c> word</c><00:10:57.760><c> one</c>

00:10:57.990 --> 00:10:58.000 align:start position:0%
starting at this character for word one
 

00:10:58.000 --> 00:11:00.470 align:start position:0%
starting at this character for word one
so<00:10:58.160><c> basically</c><00:10:58.640><c> the</c><00:10:58.880><c> entire</c><00:10:59.760><c> strings</c>

00:11:00.470 --> 00:11:00.480 align:start position:0%
so basically the entire strings
 

00:11:00.480 --> 00:11:02.470 align:start position:0%
so basically the entire strings
is<00:11:00.640><c> going</c><00:11:00.720><c> to</c><00:11:00.800><c> be</c><00:11:00.959><c> stored</c><00:11:01.440><c> here</c><00:11:01.920><c> what</c><00:11:02.160><c> would</c><00:11:02.320><c> be</c>

00:11:02.470 --> 00:11:02.480 align:start position:0%
is going to be stored here what would be
 

00:11:02.480 --> 00:11:04.630 align:start position:0%
is going to be stored here what would be
stored<00:11:03.040><c> in</c><00:11:03.200><c> this</c><00:11:03.440><c> position</c><00:11:03.920><c> basically</c>

00:11:04.630 --> 00:11:04.640 align:start position:0%
stored in this position basically
 

00:11:04.640 --> 00:11:07.190 align:start position:0%
stored in this position basically
corresponding<00:11:05.360><c> to</c><00:11:05.600><c> here</c><00:11:06.000><c> so</c><00:11:06.240><c> we're</c><00:11:06.399><c> comparing</c>

00:11:07.190 --> 00:11:07.200 align:start position:0%
corresponding to here so we're comparing
 

00:11:07.200 --> 00:11:08.150 align:start position:0%
corresponding to here so we're comparing
these<00:11:07.519><c> two</c>

00:11:08.150 --> 00:11:08.160 align:start position:0%
these two
 

00:11:08.160 --> 00:11:10.550 align:start position:0%
these two
basically<00:11:08.560><c> the</c><00:11:08.720><c> remainder</c><00:11:09.279><c> of</c><00:11:09.440><c> this</c><00:11:09.839><c> string</c>

00:11:10.550 --> 00:11:10.560 align:start position:0%
basically the remainder of this string
 

00:11:10.560 --> 00:11:11.829 align:start position:0%
basically the remainder of this string
and<00:11:10.880><c> from</c><00:11:11.200><c> here</c>

00:11:11.829 --> 00:11:11.839 align:start position:0%
and from here
 

00:11:11.839 --> 00:11:13.990 align:start position:0%
and from here
the<00:11:12.000><c> remainder</c><00:11:12.560><c> of</c><00:11:12.720><c> this</c><00:11:12.959><c> string</c><00:11:13.440><c> so</c><00:11:13.680><c> in</c><00:11:13.839><c> this</c>

00:11:13.990 --> 00:11:14.000 align:start position:0%
the remainder of this string so in this
 

00:11:14.000 --> 00:11:15.269 align:start position:0%
the remainder of this string so in this
position<00:11:14.399><c> what</c><00:11:14.560><c> we</c><00:11:14.640><c> would</c><00:11:14.880><c> store</c>

00:11:15.269 --> 00:11:15.279 align:start position:0%
position what we would store
 

00:11:15.279 --> 00:11:17.190 align:start position:0%
position what we would store
is<00:11:15.360><c> the</c><00:11:15.519><c> minimum</c><00:11:16.000><c> number</c><00:11:16.240><c> of</c><00:11:16.399><c> operations</c><00:11:17.120><c> it</c>

00:11:17.190 --> 00:11:17.200 align:start position:0%
is the minimum number of operations it
 

00:11:17.200 --> 00:11:18.630 align:start position:0%
is the minimum number of operations it
would<00:11:17.360><c> take</c><00:11:17.839><c> to</c><00:11:18.000><c> make</c><00:11:18.240><c> this</c>

00:11:18.630 --> 00:11:18.640 align:start position:0%
would take to make this
 

00:11:18.640 --> 00:11:21.430 align:start position:0%
would take to make this
sub<00:11:18.959><c> problem</c><00:11:19.680><c> these</c><00:11:19.920><c> two</c><00:11:20.320><c> sub</c><00:11:20.640><c> strings</c><00:11:21.279><c> how</c>

00:11:21.430 --> 00:11:21.440 align:start position:0%
sub problem these two sub strings how
 

00:11:21.440 --> 00:11:21.910 align:start position:0%
sub problem these two sub strings how
many

00:11:21.910 --> 00:11:21.920 align:start position:0%
many
 

00:11:21.920 --> 00:11:23.670 align:start position:0%
many
minimum<00:11:22.399><c> operations</c><00:11:22.880><c> it</c><00:11:22.959><c> would</c><00:11:23.120><c> take</c><00:11:23.279><c> to</c><00:11:23.360><c> make</c>

00:11:23.670 --> 00:11:23.680 align:start position:0%
minimum operations it would take to make
 

00:11:23.680 --> 00:11:25.030 align:start position:0%
minimum operations it would take to make
them<00:11:24.079><c> equal</c>

00:11:25.030 --> 00:11:25.040 align:start position:0%
them equal
 

00:11:25.040 --> 00:11:27.269 align:start position:0%
them equal
okay<00:11:25.360><c> so</c><00:11:25.600><c> that</c><00:11:25.839><c> makes</c><00:11:26.079><c> sense</c><00:11:26.320><c> so</c><00:11:26.560><c> far</c><00:11:26.800><c> but</c><00:11:26.959><c> then</c>

00:11:27.269 --> 00:11:27.279 align:start position:0%
okay so that makes sense so far but then
 

00:11:27.279 --> 00:11:28.710 align:start position:0%
okay so that makes sense so far but then
why<00:11:27.440><c> do</c><00:11:27.680><c> i</c><00:11:27.839><c> have</c><00:11:28.240><c> this</c>

00:11:28.710 --> 00:11:28.720 align:start position:0%
why do i have this
 

00:11:28.720 --> 00:11:31.829 align:start position:0%
why do i have this
extra<00:11:29.680><c> layer</c><00:11:30.079><c> over</c><00:11:30.320><c> here</c><00:11:30.640><c> the</c><00:11:31.200><c> this</c>

00:11:31.829 --> 00:11:31.839 align:start position:0%
extra layer over here the this
 

00:11:31.839 --> 00:11:34.150 align:start position:0%
extra layer over here the this
portion<00:11:32.240><c> is</c><00:11:32.399><c> for</c><00:11:32.720><c> our</c><00:11:32.959><c> base</c><00:11:33.279><c> case</c><00:11:33.760><c> what</c><00:11:33.920><c> would</c>

00:11:34.150 --> 00:11:34.160 align:start position:0%
portion is for our base case what would
 

00:11:34.160 --> 00:11:35.430 align:start position:0%
portion is for our base case what would
be<00:11:34.399><c> over</c><00:11:34.800><c> here</c>

00:11:35.430 --> 00:11:35.440 align:start position:0%
be over here
 

00:11:35.440 --> 00:11:37.430 align:start position:0%
be over here
right<00:11:35.680><c> so</c><00:11:36.079><c> clearly</c><00:11:36.480><c> we</c><00:11:36.640><c> see</c><00:11:36.880><c> that</c><00:11:37.040><c> there's</c><00:11:37.279><c> an</c>

00:11:37.430 --> 00:11:37.440 align:start position:0%
right so clearly we see that there's an
 

00:11:37.440 --> 00:11:38.790 align:start position:0%
right so clearly we see that there's an
empty<00:11:37.680><c> string</c><00:11:37.920><c> over</c><00:11:38.079><c> here</c><00:11:38.240><c> there's</c><00:11:38.480><c> an</c><00:11:38.560><c> empty</c>

00:11:38.790 --> 00:11:38.800 align:start position:0%
empty string over here there's an empty
 

00:11:38.800 --> 00:11:41.110 align:start position:0%
empty string over here there's an empty
string<00:11:39.040><c> over</c><00:11:39.200><c> here</c><00:11:39.360><c> what</c><00:11:39.680><c> value</c><00:11:40.079><c> should</c><00:11:40.240><c> i</c><00:11:40.480><c> put</c>

00:11:41.110 --> 00:11:41.120 align:start position:0%
string over here what value should i put
 

00:11:41.120 --> 00:11:43.509 align:start position:0%
string over here what value should i put
over<00:11:41.360><c> here</c><00:11:42.000><c> obviously</c><00:11:42.560><c> zero</c><00:11:42.880><c> right</c><00:11:43.040><c> two</c><00:11:43.279><c> empty</c>

00:11:43.509 --> 00:11:43.519 align:start position:0%
over here obviously zero right two empty
 

00:11:43.519 --> 00:11:44.230 align:start position:0%
over here obviously zero right two empty
strings<00:11:43.920><c> take</c>

00:11:44.230 --> 00:11:44.240 align:start position:0%
strings take
 

00:11:44.240 --> 00:11:46.949 align:start position:0%
strings take
zero<00:11:44.640><c> operations</c><00:11:45.279><c> to</c><00:11:45.360><c> make</c><00:11:45.600><c> equal</c><00:11:46.320><c> what</c><00:11:46.560><c> about</c>

00:11:46.949 --> 00:11:46.959 align:start position:0%
zero operations to make equal what about
 

00:11:46.959 --> 00:11:47.350 align:start position:0%
zero operations to make equal what about
in

00:11:47.350 --> 00:11:47.360 align:start position:0%
in
 

00:11:47.360 --> 00:11:49.190 align:start position:0%
in
this<00:11:47.600><c> position</c><00:11:48.079><c> what</c><00:11:48.240><c> does</c><00:11:48.399><c> this</c><00:11:48.560><c> position</c>

00:11:49.190 --> 00:11:49.200 align:start position:0%
this position what does this position
 

00:11:49.200 --> 00:11:51.190 align:start position:0%
this position what does this position
tell<00:11:49.440><c> us</c><00:11:49.760><c> well</c><00:11:50.079><c> we</c><00:11:50.240><c> have</c><00:11:50.399><c> an</c><00:11:50.560><c> empty</c><00:11:50.880><c> string</c>

00:11:51.190 --> 00:11:51.200 align:start position:0%
tell us well we have an empty string
 

00:11:51.200 --> 00:11:52.389 align:start position:0%
tell us well we have an empty string
from<00:11:51.360><c> word</c><00:11:51.760><c> two</c>

00:11:52.389 --> 00:11:52.399 align:start position:0%
from word two
 

00:11:52.399 --> 00:11:55.030 align:start position:0%
from word two
but<00:11:52.639><c> over</c><00:11:52.880><c> here</c><00:11:53.200><c> we</c><00:11:53.360><c> have</c><00:11:53.680><c> the</c><00:11:53.839><c> entire</c><00:11:54.560><c> string</c>

00:11:55.030 --> 00:11:55.040 align:start position:0%
but over here we have the entire string
 

00:11:55.040 --> 00:11:56.069 align:start position:0%
but over here we have the entire string
from<00:11:55.279><c> word</c><00:11:55.600><c> one</c>

00:11:56.069 --> 00:11:56.079 align:start position:0%
from word one
 

00:11:56.079 --> 00:11:58.069 align:start position:0%
from word one
so<00:11:56.240><c> how</c><00:11:56.399><c> many</c><00:11:56.720><c> minimum</c><00:11:57.200><c> operations</c><00:11:57.839><c> would</c>

00:11:58.069 --> 00:11:58.079 align:start position:0%
so how many minimum operations would
 

00:11:58.079 --> 00:12:00.550 align:start position:0%
so how many minimum operations would
that<00:11:58.399><c> take</c><00:11:58.880><c> remember</c><00:11:59.360><c> we</c><00:11:59.519><c> went</c><00:11:59.839><c> over</c><00:12:00.160><c> that</c><00:12:00.480><c> at</c>

00:12:00.550 --> 00:12:00.560 align:start position:0%
that take remember we went over that at
 

00:12:00.560 --> 00:12:01.590 align:start position:0%
that take remember we went over that at
the<00:12:00.720><c> beginning</c>

00:12:01.590 --> 00:12:01.600 align:start position:0%
the beginning
 

00:12:01.600 --> 00:12:04.230 align:start position:0%
the beginning
and<00:12:02.000><c> it</c><00:12:02.079><c> would</c><00:12:02.320><c> just</c><00:12:02.560><c> be</c><00:12:03.040><c> the</c><00:12:03.440><c> length</c><00:12:03.839><c> of</c><00:12:04.000><c> the</c>

00:12:04.230 --> 00:12:04.240 align:start position:0%
and it would just be the length of the
 

00:12:04.240 --> 00:12:05.990 align:start position:0%
and it would just be the length of the
non-empty<00:12:04.800><c> string</c><00:12:05.120><c> so</c><00:12:05.279><c> here</c><00:12:05.440><c> we</c><00:12:05.600><c> can</c><00:12:05.680><c> see</c><00:12:05.839><c> the</c>

00:12:05.990 --> 00:12:06.000 align:start position:0%
non-empty string so here we can see the
 

00:12:06.000 --> 00:12:07.350 align:start position:0%
non-empty string so here we can see the
length<00:12:06.240><c> of</c><00:12:06.320><c> the</c><00:12:06.480><c> non-empty</c><00:12:06.959><c> string</c>

00:12:07.350 --> 00:12:07.360 align:start position:0%
length of the non-empty string
 

00:12:07.360 --> 00:12:10.069 align:start position:0%
length of the non-empty string
is<00:12:07.920><c> three</c><00:12:08.480><c> what</c><00:12:08.639><c> about</c><00:12:09.040><c> in</c><00:12:09.360><c> this</c><00:12:09.600><c> position</c>

00:12:10.069 --> 00:12:10.079 align:start position:0%
is three what about in this position
 

00:12:10.079 --> 00:12:11.030 align:start position:0%
is three what about in this position
similarly

00:12:11.030 --> 00:12:11.040 align:start position:0%
similarly
 

00:12:11.040 --> 00:12:14.069 align:start position:0%
similarly
word<00:12:11.360><c> two</c><00:12:11.600><c> is</c><00:12:11.760><c> empty</c><00:12:12.320><c> word</c><00:12:12.720><c> one</c><00:12:13.200><c> has</c><00:12:13.440><c> a</c><00:12:13.680><c> length</c>

00:12:14.069 --> 00:12:14.079 align:start position:0%
word two is empty word one has a length
 

00:12:14.079 --> 00:12:14.310 align:start position:0%
word two is empty word one has a length
of

00:12:14.310 --> 00:12:14.320 align:start position:0%
of
 

00:12:14.320 --> 00:12:16.949 align:start position:0%
of
two<00:12:14.639><c> so</c><00:12:14.880><c> we'd</c><00:12:15.120><c> put</c><00:12:15.600><c> two</c><00:12:16.160><c> and</c><00:12:16.480><c> basically</c>

00:12:16.949 --> 00:12:16.959 align:start position:0%
two so we'd put two and basically
 

00:12:16.959 --> 00:12:17.750 align:start position:0%
two so we'd put two and basically
continuing

00:12:17.750 --> 00:12:17.760 align:start position:0%
continuing
 

00:12:17.760 --> 00:12:19.990 align:start position:0%
continuing
to<00:12:18.000><c> one</c><00:12:18.320><c> and</c><00:12:18.399><c> then</c><00:12:18.639><c> down</c><00:12:18.959><c> to</c><00:12:19.120><c> zero</c><00:12:19.519><c> right</c><00:12:19.760><c> so</c>

00:12:19.990 --> 00:12:20.000 align:start position:0%
to one and then down to zero right so
 

00:12:20.000 --> 00:12:21.670 align:start position:0%
to one and then down to zero right so
similarly<00:12:20.720><c> over</c><00:12:21.120><c> here</c>

00:12:21.670 --> 00:12:21.680 align:start position:0%
similarly over here
 

00:12:21.680 --> 00:12:23.750 align:start position:0%
similarly over here
we<00:12:21.839><c> have</c><00:12:22.000><c> an</c><00:12:22.160><c> empty</c><00:12:22.399><c> string</c><00:12:22.720><c> from</c><00:12:22.880><c> word</c><00:12:23.200><c> one</c>

00:12:23.750 --> 00:12:23.760 align:start position:0%
we have an empty string from word one
 

00:12:23.760 --> 00:12:25.590 align:start position:0%
we have an empty string from word one
word<00:12:24.240><c> two</c><00:12:24.639><c> is</c><00:12:24.880><c> completely</c>

00:12:25.590 --> 00:12:25.600 align:start position:0%
word two is completely
 

00:12:25.600 --> 00:12:27.430 align:start position:0%
word two is completely
full<00:12:25.920><c> and</c><00:12:26.079><c> the</c><00:12:26.240><c> length</c><00:12:26.480><c> of</c><00:12:26.639><c> it</c><00:12:26.800><c> is</c><00:12:26.959><c> three</c><00:12:27.279><c> so</c>

00:12:27.430 --> 00:12:27.440 align:start position:0%
full and the length of it is three so
 

00:12:27.440 --> 00:12:29.030 align:start position:0%
full and the length of it is three so
we're<00:12:27.519><c> going</c><00:12:27.600><c> to</c><00:12:27.680><c> put</c><00:12:28.000><c> three</c><00:12:28.399><c> here</c>

00:12:29.030 --> 00:12:29.040 align:start position:0%
we're going to put three here
 

00:12:29.040 --> 00:12:31.030 align:start position:0%
we're going to put three here
and<00:12:29.120><c> then</c><00:12:29.519><c> continue</c><00:12:30.079><c> just</c><00:12:30.240><c> counting</c><00:12:30.639><c> down</c>

00:12:31.030 --> 00:12:31.040 align:start position:0%
and then continue just counting down
 

00:12:31.040 --> 00:12:32.629 align:start position:0%
and then continue just counting down
three<00:12:31.839><c> two</c>

00:12:32.629 --> 00:12:32.639 align:start position:0%
three two
 

00:12:32.639 --> 00:12:35.350 align:start position:0%
three two
one<00:12:33.120><c> right</c><00:12:33.760><c> so</c><00:12:34.000><c> in</c><00:12:34.240><c> what</c><00:12:34.560><c> order</c><00:12:35.040><c> are</c><00:12:35.120><c> we</c><00:12:35.279><c> going</c>

00:12:35.350 --> 00:12:35.360 align:start position:0%
one right so in what order are we going
 

00:12:35.360 --> 00:12:36.150 align:start position:0%
one right so in what order are we going
to<00:12:35.519><c> solve</c><00:12:35.839><c> this</c>

00:12:36.150 --> 00:12:36.160 align:start position:0%
to solve this
 

00:12:36.160 --> 00:12:38.310 align:start position:0%
to solve this
if<00:12:36.240><c> we</c><00:12:36.480><c> start</c><00:12:36.880><c> at</c><00:12:36.959><c> the</c><00:12:37.120><c> beginning</c><00:12:37.920><c> then</c><00:12:38.160><c> we're</c>

00:12:38.310 --> 00:12:38.320 align:start position:0%
if we start at the beginning then we're
 

00:12:38.320 --> 00:12:39.670 align:start position:0%
if we start at the beginning then we're
going<00:12:38.480><c> to</c><00:12:38.639><c> notice</c><00:12:39.040><c> something</c>

00:12:39.670 --> 00:12:39.680 align:start position:0%
going to notice something
 

00:12:39.680 --> 00:12:41.990 align:start position:0%
going to notice something
notice<00:12:40.160><c> okay</c><00:12:40.639><c> well</c><00:12:41.040><c> we're</c><00:12:41.200><c> comparing</c><00:12:41.760><c> these</c>

00:12:41.990 --> 00:12:42.000 align:start position:0%
notice okay well we're comparing these
 

00:12:42.000 --> 00:12:43.509 align:start position:0%
notice okay well we're comparing these
two<00:12:42.240><c> characters</c><00:12:42.720><c> in</c><00:12:42.800><c> this</c><00:12:42.959><c> position</c><00:12:43.360><c> right</c>

00:12:43.509 --> 00:12:43.519 align:start position:0%
two characters in this position right
 

00:12:43.519 --> 00:12:44.150 align:start position:0%
two characters in this position right
they're<00:12:43.760><c> both</c>

00:12:44.150 --> 00:12:44.160 align:start position:0%
they're both
 

00:12:44.160 --> 00:12:45.829 align:start position:0%
they're both
equal<00:12:44.560><c> right</c><00:12:44.880><c> so</c><00:12:45.279><c> then</c><00:12:45.440><c> we're</c><00:12:45.600><c> going</c><00:12:45.680><c> to</c>

00:12:45.829 --> 00:12:45.839 align:start position:0%
equal right so then we're going to
 

00:12:45.839 --> 00:12:47.509 align:start position:0%
equal right so then we're going to
execute<00:12:46.320><c> this</c><00:12:46.560><c> statement</c><00:12:46.959><c> right</c><00:12:47.120><c> so</c><00:12:47.279><c> we're</c>

00:12:47.509 --> 00:12:47.519 align:start position:0%
execute this statement right so we're
 

00:12:47.519 --> 00:12:47.990 align:start position:0%
execute this statement right so we're
going<00:12:47.600><c> to</c><00:12:47.680><c> take</c>

00:12:47.990 --> 00:12:48.000 align:start position:0%
going to take
 

00:12:48.000 --> 00:12:50.470 align:start position:0%
going to take
i<00:12:48.320><c> plus</c><00:12:48.639><c> 1</c><00:12:48.880><c> and</c><00:12:49.040><c> j</c><00:12:49.360><c> plus</c><00:12:49.600><c> 1.</c><00:12:49.839><c> what</c><00:12:50.079><c> does</c><00:12:50.240><c> that</c>

00:12:50.470 --> 00:12:50.480 align:start position:0%
i plus 1 and j plus 1. what does that
 

00:12:50.480 --> 00:12:52.629 align:start position:0%
i plus 1 and j plus 1. what does that
tell<00:12:50.639><c> us</c><00:12:50.800><c> that</c><00:12:50.959><c> tells</c><00:12:51.200><c> us</c><00:12:51.279><c> that</c><00:12:51.600><c> the</c><00:12:51.920><c> result</c><00:12:52.399><c> of</c>

00:12:52.629 --> 00:12:52.639 align:start position:0%
tell us that tells us that the result of
 

00:12:52.639 --> 00:12:53.829 align:start position:0%
tell us that tells us that the result of
this<00:12:52.959><c> value</c>

00:12:53.829 --> 00:12:53.839 align:start position:0%
this value
 

00:12:53.839 --> 00:12:56.949 align:start position:0%
this value
depends<00:12:54.880><c> on</c><00:12:55.519><c> this</c><00:12:55.839><c> value</c><00:12:56.560><c> right</c>

00:12:56.949 --> 00:12:56.959 align:start position:0%
depends on this value right
 

00:12:56.959 --> 00:12:58.949 align:start position:0%
depends on this value right
so<00:12:57.279><c> okay</c><00:12:57.680><c> then</c><00:12:58.000><c> let's</c><00:12:58.240><c> take</c><00:12:58.399><c> a</c><00:12:58.480><c> look</c><00:12:58.639><c> at</c><00:12:58.720><c> this</c>

00:12:58.949 --> 00:12:58.959 align:start position:0%
so okay then let's take a look at this
 

00:12:58.959 --> 00:13:01.030 align:start position:0%
so okay then let's take a look at this
value<00:12:59.680><c> well</c><00:12:59.920><c> in</c><00:13:00.079><c> this</c><00:13:00.320><c> case</c><00:13:00.639><c> they're</c>

00:13:01.030 --> 00:13:01.040 align:start position:0%
value well in this case they're
 

00:13:01.040 --> 00:13:04.470 align:start position:0%
value well in this case they're
not<00:13:01.440><c> equal</c><00:13:02.079><c> b</c><00:13:02.480><c> and</c><00:13:02.720><c> c</c><00:13:03.200><c> are</c><00:13:03.519><c> not</c><00:13:03.920><c> equal</c>

00:13:04.470 --> 00:13:04.480 align:start position:0%
not equal b and c are not equal
 

00:13:04.480 --> 00:13:06.069 align:start position:0%
not equal b and c are not equal
so<00:13:04.720><c> then</c><00:13:04.880><c> what</c><00:13:05.040><c> are</c><00:13:05.120><c> we</c><00:13:05.279><c> going</c><00:13:05.360><c> to</c><00:13:05.440><c> do</c><00:13:05.600><c> remember</c>

00:13:06.069 --> 00:13:06.079 align:start position:0%
so then what are we going to do remember
 

00:13:06.079 --> 00:13:07.990 align:start position:0%
so then what are we going to do remember
if<00:13:06.160><c> they're</c><00:13:06.399><c> not</c><00:13:06.720><c> equal</c><00:13:07.040><c> we</c><00:13:07.279><c> have</c><00:13:07.440><c> to</c><00:13:07.680><c> brute</c>

00:13:07.990 --> 00:13:08.000 align:start position:0%
if they're not equal we have to brute
 

00:13:08.000 --> 00:13:09.990 align:start position:0%
if they're not equal we have to brute
force<00:13:08.320><c> it</c><00:13:08.399><c> we</c><00:13:08.560><c> have</c><00:13:08.639><c> to</c><00:13:08.800><c> take</c><00:13:09.040><c> a</c><00:13:09.120><c> look</c><00:13:09.360><c> at</c><00:13:09.600><c> all</c>

00:13:09.990 --> 00:13:10.000 align:start position:0%
force it we have to take a look at all
 

00:13:10.000 --> 00:13:12.389 align:start position:0%
force it we have to take a look at all
three<00:13:10.399><c> operations</c><00:13:11.440><c> and</c><00:13:11.600><c> remember</c><00:13:12.079><c> i</c>

00:13:12.389 --> 00:13:12.399 align:start position:0%
three operations and remember i
 

00:13:12.399 --> 00:13:13.990 align:start position:0%
three operations and remember i
corresponds<00:13:13.040><c> to</c><00:13:13.200><c> word</c><00:13:13.440><c> one</c>

00:13:13.990 --> 00:13:14.000 align:start position:0%
corresponds to word one
 

00:13:14.000 --> 00:13:17.030 align:start position:0%
corresponds to word one
j<00:13:14.240><c> corresponds</c><00:13:14.800><c> to</c><00:13:14.880><c> or</c><00:13:15.120><c> two</c><00:13:15.680><c> so</c><00:13:16.160><c> in</c><00:13:16.240><c> the</c><00:13:16.480><c> insert</c>

00:13:17.030 --> 00:13:17.040 align:start position:0%
j corresponds to or two so in the insert
 

00:13:17.040 --> 00:13:19.509 align:start position:0%
j corresponds to or two so in the insert
operation<00:13:17.600><c> what</c><00:13:17.760><c> we're</c><00:13:17.920><c> going</c><00:13:18.000><c> to</c><00:13:18.160><c> do</c><00:13:18.720><c> is</c><00:13:19.120><c> look</c>

00:13:19.509 --> 00:13:19.519 align:start position:0%
operation what we're going to do is look
 

00:13:19.519 --> 00:13:20.949 align:start position:0%
operation what we're going to do is look
in<00:13:19.680><c> this</c><00:13:20.000><c> spot</c>

00:13:20.949 --> 00:13:20.959 align:start position:0%
in this spot
 

00:13:20.959 --> 00:13:22.629 align:start position:0%
in this spot
in<00:13:21.120><c> the</c><00:13:21.360><c> delete</c><00:13:21.839><c> operation</c><00:13:22.240><c> what</c><00:13:22.399><c> we're</c><00:13:22.560><c> going</c>

00:13:22.629 --> 00:13:22.639 align:start position:0%
in the delete operation what we're going
 

00:13:22.639 --> 00:13:25.190 align:start position:0%
in the delete operation what we're going
to<00:13:22.800><c> do</c><00:13:23.279><c> increment</c><00:13:23.760><c> i</c><00:13:24.000><c> by</c><00:13:24.240><c> 1</c><00:13:24.560><c> in</c><00:13:24.639><c> this</c><00:13:24.800><c> case</c><00:13:25.040><c> so</c>

00:13:25.190 --> 00:13:25.200 align:start position:0%
to do increment i by 1 in this case so
 

00:13:25.200 --> 00:13:26.710 align:start position:0%
to do increment i by 1 in this case so
we're<00:13:25.360><c> going</c><00:13:25.440><c> to</c><00:13:25.519><c> look</c><00:13:25.760><c> in</c><00:13:26.000><c> this</c><00:13:26.240><c> spot</c>

00:13:26.710 --> 00:13:26.720 align:start position:0%
we're going to look in this spot
 

00:13:26.720 --> 00:13:28.550 align:start position:0%
we're going to look in this spot
and<00:13:26.880><c> for</c><00:13:27.120><c> the</c><00:13:27.279><c> replace</c><00:13:27.920><c> operation</c><00:13:28.399><c> we're</c>

00:13:28.550 --> 00:13:28.560 align:start position:0%
and for the replace operation we're
 

00:13:28.560 --> 00:13:30.150 align:start position:0%
and for the replace operation we're
incrementing<00:13:29.120><c> both</c><00:13:29.360><c> of</c><00:13:29.519><c> them</c><00:13:29.600><c> so</c><00:13:29.760><c> then</c><00:13:30.000><c> we're</c>

00:13:30.150 --> 00:13:30.160 align:start position:0%
incrementing both of them so then we're
 

00:13:30.160 --> 00:13:31.350 align:start position:0%
incrementing both of them so then we're
going<00:13:30.399><c> diagonal</c>

00:13:31.350 --> 00:13:31.360 align:start position:0%
going diagonal
 

00:13:31.360 --> 00:13:33.829 align:start position:0%
going diagonal
again<00:13:32.160><c> from</c><00:13:32.480><c> this</c><00:13:32.880><c> since</c><00:13:33.120><c> we</c><00:13:33.279><c> have</c><00:13:33.519><c> three</c>

00:13:33.829 --> 00:13:33.839 align:start position:0%
again from this since we have three
 

00:13:33.839 --> 00:13:35.190 align:start position:0%
again from this since we have three
values<00:13:34.320><c> that</c><00:13:34.399><c> we're</c><00:13:34.560><c> looking</c><00:13:34.800><c> at</c><00:13:34.880><c> what</c><00:13:35.040><c> we're</c>

00:13:35.190 --> 00:13:35.200 align:start position:0%
values that we're looking at what we're
 

00:13:35.200 --> 00:13:36.949 align:start position:0%
values that we're looking at what we're
going<00:13:35.360><c> to</c><00:13:35.519><c> do</c><00:13:35.760><c> is</c><00:13:35.920><c> we</c><00:13:36.079><c> want</c><00:13:36.240><c> to</c><00:13:36.320><c> know</c><00:13:36.560><c> which</c><00:13:36.800><c> one</c>

00:13:36.949 --> 00:13:36.959 align:start position:0%
going to do is we want to know which one
 

00:13:36.959 --> 00:13:37.829 align:start position:0%
going to do is we want to know which one
of<00:13:37.040><c> these</c><00:13:37.360><c> three</c>

00:13:37.829 --> 00:13:37.839 align:start position:0%
of these three
 

00:13:37.839 --> 00:13:39.910 align:start position:0%
of these three
leads<00:13:38.160><c> us</c><00:13:38.399><c> to</c><00:13:38.560><c> the</c><00:13:38.800><c> minimum</c><00:13:39.360><c> number</c><00:13:39.760><c> of</c>

00:13:39.910 --> 00:13:39.920 align:start position:0%
leads us to the minimum number of
 

00:13:39.920 --> 00:13:42.389 align:start position:0%
leads us to the minimum number of
operations<00:13:40.800><c> right</c><00:13:40.959><c> so</c><00:13:41.199><c> what</c><00:13:41.440><c> in</c><00:13:41.680><c> reality</c>

00:13:42.389 --> 00:13:42.399 align:start position:0%
operations right so what in reality
 

00:13:42.399 --> 00:13:44.150 align:start position:0%
operations right so what in reality
what<00:13:42.560><c> we're</c><00:13:42.720><c> going</c><00:13:42.800><c> to</c><00:13:42.959><c> do</c><00:13:43.199><c> is</c><00:13:43.360><c> since</c><00:13:43.600><c> we're</c>

00:13:44.150 --> 00:13:44.160 align:start position:0%
what we're going to do is since we're
 

00:13:44.160 --> 00:13:45.430 align:start position:0%
what we're going to do is since we're
noticing<00:13:44.959><c> that</c>

00:13:45.430 --> 00:13:45.440 align:start position:0%
noticing that
 

00:13:45.440 --> 00:13:47.990 align:start position:0%
noticing that
it<00:13:45.600><c> depends</c><00:13:46.240><c> on</c><00:13:46.399><c> the</c><00:13:46.639><c> lower</c><00:13:46.959><c> values</c><00:13:47.519><c> let's</c><00:13:47.760><c> do</c>

00:13:47.990 --> 00:13:48.000 align:start position:0%
it depends on the lower values let's do
 

00:13:48.000 --> 00:13:48.550 align:start position:0%
it depends on the lower values let's do
this

00:13:48.550 --> 00:13:48.560 align:start position:0%
this
 

00:13:48.560 --> 00:13:50.870 align:start position:0%
this
bottom<00:13:49.199><c> up</c><00:13:49.600><c> this</c><00:13:49.760><c> is</c><00:13:49.920><c> called</c><00:13:50.240><c> bottom</c><00:13:50.720><c> up</c>

00:13:50.870 --> 00:13:50.880 align:start position:0%
bottom up this is called bottom up
 

00:13:50.880 --> 00:13:52.389 align:start position:0%
bottom up this is called bottom up
dynamic<00:13:51.279><c> programming</c><00:13:51.760><c> we're</c><00:13:51.920><c> going</c><00:13:52.000><c> to</c><00:13:52.079><c> start</c>

00:13:52.389 --> 00:13:52.399 align:start position:0%
dynamic programming we're going to start
 

00:13:52.399 --> 00:13:53.269 align:start position:0%
dynamic programming we're going to start
at<00:13:52.480><c> the</c><00:13:52.720><c> bottom</c>

00:13:53.269 --> 00:13:53.279 align:start position:0%
at the bottom
 

00:13:53.279 --> 00:13:55.750 align:start position:0%
at the bottom
compute<00:13:53.760><c> this</c><00:13:54.000><c> value</c><00:13:54.560><c> compute</c><00:13:55.040><c> this</c><00:13:55.279><c> value</c>

00:13:55.750 --> 00:13:55.760 align:start position:0%
compute this value compute this value
 

00:13:55.760 --> 00:13:57.110 align:start position:0%
compute this value compute this value
compute<00:13:56.240><c> this</c><00:13:56.480><c> value</c>

00:13:57.110 --> 00:13:57.120 align:start position:0%
compute this value
 

00:13:57.120 --> 00:13:59.509 align:start position:0%
compute this value
and<00:13:57.199><c> then</c><00:13:57.519><c> so</c><00:13:57.760><c> on</c><00:13:58.000><c> and</c><00:13:58.160><c> so</c><00:13:58.399><c> on</c><00:13:58.880><c> and</c><00:13:58.959><c> then</c><00:13:59.279><c> work</c>

00:13:59.509 --> 00:13:59.519 align:start position:0%
and then so on and so on and then work
 

00:13:59.519 --> 00:14:01.509 align:start position:0%
and then so on and so on and then work
our<00:13:59.680><c> way</c><00:13:59.920><c> backwards</c><00:14:00.480><c> until</c><00:14:00.720><c> we</c><00:14:00.959><c> finally</c>

00:14:01.509 --> 00:14:01.519 align:start position:0%
our way backwards until we finally
 

00:14:01.519 --> 00:14:04.230 align:start position:0%
our way backwards until we finally
get<00:14:01.680><c> to</c><00:14:01.839><c> the</c><00:14:02.000><c> result</c><00:14:02.639><c> and</c><00:14:02.880><c> notice</c><00:14:03.600><c> if</c><00:14:03.760><c> we</c><00:14:04.000><c> do</c>

00:14:04.230 --> 00:14:04.240 align:start position:0%
get to the result and notice if we do
 

00:14:04.240 --> 00:14:04.710 align:start position:0%
get to the result and notice if we do
start

00:14:04.710 --> 00:14:04.720 align:start position:0%
start
 

00:14:04.720 --> 00:14:07.350 align:start position:0%
start
in<00:14:04.880><c> this</c><00:14:05.120><c> position</c><00:14:06.079><c> we</c><00:14:06.320><c> already</c><00:14:06.800><c> have</c><00:14:07.199><c> the</c>

00:14:07.350 --> 00:14:07.360 align:start position:0%
in this position we already have the
 

00:14:07.360 --> 00:14:09.269 align:start position:0%
in this position we already have the
values<00:14:07.760><c> that</c><00:14:07.920><c> it</c><00:14:08.079><c> could</c><00:14:08.240><c> possibly</c><00:14:08.720><c> depend</c><00:14:09.120><c> on</c>

00:14:09.269 --> 00:14:09.279 align:start position:0%
values that it could possibly depend on
 

00:14:09.279 --> 00:14:10.710 align:start position:0%
values that it could possibly depend on
because<00:14:09.440><c> those</c><00:14:09.680><c> are</c><00:14:09.760><c> our</c><00:14:09.920><c> base</c><00:14:10.160><c> cases</c><00:14:10.480><c> over</c>

00:14:10.710 --> 00:14:10.720 align:start position:0%
because those are our base cases over
 

00:14:10.720 --> 00:14:11.269 align:start position:0%
because those are our base cases over
here

00:14:11.269 --> 00:14:11.279 align:start position:0%
here
 

00:14:11.279 --> 00:14:14.389 align:start position:0%
here
diagonally<00:14:12.240><c> and</c><00:14:12.639><c> below</c><00:14:13.199><c> right</c><00:14:13.440><c> and</c><00:14:13.600><c> so</c><00:14:13.839><c> notice</c>

00:14:14.389 --> 00:14:14.399 align:start position:0%
diagonally and below right and so notice
 

00:14:14.399 --> 00:14:16.629 align:start position:0%
diagonally and below right and so notice
d<00:14:14.959><c> and</c><00:14:15.120><c> d</c><00:14:15.440><c> are</c><00:14:15.680><c> equal</c><00:14:16.000><c> so</c><00:14:16.160><c> what</c><00:14:16.320><c> we're</c><00:14:16.480><c> going</c><00:14:16.560><c> to</c>

00:14:16.629 --> 00:14:16.639 align:start position:0%
d and d are equal so what we're going to
 

00:14:16.639 --> 00:14:18.069 align:start position:0%
d and d are equal so what we're going to
do<00:14:16.880><c> is</c><00:14:17.040><c> from</c><00:14:17.279><c> here</c><00:14:17.519><c> we're</c><00:14:17.680><c> going</c><00:14:17.760><c> to</c><00:14:17.839><c> look</c><00:14:18.000><c> at</c>

00:14:18.069 --> 00:14:18.079 align:start position:0%
do is from here we're going to look at
 

00:14:18.079 --> 00:14:19.350 align:start position:0%
do is from here we're going to look at
the<00:14:18.240><c> diagonal</c><00:14:18.720><c> value</c>

00:14:19.350 --> 00:14:19.360 align:start position:0%
the diagonal value
 

00:14:19.360 --> 00:14:20.870 align:start position:0%
the diagonal value
right<00:14:19.600><c> because</c><00:14:19.839><c> this</c><00:14:20.240><c> this</c><00:14:20.480><c> statement</c><00:14:20.800><c> is</c>

00:14:20.870 --> 00:14:20.880 align:start position:0%
right because this this statement is
 

00:14:20.880 --> 00:14:22.150 align:start position:0%
right because this this statement is
going<00:14:20.959><c> to</c><00:14:21.120><c> execute</c><00:14:21.440><c> we're</c><00:14:21.600><c> going</c><00:14:21.680><c> to</c><00:14:21.760><c> see</c><00:14:21.920><c> it's</c>

00:14:22.150 --> 00:14:22.160 align:start position:0%
going to execute we're going to see it's
 

00:14:22.160 --> 00:14:22.710 align:start position:0%
going to execute we're going to see it's
zero

00:14:22.710 --> 00:14:22.720 align:start position:0%
zero
 

00:14:22.720 --> 00:14:24.230 align:start position:0%
zero
so<00:14:22.959><c> that's</c><00:14:23.120><c> what</c><00:14:23.279><c> we're</c><00:14:23.440><c> going</c><00:14:23.519><c> to</c><00:14:23.600><c> put</c><00:14:23.920><c> over</c>

00:14:24.230 --> 00:14:24.240 align:start position:0%
so that's what we're going to put over
 

00:14:24.240 --> 00:14:26.470 align:start position:0%
so that's what we're going to put over
here<00:14:25.040><c> and</c><00:14:25.120><c> then</c><00:14:25.279><c> eventually</c><00:14:25.760><c> we</c><00:14:25.920><c> would</c><00:14:26.160><c> end</c>

00:14:26.470 --> 00:14:26.480 align:start position:0%
here and then eventually we would end
 

00:14:26.480 --> 00:14:28.069 align:start position:0%
here and then eventually we would end
we<00:14:26.560><c> would</c><00:14:26.720><c> compute</c><00:14:27.120><c> these</c><00:14:27.760><c> and</c><00:14:27.920><c> then</c>

00:14:28.069 --> 00:14:28.079 align:start position:0%
we would compute these and then
 

00:14:28.079 --> 00:14:30.470 align:start position:0%
we would compute these and then
eventually<00:14:28.480><c> we</c><00:14:28.639><c> would</c><00:14:28.800><c> get</c><00:14:29.440><c> up</c><00:14:29.839><c> over</c>

00:14:30.470 --> 00:14:30.480 align:start position:0%
eventually we would get up over
 

00:14:30.480 --> 00:14:32.629 align:start position:0%
eventually we would get up over
here<00:14:31.199><c> right</c><00:14:31.440><c> and</c><00:14:31.519><c> we'd</c><00:14:31.760><c> compute</c><00:14:32.079><c> the</c><00:14:32.240><c> value</c>

00:14:32.629 --> 00:14:32.639 align:start position:0%
here right and we'd compute the value
 

00:14:32.639 --> 00:14:33.910 align:start position:0%
here right and we'd compute the value
from<00:14:33.199><c> that</c>

00:14:33.910 --> 00:14:33.920 align:start position:0%
from that
 

00:14:33.920 --> 00:14:35.590 align:start position:0%
from that
and<00:14:34.079><c> then</c><00:14:34.240><c> eventually</c><00:14:34.720><c> we'd</c><00:14:34.880><c> get</c><00:14:35.120><c> all</c><00:14:35.279><c> the</c><00:14:35.360><c> way</c>

00:14:35.590 --> 00:14:35.600 align:start position:0%
and then eventually we'd get all the way
 

00:14:35.600 --> 00:14:37.829 align:start position:0%
and then eventually we'd get all the way
up<00:14:35.760><c> here</c><00:14:36.160><c> and</c><00:14:36.240><c> we</c><00:14:36.399><c> would</c><00:14:36.560><c> compute</c><00:14:36.959><c> the</c><00:14:37.120><c> value</c>

00:14:37.829 --> 00:14:37.839 align:start position:0%
up here and we would compute the value
 

00:14:37.839 --> 00:14:40.069 align:start position:0%
up here and we would compute the value
from<00:14:38.160><c> here</c><00:14:38.720><c> you</c><00:14:38.880><c> would</c><00:14:39.040><c> see</c><00:14:39.360><c> that</c><00:14:39.600><c> we'd</c><00:14:39.839><c> end</c><00:14:40.000><c> up</c>

00:14:40.069 --> 00:14:40.079 align:start position:0%
from here you would see that we'd end up
 

00:14:40.079 --> 00:14:41.670 align:start position:0%
from here you would see that we'd end up
putting<00:14:40.320><c> a</c><00:14:40.480><c> 1</c><00:14:40.720><c> over</c><00:14:40.959><c> here</c><00:14:41.120><c> we'd</c><00:14:41.360><c> end</c><00:14:41.519><c> up</c>

00:14:41.670 --> 00:14:41.680 align:start position:0%
putting a 1 over here we'd end up
 

00:14:41.680 --> 00:14:42.550 align:start position:0%
putting a 1 over here we'd end up
putting<00:14:42.000><c> a</c><00:14:42.160><c> 1</c>

00:14:42.550 --> 00:14:42.560 align:start position:0%
putting a 1
 

00:14:42.560 --> 00:14:44.790 align:start position:0%
putting a 1
over<00:14:42.880><c> here</c><00:14:43.519><c> so</c><00:14:43.680><c> what</c><00:14:43.839><c> would</c><00:14:44.079><c> the</c><00:14:44.160><c> value</c><00:14:44.560><c> over</c>

00:14:44.790 --> 00:14:44.800 align:start position:0%
over here so what would the value over
 

00:14:44.800 --> 00:14:46.150 align:start position:0%
over here so what would the value over
here<00:14:45.040><c> end</c><00:14:45.199><c> up</c><00:14:45.279><c> being</c><00:14:45.440><c> well</c><00:14:45.600><c> let's</c><00:14:45.839><c> look</c><00:14:45.920><c> at</c><00:14:46.079><c> the</c>

00:14:46.150 --> 00:14:46.160 align:start position:0%
here end up being well let's look at the
 

00:14:46.160 --> 00:14:47.110 align:start position:0%
here end up being well let's look at the
two<00:14:46.320><c> characters</c><00:14:46.800><c> d</c>

00:14:47.110 --> 00:14:47.120 align:start position:0%
two characters d
 

00:14:47.120 --> 00:14:48.710 align:start position:0%
two characters d
and<00:14:47.279><c> c</c><00:14:47.519><c> they're</c><00:14:47.760><c> not</c><00:14:48.079><c> equal</c><00:14:48.320><c> so</c><00:14:48.480><c> what</c><00:14:48.560><c> we're</c>

00:14:48.710 --> 00:14:48.720 align:start position:0%
and c they're not equal so what we're
 

00:14:48.720 --> 00:14:50.150 align:start position:0%
and c they're not equal so what we're
going<00:14:48.800><c> to</c><00:14:48.880><c> do</c><00:14:49.040><c> is</c><00:14:49.199><c> we're</c><00:14:49.360><c> going</c><00:14:49.440><c> to</c><00:14:49.519><c> look</c><00:14:49.839><c> down</c>

00:14:50.150 --> 00:14:50.160 align:start position:0%
going to do is we're going to look down
 

00:14:50.160 --> 00:14:50.949 align:start position:0%
going to do is we're going to look down
we're<00:14:50.320><c> going</c><00:14:50.399><c> to</c><00:14:50.480><c> look</c>

00:14:50.949 --> 00:14:50.959 align:start position:0%
we're going to look
 

00:14:50.959 --> 00:14:52.389 align:start position:0%
we're going to look
diagonal<00:14:51.519><c> and</c><00:14:51.680><c> we're</c><00:14:51.839><c> going</c><00:14:51.920><c> to</c><00:14:52.000><c> look</c><00:14:52.160><c> to</c><00:14:52.240><c> the</c>

00:14:52.389 --> 00:14:52.399 align:start position:0%
diagonal and we're going to look to the
 

00:14:52.399 --> 00:14:53.910 align:start position:0%
diagonal and we're going to look to the
right<00:14:52.639><c> which</c><00:14:52.800><c> one</c><00:14:52.959><c> of</c><00:14:53.040><c> those</c><00:14:53.279><c> values</c><00:14:53.760><c> is</c>

00:14:53.910 --> 00:14:53.920 align:start position:0%
right which one of those values is
 

00:14:53.920 --> 00:14:54.629 align:start position:0%
right which one of those values is
minimum

00:14:54.629 --> 00:14:54.639 align:start position:0%
minimum
 

00:14:54.639 --> 00:14:56.710 align:start position:0%
minimum
it's<00:14:54.800><c> over</c><00:14:55.040><c> here</c><00:14:55.440><c> so</c><00:14:55.600><c> that's</c><00:14:55.839><c> 0</c><00:14:56.320><c> but</c><00:14:56.480><c> we</c><00:14:56.560><c> do</c>

00:14:56.710 --> 00:14:56.720 align:start position:0%
it's over here so that's 0 but we do
 

00:14:56.720 --> 00:14:58.069 align:start position:0%
it's over here so that's 0 but we do
have<00:14:56.880><c> to</c><00:14:57.040><c> add</c><00:14:57.360><c> 1</c><00:14:57.680><c> because</c>

00:14:58.069 --> 00:14:58.079 align:start position:0%
have to add 1 because
 

00:14:58.079 --> 00:14:59.829 align:start position:0%
have to add 1 because
in<00:14:58.240><c> this</c><00:14:58.399><c> case</c><00:14:58.639><c> we</c><00:14:58.720><c> do</c><00:14:58.880><c> need</c><00:14:59.040><c> to</c><00:14:59.120><c> do</c><00:14:59.279><c> a</c><00:14:59.440><c> single</c>

00:14:59.829 --> 00:14:59.839 align:start position:0%
in this case we do need to do a single
 

00:14:59.839 --> 00:15:02.230 align:start position:0%
in this case we do need to do a single
operation<00:15:00.959><c> so</c><00:15:01.120><c> we</c><00:15:01.279><c> add</c><00:15:01.600><c> 1</c>

00:15:02.230 --> 00:15:02.240 align:start position:0%
operation so we add 1
 

00:15:02.240 --> 00:15:04.389 align:start position:0%
operation so we add 1
and<00:15:02.560><c> similarly</c><00:15:03.279><c> is</c><00:15:03.440><c> what</c><00:15:03.600><c> we</c><00:15:03.680><c> would</c><00:15:03.920><c> do</c><00:15:04.160><c> for</c>

00:15:04.389 --> 00:15:04.399 align:start position:0%
and similarly is what we would do for
 

00:15:04.399 --> 00:15:05.509 align:start position:0%
and similarly is what we would do for
every<00:15:04.639><c> single</c><00:15:04.959><c> position</c>

00:15:05.509 --> 00:15:05.519 align:start position:0%
every single position
 

00:15:05.519 --> 00:15:07.189 align:start position:0%
every single position
you<00:15:05.600><c> know</c><00:15:05.839><c> we'd</c><00:15:06.000><c> compare</c><00:15:06.320><c> the</c><00:15:06.480><c> characters</c><00:15:07.120><c> and</c>

00:15:07.189 --> 00:15:07.199 align:start position:0%
you know we'd compare the characters and
 

00:15:07.199 --> 00:15:09.269 align:start position:0%
you know we'd compare the characters and
then<00:15:07.360><c> we'd</c><00:15:07.680><c> execute</c><00:15:08.240><c> this</c><00:15:08.399><c> statement</c><00:15:08.800><c> or</c><00:15:09.040><c> we'd</c>

00:15:09.269 --> 00:15:09.279 align:start position:0%
then we'd execute this statement or we'd
 

00:15:09.279 --> 00:15:09.829 align:start position:0%
then we'd execute this statement or we'd
execute

00:15:09.829 --> 00:15:09.839 align:start position:0%
execute
 

00:15:09.839 --> 00:15:11.269 align:start position:0%
execute
this<00:15:10.079><c> statement</c><00:15:10.399><c> so</c><00:15:10.639><c> i'm</c><00:15:10.720><c> not</c><00:15:10.880><c> going</c><00:15:10.959><c> to</c><00:15:11.040><c> run</c>

00:15:11.269 --> 00:15:11.279 align:start position:0%
this statement so i'm not going to run
 

00:15:11.279 --> 00:15:12.949 align:start position:0%
this statement so i'm not going to run
through<00:15:11.440><c> that</c><00:15:11.839><c> but</c><00:15:12.000><c> i</c><00:15:12.079><c> think</c><00:15:12.320><c> this</c><00:15:12.560><c> is</c><00:15:12.639><c> simple</c>

00:15:12.949 --> 00:15:12.959 align:start position:0%
through that but i think this is simple
 

00:15:12.959 --> 00:15:14.310 align:start position:0%
through that but i think this is simple
enough<00:15:13.199><c> that</c><00:15:13.360><c> if</c><00:15:13.440><c> you</c><00:15:13.519><c> want</c><00:15:13.680><c> to</c><00:15:13.920><c> you</c><00:15:14.000><c> can</c><00:15:14.160><c> get</c><00:15:14.240><c> a</c>

00:15:14.310 --> 00:15:14.320 align:start position:0%
enough that if you want to you can get a
 

00:15:14.320 --> 00:15:15.430 align:start position:0%
enough that if you want to you can get a
piece<00:15:14.560><c> of</c><00:15:14.639><c> paper</c><00:15:15.040><c> out</c>

00:15:15.430 --> 00:15:15.440 align:start position:0%
piece of paper out
 

00:15:15.440 --> 00:15:17.189 align:start position:0%
piece of paper out
and<00:15:15.519><c> then</c><00:15:15.680><c> try</c><00:15:16.000><c> it</c><00:15:16.079><c> for</c><00:15:16.240><c> yourself</c><00:15:16.880><c> and</c><00:15:16.959><c> you'll</c>

00:15:17.189 --> 00:15:17.199 align:start position:0%
and then try it for yourself and you'll
 

00:15:17.199 --> 00:15:19.030 align:start position:0%
and then try it for yourself and you'll
probably<00:15:17.519><c> come</c><00:15:17.680><c> to</c><00:15:17.839><c> the</c><00:15:18.000><c> same</c><00:15:18.240><c> conclusion</c>

00:15:19.030 --> 00:15:19.040 align:start position:0%
probably come to the same conclusion
 

00:15:19.040 --> 00:15:20.949 align:start position:0%
probably come to the same conclusion
so<00:15:19.279><c> that</c><00:15:19.519><c> being</c><00:15:19.760><c> said</c><00:15:20.160><c> let's</c><00:15:20.399><c> jump</c><00:15:20.639><c> into</c><00:15:20.800><c> the</c>

00:15:20.949 --> 00:15:20.959 align:start position:0%
so that being said let's jump into the
 

00:15:20.959 --> 00:15:22.310 align:start position:0%
so that being said let's jump into the
code<00:15:21.199><c> this</c><00:15:21.360><c> is</c><00:15:21.519><c> exactly</c><00:15:21.920><c> what</c><00:15:22.079><c> i'm</c><00:15:22.160><c> going</c><00:15:22.240><c> to</c>

00:15:22.310 --> 00:15:22.320 align:start position:0%
code this is exactly what i'm going to
 

00:15:22.320 --> 00:15:23.910 align:start position:0%
code this is exactly what i'm going to
do<00:15:22.560><c> with</c><00:15:22.720><c> the</c><00:15:22.800><c> code</c><00:15:23.120><c> i'm</c><00:15:23.199><c> going</c><00:15:23.279><c> to</c><00:15:23.360><c> have</c><00:15:23.440><c> a</c><00:15:23.600><c> two</c>

00:15:23.910 --> 00:15:23.920 align:start position:0%
do with the code i'm going to have a two
 

00:15:23.920 --> 00:15:24.710 align:start position:0%
do with the code i'm going to have a two
dimensional

00:15:24.710 --> 00:15:24.720 align:start position:0%
dimensional
 

00:15:24.720 --> 00:15:26.790 align:start position:0%
dimensional
array<00:15:25.360><c> and</c><00:15:25.519><c> i'm</c><00:15:25.600><c> going</c><00:15:25.680><c> to</c><00:15:25.839><c> execute</c><00:15:26.480><c> these</c>

00:15:26.790 --> 00:15:26.800 align:start position:0%
array and i'm going to execute these
 

00:15:26.800 --> 00:15:28.389 align:start position:0%
array and i'm going to execute these
exact<00:15:27.440><c> statements</c>

00:15:28.389 --> 00:15:28.399 align:start position:0%
exact statements
 

00:15:28.399 --> 00:15:30.629 align:start position:0%
exact statements
so<00:15:28.639><c> i'm</c><00:15:28.800><c> going</c><00:15:28.880><c> to</c><00:15:29.040><c> call</c><00:15:29.440><c> our</c><00:15:29.759><c> two-dimensional</c>

00:15:30.629 --> 00:15:30.639 align:start position:0%
so i'm going to call our two-dimensional
 

00:15:30.639 --> 00:15:32.230 align:start position:0%
so i'm going to call our two-dimensional
array<00:15:31.120><c> our</c><00:15:31.440><c> cache</c>

00:15:32.230 --> 00:15:32.240 align:start position:0%
array our cache
 

00:15:32.240 --> 00:15:34.069 align:start position:0%
array our cache
and<00:15:32.480><c> so</c><00:15:32.720><c> basically</c><00:15:33.120><c> i'm</c><00:15:33.199><c> going</c><00:15:33.279><c> to</c><00:15:33.440><c> initialize</c>

00:15:34.069 --> 00:15:34.079 align:start position:0%
and so basically i'm going to initialize
 

00:15:34.079 --> 00:15:35.749 align:start position:0%
and so basically i'm going to initialize
it<00:15:34.320><c> to</c>

00:15:35.749 --> 00:15:35.759 align:start position:0%
it to
 

00:15:35.759 --> 00:15:38.230 align:start position:0%
it to
initial<00:15:36.240><c> values</c><00:15:36.720><c> of</c><00:15:36.880><c> just</c><00:15:37.199><c> max</c><00:15:37.600><c> integer</c><00:15:38.000><c> or</c>

00:15:38.230 --> 00:15:38.240 align:start position:0%
initial values of just max integer or
 

00:15:38.240 --> 00:15:40.470 align:start position:0%
initial values of just max integer or
float<00:15:38.639><c> infinity</c><00:15:39.199><c> in</c><00:15:39.360><c> python</c>

00:15:40.470 --> 00:15:40.480 align:start position:0%
float infinity in python
 

00:15:40.480 --> 00:15:42.230 align:start position:0%
float infinity in python
and<00:15:40.639><c> you</c><00:15:40.800><c> can</c><00:15:40.959><c> probably</c><00:15:41.279><c> initialize</c><00:15:41.759><c> this</c><00:15:42.000><c> any</c>

00:15:42.230 --> 00:15:42.240 align:start position:0%
and you can probably initialize this any
 

00:15:42.240 --> 00:15:44.150 align:start position:0%
and you can probably initialize this any
way<00:15:42.399><c> that</c><00:15:42.560><c> you'd</c><00:15:42.880><c> like</c><00:15:43.199><c> in</c><00:15:43.360><c> your</c><00:15:43.600><c> own</c><00:15:43.839><c> language</c>

00:15:44.150 --> 00:15:44.160 align:start position:0%
way that you'd like in your own language
 

00:15:44.160 --> 00:15:45.189 align:start position:0%
way that you'd like in your own language
there's<00:15:44.399><c> probably</c>

00:15:45.189 --> 00:15:45.199 align:start position:0%
there's probably
 

00:15:45.199 --> 00:15:46.790 align:start position:0%
there's probably
a<00:15:45.360><c> different</c><00:15:45.680><c> ways</c><00:15:45.920><c> that</c><00:15:46.079><c> you'd</c><00:15:46.320><c> want</c><00:15:46.480><c> to</c><00:15:46.560><c> do</c>

00:15:46.790 --> 00:15:46.800 align:start position:0%
a different ways that you'd want to do
 

00:15:46.800 --> 00:15:48.230 align:start position:0%
a different ways that you'd want to do
that<00:15:47.279><c> but</c><00:15:47.440><c> i'm</c><00:15:47.680><c> going</c><00:15:47.759><c> to</c><00:15:47.839><c> use</c>

00:15:48.230 --> 00:15:48.240 align:start position:0%
that but i'm going to use
 

00:15:48.240 --> 00:15:50.069 align:start position:0%
that but i'm going to use
a<00:15:48.399><c> list</c><00:15:48.639><c> comprehension</c><00:15:49.279><c> so</c><00:15:49.519><c> basically</c><00:15:49.920><c> i'm</c>

00:15:50.069 --> 00:15:50.079 align:start position:0%
a list comprehension so basically i'm
 

00:15:50.079 --> 00:15:51.749 align:start position:0%
a list comprehension so basically i'm
creating<00:15:50.560><c> a</c><00:15:51.199><c> list</c>

00:15:51.749 --> 00:15:51.759 align:start position:0%
creating a list
 

00:15:51.759 --> 00:15:54.150 align:start position:0%
creating a list
fl<00:15:52.079><c> with</c><00:15:52.320><c> float</c><00:15:52.720><c> infinite</c><00:15:53.120><c> as</c><00:15:53.279><c> the</c><00:15:53.440><c> value</c><00:15:53.920><c> of</c>

00:15:54.150 --> 00:15:54.160 align:start position:0%
fl with float infinite as the value of
 

00:15:54.160 --> 00:15:54.870 align:start position:0%
fl with float infinite as the value of
length

00:15:54.870 --> 00:15:54.880 align:start position:0%
length
 

00:15:54.880 --> 00:15:57.990 align:start position:0%
length
word<00:15:55.199><c> two</c><00:15:55.920><c> plus</c><00:15:56.720><c> one</c><00:15:57.040><c> remember</c><00:15:57.519><c> because</c><00:15:57.680><c> we</c><00:15:57.839><c> do</c>

00:15:57.990 --> 00:15:58.000 align:start position:0%
word two plus one remember because we do
 

00:15:58.000 --> 00:15:58.949 align:start position:0%
word two plus one remember because we do
need<00:15:58.160><c> to</c><00:15:58.320><c> make</c>

00:15:58.949 --> 00:15:58.959 align:start position:0%
need to make
 

00:15:58.959 --> 00:16:01.030 align:start position:0%
need to make
our<00:15:59.600><c> two</c><00:15:59.759><c> dimensional</c><00:16:00.240><c> array</c><00:16:00.560><c> a</c><00:16:00.639><c> little</c><00:16:00.800><c> bit</c>

00:16:01.030 --> 00:16:01.040 align:start position:0%
our two dimensional array a little bit
 

00:16:01.040 --> 00:16:03.509 align:start position:0%
our two dimensional array a little bit
bigger<00:16:01.360><c> to</c><00:16:01.519><c> handle</c><00:16:01.920><c> those</c><00:16:02.240><c> base</c><00:16:02.560><c> cases</c>

00:16:03.509 --> 00:16:03.519 align:start position:0%
bigger to handle those base cases
 

00:16:03.519 --> 00:16:05.430 align:start position:0%
bigger to handle those base cases
for<00:16:03.680><c> this</c><00:16:04.160><c> list</c><00:16:04.560><c> i'm</c><00:16:04.720><c> gonna</c><00:16:04.880><c> have</c><00:16:05.199><c> one</c><00:16:05.360><c> of</c>

00:16:05.430 --> 00:16:05.440 align:start position:0%
for this list i'm gonna have one of
 

00:16:05.440 --> 00:16:07.030 align:start position:0%
for this list i'm gonna have one of
these<00:16:05.759><c> lists</c><00:16:06.160><c> basically</c><00:16:06.639><c> for</c><00:16:06.800><c> every</c>

00:16:07.030 --> 00:16:07.040 align:start position:0%
these lists basically for every
 

00:16:07.040 --> 00:16:07.670 align:start position:0%
these lists basically for every
character

00:16:07.670 --> 00:16:07.680 align:start position:0%
character
 

00:16:07.680 --> 00:16:10.870 align:start position:0%
character
in<00:16:08.320><c> the</c><00:16:08.480><c> range</c><00:16:09.040><c> of</c><00:16:09.519><c> the</c><00:16:09.759><c> length</c><00:16:10.320><c> of</c>

00:16:10.870 --> 00:16:10.880 align:start position:0%
in the range of the length of
 

00:16:10.880 --> 00:16:13.269 align:start position:0%
in the range of the length of
word<00:16:11.680><c> one</c><00:16:12.160><c> so</c><00:16:12.399><c> this</c><00:16:12.720><c> probably</c><00:16:13.040><c> looks</c>

00:16:13.269 --> 00:16:13.279 align:start position:0%
word one so this probably looks
 

00:16:13.279 --> 00:16:14.790 align:start position:0%
word one so this probably looks
confusing<00:16:13.759><c> if</c><00:16:13.839><c> you're</c><00:16:14.000><c> not</c><00:16:14.160><c> familiar</c><00:16:14.639><c> with</c>

00:16:14.790 --> 00:16:14.800 align:start position:0%
confusing if you're not familiar with
 

00:16:14.800 --> 00:16:16.629 align:start position:0%
confusing if you're not familiar with
python<00:16:15.120><c> but</c><00:16:15.279><c> basically</c><00:16:15.680><c> i'm</c><00:16:15.759><c> just</c><00:16:16.000><c> creating</c><00:16:16.480><c> a</c>

00:16:16.629 --> 00:16:16.639 align:start position:0%
python but basically i'm just creating a
 

00:16:16.639 --> 00:16:17.910 align:start position:0%
python but basically i'm just creating a
two-dimensional<00:16:17.279><c> array</c>

00:16:17.910 --> 00:16:17.920 align:start position:0%
two-dimensional array
 

00:16:17.920 --> 00:16:20.870 align:start position:0%
two-dimensional array
with<00:16:18.160><c> these</c><00:16:18.399><c> dimensions</c><00:16:19.519><c> actually</c><00:16:19.920><c> word</c><00:16:20.399><c> one</c>

00:16:20.870 --> 00:16:20.880 align:start position:0%
with these dimensions actually word one
 

00:16:20.880 --> 00:16:22.870 align:start position:0%
with these dimensions actually word one
the<00:16:21.040><c> length</c><00:16:21.279><c> of</c><00:16:21.360><c> board</c><00:16:21.600><c> one</c><00:16:21.920><c> plus</c><00:16:22.320><c> one</c>

00:16:22.870 --> 00:16:22.880 align:start position:0%
the length of board one plus one
 

00:16:22.880 --> 00:16:24.310 align:start position:0%
the length of board one plus one
because<00:16:23.199><c> remember</c><00:16:23.600><c> we</c><00:16:23.759><c> are</c><00:16:23.839><c> worrying</c><00:16:24.079><c> about</c>

00:16:24.310 --> 00:16:24.320 align:start position:0%
because remember we are worrying about
 

00:16:24.320 --> 00:16:25.990 align:start position:0%
because remember we are worrying about
the<00:16:24.399><c> base</c><00:16:24.639><c> case</c><00:16:24.880><c> but</c><00:16:25.040><c> basically</c><00:16:25.440><c> yeah</c>

00:16:25.990 --> 00:16:26.000 align:start position:0%
the base case but basically yeah
 

00:16:26.000 --> 00:16:28.230 align:start position:0%
the base case but basically yeah
a<00:16:26.160><c> two</c><00:16:26.320><c> dimensional</c><00:16:26.720><c> array</c><00:16:27.040><c> so</c><00:16:27.279><c> now</c><00:16:27.600><c> i</c><00:16:27.759><c> wanna</c>

00:16:28.230 --> 00:16:28.240 align:start position:0%
a two dimensional array so now i wanna
 

00:16:28.240 --> 00:16:29.110 align:start position:0%
a two dimensional array so now i wanna
fill<00:16:28.720><c> up</c>

00:16:29.110 --> 00:16:29.120 align:start position:0%
fill up
 

00:16:29.120 --> 00:16:32.629 align:start position:0%
fill up
our<00:16:29.600><c> bottom</c><00:16:30.160><c> row</c><00:16:30.959><c> of</c><00:16:31.680><c> the</c><00:16:31.920><c> two-dimensional</c>

00:16:32.629 --> 00:16:32.639 align:start position:0%
our bottom row of the two-dimensional
 

00:16:32.639 --> 00:16:33.269 align:start position:0%
our bottom row of the two-dimensional
grid

00:16:33.269 --> 00:16:33.279 align:start position:0%
grid
 

00:16:33.279 --> 00:16:35.269 align:start position:0%
grid
so<00:16:33.440><c> what</c><00:16:33.680><c> i'm</c><00:16:33.759><c> gonna</c><00:16:33.920><c> do</c><00:16:34.079><c> is</c><00:16:34.320><c> for</c><00:16:34.560><c> our</c><00:16:34.800><c> cache</c>

00:16:35.269 --> 00:16:35.279 align:start position:0%
so what i'm gonna do is for our cache
 

00:16:35.279 --> 00:16:36.870 align:start position:0%
so what i'm gonna do is for our cache
i'm<00:16:35.360><c> going</c><00:16:35.440><c> to</c><00:16:35.519><c> go</c><00:16:35.680><c> to</c><00:16:35.839><c> the</c><00:16:36.000><c> bottom</c><00:16:36.399><c> row</c><00:16:36.639><c> what's</c>

00:16:36.870 --> 00:16:36.880 align:start position:0%
i'm going to go to the bottom row what's
 

00:16:36.880 --> 00:16:37.990 align:start position:0%
i'm going to go to the bottom row what's
the<00:16:36.959><c> bottom</c><00:16:37.199><c> row</c><00:16:37.440><c> it's</c><00:16:37.600><c> going</c><00:16:37.600><c> to</c><00:16:37.680><c> be</c><00:16:37.839><c> the</c>

00:16:37.990 --> 00:16:38.000 align:start position:0%
the bottom row it's going to be the
 

00:16:38.000 --> 00:16:39.829 align:start position:0%
the bottom row it's going to be the
length<00:16:38.399><c> of</c><00:16:38.639><c> the</c><00:16:38.880><c> word</c>

00:16:39.829 --> 00:16:39.839 align:start position:0%
length of the word
 

00:16:39.839 --> 00:16:42.790 align:start position:0%
length of the word
1<00:16:40.560><c> and</c><00:16:40.639><c> that's</c><00:16:41.040><c> going</c><00:16:41.120><c> to</c><00:16:41.279><c> be</c><00:16:41.519><c> the</c><00:16:42.079><c> bottom</c><00:16:42.480><c> row</c>

00:16:42.790 --> 00:16:42.800 align:start position:0%
1 and that's going to be the bottom row
 

00:16:42.800 --> 00:16:43.990 align:start position:0%
1 and that's going to be the bottom row
and<00:16:42.880><c> we're</c><00:16:43.040><c> going</c><00:16:43.120><c> to</c><00:16:43.199><c> go</c><00:16:43.360><c> through</c><00:16:43.680><c> every</c>

00:16:43.990 --> 00:16:44.000 align:start position:0%
and we're going to go through every
 

00:16:44.000 --> 00:16:45.350 align:start position:0%
and we're going to go through every
value<00:16:44.399><c> of</c><00:16:44.480><c> it</c><00:16:44.639><c> so</c><00:16:44.800><c> for</c>

00:16:45.350 --> 00:16:45.360 align:start position:0%
value of it so for
 

00:16:45.360 --> 00:16:47.749 align:start position:0%
value of it so for
every<00:16:45.759><c> j</c><00:16:46.320><c> of</c><00:16:46.560><c> that</c><00:16:47.040><c> remember</c><00:16:47.360><c> where</c><00:16:47.600><c> it's</c>

00:16:47.749 --> 00:16:47.759 align:start position:0%
every j of that remember where it's
 

00:16:47.759 --> 00:16:48.710 align:start position:0%
every j of that remember where it's
going<00:16:47.839><c> to</c><00:16:47.920><c> be</c><00:16:48.160><c> basically</c>

00:16:48.710 --> 00:16:48.720 align:start position:0%
going to be basically
 

00:16:48.720 --> 00:16:50.470 align:start position:0%
going to be basically
in<00:16:48.800><c> descending</c><00:16:49.440><c> order</c><00:16:49.680><c> so</c><00:16:49.839><c> what</c><00:16:50.079><c> i'm</c><00:16:50.160><c> going</c><00:16:50.240><c> to</c>

00:16:50.470 --> 00:16:50.480 align:start position:0%
in descending order so what i'm going to
 

00:16:50.480 --> 00:16:52.949 align:start position:0%
in descending order so what i'm going to
do<00:16:50.880><c> is</c><00:16:51.440><c> and</c><00:16:51.600><c> it's</c><00:16:51.759><c> going</c><00:16:51.839><c> to</c><00:16:52.000><c> initially</c><00:16:52.560><c> start</c>

00:16:52.949 --> 00:16:52.959 align:start position:0%
do is and it's going to initially start
 

00:16:52.959 --> 00:16:55.350 align:start position:0%
do is and it's going to initially start
at<00:16:53.120><c> the</c><00:16:53.440><c> length</c><00:16:53.839><c> of</c><00:16:54.000><c> what</c><00:16:54.320><c> word</c><00:16:54.639><c> two</c><00:16:54.959><c> happens</c>

00:16:55.350 --> 00:16:55.360 align:start position:0%
at the length of what word two happens
 

00:16:55.360 --> 00:16:55.910 align:start position:0%
at the length of what word two happens
to<00:16:55.600><c> be</c>

00:16:55.910 --> 00:16:55.920 align:start position:0%
to be
 

00:16:55.920 --> 00:16:57.749 align:start position:0%
to be
because<00:16:56.160><c> remember</c><00:16:56.639><c> the</c><00:16:56.800><c> base</c><00:16:57.040><c> case</c><00:16:57.279><c> is</c><00:16:57.360><c> if</c><00:16:57.519><c> one</c>

00:16:57.749 --> 00:16:57.759 align:start position:0%
because remember the base case is if one
 

00:16:57.759 --> 00:16:59.350 align:start position:0%
because remember the base case is if one
string<00:16:58.079><c> is</c><00:16:58.240><c> empty</c><00:16:58.560><c> and</c><00:16:58.639><c> the</c><00:16:58.720><c> other</c><00:16:58.959><c> string</c>

00:16:59.350 --> 00:16:59.360 align:start position:0%
string is empty and the other string
 

00:16:59.360 --> 00:17:01.350 align:start position:0%
string is empty and the other string
isn't<00:16:59.759><c> so</c><00:17:00.000><c> word</c><00:17:00.399><c> two</c><00:17:00.880><c> and</c><00:17:01.040><c> it's</c><00:17:01.199><c> going</c><00:17:01.279><c> to</c>

00:17:01.350 --> 00:17:01.360 align:start position:0%
isn't so word two and it's going to
 

00:17:01.360 --> 00:17:03.269 align:start position:0%
isn't so word two and it's going to
basically<00:17:01.759><c> be</c><00:17:02.000><c> decrementing</c><00:17:02.560><c> by</c><00:17:02.800><c> one</c><00:17:03.040><c> each</c>

00:17:03.269 --> 00:17:03.279 align:start position:0%
basically be decrementing by one each
 

00:17:03.279 --> 00:17:05.029 align:start position:0%
basically be decrementing by one each
time<00:17:03.440><c> so</c><00:17:03.600><c> what</c><00:17:03.759><c> i</c><00:17:03.839><c> can</c><00:17:03.920><c> just</c><00:17:04.079><c> do</c><00:17:04.240><c> is</c><00:17:04.400><c> just</c><00:17:04.640><c> say</c>

00:17:05.029 --> 00:17:05.039 align:start position:0%
time so what i can just do is just say
 

00:17:05.039 --> 00:17:08.309 align:start position:0%
time so what i can just do is just say
length<00:17:05.360><c> of</c><00:17:05.439><c> word</c><00:17:05.760><c> two</c><00:17:06.319><c> dec</c><00:17:07.360><c> subtracted</c><00:17:07.919><c> by</c>

00:17:08.309 --> 00:17:08.319 align:start position:0%
length of word two dec subtracted by
 

00:17:08.319 --> 00:17:10.390 align:start position:0%
length of word two dec subtracted by
j<00:17:08.959><c> and</c><00:17:09.199><c> actually</c><00:17:09.520><c> i</c><00:17:09.679><c> keep</c><00:17:09.919><c> forgetting</c><00:17:10.319><c> the</c>

00:17:10.390 --> 00:17:10.400 align:start position:0%
j and actually i keep forgetting the
 

00:17:10.400 --> 00:17:11.829 align:start position:0%
j and actually i keep forgetting the
bottom<00:17:10.720><c> row</c><00:17:10.880><c> is</c><00:17:11.039><c> actually</c><00:17:11.360><c> not</c><00:17:11.520><c> just</c><00:17:11.679><c> going</c><00:17:11.760><c> to</c>

00:17:11.829 --> 00:17:11.839 align:start position:0%
bottom row is actually not just going to
 

00:17:11.839 --> 00:17:13.110 align:start position:0%
bottom row is actually not just going to
be<00:17:12.000><c> the</c><00:17:12.079><c> length</c><00:17:12.400><c> of</c><00:17:12.480><c> word</c><00:17:12.720><c> tube</c><00:17:12.880><c> that's</c><00:17:13.120><c> going</c>

00:17:13.110 --> 00:17:13.120 align:start position:0%
be the length of word tube that's going
 

00:17:13.120 --> 00:17:14.870 align:start position:0%
be the length of word tube that's going
to<00:17:13.199><c> be</c><00:17:13.360><c> length</c><00:17:13.600><c> of</c><00:17:13.760><c> word</c><00:17:14.000><c> two</c><00:17:14.319><c> plus</c>

00:17:14.870 --> 00:17:14.880 align:start position:0%
to be length of word two plus
 

00:17:14.880 --> 00:17:16.549 align:start position:0%
to be length of word two plus
one<00:17:15.120><c> so</c><00:17:15.360><c> i</c><00:17:15.439><c> want</c><00:17:15.600><c> to</c><00:17:15.679><c> make</c><00:17:15.760><c> sure</c><00:17:16.000><c> to</c><00:17:16.079><c> add</c><00:17:16.319><c> that</c>

00:17:16.549 --> 00:17:16.559 align:start position:0%
one so i want to make sure to add that
 

00:17:16.559 --> 00:17:18.789 align:start position:0%
one so i want to make sure to add that
plus<00:17:16.959><c> one</c><00:17:17.520><c> and</c><00:17:17.839><c> similarly</c><00:17:18.319><c> what</c><00:17:18.480><c> we're</c><00:17:18.640><c> gonna</c>

00:17:18.789 --> 00:17:18.799 align:start position:0%
plus one and similarly what we're gonna
 

00:17:18.799 --> 00:17:20.390 align:start position:0%
plus one and similarly what we're gonna
do<00:17:18.959><c> is</c><00:17:19.199><c> and</c><00:17:19.360><c> for</c><00:17:19.520><c> that</c><00:17:19.679><c> right</c><00:17:19.839><c> most</c><00:17:20.079><c> column</c>

00:17:20.390 --> 00:17:20.400 align:start position:0%
do is and for that right most column
 

00:17:20.400 --> 00:17:22.710 align:start position:0%
do is and for that right most column
what<00:17:20.559><c> we're</c><00:17:20.720><c> gonna</c><00:17:20.959><c> do</c><00:17:21.199><c> is</c><00:17:21.360><c> go</c><00:17:21.600><c> through</c><00:17:21.919><c> every</c>

00:17:22.710 --> 00:17:22.720 align:start position:0%
what we're gonna do is go through every
 

00:17:22.720 --> 00:17:25.909 align:start position:0%
what we're gonna do is go through every
position<00:17:23.280><c> in</c><00:17:23.439><c> it</c><00:17:23.679><c> so</c><00:17:24.079><c> length</c><00:17:24.480><c> of</c><00:17:24.720><c> word</c><00:17:25.199><c> one</c>

00:17:25.909 --> 00:17:25.919 align:start position:0%
position in it so length of word one
 

00:17:25.919 --> 00:17:28.630 align:start position:0%
position in it so length of word one
plus<00:17:26.319><c> one</c><00:17:26.959><c> and</c><00:17:27.199><c> for</c><00:17:27.520><c> every</c><00:17:27.919><c> work</c><00:17:28.319><c> every</c>

00:17:28.630 --> 00:17:28.640 align:start position:0%
plus one and for every work every
 

00:17:28.640 --> 00:17:29.750 align:start position:0%
plus one and for every work every
position<00:17:29.200><c> in</c>

00:17:29.750 --> 00:17:29.760 align:start position:0%
position in
 

00:17:29.760 --> 00:17:32.150 align:start position:0%
position in
the<00:17:29.919><c> last</c><00:17:30.240><c> column</c><00:17:30.960><c> and</c><00:17:31.120><c> the</c><00:17:31.200><c> last</c><00:17:31.440><c> column</c><00:17:31.840><c> can</c>

00:17:32.150 --> 00:17:32.160 align:start position:0%
the last column and the last column can
 

00:17:32.160 --> 00:17:32.870 align:start position:0%
the last column and the last column can
be

00:17:32.870 --> 00:17:32.880 align:start position:0%
be
 

00:17:32.880 --> 00:17:36.470 align:start position:0%
be
found<00:17:33.520><c> like</c><00:17:33.919><c> this</c><00:17:34.400><c> basically</c><00:17:35.440><c> for</c><00:17:35.679><c> every</c><00:17:36.000><c> i</c>

00:17:36.470 --> 00:17:36.480 align:start position:0%
found like this basically for every i
 

00:17:36.480 --> 00:17:38.310 align:start position:0%
found like this basically for every i
in<00:17:36.720><c> the</c><00:17:36.960><c> last</c><00:17:37.360><c> column</c><00:17:37.679><c> which</c><00:17:37.840><c> is</c><00:17:37.919><c> going</c><00:17:38.000><c> to</c><00:17:38.160><c> be</c>

00:17:38.310 --> 00:17:38.320 align:start position:0%
in the last column which is going to be
 

00:17:38.320 --> 00:17:39.669 align:start position:0%
in the last column which is going to be
length<00:17:38.640><c> of</c><00:17:38.880><c> word</c>

00:17:39.669 --> 00:17:39.679 align:start position:0%
length of word
 

00:17:39.679 --> 00:17:41.669 align:start position:0%
length of word
2<00:17:40.240><c> in</c><00:17:40.320><c> this</c><00:17:40.559><c> case</c><00:17:41.120><c> and</c><00:17:41.280><c> what</c><00:17:41.440><c> we're</c><00:17:41.600><c> going</c><00:17:41.600><c> to</c>

00:17:41.669 --> 00:17:41.679 align:start position:0%
2 in this case and what we're going to
 

00:17:41.679 --> 00:17:43.190 align:start position:0%
2 in this case and what we're going to
do<00:17:41.919><c> is</c><00:17:42.080><c> similar</c><00:17:42.480><c> to</c><00:17:42.640><c> what</c><00:17:42.720><c> we</c><00:17:42.880><c> did</c>

00:17:43.190 --> 00:17:43.200 align:start position:0%
do is similar to what we did
 

00:17:43.200 --> 00:17:45.990 align:start position:0%
do is similar to what we did
up<00:17:43.440><c> here</c><00:17:44.080><c> take</c><00:17:44.640><c> what</c><00:17:44.799><c> the</c><00:17:44.960><c> original</c><00:17:45.440><c> length</c><00:17:45.840><c> of</c>

00:17:45.990 --> 00:17:46.000 align:start position:0%
up here take what the original length of
 

00:17:46.000 --> 00:17:47.350 align:start position:0%
up here take what the original length of
word<00:17:46.320><c> one</c><00:17:46.640><c> is</c>

00:17:47.350 --> 00:17:47.360 align:start position:0%
word one is
 

00:17:47.360 --> 00:17:49.510 align:start position:0%
word one is
and<00:17:47.760><c> each</c><00:17:48.080><c> time</c><00:17:48.400><c> subtract</c><00:17:48.960><c> it</c><00:17:49.039><c> by</c><00:17:49.360><c> an</c>

00:17:49.510 --> 00:17:49.520 align:start position:0%
and each time subtract it by an
 

00:17:49.520 --> 00:17:50.630 align:start position:0%
and each time subtract it by an
additional<00:17:50.000><c> value</c>

00:17:50.630 --> 00:17:50.640 align:start position:0%
additional value
 

00:17:50.640 --> 00:17:53.110 align:start position:0%
additional value
basically<00:17:51.039><c> we</c><00:17:51.200><c> can</c><00:17:51.360><c> use</c><00:17:51.679><c> i</c><00:17:52.000><c> in</c><00:17:52.080><c> this</c><00:17:52.320><c> case</c><00:17:52.880><c> so</c>

00:17:53.110 --> 00:17:53.120 align:start position:0%
basically we can use i in this case so
 

00:17:53.120 --> 00:17:54.870 align:start position:0%
basically we can use i in this case so
this<00:17:53.280><c> might</c><00:17:53.440><c> be</c><00:17:53.600><c> a</c><00:17:53.679><c> little</c><00:17:53.840><c> bit</c><00:17:54.000><c> confusing</c>

00:17:54.870 --> 00:17:54.880 align:start position:0%
this might be a little bit confusing
 

00:17:54.880 --> 00:17:56.150 align:start position:0%
this might be a little bit confusing
you<00:17:54.960><c> can</c><00:17:55.120><c> do</c><00:17:55.280><c> this</c><00:17:55.440><c> a</c><00:17:55.520><c> bunch</c><00:17:55.760><c> of</c><00:17:55.840><c> different</c>

00:17:56.150 --> 00:17:56.160 align:start position:0%
you can do this a bunch of different
 

00:17:56.160 --> 00:17:58.070 align:start position:0%
you can do this a bunch of different
ways<00:17:56.400><c> if</c><00:17:56.559><c> this</c><00:17:56.799><c> is</c><00:17:56.880><c> confusing</c><00:17:57.360><c> to</c><00:17:57.440><c> you</c><00:17:57.679><c> you</c><00:17:57.840><c> can</c>

00:17:58.070 --> 00:17:58.080 align:start position:0%
ways if this is confusing to you you can
 

00:17:58.080 --> 00:17:59.669 align:start position:0%
ways if this is confusing to you you can
probably<00:17:58.400><c> find</c><00:17:58.640><c> your</c><00:17:58.880><c> own</c><00:17:59.039><c> way</c><00:17:59.280><c> to</c><00:17:59.360><c> do</c><00:17:59.440><c> it</c>

00:17:59.669 --> 00:17:59.679 align:start position:0%
probably find your own way to do it
 

00:17:59.679 --> 00:18:01.190 align:start position:0%
probably find your own way to do it
basically<00:18:00.080><c> we're</c><00:18:00.240><c> just</c><00:18:00.400><c> initializing</c><00:18:01.039><c> the</c>

00:18:01.190 --> 00:18:01.200 align:start position:0%
basically we're just initializing the
 

00:18:01.200 --> 00:18:04.070 align:start position:0%
basically we're just initializing the
base<00:18:01.520><c> case</c><00:18:02.080><c> of</c><00:18:02.320><c> our</c><00:18:02.640><c> two</c><00:18:02.880><c> dimensional</c><00:18:03.520><c> array</c>

00:18:04.070 --> 00:18:04.080 align:start position:0%
base case of our two dimensional array
 

00:18:04.080 --> 00:18:05.909 align:start position:0%
base case of our two dimensional array
but<00:18:04.240><c> so</c><00:18:04.480><c> now</c><00:18:04.640><c> let's</c><00:18:04.960><c> actually</c><00:18:05.280><c> get</c><00:18:05.520><c> into</c><00:18:05.760><c> the</c>

00:18:05.909 --> 00:18:05.919 align:start position:0%
but so now let's actually get into the
 

00:18:05.919 --> 00:18:07.990 align:start position:0%
but so now let's actually get into the
dynamic<00:18:06.400><c> programming</c><00:18:06.960><c> portion</c><00:18:07.360><c> so</c><00:18:07.600><c> remember</c>

00:18:07.990 --> 00:18:08.000 align:start position:0%
dynamic programming portion so remember
 

00:18:08.000 --> 00:18:09.110 align:start position:0%
dynamic programming portion so remember
this<00:18:08.160><c> is</c><00:18:08.240><c> going</c><00:18:08.320><c> to</c><00:18:08.400><c> be</c><00:18:08.640><c> bottom</c>

00:18:09.110 --> 00:18:09.120 align:start position:0%
this is going to be bottom
 

00:18:09.120 --> 00:18:10.789 align:start position:0%
this is going to be bottom
up<00:18:09.360><c> so</c><00:18:09.760><c> we're</c><00:18:09.919><c> going</c><00:18:10.000><c> to</c><00:18:10.080><c> work</c><00:18:10.320><c> our</c><00:18:10.480><c> way</c>

00:18:10.789 --> 00:18:10.799 align:start position:0%
up so we're going to work our way
 

00:18:10.799 --> 00:18:12.950 align:start position:0%
up so we're going to work our way
backwards<00:18:11.360><c> from</c><00:18:11.600><c> the</c><00:18:11.840><c> length</c><00:18:12.320><c> of</c>

00:18:12.950 --> 00:18:12.960 align:start position:0%
backwards from the length of
 

00:18:12.960 --> 00:18:15.909 align:start position:0%
backwards from the length of
word<00:18:13.520><c> one</c><00:18:14.240><c> minus</c><00:18:14.880><c> one</c><00:18:15.280><c> and</c><00:18:15.440><c> the</c><00:18:15.520><c> reason</c><00:18:15.760><c> we're</c>

00:18:15.909 --> 00:18:15.919 align:start position:0%
word one minus one and the reason we're
 

00:18:15.919 --> 00:18:17.590 align:start position:0%
word one minus one and the reason we're
minusing<00:18:16.400><c> one</c><00:18:16.640><c> is</c><00:18:16.720><c> we</c><00:18:16.880><c> know</c><00:18:17.039><c> we</c><00:18:17.280><c> already</c>

00:18:17.590 --> 00:18:17.600 align:start position:0%
minusing one is we know we already
 

00:18:17.600 --> 00:18:18.950 align:start position:0%
minusing one is we know we already
filled<00:18:17.840><c> up</c><00:18:18.000><c> our</c><00:18:18.160><c> base</c><00:18:18.480><c> case</c>

00:18:18.950 --> 00:18:18.960 align:start position:0%
filled up our base case
 

00:18:18.960 --> 00:18:20.390 align:start position:0%
filled up our base case
portion<00:18:19.360><c> so</c><00:18:19.520><c> now</c><00:18:19.679><c> we</c><00:18:19.840><c> actually</c><00:18:20.080><c> want</c><00:18:20.240><c> to</c><00:18:20.320><c> get</c>

00:18:20.390 --> 00:18:20.400 align:start position:0%
portion so now we actually want to get
 

00:18:20.400 --> 00:18:22.549 align:start position:0%
portion so now we actually want to get
to<00:18:20.559><c> the</c><00:18:20.720><c> actual</c><00:18:21.120><c> dimensions</c><00:18:21.919><c> of</c><00:18:22.080><c> our</c><00:18:22.240><c> two</c>

00:18:22.549 --> 00:18:22.559 align:start position:0%
to the actual dimensions of our two
 

00:18:22.559 --> 00:18:23.270 align:start position:0%
to the actual dimensions of our two
strings

00:18:23.270 --> 00:18:23.280 align:start position:0%
strings
 

00:18:23.280 --> 00:18:24.390 align:start position:0%
strings
and<00:18:23.440><c> we're</c><00:18:23.600><c> going</c><00:18:23.760><c> to</c><00:18:23.840><c> do</c><00:18:24.000><c> this</c><00:18:24.240><c> in</c>

00:18:24.390 --> 00:18:24.400 align:start position:0%
and we're going to do this in
 

00:18:24.400 --> 00:18:26.950 align:start position:0%
and we're going to do this in
decrementing<00:18:25.120><c> order</c><00:18:25.840><c> until</c><00:18:26.240><c> we</c><00:18:26.480><c> get</c>

00:18:26.950 --> 00:18:26.960 align:start position:0%
decrementing order until we get
 

00:18:26.960 --> 00:18:29.510 align:start position:0%
decrementing order until we get
to<00:18:27.280><c> the</c><00:18:27.919><c> beginning</c><00:18:28.720><c> until</c><00:18:28.960><c> we</c><00:18:29.120><c> get</c><00:18:29.280><c> to</c><00:18:29.360><c> the</c>

00:18:29.510 --> 00:18:29.520 align:start position:0%
to the beginning until we get to the
 

00:18:29.520 --> 00:18:31.110 align:start position:0%
to the beginning until we get to the
zeroth<00:18:30.000><c> index</c><00:18:30.320><c> which</c><00:18:30.480><c> is</c><00:18:30.559><c> when</c><00:18:30.720><c> this</c><00:18:30.880><c> is</c><00:18:31.039><c> going</c>

00:18:31.110 --> 00:18:31.120 align:start position:0%
zeroth index which is when this is going
 

00:18:31.120 --> 00:18:32.310 align:start position:0%
zeroth index which is when this is going
to<00:18:31.200><c> end</c><00:18:31.360><c> up</c><00:18:31.520><c> stopping</c>

00:18:32.310 --> 00:18:32.320 align:start position:0%
to end up stopping
 

00:18:32.320 --> 00:18:33.990 align:start position:0%
to end up stopping
and<00:18:32.640><c> similarly</c><00:18:33.200><c> let's</c><00:18:33.440><c> work</c><00:18:33.679><c> our</c><00:18:33.760><c> way</c>

00:18:33.990 --> 00:18:34.000 align:start position:0%
and similarly let's work our way
 

00:18:34.000 --> 00:18:35.909 align:start position:0%
and similarly let's work our way
backwards<00:18:34.880><c> from</c><00:18:35.120><c> the</c><00:18:35.360><c> length</c>

00:18:35.909 --> 00:18:35.919 align:start position:0%
backwards from the length
 

00:18:35.919 --> 00:18:38.870 align:start position:0%
backwards from the length
of<00:18:36.640><c> word</c><00:18:37.280><c> to</c><00:18:38.000><c> so</c><00:18:38.160><c> we're</c><00:18:38.320><c> going</c><00:18:38.400><c> to</c><00:18:38.559><c> start</c><00:18:38.799><c> at</c>

00:18:38.870 --> 00:18:38.880 align:start position:0%
of word to so we're going to start at
 

00:18:38.880 --> 00:18:40.549 align:start position:0%
of word to so we're going to start at
the<00:18:39.039><c> bottom</c><00:18:39.520><c> row</c><00:18:39.840><c> and</c><00:18:40.000><c> work</c><00:18:40.240><c> our</c><00:18:40.400><c> way</c>

00:18:40.549 --> 00:18:40.559 align:start position:0%
the bottom row and work our way
 

00:18:40.559 --> 00:18:42.230 align:start position:0%
the bottom row and work our way
backwards<00:18:41.039><c> and</c><00:18:41.200><c> then</c><00:18:41.360><c> keep</c><00:18:41.600><c> doing</c><00:18:41.840><c> that</c><00:18:42.000><c> until</c>

00:18:42.230 --> 00:18:42.240 align:start position:0%
backwards and then keep doing that until
 

00:18:42.240 --> 00:18:43.669 align:start position:0%
backwards and then keep doing that until
we<00:18:42.400><c> end</c><00:18:42.559><c> up</c><00:18:42.640><c> getting</c><00:18:42.880><c> to</c><00:18:43.039><c> the</c><00:18:43.280><c> top</c>

00:18:43.669 --> 00:18:43.679 align:start position:0%
we end up getting to the top
 

00:18:43.679 --> 00:18:46.630 align:start position:0%
we end up getting to the top
row<00:18:44.240><c> and</c><00:18:44.400><c> remember</c><00:18:44.799><c> we</c><00:18:44.960><c> had</c><00:18:45.120><c> two</c><00:18:45.360><c> cases</c><00:18:46.000><c> either</c>

00:18:46.630 --> 00:18:46.640 align:start position:0%
row and remember we had two cases either
 

00:18:46.640 --> 00:18:47.510 align:start position:0%
row and remember we had two cases either
word<00:18:47.039><c> one</c>

00:18:47.510 --> 00:18:47.520 align:start position:0%
word one
 

00:18:47.520 --> 00:18:51.110 align:start position:0%
word one
at<00:18:47.919><c> index</c><00:18:48.400><c> i</c><00:18:48.880><c> is</c><00:18:49.039><c> equal</c><00:18:49.760><c> to</c><00:18:50.000><c> word</c><00:18:50.480><c> two</c><00:18:50.799><c> at</c>

00:18:51.110 --> 00:18:51.120 align:start position:0%
at index i is equal to word two at
 

00:18:51.120 --> 00:18:53.750 align:start position:0%
at index i is equal to word two at
index<00:18:51.760><c> j</c><00:18:52.480><c> basically</c><00:18:53.039><c> with</c><00:18:53.200><c> the</c><00:18:53.360><c> characters</c>

00:18:53.750 --> 00:18:53.760 align:start position:0%
index j basically with the characters
 

00:18:53.760 --> 00:18:55.590 align:start position:0%
index j basically with the characters
that<00:18:53.840><c> we're</c><00:18:53.919><c> comparing</c><00:18:54.400><c> are</c><00:18:54.559><c> equal</c><00:18:55.039><c> or</c>

00:18:55.590 --> 00:18:55.600 align:start position:0%
that we're comparing are equal or
 

00:18:55.600 --> 00:18:58.150 align:start position:0%
that we're comparing are equal or
they're<00:18:55.919><c> not</c><00:18:56.240><c> equal</c><00:18:56.720><c> remember</c><00:18:57.360><c> if</c><00:18:57.520><c> they</c><00:18:57.840><c> are</c>

00:18:58.150 --> 00:18:58.160 align:start position:0%
they're not equal remember if they are
 

00:18:58.160 --> 00:18:58.789 align:start position:0%
they're not equal remember if they are
equal

00:18:58.789 --> 00:18:58.799 align:start position:0%
equal
 

00:18:58.799 --> 00:19:00.630 align:start position:0%
equal
then<00:18:58.960><c> that's</c><00:18:59.280><c> really</c><00:18:59.679><c> easy</c><00:19:00.000><c> for</c><00:19:00.160><c> us</c><00:19:00.400><c> right</c>

00:19:00.630 --> 00:19:00.640 align:start position:0%
then that's really easy for us right
 

00:19:00.640 --> 00:19:02.390 align:start position:0%
then that's really easy for us right
because<00:19:00.960><c> then</c><00:19:01.200><c> we</c><00:19:01.360><c> can</c><00:19:01.520><c> just</c><00:19:01.679><c> say</c><00:19:01.919><c> okay</c>

00:19:02.390 --> 00:19:02.400 align:start position:0%
because then we can just say okay
 

00:19:02.400 --> 00:19:05.590 align:start position:0%
because then we can just say okay
cache<00:19:03.120><c> of</c><00:19:03.679><c> position</c><00:19:04.240><c> i</c><00:19:04.640><c> j</c><00:19:05.039><c> what</c><00:19:05.200><c> we're</c><00:19:05.360><c> doing</c>

00:19:05.590 --> 00:19:05.600 align:start position:0%
cache of position i j what we're doing
 

00:19:05.600 --> 00:19:07.270 align:start position:0%
cache of position i j what we're doing
here<00:19:05.840><c> is</c><00:19:06.000><c> computing</c><00:19:06.480><c> what's</c><00:19:06.720><c> the</c><00:19:06.799><c> minimum</c>

00:19:07.270 --> 00:19:07.280 align:start position:0%
here is computing what's the minimum
 

00:19:07.280 --> 00:19:09.029 align:start position:0%
here is computing what's the minimum
number<00:19:07.440><c> of</c><00:19:07.679><c> operations</c><00:19:08.240><c> it</c><00:19:08.320><c> would</c><00:19:08.480><c> take</c>

00:19:09.029 --> 00:19:09.039 align:start position:0%
number of operations it would take
 

00:19:09.039 --> 00:19:11.590 align:start position:0%
number of operations it would take
to<00:19:09.200><c> get</c><00:19:09.440><c> the</c><00:19:09.760><c> sub</c><00:19:10.000><c> string</c><00:19:10.400><c> starting</c><00:19:10.880><c> at</c><00:19:11.200><c> i</c><00:19:11.440><c> and</c>

00:19:11.590 --> 00:19:11.600 align:start position:0%
to get the sub string starting at i and
 

00:19:11.600 --> 00:19:13.190 align:start position:0%
to get the sub string starting at i and
the<00:19:11.679><c> substring</c><00:19:12.160><c> starting</c><00:19:12.400><c> at</c><00:19:12.559><c> j</c><00:19:12.799><c> for</c><00:19:12.960><c> these</c>

00:19:13.190 --> 00:19:13.200 align:start position:0%
the substring starting at j for these
 

00:19:13.200 --> 00:19:14.549 align:start position:0%
the substring starting at j for these
respective<00:19:13.840><c> words</c>

00:19:14.549 --> 00:19:14.559 align:start position:0%
respective words
 

00:19:14.559 --> 00:19:16.390 align:start position:0%
respective words
compute<00:19:14.960><c> the</c><00:19:15.120><c> minimum</c><00:19:15.520><c> number</c><00:19:15.760><c> of</c><00:19:15.840><c> operations</c>

00:19:16.390 --> 00:19:16.400 align:start position:0%
compute the minimum number of operations
 

00:19:16.400 --> 00:19:18.150 align:start position:0%
compute the minimum number of operations
so<00:19:16.559><c> we</c><00:19:16.720><c> can</c><00:19:16.880><c> get</c><00:19:17.039><c> that</c><00:19:17.280><c> in</c><00:19:17.440><c> this</c><00:19:17.600><c> case</c><00:19:17.919><c> since</c>

00:19:18.150 --> 00:19:18.160 align:start position:0%
so we can get that in this case since
 

00:19:18.160 --> 00:19:19.990 align:start position:0%
so we can get that in this case since
the<00:19:18.240><c> characters</c><00:19:18.640><c> are</c><00:19:18.799><c> equal</c><00:19:19.039><c> just</c><00:19:19.200><c> by</c><00:19:19.440><c> saying</c>

00:19:19.990 --> 00:19:20.000 align:start position:0%
the characters are equal just by saying
 

00:19:20.000 --> 00:19:23.350 align:start position:0%
the characters are equal just by saying
cache<00:19:20.320><c> of</c><00:19:20.480><c> i</c><00:19:20.720><c> plus</c><00:19:21.039><c> one</c><00:19:21.679><c> cache</c><00:19:22.160><c> of</c><00:19:22.559><c> j</c><00:19:22.880><c> plus</c>

00:19:23.350 --> 00:19:23.360 align:start position:0%
cache of i plus one cache of j plus
 

00:19:23.360 --> 00:19:25.590 align:start position:0%
cache of i plus one cache of j plus
one<00:19:24.080><c> and</c><00:19:24.160><c> the</c><00:19:24.400><c> else</c><00:19:24.720><c> case</c><00:19:25.039><c> is</c><00:19:25.120><c> where</c><00:19:25.360><c> we</c><00:19:25.440><c> have</c>

00:19:25.590 --> 00:19:25.600 align:start position:0%
one and the else case is where we have
 

00:19:25.600 --> 00:19:27.510 align:start position:0%
one and the else case is where we have
to<00:19:25.760><c> check</c><00:19:26.080><c> all</c><00:19:26.400><c> three</c><00:19:26.720><c> directions</c>

00:19:27.510 --> 00:19:27.520 align:start position:0%
to check all three directions
 

00:19:27.520 --> 00:19:29.190 align:start position:0%
to check all three directions
and<00:19:27.679><c> then</c><00:19:27.840><c> take</c><00:19:28.000><c> the</c><00:19:28.240><c> minimum</c><00:19:28.720><c> of</c><00:19:28.880><c> those</c><00:19:29.039><c> so</c>

00:19:29.190 --> 00:19:29.200 align:start position:0%
and then take the minimum of those so
 

00:19:29.200 --> 00:19:30.789 align:start position:0%
and then take the minimum of those so
what<00:19:29.360><c> i'm</c><00:19:29.440><c> gonna</c><00:19:29.600><c> do</c><00:19:29.760><c> is</c><00:19:29.840><c> say</c><00:19:30.160><c> one</c>

00:19:30.789 --> 00:19:30.799 align:start position:0%
what i'm gonna do is say one
 

00:19:30.799 --> 00:19:33.909 align:start position:0%
what i'm gonna do is say one
plus<00:19:31.520><c> the</c><00:19:31.760><c> minimum</c><00:19:32.240><c> of</c><00:19:32.480><c> those</c><00:19:32.880><c> three</c><00:19:33.600><c> uh</c>

00:19:33.909 --> 00:19:33.919 align:start position:0%
plus the minimum of those three uh
 

00:19:33.919 --> 00:19:35.830 align:start position:0%
plus the minimum of those three uh
directions<00:19:34.480><c> so</c><00:19:34.720><c> cache</c><00:19:35.200><c> of</c>

00:19:35.830 --> 00:19:35.840 align:start position:0%
directions so cache of
 

00:19:35.840 --> 00:19:40.150 align:start position:0%
directions so cache of
i<00:19:36.559><c> plus</c><00:19:37.440><c> 1</c><00:19:38.160><c> and</c><00:19:38.400><c> leave</c><00:19:38.720><c> j</c><00:19:39.039><c> the</c><00:19:39.200><c> same</c>

00:19:40.150 --> 00:19:40.160 align:start position:0%
i plus 1 and leave j the same
 

00:19:40.160 --> 00:19:42.950 align:start position:0%
i plus 1 and leave j the same
and<00:19:41.120><c> also</c><00:19:41.440><c> we</c><00:19:41.600><c> want</c><00:19:41.760><c> to</c><00:19:41.840><c> take</c><00:19:42.080><c> the</c><00:19:42.240><c> minimum</c><00:19:42.720><c> of</c>

00:19:42.950 --> 00:19:42.960 align:start position:0%
and also we want to take the minimum of
 

00:19:42.960 --> 00:19:43.430 align:start position:0%
and also we want to take the minimum of
cash

00:19:43.430 --> 00:19:43.440 align:start position:0%
cash
 

00:19:43.440 --> 00:19:47.029 align:start position:0%
cash
of<00:19:43.760><c> i</c><00:19:44.559><c> left</c><00:19:44.880><c> the</c><00:19:45.039><c> same</c><00:19:45.360><c> but</c><00:19:45.679><c> j</c><00:19:46.080><c> plus</c><00:19:46.400><c> 1</c>

00:19:47.029 --> 00:19:47.039 align:start position:0%
of i left the same but j plus 1
 

00:19:47.039 --> 00:19:48.870 align:start position:0%
of i left the same but j plus 1
and<00:19:47.280><c> last</c><00:19:47.600><c> but</c><00:19:47.760><c> not</c><00:19:48.080><c> least</c><00:19:48.400><c> we</c><00:19:48.480><c> want</c><00:19:48.640><c> to</c><00:19:48.720><c> take</c>

00:19:48.870 --> 00:19:48.880 align:start position:0%
and last but not least we want to take
 

00:19:48.880 --> 00:19:51.350 align:start position:0%
and last but not least we want to take
the<00:19:49.039><c> minimum</c><00:19:49.440><c> of</c><00:19:49.600><c> cash</c><00:19:49.840><c> of</c><00:19:50.080><c> i</c><00:19:50.320><c> plus</c><00:19:50.640><c> 1</c>

00:19:51.350 --> 00:19:51.360 align:start position:0%
the minimum of cash of i plus 1
 

00:19:51.360 --> 00:19:54.630 align:start position:0%
the minimum of cash of i plus 1
and<00:19:51.600><c> j</c><00:19:51.919><c> plus</c><00:19:52.240><c> one</c><00:19:52.799><c> so</c><00:19:52.960><c> this</c><00:19:53.200><c> is</c><00:19:53.280><c> a</c><00:19:53.520><c> long</c><00:19:54.240><c> line</c>

00:19:54.630 --> 00:19:54.640 align:start position:0%
and j plus one so this is a long line
 

00:19:54.640 --> 00:19:56.390 align:start position:0%
and j plus one so this is a long line
but<00:19:54.799><c> i'm</c><00:19:54.960><c> going</c><00:19:55.039><c> to</c><00:19:55.120><c> leave</c><00:19:55.360><c> it</c><00:19:55.520><c> as</c><00:19:55.760><c> it</c><00:19:55.919><c> is</c>

00:19:56.390 --> 00:19:56.400 align:start position:0%
but i'm going to leave it as it is
 

00:19:56.400 --> 00:19:58.150 align:start position:0%
but i'm going to leave it as it is
but<00:19:56.559><c> yeah</c><00:19:56.799><c> basically</c><00:19:57.200><c> this</c><00:19:57.440><c> is</c><00:19:57.520><c> taking</c><00:19:57.840><c> care</c>

00:19:58.150 --> 00:19:58.160 align:start position:0%
but yeah basically this is taking care
 

00:19:58.160 --> 00:19:59.830 align:start position:0%
but yeah basically this is taking care
of<00:19:58.400><c> insert</c><00:19:59.120><c> delete</c>

00:19:59.830 --> 00:19:59.840 align:start position:0%
of insert delete
 

00:19:59.840 --> 00:20:01.909 align:start position:0%
of insert delete
as<00:20:00.000><c> well</c><00:20:00.240><c> as</c><00:20:00.400><c> replace</c><00:20:01.200><c> and</c><00:20:01.360><c> it's</c><00:20:01.520><c> taking</c><00:20:01.760><c> the</c>

00:20:01.909 --> 00:20:01.919 align:start position:0%
as well as replace and it's taking the
 

00:20:01.919 --> 00:20:03.510 align:start position:0%
as well as replace and it's taking the
minimum<00:20:02.400><c> of</c><00:20:02.559><c> whatever</c>

00:20:03.510 --> 00:20:03.520 align:start position:0%
minimum of whatever
 

00:20:03.520 --> 00:20:05.830 align:start position:0%
minimum of whatever
those<00:20:03.919><c> were</c><00:20:04.640><c> adding</c><00:20:04.960><c> one</c><00:20:05.200><c> to</c><00:20:05.360><c> it</c><00:20:05.440><c> because</c><00:20:05.600><c> we</c>

00:20:05.830 --> 00:20:05.840 align:start position:0%
those were adding one to it because we
 

00:20:05.840 --> 00:20:07.750 align:start position:0%
those were adding one to it because we
are<00:20:06.000><c> having</c><00:20:06.240><c> to</c><00:20:06.320><c> do</c><00:20:06.480><c> at</c><00:20:06.559><c> least</c><00:20:06.799><c> one</c><00:20:07.039><c> operation</c>

00:20:07.750 --> 00:20:07.760 align:start position:0%
are having to do at least one operation
 

00:20:07.760 --> 00:20:09.830 align:start position:0%
are having to do at least one operation
whichever<00:20:08.240><c> one</c><00:20:08.400><c> of</c><00:20:08.480><c> those</c><00:20:08.720><c> it</c><00:20:08.960><c> is</c><00:20:09.200><c> and</c><00:20:09.360><c> then</c>

00:20:09.830 --> 00:20:09.840 align:start position:0%
whichever one of those it is and then
 

00:20:09.840 --> 00:20:11.110 align:start position:0%
whichever one of those it is and then
storing<00:20:10.320><c> that</c><00:20:10.559><c> minimum</c>

00:20:11.110 --> 00:20:11.120 align:start position:0%
storing that minimum
 

00:20:11.120 --> 00:20:13.270 align:start position:0%
storing that minimum
here<00:20:11.760><c> and</c><00:20:11.919><c> once</c><00:20:12.240><c> we</c><00:20:12.400><c> have</c><00:20:12.640><c> done</c><00:20:12.880><c> that</c><00:20:13.039><c> once</c>

00:20:13.270 --> 00:20:13.280 align:start position:0%
here and once we have done that once
 

00:20:13.280 --> 00:20:14.710 align:start position:0%
here and once we have done that once
we've<00:20:13.520><c> filled</c><00:20:13.840><c> up</c><00:20:14.000><c> our</c><00:20:14.240><c> entire</c>

00:20:14.710 --> 00:20:14.720 align:start position:0%
we've filled up our entire
 

00:20:14.720 --> 00:20:16.070 align:start position:0%
we've filled up our entire
two-dimensional<00:20:15.520><c> array</c>

00:20:16.070 --> 00:20:16.080 align:start position:0%
two-dimensional array
 

00:20:16.080 --> 00:20:19.750 align:start position:0%
two-dimensional array
we<00:20:16.320><c> want</c><00:20:16.480><c> to</c><00:20:16.559><c> return</c><00:20:17.360><c> the</c><00:20:17.600><c> value</c><00:20:18.480><c> at</c><00:20:19.039><c> index</c>

00:20:19.750 --> 00:20:19.760 align:start position:0%
we want to return the value at index
 

00:20:19.760 --> 00:20:23.270 align:start position:0%
we want to return the value at index
0<00:20:20.559><c> 0</c><00:20:21.280><c> of</c><00:20:21.440><c> our</c><00:20:21.679><c> cache</c><00:20:22.240><c> because</c><00:20:22.559><c> that</c><00:20:22.880><c> tells</c><00:20:23.200><c> us</c>

00:20:23.270 --> 00:20:23.280 align:start position:0%
0 0 of our cache because that tells us
 

00:20:23.280 --> 00:20:25.190 align:start position:0%
0 0 of our cache because that tells us
what's<00:20:23.520><c> the</c><00:20:23.600><c> minimum</c><00:20:24.080><c> number</c><00:20:24.320><c> of</c><00:20:24.480><c> operations</c>

00:20:25.190 --> 00:20:25.200 align:start position:0%
what's the minimum number of operations
 

00:20:25.200 --> 00:20:27.430 align:start position:0%
what's the minimum number of operations
for<00:20:25.440><c> the</c><00:20:25.679><c> beginning</c><00:20:26.320><c> of</c><00:20:26.480><c> both</c><00:20:26.799><c> strings</c><00:20:27.200><c> so</c>

00:20:27.430 --> 00:20:27.440 align:start position:0%
for the beginning of both strings so
 

00:20:27.440 --> 00:20:29.190 align:start position:0%
for the beginning of both strings so
basically<00:20:27.919><c> the</c><00:20:28.080><c> entirety</c>

00:20:29.190 --> 00:20:29.200 align:start position:0%
basically the entirety
 

00:20:29.200 --> 00:20:32.310 align:start position:0%
basically the entirety
of<00:20:29.440><c> both</c><00:20:29.919><c> strings</c><00:20:30.880><c> so</c><00:20:31.039><c> this</c><00:20:31.360><c> is</c><00:20:31.520><c> definitely</c><00:20:32.159><c> a</c>

00:20:32.310 --> 00:20:32.320 align:start position:0%
of both strings so this is definitely a
 

00:20:32.320 --> 00:20:34.710 align:start position:0%
of both strings so this is definitely a
doozy<00:20:32.720><c> of</c><00:20:32.880><c> a</c><00:20:33.039><c> problem</c><00:20:33.520><c> it's</c><00:20:33.919><c> not</c><00:20:34.159><c> a</c><00:20:34.320><c> ton</c><00:20:34.559><c> of</c>

00:20:34.710 --> 00:20:34.720 align:start position:0%
doozy of a problem it's not a ton of
 

00:20:34.720 --> 00:20:36.549 align:start position:0%
doozy of a problem it's not a ton of
code<00:20:35.039><c> but</c><00:20:35.280><c> it</c><00:20:35.360><c> does</c><00:20:35.600><c> take</c><00:20:35.760><c> some</c><00:20:36.080><c> thought</c><00:20:36.320><c> to</c>

00:20:36.549 --> 00:20:36.559 align:start position:0%
code but it does take some thought to
 

00:20:36.559 --> 00:20:37.590 align:start position:0%
code but it does take some thought to
get<00:20:36.720><c> to</c><00:20:36.960><c> here</c>

00:20:37.590 --> 00:20:37.600 align:start position:0%
get to here
 

00:20:37.600 --> 00:20:39.830 align:start position:0%
get to here
and<00:20:37.919><c> it's</c><00:20:38.240><c> definitely</c><00:20:38.720><c> an</c><00:20:38.960><c> extension</c><00:20:39.600><c> of</c>

00:20:39.830 --> 00:20:39.840 align:start position:0%
and it's definitely an extension of
 

00:20:39.840 --> 00:20:41.510 align:start position:0%
and it's definitely an extension of
longest<00:20:40.240><c> common</c><00:20:40.640><c> subsequence</c>

00:20:41.510 --> 00:20:41.520 align:start position:0%
longest common subsequence
 

00:20:41.520 --> 00:20:43.430 align:start position:0%
longest common subsequence
so<00:20:41.760><c> i</c><00:20:41.919><c> recommend</c><00:20:42.320><c> solving</c><00:20:42.640><c> that</c><00:20:42.880><c> problem</c><00:20:43.280><c> if</c>

00:20:43.430 --> 00:20:43.440 align:start position:0%
so i recommend solving that problem if
 

00:20:43.440 --> 00:20:45.750 align:start position:0%
so i recommend solving that problem if
you<00:20:43.520><c> haven't</c><00:20:43.919><c> already</c>

00:20:45.750 --> 00:20:45.760 align:start position:0%
you haven't already
 

00:20:45.760 --> 00:20:47.590 align:start position:0%
you haven't already
but<00:20:46.000><c> i</c><00:20:46.080><c> do</c><00:20:46.320><c> hope</c><00:20:46.559><c> that</c><00:20:46.640><c> this</c><00:20:46.880><c> was</c><00:20:47.039><c> helpful</c><00:20:47.440><c> it's</c>

00:20:47.590 --> 00:20:47.600 align:start position:0%
but i do hope that this was helpful it's
 

00:20:47.600 --> 00:20:49.350 align:start position:0%
but i do hope that this was helpful it's
a<00:20:47.679><c> tough</c><00:20:47.840><c> dynamic</c><00:20:48.320><c> programming</c><00:20:48.799><c> problem</c>

00:20:49.350 --> 00:20:49.360 align:start position:0%
a tough dynamic programming problem
 

00:20:49.360 --> 00:20:50.870 align:start position:0%
a tough dynamic programming problem
if<00:20:49.520><c> it</c><00:20:49.600><c> was</c><00:20:49.840><c> helpful</c><00:20:50.240><c> please</c><00:20:50.559><c> like</c><00:20:50.799><c> and</c>

00:20:50.870 --> 00:20:50.880 align:start position:0%
if it was helpful please like and
 

00:20:50.880 --> 00:20:52.549 align:start position:0%
if it was helpful please like and
subscribe<00:20:51.440><c> it</c><00:20:51.600><c> supports</c><00:20:51.919><c> the</c><00:20:52.080><c> channel</c>

00:20:52.549 --> 00:20:52.559 align:start position:0%
subscribe it supports the channel
 

00:20:52.559 --> 00:20:54.789 align:start position:0%
subscribe it supports the channel
a<00:20:52.799><c> lot</c><00:20:53.120><c> and</c><00:20:53.280><c> i'll</c><00:20:53.520><c> hopefully</c><00:20:54.240><c> see</c><00:20:54.400><c> you</c><00:20:54.559><c> pretty</c>

00:20:54.789 --> 00:20:54.799 align:start position:0%
a lot and i'll hopefully see you pretty
 

00:20:54.799 --> 00:21:01.520 align:start position:0%
a lot and i'll hopefully see you pretty
soon<00:20:55.360><c> thanks</c><00:20:55.600><c> for</c><00:20:58.520><c> watching</c>

