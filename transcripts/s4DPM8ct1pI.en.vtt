WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.670 align:start position:0%
 
hey<00:00:00.160><c> everyone</c><00:00:00.719><c> welcome</c><00:00:01.120><c> back</c><00:00:01.360><c> and</c><00:00:01.439><c> let's</c>

00:00:01.670 --> 00:00:01.680 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.680 --> 00:00:03.429 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.839><c> some</c><00:00:02.000><c> more</c><00:00:02.240><c> neat</c><00:00:02.480><c> code</c><00:00:02.720><c> today</c><00:00:03.040><c> so</c><00:00:03.199><c> today</c>

00:00:03.429 --> 00:00:03.439 align:start position:0%
write some more neat code today so today
 

00:00:03.439 --> 00:00:05.510 align:start position:0%
write some more neat code today so today
let's<00:00:03.600><c> solve</c><00:00:03.919><c> the</c><00:00:04.080><c> problem</c><00:00:04.560><c> binary</c><00:00:05.120><c> search</c>

00:00:05.510 --> 00:00:05.520 align:start position:0%
let's solve the problem binary search
 

00:00:05.520 --> 00:00:08.070 align:start position:0%
let's solve the problem binary search
we're<00:00:05.759><c> given</c><00:00:06.080><c> an</c><00:00:06.240><c> array</c><00:00:06.720><c> of</c><00:00:06.879><c> integers</c><00:00:07.520><c> nums</c>

00:00:08.070 --> 00:00:08.080 align:start position:0%
we're given an array of integers nums
 

00:00:08.080 --> 00:00:09.589 align:start position:0%
we're given an array of integers nums
which<00:00:08.320><c> are</c><00:00:08.400><c> going</c><00:00:08.559><c> to</c><00:00:08.639><c> be</c><00:00:08.880><c> sorted</c><00:00:09.360><c> in</c>

00:00:09.589 --> 00:00:09.599 align:start position:0%
which are going to be sorted in
 

00:00:09.599 --> 00:00:12.150 align:start position:0%
which are going to be sorted in
ascending<00:00:10.400><c> order</c><00:00:10.800><c> and</c><00:00:10.880><c> we're</c><00:00:11.200><c> also</c><00:00:11.519><c> given</c><00:00:11.920><c> a</c>

00:00:12.150 --> 00:00:12.160 align:start position:0%
ascending order and we're also given a
 

00:00:12.160 --> 00:00:13.910 align:start position:0%
ascending order and we're also given a
target<00:00:12.639><c> integer</c><00:00:13.040><c> that</c><00:00:13.200><c> we're</c><00:00:13.360><c> going</c><00:00:13.440><c> to</c><00:00:13.599><c> look</c>

00:00:13.910 --> 00:00:13.920 align:start position:0%
target integer that we're going to look
 

00:00:13.920 --> 00:00:16.790 align:start position:0%
target integer that we're going to look
for<00:00:14.480><c> if</c><00:00:14.719><c> the</c><00:00:14.880><c> target</c><00:00:15.440><c> exists</c><00:00:16.000><c> in</c><00:00:16.160><c> the</c><00:00:16.400><c> array</c>

00:00:16.790 --> 00:00:16.800 align:start position:0%
for if the target exists in the array
 

00:00:16.800 --> 00:00:18.710 align:start position:0%
for if the target exists in the array
then<00:00:16.960><c> we</c><00:00:17.119><c> can</c><00:00:17.199><c> return</c><00:00:17.600><c> the</c><00:00:17.840><c> index</c><00:00:18.240><c> of</c><00:00:18.400><c> it</c><00:00:18.560><c> if</c><00:00:18.640><c> it</c>

00:00:18.710 --> 00:00:18.720 align:start position:0%
then we can return the index of it if it
 

00:00:18.720 --> 00:00:21.429 align:start position:0%
then we can return the index of it if it
does<00:00:19.039><c> not</c><00:00:19.279><c> exist</c><00:00:19.920><c> then</c><00:00:20.160><c> we</c><00:00:20.320><c> return</c><00:00:20.800><c> one</c><00:00:21.279><c> the</c>

00:00:21.429 --> 00:00:21.439 align:start position:0%
does not exist then we return one the
 

00:00:21.439 --> 00:00:23.670 align:start position:0%
does not exist then we return one the
goal<00:00:21.760><c> is</c><00:00:21.920><c> to</c><00:00:22.080><c> create</c><00:00:22.400><c> an</c><00:00:22.560><c> efficient</c><00:00:23.039><c> algorithm</c>

00:00:23.670 --> 00:00:23.680 align:start position:0%
goal is to create an efficient algorithm
 

00:00:23.680 --> 00:00:26.390 align:start position:0%
goal is to create an efficient algorithm
that<00:00:23.840><c> can</c><00:00:24.160><c> run</c><00:00:24.480><c> in</c><00:00:24.800><c> log</c><00:00:25.199><c> n</c><00:00:25.439><c> time</c><00:00:25.920><c> so</c><00:00:26.160><c> what</c>

00:00:26.390 --> 00:00:26.400 align:start position:0%
that can run in log n time so what
 

00:00:26.400 --> 00:00:28.390 align:start position:0%
that can run in log n time so what
algorithm<00:00:26.800><c> are</c><00:00:26.880><c> we</c><00:00:27.039><c> going</c><00:00:27.119><c> to</c><00:00:27.279><c> use</c><00:00:27.840><c> well</c><00:00:28.160><c> the</c>

00:00:28.390 --> 00:00:28.400 align:start position:0%
algorithm are we going to use well the
 

00:00:28.400 --> 00:00:30.470 align:start position:0%
algorithm are we going to use well the
problem<00:00:28.800><c> pretty</c><00:00:29.039><c> much</c><00:00:29.279><c> tells</c><00:00:29.599><c> you</c><00:00:29.840><c> binary</c>

00:00:30.470 --> 00:00:30.480 align:start position:0%
problem pretty much tells you binary
 

00:00:30.480 --> 00:00:33.430 align:start position:0%
problem pretty much tells you binary
search<00:00:30.960><c> so</c><00:00:31.119><c> while</c><00:00:31.439><c> this</c><00:00:31.679><c> is</c><00:00:32.200><c> self-explanatory</c>

00:00:33.430 --> 00:00:33.440 align:start position:0%
search so while this is self-explanatory
 

00:00:33.440 --> 00:00:35.750 align:start position:0%
search so while this is self-explanatory
and<00:00:33.600><c> a</c><00:00:33.680><c> pretty</c><00:00:34.000><c> basic</c><00:00:34.559><c> algorithm</c><00:00:35.280><c> i</c><00:00:35.520><c> still</c>

00:00:35.750 --> 00:00:35.760 align:start position:0%
and a pretty basic algorithm i still
 

00:00:35.760 --> 00:00:37.990 align:start position:0%
and a pretty basic algorithm i still
think<00:00:36.000><c> it's</c><00:00:36.320><c> really</c><00:00:36.800><c> important</c><00:00:37.360><c> because</c><00:00:37.680><c> a</c>

00:00:37.990 --> 00:00:38.000 align:start position:0%
think it's really important because a
 

00:00:38.000 --> 00:00:40.950 align:start position:0%
think it's really important because a
lot<00:00:38.320><c> of</c><00:00:38.559><c> problems</c><00:00:39.200><c> kind</c><00:00:39.440><c> of</c><00:00:39.600><c> extend</c><00:00:40.239><c> the</c><00:00:40.480><c> idea</c>

00:00:40.950 --> 00:00:40.960 align:start position:0%
lot of problems kind of extend the idea
 

00:00:40.960 --> 00:00:42.790 align:start position:0%
lot of problems kind of extend the idea
of<00:00:41.120><c> binary</c><00:00:41.600><c> search</c><00:00:41.840><c> and</c><00:00:41.920><c> then</c><00:00:42.160><c> make</c><00:00:42.320><c> it</c><00:00:42.480><c> even</c>

00:00:42.790 --> 00:00:42.800 align:start position:0%
of binary search and then make it even
 

00:00:42.800 --> 00:00:44.630 align:start position:0%
of binary search and then make it even
harder<00:00:43.280><c> and</c><00:00:43.360><c> this</c><00:00:43.520><c> is</c><00:00:43.680><c> actually</c><00:00:44.079><c> a</c><00:00:44.239><c> pretty</c>

00:00:44.630 --> 00:00:44.640 align:start position:0%
harder and this is actually a pretty
 

00:00:44.640 --> 00:00:47.029 align:start position:0%
harder and this is actually a pretty
common<00:00:45.120><c> interview</c><00:00:45.680><c> question</c><00:00:46.239><c> to</c><00:00:46.399><c> be</c><00:00:46.640><c> asked</c>

00:00:47.029 --> 00:00:47.039 align:start position:0%
common interview question to be asked
 

00:00:47.039 --> 00:00:49.510 align:start position:0%
common interview question to be asked
some<00:00:47.360><c> variation</c><00:00:48.079><c> of</c><00:00:48.239><c> binary</c><00:00:48.719><c> search</c><00:00:49.200><c> so</c><00:00:49.360><c> this</c>

00:00:49.510 --> 00:00:49.520 align:start position:0%
some variation of binary search so this
 

00:00:49.520 --> 00:00:51.350 align:start position:0%
some variation of binary search so this
is<00:00:49.680><c> a</c><00:00:49.760><c> very</c><00:00:50.000><c> good</c><00:00:50.239><c> problem</c><00:00:50.640><c> to</c><00:00:50.800><c> practice</c><00:00:51.280><c> and</c>

00:00:51.350 --> 00:00:51.360 align:start position:0%
is a very good problem to practice and
 

00:00:51.360 --> 00:00:53.189 align:start position:0%
is a very good problem to practice and
your<00:00:51.600><c> goal</c><00:00:51.840><c> should</c><00:00:52.000><c> be</c><00:00:52.239><c> able</c><00:00:52.480><c> to</c><00:00:52.800><c> implement</c>

00:00:53.189 --> 00:00:53.199 align:start position:0%
your goal should be able to implement
 

00:00:53.199 --> 00:00:55.830 align:start position:0%
your goal should be able to implement
binary<00:00:53.680><c> search</c><00:00:54.160><c> very</c><00:00:54.640><c> quickly</c><00:00:55.120><c> basically</c><00:00:55.680><c> as</c>

00:00:55.830 --> 00:00:55.840 align:start position:0%
binary search very quickly basically as
 

00:00:55.840 --> 00:00:57.750 align:start position:0%
binary search very quickly basically as
if<00:00:56.000><c> you</c><00:00:56.079><c> were</c><00:00:56.239><c> doing</c><00:00:56.480><c> it</c><00:00:56.640><c> in</c><00:00:56.719><c> your</c><00:00:57.039><c> sleep</c><00:00:57.520><c> so</c>

00:00:57.750 --> 00:00:57.760 align:start position:0%
if you were doing it in your sleep so
 

00:00:57.760 --> 00:00:59.510 align:start position:0%
if you were doing it in your sleep so
i'll<00:00:57.920><c> try</c><00:00:58.079><c> to</c><00:00:58.239><c> explain</c><00:00:58.640><c> this</c><00:00:58.879><c> quickly</c><00:00:59.280><c> but</c>

00:00:59.510 --> 00:00:59.520 align:start position:0%
i'll try to explain this quickly but
 

00:00:59.520 --> 00:01:02.389 align:start position:0%
i'll try to explain this quickly but
also<00:01:00.000><c> in</c><00:01:00.239><c> a</c><00:01:00.480><c> beginner-friendly</c><00:01:01.440><c> way</c><00:01:02.000><c> so</c><00:01:02.160><c> the</c>

00:01:02.389 --> 00:01:02.399 align:start position:0%
also in a beginner-friendly way so the
 

00:01:02.399 --> 00:01:05.189 align:start position:0%
also in a beginner-friendly way so the
input<00:01:02.719><c> array</c><00:01:03.120><c> is</c><00:01:03.280><c> sorted</c><00:01:04.000><c> the</c><00:01:04.239><c> target</c><00:01:04.640><c> value</c>

00:01:05.189 --> 00:01:05.199 align:start position:0%
input array is sorted the target value
 

00:01:05.199 --> 00:01:08.390 align:start position:0%
input array is sorted the target value
could<00:01:05.519><c> exist</c><00:01:06.240><c> anywhere</c><00:01:06.960><c> in</c><00:01:07.119><c> this</c><00:01:07.520><c> array</c><00:01:08.080><c> or</c><00:01:08.240><c> it</c>

00:01:08.390 --> 00:01:08.400 align:start position:0%
could exist anywhere in this array or it
 

00:01:08.400 --> 00:01:11.190 align:start position:0%
could exist anywhere in this array or it
might<00:01:08.720><c> not</c><00:01:08.960><c> exist</c><00:01:09.520><c> at</c><00:01:09.760><c> all</c><00:01:10.000><c> when</c><00:01:10.240><c> we</c><00:01:10.400><c> start</c><00:01:10.960><c> we</c>

00:01:11.190 --> 00:01:11.200 align:start position:0%
might not exist at all when we start we
 

00:01:11.200 --> 00:01:13.830 align:start position:0%
might not exist at all when we start we
are<00:01:11.360><c> considering</c><00:01:12.080><c> the</c><00:01:12.320><c> entire</c><00:01:13.040><c> input</c><00:01:13.360><c> array</c>

00:01:13.830 --> 00:01:13.840 align:start position:0%
are considering the entire input array
 

00:01:13.840 --> 00:01:15.270 align:start position:0%
are considering the entire input array
how<00:01:14.080><c> are</c><00:01:14.240><c> we</c><00:01:14.320><c> going</c><00:01:14.479><c> to</c><00:01:14.560><c> do</c><00:01:14.799><c> that</c><00:01:14.960><c> well</c><00:01:15.119><c> we're</c>

00:01:15.270 --> 00:01:15.280 align:start position:0%
how are we going to do that well we're
 

00:01:15.280 --> 00:01:17.590 align:start position:0%
how are we going to do that well we're
going<00:01:15.360><c> to</c><00:01:15.520><c> have</c><00:01:15.759><c> two</c><00:01:16.159><c> pointers</c><00:01:16.960><c> one</c><00:01:17.200><c> pointer</c>

00:01:17.590 --> 00:01:17.600 align:start position:0%
going to have two pointers one pointer
 

00:01:17.600 --> 00:01:20.469 align:start position:0%
going to have two pointers one pointer
is<00:01:17.759><c> going</c><00:01:18.000><c> to</c><00:01:18.240><c> be</c><00:01:18.640><c> at</c><00:01:18.880><c> the</c><00:01:19.280><c> leftmost</c><00:01:20.080><c> index</c>

00:01:20.469 --> 00:01:20.479 align:start position:0%
is going to be at the leftmost index
 

00:01:20.479 --> 00:01:22.710 align:start position:0%
is going to be at the leftmost index
which<00:01:20.720><c> is</c><00:01:20.799><c> initially</c><00:01:21.360><c> index</c><00:01:21.680><c> zero</c><00:01:22.400><c> another</c>

00:01:22.710 --> 00:01:22.720 align:start position:0%
which is initially index zero another
 

00:01:22.720 --> 00:01:24.390 align:start position:0%
which is initially index zero another
pointer<00:01:23.040><c> is</c><00:01:23.119><c> going</c><00:01:23.200><c> to</c><00:01:23.280><c> be</c><00:01:23.360><c> at</c><00:01:23.439><c> the</c><00:01:23.680><c> rightmost</c>

00:01:24.390 --> 00:01:24.400 align:start position:0%
pointer is going to be at the rightmost
 

00:01:24.400 --> 00:01:27.030 align:start position:0%
pointer is going to be at the rightmost
index<00:01:25.040><c> these</c><00:01:25.280><c> pointers</c><00:01:26.080><c> mean</c><00:01:26.479><c> that</c><00:01:26.720><c> we</c><00:01:26.880><c> are</c>

00:01:27.030 --> 00:01:27.040 align:start position:0%
index these pointers mean that we are
 

00:01:27.040 --> 00:01:29.910 align:start position:0%
index these pointers mean that we are
considering<00:01:27.680><c> the</c><00:01:27.920><c> entire</c><00:01:28.720><c> range</c><00:01:29.360><c> now</c><00:01:29.520><c> if</c><00:01:29.759><c> we</c>

00:01:29.910 --> 00:01:29.920 align:start position:0%
considering the entire range now if we
 

00:01:29.920 --> 00:01:33.190 align:start position:0%
considering the entire range now if we
could<00:01:30.320><c> only</c><00:01:30.880><c> look</c><00:01:31.200><c> at</c><00:01:31.520><c> one</c><00:01:31.759><c> of</c><00:01:31.920><c> these</c><00:01:32.320><c> values</c>

00:01:33.190 --> 00:01:33.200 align:start position:0%
could only look at one of these values
 

00:01:33.200 --> 00:01:35.109 align:start position:0%
could only look at one of these values
which<00:01:33.600><c> one</c><00:01:33.920><c> should</c><00:01:34.079><c> we</c><00:01:34.320><c> look</c><00:01:34.560><c> at</c><00:01:34.720><c> should</c><00:01:34.880><c> we</c>

00:01:35.109 --> 00:01:35.119 align:start position:0%
which one should we look at should we
 

00:01:35.119 --> 00:01:37.990 align:start position:0%
which one should we look at should we
look<00:01:35.439><c> at</c><00:01:35.680><c> the</c><00:01:35.920><c> leftmost</c><00:01:36.880><c> if</c><00:01:37.040><c> we</c><00:01:37.200><c> do</c><00:01:37.439><c> that</c><00:01:37.840><c> and</c>

00:01:37.990 --> 00:01:38.000 align:start position:0%
look at the leftmost if we do that and
 

00:01:38.000 --> 00:01:40.149 align:start position:0%
look at the leftmost if we do that and
we<00:01:38.159><c> see</c><00:01:38.320><c> that</c><00:01:38.560><c> it's</c><00:01:38.880><c> not</c><00:01:39.119><c> equal</c><00:01:39.360><c> to</c><00:01:39.520><c> the</c><00:01:39.680><c> target</c>

00:01:40.149 --> 00:01:40.159 align:start position:0%
we see that it's not equal to the target
 

00:01:40.159 --> 00:01:42.149 align:start position:0%
we see that it's not equal to the target
then<00:01:40.400><c> we've</c><00:01:40.799><c> only</c><00:01:41.200><c> eliminated</c><00:01:41.920><c> one</c>

00:01:42.149 --> 00:01:42.159 align:start position:0%
then we've only eliminated one
 

00:01:42.159 --> 00:01:44.149 align:start position:0%
then we've only eliminated one
possibility<00:01:42.880><c> and</c><00:01:42.960><c> we</c><00:01:43.119><c> still</c><00:01:43.360><c> have</c><00:01:43.439><c> to</c><00:01:43.680><c> search</c>

00:01:44.149 --> 00:01:44.159 align:start position:0%
possibility and we still have to search
 

00:01:44.159 --> 00:01:47.190 align:start position:0%
possibility and we still have to search
all<00:01:44.399><c> of</c><00:01:44.560><c> these</c><00:01:44.960><c> if</c><00:01:45.119><c> we</c><00:01:45.280><c> look</c><00:01:45.680><c> at</c><00:01:45.840><c> the</c><00:01:46.000><c> rightmost</c>

00:01:47.190 --> 00:01:47.200 align:start position:0%
all of these if we look at the rightmost
 

00:01:47.200 --> 00:01:49.109 align:start position:0%
all of these if we look at the rightmost
similarly<00:01:47.759><c> it's</c><00:01:48.000><c> not</c><00:01:48.240><c> the</c><00:01:48.399><c> target</c><00:01:48.720><c> so</c><00:01:48.880><c> we've</c>

00:01:49.109 --> 00:01:49.119 align:start position:0%
similarly it's not the target so we've
 

00:01:49.119 --> 00:01:51.030 align:start position:0%
similarly it's not the target so we've
only<00:01:49.360><c> eliminated</c><00:01:49.920><c> one</c><00:01:50.159><c> possibility</c><00:01:50.720><c> we</c><00:01:50.880><c> still</c>

00:01:51.030 --> 00:01:51.040 align:start position:0%
only eliminated one possibility we still
 

00:01:51.040 --> 00:01:52.710 align:start position:0%
only eliminated one possibility we still
have<00:01:51.119><c> to</c><00:01:51.280><c> look</c><00:01:51.439><c> at</c><00:01:51.520><c> the</c><00:01:51.680><c> rest</c><00:01:51.920><c> of</c><00:01:52.079><c> them</c><00:01:52.320><c> but</c><00:01:52.560><c> if</c>

00:01:52.710 --> 00:01:52.720 align:start position:0%
have to look at the rest of them but if
 

00:01:52.720 --> 00:01:54.710 align:start position:0%
have to look at the rest of them but if
we<00:01:52.960><c> look</c><00:01:53.280><c> at</c><00:01:53.439><c> the</c><00:01:53.759><c> midway</c><00:01:54.320><c> point</c><00:01:54.560><c> and</c>

00:01:54.710 --> 00:01:54.720 align:start position:0%
we look at the midway point and
 

00:01:54.720 --> 00:01:56.230 align:start position:0%
we look at the midway point and
technically<00:01:55.280><c> either</c><00:01:55.520><c> of</c><00:01:55.600><c> these</c><00:01:55.840><c> could</c><00:01:56.000><c> be</c><00:01:56.159><c> the</c>

00:01:56.230 --> 00:01:56.240 align:start position:0%
technically either of these could be the
 

00:01:56.240 --> 00:01:58.469 align:start position:0%
technically either of these could be the
midway<00:01:56.719><c> point</c><00:01:57.280><c> the</c><00:01:57.439><c> way</c><00:01:57.600><c> we</c><00:01:57.840><c> calculate</c><00:01:58.320><c> it</c>

00:01:58.469 --> 00:01:58.479 align:start position:0%
midway point the way we calculate it
 

00:01:58.479 --> 00:02:00.709 align:start position:0%
midway point the way we calculate it
though<00:01:58.719><c> is</c><00:01:58.880><c> going</c><00:01:59.040><c> to</c><00:01:59.200><c> be</c><00:01:59.520><c> literally</c><00:02:00.079><c> taking</c>

00:02:00.709 --> 00:02:00.719 align:start position:0%
though is going to be literally taking
 

00:02:00.719 --> 00:02:02.950 align:start position:0%
though is going to be literally taking
the<00:02:00.880><c> left</c><00:02:01.200><c> and</c><00:02:01.280><c> right</c><00:02:01.600><c> indexes</c><00:02:02.320><c> and</c><00:02:02.479><c> dividing</c>

00:02:02.950 --> 00:02:02.960 align:start position:0%
the left and right indexes and dividing
 

00:02:02.960 --> 00:02:04.950 align:start position:0%
the left and right indexes and dividing
them<00:02:03.119><c> by</c><00:02:03.360><c> two</c><00:02:03.759><c> which</c><00:02:04.000><c> i</c><00:02:04.079><c> think</c><00:02:04.320><c> will</c><00:02:04.479><c> lead</c><00:02:04.719><c> us</c>

00:02:04.950 --> 00:02:04.960 align:start position:0%
them by two which i think will lead us
 

00:02:04.960 --> 00:02:07.670 align:start position:0%
them by two which i think will lead us
to<00:02:05.520><c> this</c><00:02:05.840><c> position</c><00:02:06.399><c> but</c><00:02:06.640><c> approximately</c><00:02:07.520><c> the</c>

00:02:07.670 --> 00:02:07.680 align:start position:0%
to this position but approximately the
 

00:02:07.680 --> 00:02:10.469 align:start position:0%
to this position but approximately the
halfway<00:02:08.319><c> point</c><00:02:08.959><c> why</c><00:02:09.200><c> should</c><00:02:09.440><c> we</c><00:02:09.599><c> look</c><00:02:09.920><c> here</c>

00:02:10.469 --> 00:02:10.479 align:start position:0%
halfway point why should we look here
 

00:02:10.479 --> 00:02:12.470 align:start position:0%
halfway point why should we look here
well<00:02:10.640><c> we</c><00:02:10.800><c> can</c><00:02:11.039><c> compare</c><00:02:11.520><c> it</c><00:02:11.680><c> to</c><00:02:11.840><c> the</c><00:02:12.000><c> target</c>

00:02:12.470 --> 00:02:12.480 align:start position:0%
well we can compare it to the target
 

00:02:12.480 --> 00:02:14.869 align:start position:0%
well we can compare it to the target
it's<00:02:12.800><c> not</c><00:02:13.280><c> equal</c><00:02:13.680><c> to</c><00:02:13.840><c> the</c><00:02:14.000><c> target</c><00:02:14.560><c> so</c><00:02:14.720><c> what</c>

00:02:14.869 --> 00:02:14.879 align:start position:0%
it's not equal to the target so what
 

00:02:14.879 --> 00:02:16.470 align:start position:0%
it's not equal to the target so what
does<00:02:15.040><c> that</c><00:02:15.280><c> tell</c><00:02:15.520><c> us</c><00:02:15.599><c> have</c><00:02:15.760><c> we</c><00:02:16.080><c> only</c>

00:02:16.470 --> 00:02:16.480 align:start position:0%
does that tell us have we only
 

00:02:16.480 --> 00:02:19.430 align:start position:0%
does that tell us have we only
eliminated<00:02:17.200><c> one</c><00:02:17.520><c> possibility</c><00:02:18.560><c> no</c><00:02:19.040><c> because</c>

00:02:19.430 --> 00:02:19.440 align:start position:0%
eliminated one possibility no because
 

00:02:19.440 --> 00:02:23.110 align:start position:0%
eliminated one possibility no because
remember<00:02:20.160><c> the</c><00:02:20.480><c> input</c><00:02:20.959><c> array</c><00:02:21.520><c> is</c><00:02:21.840><c> sorted</c><00:02:22.480><c> so</c><00:02:22.800><c> if</c>

00:02:23.110 --> 00:02:23.120 align:start position:0%
remember the input array is sorted so if
 

00:02:23.120 --> 00:02:25.510 align:start position:0%
remember the input array is sorted so if
this<00:02:23.599><c> is</c><00:02:23.920><c> not</c><00:02:24.239><c> equal</c><00:02:24.480><c> to</c><00:02:24.640><c> the</c><00:02:24.800><c> target</c><00:02:25.360><c> we</c>

00:02:25.510 --> 00:02:25.520 align:start position:0%
this is not equal to the target we
 

00:02:25.520 --> 00:02:27.990 align:start position:0%
this is not equal to the target we
should<00:02:25.840><c> also</c><00:02:26.319><c> ask</c><00:02:26.800><c> is</c><00:02:26.959><c> it</c><00:02:27.200><c> smaller</c><00:02:27.680><c> than</c><00:02:27.840><c> the</c>

00:02:27.990 --> 00:02:28.000 align:start position:0%
should also ask is it smaller than the
 

00:02:28.000 --> 00:02:30.470 align:start position:0%
should also ask is it smaller than the
target<00:02:28.560><c> or</c><00:02:28.800><c> is</c><00:02:28.959><c> it</c><00:02:29.200><c> larger</c><00:02:29.599><c> than</c><00:02:29.760><c> the</c><00:02:29.920><c> target</c>

00:02:30.470 --> 00:02:30.480 align:start position:0%
target or is it larger than the target
 

00:02:30.480 --> 00:02:32.229 align:start position:0%
target or is it larger than the target
in<00:02:30.640><c> this</c><00:02:30.879><c> case</c><00:02:31.200><c> it's</c><00:02:31.519><c> smaller</c><00:02:31.920><c> than</c><00:02:32.080><c> the</c>

00:02:32.229 --> 00:02:32.239 align:start position:0%
in this case it's smaller than the
 

00:02:32.239 --> 00:02:34.550 align:start position:0%
in this case it's smaller than the
target<00:02:32.800><c> so</c><00:02:32.959><c> if</c><00:02:33.280><c> this</c><00:02:33.599><c> is</c><00:02:33.760><c> smaller</c><00:02:34.239><c> than</c><00:02:34.400><c> the</c>

00:02:34.550 --> 00:02:34.560 align:start position:0%
target so if this is smaller than the
 

00:02:34.560 --> 00:02:37.509 align:start position:0%
target so if this is smaller than the
target<00:02:35.120><c> then</c><00:02:35.680><c> everything</c><00:02:36.319><c> to</c><00:02:36.480><c> the</c><00:02:36.800><c> left</c><00:02:37.120><c> of</c><00:02:37.280><c> it</c>

00:02:37.509 --> 00:02:37.519 align:start position:0%
target then everything to the left of it
 

00:02:37.519 --> 00:02:40.070 align:start position:0%
target then everything to the left of it
is<00:02:37.920><c> also</c><00:02:38.480><c> going</c><00:02:38.800><c> to</c><00:02:38.959><c> be</c><00:02:39.200><c> smaller</c><00:02:39.680><c> than</c><00:02:39.920><c> the</c>

00:02:40.070 --> 00:02:40.080 align:start position:0%
is also going to be smaller than the
 

00:02:40.080 --> 00:02:42.229 align:start position:0%
is also going to be smaller than the
target<00:02:40.560><c> so</c><00:02:40.800><c> this</c><00:02:40.959><c> was</c><00:02:41.120><c> our</c><00:02:41.440><c> midway</c><00:02:41.920><c> point</c>

00:02:42.229 --> 00:02:42.239 align:start position:0%
target so this was our midway point
 

00:02:42.239 --> 00:02:45.110 align:start position:0%
target so this was our midway point
we'll<00:02:42.480><c> call</c><00:02:42.720><c> it</c><00:02:42.959><c> m</c><00:02:43.360><c> and</c><00:02:43.519><c> we</c><00:02:43.760><c> found</c><00:02:44.400><c> that</c><00:02:44.959><c> it's</c>

00:02:45.110 --> 00:02:45.120 align:start position:0%
we'll call it m and we found that it's
 

00:02:45.120 --> 00:02:46.949 align:start position:0%
we'll call it m and we found that it's
smaller<00:02:45.440><c> than</c><00:02:45.599><c> the</c><00:02:45.760><c> target</c><00:02:46.319><c> so</c><00:02:46.640><c> we</c><00:02:46.800><c> can</c>

00:02:46.949 --> 00:02:46.959 align:start position:0%
smaller than the target so we can
 

00:02:46.959 --> 00:02:49.670 align:start position:0%
smaller than the target so we can
eliminate<00:02:47.519><c> these</c><00:02:48.319><c> three</c><00:02:48.959><c> values</c><00:02:49.440><c> from</c>

00:02:49.670 --> 00:02:49.680 align:start position:0%
eliminate these three values from
 

00:02:49.680 --> 00:02:51.990 align:start position:0%
eliminate these three values from
consideration<00:02:50.560><c> everything</c><00:02:51.120><c> over</c><00:02:51.360><c> here</c><00:02:51.760><c> how</c>

00:02:51.990 --> 00:02:52.000 align:start position:0%
consideration everything over here how
 

00:02:52.000 --> 00:02:53.750 align:start position:0%
consideration everything over here how
are<00:02:52.160><c> we</c><00:02:52.239><c> gonna</c><00:02:52.560><c> you</c><00:02:52.720><c> know</c><00:02:52.879><c> represent</c><00:02:53.360><c> that</c><00:02:53.599><c> in</c>

00:02:53.750 --> 00:02:53.760 align:start position:0%
are we gonna you know represent that in
 

00:02:53.760 --> 00:02:55.750 align:start position:0%
are we gonna you know represent that in
code<00:02:54.319><c> well</c><00:02:54.480><c> we're</c><00:02:54.640><c> gonna</c><00:02:54.879><c> take</c><00:02:55.120><c> this</c><00:02:55.440><c> left</c>

00:02:55.750 --> 00:02:55.760 align:start position:0%
code well we're gonna take this left
 

00:02:55.760 --> 00:02:58.470 align:start position:0%
code well we're gonna take this left
pointer<00:02:56.160><c> and</c><00:02:56.239><c> then</c><00:02:56.480><c> shift</c><00:02:56.879><c> it</c><00:02:57.200><c> to</c><00:02:57.440><c> be</c><00:02:57.760><c> m</c>

00:02:58.470 --> 00:02:58.480 align:start position:0%
pointer and then shift it to be m
 

00:02:58.480 --> 00:03:01.270 align:start position:0%
pointer and then shift it to be m
plus<00:02:59.120><c> one</c><00:02:59.680><c> so</c><00:02:59.920><c> now</c><00:03:00.239><c> our</c><00:03:00.480><c> left</c><00:03:00.720><c> pointer</c><00:03:01.200><c> is</c>

00:03:01.270 --> 00:03:01.280 align:start position:0%
plus one so now our left pointer is
 

00:03:01.280 --> 00:03:03.670 align:start position:0%
plus one so now our left pointer is
gonna<00:03:01.519><c> be</c><00:03:01.760><c> over</c><00:03:02.000><c> here</c><00:03:02.560><c> this</c><00:03:02.800><c> represents</c>

00:03:03.670 --> 00:03:03.680 align:start position:0%
gonna be over here this represents
 

00:03:03.680 --> 00:03:05.830 align:start position:0%
gonna be over here this represents
possible<00:03:04.239><c> range</c><00:03:04.640><c> of</c><00:03:04.800><c> solutions</c><00:03:05.440><c> is</c><00:03:05.599><c> going</c><00:03:05.680><c> to</c>

00:03:05.830 --> 00:03:05.840 align:start position:0%
possible range of solutions is going to
 

00:03:05.840 --> 00:03:08.390 align:start position:0%
possible range of solutions is going to
lie<00:03:06.159><c> within</c><00:03:06.640><c> you</c><00:03:06.800><c> know</c><00:03:06.959><c> these</c><00:03:07.280><c> two</c><00:03:07.599><c> pointers</c>

00:03:08.390 --> 00:03:08.400 align:start position:0%
lie within you know these two pointers
 

00:03:08.400 --> 00:03:10.309 align:start position:0%
lie within you know these two pointers
so<00:03:08.879><c> at</c><00:03:09.040><c> this</c><00:03:09.280><c> point</c><00:03:09.599><c> we're</c><00:03:09.760><c> just</c><00:03:10.000><c> going</c><00:03:10.159><c> to</c>

00:03:10.309 --> 00:03:10.319 align:start position:0%
so at this point we're just going to
 

00:03:10.319 --> 00:03:12.390 align:start position:0%
so at this point we're just going to
repeat<00:03:10.879><c> the</c><00:03:11.040><c> algorithm</c><00:03:11.680><c> repeat</c><00:03:12.080><c> what</c><00:03:12.239><c> i</c>

00:03:12.390 --> 00:03:12.400 align:start position:0%
repeat the algorithm repeat what i
 

00:03:12.400 --> 00:03:14.550 align:start position:0%
repeat the algorithm repeat what i
pretty<00:03:12.720><c> much</c><00:03:12.959><c> just</c><00:03:13.280><c> did</c><00:03:13.840><c> now</c><00:03:14.080><c> if</c><00:03:14.159><c> we</c><00:03:14.319><c> take</c>

00:03:14.550 --> 00:03:14.560 align:start position:0%
pretty much just did now if we take
 

00:03:14.560 --> 00:03:16.710 align:start position:0%
pretty much just did now if we take
these<00:03:14.879><c> two</c><00:03:15.360><c> add</c><00:03:15.599><c> them</c><00:03:15.840><c> together</c><00:03:16.159><c> divide</c><00:03:16.560><c> by</c>

00:03:16.710 --> 00:03:16.720 align:start position:0%
these two add them together divide by
 

00:03:16.720 --> 00:03:19.190 align:start position:0%
these two add them together divide by
two<00:03:17.120><c> the</c><00:03:17.280><c> middle</c><00:03:17.599><c> is</c><00:03:17.760><c> going</c><00:03:17.840><c> to</c><00:03:18.000><c> be</c><00:03:18.239><c> over</c><00:03:18.640><c> here</c>

00:03:19.190 --> 00:03:19.200 align:start position:0%
two the middle is going to be over here
 

00:03:19.200 --> 00:03:20.790 align:start position:0%
two the middle is going to be over here
so<00:03:19.360><c> then</c><00:03:19.519><c> we're</c><00:03:19.680><c> going</c><00:03:19.760><c> to</c><00:03:20.000><c> check</c><00:03:20.319><c> is</c><00:03:20.480><c> this</c>

00:03:20.790 --> 00:03:20.800 align:start position:0%
so then we're going to check is this
 

00:03:20.800 --> 00:03:22.149 align:start position:0%
so then we're going to check is this
equal<00:03:21.040><c> to</c><00:03:21.200><c> the</c><00:03:21.280><c> target</c><00:03:21.599><c> that</c><00:03:21.760><c> we're</c><00:03:21.920><c> looking</c>

00:03:22.149 --> 00:03:22.159 align:start position:0%
equal to the target that we're looking
 

00:03:22.159 --> 00:03:25.110 align:start position:0%
equal to the target that we're looking
for<00:03:22.480><c> in</c><00:03:22.640><c> this</c><00:03:22.879><c> case</c><00:03:23.440><c> yes</c><00:03:23.680><c> it</c><00:03:23.920><c> is</c><00:03:24.159><c> so</c><00:03:24.480><c> now</c><00:03:24.720><c> we</c><00:03:24.879><c> can</c>

00:03:25.110 --> 00:03:25.120 align:start position:0%
for in this case yes it is so now we can
 

00:03:25.120 --> 00:03:27.430 align:start position:0%
for in this case yes it is so now we can
return<00:03:25.760><c> the</c><00:03:26.080><c> index</c><00:03:26.720><c> because</c><00:03:26.959><c> that's</c><00:03:27.120><c> what</c><00:03:27.280><c> we</c>

00:03:27.430 --> 00:03:27.440 align:start position:0%
return the index because that's what we
 

00:03:27.440 --> 00:03:29.270 align:start position:0%
return the index because that's what we
were<00:03:27.599><c> trying</c><00:03:27.760><c> to</c><00:03:27.840><c> do</c><00:03:28.080><c> we</c><00:03:28.239><c> can</c><00:03:28.400><c> return</c><00:03:29.040><c> m</c>

00:03:29.270 --> 00:03:29.280 align:start position:0%
were trying to do we can return m
 

00:03:29.280 --> 00:03:30.710 align:start position:0%
were trying to do we can return m
whatever<00:03:29.680><c> it</c><00:03:29.760><c> happened</c><00:03:30.000><c> to</c><00:03:30.080><c> be</c><00:03:30.239><c> i</c><00:03:30.319><c> think</c><00:03:30.480><c> it's</c>

00:03:30.710 --> 00:03:30.720 align:start position:0%
whatever it happened to be i think it's
 

00:03:30.720 --> 00:03:33.270 align:start position:0%
whatever it happened to be i think it's
4<00:03:31.040><c> in</c><00:03:31.120><c> this</c><00:03:31.360><c> case</c><00:03:31.760><c> so</c><00:03:32.080><c> that</c><00:03:32.400><c> is</c><00:03:32.799><c> pretty</c><00:03:33.040><c> much</c>

00:03:33.270 --> 00:03:33.280 align:start position:0%
4 in this case so that is pretty much
 

00:03:33.280 --> 00:03:36.470 align:start position:0%
4 in this case so that is pretty much
the<00:03:33.680><c> idea</c><00:03:34.080><c> of</c><00:03:34.239><c> binary</c><00:03:34.720><c> search</c><00:03:35.200><c> okay</c><00:03:35.519><c> so</c><00:03:35.840><c> now</c>

00:03:36.470 --> 00:03:36.480 align:start position:0%
the idea of binary search okay so now
 

00:03:36.480 --> 00:03:38.710 align:start position:0%
the idea of binary search okay so now
the<00:03:36.720><c> time</c><00:03:37.040><c> complexity</c><00:03:37.920><c> if</c><00:03:38.000><c> you</c><00:03:38.159><c> know</c><00:03:38.319><c> binary</c>

00:03:38.710 --> 00:03:38.720 align:start position:0%
the time complexity if you know binary
 

00:03:38.720 --> 00:03:40.470 align:start position:0%
the time complexity if you know binary
search<00:03:39.040><c> you</c><00:03:39.200><c> already</c><00:03:39.519><c> know</c><00:03:39.680><c> that</c><00:03:39.920><c> it</c><00:03:40.000><c> runs</c><00:03:40.319><c> in</c>

00:03:40.470 --> 00:03:40.480 align:start position:0%
search you already know that it runs in
 

00:03:40.480 --> 00:03:42.789 align:start position:0%
search you already know that it runs in
log<00:03:40.799><c> in</c><00:03:40.959><c> time</c><00:03:41.280><c> but</c><00:03:41.440><c> let's</c><00:03:41.680><c> quickly</c><00:03:42.080><c> understand</c>

00:03:42.789 --> 00:03:42.799 align:start position:0%
log in time but let's quickly understand
 

00:03:42.799 --> 00:03:44.550 align:start position:0%
log in time but let's quickly understand
why<00:03:43.280><c> so</c><00:03:43.440><c> we're</c><00:03:43.599><c> not</c><00:03:43.760><c> considering</c><00:03:44.319><c> this</c>

00:03:44.550 --> 00:03:44.560 align:start position:0%
why so we're not considering this
 

00:03:44.560 --> 00:03:47.110 align:start position:0%
why so we're not considering this
example<00:03:44.959><c> anymore</c><00:03:45.280><c> but</c><00:03:45.519><c> suppose</c><00:03:45.920><c> we</c><00:03:46.080><c> had</c><00:03:46.480><c> 16</c>

00:03:47.110 --> 00:03:47.120 align:start position:0%
example anymore but suppose we had 16
 

00:03:47.120 --> 00:03:49.830 align:start position:0%
example anymore but suppose we had 16
values<00:03:47.599><c> in</c><00:03:47.680><c> the</c><00:03:47.840><c> input</c><00:03:48.239><c> array</c><00:03:48.879><c> every</c><00:03:49.360><c> time</c><00:03:49.680><c> we</c>

00:03:49.830 --> 00:03:49.840 align:start position:0%
values in the input array every time we
 

00:03:49.840 --> 00:03:53.110 align:start position:0%
values in the input array every time we
go<00:03:50.159><c> to</c><00:03:50.319><c> the</c><00:03:50.560><c> midway</c><00:03:51.120><c> point</c><00:03:51.519><c> we</c><00:03:51.760><c> either</c><00:03:52.560><c> find</c>

00:03:53.110 --> 00:03:53.120 align:start position:0%
go to the midway point we either find
 

00:03:53.120 --> 00:03:55.350 align:start position:0%
go to the midway point we either find
the<00:03:53.360><c> target</c><00:03:54.159><c> but</c><00:03:54.400><c> if</c><00:03:54.480><c> we</c><00:03:54.720><c> don't</c><00:03:54.959><c> find</c><00:03:55.200><c> the</c>

00:03:55.350 --> 00:03:55.360 align:start position:0%
the target but if we don't find the
 

00:03:55.360 --> 00:03:56.949 align:start position:0%
the target but if we don't find the
target<00:03:55.680><c> we</c><00:03:55.840><c> know</c><00:03:56.000><c> we're</c><00:03:56.239><c> at</c><00:03:56.319><c> least</c><00:03:56.640><c> going</c><00:03:56.799><c> to</c>

00:03:56.949 --> 00:03:56.959 align:start position:0%
target we know we're at least going to
 

00:03:56.959 --> 00:04:00.149 align:start position:0%
target we know we're at least going to
eliminate<00:03:57.840><c> half</c><00:03:58.319><c> of</c><00:03:58.480><c> the</c><00:03:58.720><c> possibilities</c><00:03:59.680><c> so</c>

00:04:00.149 --> 00:04:00.159 align:start position:0%
eliminate half of the possibilities so
 

00:04:00.159 --> 00:04:02.229 align:start position:0%
eliminate half of the possibilities so
we<00:04:00.319><c> would</c><00:04:00.560><c> eliminate</c><00:04:01.040><c> this</c><00:04:01.280><c> down</c><00:04:01.519><c> to</c><00:04:01.840><c> a</c><00:04:02.080><c> now</c>

00:04:02.229 --> 00:04:02.239 align:start position:0%
we would eliminate this down to a now
 

00:04:02.239 --> 00:04:04.229 align:start position:0%
we would eliminate this down to a now
we're<00:04:02.400><c> only</c><00:04:02.640><c> looking</c><00:04:02.959><c> at</c><00:04:03.120><c> eight</c><00:04:03.439><c> values</c><00:04:04.000><c> we</c>

00:04:04.229 --> 00:04:04.239 align:start position:0%
we're only looking at eight values we
 

00:04:04.239 --> 00:04:06.149 align:start position:0%
we're only looking at eight values we
still<00:04:04.480><c> don't</c><00:04:04.640><c> find</c><00:04:04.879><c> the</c><00:04:05.040><c> result</c><00:04:05.599><c> we</c><00:04:05.840><c> keep</c>

00:04:06.149 --> 00:04:06.159 align:start position:0%
still don't find the result we keep
 

00:04:06.159 --> 00:04:09.190 align:start position:0%
still don't find the result we keep
dividing<00:04:06.640><c> it</c><00:04:06.720><c> by</c><00:04:07.040><c> two</c><00:04:07.599><c> make</c><00:04:07.840><c> it</c><00:04:08.000><c> two</c><00:04:08.560><c> remaining</c>

00:04:09.190 --> 00:04:09.200 align:start position:0%
dividing it by two make it two remaining
 

00:04:09.200 --> 00:04:11.990 align:start position:0%
dividing it by two make it two remaining
and<00:04:09.360><c> then</c><00:04:09.920><c> finally</c><00:04:10.640><c> there</c><00:04:10.799><c> would</c><00:04:10.959><c> only</c><00:04:11.280><c> be</c>

00:04:11.990 --> 00:04:12.000 align:start position:0%
and then finally there would only be
 

00:04:12.000 --> 00:04:15.030 align:start position:0%
and then finally there would only be
one<00:04:12.799><c> value</c><00:04:13.360><c> remaining</c><00:04:14.239><c> and</c><00:04:14.400><c> either</c><00:04:14.720><c> that's</c>

00:04:15.030 --> 00:04:15.040 align:start position:0%
one value remaining and either that's
 

00:04:15.040 --> 00:04:16.949 align:start position:0%
one value remaining and either that's
going<00:04:15.200><c> to</c><00:04:15.360><c> be</c><00:04:15.599><c> the</c><00:04:15.760><c> target</c><00:04:16.160><c> or</c><00:04:16.320><c> it's</c><00:04:16.560><c> not</c><00:04:16.799><c> going</c>

00:04:16.949 --> 00:04:16.959 align:start position:0%
going to be the target or it's not going
 

00:04:16.959 --> 00:04:18.629 align:start position:0%
going to be the target or it's not going
to<00:04:17.120><c> be</c><00:04:17.280><c> the</c><00:04:17.359><c> target</c><00:04:17.759><c> and</c><00:04:17.840><c> then</c><00:04:18.239><c> we're</c><00:04:18.479><c> pretty</c>

00:04:18.629 --> 00:04:18.639 align:start position:0%
to be the target and then we're pretty
 

00:04:18.639 --> 00:04:20.789 align:start position:0%
to be the target and then we're pretty
much<00:04:18.959><c> done</c><00:04:19.199><c> with</c><00:04:19.359><c> the</c><00:04:19.600><c> algorithm</c><00:04:20.160><c> anyway</c><00:04:20.639><c> so</c>

00:04:20.789 --> 00:04:20.799 align:start position:0%
much done with the algorithm anyway so
 

00:04:20.799 --> 00:04:23.830 align:start position:0%
much done with the algorithm anyway so
the<00:04:21.040><c> question</c><00:04:21.600><c> is</c><00:04:22.079><c> if</c><00:04:22.240><c> we</c><00:04:22.400><c> have</c><00:04:22.720><c> a</c><00:04:23.040><c> while</c><00:04:23.440><c> loop</c>

00:04:23.830 --> 00:04:23.840 align:start position:0%
the question is if we have a while loop
 

00:04:23.840 --> 00:04:26.390 align:start position:0%
the question is if we have a while loop
the<00:04:24.080><c> while</c><00:04:24.400><c> loop</c><00:04:24.720><c> is</c><00:04:24.800><c> going</c><00:04:24.960><c> to</c><00:04:25.199><c> run</c><00:04:25.680><c> as</c><00:04:26.000><c> many</c>

00:04:26.390 --> 00:04:26.400 align:start position:0%
the while loop is going to run as many
 

00:04:26.400 --> 00:04:29.670 align:start position:0%
the while loop is going to run as many
times<00:04:26.720><c> as</c><00:04:26.960><c> we</c><00:04:27.040><c> can</c><00:04:27.199><c> divide</c><00:04:27.919><c> the</c><00:04:28.240><c> length</c><00:04:29.040><c> of</c><00:04:29.280><c> the</c>

00:04:29.670 --> 00:04:29.680 align:start position:0%
times as we can divide the length of the
 

00:04:29.680 --> 00:04:32.710 align:start position:0%
times as we can divide the length of the
input<00:04:30.080><c> array</c><00:04:30.720><c> by</c><00:04:31.120><c> two</c><00:04:31.600><c> how</c><00:04:31.840><c> many</c><00:04:32.160><c> times</c><00:04:32.400><c> can</c><00:04:32.639><c> we</c>

00:04:32.710 --> 00:04:32.720 align:start position:0%
input array by two how many times can we
 

00:04:32.720 --> 00:04:34.870 align:start position:0%
input array by two how many times can we
divide<00:04:33.120><c> it</c><00:04:33.280><c> by</c><00:04:33.520><c> two</c><00:04:33.919><c> well</c><00:04:34.160><c> if</c><00:04:34.240><c> you</c><00:04:34.400><c> remember</c>

00:04:34.870 --> 00:04:34.880 align:start position:0%
divide it by two well if you remember
 

00:04:34.880 --> 00:04:37.430 align:start position:0%
divide it by two well if you remember
from<00:04:35.040><c> your</c><00:04:35.199><c> math</c><00:04:35.520><c> class</c><00:04:36.160><c> that</c><00:04:36.720><c> is</c><00:04:36.960><c> a</c><00:04:37.120><c> math</c>

00:04:37.430 --> 00:04:37.440 align:start position:0%
from your math class that is a math
 

00:04:37.440 --> 00:04:41.909 align:start position:0%
from your math class that is a math
equation<00:04:37.919><c> called</c><00:04:38.560><c> log</c><00:04:39.360><c> base</c><00:04:40.160><c> two</c><00:04:40.639><c> of</c><00:04:40.960><c> n</c><00:04:41.520><c> this</c>

00:04:41.909 --> 00:04:41.919 align:start position:0%
equation called log base two of n this
 

00:04:41.919 --> 00:04:44.310 align:start position:0%
equation called log base two of n this
evaluates<00:04:42.800><c> to</c><00:04:43.120><c> how</c><00:04:43.280><c> many</c><00:04:43.600><c> times</c><00:04:43.919><c> can</c><00:04:44.080><c> we</c>

00:04:44.310 --> 00:04:44.320 align:start position:0%
evaluates to how many times can we
 

00:04:44.320 --> 00:04:47.990 align:start position:0%
evaluates to how many times can we
divide<00:04:45.360><c> n</c><00:04:46.000><c> by</c><00:04:46.479><c> 2.</c><00:04:47.040><c> and</c><00:04:47.199><c> you</c><00:04:47.280><c> know</c><00:04:47.440><c> suppose</c><00:04:47.840><c> it</c>

00:04:47.990 --> 00:04:48.000 align:start position:0%
divide n by 2. and you know suppose it
 

00:04:48.000 --> 00:04:50.390 align:start position:0%
divide n by 2. and you know suppose it
evaluates<00:04:48.560><c> to</c><00:04:48.720><c> be</c><00:04:48.960><c> x</c><00:04:49.520><c> that's</c><00:04:49.759><c> equivalent</c><00:04:50.240><c> to</c>

00:04:50.390 --> 00:04:50.400 align:start position:0%
evaluates to be x that's equivalent to
 

00:04:50.400 --> 00:04:52.310 align:start position:0%
evaluates to be x that's equivalent to
saying<00:04:50.639><c> that</c><00:04:50.800><c> 2</c><00:04:51.040><c> to</c><00:04:51.199><c> the</c><00:04:51.360><c> power</c><00:04:51.600><c> of</c><00:04:51.840><c> x</c><00:04:52.080><c> is</c><00:04:52.160><c> going</c>

00:04:52.310 --> 00:04:52.320 align:start position:0%
saying that 2 to the power of x is going
 

00:04:52.320 --> 00:04:53.990 align:start position:0%
saying that 2 to the power of x is going
to<00:04:52.400><c> be</c><00:04:52.560><c> equal</c><00:04:52.800><c> to</c><00:04:52.960><c> n</c><00:04:53.199><c> okay</c><00:04:53.360><c> but</c><00:04:53.520><c> this</c><00:04:53.759><c> is</c><00:04:53.840><c> too</c>

00:04:53.990 --> 00:04:54.000 align:start position:0%
to be equal to n okay but this is too
 

00:04:54.000 --> 00:04:55.749 align:start position:0%
to be equal to n okay but this is too
much<00:04:54.160><c> math</c><00:04:54.479><c> maybe</c><00:04:54.720><c> you</c><00:04:54.800><c> don't</c><00:04:55.040><c> even</c><00:04:55.280><c> care</c><00:04:55.600><c> but</c>

00:04:55.749 --> 00:04:55.759 align:start position:0%
much math maybe you don't even care but
 

00:04:55.759 --> 00:04:58.070 align:start position:0%
much math maybe you don't even care but
that's<00:04:56.240><c> pretty</c><00:04:56.400><c> much</c><00:04:56.639><c> the</c><00:04:56.800><c> idea</c><00:04:57.120><c> that's</c><00:04:57.520><c> why</c>

00:04:58.070 --> 00:04:58.080 align:start position:0%
that's pretty much the idea that's why
 

00:04:58.080 --> 00:05:00.629 align:start position:0%
that's pretty much the idea that's why
our<00:04:58.320><c> loop</c><00:04:58.639><c> is</c><00:04:58.800><c> going</c><00:04:58.880><c> to</c><00:04:58.960><c> run</c><00:04:59.440><c> x</c><00:04:59.759><c> times</c><00:05:00.400><c> which</c>

00:05:00.629 --> 00:05:00.639 align:start position:0%
our loop is going to run x times which
 

00:05:00.639 --> 00:05:02.710 align:start position:0%
our loop is going to run x times which
is<00:05:00.720><c> going</c><00:05:00.880><c> to</c><00:05:00.960><c> be</c><00:05:01.120><c> equal</c><00:05:01.440><c> to</c><00:05:01.680><c> log</c><00:05:02.160><c> n</c><00:05:02.400><c> so</c><00:05:02.560><c> it's</c>

00:05:02.710 --> 00:05:02.720 align:start position:0%
is going to be equal to log n so it's
 

00:05:02.720 --> 00:05:05.430 align:start position:0%
is going to be equal to log n so it's
not<00:05:02.960><c> a</c><00:05:03.120><c> big</c><00:05:03.360><c> o</c><00:05:03.520><c> of</c><00:05:03.759><c> n</c><00:05:04.000><c> algorithm</c><00:05:04.560><c> it's</c><00:05:04.720><c> a</c><00:05:05.039><c> log</c>

00:05:05.430 --> 00:05:05.440 align:start position:0%
not a big o of n algorithm it's a log
 

00:05:05.440 --> 00:05:09.350 align:start position:0%
not a big o of n algorithm it's a log
base<00:05:05.919><c> 2</c><00:05:06.639><c> n</c><00:05:07.199><c> algorithm</c><00:05:08.000><c> which</c><00:05:08.240><c> is</c><00:05:08.560><c> much</c><00:05:09.039><c> much</c>

00:05:09.350 --> 00:05:09.360 align:start position:0%
base 2 n algorithm which is much much
 

00:05:09.360 --> 00:05:10.550 align:start position:0%
base 2 n algorithm which is much much
more<00:05:09.600><c> efficient</c>

00:05:10.550 --> 00:05:10.560 align:start position:0%
more efficient
 

00:05:10.560 --> 00:05:13.270 align:start position:0%
more efficient
okay<00:05:10.880><c> so</c><00:05:11.120><c> now</c><00:05:11.360><c> let's</c><00:05:11.600><c> code</c><00:05:11.840><c> it</c><00:05:12.000><c> up</c><00:05:12.400><c> and</c><00:05:12.880><c> like</c><00:05:13.120><c> i</c>

00:05:13.270 --> 00:05:13.280 align:start position:0%
okay so now let's code it up and like i
 

00:05:13.280 --> 00:05:14.870 align:start position:0%
okay so now let's code it up and like i
did<00:05:13.600><c> in</c><00:05:13.680><c> the</c><00:05:13.840><c> drawing</c><00:05:14.240><c> initially</c><00:05:14.720><c> we're</c>

00:05:14.870 --> 00:05:14.880 align:start position:0%
did in the drawing initially we're
 

00:05:14.880 --> 00:05:18.070 align:start position:0%
did in the drawing initially we're
considering<00:05:15.520><c> the</c><00:05:15.759><c> entire</c><00:05:16.720><c> input</c><00:05:17.120><c> array</c><00:05:17.840><c> as</c>

00:05:18.070 --> 00:05:18.080 align:start position:0%
considering the entire input array as
 

00:05:18.080 --> 00:05:20.550 align:start position:0%
considering the entire input array as
our<00:05:18.320><c> search</c><00:05:18.880><c> area</c><00:05:19.280><c> so</c><00:05:19.680><c> our</c><00:05:19.919><c> left</c><00:05:20.160><c> pointer</c><00:05:20.479><c> is</c>

00:05:20.550 --> 00:05:20.560 align:start position:0%
our search area so our left pointer is
 

00:05:20.560 --> 00:05:22.230 align:start position:0%
our search area so our left pointer is
going<00:05:20.639><c> to</c><00:05:20.720><c> be</c><00:05:20.880><c> at</c><00:05:21.039><c> zero</c><00:05:21.440><c> our</c><00:05:21.600><c> right</c><00:05:21.840><c> pointer</c><00:05:22.160><c> is</c>

00:05:22.230 --> 00:05:22.240 align:start position:0%
going to be at zero our right pointer is
 

00:05:22.240 --> 00:05:24.070 align:start position:0%
going to be at zero our right pointer is
going<00:05:22.320><c> to</c><00:05:22.400><c> be</c><00:05:22.560><c> at</c><00:05:22.639><c> the</c><00:05:22.880><c> last</c><00:05:23.280><c> index</c><00:05:23.759><c> which</c><00:05:24.000><c> is</c>

00:05:24.070 --> 00:05:24.080 align:start position:0%
going to be at the last index which is
 

00:05:24.080 --> 00:05:26.550 align:start position:0%
going to be at the last index which is
just<00:05:24.320><c> the</c><00:05:24.479><c> length</c><00:05:24.800><c> of</c><00:05:24.880><c> the</c><00:05:25.039><c> array</c><00:05:25.600><c> minus</c><00:05:26.080><c> 1.</c>

00:05:26.550 --> 00:05:26.560 align:start position:0%
just the length of the array minus 1.
 

00:05:26.560 --> 00:05:28.950 align:start position:0%
just the length of the array minus 1.
now<00:05:26.800><c> we</c><00:05:26.960><c> want</c><00:05:27.120><c> to</c><00:05:27.199><c> continue</c><00:05:27.680><c> going</c><00:05:28.320><c> until</c>

00:05:28.950 --> 00:05:28.960 align:start position:0%
now we want to continue going until
 

00:05:28.960 --> 00:05:31.430 align:start position:0%
now we want to continue going until
there's<00:05:29.280><c> no</c><00:05:29.520><c> more</c><00:05:29.759><c> possibilities</c><00:05:30.720><c> left</c><00:05:31.039><c> or</c><00:05:31.199><c> we</c>

00:05:31.430 --> 00:05:31.440 align:start position:0%
there's no more possibilities left or we
 

00:05:31.440 --> 00:05:33.510 align:start position:0%
there's no more possibilities left or we
have<00:05:31.600><c> maybe</c><00:05:31.919><c> found</c><00:05:32.160><c> the</c><00:05:32.240><c> result</c><00:05:32.880><c> so</c><00:05:33.199><c> the</c><00:05:33.360><c> way</c>

00:05:33.510 --> 00:05:33.520 align:start position:0%
have maybe found the result so the way
 

00:05:33.520 --> 00:05:35.189 align:start position:0%
have maybe found the result so the way
to<00:05:33.680><c> do</c><00:05:33.840><c> that</c><00:05:34.080><c> is</c><00:05:34.240><c> to</c><00:05:34.400><c> basically</c><00:05:34.800><c> say</c><00:05:35.039><c> that</c>

00:05:35.189 --> 00:05:35.199 align:start position:0%
to do that is to basically say that
 

00:05:35.199 --> 00:05:37.749 align:start position:0%
to do that is to basically say that
while<00:05:35.520><c> our</c><00:05:35.759><c> left</c><00:05:36.000><c> pointer</c><00:05:36.639><c> is</c><00:05:36.880><c> less</c><00:05:37.120><c> than</c><00:05:37.440><c> or</c>

00:05:37.749 --> 00:05:37.759 align:start position:0%
while our left pointer is less than or
 

00:05:37.759 --> 00:05:40.230 align:start position:0%
while our left pointer is less than or
equal<00:05:38.400><c> to</c><00:05:38.800><c> our</c><00:05:39.039><c> right</c><00:05:39.360><c> pointer</c><00:05:39.840><c> because</c><00:05:40.080><c> i</c>

00:05:40.230 --> 00:05:40.240 align:start position:0%
equal to our right pointer because i
 

00:05:40.240 --> 00:05:41.670 align:start position:0%
equal to our right pointer because i
didn't<00:05:40.560><c> show</c><00:05:40.720><c> it</c><00:05:40.880><c> in</c><00:05:40.960><c> the</c><00:05:41.039><c> drawing</c><00:05:41.440><c> picture</c>

00:05:41.670 --> 00:05:41.680 align:start position:0%
didn't show it in the drawing picture
 

00:05:41.680 --> 00:05:43.830 align:start position:0%
didn't show it in the drawing picture
but<00:05:41.840><c> suppose</c><00:05:42.240><c> we</c><00:05:42.400><c> just</c><00:05:42.639><c> had</c><00:05:42.960><c> a</c><00:05:43.199><c> very</c><00:05:43.520><c> small</c>

00:05:43.830 --> 00:05:43.840 align:start position:0%
but suppose we just had a very small
 

00:05:43.840 --> 00:05:45.350 align:start position:0%
but suppose we just had a very small
input<00:05:44.160><c> array</c><00:05:44.479><c> just</c><00:05:44.639><c> to</c><00:05:44.800><c> illustrate</c><00:05:45.199><c> the</c>

00:05:45.350 --> 00:05:45.360 align:start position:0%
input array just to illustrate the
 

00:05:45.360 --> 00:05:47.189 align:start position:0%
input array just to illustrate the
example<00:05:45.840><c> our</c><00:05:46.080><c> left</c><00:05:46.320><c> and</c><00:05:46.400><c> right</c><00:05:46.639><c> pointers</c>

00:05:47.189 --> 00:05:47.199 align:start position:0%
example our left and right pointers
 

00:05:47.199 --> 00:05:49.830 align:start position:0%
example our left and right pointers
would<00:05:47.440><c> both</c><00:05:47.840><c> point</c><00:05:48.160><c> here</c><00:05:48.560><c> our</c><00:05:48.880><c> midpointer</c>

00:05:49.830 --> 00:05:49.840 align:start position:0%
would both point here our midpointer
 

00:05:49.840 --> 00:05:52.870 align:start position:0%
would both point here our midpointer
would<00:05:50.160><c> also</c><00:05:50.639><c> point</c><00:05:51.039><c> here</c><00:05:51.440><c> but</c><00:05:51.759><c> suppose</c><00:05:52.479><c> our</c>

00:05:52.870 --> 00:05:52.880 align:start position:0%
would also point here but suppose our
 

00:05:52.880 --> 00:05:55.749 align:start position:0%
would also point here but suppose our
target<00:05:53.680><c> is</c><00:05:53.919><c> actually</c><00:05:54.400><c> equal</c><00:05:54.880><c> to</c><00:05:55.120><c> two</c><00:05:55.520><c> okay</c>

00:05:55.749 --> 00:05:55.759 align:start position:0%
target is actually equal to two okay
 

00:05:55.759 --> 00:05:58.070 align:start position:0%
target is actually equal to two okay
we'd<00:05:56.000><c> say</c><00:05:56.240><c> okay</c><00:05:56.560><c> this</c><00:05:56.880><c> is</c><00:05:57.120><c> too</c><00:05:57.440><c> small</c><00:05:57.759><c> for</c><00:05:57.919><c> our</c>

00:05:58.070 --> 00:05:58.080 align:start position:0%
we'd say okay this is too small for our
 

00:05:58.080 --> 00:06:00.469 align:start position:0%
we'd say okay this is too small for our
target<00:05:58.639><c> so</c><00:05:58.800><c> we're</c><00:05:58.960><c> gonna</c><00:05:59.280><c> set</c><00:05:59.759><c> our</c><00:06:00.080><c> left</c>

00:06:00.469 --> 00:06:00.479 align:start position:0%
target so we're gonna set our left
 

00:06:00.479 --> 00:06:03.990 align:start position:0%
target so we're gonna set our left
pointer<00:06:01.039><c> to</c><00:06:01.199><c> be</c><00:06:01.440><c> equal</c><00:06:01.840><c> to</c><00:06:02.080><c> mid</c><00:06:02.639><c> plus</c><00:06:03.360><c> one</c><00:06:03.840><c> so</c>

00:06:03.990 --> 00:06:04.000 align:start position:0%
pointer to be equal to mid plus one so
 

00:06:04.000 --> 00:06:06.230 align:start position:0%
pointer to be equal to mid plus one so
that<00:06:04.240><c> means</c><00:06:04.479><c> our</c><00:06:04.720><c> left</c><00:06:04.960><c> pointer</c><00:06:05.199><c> would</c><00:06:05.360><c> be</c><00:06:05.680><c> one</c>

00:06:06.230 --> 00:06:06.240 align:start position:0%
that means our left pointer would be one
 

00:06:06.240 --> 00:06:08.629 align:start position:0%
that means our left pointer would be one
and<00:06:06.479><c> our</c><00:06:06.720><c> right</c><00:06:07.039><c> pointer</c><00:06:07.440><c> would</c><00:06:07.600><c> be</c><00:06:07.840><c> zero</c><00:06:08.400><c> that</c>

00:06:08.629 --> 00:06:08.639 align:start position:0%
and our right pointer would be zero that
 

00:06:08.639 --> 00:06:10.550 align:start position:0%
and our right pointer would be zero that
basically<00:06:09.120><c> means</c><00:06:09.440><c> our</c><00:06:09.600><c> left</c><00:06:09.840><c> pointer</c><00:06:10.160><c> has</c>

00:06:10.550 --> 00:06:10.560 align:start position:0%
basically means our left pointer has
 

00:06:10.560 --> 00:06:12.629 align:start position:0%
basically means our left pointer has
crossed<00:06:11.199><c> our</c><00:06:11.440><c> right</c><00:06:11.759><c> pointer</c><00:06:12.160><c> and</c><00:06:12.240><c> that's</c><00:06:12.479><c> how</c>

00:06:12.629 --> 00:06:12.639 align:start position:0%
crossed our right pointer and that's how
 

00:06:12.639 --> 00:06:15.110 align:start position:0%
crossed our right pointer and that's how
you<00:06:12.800><c> know</c><00:06:13.199><c> that</c><00:06:13.440><c> we</c><00:06:13.600><c> have</c><00:06:13.840><c> no</c><00:06:14.080><c> more</c><00:06:14.479><c> values</c>

00:06:15.110 --> 00:06:15.120 align:start position:0%
you know that we have no more values
 

00:06:15.120 --> 00:06:17.029 align:start position:0%
you know that we have no more values
left<00:06:15.360><c> to</c><00:06:15.520><c> search</c><00:06:15.919><c> we</c><00:06:16.080><c> did</c><00:06:16.319><c> not</c><00:06:16.639><c> find</c><00:06:16.880><c> the</c>

00:06:17.029 --> 00:06:17.039 align:start position:0%
left to search we did not find the
 

00:06:17.039 --> 00:06:19.350 align:start position:0%
left to search we did not find the
result<00:06:17.600><c> so</c><00:06:17.759><c> that's</c><00:06:18.000><c> why</c><00:06:18.240><c> we're</c><00:06:18.479><c> doing</c><00:06:19.120><c> less</c>

00:06:19.350 --> 00:06:19.360 align:start position:0%
result so that's why we're doing less
 

00:06:19.360 --> 00:06:21.270 align:start position:0%
result so that's why we're doing less
than<00:06:19.520><c> or</c><00:06:19.680><c> equal</c><00:06:20.160><c> if</c><00:06:20.240><c> they're</c><00:06:20.560><c> both</c><00:06:20.960><c> equal</c>

00:06:21.270 --> 00:06:21.280 align:start position:0%
than or equal if they're both equal
 

00:06:21.280 --> 00:06:22.870 align:start position:0%
than or equal if they're both equal
though<00:06:21.440><c> if</c><00:06:21.520><c> they're</c><00:06:21.759><c> both</c><00:06:22.080><c> pointing</c><00:06:22.479><c> at</c><00:06:22.639><c> this</c>

00:06:22.870 --> 00:06:22.880 align:start position:0%
though if they're both pointing at this
 

00:06:22.880 --> 00:06:24.790 align:start position:0%
though if they're both pointing at this
value<00:06:23.360><c> that</c><00:06:23.520><c> means</c><00:06:23.840><c> we</c><00:06:24.000><c> haven't</c><00:06:24.400><c> looked</c><00:06:24.720><c> at</c>

00:06:24.790 --> 00:06:24.800 align:start position:0%
value that means we haven't looked at
 

00:06:24.800 --> 00:06:27.510 align:start position:0%
value that means we haven't looked at
this<00:06:25.039><c> value</c><00:06:25.520><c> yet</c><00:06:26.000><c> so</c><00:06:26.240><c> that's</c><00:06:26.560><c> the</c><00:06:26.720><c> idea</c><00:06:27.360><c> so</c>

00:06:27.510 --> 00:06:27.520 align:start position:0%
this value yet so that's the idea so
 

00:06:27.520 --> 00:06:28.870 align:start position:0%
this value yet so that's the idea so
each<00:06:27.759><c> iteration</c><00:06:28.240><c> of</c><00:06:28.319><c> the</c><00:06:28.400><c> loop</c><00:06:28.560><c> we're</c><00:06:28.720><c> just</c>

00:06:28.870 --> 00:06:28.880 align:start position:0%
each iteration of the loop we're just
 

00:06:28.880 --> 00:06:30.550 align:start position:0%
each iteration of the loop we're just
going<00:06:28.960><c> to</c><00:06:29.039><c> find</c><00:06:29.280><c> the</c><00:06:29.440><c> midway</c><00:06:29.919><c> point</c><00:06:30.240><c> which</c><00:06:30.400><c> we</c>

00:06:30.550 --> 00:06:30.560 align:start position:0%
going to find the midway point which we
 

00:06:30.560 --> 00:06:34.469 align:start position:0%
going to find the midway point which we
can<00:06:30.960><c> get</c><00:06:31.280><c> by</c><00:06:31.520><c> taking</c><00:06:31.919><c> l</c><00:06:32.240><c> plus</c><00:06:32.639><c> r</c><00:06:33.360><c> and</c><00:06:33.759><c> dividing</c>

00:06:34.469 --> 00:06:34.479 align:start position:0%
can get by taking l plus r and dividing
 

00:06:34.479 --> 00:06:38.390 align:start position:0%
can get by taking l plus r and dividing
by<00:06:34.880><c> two</c><00:06:35.520><c> if</c><00:06:35.919><c> the</c><00:06:36.080><c> value</c><00:06:36.639><c> that</c><00:06:37.039><c> this</c><00:06:37.680><c> index</c><00:06:38.160><c> is</c>

00:06:38.390 --> 00:06:38.400 align:start position:0%
by two if the value that this index is
 

00:06:38.400 --> 00:06:41.189 align:start position:0%
by two if the value that this index is
at<00:06:38.639><c> is</c><00:06:38.880><c> greater</c><00:06:39.280><c> than</c><00:06:39.440><c> the</c><00:06:39.520><c> target</c><00:06:40.400><c> then</c><00:06:40.960><c> we</c>

00:06:41.189 --> 00:06:41.199 align:start position:0%
at is greater than the target then we
 

00:06:41.199 --> 00:06:43.270 align:start position:0%
at is greater than the target then we
want<00:06:41.360><c> to</c><00:06:41.520><c> look</c><00:06:41.759><c> at</c><00:06:41.919><c> all</c><00:06:42.160><c> values</c><00:06:42.560><c> to</c><00:06:42.720><c> the</c><00:06:43.039><c> left</c>

00:06:43.270 --> 00:06:43.280 align:start position:0%
want to look at all values to the left
 

00:06:43.280 --> 00:06:44.870 align:start position:0%
want to look at all values to the left
of<00:06:43.440><c> it</c><00:06:43.520><c> so</c><00:06:43.680><c> we're</c><00:06:43.840><c> gonna</c><00:06:44.080><c> take</c><00:06:44.319><c> our</c><00:06:44.560><c> right</c>

00:06:44.870 --> 00:06:44.880 align:start position:0%
of it so we're gonna take our right
 

00:06:44.880 --> 00:06:47.189 align:start position:0%
of it so we're gonna take our right
pointer<00:06:45.199><c> and</c><00:06:45.280><c> set</c><00:06:45.520><c> it</c><00:06:45.600><c> to</c><00:06:45.840><c> m</c><00:06:46.479><c> minus</c><00:06:46.880><c> one</c><00:06:47.120><c> we</c>

00:06:47.189 --> 00:06:47.199 align:start position:0%
pointer and set it to m minus one we
 

00:06:47.199 --> 00:06:49.350 align:start position:0%
pointer and set it to m minus one we
wanna<00:06:47.440><c> look</c><00:06:47.600><c> at</c><00:06:47.759><c> all</c><00:06:48.000><c> values</c><00:06:48.560><c> to</c><00:06:48.720><c> the</c><00:06:48.960><c> left</c>

00:06:49.350 --> 00:06:49.360 align:start position:0%
wanna look at all values to the left
 

00:06:49.360 --> 00:06:51.830 align:start position:0%
wanna look at all values to the left
we're<00:06:49.599><c> basically</c><00:06:50.160><c> shrinking</c><00:06:50.639><c> our</c><00:06:50.880><c> criteria</c>

00:06:51.830 --> 00:06:51.840 align:start position:0%
we're basically shrinking our criteria
 

00:06:51.840 --> 00:06:54.870 align:start position:0%
we're basically shrinking our criteria
and<00:06:52.080><c> in</c><00:06:52.319><c> the</c><00:06:52.560><c> other</c><00:06:52.800><c> case</c><00:06:53.199><c> else</c><00:06:53.680><c> if</c><00:06:53.919><c> that</c><00:06:54.240><c> num</c>

00:06:54.870 --> 00:06:54.880 align:start position:0%
and in the other case else if that num
 

00:06:54.880 --> 00:06:56.870 align:start position:0%
and in the other case else if that num
is<00:06:55.039><c> smaller</c><00:06:55.440><c> than</c><00:06:55.680><c> our</c><00:06:55.840><c> target</c><00:06:56.479><c> then</c><00:06:56.720><c> we're</c>

00:06:56.870 --> 00:06:56.880 align:start position:0%
is smaller than our target then we're
 

00:06:56.880 --> 00:06:58.309 align:start position:0%
is smaller than our target then we're
gonna<00:06:57.039><c> do</c><00:06:57.199><c> the</c><00:06:57.280><c> opposite</c><00:06:57.680><c> we're</c><00:06:57.840><c> gonna</c><00:06:58.000><c> set</c>

00:06:58.309 --> 00:06:58.319 align:start position:0%
gonna do the opposite we're gonna set
 

00:06:58.319 --> 00:07:00.950 align:start position:0%
gonna do the opposite we're gonna set
left<00:06:58.720><c> equal</c><00:06:58.960><c> to</c><00:06:59.199><c> mid</c><00:06:59.520><c> plus</c><00:06:59.919><c> one</c><00:07:00.240><c> just</c><00:07:00.560><c> like</c><00:07:00.800><c> in</c>

00:07:00.950 --> 00:07:00.960 align:start position:0%
left equal to mid plus one just like in
 

00:07:00.960 --> 00:07:03.430 align:start position:0%
left equal to mid plus one just like in
the<00:07:01.039><c> drawing</c><00:07:01.440><c> explanation</c><00:07:02.319><c> the</c><00:07:02.560><c> last</c><00:07:02.960><c> case</c><00:07:03.280><c> is</c>

00:07:03.430 --> 00:07:03.440 align:start position:0%
the drawing explanation the last case is
 

00:07:03.440 --> 00:07:05.670 align:start position:0%
the drawing explanation the last case is
if<00:07:03.599><c> neither</c><00:07:03.919><c> of</c><00:07:04.080><c> those</c><00:07:04.319><c> are</c><00:07:04.479><c> true</c><00:07:04.960><c> that</c><00:07:05.280><c> must</c>

00:07:05.670 --> 00:07:05.680 align:start position:0%
if neither of those are true that must
 

00:07:05.680 --> 00:07:07.830 align:start position:0%
if neither of those are true that must
mean<00:07:06.080><c> that</c><00:07:06.240><c> we</c><00:07:06.560><c> found</c><00:07:06.960><c> the</c><00:07:07.120><c> target</c><00:07:07.520><c> if</c><00:07:07.680><c> it's</c>

00:07:07.830 --> 00:07:07.840 align:start position:0%
mean that we found the target if it's
 

00:07:07.840 --> 00:07:10.070 align:start position:0%
mean that we found the target if it's
not<00:07:08.080><c> greater</c><00:07:08.560><c> and</c><00:07:08.720><c> not</c><00:07:09.120><c> smaller</c><00:07:09.680><c> that</c><00:07:09.840><c> means</c>

00:07:10.070 --> 00:07:10.080 align:start position:0%
not greater and not smaller that means
 

00:07:10.080 --> 00:07:11.990 align:start position:0%
not greater and not smaller that means
it<00:07:10.240><c> must</c><00:07:10.400><c> be</c><00:07:10.639><c> equal</c><00:07:11.199><c> that</c><00:07:11.440><c> means</c><00:07:11.680><c> we</c><00:07:11.840><c> can</c>

00:07:11.990 --> 00:07:12.000 align:start position:0%
it must be equal that means we can
 

00:07:12.000 --> 00:07:14.629 align:start position:0%
it must be equal that means we can
return<00:07:12.560><c> m</c><00:07:12.880><c> which</c><00:07:13.199><c> is</c><00:07:13.280><c> the</c><00:07:13.440><c> result</c><00:07:14.080><c> but</c><00:07:14.319><c> if</c><00:07:14.479><c> we</c>

00:07:14.629 --> 00:07:14.639 align:start position:0%
return m which is the result but if we
 

00:07:14.639 --> 00:07:16.629 align:start position:0%
return m which is the result but if we
went<00:07:14.960><c> through</c><00:07:15.520><c> every</c><00:07:15.840><c> iteration</c><00:07:16.240><c> of</c><00:07:16.319><c> the</c><00:07:16.400><c> loop</c>

00:07:16.629 --> 00:07:16.639 align:start position:0%
went through every iteration of the loop
 

00:07:16.639 --> 00:07:18.550 align:start position:0%
went through every iteration of the loop
and<00:07:16.720><c> we</c><00:07:16.960><c> didn't</c><00:07:17.280><c> find</c><00:07:17.599><c> the</c><00:07:17.680><c> result</c><00:07:18.240><c> then</c>

00:07:18.550 --> 00:07:18.560 align:start position:0%
and we didn't find the result then
 

00:07:18.560 --> 00:07:21.189 align:start position:0%
and we didn't find the result then
outside<00:07:19.039><c> of</c><00:07:19.199><c> it</c><00:07:19.520><c> we</c><00:07:19.840><c> are</c><00:07:20.160><c> told</c><00:07:20.479><c> that</c><00:07:20.639><c> we</c><00:07:20.880><c> should</c>

00:07:21.189 --> 00:07:21.199 align:start position:0%
outside of it we are told that we should
 

00:07:21.199 --> 00:07:23.270 align:start position:0%
outside of it we are told that we should
return<00:07:21.680><c> negative</c><00:07:22.000><c> one</c><00:07:22.319><c> to</c><00:07:22.479><c> indicate</c><00:07:22.880><c> we</c><00:07:23.039><c> did</c>

00:07:23.270 --> 00:07:23.280 align:start position:0%
return negative one to indicate we did
 

00:07:23.280 --> 00:07:25.670 align:start position:0%
return negative one to indicate we did
not<00:07:23.599><c> find</c><00:07:23.919><c> a</c><00:07:24.080><c> result</c><00:07:24.639><c> so</c><00:07:24.880><c> that's</c><00:07:25.120><c> the</c><00:07:25.280><c> solution</c>

00:07:25.670 --> 00:07:25.680 align:start position:0%
not find a result so that's the solution
 

00:07:25.680 --> 00:07:27.510 align:start position:0%
not find a result so that's the solution
let's<00:07:25.919><c> run</c><00:07:26.160><c> it</c><00:07:26.240><c> to</c><00:07:26.319><c> make</c><00:07:26.479><c> sure</c><00:07:26.639><c> that</c><00:07:26.800><c> it</c><00:07:26.960><c> works</c>

00:07:27.510 --> 00:07:27.520 align:start position:0%
let's run it to make sure that it works
 

00:07:27.520 --> 00:07:29.270 align:start position:0%
let's run it to make sure that it works
and<00:07:27.759><c> as</c><00:07:27.919><c> you</c><00:07:28.000><c> can</c><00:07:28.080><c> see</c><00:07:28.240><c> on</c><00:07:28.400><c> the</c><00:07:28.560><c> left</c><00:07:28.960><c> yes</c><00:07:29.199><c> it</c>

00:07:29.270 --> 00:07:29.280 align:start position:0%
and as you can see on the left yes it
 

00:07:29.280 --> 00:07:31.110 align:start position:0%
and as you can see on the left yes it
does<00:07:29.520><c> and</c><00:07:29.680><c> it's</c><00:07:29.840><c> very</c><00:07:30.080><c> efficient</c><00:07:30.560><c> there's</c><00:07:30.880><c> one</c>

00:07:31.110 --> 00:07:31.120 align:start position:0%
does and it's very efficient there's one
 

00:07:31.120 --> 00:07:32.710 align:start position:0%
does and it's very efficient there's one
more<00:07:31.360><c> thing</c><00:07:31.599><c> though</c><00:07:31.840><c> that</c><00:07:32.000><c> i</c><00:07:32.080><c> want</c><00:07:32.240><c> to</c><00:07:32.319><c> mention</c>

00:07:32.710 --> 00:07:32.720 align:start position:0%
more thing though that i want to mention
 

00:07:32.720 --> 00:07:34.790 align:start position:0%
more thing though that i want to mention
to<00:07:32.800><c> you</c><00:07:33.120><c> which</c><00:07:33.520><c> probably</c><00:07:34.000><c> won't</c><00:07:34.240><c> come</c><00:07:34.479><c> up</c><00:07:34.720><c> in</c>

00:07:34.790 --> 00:07:34.800 align:start position:0%
to you which probably won't come up in
 

00:07:34.800 --> 00:07:36.629 align:start position:0%
to you which probably won't come up in
your<00:07:35.039><c> interview</c><00:07:35.680><c> to</c><00:07:35.840><c> be</c><00:07:36.000><c> honest</c><00:07:36.240><c> it's</c><00:07:36.400><c> never</c>

00:07:36.629 --> 00:07:36.639 align:start position:0%
your interview to be honest it's never
 

00:07:36.639 --> 00:07:38.870 align:start position:0%
your interview to be honest it's never
come<00:07:36.880><c> up</c><00:07:37.039><c> in</c><00:07:37.199><c> mine</c><00:07:37.680><c> but</c><00:07:37.840><c> there's</c><00:07:38.080><c> actually</c><00:07:38.560><c> one</c>

00:07:38.870 --> 00:07:38.880 align:start position:0%
come up in mine but there's actually one
 

00:07:38.880 --> 00:07:41.110 align:start position:0%
come up in mine but there's actually one
little<00:07:39.360><c> bug</c><00:07:39.759><c> here</c><00:07:40.160><c> i</c><00:07:40.240><c> mean</c><00:07:40.479><c> technically</c><00:07:40.960><c> the</c>

00:07:41.110 --> 00:07:41.120 align:start position:0%
little bug here i mean technically the
 

00:07:41.120 --> 00:07:43.430 align:start position:0%
little bug here i mean technically the
bug<00:07:41.520><c> doesn't</c><00:07:41.919><c> exist</c><00:07:42.319><c> in</c><00:07:42.560><c> python</c><00:07:43.120><c> because</c>

00:07:43.430 --> 00:07:43.440 align:start position:0%
bug doesn't exist in python because
 

00:07:43.440 --> 00:07:44.469 align:start position:0%
bug doesn't exist in python because
python

00:07:44.469 --> 00:07:44.479 align:start position:0%
python
 

00:07:44.479 --> 00:07:46.550 align:start position:0%
python
integers<00:07:45.039><c> are</c><00:07:45.280><c> unbounded</c><00:07:45.919><c> they</c><00:07:46.080><c> can</c><00:07:46.319><c> pretty</c>

00:07:46.550 --> 00:07:46.560 align:start position:0%
integers are unbounded they can pretty
 

00:07:46.560 --> 00:07:48.950 align:start position:0%
integers are unbounded they can pretty
much<00:07:46.800><c> be</c><00:07:47.039><c> infinitely</c><00:07:47.680><c> large</c><00:07:48.240><c> but</c><00:07:48.479><c> in</c><00:07:48.639><c> most</c>

00:07:48.950 --> 00:07:48.960 align:start position:0%
much be infinitely large but in most
 

00:07:48.960 --> 00:07:51.589 align:start position:0%
much be infinitely large but in most
languages<00:07:49.440><c> like</c><00:07:49.680><c> java</c><00:07:50.160><c> and</c><00:07:50.240><c> c</c><00:07:50.479><c> plus</c><00:07:50.800><c> plus</c><00:07:51.199><c> you</c>

00:07:51.589 --> 00:07:51.599 align:start position:0%
languages like java and c plus plus you
 

00:07:51.599 --> 00:07:54.390 align:start position:0%
languages like java and c plus plus you
might<00:07:51.919><c> encounter</c><00:07:52.639><c> an</c><00:07:53.039><c> overflow</c><00:07:54.080><c> because</c>

00:07:54.390 --> 00:07:54.400 align:start position:0%
might encounter an overflow because
 

00:07:54.400 --> 00:07:57.430 align:start position:0%
might encounter an overflow because
suppose<00:07:54.879><c> we</c><00:07:54.960><c> had</c><00:07:55.199><c> a</c><00:07:55.440><c> very</c><00:07:55.919><c> large</c><00:07:56.479><c> input</c><00:07:56.879><c> array</c>

00:07:57.430 --> 00:07:57.440 align:start position:0%
suppose we had a very large input array
 

00:07:57.440 --> 00:08:00.629 align:start position:0%
suppose we had a very large input array
and<00:07:57.599><c> then</c><00:07:58.160><c> these</c><00:07:58.800><c> two</c><00:07:59.120><c> integers</c><00:07:59.759><c> were</c><00:08:00.160><c> very</c>

00:08:00.629 --> 00:08:00.639 align:start position:0%
and then these two integers were very
 

00:08:00.639 --> 00:08:03.990 align:start position:0%
and then these two integers were very
close<00:08:01.280><c> to</c><00:08:02.000><c> the</c><00:08:02.160><c> 32-bit</c><00:08:02.960><c> integer</c><00:08:03.360><c> max</c><00:08:03.680><c> which</c><00:08:03.919><c> is</c>

00:08:03.990 --> 00:08:04.000 align:start position:0%
close to the 32-bit integer max which is
 

00:08:04.000 --> 00:08:05.110 align:start position:0%
close to the 32-bit integer max which is
something<00:08:04.400><c> like</c>

00:08:05.110 --> 00:08:05.120 align:start position:0%
something like
 

00:08:05.120 --> 00:08:07.830 align:start position:0%
something like
2<00:08:05.520><c> to</c><00:08:05.680><c> the</c><00:08:05.840><c> power</c><00:08:06.080><c> of</c><00:08:06.479><c> 31</c><00:08:07.199><c> suppose</c><00:08:07.520><c> they</c><00:08:07.680><c> were</c>

00:08:07.830 --> 00:08:07.840 align:start position:0%
2 to the power of 31 suppose they were
 

00:08:07.840 --> 00:08:09.589 align:start position:0%
2 to the power of 31 suppose they were
both<00:08:08.080><c> close</c><00:08:08.319><c> to</c><00:08:08.479><c> that</c><00:08:08.720><c> then</c><00:08:08.960><c> adding</c><00:08:09.360><c> them</c>

00:08:09.589 --> 00:08:09.599 align:start position:0%
both close to that then adding them
 

00:08:09.599 --> 00:08:12.869 align:start position:0%
both close to that then adding them
together<00:08:10.479><c> would</c><00:08:10.800><c> possibly</c><00:08:11.599><c> overflow</c><00:08:12.720><c> and</c>

00:08:12.869 --> 00:08:12.879 align:start position:0%
together would possibly overflow and
 

00:08:12.879 --> 00:08:15.589 align:start position:0%
together would possibly overflow and
then<00:08:13.120><c> we</c><00:08:13.280><c> would</c><00:08:13.440><c> get</c><00:08:13.680><c> the</c><00:08:13.919><c> wrong</c><00:08:14.400><c> result</c><00:08:15.199><c> in</c>

00:08:15.589 --> 00:08:15.599 align:start position:0%
then we would get the wrong result in
 

00:08:15.599 --> 00:08:16.390 align:start position:0%
then we would get the wrong result in
this

00:08:16.390 --> 00:08:16.400 align:start position:0%
this
 

00:08:16.400 --> 00:08:18.790 align:start position:0%
this
value<00:08:17.120><c> so</c><00:08:17.360><c> possibly</c><00:08:17.919><c> your</c><00:08:18.160><c> interviewer</c><00:08:18.560><c> might</c>

00:08:18.790 --> 00:08:18.800 align:start position:0%
value so possibly your interviewer might
 

00:08:18.800 --> 00:08:20.469 align:start position:0%
value so possibly your interviewer might
ask<00:08:19.039><c> you</c><00:08:19.199><c> something</c><00:08:19.440><c> about</c><00:08:19.680><c> that</c><00:08:20.080><c> and</c><00:08:20.240><c> how</c>

00:08:20.469 --> 00:08:20.479 align:start position:0%
ask you something about that and how
 

00:08:20.479 --> 00:08:22.469 align:start position:0%
ask you something about that and how
would<00:08:20.720><c> you</c><00:08:20.800><c> go</c><00:08:20.960><c> about</c><00:08:21.280><c> fixing</c><00:08:21.759><c> that</c><00:08:22.240><c> well</c>

00:08:22.469 --> 00:08:22.479 align:start position:0%
would you go about fixing that well
 

00:08:22.479 --> 00:08:24.629 align:start position:0%
would you go about fixing that well
there's<00:08:22.800><c> actually</c><00:08:23.199><c> a</c><00:08:23.280><c> way</c><00:08:23.520><c> to</c><00:08:23.680><c> do</c><00:08:23.840><c> that</c><00:08:24.240><c> we</c><00:08:24.400><c> can</c>

00:08:24.629 --> 00:08:24.639 align:start position:0%
there's actually a way to do that we can
 

00:08:24.639 --> 00:08:26.869 align:start position:0%
there's actually a way to do that we can
still<00:08:24.960><c> calculate</c><00:08:25.440><c> the</c><00:08:25.680><c> midway</c><00:08:26.160><c> point</c><00:08:26.400><c> between</c>

00:08:26.869 --> 00:08:26.879 align:start position:0%
still calculate the midway point between
 

00:08:26.879 --> 00:08:28.869 align:start position:0%
still calculate the midway point between
left<00:08:27.199><c> and</c><00:08:27.360><c> right</c><00:08:27.840><c> without</c><00:08:28.319><c> adding</c><00:08:28.639><c> them</c>

00:08:28.869 --> 00:08:28.879 align:start position:0%
left and right without adding them
 

00:08:28.879 --> 00:08:31.350 align:start position:0%
left and right without adding them
together<00:08:29.520><c> because</c><00:08:30.240><c> we</c><00:08:30.400><c> can</c><00:08:30.639><c> take</c><00:08:30.960><c> the</c>

00:08:31.350 --> 00:08:31.360 align:start position:0%
together because we can take the
 

00:08:31.360 --> 00:08:33.990 align:start position:0%
together because we can take the
distance<00:08:32.080><c> between</c><00:08:32.719><c> them</c><00:08:33.120><c> we</c><00:08:33.360><c> can</c><00:08:33.519><c> get</c><00:08:33.760><c> the</c>

00:08:33.990 --> 00:08:34.000 align:start position:0%
distance between them we can get the
 

00:08:34.000 --> 00:08:36.469 align:start position:0%
distance between them we can get the
distance<00:08:34.479><c> between</c><00:08:34.880><c> them</c><00:08:35.120><c> by</c><00:08:35.279><c> taking</c><00:08:35.760><c> right</c>

00:08:36.469 --> 00:08:36.479 align:start position:0%
distance between them by taking right
 

00:08:36.479 --> 00:08:40.949 align:start position:0%
distance between them by taking right
minus<00:08:37.360><c> left</c><00:08:37.919><c> and</c><00:08:38.080><c> then</c><00:08:38.719><c> dividing</c><00:08:39.519><c> that</c><00:08:39.919><c> by</c><00:08:40.240><c> two</c>

00:08:40.949 --> 00:08:40.959 align:start position:0%
minus left and then dividing that by two
 

00:08:40.959 --> 00:08:42.949 align:start position:0%
minus left and then dividing that by two
right<00:08:41.200><c> that</c><00:08:41.360><c> will</c><00:08:41.599><c> give</c><00:08:41.839><c> us</c><00:08:42.240><c> half</c><00:08:42.640><c> of</c><00:08:42.800><c> the</c>

00:08:42.949 --> 00:08:42.959 align:start position:0%
right that will give us half of the
 

00:08:42.959 --> 00:08:45.509 align:start position:0%
right that will give us half of the
distance<00:08:43.519><c> between</c><00:08:44.000><c> them</c><00:08:44.399><c> and</c><00:08:44.800><c> we</c><00:08:44.959><c> can</c><00:08:45.200><c> take</c>

00:08:45.509 --> 00:08:45.519 align:start position:0%
distance between them and we can take
 

00:08:45.519 --> 00:08:49.269 align:start position:0%
distance between them and we can take
that<00:08:46.080><c> and</c><00:08:46.480><c> add</c><00:08:46.800><c> it</c><00:08:47.120><c> to</c><00:08:47.360><c> the</c><00:08:47.760><c> left</c><00:08:48.399><c> index</c>

00:08:49.269 --> 00:08:49.279 align:start position:0%
that and add it to the left index
 

00:08:49.279 --> 00:08:51.190 align:start position:0%
that and add it to the left index
because<00:08:49.600><c> if</c><00:08:49.839><c> this</c><00:08:50.080><c> is</c><00:08:50.399><c> halfway</c><00:08:50.959><c> of</c><00:08:51.040><c> the</c>

00:08:51.190 --> 00:08:51.200 align:start position:0%
because if this is halfway of the
 

00:08:51.200 --> 00:08:53.110 align:start position:0%
because if this is halfway of the
distance<00:08:51.600><c> between</c><00:08:52.080><c> them</c><00:08:52.480><c> and</c><00:08:52.640><c> then</c><00:08:52.800><c> this</c><00:08:53.040><c> is</c>

00:08:53.110 --> 00:08:53.120 align:start position:0%
distance between them and then this is
 

00:08:53.120 --> 00:08:55.670 align:start position:0%
distance between them and then this is
the<00:08:53.279><c> left</c><00:08:53.680><c> index</c><00:08:54.320><c> by</c><00:08:54.560><c> adding</c><00:08:54.959><c> these</c><00:08:55.200><c> together</c>

00:08:55.670 --> 00:08:55.680 align:start position:0%
the left index by adding these together
 

00:08:55.680 --> 00:08:58.070 align:start position:0%
the left index by adding these together
we<00:08:55.839><c> are</c><00:08:56.080><c> getting</c><00:08:56.480><c> the</c><00:08:56.800><c> midway</c><00:08:57.440><c> point</c><00:08:57.760><c> this</c><00:08:58.000><c> is</c>

00:08:58.070 --> 00:08:58.080 align:start position:0%
we are getting the midway point this is
 

00:08:58.080 --> 00:08:59.990 align:start position:0%
we are getting the midway point this is
just<00:08:58.320><c> a</c><00:08:58.399><c> way</c><00:08:58.560><c> to</c><00:08:58.720><c> do</c><00:08:58.959><c> the</c><00:08:59.120><c> exact</c><00:08:59.600><c> same</c>

00:08:59.990 --> 00:09:00.000 align:start position:0%
just a way to do the exact same
 

00:09:00.000 --> 00:09:03.430 align:start position:0%
just a way to do the exact same
calculation<00:09:01.200><c> but</c><00:09:01.760><c> this</c><00:09:02.000><c> way</c><00:09:02.320><c> it</c><00:09:02.480><c> will</c><00:09:02.800><c> never</c>

00:09:03.430 --> 00:09:03.440 align:start position:0%
calculation but this way it will never
 

00:09:03.440 --> 00:09:05.750 align:start position:0%
calculation but this way it will never
overflow<00:09:04.160><c> because</c><00:09:04.560><c> right</c><00:09:04.959><c> is</c><00:09:05.279><c> always</c><00:09:05.680><c> going</c>

00:09:05.750 --> 00:09:05.760 align:start position:0%
overflow because right is always going
 

00:09:05.760 --> 00:09:08.310 align:start position:0%
overflow because right is always going
to<00:09:05.839><c> be</c><00:09:06.000><c> greater</c><00:09:06.320><c> than</c><00:09:06.480><c> or</c><00:09:06.640><c> equal</c><00:09:06.959><c> to</c><00:09:07.200><c> left</c><00:09:07.839><c> and</c>

00:09:08.310 --> 00:09:08.320 align:start position:0%
to be greater than or equal to left and
 

00:09:08.320 --> 00:09:09.910 align:start position:0%
to be greater than or equal to left and
in<00:09:08.480><c> this</c><00:09:08.640><c> case</c><00:09:08.880><c> we're</c><00:09:09.120><c> not</c><00:09:09.440><c> adding</c><00:09:09.760><c> them</c>

00:09:09.910 --> 00:09:09.920 align:start position:0%
in this case we're not adding them
 

00:09:09.920 --> 00:09:11.670 align:start position:0%
in this case we're not adding them
together<00:09:10.240><c> we're</c><00:09:10.480><c> subtracting</c><00:09:11.120><c> them</c><00:09:11.279><c> so</c><00:09:11.519><c> this</c>

00:09:11.670 --> 00:09:11.680 align:start position:0%
together we're subtracting them so this
 

00:09:11.680 --> 00:09:13.670 align:start position:0%
together we're subtracting them so this
will<00:09:11.920><c> always</c><00:09:12.240><c> be</c><00:09:12.480><c> positive</c><00:09:13.040><c> or</c><00:09:13.279><c> it</c><00:09:13.360><c> will</c><00:09:13.519><c> be</c>

00:09:13.670 --> 00:09:13.680 align:start position:0%
will always be positive or it will be
 

00:09:13.680 --> 00:09:16.230 align:start position:0%
will always be positive or it will be
zero<00:09:14.399><c> so</c><00:09:14.560><c> i'll</c><00:09:14.720><c> run</c><00:09:14.959><c> it</c><00:09:15.279><c> and</c><00:09:15.440><c> it</c><00:09:15.680><c> does</c><00:09:15.920><c> work</c>

00:09:16.230 --> 00:09:16.240 align:start position:0%
zero so i'll run it and it does work
 

00:09:16.240 --> 00:09:18.389 align:start position:0%
zero so i'll run it and it does work
pretty<00:09:16.480><c> much</c><00:09:16.720><c> exactly</c><00:09:17.120><c> the</c><00:09:17.360><c> same</c><00:09:18.000><c> as</c><00:09:18.160><c> you</c><00:09:18.240><c> can</c>

00:09:18.389 --> 00:09:18.399 align:start position:0%
pretty much exactly the same as you can
 

00:09:18.399 --> 00:09:19.910 align:start position:0%
pretty much exactly the same as you can
see<00:09:18.560><c> on</c><00:09:18.720><c> the</c><00:09:18.800><c> left</c><00:09:19.279><c> but</c><00:09:19.440><c> this</c><00:09:19.680><c> is</c><00:09:19.760><c> just</c>

00:09:19.910 --> 00:09:19.920 align:start position:0%
see on the left but this is just
 

00:09:19.920 --> 00:09:21.350 align:start position:0%
see on the left but this is just
something<00:09:20.160><c> i</c><00:09:20.240><c> think</c><00:09:20.560><c> a</c><00:09:20.640><c> lot</c><00:09:20.800><c> of</c><00:09:20.880><c> people</c><00:09:21.120><c> don't</c>

00:09:21.350 --> 00:09:21.360 align:start position:0%
something i think a lot of people don't
 

00:09:21.360 --> 00:09:22.790 align:start position:0%
something i think a lot of people don't
talk<00:09:21.600><c> about</c><00:09:21.839><c> and</c><00:09:22.000><c> actually</c><00:09:22.240><c> i</c><00:09:22.399><c> pretty</c><00:09:22.560><c> much</c>

00:09:22.790 --> 00:09:22.800 align:start position:0%
talk about and actually i pretty much
 

00:09:22.800 --> 00:09:24.710 align:start position:0%
talk about and actually i pretty much
never<00:09:23.120><c> implement</c><00:09:23.600><c> it</c><00:09:23.680><c> this</c><00:09:23.920><c> way</c><00:09:24.320><c> people</c><00:09:24.560><c> have</c>

00:09:24.710 --> 00:09:24.720 align:start position:0%
never implement it this way people have
 

00:09:24.720 --> 00:09:26.310 align:start position:0%
never implement it this way people have
actually<00:09:25.040><c> mentioned</c><00:09:25.360><c> that</c><00:09:25.600><c> in</c><00:09:25.760><c> my</c><00:09:25.920><c> comments</c>

00:09:26.310 --> 00:09:26.320 align:start position:0%
actually mentioned that in my comments
 

00:09:26.320 --> 00:09:27.670 align:start position:0%
actually mentioned that in my comments
before<00:09:26.560><c> which</c><00:09:26.720><c> is</c><00:09:26.800><c> kind</c><00:09:26.959><c> of</c><00:09:27.040><c> why</c><00:09:27.279><c> i'm</c><00:09:27.360><c> talking</c>

00:09:27.670 --> 00:09:27.680 align:start position:0%
before which is kind of why i'm talking
 

00:09:27.680 --> 00:09:29.190 align:start position:0%
before which is kind of why i'm talking
about<00:09:27.920><c> it</c><00:09:28.000><c> today</c><00:09:28.399><c> but</c><00:09:28.560><c> i</c><00:09:28.720><c> really</c><00:09:28.880><c> hope</c><00:09:29.040><c> that</c>

00:09:29.190 --> 00:09:29.200 align:start position:0%
about it today but i really hope that
 

00:09:29.200 --> 00:09:31.190 align:start position:0%
about it today but i really hope that
this<00:09:29.360><c> was</c><00:09:29.519><c> helpful</c><00:09:29.920><c> if</c><00:09:30.080><c> it</c><00:09:30.240><c> was</c><00:09:30.640><c> please</c><00:09:30.959><c> like</c>

00:09:31.190 --> 00:09:31.200 align:start position:0%
this was helpful if it was please like
 

00:09:31.200 --> 00:09:32.630 align:start position:0%
this was helpful if it was please like
and<00:09:31.279><c> subscribe</c><00:09:31.760><c> it</c><00:09:31.920><c> really</c><00:09:32.160><c> supports</c><00:09:32.560><c> the</c>

00:09:32.630 --> 00:09:32.640 align:start position:0%
and subscribe it really supports the
 

00:09:32.640 --> 00:09:34.230 align:start position:0%
and subscribe it really supports the
channel<00:09:32.959><c> a</c><00:09:33.040><c> lot</c><00:09:33.279><c> consider</c><00:09:33.680><c> checking</c><00:09:34.000><c> out</c><00:09:34.080><c> my</c>

00:09:34.230 --> 00:09:34.240 align:start position:0%
channel a lot consider checking out my
 

00:09:34.240 --> 00:09:35.590 align:start position:0%
channel a lot consider checking out my
patreon<00:09:34.720><c> where</c><00:09:34.880><c> you</c><00:09:34.959><c> can</c><00:09:35.040><c> further</c><00:09:35.360><c> support</c>

00:09:35.590 --> 00:09:35.600 align:start position:0%
patreon where you can further support
 

00:09:35.600 --> 00:09:37.430 align:start position:0%
patreon where you can further support
the<00:09:35.760><c> channel</c><00:09:36.320><c> and</c><00:09:36.480><c> hopefully</c><00:09:36.959><c> i'll</c><00:09:37.120><c> see</c><00:09:37.279><c> you</c>

00:09:37.430 --> 00:09:37.440 align:start position:0%
the channel and hopefully i'll see you
 

00:09:37.440 --> 00:09:41.040 align:start position:0%
the channel and hopefully i'll see you
pretty<00:09:37.680><c> soon</c><00:09:38.080><c> thanks</c><00:09:38.320><c> for</c><00:09:38.480><c> watching</c>

