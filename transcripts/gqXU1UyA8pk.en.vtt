WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.829 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.719><c> welcome</c><00:00:01.199><c> back</c><00:00:01.439><c> and</c><00:00:01.599><c> let's</c>

00:00:01.829 --> 00:00:01.839 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.839 --> 00:00:03.750 align:start position:0%
hey everyone welcome back and let's
write<00:00:02.000><c> some</c><00:00:02.240><c> more</c><00:00:02.480><c> neat</c><00:00:02.720><c> code</c><00:00:03.040><c> today</c><00:00:03.280><c> so</c><00:00:03.439><c> today</c>

00:00:03.750 --> 00:00:03.760 align:start position:0%
write some more neat code today so today
 

00:00:03.760 --> 00:00:04.630 align:start position:0%
write some more neat code today so today
we're<00:00:03.919><c> going</c><00:00:04.080><c> to</c><00:00:04.160><c> solve</c>

00:00:04.630 --> 00:00:04.640 align:start position:0%
we're going to solve
 

00:00:04.640 --> 00:00:07.269 align:start position:0%
we're going to solve
longest<00:00:05.200><c> repeating</c><00:00:05.920><c> character</c><00:00:06.399><c> replacement</c>

00:00:07.269 --> 00:00:07.279 align:start position:0%
longest repeating character replacement
 

00:00:07.279 --> 00:00:09.270 align:start position:0%
longest repeating character replacement
and<00:00:07.520><c> so</c><00:00:07.680><c> this</c><00:00:07.919><c> is</c><00:00:08.080><c> another</c><00:00:08.400><c> problem</c><00:00:08.880><c> from</c><00:00:09.040><c> that</c>

00:00:09.270 --> 00:00:09.280 align:start position:0%
and so this is another problem from that
 

00:00:09.280 --> 00:00:10.870 align:start position:0%
and so this is another problem from that
blind<00:00:09.679><c> 75</c><00:00:10.400><c> list</c>

00:00:10.870 --> 00:00:10.880 align:start position:0%
blind 75 list
 

00:00:10.880 --> 00:00:12.789 align:start position:0%
blind 75 list
so<00:00:11.040><c> we</c><00:00:11.200><c> are</c><00:00:11.280><c> going</c><00:00:11.360><c> to</c><00:00:11.440><c> be</c><00:00:11.599><c> one</c><00:00:11.840><c> step</c><00:00:12.160><c> closer</c><00:00:12.639><c> to</c>

00:00:12.789 --> 00:00:12.799 align:start position:0%
so we are going to be one step closer to
 

00:00:12.799 --> 00:00:14.310 align:start position:0%
so we are going to be one step closer to
completing<00:00:13.280><c> the</c><00:00:13.440><c> entire</c><00:00:13.920><c> list</c>

00:00:14.310 --> 00:00:14.320 align:start position:0%
completing the entire list
 

00:00:14.320 --> 00:00:16.070 align:start position:0%
completing the entire list
the<00:00:14.480><c> link</c><00:00:14.719><c> will</c><00:00:14.960><c> be</c><00:00:15.120><c> in</c><00:00:15.200><c> the</c><00:00:15.360><c> description</c><00:00:15.839><c> to</c>

00:00:16.070 --> 00:00:16.080 align:start position:0%
the link will be in the description to
 

00:00:16.080 --> 00:00:17.590 align:start position:0%
the link will be in the description to
this<00:00:16.240><c> spreadsheet</c><00:00:16.800><c> if</c><00:00:16.880><c> you</c><00:00:17.039><c> do</c><00:00:17.199><c> want</c><00:00:17.359><c> to</c><00:00:17.440><c> take</c>

00:00:17.590 --> 00:00:17.600 align:start position:0%
this spreadsheet if you do want to take
 

00:00:17.600 --> 00:00:18.150 align:start position:0%
this spreadsheet if you do want to take
a<00:00:17.760><c> look</c>

00:00:18.150 --> 00:00:18.160 align:start position:0%
a look
 

00:00:18.160 --> 00:00:20.070 align:start position:0%
a look
and<00:00:18.400><c> hello</c><00:00:18.800><c> to</c><00:00:19.039><c> the</c><00:00:19.279><c> six</c><00:00:19.520><c> people</c><00:00:19.840><c> that</c><00:00:20.000><c> are</c>

00:00:20.070 --> 00:00:20.080 align:start position:0%
and hello to the six people that are
 

00:00:20.080 --> 00:00:21.510 align:start position:0%
and hello to the six people that are
currently<00:00:20.560><c> viewing</c><00:00:20.960><c> the</c>

00:00:21.510 --> 00:00:21.520 align:start position:0%
currently viewing the
 

00:00:21.520 --> 00:00:23.189 align:start position:0%
currently viewing the
spreadsheet<00:00:22.080><c> right</c><00:00:22.240><c> now</c><00:00:22.400><c> you're</c><00:00:22.560><c> gonna</c><00:00:22.720><c> be</c><00:00:23.039><c> in</c>

00:00:23.189 --> 00:00:23.199 align:start position:0%
spreadsheet right now you're gonna be in
 

00:00:23.199 --> 00:00:25.429 align:start position:0%
spreadsheet right now you're gonna be in
the<00:00:23.359><c> next</c><00:00:23.600><c> video</c><00:00:24.400><c> but</c><00:00:24.640><c> okay</c><00:00:24.880><c> so</c><00:00:25.039><c> let's</c><00:00:25.279><c> get</c>

00:00:25.429 --> 00:00:25.439 align:start position:0%
the next video but okay so let's get
 

00:00:25.439 --> 00:00:26.950 align:start position:0%
the next video but okay so let's get
into<00:00:25.680><c> this</c><00:00:25.920><c> problem</c><00:00:26.240><c> because</c><00:00:26.480><c> it's</c><00:00:26.640><c> another</c>

00:00:26.950 --> 00:00:26.960 align:start position:0%
into this problem because it's another
 

00:00:26.960 --> 00:00:28.790 align:start position:0%
into this problem because it's another
pretty<00:00:27.279><c> fundamental</c><00:00:28.000><c> problem</c><00:00:28.320><c> that's</c><00:00:28.560><c> really</c>

00:00:28.790 --> 00:00:28.800 align:start position:0%
pretty fundamental problem that's really
 

00:00:28.800 --> 00:00:30.550 align:start position:0%
pretty fundamental problem that's really
good<00:00:28.960><c> to</c><00:00:29.119><c> understand</c><00:00:29.679><c> so</c><00:00:29.840><c> we're</c><00:00:30.000><c> given</c><00:00:30.320><c> a</c>

00:00:30.550 --> 00:00:30.560 align:start position:0%
good to understand so we're given a
 

00:00:30.560 --> 00:00:31.189 align:start position:0%
good to understand so we're given a
string

00:00:31.189 --> 00:00:31.199 align:start position:0%
string
 

00:00:31.199 --> 00:00:34.150 align:start position:0%
string
s<00:00:31.519><c> and</c><00:00:31.679><c> a</c><00:00:31.920><c> single</c><00:00:32.480><c> integer</c><00:00:33.120><c> k</c><00:00:33.760><c> and</c><00:00:33.920><c> so</c>

00:00:34.150 --> 00:00:34.160 align:start position:0%
s and a single integer k and so
 

00:00:34.160 --> 00:00:36.150 align:start position:0%
s and a single integer k and so
basically<00:00:34.719><c> they</c><00:00:34.960><c> tell</c><00:00:35.200><c> us</c><00:00:35.440><c> that</c><00:00:35.680><c> we</c><00:00:35.840><c> can</c>

00:00:36.150 --> 00:00:36.160 align:start position:0%
basically they tell us that we can
 

00:00:36.160 --> 00:00:36.790 align:start position:0%
basically they tell us that we can
choose

00:00:36.790 --> 00:00:36.800 align:start position:0%
choose
 

00:00:36.800 --> 00:00:39.910 align:start position:0%
choose
any<00:00:37.120><c> of</c><00:00:37.280><c> the</c><00:00:37.520><c> characters</c><00:00:38.320><c> in</c><00:00:38.480><c> the</c><00:00:38.719><c> string</c><00:00:39.600><c> and</c>

00:00:39.910 --> 00:00:39.920 align:start position:0%
any of the characters in the string and
 

00:00:39.920 --> 00:00:43.190 align:start position:0%
any of the characters in the string and
change<00:00:40.320><c> it</c><00:00:40.480><c> to</c><00:00:40.879><c> any</c><00:00:41.280><c> other</c><00:00:41.760><c> uppercase</c><00:00:42.719><c> english</c>

00:00:43.190 --> 00:00:43.200 align:start position:0%
change it to any other uppercase english
 

00:00:43.200 --> 00:00:45.029 align:start position:0%
change it to any other uppercase english
character<00:00:43.920><c> so</c><00:00:44.160><c> in</c><00:00:44.320><c> this</c><00:00:44.559><c> problem</c>

00:00:45.029 --> 00:00:45.039 align:start position:0%
character so in this problem
 

00:00:45.039 --> 00:00:46.709 align:start position:0%
character so in this problem
every<00:00:45.360><c> character</c><00:00:45.760><c> in</c><00:00:45.840><c> the</c><00:00:46.079><c> input</c><00:00:46.320><c> string</c><00:00:46.640><c> is</c>

00:00:46.709 --> 00:00:46.719 align:start position:0%
every character in the input string is
 

00:00:46.719 --> 00:00:49.190 align:start position:0%
every character in the input string is
going<00:00:46.879><c> to</c><00:00:46.960><c> be</c><00:00:47.200><c> limited</c><00:00:47.680><c> to</c><00:00:48.000><c> uppercase</c><00:00:48.800><c> english</c>

00:00:49.190 --> 00:00:49.200 align:start position:0%
going to be limited to uppercase english
 

00:00:49.200 --> 00:00:51.750 align:start position:0%
going to be limited to uppercase english
characters<00:00:49.680><c> and</c><00:00:49.760><c> we</c><00:00:49.920><c> know</c><00:00:50.079><c> that</c><00:00:50.239><c> there's</c><00:00:50.559><c> 26</c>

00:00:51.750 --> 00:00:51.760 align:start position:0%
characters and we know that there's 26
 

00:00:51.760 --> 00:00:53.830 align:start position:0%
characters and we know that there's 26
uppercase<00:00:52.559><c> english</c><00:00:52.879><c> characters</c><00:00:53.520><c> from</c>

00:00:53.830 --> 00:00:53.840 align:start position:0%
uppercase english characters from
 

00:00:53.840 --> 00:00:56.150 align:start position:0%
uppercase english characters from
capital<00:00:54.320><c> a</c><00:00:54.640><c> to</c><00:00:54.879><c> capital</c><00:00:55.440><c> z</c>

00:00:56.150 --> 00:00:56.160 align:start position:0%
capital a to capital z
 

00:00:56.160 --> 00:00:58.549 align:start position:0%
capital a to capital z
and<00:00:56.320><c> so</c><00:00:56.559><c> basically</c><00:00:57.120><c> we</c><00:00:57.280><c> can</c><00:00:57.520><c> perform</c><00:00:58.320><c> a</c>

00:00:58.549 --> 00:00:58.559 align:start position:0%
and so basically we can perform a
 

00:00:58.559 --> 00:00:59.670 align:start position:0%
and so basically we can perform a
replacement<00:00:59.359><c> on</c>

00:00:59.670 --> 00:00:59.680 align:start position:0%
replacement on
 

00:00:59.680 --> 00:01:03.510 align:start position:0%
replacement on
any<00:00:59.920><c> of</c><00:01:00.079><c> the</c><00:01:00.320><c> characters</c><00:01:01.039><c> at</c><00:01:01.359><c> most</c><00:01:01.920><c> k</c><00:01:02.559><c> times</c>

00:01:03.510 --> 00:01:03.520 align:start position:0%
any of the characters at most k times
 

00:01:03.520 --> 00:01:05.830 align:start position:0%
any of the characters at most k times
so<00:01:03.680><c> we</c><00:01:03.840><c> are</c><00:01:04.000><c> allowed</c><00:01:04.320><c> to</c><00:01:04.479><c> replace</c><00:01:05.119><c> k</c><00:01:05.519><c> different</c>

00:01:05.830 --> 00:01:05.840 align:start position:0%
so we are allowed to replace k different
 

00:01:05.840 --> 00:01:07.670 align:start position:0%
so we are allowed to replace k different
characters<00:01:06.400><c> in</c><00:01:06.479><c> the</c><00:01:06.640><c> string</c><00:01:06.960><c> to</c><00:01:07.200><c> any</c><00:01:07.439><c> other</c>

00:01:07.670 --> 00:01:07.680 align:start position:0%
characters in the string to any other
 

00:01:07.680 --> 00:01:08.950 align:start position:0%
characters in the string to any other
character<00:01:08.159><c> we</c><00:01:08.400><c> want</c>

00:01:08.950 --> 00:01:08.960 align:start position:0%
character we want
 

00:01:08.960 --> 00:01:11.350 align:start position:0%
character we want
and<00:01:09.280><c> what</c><00:01:09.439><c> we</c><00:01:09.600><c> want</c><00:01:09.760><c> to</c><00:01:09.920><c> do</c><00:01:10.159><c> is</c><00:01:10.400><c> return</c><00:01:11.040><c> the</c>

00:01:11.350 --> 00:01:11.360 align:start position:0%
and what we want to do is return the
 

00:01:11.360 --> 00:01:12.469 align:start position:0%
and what we want to do is return the
length<00:01:11.920><c> of</c><00:01:12.080><c> the</c>

00:01:12.469 --> 00:01:12.479 align:start position:0%
length of the
 

00:01:12.479 --> 00:01:15.270 align:start position:0%
length of the
longest<00:01:13.119><c> substring</c><00:01:13.840><c> containing</c><00:01:14.479><c> the</c><00:01:14.720><c> exact</c>

00:01:15.270 --> 00:01:15.280 align:start position:0%
longest substring containing the exact
 

00:01:15.280 --> 00:01:17.429 align:start position:0%
longest substring containing the exact
same<00:01:15.759><c> character</c><00:01:16.240><c> we</c><00:01:16.400><c> can</c><00:01:16.640><c> get</c><00:01:16.960><c> after</c>

00:01:17.429 --> 00:01:17.439 align:start position:0%
same character we can get after
 

00:01:17.439 --> 00:01:18.230 align:start position:0%
same character we can get after
performing

00:01:18.230 --> 00:01:18.240 align:start position:0%
performing
 

00:01:18.240 --> 00:01:21.350 align:start position:0%
performing
at<00:01:18.479><c> most</c><00:01:19.040><c> k</c><00:01:19.759><c> different</c><00:01:20.240><c> replacements</c>

00:01:21.350 --> 00:01:21.360 align:start position:0%
at most k different replacements
 

00:01:21.360 --> 00:01:23.510 align:start position:0%
at most k different replacements
so<00:01:21.600><c> we</c><00:01:21.759><c> just</c><00:01:21.920><c> want</c><00:01:22.080><c> to</c><00:01:22.159><c> return</c><00:01:22.560><c> that</c><00:01:22.960><c> length</c><00:01:23.360><c> we</c>

00:01:23.510 --> 00:01:23.520 align:start position:0%
so we just want to return that length we
 

00:01:23.520 --> 00:01:25.350 align:start position:0%
so we just want to return that length we
don't<00:01:23.759><c> actually</c><00:01:24.159><c> have</c><00:01:24.320><c> to</c><00:01:24.560><c> make</c><00:01:24.960><c> those</c>

00:01:25.350 --> 00:01:25.360 align:start position:0%
don't actually have to make those
 

00:01:25.360 --> 00:01:27.590 align:start position:0%
don't actually have to make those
replacements<00:01:26.159><c> in</c><00:01:26.320><c> the</c><00:01:26.560><c> input</c><00:01:26.880><c> string</c>

00:01:27.590 --> 00:01:27.600 align:start position:0%
replacements in the input string
 

00:01:27.600 --> 00:01:29.749 align:start position:0%
replacements in the input string
so<00:01:27.840><c> in</c><00:01:28.000><c> this</c><00:01:28.240><c> case</c><00:01:28.560><c> when</c><00:01:28.799><c> we</c><00:01:29.280><c> take</c><00:01:29.439><c> a</c><00:01:29.520><c> look</c><00:01:29.680><c> at</c>

00:01:29.749 --> 00:01:29.759 align:start position:0%
so in this case when we take a look at
 

00:01:29.759 --> 00:01:31.030 align:start position:0%
so in this case when we take a look at
the<00:01:29.920><c> input</c><00:01:30.159><c> string</c><00:01:30.479><c> we</c><00:01:30.560><c> have</c><00:01:30.799><c> a</c>

00:01:31.030 --> 00:01:31.040 align:start position:0%
the input string we have a
 

00:01:31.040 --> 00:01:33.510 align:start position:0%
the input string we have a
b<00:01:31.439><c> a</c><00:01:31.680><c> b</c><00:01:31.920><c> and</c><00:01:32.079><c> we're</c><00:01:32.320><c> allowed</c><00:01:32.640><c> to</c><00:01:32.720><c> replace</c><00:01:33.280><c> two</c>

00:01:33.510 --> 00:01:33.520 align:start position:0%
b a b and we're allowed to replace two
 

00:01:33.520 --> 00:01:34.469 align:start position:0%
b a b and we're allowed to replace two
of<00:01:33.600><c> the</c><00:01:33.759><c> characters</c>

00:01:34.469 --> 00:01:34.479 align:start position:0%
of the characters
 

00:01:34.479 --> 00:01:36.789 align:start position:0%
of the characters
so<00:01:34.640><c> what's</c><00:01:34.960><c> the</c><00:01:35.280><c> longest</c><00:01:36.000><c> substring</c><00:01:36.560><c> we</c><00:01:36.640><c> could</c>

00:01:36.789 --> 00:01:36.799 align:start position:0%
so what's the longest substring we could
 

00:01:36.799 --> 00:01:38.550 align:start position:0%
so what's the longest substring we could
get<00:01:37.040><c> with</c><00:01:37.200><c> the</c><00:01:37.360><c> exact</c><00:01:37.680><c> same</c><00:01:38.000><c> character</c><00:01:38.320><c> well</c>

00:01:38.550 --> 00:01:38.560 align:start position:0%
get with the exact same character well
 

00:01:38.560 --> 00:01:39.429 align:start position:0%
get with the exact same character well
we<00:01:38.720><c> could</c><00:01:38.880><c> replace</c>

00:01:39.429 --> 00:01:39.439 align:start position:0%
we could replace
 

00:01:39.439 --> 00:01:41.109 align:start position:0%
we could replace
one<00:01:39.600><c> of</c><00:01:39.680><c> the</c><00:01:39.920><c> b's</c><00:01:40.400><c> we</c><00:01:40.560><c> could</c><00:01:40.720><c> basically</c>

00:01:41.109 --> 00:01:41.119 align:start position:0%
one of the b's we could basically
 

00:01:41.119 --> 00:01:42.710 align:start position:0%
one of the b's we could basically
replace<00:01:41.600><c> both</c><00:01:42.000><c> of</c><00:01:42.079><c> the</c><00:01:42.240><c> b's</c>

00:01:42.710 --> 00:01:42.720 align:start position:0%
replace both of the b's
 

00:01:42.720 --> 00:01:45.590 align:start position:0%
replace both of the b's
with<00:01:43.040><c> a</c><00:01:43.200><c> capital</c><00:01:43.759><c> a</c><00:01:44.079><c> and</c><00:01:44.159><c> then</c><00:01:44.320><c> we</c><00:01:44.479><c> get</c><00:01:44.880><c> four</c>

00:01:45.590 --> 00:01:45.600 align:start position:0%
with a capital a and then we get four
 

00:01:45.600 --> 00:01:46.870 align:start position:0%
with a capital a and then we get four
a's<00:01:46.079><c> in</c><00:01:46.240><c> a</c><00:01:46.399><c> row</c>

00:01:46.870 --> 00:01:46.880 align:start position:0%
a's in a row
 

00:01:46.880 --> 00:01:48.870 align:start position:0%
a's in a row
which<00:01:47.119><c> would</c><00:01:47.280><c> give</c><00:01:47.439><c> us</c><00:01:47.520><c> an</c><00:01:47.680><c> output</c><00:01:48.079><c> of</c><00:01:48.240><c> four</c>

00:01:48.870 --> 00:01:48.880 align:start position:0%
which would give us an output of four
 

00:01:48.880 --> 00:01:50.870 align:start position:0%
which would give us an output of four
and<00:01:49.200><c> we</c><00:01:49.360><c> could</c><00:01:49.520><c> technically</c><00:01:50.079><c> also</c><00:01:50.560><c> do</c><00:01:50.720><c> the</c>

00:01:50.870 --> 00:01:50.880 align:start position:0%
and we could technically also do the
 

00:01:50.880 --> 00:01:53.030 align:start position:0%
and we could technically also do the
opposite<00:01:51.360><c> we</c><00:01:51.439><c> could</c><00:01:51.600><c> replace</c><00:01:52.000><c> the</c><00:01:52.240><c> a's</c>

00:01:53.030 --> 00:01:53.040 align:start position:0%
opposite we could replace the a's
 

00:01:53.040 --> 00:01:55.109 align:start position:0%
opposite we could replace the a's
with<00:01:53.520><c> capital</c><00:01:54.000><c> b's</c><00:01:54.479><c> and</c><00:01:54.560><c> that</c><00:01:54.720><c> would</c><00:01:54.880><c> give</c><00:01:55.040><c> us</c>

00:01:55.109 --> 00:01:55.119 align:start position:0%
with capital b's and that would give us
 

00:01:55.119 --> 00:01:57.830 align:start position:0%
with capital b's and that would give us
the<00:01:55.280><c> exact</c><00:01:55.600><c> same</c><00:01:55.840><c> result</c><00:01:56.240><c> a</c><00:01:56.399><c> length</c><00:01:56.799><c> of</c><00:01:57.040><c> four</c>

00:01:57.830 --> 00:01:57.840 align:start position:0%
the exact same result a length of four
 

00:01:57.840 --> 00:01:59.429 align:start position:0%
the exact same result a length of four
so<00:01:58.079><c> i'm</c><00:01:58.240><c> going</c><00:01:58.399><c> to</c><00:01:58.479><c> show</c><00:01:58.640><c> you</c><00:01:58.880><c> how</c><00:01:59.040><c> you</c><00:01:59.200><c> can</c>

00:01:59.429 --> 00:01:59.439 align:start position:0%
so i'm going to show you how you can
 

00:01:59.439 --> 00:02:00.950 align:start position:0%
so i'm going to show you how you can
solve<00:01:59.759><c> this</c><00:02:00.000><c> problem</c><00:02:00.399><c> in</c><00:02:00.640><c> big</c>

00:02:00.950 --> 00:02:00.960 align:start position:0%
solve this problem in big
 

00:02:00.960 --> 00:02:03.030 align:start position:0%
solve this problem in big
o<00:02:01.200><c> of</c><00:02:01.520><c> n</c><00:02:01.759><c> time</c><00:02:02.079><c> and</c><00:02:02.240><c> technically</c><00:02:02.799><c> it's</c><00:02:02.960><c> going</c>

00:02:03.030 --> 00:02:03.040 align:start position:0%
o of n time and technically it's going
 

00:02:03.040 --> 00:02:03.990 align:start position:0%
o of n time and technically it's going
to<00:02:03.119><c> be</c><00:02:03.280><c> big</c><00:02:03.520><c> o</c><00:02:03.759><c> of</c>

00:02:03.990 --> 00:02:04.000 align:start position:0%
to be big o of
 

00:02:04.000 --> 00:02:07.109 align:start position:0%
to be big o of
26<00:02:04.799><c> multiplied</c><00:02:05.360><c> by</c><00:02:05.680><c> n</c><00:02:05.840><c> which</c><00:02:06.079><c> we</c><00:02:06.240><c> know</c><00:02:06.479><c> is</c><00:02:06.640><c> also</c>

00:02:07.109 --> 00:02:07.119 align:start position:0%
26 multiplied by n which we know is also
 

00:02:07.119 --> 00:02:08.070 align:start position:0%
26 multiplied by n which we know is also
reduces<00:02:07.759><c> to</c>

00:02:08.070 --> 00:02:08.080 align:start position:0%
reduces to
 

00:02:08.080 --> 00:02:10.070 align:start position:0%
reduces to
big<00:02:08.319><c> o</c><00:02:08.560><c> of</c><00:02:08.800><c> n</c><00:02:09.280><c> but</c><00:02:09.440><c> there's</c><00:02:09.679><c> actually</c>

00:02:10.070 --> 00:02:10.080 align:start position:0%
big o of n but there's actually
 

00:02:10.080 --> 00:02:11.750 align:start position:0%
big o of n but there's actually
technically<00:02:10.560><c> an</c><00:02:10.800><c> easier</c>

00:02:11.750 --> 00:02:11.760 align:start position:0%
technically an easier
 

00:02:11.760 --> 00:02:13.990 align:start position:0%
technically an easier
way<00:02:12.000><c> to</c><00:02:12.160><c> do</c><00:02:12.319><c> it</c><00:02:12.720><c> or</c><00:02:12.959><c> at</c><00:02:13.040><c> least</c><00:02:13.280><c> a</c><00:02:13.440><c> more</c><00:02:13.680><c> simple</c>

00:02:13.990 --> 00:02:14.000 align:start position:0%
way to do it or at least a more simple
 

00:02:14.000 --> 00:02:15.910 align:start position:0%
way to do it or at least a more simple
way<00:02:14.160><c> to</c><00:02:14.239><c> do</c><00:02:14.480><c> it</c><00:02:14.560><c> which</c><00:02:14.800><c> is</c><00:02:14.959><c> just</c><00:02:15.200><c> going</c><00:02:15.280><c> to</c><00:02:15.360><c> be</c>

00:02:15.910 --> 00:02:15.920 align:start position:0%
way to do it which is just going to be
 

00:02:15.920 --> 00:02:17.750 align:start position:0%
way to do it which is just going to be
a<00:02:16.080><c> flat</c><00:02:16.480><c> big</c><00:02:16.720><c> o</c><00:02:16.800><c> of</c><00:02:16.959><c> n</c><00:02:17.120><c> we</c><00:02:17.200><c> don't</c><00:02:17.360><c> even</c><00:02:17.520><c> need</c>

00:02:17.750 --> 00:02:17.760 align:start position:0%
a flat big o of n we don't even need
 

00:02:17.760 --> 00:02:19.750 align:start position:0%
a flat big o of n we don't even need
this<00:02:18.000><c> 26</c><00:02:18.560><c> constant</c>

00:02:19.750 --> 00:02:19.760 align:start position:0%
this 26 constant
 

00:02:19.760 --> 00:02:21.910 align:start position:0%
this 26 constant
but<00:02:19.920><c> this</c><00:02:20.239><c> way</c><00:02:20.480><c> is</c><00:02:20.560><c> actually</c><00:02:20.959><c> pretty</c><00:02:21.440><c> tricky</c>

00:02:21.910 --> 00:02:21.920 align:start position:0%
but this way is actually pretty tricky
 

00:02:21.920 --> 00:02:23.030 align:start position:0%
but this way is actually pretty tricky
to<00:02:22.239><c> get</c><00:02:22.480><c> to</c>

00:02:23.030 --> 00:02:23.040 align:start position:0%
to get to
 

00:02:23.040 --> 00:02:24.949 align:start position:0%
to get to
so<00:02:23.280><c> i'll</c><00:02:23.520><c> be</c><00:02:23.680><c> going</c><00:02:23.920><c> over</c><00:02:24.160><c> a</c><00:02:24.319><c> little</c><00:02:24.480><c> bit</c><00:02:24.720><c> of</c><00:02:24.879><c> it</c>

00:02:24.949 --> 00:02:24.959 align:start position:0%
so i'll be going over a little bit of it
 

00:02:24.959 --> 00:02:26.630 align:start position:0%
so i'll be going over a little bit of it
but<00:02:25.120><c> this</c><00:02:25.360><c> is</c><00:02:25.599><c> kind</c><00:02:25.760><c> of</c><00:02:25.840><c> the</c><00:02:26.000><c> main</c><00:02:26.319><c> way</c><00:02:26.480><c> that</c>

00:02:26.630 --> 00:02:26.640 align:start position:0%
but this is kind of the main way that
 

00:02:26.640 --> 00:02:28.550 align:start position:0%
but this is kind of the main way that
you'd<00:02:26.800><c> want</c><00:02:26.959><c> to</c><00:02:27.120><c> solve</c><00:02:27.360><c> this</c><00:02:27.599><c> problem</c>

00:02:28.550 --> 00:02:28.560 align:start position:0%
you'd want to solve this problem
 

00:02:28.560 --> 00:02:30.630 align:start position:0%
you'd want to solve this problem
so<00:02:28.720><c> let's</c><00:02:28.959><c> say</c><00:02:29.200><c> we're</c><00:02:29.440><c> given</c><00:02:29.840><c> an</c><00:02:30.000><c> input</c><00:02:30.319><c> string</c>

00:02:30.630 --> 00:02:30.640 align:start position:0%
so let's say we're given an input string
 

00:02:30.640 --> 00:02:32.390 align:start position:0%
so let's say we're given an input string
like<00:02:30.800><c> this</c><00:02:31.040><c> and</c><00:02:31.120><c> we're</c><00:02:31.280><c> given</c><00:02:31.599><c> a</c><00:02:31.680><c> k</c><00:02:31.920><c> value</c><00:02:32.239><c> now</c>

00:02:32.390 --> 00:02:32.400 align:start position:0%
like this and we're given a k value now
 

00:02:32.400 --> 00:02:34.070 align:start position:0%
like this and we're given a k value now
the<00:02:32.480><c> most</c><00:02:32.800><c> brute</c><00:02:33.120><c> force</c><00:02:33.360><c> way</c><00:02:33.599><c> would</c><00:02:33.760><c> just</c><00:02:33.920><c> be</c>

00:02:34.070 --> 00:02:34.080 align:start position:0%
the most brute force way would just be
 

00:02:34.080 --> 00:02:36.390 align:start position:0%
the most brute force way would just be
check<00:02:34.400><c> every</c><00:02:34.720><c> single</c><00:02:35.120><c> substring</c><00:02:35.680><c> right</c>

00:02:36.390 --> 00:02:36.400 align:start position:0%
check every single substring right
 

00:02:36.400 --> 00:02:38.550 align:start position:0%
check every single substring right
and<00:02:36.640><c> if</c><00:02:36.800><c> we</c><00:02:37.040><c> were</c><00:02:37.280><c> checking</c><00:02:37.760><c> every</c><00:02:38.000><c> single</c><00:02:38.319><c> sub</c>

00:02:38.550 --> 00:02:38.560 align:start position:0%
and if we were checking every single sub
 

00:02:38.560 --> 00:02:40.229 align:start position:0%
and if we were checking every single sub
string<00:02:38.959><c> in</c><00:02:39.040><c> the</c><00:02:39.120><c> entire</c><00:02:39.519><c> input</c><00:02:39.760><c> array</c><00:02:39.920><c> we</c><00:02:40.080><c> know</c>

00:02:40.229 --> 00:02:40.239 align:start position:0%
string in the entire input array we know
 

00:02:40.239 --> 00:02:41.750 align:start position:0%
string in the entire input array we know
there's<00:02:40.480><c> n</c><00:02:40.640><c> squared</c><00:02:41.040><c> sub</c><00:02:41.200><c> string</c><00:02:41.440><c> so</c><00:02:41.599><c> that</c>

00:02:41.750 --> 00:02:41.760 align:start position:0%
there's n squared sub string so that
 

00:02:41.760 --> 00:02:43.030 align:start position:0%
there's n squared sub string so that
wouldn't<00:02:42.000><c> be</c><00:02:42.160><c> the</c><00:02:42.319><c> simple</c>

00:02:43.030 --> 00:02:43.040 align:start position:0%
wouldn't be the simple
 

00:02:43.040 --> 00:02:45.030 align:start position:0%
wouldn't be the simple
that<00:02:43.200><c> wouldn't</c><00:02:43.440><c> be</c><00:02:43.680><c> the</c><00:02:44.239><c> most</c><00:02:44.480><c> efficient</c><00:02:44.879><c> way</c>

00:02:45.030 --> 00:02:45.040 align:start position:0%
that wouldn't be the most efficient way
 

00:02:45.040 --> 00:02:46.949 align:start position:0%
that wouldn't be the most efficient way
to<00:02:45.120><c> do</c><00:02:45.280><c> it</c><00:02:45.360><c> but</c><00:02:45.599><c> even</c><00:02:45.840><c> if</c><00:02:45.920><c> we</c><00:02:46.160><c> were</c><00:02:46.480><c> doing</c><00:02:46.800><c> it</c>

00:02:46.949 --> 00:02:46.959 align:start position:0%
to do it but even if we were doing it
 

00:02:46.959 --> 00:02:48.949 align:start position:0%
to do it but even if we were doing it
like<00:02:47.120><c> that</c><00:02:47.360><c> what</c><00:02:47.680><c> exactly</c><00:02:48.400><c> are</c><00:02:48.640><c> we</c>

00:02:48.949 --> 00:02:48.959 align:start position:0%
like that what exactly are we
 

00:02:48.959 --> 00:02:51.430 align:start position:0%
like that what exactly are we
looking<00:02:49.360><c> for</c><00:02:49.840><c> if</c><00:02:50.080><c> we're</c><00:02:50.560><c> looking</c><00:02:51.040><c> at</c><00:02:51.280><c> a</c>

00:02:51.430 --> 00:02:51.440 align:start position:0%
looking for if we're looking at a
 

00:02:51.440 --> 00:02:53.110 align:start position:0%
looking for if we're looking at a
particular<00:02:52.239><c> substring</c>

00:02:53.110 --> 00:02:53.120 align:start position:0%
particular substring
 

00:02:53.120 --> 00:02:55.589 align:start position:0%
particular substring
how<00:02:53.360><c> do</c><00:02:53.519><c> we</c><00:02:53.760><c> know</c><00:02:54.000><c> if</c><00:02:54.239><c> this</c><00:02:54.640><c> substring</c><00:02:55.360><c> is</c>

00:02:55.589 --> 00:02:55.599 align:start position:0%
how do we know if this substring is
 

00:02:55.599 --> 00:02:57.670 align:start position:0%
how do we know if this substring is
valid<00:02:56.080><c> because</c><00:02:56.400><c> remember</c><00:02:56.879><c> at</c><00:02:57.040><c> the</c><00:02:57.200><c> end</c><00:02:57.360><c> of</c><00:02:57.440><c> the</c>

00:02:57.670 --> 00:02:57.680 align:start position:0%
valid because remember at the end of the
 

00:02:57.680 --> 00:02:58.309 align:start position:0%
valid because remember at the end of the
day

00:02:58.309 --> 00:02:58.319 align:start position:0%
day
 

00:02:58.319 --> 00:03:00.470 align:start position:0%
day
we<00:02:58.480><c> want</c><00:02:58.640><c> to</c><00:02:58.879><c> maximize</c><00:02:59.599><c> the</c><00:02:59.760><c> result</c><00:03:00.159><c> right</c><00:03:00.400><c> the</c>

00:03:00.470 --> 00:03:00.480 align:start position:0%
we want to maximize the result right the
 

00:03:00.480 --> 00:03:02.550 align:start position:0%
we want to maximize the result right the
result<00:03:00.959><c> is</c><00:03:01.120><c> going</c><00:03:01.200><c> to</c><00:03:01.280><c> be</c><00:03:01.440><c> the</c><00:03:01.760><c> longest</c>

00:03:02.550 --> 00:03:02.560 align:start position:0%
result is going to be the longest
 

00:03:02.560 --> 00:03:04.630 align:start position:0%
result is going to be the longest
sub<00:03:02.879><c> string</c><00:03:03.360><c> that</c><00:03:03.519><c> contains</c><00:03:04.080><c> a</c><00:03:04.319><c> single</c>

00:03:04.630 --> 00:03:04.640 align:start position:0%
sub string that contains a single
 

00:03:04.640 --> 00:03:05.830 align:start position:0%
sub string that contains a single
character<00:03:05.120><c> and</c><00:03:05.200><c> we</c><00:03:05.360><c> can</c><00:03:05.519><c> make</c>

00:03:05.830 --> 00:03:05.840 align:start position:0%
character and we can make
 

00:03:05.840 --> 00:03:08.630 align:start position:0%
character and we can make
two<00:03:06.080><c> replacements</c><00:03:07.120><c> so</c><00:03:07.519><c> let's</c><00:03:07.840><c> look</c><00:03:08.000><c> at</c><00:03:08.239><c> this</c>

00:03:08.630 --> 00:03:08.640 align:start position:0%
two replacements so let's look at this
 

00:03:08.640 --> 00:03:10.070 align:start position:0%
two replacements so let's look at this
substring<00:03:09.280><c> alone</c>

00:03:10.070 --> 00:03:10.080 align:start position:0%
substring alone
 

00:03:10.080 --> 00:03:13.350 align:start position:0%
substring alone
how<00:03:10.239><c> do</c><00:03:10.400><c> we</c><00:03:10.560><c> know</c><00:03:10.800><c> if</c><00:03:10.959><c> it's</c><00:03:11.280><c> valid</c><00:03:12.080><c> well</c><00:03:12.959><c> which</c>

00:03:13.350 --> 00:03:13.360 align:start position:0%
how do we know if it's valid well which
 

00:03:13.360 --> 00:03:15.190 align:start position:0%
how do we know if it's valid well which
character<00:03:13.840><c> are</c><00:03:13.920><c> we</c><00:03:14.080><c> going</c><00:03:14.239><c> to</c><00:03:14.319><c> replace</c><00:03:14.879><c> are</c><00:03:15.040><c> we</c>

00:03:15.190 --> 00:03:15.200 align:start position:0%
character are we going to replace are we
 

00:03:15.200 --> 00:03:17.430 align:start position:0%
character are we going to replace are we
going<00:03:15.280><c> to</c><00:03:15.440><c> want</c><00:03:15.599><c> to</c><00:03:15.760><c> replace</c><00:03:16.319><c> the</c><00:03:16.720><c> b's</c>

00:03:17.430 --> 00:03:17.440 align:start position:0%
going to want to replace the b's
 

00:03:17.440 --> 00:03:19.830 align:start position:0%
going to want to replace the b's
in<00:03:17.599><c> order</c><00:03:18.000><c> to</c><00:03:18.159><c> make</c><00:03:18.400><c> it</c><00:03:18.560><c> all</c><00:03:18.800><c> be</c><00:03:19.120><c> amount</c><00:03:19.680><c> to</c>

00:03:19.830 --> 00:03:19.840 align:start position:0%
in order to make it all be amount to
 

00:03:19.840 --> 00:03:22.309 align:start position:0%
in order to make it all be amount to
match<00:03:20.319><c> a</c><00:03:20.560><c> or</c><00:03:20.800><c> would</c><00:03:21.040><c> we</c><00:03:21.200><c> want</c><00:03:21.360><c> to</c><00:03:21.440><c> replace</c><00:03:22.000><c> the</c>

00:03:22.309 --> 00:03:22.319 align:start position:0%
match a or would we want to replace the
 

00:03:22.319 --> 00:03:24.789 align:start position:0%
match a or would we want to replace the
a<00:03:22.959><c> in</c><00:03:23.120><c> order</c><00:03:23.440><c> to</c><00:03:23.680><c> match</c><00:03:24.000><c> it</c><00:03:24.080><c> with</c><00:03:24.319><c> the</c><00:03:24.400><c> rest</c><00:03:24.720><c> of</c>

00:03:24.789 --> 00:03:24.799 align:start position:0%
a in order to match it with the rest of
 

00:03:24.799 --> 00:03:25.910 align:start position:0%
a in order to match it with the rest of
the<00:03:25.040><c> b's</c>

00:03:25.910 --> 00:03:25.920 align:start position:0%
the b's
 

00:03:25.920 --> 00:03:27.509 align:start position:0%
the b's
of<00:03:26.159><c> course</c><00:03:26.480><c> we're</c><00:03:26.720><c> going</c><00:03:26.799><c> to</c><00:03:26.879><c> replace</c><00:03:27.360><c> the</c>

00:03:27.509 --> 00:03:27.519 align:start position:0%
of course we're going to replace the
 

00:03:27.519 --> 00:03:29.750 align:start position:0%
of course we're going to replace the
character<00:03:28.000><c> that</c><00:03:28.239><c> occurs</c><00:03:28.879><c> less</c><00:03:29.200><c> frequently</c>

00:03:29.750 --> 00:03:29.760 align:start position:0%
character that occurs less frequently
 

00:03:29.760 --> 00:03:31.350 align:start position:0%
character that occurs less frequently
right<00:03:29.920><c> because</c><00:03:30.159><c> the</c><00:03:30.319><c> number</c><00:03:30.560><c> of</c><00:03:30.720><c> replacements</c>

00:03:31.350 --> 00:03:31.360 align:start position:0%
right because the number of replacements
 

00:03:31.360 --> 00:03:32.149 align:start position:0%
right because the number of replacements
we<00:03:31.519><c> have</c><00:03:31.760><c> is</c>

00:03:32.149 --> 00:03:32.159 align:start position:0%
we have is
 

00:03:32.159 --> 00:03:34.550 align:start position:0%
we have is
limited<00:03:32.640><c> so</c><00:03:32.879><c> we</c><00:03:33.040><c> would</c><00:03:33.360><c> want</c><00:03:33.760><c> to</c><00:03:33.920><c> replace</c><00:03:34.400><c> the</c>

00:03:34.550 --> 00:03:34.560 align:start position:0%
limited so we would want to replace the
 

00:03:34.560 --> 00:03:35.350 align:start position:0%
limited so we would want to replace the
character

00:03:35.350 --> 00:03:35.360 align:start position:0%
character
 

00:03:35.360 --> 00:03:36.949 align:start position:0%
character
that<00:03:35.680><c> the</c><00:03:35.840><c> characters</c><00:03:36.239><c> that</c><00:03:36.400><c> are</c><00:03:36.640><c> less</c>

00:03:36.949 --> 00:03:36.959 align:start position:0%
that the characters that are less
 

00:03:36.959 --> 00:03:38.630 align:start position:0%
that the characters that are less
frequent<00:03:37.360><c> so</c><00:03:37.599><c> in</c><00:03:37.760><c> other</c><00:03:38.000><c> words</c>

00:03:38.630 --> 00:03:38.640 align:start position:0%
frequent so in other words
 

00:03:38.640 --> 00:03:41.670 align:start position:0%
frequent so in other words
we<00:03:39.040><c> want</c><00:03:39.599><c> all</c><00:03:40.000><c> characters</c><00:03:40.560><c> in</c><00:03:40.720><c> a</c><00:03:40.799><c> particular</c>

00:03:41.670 --> 00:03:41.680 align:start position:0%
we want all characters in a particular
 

00:03:41.680 --> 00:03:42.470 align:start position:0%
we want all characters in a particular
window<00:03:42.159><c> to</c>

00:03:42.470 --> 00:03:42.480 align:start position:0%
window to
 

00:03:42.480 --> 00:03:45.670 align:start position:0%
window to
match<00:03:42.959><c> the</c><00:03:43.360><c> most</c><00:03:44.080><c> common</c><00:03:44.879><c> character</c>

00:03:45.670 --> 00:03:45.680 align:start position:0%
match the most common character
 

00:03:45.680 --> 00:03:47.670 align:start position:0%
match the most common character
in<00:03:45.920><c> that</c><00:03:46.239><c> window</c><00:03:46.640><c> so</c><00:03:46.879><c> what</c><00:03:47.040><c> we're</c><00:03:47.200><c> going</c><00:03:47.280><c> to</c><00:03:47.360><c> be</c>

00:03:47.670 --> 00:03:47.680 align:start position:0%
in that window so what we're going to be
 

00:03:47.680 --> 00:03:49.830 align:start position:0%
in that window so what we're going to be
doing<00:03:48.480><c> is</c><00:03:48.720><c> we</c><00:03:48.879><c> are</c><00:03:49.040><c> going</c><00:03:49.120><c> to</c><00:03:49.280><c> have</c><00:03:49.519><c> a</c>

00:03:49.830 --> 00:03:49.840 align:start position:0%
doing is we are going to have a
 

00:03:49.840 --> 00:03:53.110 align:start position:0%
doing is we are going to have a
hash<00:03:50.159><c> map</c><00:03:50.560><c> or</c><00:03:51.040><c> a</c><00:03:51.599><c> array</c><00:03:52.560><c> which</c><00:03:52.799><c> is</c><00:03:52.879><c> going</c><00:03:52.959><c> to</c>

00:03:53.110 --> 00:03:53.120 align:start position:0%
hash map or a array which is going to
 

00:03:53.120 --> 00:03:53.509 align:start position:0%
hash map or a array which is going to
take

00:03:53.509 --> 00:03:53.519 align:start position:0%
take
 

00:03:53.519 --> 00:03:56.229 align:start position:0%
take
every<00:03:53.920><c> single</c><00:03:54.480><c> character</c><00:03:55.519><c> in</c><00:03:55.680><c> this</c><00:03:55.840><c> case</c><00:03:56.080><c> we</c>

00:03:56.229 --> 00:03:56.239 align:start position:0%
every single character in this case we
 

00:03:56.239 --> 00:03:57.830 align:start position:0%
every single character in this case we
only<00:03:56.400><c> have</c><00:03:56.640><c> characters</c><00:03:57.120><c> a</c><00:03:57.360><c> and</c><00:03:57.519><c> b</c>

00:03:57.830 --> 00:03:57.840 align:start position:0%
only have characters a and b
 

00:03:57.840 --> 00:03:59.429 align:start position:0%
only have characters a and b
and<00:03:57.920><c> we're</c><00:03:58.080><c> going</c><00:03:58.159><c> to</c><00:03:58.400><c> count</c><00:03:58.720><c> the</c><00:03:58.959><c> number</c><00:03:59.280><c> of</c>

00:03:59.429 --> 00:03:59.439 align:start position:0%
and we're going to count the number of
 

00:03:59.439 --> 00:04:01.830 align:start position:0%
and we're going to count the number of
occurrences<00:04:00.480><c> of</c><00:04:00.799><c> each</c><00:04:01.120><c> character</c>

00:04:01.830 --> 00:04:01.840 align:start position:0%
occurrences of each character
 

00:04:01.840 --> 00:04:03.429 align:start position:0%
occurrences of each character
so<00:04:02.000><c> for</c><00:04:02.159><c> example</c><00:04:02.560><c> if</c><00:04:02.640><c> we</c><00:04:02.799><c> were</c><00:04:02.959><c> looking</c><00:04:03.200><c> at</c>

00:04:03.429 --> 00:04:03.439 align:start position:0%
so for example if we were looking at
 

00:04:03.439 --> 00:04:05.270 align:start position:0%
so for example if we were looking at
this<00:04:03.599><c> substring</c><00:04:04.080><c> we</c><00:04:04.239><c> see</c><00:04:04.400><c> that</c><00:04:04.560><c> there's</c><00:04:04.879><c> three</c>

00:04:05.270 --> 00:04:05.280 align:start position:0%
this substring we see that there's three
 

00:04:05.280 --> 00:04:06.869 align:start position:0%
this substring we see that there's three
b's<00:04:05.680><c> and</c><00:04:05.840><c> we</c><00:04:05.920><c> have</c><00:04:06.080><c> a</c><00:04:06.319><c> single</c>

00:04:06.869 --> 00:04:06.879 align:start position:0%
b's and we have a single
 

00:04:06.879 --> 00:04:10.390 align:start position:0%
b's and we have a single
a<00:04:07.680><c> so</c><00:04:07.920><c> how</c><00:04:08.159><c> do</c><00:04:08.239><c> we</c><00:04:08.480><c> know</c><00:04:08.799><c> if</c><00:04:09.120><c> this</c><00:04:09.599><c> window</c><00:04:10.080><c> is</c>

00:04:10.390 --> 00:04:10.400 align:start position:0%
a so how do we know if this window is
 

00:04:10.400 --> 00:04:12.869 align:start position:0%
a so how do we know if this window is
valid<00:04:11.120><c> what</c><00:04:11.280><c> we're</c><00:04:11.439><c> gonna</c><00:04:11.760><c> do</c><00:04:12.080><c> is</c><00:04:12.319><c> we're</c><00:04:12.560><c> gonna</c>

00:04:12.869 --> 00:04:12.879 align:start position:0%
valid what we're gonna do is we're gonna
 

00:04:12.879 --> 00:04:13.429 align:start position:0%
valid what we're gonna do is we're gonna
take

00:04:13.429 --> 00:04:13.439 align:start position:0%
take
 

00:04:13.439 --> 00:04:15.830 align:start position:0%
take
the<00:04:13.840><c> length</c><00:04:14.400><c> of</c><00:04:14.560><c> the</c><00:04:14.799><c> window</c><00:04:15.280><c> which</c><00:04:15.519><c> is</c><00:04:15.599><c> gonna</c>

00:04:15.830 --> 00:04:15.840 align:start position:0%
the length of the window which is gonna
 

00:04:15.840 --> 00:04:16.949 align:start position:0%
the length of the window which is gonna
be<00:04:16.160><c> four</c>

00:04:16.949 --> 00:04:16.959 align:start position:0%
be four
 

00:04:16.959 --> 00:04:19.509 align:start position:0%
be four
right<00:04:17.600><c> we're</c><00:04:17.759><c> gonna</c><00:04:18.079><c> take</c><00:04:18.320><c> the</c><00:04:18.799><c> length</c><00:04:19.199><c> of</c><00:04:19.359><c> the</c>

00:04:19.509 --> 00:04:19.519 align:start position:0%
right we're gonna take the length of the
 

00:04:19.519 --> 00:04:21.110 align:start position:0%
right we're gonna take the length of the
window<00:04:19.919><c> right</c><00:04:20.079><c> which</c><00:04:20.320><c> we</c><00:04:20.400><c> know</c><00:04:20.560><c> in</c><00:04:20.720><c> this</c><00:04:20.880><c> case</c>

00:04:21.110 --> 00:04:21.120 align:start position:0%
window right which we know in this case
 

00:04:21.120 --> 00:04:21.670 align:start position:0%
window right which we know in this case
is<00:04:21.280><c> four</c>

00:04:21.670 --> 00:04:21.680 align:start position:0%
is four
 

00:04:21.680 --> 00:04:24.710 align:start position:0%
is four
and<00:04:21.919><c> we're</c><00:04:22.079><c> gonna</c><00:04:22.400><c> take</c><00:04:22.960><c> the</c><00:04:23.280><c> length</c><00:04:23.919><c> or</c><00:04:24.320><c> the</c>

00:04:24.710 --> 00:04:24.720 align:start position:0%
and we're gonna take the length or the
 

00:04:24.720 --> 00:04:27.430 align:start position:0%
and we're gonna take the length or the
count<00:04:25.120><c> of</c><00:04:25.280><c> the</c><00:04:25.600><c> most</c><00:04:26.160><c> frequent</c><00:04:26.800><c> character</c><00:04:27.360><c> in</c>

00:04:27.430 --> 00:04:27.440 align:start position:0%
count of the most frequent character in
 

00:04:27.440 --> 00:04:28.070 align:start position:0%
count of the most frequent character in
this<00:04:27.680><c> case</c>

00:04:28.070 --> 00:04:28.080 align:start position:0%
this case
 

00:04:28.080 --> 00:04:30.310 align:start position:0%
this case
we<00:04:28.320><c> know</c><00:04:28.479><c> that</c><00:04:28.639><c> that's</c><00:04:29.120><c> b</c><00:04:29.440><c> and</c><00:04:29.520><c> the</c><00:04:29.840><c> count</c><00:04:30.160><c> of</c>

00:04:30.310 --> 00:04:30.320 align:start position:0%
we know that that's b and the count of
 

00:04:30.320 --> 00:04:31.189 align:start position:0%
we know that that's b and the count of
it<00:04:30.400><c> happens</c><00:04:30.800><c> to</c><00:04:30.880><c> be</c>

00:04:31.189 --> 00:04:31.199 align:start position:0%
it happens to be
 

00:04:31.199 --> 00:04:33.430 align:start position:0%
it happens to be
three<00:04:31.440><c> so</c><00:04:31.600><c> we're</c><00:04:31.759><c> gonna</c><00:04:31.919><c> take</c><00:04:32.240><c> four</c><00:04:32.960><c> minus</c>

00:04:33.430 --> 00:04:33.440 align:start position:0%
three so we're gonna take four minus
 

00:04:33.440 --> 00:04:34.390 align:start position:0%
three so we're gonna take four minus
three<00:04:34.000><c> and</c>

00:04:34.390 --> 00:04:34.400 align:start position:0%
three and
 

00:04:34.400 --> 00:04:36.469 align:start position:0%
three and
from<00:04:34.639><c> that</c><00:04:34.800><c> we're</c><00:04:35.040><c> gonna</c><00:04:35.199><c> get</c><00:04:35.360><c> a</c><00:04:35.600><c> one</c><00:04:36.080><c> now</c><00:04:36.320><c> what</c>

00:04:36.469 --> 00:04:36.479 align:start position:0%
from that we're gonna get a one now what
 

00:04:36.479 --> 00:04:38.390 align:start position:0%
from that we're gonna get a one now what
does<00:04:36.720><c> this</c><00:04:36.960><c> value</c><00:04:37.520><c> one</c><00:04:37.919><c> tell</c><00:04:38.160><c> us</c>

00:04:38.390 --> 00:04:38.400 align:start position:0%
does this value one tell us
 

00:04:38.400 --> 00:04:40.950 align:start position:0%
does this value one tell us
it<00:04:38.639><c> tells</c><00:04:38.960><c> us</c><00:04:39.280><c> the</c><00:04:39.520><c> number</c><00:04:39.840><c> of</c><00:04:40.080><c> characters</c><00:04:40.720><c> in</c>

00:04:40.950 --> 00:04:40.960 align:start position:0%
it tells us the number of characters in
 

00:04:40.960 --> 00:04:42.070 align:start position:0%
it tells us the number of characters in
our<00:04:41.360><c> window</c><00:04:41.759><c> right</c>

00:04:42.070 --> 00:04:42.080 align:start position:0%
our window right
 

00:04:42.080 --> 00:04:45.189 align:start position:0%
our window right
now<00:04:42.560><c> that</c><00:04:42.800><c> we</c><00:04:43.040><c> need</c><00:04:43.360><c> to</c><00:04:43.520><c> replace</c><00:04:44.560><c> in</c><00:04:44.720><c> order</c><00:04:45.040><c> to</c>

00:04:45.189 --> 00:04:45.199 align:start position:0%
now that we need to replace in order to
 

00:04:45.199 --> 00:04:45.749 align:start position:0%
now that we need to replace in order to
make<00:04:45.440><c> it</c>

00:04:45.749 --> 00:04:45.759 align:start position:0%
make it
 

00:04:45.759 --> 00:04:47.909 align:start position:0%
make it
match<00:04:46.240><c> the</c><00:04:46.479><c> most</c><00:04:46.720><c> frequent</c><00:04:47.199><c> character</c><00:04:47.680><c> b</c>

00:04:47.909 --> 00:04:47.919 align:start position:0%
match the most frequent character b
 

00:04:47.919 --> 00:04:49.110 align:start position:0%
match the most frequent character b
right<00:04:48.080><c> we</c><00:04:48.240><c> have</c><00:04:48.400><c> a</c><00:04:48.479><c> b</c><00:04:48.720><c> here</c>

00:04:49.110 --> 00:04:49.120 align:start position:0%
right we have a b here
 

00:04:49.120 --> 00:04:50.950 align:start position:0%
right we have a b here
we<00:04:49.360><c> want</c><00:04:49.600><c> everything</c><00:04:50.000><c> to</c><00:04:50.160><c> match</c><00:04:50.400><c> a</c><00:04:50.479><c> b</c><00:04:50.720><c> in</c><00:04:50.800><c> this</c>

00:04:50.950 --> 00:04:50.960 align:start position:0%
we want everything to match a b in this
 

00:04:50.960 --> 00:04:52.550 align:start position:0%
we want everything to match a b in this
case<00:04:51.199><c> we</c><00:04:51.360><c> only</c><00:04:51.520><c> have</c><00:04:51.680><c> an</c><00:04:51.919><c> a</c><00:04:52.160><c> right</c><00:04:52.320><c> but</c><00:04:52.479><c> it</c>

00:04:52.550 --> 00:04:52.560 align:start position:0%
case we only have an a right but it
 

00:04:52.560 --> 00:04:53.510 align:start position:0%
case we only have an a right but it
could<00:04:52.639><c> be</c><00:04:52.800><c> possible</c><00:04:53.199><c> like</c>

00:04:53.510 --> 00:04:53.520 align:start position:0%
could be possible like
 

00:04:53.520 --> 00:04:55.350 align:start position:0%
could be possible like
who<00:04:53.680><c> knows</c><00:04:53.919><c> maybe</c><00:04:54.160><c> that</c><00:04:54.400><c> we</c><00:04:54.479><c> would</c><00:04:54.639><c> have</c><00:04:54.720><c> a</c><00:04:54.960><c> c</c>

00:04:55.350 --> 00:04:55.360 align:start position:0%
who knows maybe that we would have a c
 

00:04:55.360 --> 00:04:56.950 align:start position:0%
who knows maybe that we would have a c
over<00:04:55.600><c> here</c><00:04:55.759><c> right</c><00:04:55.919><c> or</c><00:04:56.080><c> an</c><00:04:56.400><c> x</c>

00:04:56.950 --> 00:04:56.960 align:start position:0%
over here right or an x
 

00:04:56.960 --> 00:04:59.189 align:start position:0%
over here right or an x
over<00:04:57.199><c> here</c><00:04:57.680><c> and</c><00:04:58.160><c> it</c><00:04:58.479><c> doesn't</c><00:04:58.720><c> really</c><00:04:58.880><c> matter</c>

00:04:59.189 --> 00:04:59.199 align:start position:0%
over here and it doesn't really matter
 

00:04:59.199 --> 00:05:00.150 align:start position:0%
over here and it doesn't really matter
what<00:04:59.360><c> the</c><00:04:59.520><c> characters</c>

00:05:00.150 --> 00:05:00.160 align:start position:0%
what the characters
 

00:05:00.160 --> 00:05:02.629 align:start position:0%
what the characters
are<00:05:00.560><c> we</c><00:05:00.720><c> just</c><00:05:00.960><c> know</c><00:05:01.199><c> that</c><00:05:01.520><c> b</c><00:05:01.840><c> is</c><00:05:02.000><c> the</c><00:05:02.240><c> most</c>

00:05:02.629 --> 00:05:02.639 align:start position:0%
are we just know that b is the most
 

00:05:02.639 --> 00:05:04.390 align:start position:0%
are we just know that b is the most
frequent<00:05:03.039><c> character</c><00:05:03.440><c> in</c><00:05:03.600><c> the</c><00:05:03.680><c> window</c>

00:05:04.390 --> 00:05:04.400 align:start position:0%
frequent character in the window
 

00:05:04.400 --> 00:05:07.110 align:start position:0%
frequent character in the window
and<00:05:04.880><c> the</c><00:05:05.120><c> other</c><00:05:05.440><c> characters</c><00:05:05.840><c> that</c><00:05:06.000><c> are</c><00:05:06.320><c> not</c><00:05:06.720><c> b</c>

00:05:07.110 --> 00:05:07.120 align:start position:0%
and the other characters that are not b
 

00:05:07.120 --> 00:05:07.830 align:start position:0%
and the other characters that are not b
a<00:05:07.360><c> and</c><00:05:07.520><c> z</c>

00:05:07.830 --> 00:05:07.840 align:start position:0%
a and z
 

00:05:07.840 --> 00:05:09.510 align:start position:0%
a and z
for<00:05:08.000><c> example</c><00:05:08.560><c> are</c><00:05:08.639><c> the</c><00:05:08.800><c> characters</c><00:05:09.199><c> we</c><00:05:09.360><c> want</c>

00:05:09.510 --> 00:05:09.520 align:start position:0%
for example are the characters we want
 

00:05:09.520 --> 00:05:11.510 align:start position:0%
for example are the characters we want
to<00:05:09.680><c> replace</c><00:05:10.320><c> so</c><00:05:10.479><c> we</c><00:05:10.639><c> can</c><00:05:10.880><c> calculate</c><00:05:11.360><c> the</c>

00:05:11.510 --> 00:05:11.520 align:start position:0%
to replace so we can calculate the
 

00:05:11.520 --> 00:05:13.189 align:start position:0%
to replace so we can calculate the
number<00:05:11.759><c> of</c><00:05:11.840><c> characters</c><00:05:12.320><c> we</c><00:05:12.400><c> want</c><00:05:12.560><c> to</c><00:05:12.720><c> pull</c>

00:05:13.189 --> 00:05:13.199 align:start position:0%
number of characters we want to pull
 

00:05:13.199 --> 00:05:16.469 align:start position:0%
number of characters we want to pull
that<00:05:13.360><c> we</c><00:05:13.520><c> want</c><00:05:13.680><c> to</c><00:05:13.759><c> replace</c><00:05:14.639><c> just</c><00:05:15.039><c> like</c><00:05:15.680><c> this</c>

00:05:16.469 --> 00:05:16.479 align:start position:0%
that we want to replace just like this
 

00:05:16.479 --> 00:05:18.950 align:start position:0%
that we want to replace just like this
and<00:05:16.639><c> so</c><00:05:17.120><c> so</c><00:05:17.520><c> we</c><00:05:17.759><c> want</c><00:05:17.919><c> to</c><00:05:18.000><c> replace</c><00:05:18.639><c> one</c>

00:05:18.950 --> 00:05:18.960 align:start position:0%
and so so we want to replace one
 

00:05:18.960 --> 00:05:21.029 align:start position:0%
and so so we want to replace one
character<00:05:19.520><c> how</c><00:05:19.680><c> do</c><00:05:19.840><c> we</c><00:05:20.080><c> know</c><00:05:20.320><c> if</c><00:05:20.479><c> we</c><00:05:20.720><c> have</c>

00:05:21.029 --> 00:05:21.039 align:start position:0%
character how do we know if we have
 

00:05:21.039 --> 00:05:21.909 align:start position:0%
character how do we know if we have
enough

00:05:21.909 --> 00:05:21.919 align:start position:0%
enough
 

00:05:21.919 --> 00:05:24.469 align:start position:0%
enough
replacements<00:05:22.800><c> to</c><00:05:23.039><c> do</c><00:05:23.360><c> one</c><00:05:23.680><c> character</c><00:05:24.160><c> well</c><00:05:24.400><c> of</c>

00:05:24.469 --> 00:05:24.479 align:start position:0%
replacements to do one character well of
 

00:05:24.479 --> 00:05:26.310 align:start position:0%
replacements to do one character well of
course<00:05:24.800><c> that's</c><00:05:25.039><c> our</c><00:05:25.280><c> input</c><00:05:25.600><c> parameter</c>

00:05:26.310 --> 00:05:26.320 align:start position:0%
course that's our input parameter
 

00:05:26.320 --> 00:05:29.270 align:start position:0%
course that's our input parameter
k<00:05:26.720><c> right</c><00:05:27.120><c> so</c><00:05:27.360><c> what</c><00:05:27.600><c> we're</c><00:05:27.840><c> confirming</c><00:05:28.639><c> here</c><00:05:29.120><c> is</c>

00:05:29.270 --> 00:05:29.280 align:start position:0%
k right so what we're confirming here is
 

00:05:29.280 --> 00:05:29.830 align:start position:0%
k right so what we're confirming here is
that

00:05:29.830 --> 00:05:29.840 align:start position:0%
that
 

00:05:29.840 --> 00:05:32.950 align:start position:0%
that
this<00:05:30.240><c> value</c><00:05:30.800><c> is</c><00:05:31.120><c> less</c><00:05:31.440><c> than</c><00:05:31.680><c> or</c><00:05:31.919><c> equal</c><00:05:32.560><c> to</c>

00:05:32.950 --> 00:05:32.960 align:start position:0%
this value is less than or equal to
 

00:05:32.960 --> 00:05:36.469 align:start position:0%
this value is less than or equal to
k<00:05:33.520><c> as</c><00:05:33.840><c> long</c><00:05:34.160><c> as</c><00:05:34.400><c> this</c><00:05:34.720><c> condition</c><00:05:35.440><c> is</c><00:05:35.759><c> true</c>

00:05:36.469 --> 00:05:36.479 align:start position:0%
k as long as this condition is true
 

00:05:36.479 --> 00:05:39.749 align:start position:0%
k as long as this condition is true
that<00:05:36.720><c> means</c><00:05:37.120><c> our</c><00:05:37.360><c> current</c><00:05:37.919><c> window</c><00:05:38.560><c> is</c><00:05:38.960><c> valid</c>

00:05:39.749 --> 00:05:39.759 align:start position:0%
that means our current window is valid
 

00:05:39.759 --> 00:05:42.150 align:start position:0%
that means our current window is valid
that<00:05:39.919><c> means</c><00:05:40.160><c> we</c><00:05:40.400><c> have</c><00:05:40.639><c> enough</c><00:05:41.120><c> replacements</c>

00:05:42.150 --> 00:05:42.160 align:start position:0%
that means we have enough replacements
 

00:05:42.160 --> 00:05:43.909 align:start position:0%
that means we have enough replacements
to<00:05:42.560><c> make</c><00:05:42.880><c> those</c><00:05:43.120><c> replacements</c>

00:05:43.909 --> 00:05:43.919 align:start position:0%
to make those replacements
 

00:05:43.919 --> 00:05:46.469 align:start position:0%
to make those replacements
in<00:05:44.160><c> our</c><00:05:44.400><c> current</c><00:05:44.880><c> window</c><00:05:45.520><c> so</c><00:05:45.840><c> this</c><00:05:46.080><c> is</c><00:05:46.240><c> the</c>

00:05:46.469 --> 00:05:46.479 align:start position:0%
in our current window so this is the
 

00:05:46.479 --> 00:05:48.150 align:start position:0%
in our current window so this is the
main<00:05:46.800><c> condition</c><00:05:47.280><c> that</c><00:05:47.440><c> we're</c><00:05:47.600><c> going</c><00:05:47.759><c> to</c><00:05:47.840><c> be</c>

00:05:48.150 --> 00:05:48.160 align:start position:0%
main condition that we're going to be
 

00:05:48.160 --> 00:05:50.310 align:start position:0%
main condition that we're going to be
checking<00:05:48.880><c> the</c><00:05:49.120><c> other</c><00:05:49.440><c> question</c><00:05:49.759><c> is</c><00:05:49.919><c> how</c><00:05:50.160><c> are</c>

00:05:50.310 --> 00:05:50.320 align:start position:0%
checking the other question is how are
 

00:05:50.320 --> 00:05:52.070 align:start position:0%
checking the other question is how are
we<00:05:50.479><c> going</c><00:05:50.560><c> to</c><00:05:50.800><c> know</c><00:05:51.039><c> which</c><00:05:51.360><c> character</c><00:05:51.840><c> is</c><00:05:51.919><c> the</c>

00:05:52.070 --> 00:05:52.080 align:start position:0%
we going to know which character is the
 

00:05:52.080 --> 00:05:53.270 align:start position:0%
we going to know which character is the
most<00:05:52.479><c> frequent</c><00:05:52.960><c> well</c>

00:05:53.270 --> 00:05:53.280 align:start position:0%
most frequent well
 

00:05:53.280 --> 00:05:55.590 align:start position:0%
most frequent well
the<00:05:53.520><c> brute</c><00:05:53.840><c> force</c><00:05:54.240><c> way</c><00:05:54.479><c> is</c><00:05:54.639><c> gonna</c><00:05:54.880><c> be</c><00:05:55.120><c> taking</c><00:05:55.440><c> a</c>

00:05:55.590 --> 00:05:55.600 align:start position:0%
the brute force way is gonna be taking a
 

00:05:55.600 --> 00:05:57.189 align:start position:0%
the brute force way is gonna be taking a
look<00:05:56.080><c> at</c><00:05:56.319><c> our</c><00:05:56.639><c> map</c>

00:05:57.189 --> 00:05:57.199 align:start position:0%
look at our map
 

00:05:57.199 --> 00:05:59.990 align:start position:0%
look at our map
of<00:05:57.440><c> counts</c><00:05:58.080><c> and</c><00:05:58.400><c> we</c><00:05:58.560><c> know</c><00:05:58.720><c> that</c><00:05:58.880><c> the</c><00:05:59.120><c> max</c><00:05:59.600><c> size</c>

00:05:59.990 --> 00:06:00.000 align:start position:0%
of counts and we know that the max size
 

00:06:00.000 --> 00:06:01.350 align:start position:0%
of counts and we know that the max size
of<00:06:00.080><c> this</c><00:06:00.319><c> could</c><00:06:00.560><c> possibly</c><00:06:01.039><c> be</c>

00:06:01.350 --> 00:06:01.360 align:start position:0%
of this could possibly be
 

00:06:01.360 --> 00:06:04.230 align:start position:0%
of this could possibly be
26<00:06:02.080><c> because</c><00:06:02.479><c> we'd</c><00:06:02.720><c> only</c><00:06:02.960><c> have</c><00:06:03.199><c> 26</c><00:06:03.840><c> different</c>

00:06:04.230 --> 00:06:04.240 align:start position:0%
26 because we'd only have 26 different
 

00:06:04.240 --> 00:06:05.029 align:start position:0%
26 because we'd only have 26 different
characters

00:06:05.029 --> 00:06:05.039 align:start position:0%
characters
 

00:06:05.039 --> 00:06:07.189 align:start position:0%
characters
so<00:06:05.600><c> doing</c><00:06:06.160><c> finding</c><00:06:06.400><c> the</c><00:06:06.560><c> max</c><00:06:06.800><c> character</c><00:06:07.120><c> is</c>

00:06:07.189 --> 00:06:07.199 align:start position:0%
so doing finding the max character is
 

00:06:07.199 --> 00:06:09.189 align:start position:0%
so doing finding the max character is
going<00:06:07.280><c> to</c><00:06:07.360><c> be</c><00:06:07.520><c> big</c><00:06:07.759><c> o</c><00:06:07.919><c> of</c><00:06:08.080><c> 26</c><00:06:08.560><c> so</c><00:06:08.720><c> that's</c>

00:06:09.189 --> 00:06:09.199 align:start position:0%
going to be big o of 26 so that's
 

00:06:09.199 --> 00:06:11.270 align:start position:0%
going to be big o of 26 so that's
a<00:06:09.280><c> little</c><00:06:09.520><c> bit</c><00:06:10.080><c> more</c><00:06:10.400><c> inefficient</c><00:06:10.960><c> than</c><00:06:11.120><c> we</c>

00:06:11.270 --> 00:06:11.280 align:start position:0%
a little bit more inefficient than we
 

00:06:11.280 --> 00:06:13.670 align:start position:0%
a little bit more inefficient than we
would<00:06:11.600><c> like</c><00:06:12.000><c> but</c><00:06:12.240><c> it's</c><00:06:12.479><c> technically</c><00:06:13.199><c> still</c>

00:06:13.670 --> 00:06:13.680 align:start position:0%
would like but it's technically still
 

00:06:13.680 --> 00:06:16.150 align:start position:0%
would like but it's technically still
linear<00:06:14.240><c> time</c><00:06:14.800><c> like</c><00:06:14.960><c> the</c><00:06:15.199><c> overall</c><00:06:15.680><c> algorithm</c>

00:06:16.150 --> 00:06:16.160 align:start position:0%
linear time like the overall algorithm
 

00:06:16.160 --> 00:06:17.749 align:start position:0%
linear time like the overall algorithm
is<00:06:16.319><c> still</c><00:06:16.479><c> going</c><00:06:16.560><c> to</c><00:06:16.639><c> be</c><00:06:16.880><c> linear</c><00:06:17.280><c> time</c>

00:06:17.749 --> 00:06:17.759 align:start position:0%
is still going to be linear time
 

00:06:17.759 --> 00:06:19.270 align:start position:0%
is still going to be linear time
the<00:06:18.160><c> the</c><00:06:18.319><c> last</c><00:06:18.560><c> thing</c><00:06:18.720><c> that</c><00:06:18.880><c> we're</c><00:06:18.960><c> gonna</c><00:06:19.120><c> have</c>

00:06:19.270 --> 00:06:19.280 align:start position:0%
the the last thing that we're gonna have
 

00:06:19.280 --> 00:06:21.510 align:start position:0%
the the last thing that we're gonna have
to<00:06:19.360><c> do</c><00:06:19.600><c> though</c><00:06:20.080><c> is</c><00:06:20.720><c> to</c><00:06:20.960><c> this</c>

00:06:21.510 --> 00:06:21.520 align:start position:0%
to do though is to this
 

00:06:21.520 --> 00:06:23.670 align:start position:0%
to do though is to this
uh<00:06:21.840><c> equation</c><00:06:22.400><c> we're</c><00:06:22.560><c> gonna</c><00:06:22.720><c> have</c><00:06:22.880><c> to</c><00:06:23.039><c> add</c><00:06:23.440><c> a</c>

00:06:23.670 --> 00:06:23.680 align:start position:0%
uh equation we're gonna have to add a
 

00:06:23.680 --> 00:06:25.749 align:start position:0%
uh equation we're gonna have to add a
sliding<00:06:24.319><c> window</c><00:06:24.720><c> technique</c><00:06:25.120><c> so</c><00:06:25.360><c> basically</c>

00:06:25.749 --> 00:06:25.759 align:start position:0%
sliding window technique so basically
 

00:06:25.759 --> 00:06:27.350 align:start position:0%
sliding window technique so basically
what<00:06:25.919><c> we're</c><00:06:26.080><c> gonna</c><00:06:26.319><c> do</c><00:06:26.560><c> is</c><00:06:26.720><c> we're</c><00:06:26.880><c> gonna</c><00:06:27.120><c> take</c>

00:06:27.350 --> 00:06:27.360 align:start position:0%
what we're gonna do is we're gonna take
 

00:06:27.360 --> 00:06:28.150 align:start position:0%
what we're gonna do is we're gonna take
our<00:06:27.520><c> window</c>

00:06:28.150 --> 00:06:28.160 align:start position:0%
our window
 

00:06:28.160 --> 00:06:30.390 align:start position:0%
our window
start<00:06:28.479><c> at</c><00:06:28.560><c> the</c><00:06:28.639><c> beginning</c><00:06:29.280><c> expand</c><00:06:29.919><c> it</c><00:06:30.080><c> as</c><00:06:30.160><c> much</c>

00:06:30.390 --> 00:06:30.400 align:start position:0%
start at the beginning expand it as much
 

00:06:30.400 --> 00:06:31.909 align:start position:0%
start at the beginning expand it as much
as<00:06:30.560><c> we</c><00:06:30.800><c> can</c><00:06:31.039><c> as</c><00:06:31.280><c> long</c><00:06:31.440><c> as</c><00:06:31.600><c> the</c>

00:06:31.909 --> 00:06:31.919 align:start position:0%
as we can as long as the
 

00:06:31.919 --> 00:06:34.150 align:start position:0%
as we can as long as the
the<00:06:32.160><c> condition</c><00:06:32.560><c> that</c><00:06:32.639><c> we</c><00:06:32.880><c> mentioned</c><00:06:33.280><c> is</c><00:06:33.520><c> valid</c>

00:06:34.150 --> 00:06:34.160 align:start position:0%
the condition that we mentioned is valid
 

00:06:34.160 --> 00:06:35.990 align:start position:0%
the condition that we mentioned is valid
if<00:06:34.319><c> the</c><00:06:34.479><c> condition</c><00:06:34.880><c> is</c><00:06:35.039><c> not</c><00:06:35.360><c> valid</c><00:06:35.680><c> then</c><00:06:35.840><c> we're</c>

00:06:35.990 --> 00:06:36.000 align:start position:0%
if the condition is not valid then we're
 

00:06:36.000 --> 00:06:37.590 align:start position:0%
if the condition is not valid then we're
going<00:06:36.080><c> to</c><00:06:36.160><c> take</c><00:06:36.400><c> our</c><00:06:36.639><c> left</c><00:06:36.960><c> pointer</c>

00:06:37.590 --> 00:06:37.600 align:start position:0%
going to take our left pointer
 

00:06:37.600 --> 00:06:39.749 align:start position:0%
going to take our left pointer
and<00:06:37.759><c> then</c><00:06:38.319><c> take</c><00:06:38.560><c> our</c><00:06:38.720><c> left</c><00:06:38.880><c> pointer</c><00:06:39.280><c> and</c><00:06:39.360><c> then</c>

00:06:39.749 --> 00:06:39.759 align:start position:0%
and then take our left pointer and then
 

00:06:39.759 --> 00:06:41.189 align:start position:0%
and then take our left pointer and then
shift<00:06:40.080><c> it</c><00:06:40.560><c> as</c><00:06:40.800><c> well</c>

00:06:41.189 --> 00:06:41.199 align:start position:0%
shift it as well
 

00:06:41.199 --> 00:06:43.830 align:start position:0%
shift it as well
until<00:06:41.600><c> the</c><00:06:41.759><c> string</c><00:06:42.560><c> becomes</c><00:06:43.120><c> valid</c><00:06:43.520><c> once</c>

00:06:43.830 --> 00:06:43.840 align:start position:0%
until the string becomes valid once
 

00:06:43.840 --> 00:06:44.550 align:start position:0%
until the string becomes valid once
again

00:06:44.550 --> 00:06:44.560 align:start position:0%
again
 

00:06:44.560 --> 00:06:46.150 align:start position:0%
again
so<00:06:44.720><c> we're</c><00:06:44.880><c> going</c><00:06:44.960><c> to</c><00:06:45.039><c> have</c><00:06:45.199><c> a</c><00:06:45.360><c> left</c><00:06:45.680><c> and</c><00:06:45.840><c> right</c>

00:06:46.150 --> 00:06:46.160 align:start position:0%
so we're going to have a left and right
 

00:06:46.160 --> 00:06:48.390 align:start position:0%
so we're going to have a left and right
pointer<00:06:46.479><c> so</c><00:06:46.639><c> initially</c><00:06:47.360><c> left</c><00:06:47.680><c> is</c><00:06:47.919><c> gonna</c><00:06:48.080><c> be</c><00:06:48.240><c> at</c>

00:06:48.390 --> 00:06:48.400 align:start position:0%
pointer so initially left is gonna be at
 

00:06:48.400 --> 00:06:49.430 align:start position:0%
pointer so initially left is gonna be at
the<00:06:48.560><c> beginning</c><00:06:49.039><c> and</c>

00:06:49.430 --> 00:06:49.440 align:start position:0%
the beginning and
 

00:06:49.440 --> 00:06:51.990 align:start position:0%
the beginning and
right<00:06:49.840><c> is</c><00:06:50.160><c> also</c><00:06:50.479><c> gonna</c><00:06:50.720><c> be</c><00:06:50.960><c> at</c><00:06:51.120><c> the</c><00:06:51.280><c> beginning</c>

00:06:51.990 --> 00:06:52.000 align:start position:0%
right is also gonna be at the beginning
 

00:06:52.000 --> 00:06:53.830 align:start position:0%
right is also gonna be at the beginning
and<00:06:52.240><c> also</c><00:06:52.560><c> the</c><00:06:52.800><c> counts</c><00:06:53.199><c> of</c><00:06:53.440><c> a</c>

00:06:53.830 --> 00:06:53.840 align:start position:0%
and also the counts of a
 

00:06:53.840 --> 00:06:56.469 align:start position:0%
and also the counts of a
and<00:06:54.000><c> b</c><00:06:54.319><c> are</c><00:06:54.479><c> initially</c><00:06:54.960><c> gonna</c><00:06:55.199><c> be</c><00:06:55.440><c> zero</c><00:06:55.840><c> now</c>

00:06:56.469 --> 00:06:56.479 align:start position:0%
and b are initially gonna be zero now
 

00:06:56.479 --> 00:06:57.909 align:start position:0%
and b are initially gonna be zero now
we're<00:06:56.639><c> gonna</c><00:06:56.800><c> look</c><00:06:56.960><c> at</c><00:06:57.039><c> the</c><00:06:57.199><c> first</c><00:06:57.440><c> character</c>

00:06:57.909 --> 00:06:57.919 align:start position:0%
we're gonna look at the first character
 

00:06:57.919 --> 00:06:58.309 align:start position:0%
we're gonna look at the first character
right

00:06:58.309 --> 00:06:58.319 align:start position:0%
right
 

00:06:58.319 --> 00:06:59.749 align:start position:0%
right
that's<00:06:58.560><c> where</c><00:06:58.720><c> our</c><00:06:58.960><c> right</c><00:06:59.199><c> pointer</c><00:06:59.440><c> happens</c>

00:06:59.749 --> 00:06:59.759 align:start position:0%
that's where our right pointer happens
 

00:06:59.759 --> 00:07:00.950 align:start position:0%
that's where our right pointer happens
to<00:06:59.840><c> be</c><00:07:00.080><c> we're</c><00:07:00.240><c> gonna</c><00:07:00.319><c> look</c><00:07:00.479><c> at</c><00:07:00.639><c> it</c><00:07:00.720><c> we're</c><00:07:00.800><c> gonna</c>

00:07:00.950 --> 00:07:00.960 align:start position:0%
to be we're gonna look at it we're gonna
 

00:07:00.960 --> 00:07:02.150 align:start position:0%
to be we're gonna look at it we're gonna
say<00:07:01.120><c> okay</c><00:07:01.360><c> we</c><00:07:01.520><c> have</c><00:07:01.680><c> a</c>

00:07:02.150 --> 00:07:02.160 align:start position:0%
say okay we have a
 

00:07:02.160 --> 00:07:03.749 align:start position:0%
say okay we have a
we<00:07:02.319><c> have</c><00:07:02.400><c> a</c><00:07:02.479><c> single</c><00:07:02.960><c> a</c><00:07:03.280><c> right</c><00:07:03.440><c> we're</c><00:07:03.599><c> going</c><00:07:03.680><c> to</c>

00:07:03.749 --> 00:07:03.759 align:start position:0%
we have a single a right we're going to
 

00:07:03.759 --> 00:07:05.589 align:start position:0%
we have a single a right we're going to
take<00:07:04.000><c> our</c><00:07:04.240><c> count</c><00:07:04.880><c> of</c><00:07:05.120><c> a</c>

00:07:05.589 --> 00:07:05.599 align:start position:0%
take our count of a
 

00:07:05.599 --> 00:07:08.790 align:start position:0%
take our count of a
and<00:07:06.080><c> set</c><00:07:06.319><c> it</c><00:07:06.479><c> to</c><00:07:06.800><c> 1</c><00:07:07.199><c> now</c><00:07:07.840><c> so</c><00:07:08.160><c> is</c><00:07:08.400><c> this</c>

00:07:08.790 --> 00:07:08.800 align:start position:0%
and set it to 1 now so is this
 

00:07:08.800 --> 00:07:12.070 align:start position:0%
and set it to 1 now so is this
window<00:07:09.360><c> valid</c><00:07:10.240><c> as</c><00:07:10.479><c> in</c><00:07:10.720><c> can</c><00:07:11.199><c> this</c><00:07:11.520><c> window</c><00:07:11.840><c> be</c>

00:07:12.070 --> 00:07:12.080 align:start position:0%
window valid as in can this window be
 

00:07:12.080 --> 00:07:13.350 align:start position:0%
window valid as in can this window be
the<00:07:12.160><c> exact</c><00:07:12.479><c> same</c><00:07:12.800><c> character</c>

00:07:13.350 --> 00:07:13.360 align:start position:0%
the exact same character
 

00:07:13.360 --> 00:07:15.589 align:start position:0%
the exact same character
with<00:07:13.759><c> within</c><00:07:14.240><c> two</c><00:07:14.560><c> replacements</c><00:07:15.280><c> of</c><00:07:15.360><c> course</c>

00:07:15.589 --> 00:07:15.599 align:start position:0%
with within two replacements of course
 

00:07:15.599 --> 00:07:17.350 align:start position:0%
with within two replacements of course
it<00:07:15.680><c> can</c><00:07:15.919><c> right</c><00:07:16.080><c> that's</c><00:07:16.400><c> kind</c><00:07:16.560><c> of</c><00:07:16.720><c> the</c><00:07:16.880><c> trivial</c>

00:07:17.350 --> 00:07:17.360 align:start position:0%
it can right that's kind of the trivial
 

00:07:17.360 --> 00:07:18.070 align:start position:0%
it can right that's kind of the trivial
case<00:07:17.759><c> but</c>

00:07:18.070 --> 00:07:18.080 align:start position:0%
case but
 

00:07:18.080 --> 00:07:20.230 align:start position:0%
case but
we<00:07:18.240><c> would</c><00:07:18.479><c> still</c><00:07:18.800><c> calculate</c><00:07:19.440><c> it</c><00:07:19.759><c> and</c><00:07:19.919><c> the</c><00:07:20.080><c> way</c>

00:07:20.230 --> 00:07:20.240 align:start position:0%
we would still calculate it and the way
 

00:07:20.240 --> 00:07:21.990 align:start position:0%
we would still calculate it and the way
we<00:07:20.400><c> would</c><00:07:20.560><c> calculate</c><00:07:21.039><c> it</c><00:07:21.120><c> is</c><00:07:21.280><c> get</c><00:07:21.440><c> the</c><00:07:21.599><c> size</c><00:07:21.840><c> of</c>

00:07:21.990 --> 00:07:22.000 align:start position:0%
we would calculate it is get the size of
 

00:07:22.000 --> 00:07:23.350 align:start position:0%
we would calculate it is get the size of
our<00:07:22.080><c> window</c><00:07:22.319><c> right</c><00:07:22.479><c> now</c><00:07:22.639><c> we</c><00:07:22.720><c> can</c><00:07:22.800><c> see</c><00:07:22.960><c> the</c><00:07:23.120><c> size</c>

00:07:23.350 --> 00:07:23.360 align:start position:0%
our window right now we can see the size
 

00:07:23.360 --> 00:07:24.390 align:start position:0%
our window right now we can see the size
of<00:07:23.440><c> our</c><00:07:23.520><c> window</c><00:07:24.000><c> is</c>

00:07:24.390 --> 00:07:24.400 align:start position:0%
of our window is
 

00:07:24.400 --> 00:07:27.510 align:start position:0%
of our window is
one<00:07:25.360><c> subtracted</c><00:07:26.160><c> by</c><00:07:26.319><c> the</c><00:07:26.639><c> count</c><00:07:27.039><c> of</c>

00:07:27.510 --> 00:07:27.520 align:start position:0%
one subtracted by the count of
 

00:07:27.520 --> 00:07:29.350 align:start position:0%
one subtracted by the count of
the<00:07:27.680><c> most</c><00:07:27.919><c> frequent</c><00:07:28.319><c> character</c><00:07:28.639><c> in</c><00:07:28.800><c> this</c><00:07:28.960><c> case</c>

00:07:29.350 --> 00:07:29.360 align:start position:0%
the most frequent character in this case
 

00:07:29.360 --> 00:07:30.950 align:start position:0%
the most frequent character in this case
we<00:07:29.520><c> know</c><00:07:29.680><c> the</c><00:07:29.759><c> most</c><00:07:30.000><c> frequent</c><00:07:30.319><c> character</c><00:07:30.639><c> is</c><00:07:30.800><c> a</c>

00:07:30.950 --> 00:07:30.960 align:start position:0%
we know the most frequent character is a
 

00:07:30.960 --> 00:07:32.070 align:start position:0%
we know the most frequent character is a
one<00:07:31.199><c> minus</c><00:07:31.520><c> one</c>

00:07:32.070 --> 00:07:32.080 align:start position:0%
one minus one
 

00:07:32.080 --> 00:07:34.870 align:start position:0%
one minus one
is<00:07:32.240><c> that</c><00:07:32.560><c> greater</c><00:07:33.599><c> is</c><00:07:33.759><c> that</c><00:07:34.080><c> less</c><00:07:34.400><c> than</c><00:07:34.639><c> or</c>

00:07:34.870 --> 00:07:34.880 align:start position:0%
is that greater is that less than or
 

00:07:34.880 --> 00:07:37.670 align:start position:0%
is that greater is that less than or
equal<00:07:35.120><c> to</c><00:07:35.280><c> k</c><00:07:35.520><c> we</c><00:07:35.680><c> know</c><00:07:35.919><c> k</c><00:07:36.160><c> is</c><00:07:36.400><c> two</c><00:07:36.639><c> so</c><00:07:36.800><c> of</c><00:07:36.960><c> course</c>

00:07:37.670 --> 00:07:37.680 align:start position:0%
equal to k we know k is two so of course
 

00:07:37.680 --> 00:07:39.670 align:start position:0%
equal to k we know k is two so of course
uh<00:07:38.160><c> this</c><00:07:38.319><c> is</c><00:07:38.400><c> going</c><00:07:38.560><c> to</c><00:07:38.639><c> equal</c><00:07:38.960><c> zero</c><00:07:39.280><c> zero</c><00:07:39.599><c> is</c>

00:07:39.670 --> 00:07:39.680 align:start position:0%
uh this is going to equal zero zero is
 

00:07:39.680 --> 00:07:41.350 align:start position:0%
uh this is going to equal zero zero is
less<00:07:39.840><c> than</c><00:07:40.080><c> equal</c><00:07:40.319><c> to</c><00:07:40.560><c> two</c><00:07:40.800><c> which</c><00:07:40.960><c> is</c><00:07:41.120><c> k</c>

00:07:41.350 --> 00:07:41.360 align:start position:0%
less than equal to two which is k
 

00:07:41.360 --> 00:07:43.189 align:start position:0%
less than equal to two which is k
right<00:07:41.520><c> so</c><00:07:41.840><c> of</c><00:07:41.919><c> course</c><00:07:42.160><c> this</c><00:07:42.400><c> window</c><00:07:42.720><c> is</c><00:07:42.880><c> valid</c>

00:07:43.189 --> 00:07:43.199 align:start position:0%
right so of course this window is valid
 

00:07:43.199 --> 00:07:45.189 align:start position:0%
right so of course this window is valid
that's<00:07:43.440><c> kind</c><00:07:43.599><c> of</c><00:07:43.840><c> a</c><00:07:44.000><c> trivial</c><00:07:44.479><c> case</c>

00:07:45.189 --> 00:07:45.199 align:start position:0%
that's kind of a trivial case
 

00:07:45.199 --> 00:07:47.110 align:start position:0%
that's kind of a trivial case
next<00:07:45.599><c> we're</c><00:07:45.759><c> going</c><00:07:45.840><c> to</c><00:07:46.000><c> shift</c><00:07:46.400><c> our</c><00:07:46.800><c> right</c>

00:07:47.110 --> 00:07:47.120 align:start position:0%
next we're going to shift our right
 

00:07:47.120 --> 00:07:49.270 align:start position:0%
next we're going to shift our right
pointer<00:07:47.520><c> to</c><00:07:47.680><c> the</c><00:07:47.840><c> next</c><00:07:48.080><c> character</c><00:07:48.479><c> right</c>

00:07:49.270 --> 00:07:49.280 align:start position:0%
pointer to the next character right
 

00:07:49.280 --> 00:07:50.790 align:start position:0%
pointer to the next character right
so<00:07:49.440><c> now</c><00:07:49.599><c> we</c><00:07:49.759><c> have</c><00:07:49.919><c> a</c><00:07:50.000><c> b</c><00:07:50.319><c> so</c><00:07:50.479><c> we're</c><00:07:50.560><c> going</c><00:07:50.639><c> to</c>

00:07:50.790 --> 00:07:50.800 align:start position:0%
so now we have a b so we're going to
 

00:07:50.800 --> 00:07:52.710 align:start position:0%
so now we have a b so we're going to
increment<00:07:51.199><c> the</c><00:07:51.360><c> count</c><00:07:51.680><c> of</c><00:07:51.840><c> b</c><00:07:52.080><c> in</c><00:07:52.240><c> our</c><00:07:52.400><c> map</c>

00:07:52.710 --> 00:07:52.720 align:start position:0%
increment the count of b in our map
 

00:07:52.720 --> 00:07:55.270 align:start position:0%
increment the count of b in our map
so<00:07:52.960><c> b</c><00:07:53.120><c> is</c><00:07:53.199><c> now</c><00:07:53.440><c> going</c><00:07:53.520><c> to</c><00:07:53.599><c> be</c><00:07:53.759><c> set</c><00:07:54.000><c> to</c><00:07:54.319><c> 1.</c><00:07:55.199><c> in</c>

00:07:55.270 --> 00:07:55.280 align:start position:0%
so b is now going to be set to 1. in
 

00:07:55.280 --> 00:07:57.110 align:start position:0%
so b is now going to be set to 1. in
this<00:07:55.520><c> case</c><00:07:55.759><c> the</c><00:07:55.919><c> length</c><00:07:56.160><c> of</c><00:07:56.319><c> our</c><00:07:56.400><c> window</c><00:07:56.720><c> is</c><00:07:56.879><c> 2</c>

00:07:57.110 --> 00:07:57.120 align:start position:0%
this case the length of our window is 2
 

00:07:57.120 --> 00:07:59.430 align:start position:0%
this case the length of our window is 2
the<00:07:57.840><c> most</c><00:07:58.080><c> frequent</c><00:07:58.479><c> character</c><00:07:58.879><c> is</c><00:07:59.039><c> either</c><00:07:59.360><c> of</c>

00:07:59.430 --> 00:07:59.440 align:start position:0%
the most frequent character is either of
 

00:07:59.440 --> 00:08:00.390 align:start position:0%
the most frequent character is either of
these<00:07:59.759><c> right</c><00:08:00.000><c> and</c><00:08:00.160><c> the</c>

00:08:00.390 --> 00:08:00.400 align:start position:0%
these right and the
 

00:08:00.400 --> 00:08:02.150 align:start position:0%
these right and the
the<00:08:00.800><c> count</c><00:08:01.039><c> of</c><00:08:01.199><c> that</c><00:08:01.360><c> frequent</c><00:08:01.759><c> character</c><00:08:02.080><c> is</c>

00:08:02.150 --> 00:08:02.160 align:start position:0%
the count of that frequent character is
 

00:08:02.160 --> 00:08:03.350 align:start position:0%
the count of that frequent character is
gonna<00:08:02.319><c> be</c><00:08:02.400><c> one</c><00:08:02.639><c> so</c><00:08:02.800><c> we're</c><00:08:02.879><c> gonna</c><00:08:03.039><c> have</c><00:08:03.120><c> two</c>

00:08:03.350 --> 00:08:03.360 align:start position:0%
gonna be one so we're gonna have two
 

00:08:03.360 --> 00:08:04.950 align:start position:0%
gonna be one so we're gonna have two
minus<00:08:03.599><c> one</c><00:08:03.919><c> equal</c><00:08:04.240><c> to</c><00:08:04.479><c> one</c>

00:08:04.950 --> 00:08:04.960 align:start position:0%
minus one equal to one
 

00:08:04.960 --> 00:08:06.710 align:start position:0%
minus one equal to one
so<00:08:05.199><c> this</c><00:08:05.360><c> is</c><00:08:05.440><c> the</c><00:08:05.599><c> number</c><00:08:05.840><c> of</c><00:08:06.000><c> replacements</c>

00:08:06.710 --> 00:08:06.720 align:start position:0%
so this is the number of replacements
 

00:08:06.720 --> 00:08:08.150 align:start position:0%
so this is the number of replacements
that<00:08:06.879><c> we</c><00:08:06.960><c> would</c><00:08:07.120><c> have</c><00:08:07.280><c> to</c><00:08:07.440><c> do</c><00:08:07.759><c> and</c>

00:08:08.150 --> 00:08:08.160 align:start position:0%
that we would have to do and
 

00:08:08.160 --> 00:08:09.749 align:start position:0%
that we would have to do and
looking<00:08:08.479><c> at</c><00:08:08.560><c> our</c><00:08:08.720><c> current</c><00:08:09.039><c> window</c><00:08:09.360><c> that</c><00:08:09.520><c> makes</c>

00:08:09.749 --> 00:08:09.759 align:start position:0%
looking at our current window that makes
 

00:08:09.759 --> 00:08:11.029 align:start position:0%
looking at our current window that makes
sense<00:08:10.000><c> right</c><00:08:10.160><c> we'd</c><00:08:10.400><c> have</c><00:08:10.479><c> to</c><00:08:10.560><c> replace</c><00:08:10.960><c> at</c>

00:08:11.029 --> 00:08:11.039 align:start position:0%
sense right we'd have to replace at
 

00:08:11.039 --> 00:08:13.189 align:start position:0%
sense right we'd have to replace at
least<00:08:11.360><c> one</c><00:08:11.520><c> of</c><00:08:11.599><c> these</c><00:08:11.919><c> two</c><00:08:12.160><c> characters</c>

00:08:13.189 --> 00:08:13.199 align:start position:0%
least one of these two characters
 

00:08:13.199 --> 00:08:15.830 align:start position:0%
least one of these two characters
so<00:08:13.840><c> we're</c><00:08:14.000><c> going</c><00:08:14.080><c> to</c><00:08:14.319><c> ensure</c><00:08:14.800><c> that</c><00:08:15.039><c> this</c><00:08:15.759><c> the</c>

00:08:15.830 --> 00:08:15.840 align:start position:0%
so we're going to ensure that this the
 

00:08:15.840 --> 00:08:17.270 align:start position:0%
so we're going to ensure that this the
number<00:08:16.080><c> of</c><00:08:16.160><c> replacements</c><00:08:16.720><c> that</c><00:08:16.800><c> we</c><00:08:16.960><c> need</c><00:08:17.120><c> to</c>

00:08:17.270 --> 00:08:17.280 align:start position:0%
number of replacements that we need to
 

00:08:17.280 --> 00:08:18.869 align:start position:0%
number of replacements that we need to
do<00:08:17.440><c> is</c><00:08:17.599><c> less</c><00:08:17.759><c> than</c><00:08:17.919><c> or</c><00:08:18.080><c> equal</c><00:08:18.240><c> to</c><00:08:18.400><c> k</c><00:08:18.639><c> which</c><00:08:18.800><c> is</c>

00:08:18.869 --> 00:08:18.879 align:start position:0%
do is less than or equal to k which is
 

00:08:18.879 --> 00:08:20.469 align:start position:0%
do is less than or equal to k which is
two<00:08:19.120><c> of</c><00:08:19.199><c> course</c><00:08:19.440><c> that's</c><00:08:19.759><c> true</c><00:08:20.080><c> so</c>

00:08:20.469 --> 00:08:20.479 align:start position:0%
two of course that's true so
 

00:08:20.479 --> 00:08:22.790 align:start position:0%
two of course that's true so
our<00:08:20.639><c> window</c><00:08:20.960><c> is</c><00:08:21.039><c> currently</c><00:08:21.520><c> valid</c><00:08:22.240><c> i</c><00:08:22.319><c> guess</c><00:08:22.560><c> i</c>

00:08:22.790 --> 00:08:22.800 align:start position:0%
our window is currently valid i guess i
 

00:08:22.800 --> 00:08:23.589 align:start position:0%
our window is currently valid i guess i
did<00:08:22.960><c> forget</c><00:08:23.280><c> to</c>

00:08:23.589 --> 00:08:23.599 align:start position:0%
did forget to
 

00:08:23.599 --> 00:08:25.749 align:start position:0%
did forget to
update<00:08:23.919><c> our</c><00:08:24.080><c> result</c><00:08:24.560><c> so</c><00:08:24.960><c> since</c><00:08:25.199><c> this</c><00:08:25.440><c> window</c>

00:08:25.749 --> 00:08:25.759 align:start position:0%
update our result so since this window
 

00:08:25.759 --> 00:08:27.990 align:start position:0%
update our result so since this window
is<00:08:25.919><c> valid</c><00:08:26.560><c> the</c><00:08:26.800><c> length</c><00:08:27.199><c> of</c><00:08:27.360><c> the</c><00:08:27.520><c> window</c><00:08:27.840><c> is</c>

00:08:27.990 --> 00:08:28.000 align:start position:0%
is valid the length of the window is
 

00:08:28.000 --> 00:08:28.710 align:start position:0%
is valid the length of the window is
gonna<00:08:28.240><c> be</c>

00:08:28.710 --> 00:08:28.720 align:start position:0%
gonna be
 

00:08:28.720 --> 00:08:30.469 align:start position:0%
gonna be
set<00:08:28.879><c> to</c><00:08:29.039><c> the</c><00:08:29.199><c> result</c><00:08:29.520><c> right</c><00:08:29.759><c> so</c><00:08:30.000><c> right</c><00:08:30.160><c> now</c><00:08:30.319><c> the</c>

00:08:30.469 --> 00:08:30.479 align:start position:0%
set to the result right so right now the
 

00:08:30.479 --> 00:08:32.550 align:start position:0%
set to the result right so right now the
result<00:08:30.879><c> is</c><00:08:31.039><c> two</c><00:08:31.360><c> two</c><00:08:31.680><c> is</c><00:08:31.840><c> the</c><00:08:32.000><c> length</c><00:08:32.240><c> of</c><00:08:32.399><c> the</c>

00:08:32.550 --> 00:08:32.560 align:start position:0%
result is two two is the length of the
 

00:08:32.560 --> 00:08:34.790 align:start position:0%
result is two two is the length of the
longest<00:08:33.039><c> window</c><00:08:33.360><c> that</c><00:08:33.519><c> we</c><00:08:33.680><c> can</c><00:08:33.919><c> get</c>

00:08:34.790 --> 00:08:34.800 align:start position:0%
longest window that we can get
 

00:08:34.800 --> 00:08:36.310 align:start position:0%
longest window that we can get
so<00:08:34.959><c> that's</c><00:08:35.200><c> our</c><00:08:35.360><c> result</c><00:08:35.599><c> for</c><00:08:35.839><c> now</c><00:08:36.000><c> so</c><00:08:36.159><c> now</c>

00:08:36.310 --> 00:08:36.320 align:start position:0%
so that's our result for now so now
 

00:08:36.320 --> 00:08:38.469 align:start position:0%
so that's our result for now so now
let's<00:08:36.560><c> continue</c><00:08:37.440><c> next</c><00:08:37.680><c> we're</c><00:08:37.839><c> gonna</c><00:08:38.159><c> shift</c>

00:08:38.469 --> 00:08:38.479 align:start position:0%
let's continue next we're gonna shift
 

00:08:38.479 --> 00:08:40.310 align:start position:0%
let's continue next we're gonna shift
our<00:08:38.640><c> right</c><00:08:38.880><c> pointer</c><00:08:39.200><c> to</c><00:08:39.360><c> the</c><00:08:39.519><c> third</c><00:08:39.839><c> character</c>

00:08:40.310 --> 00:08:40.320 align:start position:0%
our right pointer to the third character
 

00:08:40.320 --> 00:08:41.269 align:start position:0%
our right pointer to the third character
so<00:08:40.560><c> now</c>

00:08:41.269 --> 00:08:41.279 align:start position:0%
so now
 

00:08:41.279 --> 00:08:43.589 align:start position:0%
so now
we<00:08:41.440><c> get</c><00:08:41.680><c> another</c><00:08:42.320><c> a</c><00:08:42.640><c> so</c><00:08:42.800><c> we're</c><00:08:42.959><c> gonna</c><00:08:43.120><c> take</c><00:08:43.360><c> the</c>

00:08:43.589 --> 00:08:43.599 align:start position:0%
we get another a so we're gonna take the
 

00:08:43.599 --> 00:08:44.470 align:start position:0%
we get another a so we're gonna take the
count<00:08:43.919><c> of</c><00:08:44.159><c> a</c>

00:08:44.470 --> 00:08:44.480 align:start position:0%
count of a
 

00:08:44.480 --> 00:08:46.710 align:start position:0%
count of a
and<00:08:44.720><c> increment</c><00:08:45.200><c> it</c><00:08:45.360><c> all</c><00:08:45.519><c> the</c><00:08:45.600><c> way</c><00:08:45.760><c> to</c><00:08:46.000><c> two</c><00:08:46.560><c> and</c>

00:08:46.710 --> 00:08:46.720 align:start position:0%
and increment it all the way to two and
 

00:08:46.720 --> 00:08:47.990 align:start position:0%
and increment it all the way to two and
we're<00:08:46.959><c> basically</c><00:08:47.360><c> going</c><00:08:47.440><c> to</c><00:08:47.519><c> repeat</c><00:08:47.920><c> our</c>

00:08:47.990 --> 00:08:48.000 align:start position:0%
we're basically going to repeat our
 

00:08:48.000 --> 00:08:49.509 align:start position:0%
we're basically going to repeat our
algorithm<00:08:48.399><c> so</c><00:08:48.560><c> once</c><00:08:48.800><c> again</c><00:08:49.040><c> we're</c><00:08:49.200><c> gonna</c><00:08:49.360><c> get</c>

00:08:49.509 --> 00:08:49.519 align:start position:0%
algorithm so once again we're gonna get
 

00:08:49.519 --> 00:08:51.430 align:start position:0%
algorithm so once again we're gonna get
the<00:08:49.600><c> length</c><00:08:49.839><c> of</c><00:08:49.920><c> the</c><00:08:50.000><c> window</c><00:08:50.399><c> three</c><00:08:50.720><c> minus</c><00:08:51.040><c> the</c>

00:08:51.430 --> 00:08:51.440 align:start position:0%
the length of the window three minus the
 

00:08:51.440 --> 00:08:53.190 align:start position:0%
the length of the window three minus the
count<00:08:51.680><c> of</c><00:08:51.760><c> the</c><00:08:51.839><c> most</c><00:08:52.080><c> frequent</c><00:08:52.480><c> character</c><00:08:53.040><c> we</c>

00:08:53.190 --> 00:08:53.200 align:start position:0%
count of the most frequent character we
 

00:08:53.200 --> 00:08:54.870 align:start position:0%
count of the most frequent character we
see<00:08:53.360><c> the</c><00:08:53.440><c> most</c><00:08:53.600><c> frequent</c><00:08:54.080><c> character</c><00:08:54.560><c> is</c>

00:08:54.870 --> 00:08:54.880 align:start position:0%
see the most frequent character is
 

00:08:54.880 --> 00:08:57.750 align:start position:0%
see the most frequent character is
a<00:08:55.440><c> so</c><00:08:55.600><c> the</c><00:08:55.760><c> count</c><00:08:56.000><c> of</c><00:08:56.240><c> is</c><00:08:56.480><c> two</c><00:08:56.959><c> three</c><00:08:57.200><c> minus</c><00:08:57.519><c> two</c>

00:08:57.750 --> 00:08:57.760 align:start position:0%
a so the count of is two three minus two
 

00:08:57.760 --> 00:08:58.310 align:start position:0%
a so the count of is two three minus two
is<00:08:58.000><c> one</c>

00:08:58.310 --> 00:08:58.320 align:start position:0%
is one
 

00:08:58.320 --> 00:08:59.829 align:start position:0%
is one
is<00:08:58.399><c> that</c><00:08:58.560><c> less</c><00:08:58.720><c> than</c><00:08:58.880><c> or</c><00:08:59.040><c> equal</c><00:08:59.279><c> to</c><00:08:59.440><c> two</c><00:08:59.680><c> which</c>

00:08:59.829 --> 00:08:59.839 align:start position:0%
is that less than or equal to two which
 

00:08:59.839 --> 00:09:01.750 align:start position:0%
is that less than or equal to two which
is<00:09:00.000><c> k</c><00:09:00.399><c> yes</c><00:09:00.640><c> of</c><00:09:00.720><c> course</c><00:09:01.040><c> it</c><00:09:01.200><c> is</c><00:09:01.360><c> so</c>

00:09:01.750 --> 00:09:01.760 align:start position:0%
is k yes of course it is so
 

00:09:01.760 --> 00:09:03.750 align:start position:0%
is k yes of course it is so
this<00:09:01.920><c> window</c><00:09:02.320><c> is</c><00:09:02.480><c> also</c><00:09:02.800><c> valid</c><00:09:03.120><c> we</c><00:09:03.279><c> can</c><00:09:03.440><c> update</c>

00:09:03.750 --> 00:09:03.760 align:start position:0%
this window is also valid we can update
 

00:09:03.760 --> 00:09:05.910 align:start position:0%
this window is also valid we can update
our<00:09:03.839><c> result</c><00:09:04.240><c> now</c><00:09:04.560><c> to</c><00:09:04.800><c> three</c><00:09:05.040><c> so</c><00:09:05.200><c> we</c><00:09:05.440><c> found</c>

00:09:05.910 --> 00:09:05.920 align:start position:0%
our result now to three so we found
 

00:09:05.920 --> 00:09:08.790 align:start position:0%
our result now to three so we found
another<00:09:06.480><c> window</c><00:09:07.200><c> even</c><00:09:07.519><c> longer</c><00:09:08.480><c> so</c><00:09:08.640><c> i'm</c><00:09:08.720><c> going</c>

00:09:08.790 --> 00:09:08.800 align:start position:0%
another window even longer so i'm going
 

00:09:08.800 --> 00:09:09.269 align:start position:0%
another window even longer so i'm going
to<00:09:08.880><c> take</c>

00:09:09.269 --> 00:09:09.279 align:start position:0%
to take
 

00:09:09.279 --> 00:09:10.949 align:start position:0%
to take
our<00:09:09.440><c> right</c><00:09:09.680><c> pointer</c><00:09:10.000><c> once</c><00:09:10.320><c> again</c><00:09:10.640><c> and</c><00:09:10.720><c> then</c>

00:09:10.949 --> 00:09:10.959 align:start position:0%
our right pointer once again and then
 

00:09:10.959 --> 00:09:13.110 align:start position:0%
our right pointer once again and then
shift<00:09:11.360><c> it</c><00:09:11.680><c> over</c><00:09:12.000><c> to</c><00:09:12.160><c> the</c><00:09:12.320><c> b</c>

00:09:13.110 --> 00:09:13.120 align:start position:0%
shift it over to the b
 

00:09:13.120 --> 00:09:14.550 align:start position:0%
shift it over to the b
so<00:09:13.360><c> now</c><00:09:13.519><c> we're</c><00:09:13.680><c> going</c><00:09:13.760><c> to</c><00:09:13.839><c> be</c><00:09:14.240><c> since</c><00:09:14.399><c> we</c>

00:09:14.550 --> 00:09:14.560 align:start position:0%
so now we're going to be since we
 

00:09:14.560 --> 00:09:15.829 align:start position:0%
so now we're going to be since we
reached<00:09:14.880><c> another</c><00:09:15.279><c> b</c><00:09:15.440><c> we're</c><00:09:15.600><c> going</c><00:09:15.680><c> to</c>

00:09:15.829 --> 00:09:15.839 align:start position:0%
reached another b we're going to
 

00:09:15.839 --> 00:09:17.030 align:start position:0%
reached another b we're going to
increment<00:09:16.160><c> the</c><00:09:16.320><c> count</c><00:09:16.560><c> of</c><00:09:16.720><c> b</c>

00:09:17.030 --> 00:09:17.040 align:start position:0%
increment the count of b
 

00:09:17.040 --> 00:09:19.509 align:start position:0%
increment the count of b
to<00:09:17.360><c> 2</c><00:09:17.680><c> now</c><00:09:18.320><c> and</c><00:09:18.480><c> so</c><00:09:18.640><c> the</c><00:09:18.800><c> length</c><00:09:19.040><c> of</c><00:09:19.120><c> our</c><00:09:19.200><c> window</c>

00:09:19.509 --> 00:09:19.519 align:start position:0%
to 2 now and so the length of our window
 

00:09:19.519 --> 00:09:20.710 align:start position:0%
to 2 now and so the length of our window
now<00:09:19.760><c> is</c><00:09:20.000><c> 4</c>

00:09:20.710 --> 00:09:20.720 align:start position:0%
now is 4
 

00:09:20.720 --> 00:09:22.389 align:start position:0%
now is 4
and<00:09:20.959><c> the</c><00:09:21.360><c> count</c><00:09:21.600><c> of</c><00:09:21.680><c> the</c><00:09:21.760><c> most</c><00:09:22.000><c> frequent</c>

00:09:22.389 --> 00:09:22.399 align:start position:0%
and the count of the most frequent
 

00:09:22.399 --> 00:09:24.070 align:start position:0%
and the count of the most frequent
character<00:09:22.959><c> is</c><00:09:23.120><c> either</c><00:09:23.440><c> of</c><00:09:23.600><c> these</c><00:09:23.839><c> and</c><00:09:23.920><c> that's</c>

00:09:24.070 --> 00:09:24.080 align:start position:0%
character is either of these and that's
 

00:09:24.080 --> 00:09:25.269 align:start position:0%
character is either of these and that's
going<00:09:24.160><c> to</c><00:09:24.240><c> be</c><00:09:24.480><c> 2</c>

00:09:25.269 --> 00:09:25.279 align:start position:0%
going to be 2
 

00:09:25.279 --> 00:09:27.750 align:start position:0%
going to be 2
4<00:09:25.519><c> minus</c><00:09:25.920><c> 2</c><00:09:26.240><c> is</c><00:09:26.399><c> equal</c><00:09:26.640><c> to</c><00:09:26.800><c> 2.</c><00:09:27.120><c> is</c><00:09:27.200><c> that</c><00:09:27.519><c> less</c>

00:09:27.750 --> 00:09:27.760 align:start position:0%
4 minus 2 is equal to 2. is that less
 

00:09:27.760 --> 00:09:29.190 align:start position:0%
4 minus 2 is equal to 2. is that less
than<00:09:27.920><c> or</c><00:09:28.080><c> equal</c><00:09:28.320><c> to</c><00:09:28.560><c> k</c>

00:09:29.190 --> 00:09:29.200 align:start position:0%
than or equal to k
 

00:09:29.200 --> 00:09:31.670 align:start position:0%
than or equal to k
k<00:09:29.519><c> is</c><00:09:29.680><c> 2</c><00:09:29.920><c> in</c><00:09:30.000><c> this</c><00:09:30.240><c> case</c><00:09:30.480><c> so</c><00:09:30.640><c> of</c><00:09:30.800><c> course</c><00:09:31.360><c> once</c>

00:09:31.670 --> 00:09:31.680 align:start position:0%
k is 2 in this case so of course once
 

00:09:31.680 --> 00:09:33.990 align:start position:0%
k is 2 in this case so of course once
again<00:09:31.920><c> this</c><00:09:32.080><c> condition</c><00:09:32.560><c> does</c><00:09:32.800><c> hold</c><00:09:33.200><c> so</c>

00:09:33.990 --> 00:09:34.000 align:start position:0%
again this condition does hold so
 

00:09:34.000 --> 00:09:36.230 align:start position:0%
again this condition does hold so
once<00:09:34.240><c> again</c><00:09:34.560><c> we</c><00:09:34.800><c> found</c><00:09:35.200><c> a</c><00:09:35.360><c> window</c><00:09:35.839><c> that's</c>

00:09:36.230 --> 00:09:36.240 align:start position:0%
once again we found a window that's
 

00:09:36.240 --> 00:09:38.310 align:start position:0%
once again we found a window that's
longer<00:09:36.720><c> than</c><00:09:36.880><c> our</c><00:09:37.040><c> result</c><00:09:37.440><c> we</c><00:09:37.600><c> found</c><00:09:37.839><c> a</c><00:09:37.920><c> window</c>

00:09:38.310 --> 00:09:38.320 align:start position:0%
longer than our result we found a window
 

00:09:38.320 --> 00:09:39.350 align:start position:0%
longer than our result we found a window
now<00:09:38.640><c> of</c><00:09:38.880><c> length</c>

00:09:39.350 --> 00:09:39.360 align:start position:0%
now of length
 

00:09:39.360 --> 00:09:41.269 align:start position:0%
now of length
four<00:09:40.160><c> and</c><00:09:40.320><c> so</c><00:09:40.480><c> once</c><00:09:40.720><c> again</c><00:09:40.959><c> we're</c><00:09:41.120><c> going</c><00:09:41.200><c> to</c>

00:09:41.269 --> 00:09:41.279 align:start position:0%
four and so once again we're going to
 

00:09:41.279 --> 00:09:42.790 align:start position:0%
four and so once again we're going to
take<00:09:41.519><c> our</c><00:09:41.600><c> right</c><00:09:41.760><c> pointer</c><00:09:42.080><c> and</c><00:09:42.240><c> shift</c><00:09:42.480><c> it</c><00:09:42.640><c> so</c>

00:09:42.790 --> 00:09:42.800 align:start position:0%
take our right pointer and shift it so
 

00:09:42.800 --> 00:09:43.110 align:start position:0%
take our right pointer and shift it so
now

00:09:43.110 --> 00:09:43.120 align:start position:0%
now
 

00:09:43.120 --> 00:09:45.110 align:start position:0%
now
another<00:09:43.519><c> b</c><00:09:43.760><c> let's</c><00:09:44.000><c> increment</c><00:09:44.399><c> the</c><00:09:44.480><c> count</c><00:09:44.720><c> of</c><00:09:44.800><c> b</c>

00:09:45.110 --> 00:09:45.120 align:start position:0%
another b let's increment the count of b
 

00:09:45.120 --> 00:09:47.350 align:start position:0%
another b let's increment the count of b
to<00:09:45.440><c> three</c><00:09:46.080><c> so</c><00:09:46.320><c> the</c><00:09:46.480><c> length</c><00:09:46.720><c> of</c><00:09:46.800><c> the</c><00:09:46.880><c> window</c><00:09:47.200><c> now</c>

00:09:47.350 --> 00:09:47.360 align:start position:0%
to three so the length of the window now
 

00:09:47.360 --> 00:09:48.310 align:start position:0%
to three so the length of the window now
is<00:09:47.600><c> five</c>

00:09:48.310 --> 00:09:48.320 align:start position:0%
is five
 

00:09:48.320 --> 00:09:50.150 align:start position:0%
is five
minus<00:09:48.800><c> the</c><00:09:49.040><c> count</c><00:09:49.279><c> of</c><00:09:49.440><c> the</c><00:09:49.519><c> most</c><00:09:49.760><c> frequent</c>

00:09:50.150 --> 00:09:50.160 align:start position:0%
minus the count of the most frequent
 

00:09:50.160 --> 00:09:52.070 align:start position:0%
minus the count of the most frequent
character<00:09:50.640><c> charac</c><00:09:51.040><c> that</c><00:09:51.279><c> character</c><00:09:51.600><c> is</c><00:09:51.760><c> b</c>

00:09:52.070 --> 00:09:52.080 align:start position:0%
character charac that character is b
 

00:09:52.080 --> 00:09:55.670 align:start position:0%
character charac that character is b
five<00:09:52.320><c> minus</c><00:09:52.720><c> three</c><00:09:53.519><c> is</c><00:09:54.240><c> this</c><00:09:54.720><c> two</c><00:09:55.040><c> in</c><00:09:55.120><c> that</c><00:09:55.360><c> and</c>

00:09:55.670 --> 00:09:55.680 align:start position:0%
five minus three is this two in that and
 

00:09:55.680 --> 00:09:56.949 align:start position:0%
five minus three is this two in that and
less<00:09:55.920><c> than</c><00:09:56.080><c> or</c><00:09:56.160><c> equal</c><00:09:56.399><c> to</c><00:09:56.560><c> k</c>

00:09:56.949 --> 00:09:56.959 align:start position:0%
less than or equal to k
 

00:09:56.959 --> 00:09:59.509 align:start position:0%
less than or equal to k
of<00:09:57.040><c> course</c><00:09:57.440><c> it's</c><00:09:57.680><c> still</c><00:09:58.080><c> true</c><00:09:58.720><c> because</c><00:09:59.360><c> when</c>

00:09:59.509 --> 00:09:59.519 align:start position:0%
of course it's still true because when
 

00:09:59.519 --> 00:10:00.630 align:start position:0%
of course it's still true because when
you<00:09:59.680><c> look</c><00:09:59.839><c> at</c><00:09:59.920><c> our</c><00:10:00.080><c> window</c>

00:10:00.630 --> 00:10:00.640 align:start position:0%
you look at our window
 

00:10:00.640 --> 00:10:02.790 align:start position:0%
you look at our window
we<00:10:00.800><c> have</c><00:10:01.120><c> three</c><00:10:01.440><c> b's</c><00:10:02.000><c> so</c><00:10:02.240><c> that</c><00:10:02.399><c> means</c><00:10:02.640><c> we're</c>

00:10:02.790 --> 00:10:02.800 align:start position:0%
we have three b's so that means we're
 

00:10:02.800 --> 00:10:04.389 align:start position:0%
we have three b's so that means we're
going<00:10:02.880><c> to</c><00:10:02.959><c> be</c><00:10:03.120><c> replacing</c><00:10:03.600><c> the</c><00:10:03.920><c> a's</c>

00:10:04.389 --> 00:10:04.399 align:start position:0%
going to be replacing the a's
 

00:10:04.399 --> 00:10:05.590 align:start position:0%
going to be replacing the a's
so<00:10:04.560><c> we're</c><00:10:04.720><c> gonna</c><00:10:04.880><c> need</c><00:10:05.040><c> to</c><00:10:05.120><c> make</c><00:10:05.360><c> two</c>

00:10:05.590 --> 00:10:05.600 align:start position:0%
so we're gonna need to make two
 

00:10:05.600 --> 00:10:07.750 align:start position:0%
so we're gonna need to make two
replacements<00:10:06.240><c> and</c><00:10:06.399><c> we</c><00:10:06.720><c> are</c><00:10:06.959><c> allowed</c><00:10:07.360><c> to</c><00:10:07.519><c> make</c>

00:10:07.750 --> 00:10:07.760 align:start position:0%
replacements and we are allowed to make
 

00:10:07.760 --> 00:10:09.030 align:start position:0%
replacements and we are allowed to make
two<00:10:08.000><c> replacements</c>

00:10:09.030 --> 00:10:09.040 align:start position:0%
two replacements
 

00:10:09.040 --> 00:10:11.030 align:start position:0%
two replacements
okay<00:10:09.360><c> so</c><00:10:09.600><c> now</c><00:10:09.760><c> we're</c><00:10:10.000><c> finally</c><00:10:10.399><c> gonna</c><00:10:10.640><c> get</c><00:10:10.880><c> to</c>

00:10:11.030 --> 00:10:11.040 align:start position:0%
okay so now we're finally gonna get to
 

00:10:11.040 --> 00:10:12.949 align:start position:0%
okay so now we're finally gonna get to
the<00:10:11.200><c> case</c><00:10:11.600><c> that</c><00:10:11.839><c> i</c><00:10:12.000><c> mentioned</c><00:10:12.399><c> earlier</c><00:10:12.800><c> where</c>

00:10:12.949 --> 00:10:12.959 align:start position:0%
the case that i mentioned earlier where
 

00:10:12.959 --> 00:10:14.069 align:start position:0%
the case that i mentioned earlier where
we're<00:10:13.120><c> gonna</c><00:10:13.200><c> have</c><00:10:13.360><c> to</c><00:10:13.440><c> take</c><00:10:13.680><c> our</c><00:10:13.839><c> left</c>

00:10:14.069 --> 00:10:14.079 align:start position:0%
we're gonna have to take our left
 

00:10:14.079 --> 00:10:16.230 align:start position:0%
we're gonna have to take our left
pointer<00:10:14.399><c> and</c><00:10:14.480><c> then</c><00:10:14.720><c> slide</c><00:10:15.200><c> it</c><00:10:15.279><c> to</c><00:10:15.440><c> the</c><00:10:15.680><c> right</c>

00:10:16.230 --> 00:10:16.240 align:start position:0%
pointer and then slide it to the right
 

00:10:16.240 --> 00:10:18.230 align:start position:0%
pointer and then slide it to the right
which<00:10:16.480><c> is</c><00:10:16.720><c> why</c><00:10:16.959><c> this</c><00:10:17.120><c> is</c><00:10:17.279><c> a</c><00:10:17.360><c> sliding</c><00:10:17.839><c> window</c>

00:10:18.230 --> 00:10:18.240 align:start position:0%
which is why this is a sliding window
 

00:10:18.240 --> 00:10:20.230 align:start position:0%
which is why this is a sliding window
problem<00:10:18.800><c> so</c><00:10:19.040><c> now</c><00:10:19.200><c> we</c><00:10:19.360><c> reached</c><00:10:19.839><c> an</c>

00:10:20.230 --> 00:10:20.240 align:start position:0%
problem so now we reached an
 

00:10:20.240 --> 00:10:22.550 align:start position:0%
problem so now we reached an
a<00:10:20.720><c> so</c><00:10:20.880><c> we're</c><00:10:21.040><c> gonna</c><00:10:21.120><c> take</c><00:10:21.360><c> the</c><00:10:21.519><c> count</c><00:10:21.839><c> of</c><00:10:22.000><c> a</c><00:10:22.320><c> and</c>

00:10:22.550 --> 00:10:22.560 align:start position:0%
a so we're gonna take the count of a and
 

00:10:22.560 --> 00:10:24.470 align:start position:0%
a so we're gonna take the count of a and
set<00:10:22.800><c> it</c><00:10:22.880><c> to</c><00:10:23.120><c> three</c><00:10:23.360><c> so</c><00:10:23.519><c> now</c><00:10:23.680><c> we</c><00:10:23.839><c> have</c><00:10:24.079><c> a</c>

00:10:24.470 --> 00:10:24.480 align:start position:0%
set it to three so now we have a
 

00:10:24.480 --> 00:10:26.870 align:start position:0%
set it to three so now we have a
count<00:10:24.800><c> three</c><00:10:25.200><c> and</c><00:10:25.440><c> b</c><00:10:25.760><c> count</c><00:10:26.079><c> three</c><00:10:26.480><c> so</c><00:10:26.640><c> let's</c>

00:10:26.870 --> 00:10:26.880 align:start position:0%
count three and b count three so let's
 

00:10:26.880 --> 00:10:28.790 align:start position:0%
count three and b count three so let's
take<00:10:27.040><c> the</c><00:10:27.200><c> size</c><00:10:27.519><c> of</c><00:10:27.600><c> our</c><00:10:27.760><c> window</c><00:10:28.160><c> six</c>

00:10:28.790 --> 00:10:28.800 align:start position:0%
take the size of our window six
 

00:10:28.800 --> 00:10:30.550 align:start position:0%
take the size of our window six
subtract<00:10:29.360><c> from</c><00:10:29.600><c> it</c><00:10:29.680><c> the</c><00:10:29.839><c> count</c><00:10:30.160><c> of</c><00:10:30.240><c> the</c><00:10:30.320><c> most</c>

00:10:30.550 --> 00:10:30.560 align:start position:0%
subtract from it the count of the most
 

00:10:30.560 --> 00:10:31.990 align:start position:0%
subtract from it the count of the most
frequent<00:10:31.040><c> character</c><00:10:31.519><c> it's</c><00:10:31.680><c> gonna</c><00:10:31.760><c> be</c>

00:10:31.990 --> 00:10:32.000 align:start position:0%
frequent character it's gonna be
 

00:10:32.000 --> 00:10:34.150 align:start position:0%
frequent character it's gonna be
either<00:10:32.240><c> of</c><00:10:32.320><c> these</c><00:10:32.560><c> so</c><00:10:32.720><c> six</c><00:10:33.040><c> minus</c><00:10:33.440><c> three</c><00:10:33.920><c> means</c>

00:10:34.150 --> 00:10:34.160 align:start position:0%
either of these so six minus three means
 

00:10:34.160 --> 00:10:36.230 align:start position:0%
either of these so six minus three means
we<00:10:34.320><c> need</c><00:10:34.560><c> to</c><00:10:34.640><c> make</c><00:10:34.959><c> three</c><00:10:35.279><c> replacements</c>

00:10:36.230 --> 00:10:36.240 align:start position:0%
we need to make three replacements
 

00:10:36.240 --> 00:10:39.670 align:start position:0%
we need to make three replacements
is<00:10:36.480><c> that</c><00:10:36.800><c> less</c><00:10:37.040><c> than</c><00:10:37.200><c> or</c><00:10:37.360><c> equal</c><00:10:37.600><c> to</c><00:10:37.839><c> k</c><00:10:38.560><c> k</c><00:10:38.880><c> is</c><00:10:39.200><c> two</c>

00:10:39.670 --> 00:10:39.680 align:start position:0%
is that less than or equal to k k is two
 

00:10:39.680 --> 00:10:42.630 align:start position:0%
is that less than or equal to k k is two
so<00:10:39.920><c> we</c><00:10:40.160><c> exceeded</c><00:10:41.200><c> k</c><00:10:41.519><c> right</c><00:10:41.760><c> we</c><00:10:41.920><c> exceeded</c><00:10:42.480><c> the</c>

00:10:42.630 --> 00:10:42.640 align:start position:0%
so we exceeded k right we exceeded the
 

00:10:42.640 --> 00:10:44.550 align:start position:0%
so we exceeded k right we exceeded the
number<00:10:42.959><c> of</c><00:10:43.040><c> replacements</c><00:10:43.680><c> we're</c><00:10:43.839><c> allowed</c><00:10:44.399><c> to</c>

00:10:44.550 --> 00:10:44.560 align:start position:0%
number of replacements we're allowed to
 

00:10:44.560 --> 00:10:44.949 align:start position:0%
number of replacements we're allowed to
make

00:10:44.949 --> 00:10:44.959 align:start position:0%
make
 

00:10:44.959 --> 00:10:47.030 align:start position:0%
make
if<00:10:45.200><c> we</c><00:10:45.360><c> wanted</c><00:10:45.680><c> this</c><00:10:45.920><c> window</c><00:10:46.240><c> to</c><00:10:46.399><c> be</c><00:10:46.560><c> valid</c><00:10:46.880><c> we</c>

00:10:47.030 --> 00:10:47.040 align:start position:0%
if we wanted this window to be valid we
 

00:10:47.040 --> 00:10:49.190 align:start position:0%
if we wanted this window to be valid we
have<00:10:47.120><c> to</c><00:10:47.279><c> replace</c><00:10:47.839><c> three</c><00:10:48.320><c> characters</c><00:10:48.880><c> in</c><00:10:49.040><c> it</c>

00:10:49.190 --> 00:10:49.200 align:start position:0%
have to replace three characters in it
 

00:10:49.200 --> 00:10:51.110 align:start position:0%
have to replace three characters in it
but<00:10:49.360><c> we're</c><00:10:49.600><c> not</c><00:10:49.920><c> allowed</c><00:10:50.320><c> to</c><00:10:50.480><c> do</c><00:10:50.640><c> that</c><00:10:50.800><c> so</c><00:10:50.959><c> what</c>

00:10:51.110 --> 00:10:51.120 align:start position:0%
but we're not allowed to do that so what
 

00:10:51.120 --> 00:10:51.910 align:start position:0%
but we're not allowed to do that so what
we<00:10:51.279><c> have</c><00:10:51.360><c> to</c><00:10:51.519><c> do</c>

00:10:51.910 --> 00:10:51.920 align:start position:0%
we have to do
 

00:10:51.920 --> 00:10:54.870 align:start position:0%
we have to do
is<00:10:52.320><c> shrink</c><00:10:53.120><c> the</c><00:10:53.279><c> size</c><00:10:53.600><c> of</c><00:10:53.680><c> our</c><00:10:53.839><c> window</c><00:10:54.320><c> until</c>

00:10:54.870 --> 00:10:54.880 align:start position:0%
is shrink the size of our window until
 

00:10:54.880 --> 00:10:55.190 align:start position:0%
is shrink the size of our window until
we

00:10:55.190 --> 00:10:55.200 align:start position:0%
we
 

00:10:55.200 --> 00:10:57.190 align:start position:0%
we
are<00:10:55.360><c> valid</c><00:10:56.240><c> so</c><00:10:56.480><c> we're</c><00:10:56.640><c> going</c><00:10:56.720><c> to</c><00:10:56.800><c> take</c><00:10:57.040><c> our</c>

00:10:57.190 --> 00:10:57.200 align:start position:0%
are valid so we're going to take our
 

00:10:57.200 --> 00:10:58.470 align:start position:0%
are valid so we're going to take our
left<00:10:57.519><c> pointer</c><00:10:58.000><c> and</c>

00:10:58.470 --> 00:10:58.480 align:start position:0%
left pointer and
 

00:10:58.480 --> 00:11:00.870 align:start position:0%
left pointer and
shift<00:10:58.880><c> it</c><00:10:59.279><c> to</c><00:10:59.440><c> the</c><00:10:59.680><c> right</c><00:11:00.160><c> so</c><00:11:00.320><c> now</c><00:11:00.480><c> the</c><00:11:00.640><c> left</c>

00:11:00.870 --> 00:11:00.880 align:start position:0%
shift it to the right so now the left
 

00:11:00.880 --> 00:11:02.230 align:start position:0%
shift it to the right so now the left
pointer<00:11:01.200><c> is</c><00:11:01.279><c> going</c><00:11:01.360><c> to</c><00:11:01.440><c> be</c><00:11:01.600><c> over</c><00:11:01.839><c> here</c><00:11:02.079><c> it's</c>

00:11:02.230 --> 00:11:02.240 align:start position:0%
pointer is going to be over here it's
 

00:11:02.240 --> 00:11:03.190 align:start position:0%
pointer is going to be over here it's
going<00:11:02.320><c> to</c><00:11:02.399><c> be</c><00:11:02.560><c> at</c><00:11:02.640><c> the</c><00:11:02.800><c> b</c>

00:11:03.190 --> 00:11:03.200 align:start position:0%
going to be at the b
 

00:11:03.200 --> 00:11:05.670 align:start position:0%
going to be at the b
so<00:11:03.440><c> since</c><00:11:03.680><c> we</c><00:11:03.839><c> removed</c><00:11:04.640><c> this</c><00:11:05.040><c> a</c><00:11:05.279><c> from</c><00:11:05.519><c> our</c>

00:11:05.670 --> 00:11:05.680 align:start position:0%
so since we removed this a from our
 

00:11:05.680 --> 00:11:06.230 align:start position:0%
so since we removed this a from our
window

00:11:06.230 --> 00:11:06.240 align:start position:0%
window
 

00:11:06.240 --> 00:11:08.870 align:start position:0%
window
we<00:11:06.480><c> have</c><00:11:06.560><c> to</c><00:11:06.800><c> decrement</c><00:11:07.360><c> the</c><00:11:07.600><c> count</c><00:11:08.160><c> of</c><00:11:08.320><c> a</c><00:11:08.720><c> in</c>

00:11:08.870 --> 00:11:08.880 align:start position:0%
we have to decrement the count of a in
 

00:11:08.880 --> 00:11:10.550 align:start position:0%
we have to decrement the count of a in
our<00:11:09.040><c> window</c><00:11:09.360><c> so</c><00:11:09.600><c> i'm</c><00:11:09.760><c> going</c><00:11:09.839><c> to</c><00:11:09.920><c> cross</c><00:11:10.240><c> this</c>

00:11:10.550 --> 00:11:10.560 align:start position:0%
our window so i'm going to cross this
 

00:11:10.560 --> 00:11:11.590 align:start position:0%
our window so i'm going to cross this
three<00:11:10.880><c> out</c><00:11:11.040><c> and</c><00:11:11.120><c> now</c><00:11:11.360><c> it's</c>

00:11:11.590 --> 00:11:11.600 align:start position:0%
three out and now it's
 

00:11:11.600 --> 00:11:13.110 align:start position:0%
three out and now it's
actually<00:11:11.839><c> going</c><00:11:11.839><c> to</c><00:11:12.000><c> be</c><00:11:12.079><c> set</c><00:11:12.240><c> to</c><00:11:12.480><c> 2.</c><00:11:12.800><c> i</c><00:11:12.880><c> kind</c><00:11:13.040><c> of</c>

00:11:13.110 --> 00:11:13.120 align:start position:0%
actually going to be set to 2. i kind of
 

00:11:13.120 --> 00:11:15.509 align:start position:0%
actually going to be set to 2. i kind of
ran<00:11:13.360><c> out</c><00:11:13.519><c> of</c><00:11:13.600><c> room</c><00:11:13.920><c> but</c><00:11:14.399><c> i</c><00:11:14.560><c> hope</c><00:11:14.800><c> this</c><00:11:15.120><c> is</c><00:11:15.279><c> still</c>

00:11:15.509 --> 00:11:15.519 align:start position:0%
ran out of room but i hope this is still
 

00:11:15.519 --> 00:11:16.150 align:start position:0%
ran out of room but i hope this is still
readable

00:11:16.150 --> 00:11:16.160 align:start position:0%
readable
 

00:11:16.160 --> 00:11:18.790 align:start position:0%
readable
so<00:11:16.320><c> now</c><00:11:16.480><c> the</c><00:11:16.720><c> count</c><00:11:17.120><c> of</c><00:11:17.360><c> a</c><00:11:17.760><c> is</c><00:11:18.079><c> two</c><00:11:18.399><c> so</c><00:11:18.560><c> now</c>

00:11:18.790 --> 00:11:18.800 align:start position:0%
so now the count of a is two so now
 

00:11:18.800 --> 00:11:19.829 align:start position:0%
so now the count of a is two so now
let's<00:11:19.120><c> once</c><00:11:19.360><c> again</c>

00:11:19.829 --> 00:11:19.839 align:start position:0%
let's once again
 

00:11:19.839 --> 00:11:22.389 align:start position:0%
let's once again
check<00:11:20.320><c> is</c><00:11:20.560><c> our</c><00:11:20.800><c> window</c><00:11:21.200><c> valid</c><00:11:21.760><c> well</c><00:11:21.920><c> the</c><00:11:22.079><c> size</c>

00:11:22.389 --> 00:11:22.399 align:start position:0%
check is our window valid well the size
 

00:11:22.399 --> 00:11:23.590 align:start position:0%
check is our window valid well the size
of the<00:11:22.560><c> window</c><00:11:22.880><c> now</c><00:11:23.200><c> is</c>

00:11:23.590 --> 00:11:23.600 align:start position:0%
of the window now is
 

00:11:23.600 --> 00:11:25.750 align:start position:0%
of the window now is
five<00:11:24.320><c> and</c><00:11:24.480><c> the</c><00:11:24.640><c> count</c><00:11:24.959><c> of</c><00:11:25.040><c> the</c><00:11:25.120><c> most</c><00:11:25.360><c> frequent</c>

00:11:25.750 --> 00:11:25.760 align:start position:0%
five and the count of the most frequent
 

00:11:25.760 --> 00:11:26.630 align:start position:0%
five and the count of the most frequent
character<00:11:26.320><c> is</c>

00:11:26.630 --> 00:11:26.640 align:start position:0%
character is
 

00:11:26.640 --> 00:11:29.350 align:start position:0%
character is
b<00:11:27.200><c> and</c><00:11:27.360><c> that's</c><00:11:27.600><c> gonna</c><00:11:27.760><c> be</c><00:11:28.079><c> three</c><00:11:28.880><c> so</c><00:11:29.120><c> five</c>

00:11:29.350 --> 00:11:29.360 align:start position:0%
b and that's gonna be three so five
 

00:11:29.360 --> 00:11:30.870 align:start position:0%
b and that's gonna be three so five
minus<00:11:29.680><c> three</c><00:11:29.839><c> is</c><00:11:29.920><c> gonna</c><00:11:30.079><c> be</c><00:11:30.160><c> equal</c><00:11:30.399><c> to</c><00:11:30.560><c> two</c>

00:11:30.870 --> 00:11:30.880 align:start position:0%
minus three is gonna be equal to two
 

00:11:30.880 --> 00:11:33.030 align:start position:0%
minus three is gonna be equal to two
is<00:11:30.959><c> that</c><00:11:31.120><c> less</c><00:11:31.279><c> than</c><00:11:31.440><c> or</c><00:11:31.600><c> equal</c><00:11:31.760><c> to</c><00:11:32.000><c> k</c><00:11:32.480><c> yes</c><00:11:32.800><c> we</c>

00:11:33.030 --> 00:11:33.040 align:start position:0%
is that less than or equal to k yes we
 

00:11:33.040 --> 00:11:34.470 align:start position:0%
is that less than or equal to k yes we
are<00:11:33.200><c> once</c><00:11:33.519><c> again</c>

00:11:34.470 --> 00:11:34.480 align:start position:0%
are once again
 

00:11:34.480 --> 00:11:37.110 align:start position:0%
are once again
valid<00:11:35.279><c> so</c><00:11:35.519><c> this</c><00:11:35.839><c> is</c><00:11:36.079><c> technically</c><00:11:36.640><c> a</c><00:11:36.800><c> valid</c>

00:11:37.110 --> 00:11:37.120 align:start position:0%
valid so this is technically a valid
 

00:11:37.120 --> 00:11:38.710 align:start position:0%
valid so this is technically a valid
window<00:11:37.360><c> and</c><00:11:37.519><c> i</c><00:11:37.600><c> think</c><00:11:37.760><c> i</c><00:11:37.839><c> forgot</c><00:11:38.160><c> to</c><00:11:38.399><c> update</c>

00:11:38.710 --> 00:11:38.720 align:start position:0%
window and i think i forgot to update
 

00:11:38.720 --> 00:11:40.550 align:start position:0%
window and i think i forgot to update
the<00:11:38.880><c> result</c><00:11:39.279><c> earlier</c><00:11:39.680><c> when</c><00:11:39.839><c> we</c><00:11:39.920><c> had</c><00:11:40.160><c> a</c><00:11:40.240><c> window</c>

00:11:40.550 --> 00:11:40.560 align:start position:0%
the result earlier when we had a window
 

00:11:40.560 --> 00:11:41.750 align:start position:0%
the result earlier when we had a window
of<00:11:40.640><c> size</c><00:11:41.040><c> five</c><00:11:41.279><c> so</c>

00:11:41.750 --> 00:11:41.760 align:start position:0%
of size five so
 

00:11:41.760 --> 00:11:44.310 align:start position:0%
of size five so
the<00:11:41.920><c> result</c><00:11:42.320><c> right</c><00:11:42.480><c> now</c><00:11:42.640><c> would</c><00:11:42.880><c> be</c><00:11:43.360><c> size</c><00:11:43.839><c> five</c>

00:11:44.310 --> 00:11:44.320 align:start position:0%
the result right now would be size five
 

00:11:44.320 --> 00:11:46.230 align:start position:0%
the result right now would be size five
because<00:11:44.640><c> the</c><00:11:44.800><c> longest</c><00:11:45.120><c> window</c><00:11:45.440><c> we</c><00:11:45.600><c> can</c><00:11:45.680><c> make</c>

00:11:46.230 --> 00:11:46.240 align:start position:0%
because the longest window we can make
 

00:11:46.240 --> 00:11:48.710 align:start position:0%
because the longest window we can make
is<00:11:46.480><c> either</c><00:11:46.800><c> this</c><00:11:47.040><c> window</c><00:11:47.760><c> or</c><00:11:48.160><c> the</c><00:11:48.320><c> window</c><00:11:48.640><c> that</c>

00:11:48.710 --> 00:11:48.720 align:start position:0%
is either this window or the window that
 

00:11:48.720 --> 00:11:49.590 align:start position:0%
is either this window or the window that
we<00:11:48.880><c> had</c>

00:11:49.590 --> 00:11:49.600 align:start position:0%
we had
 

00:11:49.600 --> 00:11:51.990 align:start position:0%
we had
uh<00:11:49.920><c> earlier</c><00:11:50.480><c> with</c><00:11:50.880><c> you</c><00:11:51.040><c> know</c><00:11:51.360><c> these</c><00:11:51.680><c> first</c>

00:11:51.990 --> 00:11:52.000 align:start position:0%
uh earlier with you know these first
 

00:11:52.000 --> 00:11:53.190 align:start position:0%
uh earlier with you know these first
five<00:11:52.320><c> characters</c>

00:11:53.190 --> 00:11:53.200 align:start position:0%
five characters
 

00:11:53.200 --> 00:11:55.190 align:start position:0%
five characters
but<00:11:53.360><c> yeah</c><00:11:53.680><c> and</c><00:11:53.920><c> so</c><00:11:54.240><c> at</c><00:11:54.399><c> this</c><00:11:54.639><c> point</c><00:11:54.880><c> we</c><00:11:55.040><c> would</c>

00:11:55.190 --> 00:11:55.200 align:start position:0%
but yeah and so at this point we would
 

00:11:55.200 --> 00:11:57.269 align:start position:0%
but yeah and so at this point we would
stop<00:11:55.519><c> our</c><00:11:55.760><c> algorithm</c><00:11:56.240><c> because</c><00:11:56.399><c> we</c><00:11:56.560><c> did</c><00:11:56.800><c> find</c><00:11:57.120><c> a</c>

00:11:57.269 --> 00:11:57.279 align:start position:0%
stop our algorithm because we did find a
 

00:11:57.279 --> 00:11:58.069 align:start position:0%
stop our algorithm because we did find a
window<00:11:57.760><c> of</c>

00:11:58.069 --> 00:11:58.079 align:start position:0%
window of
 

00:11:58.079 --> 00:12:00.150 align:start position:0%
window of
5<00:11:58.320><c> that</c><00:11:58.560><c> is</c><00:11:58.720><c> valid</c><00:11:59.120><c> and</c><00:11:59.360><c> our</c><00:11:59.519><c> right</c><00:11:59.760><c> pointer</c>

00:12:00.150 --> 00:12:00.160 align:start position:0%
5 that is valid and our right pointer
 

00:12:00.160 --> 00:12:01.509 align:start position:0%
5 that is valid and our right pointer
cannot<00:12:00.639><c> be</c><00:12:00.880><c> shifted</c>

00:12:01.509 --> 00:12:01.519 align:start position:0%
cannot be shifted
 

00:12:01.519 --> 00:12:04.310 align:start position:0%
cannot be shifted
anymore<00:12:02.560><c> so</c><00:12:02.800><c> this</c><00:12:03.040><c> is</c><00:12:03.120><c> the</c><00:12:03.360><c> general</c><00:12:03.839><c> algorithm</c>

00:12:04.310 --> 00:12:04.320 align:start position:0%
anymore so this is the general algorithm
 

00:12:04.320 --> 00:12:06.069 align:start position:0%
anymore so this is the general algorithm
so<00:12:04.480><c> it's</c><00:12:04.639><c> a</c><00:12:04.800><c> basic</c><00:12:05.279><c> sliding</c><00:12:05.839><c> it's</c><00:12:06.000><c> a</c>

00:12:06.069 --> 00:12:06.079 align:start position:0%
so it's a basic sliding it's a
 

00:12:06.079 --> 00:12:07.910 align:start position:0%
so it's a basic sliding it's a
fundamental<00:12:06.639><c> sliding</c><00:12:07.040><c> window</c><00:12:07.360><c> problem</c><00:12:07.760><c> with</c>

00:12:07.910 --> 00:12:07.920 align:start position:0%
fundamental sliding window problem with
 

00:12:07.920 --> 00:12:09.509 align:start position:0%
fundamental sliding window problem with
this<00:12:08.240><c> particular</c><00:12:08.800><c> condition</c>

00:12:09.509 --> 00:12:09.519 align:start position:0%
this particular condition
 

00:12:09.519 --> 00:12:12.550 align:start position:0%
this particular condition
being<00:12:10.240><c> important</c><00:12:11.279><c> but</c><00:12:11.440><c> there's</c><00:12:11.760><c> actually</c><00:12:12.240><c> one</c>

00:12:12.550 --> 00:12:12.560 align:start position:0%
being important but there's actually one
 

00:12:12.560 --> 00:12:14.150 align:start position:0%
being important but there's actually one
way<00:12:12.800><c> you</c><00:12:12.880><c> can</c><00:12:13.040><c> do</c><00:12:13.279><c> it</c><00:12:13.360><c> without</c>

00:12:14.150 --> 00:12:14.160 align:start position:0%
way you can do it without
 

00:12:14.160 --> 00:12:16.710 align:start position:0%
way you can do it without
having<00:12:14.480><c> to</c><00:12:14.880><c> look</c><00:12:15.279><c> through</c><00:12:15.760><c> the</c><00:12:16.000><c> entire</c>

00:12:16.710 --> 00:12:16.720 align:start position:0%
having to look through the entire
 

00:12:16.720 --> 00:12:17.430 align:start position:0%
having to look through the entire
hashmap

00:12:17.430 --> 00:12:17.440 align:start position:0%
hashmap
 

00:12:17.440 --> 00:12:19.350 align:start position:0%
hashmap
every<00:12:17.839><c> time</c><00:12:18.079><c> you</c><00:12:18.240><c> want</c><00:12:18.399><c> to</c><00:12:18.560><c> find</c><00:12:18.880><c> the</c><00:12:19.040><c> most</c>

00:12:19.350 --> 00:12:19.360 align:start position:0%
every time you want to find the most
 

00:12:19.360 --> 00:12:20.550 align:start position:0%
every time you want to find the most
frequent<00:12:19.920><c> character</c>

00:12:20.550 --> 00:12:20.560 align:start position:0%
frequent character
 

00:12:20.560 --> 00:12:23.990 align:start position:0%
frequent character
that<00:12:20.880><c> occurs</c><00:12:21.680><c> and</c><00:12:22.240><c> it's</c><00:12:22.480><c> kind</c><00:12:22.639><c> of</c><00:12:22.959><c> tricky</c>

00:12:23.990 --> 00:12:24.000 align:start position:0%
that occurs and it's kind of tricky
 

00:12:24.000 --> 00:12:25.590 align:start position:0%
that occurs and it's kind of tricky
to<00:12:24.240><c> arrive</c><00:12:24.720><c> at</c><00:12:24.800><c> the</c><00:12:24.959><c> solution</c><00:12:25.360><c> but</c><00:12:25.440><c> it's</c>

00:12:25.590 --> 00:12:25.600 align:start position:0%
to arrive at the solution but it's
 

00:12:25.600 --> 00:12:27.509 align:start position:0%
to arrive at the solution but it's
pretty<00:12:25.920><c> easy</c><00:12:26.320><c> to</c><00:12:26.560><c> implement</c><00:12:26.959><c> once</c><00:12:27.200><c> you</c><00:12:27.360><c> can</c>

00:12:27.509 --> 00:12:27.519 align:start position:0%
pretty easy to implement once you can
 

00:12:27.519 --> 00:12:28.629 align:start position:0%
pretty easy to implement once you can
figure<00:12:27.839><c> it</c><00:12:28.000><c> out</c>

00:12:28.629 --> 00:12:28.639 align:start position:0%
figure it out
 

00:12:28.639 --> 00:12:30.629 align:start position:0%
figure it out
i'll<00:12:28.959><c> explain</c><00:12:29.360><c> the</c><00:12:29.519><c> algorithm</c><00:12:30.079><c> at</c><00:12:30.240><c> a</c><00:12:30.399><c> high</c>

00:12:30.629 --> 00:12:30.639 align:start position:0%
i'll explain the algorithm at a high
 

00:12:30.639 --> 00:12:32.550 align:start position:0%
i'll explain the algorithm at a high
level<00:12:31.440><c> i</c><00:12:31.519><c> don't</c><00:12:31.680><c> want</c><00:12:31.839><c> to</c><00:12:31.920><c> waste</c><00:12:32.160><c> too</c><00:12:32.320><c> much</c>

00:12:32.550 --> 00:12:32.560 align:start position:0%
level i don't want to waste too much
 

00:12:32.560 --> 00:12:33.990 align:start position:0%
level i don't want to waste too much
time<00:12:32.800><c> on</c><00:12:32.880><c> it</c><00:12:33.040><c> but</c><00:12:33.200><c> basically</c><00:12:33.600><c> we're</c><00:12:33.760><c> going</c><00:12:33.920><c> to</c>

00:12:33.990 --> 00:12:34.000 align:start position:0%
time on it but basically we're going to
 

00:12:34.000 --> 00:12:36.069 align:start position:0%
time on it but basically we're going to
be<00:12:34.240><c> having</c><00:12:34.639><c> another</c><00:12:35.200><c> variable</c>

00:12:36.069 --> 00:12:36.079 align:start position:0%
be having another variable
 

00:12:36.079 --> 00:12:37.509 align:start position:0%
be having another variable
and<00:12:36.320><c> it's</c><00:12:36.480><c> going</c><00:12:36.560><c> to</c><00:12:36.639><c> be</c><00:12:36.880><c> called</c><00:12:37.120><c> max</c>

00:12:37.509 --> 00:12:37.519 align:start position:0%
and it's going to be called max
 

00:12:37.519 --> 00:12:39.590 align:start position:0%
and it's going to be called max
frequency<00:12:38.079><c> basically</c><00:12:38.480><c> the</c><00:12:38.800><c> count</c><00:12:39.200><c> of</c><00:12:39.360><c> the</c>

00:12:39.590 --> 00:12:39.600 align:start position:0%
frequency basically the count of the
 

00:12:39.600 --> 00:12:41.750 align:start position:0%
frequency basically the count of the
most<00:12:39.920><c> frequent</c><00:12:40.480><c> character</c><00:12:40.959><c> at</c><00:12:41.200><c> any</c><00:12:41.360><c> given</c>

00:12:41.750 --> 00:12:41.760 align:start position:0%
most frequent character at any given
 

00:12:41.760 --> 00:12:42.629 align:start position:0%
most frequent character at any given
time

00:12:42.629 --> 00:12:42.639 align:start position:0%
time
 

00:12:42.639 --> 00:12:44.710 align:start position:0%
time
so<00:12:42.880><c> basically</c><00:12:43.680><c> you</c><00:12:43.760><c> know</c><00:12:43.920><c> for</c><00:12:44.079><c> example</c><00:12:44.399><c> if</c><00:12:44.560><c> we</c>

00:12:44.710 --> 00:12:44.720 align:start position:0%
so basically you know for example if we
 

00:12:44.720 --> 00:12:46.150 align:start position:0%
so basically you know for example if we
had<00:12:45.040><c> a</c><00:12:45.519><c> as</c>

00:12:46.150 --> 00:12:46.160 align:start position:0%
had a as
 

00:12:46.160 --> 00:12:48.230 align:start position:0%
had a as
a<00:12:46.320><c> count</c><00:12:46.639><c> of</c><00:12:46.800><c> three</c><00:12:47.200><c> and</c><00:12:47.360><c> b</c><00:12:47.519><c> is</c><00:12:47.680><c> count</c><00:12:47.920><c> two</c><00:12:48.079><c> we'd</c>

00:12:48.230 --> 00:12:48.240 align:start position:0%
a count of three and b is count two we'd
 

00:12:48.240 --> 00:12:50.150 align:start position:0%
a count of three and b is count two we'd
say<00:12:48.480><c> okay</c><00:12:48.959><c> the</c><00:12:49.120><c> count</c><00:12:49.360><c> of</c><00:12:49.519><c> the</c><00:12:49.680><c> mo</c>

00:12:50.150 --> 00:12:50.160 align:start position:0%
say okay the count of the mo
 

00:12:50.160 --> 00:12:51.829 align:start position:0%
say okay the count of the mo
the<00:12:50.240><c> most</c><00:12:50.480><c> frequent</c><00:12:50.880><c> character</c><00:12:51.200><c> occurs</c><00:12:51.600><c> three</c>

00:12:51.829 --> 00:12:51.839 align:start position:0%
the most frequent character occurs three
 

00:12:51.839 --> 00:12:53.990 align:start position:0%
the most frequent character occurs three
times<00:12:52.079><c> so</c><00:12:52.240><c> max</c><00:12:52.560><c> f</c><00:12:52.800><c> is</c><00:12:52.959><c> going</c><00:12:53.040><c> to</c><00:12:53.120><c> be</c><00:12:53.360><c> three</c>

00:12:53.990 --> 00:12:54.000 align:start position:0%
times so max f is going to be three
 

00:12:54.000 --> 00:12:56.629 align:start position:0%
times so max f is going to be three
and<00:12:54.160><c> so</c><00:12:54.399><c> any</c><00:12:54.639><c> time</c><00:12:54.880><c> you</c><00:12:54.959><c> know</c><00:12:55.200><c> if</c><00:12:55.360><c> we</c><00:12:55.440><c> got</c><00:12:55.600><c> a</c><00:12:55.760><c> b</c>

00:12:56.629 --> 00:12:56.639 align:start position:0%
and so any time you know if we got a b
 

00:12:56.639 --> 00:12:57.030 align:start position:0%
and so any time you know if we got a b
we<00:12:56.800><c> inc</c>

00:12:57.030 --> 00:12:57.040 align:start position:0%
we inc
 

00:12:57.040 --> 00:12:58.470 align:start position:0%
we inc
let's<00:12:57.200><c> say</c><00:12:57.360><c> we</c><00:12:57.440><c> incremented</c><00:12:57.920><c> our</c><00:12:58.000><c> b</c><00:12:58.240><c> all</c><00:12:58.399><c> the</c>

00:12:58.470 --> 00:12:58.480 align:start position:0%
let's say we incremented our b all the
 

00:12:58.480 --> 00:13:00.710 align:start position:0%
let's say we incremented our b all the
way<00:12:58.720><c> up</c><00:12:58.800><c> to</c><00:12:59.040><c> four</c><00:12:59.519><c> then</c><00:12:59.760><c> we</c><00:12:59.920><c> want</c><00:13:00.079><c> to</c><00:13:00.240><c> update</c>

00:13:00.710 --> 00:13:00.720 align:start position:0%
way up to four then we want to update
 

00:13:00.720 --> 00:13:03.750 align:start position:0%
way up to four then we want to update
our<00:13:00.959><c> max</c><00:13:01.279><c> frequency</c><00:13:02.160><c> to</c><00:13:02.399><c> four</c><00:13:02.800><c> right</c><00:13:03.279><c> so</c><00:13:03.519><c> we'd</c>

00:13:03.750 --> 00:13:03.760 align:start position:0%
our max frequency to four right so we'd
 

00:13:03.760 --> 00:13:05.509 align:start position:0%
our max frequency to four right so we'd
always<00:13:04.000><c> want</c><00:13:04.320><c> this</c><00:13:04.480><c> to</c><00:13:04.639><c> be</c><00:13:04.800><c> the</c><00:13:04.880><c> most</c><00:13:05.120><c> frequent</c>

00:13:05.509 --> 00:13:05.519 align:start position:0%
always want this to be the most frequent
 

00:13:05.519 --> 00:13:06.069 align:start position:0%
always want this to be the most frequent
character

00:13:06.069 --> 00:13:06.079 align:start position:0%
character
 

00:13:06.079 --> 00:13:08.550 align:start position:0%
character
now<00:13:06.320><c> the</c><00:13:06.560><c> one</c><00:13:06.959><c> problem</c><00:13:07.600><c> is</c><00:13:07.920><c> if</c><00:13:08.079><c> we're</c><00:13:08.320><c> trying</c>

00:13:08.550 --> 00:13:08.560 align:start position:0%
now the one problem is if we're trying
 

00:13:08.560 --> 00:13:09.990 align:start position:0%
now the one problem is if we're trying
to<00:13:08.720><c> maintain</c><00:13:09.120><c> the</c><00:13:09.279><c> count</c><00:13:09.519><c> of</c><00:13:09.600><c> the</c><00:13:09.680><c> most</c>

00:13:09.990 --> 00:13:10.000 align:start position:0%
to maintain the count of the most
 

00:13:10.000 --> 00:13:10.949 align:start position:0%
to maintain the count of the most
frequent<00:13:10.320><c> character</c>

00:13:10.949 --> 00:13:10.959 align:start position:0%
frequent character
 

00:13:10.959 --> 00:13:12.550 align:start position:0%
frequent character
what<00:13:11.200><c> happens</c><00:13:11.519><c> when</c><00:13:11.680><c> we</c><00:13:11.839><c> take</c><00:13:12.079><c> our</c><00:13:12.320><c> left</c>

00:13:12.550 --> 00:13:12.560 align:start position:0%
what happens when we take our left
 

00:13:12.560 --> 00:13:14.069 align:start position:0%
what happens when we take our left
pointer<00:13:12.880><c> for</c><00:13:13.040><c> example</c><00:13:13.440><c> right</c><00:13:13.600><c> and</c><00:13:13.680><c> then</c>

00:13:14.069 --> 00:13:14.079 align:start position:0%
pointer for example right and then
 

00:13:14.079 --> 00:13:15.990 align:start position:0%
pointer for example right and then
shift<00:13:14.480><c> it</c><00:13:14.720><c> right</c><00:13:15.120><c> when</c><00:13:15.360><c> we</c><00:13:15.440><c> do</c><00:13:15.680><c> that</c><00:13:15.839><c> we're</c>

00:13:15.990 --> 00:13:16.000 align:start position:0%
shift it right when we do that we're
 

00:13:16.000 --> 00:13:17.910 align:start position:0%
shift it right when we do that we're
basically<00:13:16.480><c> removing</c><00:13:17.120><c> a</c><00:13:17.279><c> character</c>

00:13:17.910 --> 00:13:17.920 align:start position:0%
basically removing a character
 

00:13:17.920 --> 00:13:19.670 align:start position:0%
basically removing a character
and<00:13:18.320><c> therefore</c><00:13:18.720><c> we're</c><00:13:18.880><c> gonna</c><00:13:18.959><c> have</c><00:13:19.120><c> to</c><00:13:19.279><c> update</c>

00:13:19.670 --> 00:13:19.680 align:start position:0%
and therefore we're gonna have to update
 

00:13:19.680 --> 00:13:22.710 align:start position:0%
and therefore we're gonna have to update
our<00:13:20.079><c> count</c><00:13:20.720><c> map</c><00:13:21.040><c> right</c><00:13:21.279><c> we</c><00:13:21.440><c> are</c><00:13:21.600><c> gonna</c><00:13:21.839><c> do</c><00:13:22.079><c> that</c>

00:13:22.710 --> 00:13:22.720 align:start position:0%
our count map right we are gonna do that
 

00:13:22.720 --> 00:13:24.550 align:start position:0%
our count map right we are gonna do that
but<00:13:23.120><c> and</c><00:13:23.279><c> if</c><00:13:23.440><c> that</c><00:13:23.680><c> does</c><00:13:23.920><c> happen</c><00:13:24.240><c> right</c><00:13:24.399><c> let's</c>

00:13:24.550 --> 00:13:24.560 align:start position:0%
but and if that does happen right let's
 

00:13:24.560 --> 00:13:25.910 align:start position:0%
but and if that does happen right let's
say<00:13:24.720><c> we</c><00:13:24.880><c> took</c><00:13:25.120><c> b</c><00:13:25.519><c> and</c><00:13:25.600><c> then</c>

00:13:25.910 --> 00:13:25.920 align:start position:0%
say we took b and then
 

00:13:25.920 --> 00:13:28.550 align:start position:0%
say we took b and then
from<00:13:26.399><c> four</c><00:13:26.880><c> we</c><00:13:27.200><c> decremented</c><00:13:27.920><c> it</c><00:13:28.079><c> all</c><00:13:28.240><c> the</c><00:13:28.320><c> way</c>

00:13:28.550 --> 00:13:28.560 align:start position:0%
from four we decremented it all the way
 

00:13:28.560 --> 00:13:29.110 align:start position:0%
from four we decremented it all the way
down<00:13:28.800><c> to</c>

00:13:29.110 --> 00:13:29.120 align:start position:0%
down to
 

00:13:29.120 --> 00:13:32.150 align:start position:0%
down to
two<00:13:29.440><c> for</c><00:13:29.680><c> example</c><00:13:30.480><c> then</c><00:13:31.040><c> we</c><00:13:31.200><c> have</c><00:13:31.360><c> to</c><00:13:31.600><c> rescan</c>

00:13:32.150 --> 00:13:32.160 align:start position:0%
two for example then we have to rescan
 

00:13:32.160 --> 00:13:33.430 align:start position:0%
two for example then we have to rescan
this<00:13:32.399><c> entire</c><00:13:33.040><c> map</c>

00:13:33.430 --> 00:13:33.440 align:start position:0%
this entire map
 

00:13:33.440 --> 00:13:35.350 align:start position:0%
this entire map
and<00:13:33.600><c> then</c><00:13:33.760><c> find</c><00:13:34.000><c> okay</c><00:13:34.240><c> what's</c><00:13:34.560><c> now</c><00:13:34.800><c> what's</c><00:13:35.040><c> the</c>

00:13:35.350 --> 00:13:35.360 align:start position:0%
and then find okay what's now what's the
 

00:13:35.360 --> 00:13:37.350 align:start position:0%
and then find okay what's now what's the
new<00:13:35.680><c> most</c><00:13:36.000><c> frequent</c><00:13:36.399><c> character</c><00:13:36.880><c> right</c><00:13:37.120><c> so</c>

00:13:37.350 --> 00:13:37.360 align:start position:0%
new most frequent character right so
 

00:13:37.360 --> 00:13:39.110 align:start position:0%
new most frequent character right so
we'd<00:13:37.519><c> have</c><00:13:37.680><c> to</c><00:13:37.760><c> take</c><00:13:38.000><c> our</c><00:13:38.079><c> max</c><00:13:38.399><c> frequency</c>

00:13:39.110 --> 00:13:39.120 align:start position:0%
we'd have to take our max frequency
 

00:13:39.120 --> 00:13:41.750 align:start position:0%
we'd have to take our max frequency
and<00:13:39.279><c> from</c><00:13:39.680><c> four</c><00:13:40.160><c> downgrade</c><00:13:40.880><c> it</c><00:13:41.199><c> all</c><00:13:41.440><c> the</c><00:13:41.519><c> way</c>

00:13:41.750 --> 00:13:41.760 align:start position:0%
and from four downgrade it all the way
 

00:13:41.760 --> 00:13:42.230 align:start position:0%
and from four downgrade it all the way
to

00:13:42.230 --> 00:13:42.240 align:start position:0%
to
 

00:13:42.240 --> 00:13:44.710 align:start position:0%
to
a<00:13:42.639><c> three</c><00:13:42.959><c> for</c><00:13:43.199><c> example</c><00:13:44.000><c> so</c><00:13:44.160><c> then</c><00:13:44.320><c> we'd</c><00:13:44.560><c> have</c><00:13:44.639><c> to</c>

00:13:44.710 --> 00:13:44.720 align:start position:0%
a three for example so then we'd have to
 

00:13:44.720 --> 00:13:45.750 align:start position:0%
a three for example so then we'd have to
set<00:13:44.959><c> it</c><00:13:45.040><c> to</c><00:13:45.199><c> a</c><00:13:45.360><c> three</c>

00:13:45.750 --> 00:13:45.760 align:start position:0%
set it to a three
 

00:13:45.760 --> 00:13:47.990 align:start position:0%
set it to a three
but<00:13:46.320><c> and</c><00:13:46.639><c> that</c><00:13:46.880><c> would</c><00:13:47.040><c> basically</c><00:13:47.440><c> defeat</c><00:13:47.920><c> the</c>

00:13:47.990 --> 00:13:48.000 align:start position:0%
but and that would basically defeat the
 

00:13:48.000 --> 00:13:49.910 align:start position:0%
but and that would basically defeat the
purpose<00:13:48.320><c> right</c><00:13:48.480><c> we'd</c><00:13:48.720><c> still</c><00:13:48.880><c> have</c><00:13:49.040><c> to</c><00:13:49.120><c> do</c><00:13:49.279><c> that</c>

00:13:49.910 --> 00:13:49.920 align:start position:0%
purpose right we'd still have to do that
 

00:13:49.920 --> 00:13:53.110 align:start position:0%
purpose right we'd still have to do that
big<00:13:50.160><c> o</c><00:13:50.320><c> of</c><00:13:50.560><c> 26</c><00:13:51.680><c> calculation</c><00:13:52.399><c> to</c><00:13:52.560><c> scan</c><00:13:52.880><c> through</c>

00:13:53.110 --> 00:13:53.120 align:start position:0%
big o of 26 calculation to scan through
 

00:13:53.120 --> 00:13:53.670 align:start position:0%
big o of 26 calculation to scan through
this

00:13:53.670 --> 00:13:53.680 align:start position:0%
this
 

00:13:53.680 --> 00:13:56.790 align:start position:0%
this
but<00:13:54.000><c> it's</c><00:13:54.320><c> technically</c><00:13:55.519><c> true</c><00:13:56.160><c> that</c><00:13:56.320><c> you</c>

00:13:56.790 --> 00:13:56.800 align:start position:0%
but it's technically true that you
 

00:13:56.800 --> 00:13:59.350 align:start position:0%
but it's technically true that you
don't<00:13:57.199><c> have</c><00:13:57.360><c> to</c><00:13:57.680><c> decrement</c><00:13:58.320><c> this</c><00:13:59.040><c> max</c>

00:13:59.350 --> 00:13:59.360 align:start position:0%
don't have to decrement this max
 

00:13:59.360 --> 00:14:00.389 align:start position:0%
don't have to decrement this max
frequency

00:14:00.389 --> 00:14:00.399 align:start position:0%
frequency
 

00:14:00.399 --> 00:14:03.910 align:start position:0%
frequency
but<00:14:00.560><c> the</c><00:14:00.800><c> main</c><00:14:01.120><c> idea</c><00:14:01.680><c> is</c><00:14:02.000><c> this</c><00:14:02.959><c> the</c><00:14:03.120><c> result</c>

00:14:03.910 --> 00:14:03.920 align:start position:0%
but the main idea is this the result
 

00:14:03.920 --> 00:14:07.110 align:start position:0%
but the main idea is this the result
is<00:14:04.240><c> only</c><00:14:04.639><c> going</c><00:14:04.800><c> to</c><00:14:04.880><c> be</c><00:14:05.120><c> maximized</c><00:14:06.079><c> as</c><00:14:06.320><c> we</c><00:14:06.720><c> find</c>

00:14:07.110 --> 00:14:07.120 align:start position:0%
is only going to be maximized as we find
 

00:14:07.120 --> 00:14:07.509 align:start position:0%
is only going to be maximized as we find
a

00:14:07.509 --> 00:14:07.519 align:start position:0%
a
 

00:14:07.519 --> 00:14:10.069 align:start position:0%
a
new<00:14:08.000><c> max</c><00:14:08.480><c> frequency</c><00:14:09.120><c> right</c><00:14:09.440><c> because</c><00:14:09.680><c> remember</c>

00:14:10.069 --> 00:14:10.079 align:start position:0%
new max frequency right because remember
 

00:14:10.079 --> 00:14:11.750 align:start position:0%
new max frequency right because remember
what<00:14:10.240><c> we</c><00:14:10.399><c> were</c><00:14:10.560><c> doing</c><00:14:10.800><c> we</c><00:14:10.880><c> were</c><00:14:11.040><c> taking</c><00:14:11.360><c> the</c>

00:14:11.750 --> 00:14:11.760 align:start position:0%
what we were doing we were taking the
 

00:14:11.760 --> 00:14:13.509 align:start position:0%
what we were doing we were taking the
length<00:14:12.160><c> of</c><00:14:12.320><c> the</c><00:14:12.480><c> window</c>

00:14:13.509 --> 00:14:13.519 align:start position:0%
length of the window
 

00:14:13.519 --> 00:14:17.189 align:start position:0%
length of the window
subtracted<00:14:14.399><c> by</c><00:14:14.880><c> the</c><00:14:15.120><c> max</c><00:14:15.519><c> frequency</c><00:14:16.160><c> right</c>

00:14:17.189 --> 00:14:17.199 align:start position:0%
subtracted by the max frequency right
 

00:14:17.199 --> 00:14:19.189 align:start position:0%
subtracted by the max frequency right
whatever<00:14:17.680><c> the</c><00:14:17.839><c> most</c><00:14:18.160><c> occurring</c><00:14:18.639><c> character</c>

00:14:19.189 --> 00:14:19.199 align:start position:0%
whatever the most occurring character
 

00:14:19.199 --> 00:14:22.230 align:start position:0%
whatever the most occurring character
was<00:14:19.920><c> and</c><00:14:20.079><c> we</c><00:14:20.399><c> wanted</c><00:14:20.800><c> to</c><00:14:21.120><c> minimize</c><00:14:21.760><c> this</c><00:14:22.000><c> right</c>

00:14:22.230 --> 00:14:22.240 align:start position:0%
was and we wanted to minimize this right
 

00:14:22.240 --> 00:14:23.590 align:start position:0%
was and we wanted to minimize this right
so<00:14:22.399><c> basically</c><00:14:22.880><c> we</c><00:14:23.040><c> want</c><00:14:23.199><c> the</c>

00:14:23.590 --> 00:14:23.600 align:start position:0%
so basically we want the
 

00:14:23.600 --> 00:14:25.750 align:start position:0%
so basically we want the
length<00:14:24.160><c> we</c><00:14:24.320><c> want</c><00:14:24.560><c> the</c><00:14:24.959><c> length</c><00:14:25.360><c> to</c><00:14:25.519><c> be</c>

00:14:25.750 --> 00:14:25.760 align:start position:0%
length we want the length to be
 

00:14:25.760 --> 00:14:27.990 align:start position:0%
length we want the length to be
maximized<00:14:26.560><c> because</c><00:14:26.880><c> that's</c><00:14:27.120><c> what</c><00:14:27.360><c> our</c><00:14:27.519><c> result</c>

00:14:27.990 --> 00:14:28.000 align:start position:0%
maximized because that's what our result
 

00:14:28.000 --> 00:14:29.670 align:start position:0%
maximized because that's what our result
is<00:14:28.160><c> going</c><00:14:28.240><c> to</c><00:14:28.320><c> be</c><00:14:28.560><c> set</c><00:14:28.800><c> to</c>

00:14:29.670 --> 00:14:29.680 align:start position:0%
is going to be set to
 

00:14:29.680 --> 00:14:32.629 align:start position:0%
is going to be set to
so<00:14:29.920><c> therefore</c><00:14:30.480><c> we</c><00:14:30.800><c> also</c><00:14:31.360><c> want</c><00:14:31.920><c> the</c><00:14:32.160><c> max</c>

00:14:32.629 --> 00:14:32.639 align:start position:0%
so therefore we also want the max
 

00:14:32.639 --> 00:14:34.629 align:start position:0%
so therefore we also want the max
frequency<00:14:33.279><c> to</c><00:14:33.440><c> be</c><00:14:33.600><c> maximized</c><00:14:34.240><c> because</c><00:14:34.480><c> we</c>

00:14:34.629 --> 00:14:34.639 align:start position:0%
frequency to be maximized because we
 

00:14:34.639 --> 00:14:35.829 align:start position:0%
frequency to be maximized because we
want<00:14:34.880><c> to</c><00:14:35.120><c> ensure</c>

00:14:35.829 --> 00:14:35.839 align:start position:0%
want to ensure
 

00:14:35.839 --> 00:14:39.110 align:start position:0%
want to ensure
that<00:14:36.320><c> this</c><00:14:36.880><c> is</c><00:14:37.279><c> less</c><00:14:37.600><c> than</c><00:14:37.839><c> or</c><00:14:38.160><c> equal</c><00:14:38.720><c> to</c>

00:14:39.110 --> 00:14:39.120 align:start position:0%
that this is less than or equal to
 

00:14:39.120 --> 00:14:42.310 align:start position:0%
that this is less than or equal to
k<00:14:39.519><c> and</c><00:14:39.839><c> k</c><00:14:40.240><c> is</c><00:14:40.399><c> going</c><00:14:40.639><c> to</c><00:14:40.800><c> be</c><00:14:41.040><c> a</c><00:14:41.440><c> constant</c>

00:14:42.310 --> 00:14:42.320 align:start position:0%
k and k is going to be a constant
 

00:14:42.320 --> 00:14:44.389 align:start position:0%
k and k is going to be a constant
so<00:14:42.560><c> for</c><00:14:42.800><c> example</c><00:14:43.199><c> let's</c><00:14:43.440><c> say</c><00:14:43.600><c> i</c><00:14:43.760><c> had</c><00:14:44.000><c> a</c><00:14:44.079><c> max</c>

00:14:44.389 --> 00:14:44.399 align:start position:0%
so for example let's say i had a max
 

00:14:44.399 --> 00:14:45.750 align:start position:0%
so for example let's say i had a max
frequency<00:14:44.959><c> of</c><00:14:45.199><c> four</c>

00:14:45.750 --> 00:14:45.760 align:start position:0%
frequency of four
 

00:14:45.760 --> 00:14:48.230 align:start position:0%
frequency of four
but<00:14:46.000><c> let's</c><00:14:46.160><c> say</c><00:14:46.560><c> now</c><00:14:47.040><c> the</c><00:14:47.199><c> new</c><00:14:47.440><c> max</c><00:14:47.760><c> frequency</c>

00:14:48.230 --> 00:14:48.240 align:start position:0%
but let's say now the new max frequency
 

00:14:48.240 --> 00:14:50.389 align:start position:0%
but let's say now the new max frequency
got<00:14:48.639><c> downgraded</c><00:14:49.360><c> to</c><00:14:49.519><c> a</c><00:14:49.680><c> three</c><00:14:50.000><c> i'm</c>

00:14:50.389 --> 00:14:50.399 align:start position:0%
got downgraded to a three i'm
 

00:14:50.399 --> 00:14:53.189 align:start position:0%
got downgraded to a three i'm
still<00:14:50.800><c> gonna</c><00:14:51.199><c> leave</c><00:14:51.600><c> this</c><00:14:52.000><c> as</c><00:14:52.240><c> a</c><00:14:52.480><c> four</c><00:14:52.880><c> because</c>

00:14:53.189 --> 00:14:53.199 align:start position:0%
still gonna leave this as a four because
 

00:14:53.199 --> 00:14:54.230 align:start position:0%
still gonna leave this as a four because
it's<00:14:53.519><c> not</c><00:14:53.839><c> going</c><00:14:53.920><c> to</c>

00:14:54.230 --> 00:14:54.240 align:start position:0%
it's not going to
 

00:14:54.240 --> 00:14:57.269 align:start position:0%
it's not going to
change<00:14:54.959><c> our</c><00:14:55.360><c> result</c><00:14:56.240><c> because</c><00:14:56.560><c> for</c><00:14:56.720><c> example</c><00:14:57.120><c> if</c>

00:14:57.269 --> 00:14:57.279 align:start position:0%
change our result because for example if
 

00:14:57.279 --> 00:14:57.990 align:start position:0%
change our result because for example if
i<00:14:57.440><c> had</c><00:14:57.600><c> a</c>

00:14:57.990 --> 00:14:58.000 align:start position:0%
i had a
 

00:14:58.000 --> 00:15:01.670 align:start position:0%
i had a
6<00:14:58.639><c> minus</c><00:14:59.279><c> 4</c><00:14:59.839><c> that</c><00:15:00.079><c> was</c><00:15:00.800><c> that</c><00:15:00.959><c> was</c><00:15:01.120><c> less</c><00:15:01.360><c> than</c><00:15:01.519><c> or</c>

00:15:01.670 --> 00:15:01.680 align:start position:0%
6 minus 4 that was that was less than or
 

00:15:01.680 --> 00:15:04.470 align:start position:0%
6 minus 4 that was that was less than or
equal<00:15:02.000><c> to</c><00:15:02.240><c> k</c><00:15:02.480><c> which</c><00:15:02.639><c> is</c><00:15:02.880><c> 2</c><00:15:03.199><c> in</c><00:15:03.360><c> our</c><00:15:03.600><c> example</c>

00:15:04.470 --> 00:15:04.480 align:start position:0%
equal to k which is 2 in our example
 

00:15:04.480 --> 00:15:08.030 align:start position:0%
equal to k which is 2 in our example
and<00:15:04.639><c> if</c><00:15:04.800><c> i</c><00:15:05.120><c> leave</c><00:15:05.440><c> this</c><00:15:05.760><c> as</c><00:15:06.000><c> a</c><00:15:06.160><c> 4</c><00:15:06.959><c> i'm</c><00:15:07.199><c> basically</c>

00:15:08.030 --> 00:15:08.040 align:start position:0%
and if i leave this as a 4 i'm basically
 

00:15:08.040 --> 00:15:10.470 align:start position:0%
and if i leave this as a 4 i'm basically
overestimating<00:15:09.120><c> what</c><00:15:09.279><c> the</c><00:15:09.440><c> max</c><00:15:09.760><c> frequency</c><00:15:10.320><c> is</c>

00:15:10.470 --> 00:15:10.480 align:start position:0%
overestimating what the max frequency is
 

00:15:10.480 --> 00:15:11.990 align:start position:0%
overestimating what the max frequency is
but<00:15:10.639><c> we</c><00:15:10.800><c> know</c><00:15:11.040><c> at</c><00:15:11.279><c> least</c><00:15:11.680><c> at</c>

00:15:11.990 --> 00:15:12.000 align:start position:0%
but we know at least at
 

00:15:12.000 --> 00:15:14.710 align:start position:0%
but we know at least at
one<00:15:12.320><c> given</c><00:15:12.720><c> point</c><00:15:12.959><c> in</c><00:15:13.120><c> time</c><00:15:13.360><c> it</c><00:15:13.600><c> was</c><00:15:13.920><c> a</c><00:15:14.160><c> four</c><00:15:14.480><c> so</c>

00:15:14.710 --> 00:15:14.720 align:start position:0%
one given point in time it was a four so
 

00:15:14.720 --> 00:15:16.389 align:start position:0%
one given point in time it was a four so
therefore<00:15:15.120><c> we</c><00:15:15.279><c> were</c><00:15:15.440><c> able</c><00:15:15.680><c> to</c><00:15:15.839><c> take</c><00:15:16.160><c> the</c>

00:15:16.389 --> 00:15:16.399 align:start position:0%
therefore we were able to take the
 

00:15:16.399 --> 00:15:16.870 align:start position:0%
therefore we were able to take the
length

00:15:16.870 --> 00:15:16.880 align:start position:0%
length
 

00:15:16.880 --> 00:15:19.750 align:start position:0%
length
six<00:15:17.519><c> and</c><00:15:17.600><c> then</c><00:15:17.839><c> set</c><00:15:18.079><c> it</c><00:15:18.320><c> equal</c><00:15:18.560><c> to</c><00:15:18.800><c> our</c><00:15:18.959><c> result</c>

00:15:19.750 --> 00:15:19.760 align:start position:0%
six and then set it equal to our result
 

00:15:19.760 --> 00:15:20.790 align:start position:0%
six and then set it equal to our result
and<00:15:20.000><c> now</c>

00:15:20.790 --> 00:15:20.800 align:start position:0%
and now
 

00:15:20.800 --> 00:15:23.110 align:start position:0%
and now
if<00:15:20.959><c> we're</c><00:15:21.279><c> ever</c><00:15:21.839><c> so</c><00:15:22.160><c> let's</c><00:15:22.320><c> say</c><00:15:22.480><c> our</c><00:15:22.639><c> result</c><00:15:23.040><c> is</c>

00:15:23.110 --> 00:15:23.120 align:start position:0%
if we're ever so let's say our result is
 

00:15:23.120 --> 00:15:24.150 align:start position:0%
if we're ever so let's say our result is
now<00:15:23.360><c> six</c><00:15:23.680><c> if</c><00:15:23.760><c> we're</c>

00:15:24.150 --> 00:15:24.160 align:start position:0%
now six if we're
 

00:15:24.160 --> 00:15:26.790 align:start position:0%
now six if we're
ever<00:15:24.399><c> going</c><00:15:24.480><c> to</c><00:15:24.800><c> increase</c><00:15:25.440><c> the</c><00:15:25.600><c> result</c><00:15:26.079><c> from</c><00:15:26.480><c> 6</c>

00:15:26.790 --> 00:15:26.800 align:start position:0%
ever going to increase the result from 6
 

00:15:26.800 --> 00:15:27.509 align:start position:0%
ever going to increase the result from 6
to<00:15:27.040><c> another</c>

00:15:27.509 --> 00:15:27.519 align:start position:0%
to another
 

00:15:27.519 --> 00:15:29.829 align:start position:0%
to another
number<00:15:27.839><c> like</c><00:15:28.079><c> for</c><00:15:28.240><c> example</c><00:15:28.720><c> 7</c><00:15:29.360><c> we</c><00:15:29.600><c> would</c>

00:15:29.829 --> 00:15:29.839 align:start position:0%
number like for example 7 we would
 

00:15:29.839 --> 00:15:30.949 align:start position:0%
number like for example 7 we would
require

00:15:30.949 --> 00:15:30.959 align:start position:0%
require
 

00:15:30.959 --> 00:15:33.990 align:start position:0%
require
our<00:15:31.360><c> max</c><00:15:31.759><c> frequency</c><00:15:32.320><c> to</c><00:15:32.560><c> increase</c><00:15:33.600><c> if</c><00:15:33.759><c> it</c>

00:15:33.990 --> 00:15:34.000 align:start position:0%
our max frequency to increase if it
 

00:15:34.000 --> 00:15:35.350 align:start position:0%
our max frequency to increase if it
stays<00:15:34.399><c> the</c><00:15:34.720><c> same</c>

00:15:35.350 --> 00:15:35.360 align:start position:0%
stays the same
 

00:15:35.360 --> 00:15:38.550 align:start position:0%
stays the same
or<00:15:35.600><c> if</c><00:15:35.759><c> it</c><00:15:36.079><c> decreases</c><00:15:36.880><c> our</c><00:15:37.040><c> result</c><00:15:37.680><c> is</c><00:15:38.079><c> never</c>

00:15:38.550 --> 00:15:38.560 align:start position:0%
or if it decreases our result is never
 

00:15:38.560 --> 00:15:40.949 align:start position:0%
or if it decreases our result is never
going<00:15:38.880><c> to</c><00:15:39.199><c> change</c><00:15:39.680><c> because</c><00:15:40.000><c> we</c><00:15:40.240><c> only</c><00:15:40.639><c> change</c>

00:15:40.949 --> 00:15:40.959 align:start position:0%
going to change because we only change
 

00:15:40.959 --> 00:15:41.749 align:start position:0%
going to change because we only change
our<00:15:41.120><c> result</c>

00:15:41.749 --> 00:15:41.759 align:start position:0%
our result
 

00:15:41.759 --> 00:15:44.310 align:start position:0%
our result
when<00:15:41.920><c> we</c><00:15:42.399><c> increase</c><00:15:43.040><c> our</c><00:15:43.199><c> max</c><00:15:43.600><c> frequency</c>

00:15:44.310 --> 00:15:44.320 align:start position:0%
when we increase our max frequency
 

00:15:44.320 --> 00:15:45.749 align:start position:0%
when we increase our max frequency
because<00:15:44.639><c> that's</c><00:15:44.880><c> the</c><00:15:45.120><c> only</c><00:15:45.440><c> way</c>

00:15:45.749 --> 00:15:45.759 align:start position:0%
because that's the only way
 

00:15:45.759 --> 00:15:48.470 align:start position:0%
because that's the only way
this<00:15:46.079><c> condition</c><00:15:46.800><c> here</c><00:15:47.120><c> is</c><00:15:47.279><c> going</c><00:15:47.519><c> to</c><00:15:47.680><c> be</c><00:15:47.920><c> true</c>

00:15:48.470 --> 00:15:48.480 align:start position:0%
this condition here is going to be true
 

00:15:48.480 --> 00:15:49.030 align:start position:0%
this condition here is going to be true
so

00:15:49.030 --> 00:15:49.040 align:start position:0%
so
 

00:15:49.040 --> 00:15:52.150 align:start position:0%
so
if<00:15:49.279><c> our</c><00:15:49.440><c> max</c><00:15:49.839><c> frequency</c><00:15:50.560><c> is</c><00:15:50.880><c> downgraded</c><00:15:51.759><c> we</c>

00:15:52.150 --> 00:15:52.160 align:start position:0%
if our max frequency is downgraded we
 

00:15:52.160 --> 00:15:54.389 align:start position:0%
if our max frequency is downgraded we
don't<00:15:52.560><c> have</c><00:15:52.800><c> to</c><00:15:53.279><c> actually</c><00:15:53.839><c> update</c><00:15:54.240><c> it</c><00:15:54.320><c> we</c>

00:15:54.389 --> 00:15:54.399 align:start position:0%
don't have to actually update it we
 

00:15:54.399 --> 00:15:55.910 align:start position:0%
don't have to actually update it we
don't<00:15:54.560><c> have</c><00:15:54.720><c> to</c><00:15:54.880><c> look</c><00:15:55.120><c> through</c><00:15:55.440><c> the</c><00:15:55.600><c> entire</c>

00:15:55.910 --> 00:15:55.920 align:start position:0%
don't have to look through the entire
 

00:15:55.920 --> 00:15:58.069 align:start position:0%
don't have to look through the entire
hash<00:15:56.240><c> map</c><00:15:56.480><c> to</c><00:15:56.720><c> find</c><00:15:57.120><c> the</c><00:15:57.360><c> new</c><00:15:57.600><c> max</c>

00:15:58.069 --> 00:15:58.079 align:start position:0%
hash map to find the new max
 

00:15:58.079 --> 00:16:01.110 align:start position:0%
hash map to find the new max
frequency<00:15:59.040><c> but</c><00:15:59.360><c> if</c><00:15:59.600><c> we</c><00:16:00.000><c> increase</c><00:16:00.639><c> our</c><00:16:00.800><c> max</c>

00:16:01.110 --> 00:16:01.120 align:start position:0%
frequency but if we increase our max
 

00:16:01.120 --> 00:16:02.870 align:start position:0%
frequency but if we increase our max
frequency<00:16:01.600><c> for</c><00:16:01.759><c> example</c><00:16:02.079><c> if</c><00:16:02.240><c> i</c><00:16:02.320><c> took</c><00:16:02.480><c> this</c>

00:16:02.870 --> 00:16:02.880 align:start position:0%
frequency for example if i took this
 

00:16:02.880 --> 00:16:05.430 align:start position:0%
frequency for example if i took this
a<00:16:03.440><c> and</c><00:16:03.519><c> then</c><00:16:03.759><c> from</c><00:16:04.079><c> three</c><00:16:04.399><c> i</c><00:16:04.560><c> set</c><00:16:04.800><c> it</c><00:16:04.959><c> equal</c><00:16:05.199><c> to</c>

00:16:05.430 --> 00:16:05.440 align:start position:0%
a and then from three i set it equal to
 

00:16:05.440 --> 00:16:06.389 align:start position:0%
a and then from three i set it equal to
a<00:16:05.680><c> five</c>

00:16:06.389 --> 00:16:06.399 align:start position:0%
a five
 

00:16:06.399 --> 00:16:08.389 align:start position:0%
a five
then<00:16:06.880><c> that's</c><00:16:07.440><c> that's</c><00:16:07.680><c> something</c><00:16:08.000><c> we</c><00:16:08.160><c> can</c>

00:16:08.389 --> 00:16:08.399 align:start position:0%
then that's that's something we can
 

00:16:08.399 --> 00:16:09.590 align:start position:0%
then that's that's something we can
check<00:16:08.639><c> and</c><00:16:08.880><c> big</c><00:16:09.120><c> o</c><00:16:09.279><c> of</c>

00:16:09.590 --> 00:16:09.600 align:start position:0%
check and big o of
 

00:16:09.600 --> 00:16:13.430 align:start position:0%
check and big o of
one<00:16:10.079><c> time</c><00:16:10.959><c> and</c><00:16:11.199><c> then</c><00:16:12.320><c> if</c><00:16:12.480><c> we</c><00:16:12.720><c> increase</c><00:16:13.199><c> this</c>

00:16:13.430 --> 00:16:13.440 align:start position:0%
one time and then if we increase this
 

00:16:13.440 --> 00:16:14.550 align:start position:0%
one time and then if we increase this
then<00:16:13.680><c> we</c><00:16:13.920><c> definitely</c>

00:16:14.550 --> 00:16:14.560 align:start position:0%
then we definitely
 

00:16:14.560 --> 00:16:17.189 align:start position:0%
then we definitely
do<00:16:14.959><c> want</c><00:16:15.199><c> to</c><00:16:15.440><c> update</c><00:16:15.839><c> our</c><00:16:16.000><c> max</c><00:16:16.320><c> frequency</c><00:16:16.959><c> and</c>

00:16:17.189 --> 00:16:17.199 align:start position:0%
do want to update our max frequency and
 

00:16:17.199 --> 00:16:18.470 align:start position:0%
do want to update our max frequency and
increase<00:16:17.600><c> it</c><00:16:17.680><c> and</c><00:16:17.759><c> that's</c><00:16:18.000><c> something</c><00:16:18.240><c> we</c><00:16:18.399><c> can</c>

00:16:18.470 --> 00:16:18.480 align:start position:0%
increase it and that's something we can
 

00:16:18.480 --> 00:16:20.790 align:start position:0%
increase it and that's something we can
do<00:16:18.720><c> in</c><00:16:18.800><c> big</c><00:16:19.040><c> o</c><00:16:19.199><c> of</c><00:16:19.440><c> one</c><00:16:19.680><c> time</c><00:16:20.000><c> so</c>

00:16:20.790 --> 00:16:20.800 align:start position:0%
do in big o of one time so
 

00:16:20.800 --> 00:16:22.389 align:start position:0%
do in big o of one time so
i<00:16:20.880><c> know</c><00:16:21.040><c> i</c><00:16:21.199><c> probably</c><00:16:21.440><c> went</c><00:16:21.600><c> a</c><00:16:21.680><c> little</c><00:16:21.920><c> too</c><00:16:22.160><c> long</c>

00:16:22.389 --> 00:16:22.399 align:start position:0%
i know i probably went a little too long
 

00:16:22.399 --> 00:16:24.150 align:start position:0%
i know i probably went a little too long
into<00:16:22.639><c> this</c><00:16:22.800><c> but</c><00:16:23.120><c> the</c><00:16:23.279><c> main</c><00:16:23.519><c> idea</c><00:16:23.839><c> here</c>

00:16:24.150 --> 00:16:24.160 align:start position:0%
into this but the main idea here
 

00:16:24.160 --> 00:16:26.629 align:start position:0%
into this but the main idea here
i'm<00:16:24.320><c> trying</c><00:16:24.480><c> to</c><00:16:24.560><c> get</c><00:16:24.800><c> at</c><00:16:25.040><c> is</c><00:16:25.680><c> the</c><00:16:26.000><c> easy</c><00:16:26.320><c> way</c><00:16:26.480><c> to</c>

00:16:26.629 --> 00:16:26.639 align:start position:0%
i'm trying to get at is the easy way to
 

00:16:26.639 --> 00:16:28.470 align:start position:0%
i'm trying to get at is the easy way to
solve<00:16:26.959><c> this</c><00:16:27.120><c> problem</c><00:16:27.360><c> with</c><00:16:27.519><c> a</c><00:16:27.600><c> sliding</c><00:16:28.000><c> window</c>

00:16:28.470 --> 00:16:28.480 align:start position:0%
solve this problem with a sliding window
 

00:16:28.480 --> 00:16:29.590 align:start position:0%
solve this problem with a sliding window
is<00:16:28.639><c> going</c><00:16:28.720><c> to</c><00:16:28.800><c> be</c><00:16:28.959><c> big</c><00:16:29.279><c> o</c>

00:16:29.590 --> 00:16:29.600 align:start position:0%
is going to be big o
 

00:16:29.600 --> 00:16:31.990 align:start position:0%
is going to be big o
of<00:16:29.920><c> 26</c><00:16:30.560><c> times</c><00:16:30.959><c> n</c><00:16:31.120><c> which</c><00:16:31.360><c> is</c><00:16:31.440><c> technically</c>

00:16:31.990 --> 00:16:32.000 align:start position:0%
of 26 times n which is technically
 

00:16:32.000 --> 00:16:33.269 align:start position:0%
of 26 times n which is technically
linear<00:16:32.480><c> but</c><00:16:32.639><c> there</c><00:16:32.880><c> is</c><00:16:33.040><c> a</c>

00:16:33.269 --> 00:16:33.279 align:start position:0%
linear but there is a
 

00:16:33.279 --> 00:16:35.189 align:start position:0%
linear but there is a
clever<00:16:33.680><c> way</c><00:16:33.839><c> to</c><00:16:34.000><c> do</c><00:16:34.079><c> this</c><00:16:34.320><c> in</c><00:16:34.399><c> big</c><00:16:34.639><c> o</c><00:16:34.800><c> of</c><00:16:35.040><c> end</c>

00:16:35.189 --> 00:16:35.199 align:start position:0%
clever way to do this in big o of end
 

00:16:35.199 --> 00:16:37.350 align:start position:0%
clever way to do this in big o of end
time<00:16:35.519><c> that</c><00:16:35.920><c> honestly</c><00:16:36.399><c> i</c><00:16:36.560><c> didn't</c><00:16:36.800><c> figure</c><00:16:37.199><c> out</c>

00:16:37.350 --> 00:16:37.360 align:start position:0%
time that honestly i didn't figure out
 

00:16:37.360 --> 00:16:39.189 align:start position:0%
time that honestly i didn't figure out
on<00:16:37.519><c> my</c><00:16:37.759><c> own</c><00:16:38.000><c> and</c><00:16:38.079><c> i</c><00:16:38.160><c> wouldn't</c><00:16:38.399><c> really</c><00:16:38.639><c> expect</c>

00:16:39.189 --> 00:16:39.199 align:start position:0%
on my own and i wouldn't really expect
 

00:16:39.199 --> 00:16:40.710 align:start position:0%
on my own and i wouldn't really expect
other<00:16:39.360><c> people</c><00:16:39.680><c> to</c><00:16:39.759><c> be</c><00:16:39.920><c> able</c><00:16:40.079><c> to</c><00:16:40.160><c> figure</c><00:16:40.399><c> it</c><00:16:40.560><c> out</c>

00:16:40.710 --> 00:16:40.720 align:start position:0%
other people to be able to figure it out
 

00:16:40.720 --> 00:16:43.269 align:start position:0%
other people to be able to figure it out
on<00:16:40.880><c> their</c><00:16:41.120><c> own</c><00:16:41.600><c> like</c><00:16:41.839><c> in</c><00:16:42.000><c> an</c><00:16:42.160><c> interview</c><00:16:42.720><c> at</c><00:16:42.880><c> all</c>

00:16:43.269 --> 00:16:43.279 align:start position:0%
on their own like in an interview at all
 

00:16:43.279 --> 00:16:45.590 align:start position:0%
on their own like in an interview at all
but<00:16:43.519><c> i</c><00:16:43.600><c> will</c><00:16:44.160><c> show</c><00:16:44.480><c> this</c><00:16:44.959><c> the</c><00:16:45.199><c> standard</c>

00:16:45.590 --> 00:16:45.600 align:start position:0%
but i will show this the standard
 

00:16:45.600 --> 00:16:47.670 align:start position:0%
but i will show this the standard
solution<00:16:46.079><c> and</c><00:16:46.240><c> i'll</c><00:16:46.399><c> also</c><00:16:46.639><c> show</c><00:16:46.880><c> the</c><00:16:47.040><c> code</c><00:16:47.440><c> for</c>

00:16:47.670 --> 00:16:47.680 align:start position:0%
solution and i'll also show the code for
 

00:16:47.680 --> 00:16:49.590 align:start position:0%
solution and i'll also show the code for
this<00:16:48.000><c> more</c><00:16:48.320><c> optimized</c><00:16:48.880><c> solution</c>

00:16:49.590 --> 00:16:49.600 align:start position:0%
this more optimized solution
 

00:16:49.600 --> 00:16:51.670 align:start position:0%
this more optimized solution
okay<00:16:49.920><c> so</c><00:16:50.160><c> now</c><00:16:50.399><c> let's</c><00:16:50.639><c> jump</c><00:16:50.880><c> into</c><00:16:51.120><c> the</c><00:16:51.279><c> code</c><00:16:51.600><c> and</c>

00:16:51.670 --> 00:16:51.680 align:start position:0%
okay so now let's jump into the code and
 

00:16:51.680 --> 00:16:53.910 align:start position:0%
okay so now let's jump into the code and
the<00:16:51.839><c> code</c><00:16:52.079><c> is</c><00:16:52.240><c> actually</c><00:16:52.639><c> a</c><00:16:52.720><c> lot</c><00:16:52.959><c> easier</c><00:16:53.440><c> than</c>

00:16:53.910 --> 00:16:53.920 align:start position:0%
the code is actually a lot easier than
 

00:16:53.920 --> 00:16:56.389 align:start position:0%
the code is actually a lot easier than
the<00:16:54.240><c> visual</c><00:16:54.720><c> example</c><00:16:55.199><c> that</c><00:16:55.360><c> i</c><00:16:55.519><c> gave</c><00:16:56.000><c> a</c><00:16:56.160><c> lot</c>

00:16:56.389 --> 00:16:56.399 align:start position:0%
the visual example that i gave a lot
 

00:16:56.399 --> 00:16:57.910 align:start position:0%
the visual example that i gave a lot
shorter<00:16:56.800><c> for</c><00:16:57.040><c> sure</c><00:16:57.279><c> so</c><00:16:57.440><c> we're</c><00:16:57.600><c> gonna</c><00:16:57.759><c> have</c><00:16:57.839><c> a</c>

00:16:57.910 --> 00:16:57.920 align:start position:0%
shorter for sure so we're gonna have a
 

00:16:57.920 --> 00:16:59.990 align:start position:0%
shorter for sure so we're gonna have a
hash<00:16:58.240><c> map</c><00:16:58.480><c> to</c><00:16:58.639><c> count</c><00:16:58.880><c> the</c><00:16:59.040><c> occurrences</c>

00:16:59.990 --> 00:17:00.000 align:start position:0%
hash map to count the occurrences
 

00:17:00.000 --> 00:17:02.389 align:start position:0%
hash map to count the occurrences
of<00:17:00.480><c> each</c><00:17:00.800><c> character</c><00:17:01.600><c> and</c><00:17:01.839><c> we're</c><00:17:02.079><c> also</c><00:17:02.240><c> gonna</c>

00:17:02.389 --> 00:17:02.399 align:start position:0%
of each character and we're also gonna
 

00:17:02.399 --> 00:17:04.069 align:start position:0%
of each character and we're also gonna
have<00:17:02.560><c> a</c><00:17:02.720><c> result</c><00:17:03.040><c> which</c><00:17:03.279><c> is</c><00:17:03.360><c> going</c><00:17:03.440><c> to</c><00:17:03.680><c> tell</c><00:17:03.920><c> us</c>

00:17:04.069 --> 00:17:04.079 align:start position:0%
have a result which is going to tell us
 

00:17:04.079 --> 00:17:05.350 align:start position:0%
have a result which is going to tell us
the<00:17:04.319><c> longest</c>

00:17:05.350 --> 00:17:05.360 align:start position:0%
the longest
 

00:17:05.360 --> 00:17:07.029 align:start position:0%
the longest
substring<00:17:05.839><c> that</c><00:17:05.919><c> we</c><00:17:06.079><c> can</c><00:17:06.240><c> create</c><00:17:06.559><c> with</c><00:17:06.799><c> k</c>

00:17:07.029 --> 00:17:07.039 align:start position:0%
substring that we can create with k
 

00:17:07.039 --> 00:17:08.949 align:start position:0%
substring that we can create with k
replacements<00:17:08.240><c> and</c><00:17:08.400><c> we're</c><00:17:08.559><c> going</c><00:17:08.640><c> to</c><00:17:08.640><c> have</c><00:17:08.799><c> a</c>

00:17:08.949 --> 00:17:08.959 align:start position:0%
replacements and we're going to have a
 

00:17:08.959 --> 00:17:10.710 align:start position:0%
replacements and we're going to have a
left<00:17:09.280><c> pointer</c><00:17:09.600><c> which</c><00:17:09.760><c> is</c><00:17:09.839><c> going</c><00:17:09.919><c> to</c><00:17:10.000><c> be</c><00:17:10.160><c> at</c><00:17:10.400><c> 0</c>

00:17:10.710 --> 00:17:10.720 align:start position:0%
left pointer which is going to be at 0
 

00:17:10.720 --> 00:17:12.309 align:start position:0%
left pointer which is going to be at 0
and<00:17:10.799><c> then</c><00:17:11.039><c> our</c><00:17:11.280><c> right</c><00:17:11.520><c> pointer</c><00:17:11.919><c> is</c><00:17:12.079><c> going</c><00:17:12.240><c> to</c>

00:17:12.309 --> 00:17:12.319 align:start position:0%
and then our right pointer is going to
 

00:17:12.319 --> 00:17:14.150 align:start position:0%
and then our right pointer is going to
go<00:17:12.559><c> through</c><00:17:12.799><c> every</c><00:17:12.959><c> single</c><00:17:13.280><c> position</c>

00:17:14.150 --> 00:17:14.160 align:start position:0%
go through every single position
 

00:17:14.160 --> 00:17:16.870 align:start position:0%
go through every single position
in<00:17:14.319><c> the</c><00:17:14.559><c> entire</c><00:17:15.120><c> string</c><00:17:15.679><c> s</c><00:17:16.319><c> so</c><00:17:16.559><c> what</c><00:17:16.720><c> we're</c>

00:17:16.870 --> 00:17:16.880 align:start position:0%
in the entire string s so what we're
 

00:17:16.880 --> 00:17:17.350 align:start position:0%
in the entire string s so what we're
going<00:17:16.959><c> to</c><00:17:17.039><c> do</c>

00:17:17.350 --> 00:17:17.360 align:start position:0%
going to do
 

00:17:17.360 --> 00:17:19.829 align:start position:0%
going to do
is<00:17:17.520><c> for</c><00:17:17.760><c> the</c><00:17:18.000><c> character</c><00:17:18.559><c> at</c><00:17:18.799><c> position</c><00:17:19.360><c> r</c><00:17:19.679><c> we're</c>

00:17:19.829 --> 00:17:19.839 align:start position:0%
is for the character at position r we're
 

00:17:19.839 --> 00:17:21.990 align:start position:0%
is for the character at position r we're
going<00:17:20.000><c> to</c><00:17:20.160><c> increment</c><00:17:20.640><c> the</c><00:17:20.880><c> count</c><00:17:21.199><c> of</c><00:17:21.439><c> it</c>

00:17:21.990 --> 00:17:22.000 align:start position:0%
going to increment the count of it
 

00:17:22.000 --> 00:17:24.390 align:start position:0%
going to increment the count of it
we're<00:17:22.160><c> going</c><00:17:22.319><c> to</c><00:17:22.559><c> take</c><00:17:22.959><c> 1</c><00:17:23.360><c> plus</c><00:17:23.839><c> whatever</c><00:17:24.160><c> the</c>

00:17:24.390 --> 00:17:24.400 align:start position:0%
we're going to take 1 plus whatever the
 

00:17:24.400 --> 00:17:25.669 align:start position:0%
we're going to take 1 plus whatever the
count<00:17:24.720><c> currently</c><00:17:25.280><c> was</c>

00:17:25.669 --> 00:17:25.679 align:start position:0%
count currently was
 

00:17:25.679 --> 00:17:28.630 align:start position:0%
count currently was
count<00:17:26.000><c> dot</c><00:17:26.400><c> get</c><00:17:26.880><c> this</c><00:17:27.199><c> character</c><00:17:28.160><c> and</c><00:17:28.400><c> if</c><00:17:28.480><c> the</c>

00:17:28.630 --> 00:17:28.640 align:start position:0%
count dot get this character and if the
 

00:17:28.640 --> 00:17:30.470 align:start position:0%
count dot get this character and if the
character<00:17:29.039><c> doesn't</c><00:17:29.360><c> exist</c><00:17:29.760><c> in</c><00:17:29.919><c> our</c><00:17:30.080><c> hash</c><00:17:30.320><c> map</c>

00:17:30.470 --> 00:17:30.480 align:start position:0%
character doesn't exist in our hash map
 

00:17:30.480 --> 00:17:31.750 align:start position:0%
character doesn't exist in our hash map
we're<00:17:30.640><c> just</c><00:17:30.799><c> going</c><00:17:30.880><c> to</c><00:17:30.960><c> return</c><00:17:31.280><c> a</c><00:17:31.360><c> default</c>

00:17:31.750 --> 00:17:31.760 align:start position:0%
we're just going to return a default
 

00:17:31.760 --> 00:17:33.430 align:start position:0%
we're just going to return a default
value<00:17:32.080><c> of</c><00:17:32.240><c> zero</c><00:17:32.559><c> that's</c><00:17:32.720><c> what</c><00:17:32.880><c> this</c><00:17:33.120><c> function</c>

00:17:33.430 --> 00:17:33.440 align:start position:0%
value of zero that's what this function
 

00:17:33.440 --> 00:17:34.310 align:start position:0%
value of zero that's what this function
is<00:17:33.600><c> doing</c>

00:17:34.310 --> 00:17:34.320 align:start position:0%
is doing
 

00:17:34.320 --> 00:17:36.470 align:start position:0%
is doing
and<00:17:34.640><c> so</c><00:17:35.039><c> before</c><00:17:35.600><c> what</c><00:17:35.840><c> we're</c><00:17:36.160><c> going</c><00:17:36.320><c> to</c>

00:17:36.470 --> 00:17:36.480 align:start position:0%
and so before what we're going to
 

00:17:36.480 --> 00:17:38.310 align:start position:0%
and so before what we're going to
obviously<00:17:36.880><c> do</c><00:17:37.120><c> is</c><00:17:37.280><c> update</c><00:17:37.600><c> our</c><00:17:37.760><c> result</c><00:17:38.080><c> right</c>

00:17:38.310 --> 00:17:38.320 align:start position:0%
obviously do is update our result right
 

00:17:38.320 --> 00:17:39.909 align:start position:0%
obviously do is update our result right
and<00:17:38.400><c> we</c><00:17:38.559><c> want</c><00:17:38.720><c> to</c><00:17:38.880><c> set</c><00:17:39.039><c> the</c><00:17:39.200><c> result</c><00:17:39.520><c> equal</c><00:17:39.760><c> to</c>

00:17:39.909 --> 00:17:39.919 align:start position:0%
and we want to set the result equal to
 

00:17:39.919 --> 00:17:41.590 align:start position:0%
and we want to set the result equal to
the<00:17:40.000><c> max</c><00:17:40.320><c> that</c><00:17:40.559><c> it's</c><00:17:40.799><c> ever</c><00:17:41.200><c> been</c>

00:17:41.590 --> 00:17:41.600 align:start position:0%
the max that it's ever been
 

00:17:41.600 --> 00:17:43.909 align:start position:0%
the max that it's ever been
and<00:17:42.320><c> set</c><00:17:42.559><c> it</c><00:17:42.640><c> basically</c><00:17:43.120><c> equal</c><00:17:43.280><c> to</c><00:17:43.440><c> the</c><00:17:43.600><c> size</c>

00:17:43.909 --> 00:17:43.919 align:start position:0%
and set it basically equal to the size
 

00:17:43.919 --> 00:17:45.510 align:start position:0%
and set it basically equal to the size
of<00:17:44.080><c> the</c><00:17:44.160><c> window</c><00:17:44.480><c> we</c><00:17:44.640><c> can</c><00:17:44.720><c> get</c><00:17:44.880><c> the</c><00:17:45.039><c> size</c><00:17:45.280><c> of</c><00:17:45.360><c> the</c>

00:17:45.510 --> 00:17:45.520 align:start position:0%
of the window we can get the size of the
 

00:17:45.520 --> 00:17:46.230 align:start position:0%
of the window we can get the size of the
window

00:17:46.230 --> 00:17:46.240 align:start position:0%
window
 

00:17:46.240 --> 00:17:47.990 align:start position:0%
window
so<00:17:46.400><c> we're</c><00:17:46.559><c> going</c><00:17:46.559><c> to</c><00:17:46.640><c> take</c><00:17:46.799><c> the</c><00:17:46.960><c> max</c><00:17:47.360><c> of</c><00:17:47.440><c> result</c>

00:17:47.990 --> 00:17:48.000 align:start position:0%
so we're going to take the max of result
 

00:17:48.000 --> 00:17:49.909 align:start position:0%
so we're going to take the max of result
and<00:17:48.720><c> the</c><00:17:48.880><c> size</c><00:17:49.120><c> of</c><00:17:49.200><c> the</c><00:17:49.360><c> window</c><00:17:49.520><c> the</c><00:17:49.679><c> size</c><00:17:49.840><c> of</c>

00:17:49.909 --> 00:17:49.919 align:start position:0%
and the size of the window the size of
 

00:17:49.919 --> 00:17:51.270 align:start position:0%
and the size of the window the size of
the<00:17:50.080><c> window</c><00:17:50.320><c> can</c><00:17:50.480><c> be</c><00:17:50.559><c> gotten</c><00:17:50.960><c> with</c>

00:17:51.270 --> 00:17:51.280 align:start position:0%
the window can be gotten with
 

00:17:51.280 --> 00:17:54.549 align:start position:0%
the window can be gotten with
right<00:17:51.679><c> minus</c><00:17:52.080><c> left</c><00:17:52.480><c> plus</c><00:17:53.039><c> one</c><00:17:54.160><c> and</c>

00:17:54.549 --> 00:17:54.559 align:start position:0%
right minus left plus one and
 

00:17:54.559 --> 00:17:56.470 align:start position:0%
right minus left plus one and
but<00:17:54.799><c> before</c><00:17:55.200><c> we</c><00:17:55.360><c> do</c><00:17:55.520><c> this</c><00:17:55.760><c> before</c><00:17:56.080><c> we</c><00:17:56.160><c> update</c>

00:17:56.470 --> 00:17:56.480 align:start position:0%
but before we do this before we update
 

00:17:56.480 --> 00:17:57.909 align:start position:0%
but before we do this before we update
the<00:17:56.640><c> result</c><00:17:56.880><c> we</c><00:17:57.039><c> want</c><00:17:57.200><c> to</c><00:17:57.280><c> make</c><00:17:57.360><c> sure</c><00:17:57.520><c> that</c><00:17:57.679><c> the</c>

00:17:57.909 --> 00:17:57.919 align:start position:0%
the result we want to make sure that the
 

00:17:57.919 --> 00:17:58.950 align:start position:0%
the result we want to make sure that the
current<00:17:58.240><c> window</c><00:17:58.640><c> is</c>

00:17:58.950 --> 00:17:58.960 align:start position:0%
current window is
 

00:17:58.960 --> 00:18:01.029 align:start position:0%
current window is
valid<00:17:59.360><c> so</c><00:17:59.520><c> what</c><00:17:59.679><c> i'm</c><00:17:59.840><c> going</c><00:18:00.000><c> to</c><00:18:00.080><c> do</c><00:18:00.799><c> is</c>

00:18:01.029 --> 00:18:01.039 align:start position:0%
valid so what i'm going to do is
 

00:18:01.039 --> 00:18:02.950 align:start position:0%
valid so what i'm going to do is
basically<00:18:01.520><c> say</c><00:18:01.919><c> while</c><00:18:02.320><c> and</c><00:18:02.480><c> i</c><00:18:02.640><c> don't</c><00:18:02.799><c> think</c>

00:18:02.950 --> 00:18:02.960 align:start position:0%
basically say while and i don't think
 

00:18:02.960 --> 00:18:04.710 align:start position:0%
basically say while and i don't think
you'd<00:18:03.200><c> actually</c><00:18:03.520><c> need</c><00:18:03.760><c> a</c><00:18:04.000><c> while</c><00:18:04.320><c> here</c><00:18:04.559><c> you</c>

00:18:04.710 --> 00:18:04.720 align:start position:0%
you'd actually need a while here you
 

00:18:04.720 --> 00:18:06.470 align:start position:0%
you'd actually need a while here you
could<00:18:04.880><c> just</c><00:18:05.120><c> do</c><00:18:05.360><c> if</c><00:18:05.679><c> but</c><00:18:05.919><c> i'm</c><00:18:06.080><c> just</c><00:18:06.240><c> going</c><00:18:06.320><c> to</c>

00:18:06.470 --> 00:18:06.480 align:start position:0%
could just do if but i'm just going to
 

00:18:06.480 --> 00:18:07.510 align:start position:0%
could just do if but i'm just going to
do<00:18:06.720><c> while</c><00:18:07.120><c> just</c>

00:18:07.510 --> 00:18:07.520 align:start position:0%
do while just
 

00:18:07.520 --> 00:18:10.789 align:start position:0%
do while just
because<00:18:08.400><c> so</c><00:18:08.720><c> while</c><00:18:09.039><c> the</c><00:18:09.200><c> window</c><00:18:09.679><c> is</c><00:18:09.919><c> not</c><00:18:10.320><c> valid</c>

00:18:10.789 --> 00:18:10.799 align:start position:0%
because so while the window is not valid
 

00:18:10.799 --> 00:18:12.630 align:start position:0%
because so while the window is not valid
and<00:18:10.960><c> we</c><00:18:11.200><c> would</c><00:18:11.360><c> know</c><00:18:11.679><c> that</c><00:18:11.919><c> by</c><00:18:12.160><c> taking</c><00:18:12.480><c> the</c>

00:18:12.630 --> 00:18:12.640 align:start position:0%
and we would know that by taking the
 

00:18:12.640 --> 00:18:14.390 align:start position:0%
and we would know that by taking the
length<00:18:12.960><c> of</c><00:18:13.039><c> the</c><00:18:13.120><c> window</c><00:18:13.440><c> which</c><00:18:13.760><c> we</c><00:18:13.919><c> have</c><00:18:14.160><c> down</c>

00:18:14.390 --> 00:18:14.400 align:start position:0%
length of the window which we have down
 

00:18:14.400 --> 00:18:15.830 align:start position:0%
length of the window which we have down
here<00:18:14.640><c> so</c><00:18:14.799><c> i'm</c><00:18:14.880><c> just</c><00:18:14.960><c> going</c><00:18:15.039><c> to</c><00:18:15.120><c> copy</c><00:18:15.440><c> and</c><00:18:15.600><c> paste</c>

00:18:15.830 --> 00:18:15.840 align:start position:0%
here so i'm just going to copy and paste
 

00:18:15.840 --> 00:18:17.510 align:start position:0%
here so i'm just going to copy and paste
that<00:18:16.080><c> the</c><00:18:16.240><c> length</c><00:18:16.480><c> of</c><00:18:16.559><c> the</c><00:18:16.720><c> window</c>

00:18:17.510 --> 00:18:17.520 align:start position:0%
that the length of the window
 

00:18:17.520 --> 00:18:19.990 align:start position:0%
that the length of the window
subtracted<00:18:18.240><c> by</c><00:18:18.480><c> the</c><00:18:18.720><c> most</c><00:18:19.280><c> the</c><00:18:19.520><c> count</c><00:18:19.840><c> of</c><00:18:19.919><c> the</c>

00:18:19.990 --> 00:18:20.000 align:start position:0%
subtracted by the most the count of the
 

00:18:20.000 --> 00:18:21.590 align:start position:0%
subtracted by the most the count of the
most<00:18:20.320><c> frequent</c><00:18:20.720><c> character</c><00:18:21.039><c> which</c><00:18:21.280><c> can</c><00:18:21.440><c> be</c>

00:18:21.590 --> 00:18:21.600 align:start position:0%
most frequent character which can be
 

00:18:21.600 --> 00:18:22.870 align:start position:0%
most frequent character which can be
gotten<00:18:21.919><c> with</c><00:18:22.240><c> max</c>

00:18:22.870 --> 00:18:22.880 align:start position:0%
gotten with max
 

00:18:22.880 --> 00:18:26.150 align:start position:0%
gotten with max
of<00:18:23.600><c> count</c><00:18:24.320><c> dot</c><00:18:25.039><c> values</c>

00:18:26.150 --> 00:18:26.160 align:start position:0%
of count dot values
 

00:18:26.160 --> 00:18:27.510 align:start position:0%
of count dot values
right<00:18:26.400><c> we're</c><00:18:26.559><c> basically</c><00:18:26.960><c> going</c><00:18:27.200><c> through</c><00:18:27.360><c> the</c>

00:18:27.510 --> 00:18:27.520 align:start position:0%
right we're basically going through the
 

00:18:27.520 --> 00:18:29.750 align:start position:0%
right we're basically going through the
hash<00:18:27.760><c> map</c><00:18:28.000><c> which</c><00:18:28.160><c> could</c><00:18:28.320><c> be</c><00:18:28.480><c> size</c><00:18:28.880><c> 26</c><00:18:29.520><c> and</c><00:18:29.600><c> just</c>

00:18:29.750 --> 00:18:29.760 align:start position:0%
hash map which could be size 26 and just
 

00:18:29.760 --> 00:18:31.669 align:start position:0%
hash map which could be size 26 and just
getting<00:18:30.000><c> the</c><00:18:30.160><c> max</c><00:18:30.480><c> value</c><00:18:30.960><c> from</c><00:18:31.280><c> it</c>

00:18:31.669 --> 00:18:31.679 align:start position:0%
getting the max value from it
 

00:18:31.679 --> 00:18:33.430 align:start position:0%
getting the max value from it
so<00:18:31.919><c> this</c><00:18:32.160><c> is</c><00:18:32.240><c> the</c><00:18:32.400><c> number</c><00:18:32.640><c> of</c><00:18:32.799><c> replacements</c>

00:18:33.430 --> 00:18:33.440 align:start position:0%
so this is the number of replacements
 

00:18:33.440 --> 00:18:35.190 align:start position:0%
so this is the number of replacements
that<00:18:33.600><c> we</c><00:18:33.760><c> have</c><00:18:33.919><c> to</c><00:18:34.080><c> do</c><00:18:34.400><c> and</c><00:18:34.559><c> if</c><00:18:34.640><c> the</c><00:18:34.799><c> number</c><00:18:35.039><c> of</c>

00:18:35.190 --> 00:18:35.200 align:start position:0%
that we have to do and if the number of
 

00:18:35.200 --> 00:18:36.150 align:start position:0%
that we have to do and if the number of
replacements<00:18:35.840><c> was</c>

00:18:36.150 --> 00:18:36.160 align:start position:0%
replacements was
 

00:18:36.160 --> 00:18:37.909 align:start position:0%
replacements was
greater<00:18:36.559><c> than</c><00:18:36.720><c> the</c><00:18:36.880><c> number</c><00:18:37.120><c> of</c><00:18:37.280><c> replacements</c>

00:18:37.909 --> 00:18:37.919 align:start position:0%
greater than the number of replacements
 

00:18:37.919 --> 00:18:40.310 align:start position:0%
greater than the number of replacements
that's<00:18:38.240><c> allowed</c><00:18:38.799><c> which</c><00:18:39.039><c> is</c><00:18:39.200><c> equal</c><00:18:39.440><c> to</c><00:18:39.679><c> k</c>

00:18:40.310 --> 00:18:40.320 align:start position:0%
that's allowed which is equal to k
 

00:18:40.320 --> 00:18:42.070 align:start position:0%
that's allowed which is equal to k
that's<00:18:40.640><c> when</c><00:18:40.799><c> we</c><00:18:40.960><c> would</c><00:18:41.120><c> want</c><00:18:41.280><c> to</c><00:18:41.440><c> shift</c><00:18:41.840><c> our</c>

00:18:42.070 --> 00:18:42.080 align:start position:0%
that's when we would want to shift our
 

00:18:42.080 --> 00:18:43.750 align:start position:0%
that's when we would want to shift our
left<00:18:42.320><c> pointer</c><00:18:42.640><c> so</c><00:18:42.799><c> we'd</c><00:18:43.039><c> want</c><00:18:43.120><c> to</c><00:18:43.280><c> increment</c>

00:18:43.750 --> 00:18:43.760 align:start position:0%
left pointer so we'd want to increment
 

00:18:43.760 --> 00:18:44.870 align:start position:0%
left pointer so we'd want to increment
our<00:18:43.919><c> left</c><00:18:44.240><c> pointer</c>

00:18:44.870 --> 00:18:44.880 align:start position:0%
our left pointer
 

00:18:44.880 --> 00:18:46.710 align:start position:0%
our left pointer
but<00:18:45.039><c> before</c><00:18:45.440><c> we</c><00:18:45.679><c> increment</c><00:18:46.160><c> the</c><00:18:46.240><c> left</c><00:18:46.400><c> pointer</c>

00:18:46.710 --> 00:18:46.720 align:start position:0%
but before we increment the left pointer
 

00:18:46.720 --> 00:18:48.310 align:start position:0%
but before we increment the left pointer
we'd<00:18:46.880><c> want</c><00:18:47.039><c> to</c><00:18:47.120><c> take</c><00:18:47.280><c> the</c><00:18:47.520><c> count</c><00:18:47.919><c> of</c><00:18:48.080><c> the</c>

00:18:48.310 --> 00:18:48.320 align:start position:0%
we'd want to take the count of the
 

00:18:48.320 --> 00:18:49.190 align:start position:0%
we'd want to take the count of the
character

00:18:49.190 --> 00:18:49.200 align:start position:0%
character
 

00:18:49.200 --> 00:18:52.150 align:start position:0%
character
at<00:18:49.360><c> the</c><00:18:49.520><c> left</c><00:18:49.760><c> position</c><00:18:50.720><c> and</c><00:18:50.960><c> then</c><00:18:51.600><c> decrement</c>

00:18:52.150 --> 00:18:52.160 align:start position:0%
at the left position and then decrement
 

00:18:52.160 --> 00:18:52.390 align:start position:0%
at the left position and then decrement
it

00:18:52.390 --> 00:18:52.400 align:start position:0%
it
 

00:18:52.400 --> 00:18:55.110 align:start position:0%
it
by<00:18:52.720><c> one</c><00:18:53.280><c> and</c><00:18:53.520><c> that</c><00:18:53.840><c> is</c><00:18:54.000><c> the</c><00:18:54.240><c> entire</c><00:18:54.559><c> algorithm</c>

00:18:55.110 --> 00:18:55.120 align:start position:0%
by one and that is the entire algorithm
 

00:18:55.120 --> 00:18:56.789 align:start position:0%
by one and that is the entire algorithm
after<00:18:55.440><c> all</c><00:18:55.600><c> of</c><00:18:55.679><c> that</c><00:18:55.919><c> is</c><00:18:56.000><c> done</c><00:18:56.240><c> after</c><00:18:56.559><c> we've</c>

00:18:56.789 --> 00:18:56.799 align:start position:0%
after all of that is done after we've
 

00:18:56.799 --> 00:18:58.230 align:start position:0%
after all of that is done after we've
gone<00:18:56.960><c> through</c><00:18:57.120><c> the</c><00:18:57.280><c> entire</c><00:18:57.679><c> string</c><00:18:57.919><c> then</c><00:18:58.080><c> we</c>

00:18:58.230 --> 00:18:58.240 align:start position:0%
gone through the entire string then we
 

00:18:58.240 --> 00:19:00.310 align:start position:0%
gone through the entire string then we
can<00:18:58.320><c> just</c><00:18:58.480><c> simply</c><00:18:58.799><c> return</c><00:18:59.200><c> our</c><00:18:59.360><c> result</c>

00:19:00.310 --> 00:19:00.320 align:start position:0%
can just simply return our result
 

00:19:00.320 --> 00:19:01.830 align:start position:0%
can just simply return our result
and<00:19:00.559><c> as</c><00:19:00.720><c> you</c><00:19:00.799><c> can</c><00:19:00.960><c> see</c><00:19:01.120><c> this</c><00:19:01.360><c> is</c><00:19:01.600><c> pretty</c>

00:19:01.830 --> 00:19:01.840 align:start position:0%
and as you can see this is pretty
 

00:19:01.840 --> 00:19:03.909 align:start position:0%
and as you can see this is pretty
efficient<00:19:02.320><c> it's</c><00:19:02.559><c> linear</c><00:19:03.039><c> time</c><00:19:03.280><c> it's</c><00:19:03.440><c> about</c>

00:19:03.909 --> 00:19:03.919 align:start position:0%
efficient it's linear time it's about
 

00:19:03.919 --> 00:19:05.590 align:start position:0%
efficient it's linear time it's about
as<00:19:04.080><c> efficient</c><00:19:04.559><c> as</c><00:19:04.720><c> you</c><00:19:04.880><c> would</c><00:19:05.039><c> need</c><00:19:05.280><c> i</c><00:19:05.440><c> think</c>

00:19:05.590 --> 00:19:05.600 align:start position:0%
as efficient as you would need i think
 

00:19:05.600 --> 00:19:07.110 align:start position:0%
as efficient as you would need i think
but<00:19:05.840><c> i'm</c><00:19:06.000><c> going</c><00:19:06.080><c> to</c><00:19:06.160><c> make</c><00:19:06.320><c> that</c><00:19:06.640><c> slight</c>

00:19:07.110 --> 00:19:07.120 align:start position:0%
but i'm going to make that slight
 

00:19:07.120 --> 00:19:08.789 align:start position:0%
but i'm going to make that slight
optimization<00:19:07.919><c> that</c><00:19:08.080><c> i</c><00:19:08.240><c> showed</c><00:19:08.400><c> you</c><00:19:08.559><c> i'm</c><00:19:08.640><c> going</c>

00:19:08.789 --> 00:19:08.799 align:start position:0%
optimization that i showed you i'm going
 

00:19:08.799 --> 00:19:10.710 align:start position:0%
optimization that i showed you i'm going
to<00:19:08.880><c> maintain</c><00:19:09.360><c> the</c><00:19:09.520><c> max</c><00:19:09.840><c> frequency</c><00:19:10.400><c> in</c><00:19:10.559><c> a</c>

00:19:10.710 --> 00:19:10.720 align:start position:0%
to maintain the max frequency in a
 

00:19:10.720 --> 00:19:11.669 align:start position:0%
to maintain the max frequency in a
single<00:19:11.039><c> variable</c>

00:19:11.669 --> 00:19:11.679 align:start position:0%
single variable
 

00:19:11.679 --> 00:19:13.029 align:start position:0%
single variable
so<00:19:11.840><c> that</c><00:19:12.000><c> we</c><00:19:12.160><c> won't</c><00:19:12.400><c> have</c><00:19:12.480><c> to</c><00:19:12.640><c> do</c><00:19:12.799><c> this</c>

00:19:13.029 --> 00:19:13.039 align:start position:0%
so that we won't have to do this
 

00:19:13.039 --> 00:19:14.710 align:start position:0%
so that we won't have to do this
operation<00:19:13.440><c> where</c><00:19:13.679><c> we're</c><00:19:13.840><c> getting</c><00:19:14.080><c> the</c><00:19:14.240><c> max</c><00:19:14.640><c> of</c>

00:19:14.710 --> 00:19:14.720 align:start position:0%
operation where we're getting the max of
 

00:19:14.720 --> 00:19:16.150 align:start position:0%
operation where we're getting the max of
the<00:19:14.960><c> entire</c>

00:19:16.150 --> 00:19:16.160 align:start position:0%
the entire
 

00:19:16.160 --> 00:19:19.669 align:start position:0%
the entire
hash<00:19:16.480><c> map</c><00:19:17.200><c> instead</c><00:19:18.000><c> up</c><00:19:18.160><c> here</c><00:19:18.640><c> before</c><00:19:19.039><c> we</c>

00:19:19.669 --> 00:19:19.679 align:start position:0%
hash map instead up here before we
 

00:19:19.679 --> 00:19:21.270 align:start position:0%
hash map instead up here before we
execute<00:19:20.080><c> that</c><00:19:20.240><c> loop</c><00:19:20.559><c> i'm</c><00:19:20.640><c> going</c><00:19:20.720><c> to</c><00:19:20.799><c> say</c><00:19:21.039><c> max</c>

00:19:21.270 --> 00:19:21.280 align:start position:0%
execute that loop i'm going to say max
 

00:19:21.280 --> 00:19:23.190 align:start position:0%
execute that loop i'm going to say max
frequency<00:19:21.760><c> is</c><00:19:21.840><c> going</c><00:19:22.080><c> to</c><00:19:22.160><c> be</c><00:19:22.400><c> equal</c>

00:19:23.190 --> 00:19:23.200 align:start position:0%
frequency is going to be equal
 

00:19:23.200 --> 00:19:26.789 align:start position:0%
frequency is going to be equal
to<00:19:24.480><c> the</c><00:19:24.640><c> max</c><00:19:25.039><c> of</c><00:19:25.280><c> what</c><00:19:25.520><c> it</c><00:19:25.679><c> currently</c><00:19:26.160><c> is</c><00:19:26.400><c> max</c>

00:19:26.789 --> 00:19:26.799 align:start position:0%
to the max of what it currently is max
 

00:19:26.799 --> 00:19:27.669 align:start position:0%
to the max of what it currently is max
frequency<00:19:27.360><c> or</c>

00:19:27.669 --> 00:19:27.679 align:start position:0%
frequency or
 

00:19:27.679 --> 00:19:29.669 align:start position:0%
frequency or
it's<00:19:27.919><c> equal</c><00:19:28.240><c> to</c><00:19:28.720><c> the</c><00:19:28.960><c> frequency</c><00:19:29.440><c> of</c><00:19:29.520><c> the</c>

00:19:29.669 --> 00:19:29.679 align:start position:0%
it's equal to the frequency of the
 

00:19:29.679 --> 00:19:31.830 align:start position:0%
it's equal to the frequency of the
character<00:19:30.080><c> that</c><00:19:30.160><c> we</c><00:19:30.320><c> just</c><00:19:30.720><c> added</c><00:19:31.120><c> a</c><00:19:31.280><c> value</c><00:19:31.679><c> to</c>

00:19:31.830 --> 00:19:31.840 align:start position:0%
character that we just added a value to
 

00:19:31.840 --> 00:19:33.909 align:start position:0%
character that we just added a value to
maybe<00:19:32.240><c> that</c><00:19:32.400><c> character</c><00:19:32.880><c> became</c><00:19:33.440><c> the</c><00:19:33.600><c> most</c>

00:19:33.909 --> 00:19:33.919 align:start position:0%
maybe that character became the most
 

00:19:33.919 --> 00:19:34.950 align:start position:0%
maybe that character became the most
frequent<00:19:34.320><c> character</c>

00:19:34.950 --> 00:19:34.960 align:start position:0%
frequent character
 

00:19:34.960 --> 00:19:36.470 align:start position:0%
frequent character
so<00:19:35.280><c> we</c><00:19:35.440><c> would</c><00:19:35.600><c> have</c><00:19:35.679><c> to</c><00:19:35.840><c> update</c><00:19:36.160><c> our</c><00:19:36.240><c> max</c>

00:19:36.470 --> 00:19:36.480 align:start position:0%
so we would have to update our max
 

00:19:36.480 --> 00:19:37.990 align:start position:0%
so we would have to update our max
frequency<00:19:36.960><c> and</c><00:19:37.039><c> we</c><00:19:37.200><c> can</c><00:19:37.280><c> do</c><00:19:37.440><c> that</c>

00:19:37.990 --> 00:19:38.000 align:start position:0%
frequency and we can do that
 

00:19:38.000 --> 00:19:40.789 align:start position:0%
frequency and we can do that
just<00:19:38.160><c> like</c><00:19:38.400><c> this</c><00:19:39.280><c> and</c><00:19:39.520><c> this</c><00:19:39.840><c> is</c><00:19:40.080><c> a</c><00:19:40.240><c> constant</c>

00:19:40.789 --> 00:19:40.799 align:start position:0%
just like this and this is a constant
 

00:19:40.799 --> 00:19:42.710 align:start position:0%
just like this and this is a constant
time<00:19:41.039><c> operation</c><00:19:41.520><c> we're</c><00:19:41.679><c> not</c><00:19:41.919><c> scanning</c><00:19:42.400><c> any</c>

00:19:42.710 --> 00:19:42.720 align:start position:0%
time operation we're not scanning any
 

00:19:42.720 --> 00:19:43.990 align:start position:0%
time operation we're not scanning any
list<00:19:43.120><c> or</c><00:19:43.360><c> anything</c>

00:19:43.990 --> 00:19:44.000 align:start position:0%
list or anything
 

00:19:44.000 --> 00:19:45.909 align:start position:0%
list or anything
and<00:19:44.080><c> then</c><00:19:44.320><c> once</c><00:19:44.559><c> we</c><00:19:44.720><c> have</c><00:19:44.880><c> this</c><00:19:45.120><c> max</c><00:19:45.440><c> frequency</c>

00:19:45.909 --> 00:19:45.919 align:start position:0%
and then once we have this max frequency
 

00:19:45.919 --> 00:19:47.430 align:start position:0%
and then once we have this max frequency
we<00:19:46.080><c> can</c><00:19:46.240><c> use</c><00:19:46.559><c> it</c><00:19:46.880><c> in</c>

00:19:47.430 --> 00:19:47.440 align:start position:0%
we can use it in
 

00:19:47.440 --> 00:19:50.150 align:start position:0%
we can use it in
this<00:19:48.320><c> loop</c><00:19:48.880><c> execution</c><00:19:49.520><c> right</c><00:19:49.679><c> so</c><00:19:49.840><c> we</c><00:19:50.000><c> can</c>

00:19:50.150 --> 00:19:50.160 align:start position:0%
this loop execution right so we can
 

00:19:50.160 --> 00:19:51.110 align:start position:0%
this loop execution right so we can
replace<00:19:50.559><c> this</c>

00:19:51.110 --> 00:19:51.120 align:start position:0%
replace this
 

00:19:51.120 --> 00:19:53.990 align:start position:0%
replace this
and<00:19:51.280><c> just</c><00:19:51.520><c> use</c><00:19:51.919><c> max</c><00:19:52.400><c> f</c><00:19:53.039><c> for</c><00:19:53.280><c> that</c><00:19:53.760><c> and</c><00:19:53.840><c> the</c>

00:19:53.990 --> 00:19:54.000 align:start position:0%
and just use max f for that and the
 

00:19:54.000 --> 00:19:54.710 align:start position:0%
and just use max f for that and the
thing<00:19:54.240><c> is</c>

00:19:54.710 --> 00:19:54.720 align:start position:0%
thing is
 

00:19:54.720 --> 00:19:56.950 align:start position:0%
thing is
notice<00:19:55.120><c> how</c><00:19:55.520><c> even</c><00:19:55.760><c> when</c><00:19:55.919><c> we're</c><00:19:56.160><c> shifting</c><00:19:56.640><c> left</c>

00:19:56.950 --> 00:19:56.960 align:start position:0%
notice how even when we're shifting left
 

00:19:56.960 --> 00:19:58.230 align:start position:0%
notice how even when we're shifting left
we're<00:19:57.200><c> incrementing</c><00:19:57.679><c> the</c><00:19:57.760><c> left</c><00:19:58.000><c> pointer</c>

00:19:58.230 --> 00:19:58.240 align:start position:0%
we're incrementing the left pointer
 

00:19:58.240 --> 00:20:00.070 align:start position:0%
we're incrementing the left pointer
we're<00:19:58.480><c> potentially</c><00:19:58.960><c> removing</c><00:19:59.600><c> characters</c>

00:20:00.070 --> 00:20:00.080 align:start position:0%
we're potentially removing characters
 

00:20:00.080 --> 00:20:01.669 align:start position:0%
we're potentially removing characters
from<00:20:00.320><c> our</c><00:20:00.480><c> window</c><00:20:00.799><c> we're</c><00:20:01.039><c> still</c><00:20:01.360><c> not</c>

00:20:01.669 --> 00:20:01.679 align:start position:0%
from our window we're still not
 

00:20:01.679 --> 00:20:03.990 align:start position:0%
from our window we're still not
decrementing<00:20:02.400><c> max</c><00:20:02.799><c> f</c><00:20:03.039><c> because</c><00:20:03.280><c> we</c><00:20:03.520><c> actually</c>

00:20:03.990 --> 00:20:04.000 align:start position:0%
decrementing max f because we actually
 

00:20:04.000 --> 00:20:05.190 align:start position:0%
decrementing max f because we actually
don't<00:20:04.400><c> need</c><00:20:04.640><c> to</c>

00:20:05.190 --> 00:20:05.200 align:start position:0%
don't need to
 

00:20:05.200 --> 00:20:07.430 align:start position:0%
don't need to
it<00:20:05.360><c> won't</c><00:20:05.679><c> end</c><00:20:05.840><c> up</c><00:20:06.000><c> affecting</c><00:20:06.480><c> the</c><00:20:06.640><c> result</c><00:20:07.280><c> if</c>

00:20:07.430 --> 00:20:07.440 align:start position:0%
it won't end up affecting the result if
 

00:20:07.440 --> 00:20:09.830 align:start position:0%
it won't end up affecting the result if
we<00:20:07.679><c> for</c><00:20:07.919><c> if</c><00:20:08.080><c> we</c><00:20:08.240><c> just</c><00:20:08.400><c> don't</c><00:20:08.720><c> decrement</c><00:20:09.280><c> it</c>

00:20:09.830 --> 00:20:09.840 align:start position:0%
we for if we just don't decrement it
 

00:20:09.840 --> 00:20:12.470 align:start position:0%
we for if we just don't decrement it
and<00:20:10.240><c> that</c><00:20:10.559><c> very</c><00:20:10.960><c> slight</c><00:20:11.360><c> optimization</c><00:20:12.240><c> which</c>

00:20:12.470 --> 00:20:12.480 align:start position:0%
and that very slight optimization which
 

00:20:12.480 --> 00:20:13.430 align:start position:0%
and that very slight optimization which
is<00:20:12.640><c> really</c><00:20:12.960><c> simple</c>

00:20:13.430 --> 00:20:13.440 align:start position:0%
is really simple
 

00:20:13.440 --> 00:20:15.590 align:start position:0%
is really simple
in<00:20:13.520><c> terms</c><00:20:13.840><c> of</c><00:20:14.080><c> code</c><00:20:14.559><c> but</c><00:20:14.720><c> it's</c><00:20:14.880><c> kind</c><00:20:15.039><c> of</c><00:20:15.280><c> hard</c>

00:20:15.590 --> 00:20:15.600 align:start position:0%
in terms of code but it's kind of hard
 

00:20:15.600 --> 00:20:17.990 align:start position:0%
in terms of code but it's kind of hard
to<00:20:15.840><c> see</c><00:20:16.240><c> why</c><00:20:16.480><c> we're</c><00:20:16.720><c> allowed</c><00:20:17.039><c> to</c><00:20:17.200><c> do</c><00:20:17.440><c> that</c>

00:20:17.990 --> 00:20:18.000 align:start position:0%
to see why we're allowed to do that
 

00:20:18.000 --> 00:20:20.149 align:start position:0%
to see why we're allowed to do that
watch<00:20:18.240><c> how</c><00:20:18.559><c> much</c><00:20:18.799><c> more</c><00:20:19.039><c> efficient</c><00:20:19.600><c> it</c><00:20:19.760><c> makes</c>

00:20:20.149 --> 00:20:20.159 align:start position:0%
watch how much more efficient it makes
 

00:20:20.159 --> 00:20:21.270 align:start position:0%
watch how much more efficient it makes
our<00:20:20.400><c> algorithm</c>

00:20:21.270 --> 00:20:21.280 align:start position:0%
our algorithm
 

00:20:21.280 --> 00:20:23.110 align:start position:0%
our algorithm
so<00:20:21.440><c> as</c><00:20:21.600><c> you</c><00:20:21.679><c> can</c><00:20:21.840><c> see</c><00:20:22.080><c> look</c><00:20:22.400><c> it</c><00:20:22.640><c> definitely</c>

00:20:23.110 --> 00:20:23.120 align:start position:0%
so as you can see look it definitely
 

00:20:23.120 --> 00:20:24.549 align:start position:0%
so as you can see look it definitely
improved<00:20:23.520><c> it</c><00:20:23.679><c> i</c><00:20:23.760><c> think</c><00:20:24.080><c> it</c><00:20:24.159><c> was</c>

00:20:24.549 --> 00:20:24.559 align:start position:0%
improved it i think it was
 

00:20:24.559 --> 00:20:27.029 align:start position:0%
improved it i think it was
50<00:20:24.960><c> milliseconds</c><00:20:25.760><c> different</c><00:20:26.159><c> so</c><00:20:26.320><c> this</c><00:20:26.559><c> is</c>

00:20:27.029 --> 00:20:27.039 align:start position:0%
50 milliseconds different so this is
 

00:20:27.039 --> 00:20:28.470 align:start position:0%
50 milliseconds different so this is
significantly<00:20:27.760><c> faster</c>

00:20:28.470 --> 00:20:28.480 align:start position:0%
significantly faster
 

00:20:28.480 --> 00:20:30.789 align:start position:0%
significantly faster
it's<00:20:28.960><c> hard</c><00:20:29.200><c> to</c><00:20:29.360><c> see</c><00:20:30.000><c> why</c><00:20:30.320><c> though</c><00:20:30.559><c> i</c><00:20:30.640><c> would</c>

00:20:30.789 --> 00:20:30.799 align:start position:0%
it's hard to see why though i would
 

00:20:30.799 --> 00:20:31.669 align:start position:0%
it's hard to see why though i would
definitely

00:20:31.669 --> 00:20:31.679 align:start position:0%
definitely
 

00:20:31.679 --> 00:20:33.590 align:start position:0%
definitely
not<00:20:31.919><c> expect</c><00:20:32.559><c> most</c><00:20:32.880><c> people</c><00:20:33.120><c> to</c><00:20:33.200><c> be</c><00:20:33.360><c> able</c><00:20:33.520><c> to</c>

00:20:33.590 --> 00:20:33.600 align:start position:0%
not expect most people to be able to
 

00:20:33.600 --> 00:20:34.710 align:start position:0%
not expect most people to be able to
figure<00:20:34.000><c> that</c><00:20:34.240><c> out</c>

00:20:34.710 --> 00:20:34.720 align:start position:0%
figure that out
 

00:20:34.720 --> 00:20:36.630 align:start position:0%
figure that out
so<00:20:34.880><c> i</c><00:20:34.960><c> hope</c><00:20:35.120><c> that</c><00:20:35.280><c> this</c><00:20:35.440><c> was</c><00:20:35.679><c> helpful</c><00:20:36.240><c> if</c><00:20:36.400><c> it</c>

00:20:36.630 --> 00:20:36.640 align:start position:0%
so i hope that this was helpful if it
 

00:20:36.640 --> 00:20:38.390 align:start position:0%
so i hope that this was helpful if it
was<00:20:37.039><c> please</c><00:20:37.360><c> like</c><00:20:37.600><c> and</c><00:20:37.760><c> subscribe</c><00:20:38.240><c> it</c>

00:20:38.390 --> 00:20:38.400 align:start position:0%
was please like and subscribe it
 

00:20:38.400 --> 00:20:39.350 align:start position:0%
was please like and subscribe it
supports<00:20:38.799><c> the</c><00:20:38.960><c> channel</c>

00:20:39.350 --> 00:20:39.360 align:start position:0%
supports the channel
 

00:20:39.360 --> 00:20:41.510 align:start position:0%
supports the channel
a<00:20:39.600><c> lot</c><00:20:39.919><c> and</c><00:20:40.080><c> i'll</c><00:20:40.320><c> hopefully</c><00:20:40.960><c> see</c><00:20:41.120><c> you</c><00:20:41.280><c> pretty</c>

00:20:41.510 --> 00:20:41.520 align:start position:0%
a lot and i'll hopefully see you pretty
 

00:20:41.520 --> 00:20:45.440 align:start position:0%
a lot and i'll hopefully see you pretty
soon<00:20:42.000><c> thanks</c><00:20:42.240><c> for</c><00:20:42.440><c> watching</c>

