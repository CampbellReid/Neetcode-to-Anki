WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.670 align:start position:0%
 
hey<00:00:00.160><c> everyone</c><00:00:00.640><c> welcome</c><00:00:01.040><c> back</c><00:00:01.280><c> and</c><00:00:01.439><c> let's</c>

00:00:01.670 --> 00:00:01.680 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.680 --> 00:00:03.590 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.920><c> some</c><00:00:02.080><c> more</c><00:00:02.320><c> neat</c><00:00:02.560><c> code</c><00:00:02.879><c> today</c><00:00:03.120><c> so</c><00:00:03.280><c> today</c>

00:00:03.590 --> 00:00:03.600 align:start position:0%
write some more neat code today so today
 

00:00:03.600 --> 00:00:04.870 align:start position:0%
write some more neat code today so today
let's<00:00:03.840><c> solve</c><00:00:04.160><c> the</c><00:00:04.319><c> problem</c>

00:00:04.870 --> 00:00:04.880 align:start position:0%
let's solve the problem
 

00:00:04.880 --> 00:00:07.349 align:start position:0%
let's solve the problem
word<00:00:05.200><c> break</c><00:00:05.839><c> so</c><00:00:06.000><c> we're</c><00:00:06.240><c> given</c><00:00:06.560><c> an</c><00:00:06.879><c> input</c>

00:00:07.349 --> 00:00:07.359 align:start position:0%
word break so we're given an input
 

00:00:07.359 --> 00:00:07.909 align:start position:0%
word break so we're given an input
string

00:00:07.909 --> 00:00:07.919 align:start position:0%
string
 

00:00:07.919 --> 00:00:10.310 align:start position:0%
string
and<00:00:08.080><c> a</c><00:00:08.400><c> dictionary</c><00:00:09.040><c> of</c><00:00:09.200><c> strings</c><00:00:09.599><c> called</c><00:00:09.920><c> word</c>

00:00:10.310 --> 00:00:10.320 align:start position:0%
and a dictionary of strings called word
 

00:00:10.320 --> 00:00:12.310 align:start position:0%
and a dictionary of strings called word
dict<00:00:10.800><c> and</c><00:00:10.960><c> we</c><00:00:11.120><c> want</c><00:00:11.280><c> to</c><00:00:11.440><c> return</c><00:00:11.840><c> true</c>

00:00:12.310 --> 00:00:12.320 align:start position:0%
dict and we want to return true
 

00:00:12.320 --> 00:00:15.350 align:start position:0%
dict and we want to return true
if<00:00:12.559><c> and</c><00:00:12.719><c> only</c><00:00:13.200><c> if</c><00:00:13.759><c> s</c><00:00:14.080><c> can</c><00:00:14.320><c> be</c><00:00:14.639><c> broken</c>

00:00:15.350 --> 00:00:15.360 align:start position:0%
if and only if s can be broken
 

00:00:15.360 --> 00:00:18.630 align:start position:0%
if and only if s can be broken
up<00:00:15.679><c> into</c><00:00:16.080><c> separate</c><00:00:16.720><c> strings</c><00:00:17.440><c> such</c><00:00:17.760><c> that</c><00:00:18.080><c> every</c>

00:00:18.630 --> 00:00:18.640 align:start position:0%
up into separate strings such that every
 

00:00:18.640 --> 00:00:21.670 align:start position:0%
up into separate strings such that every
separate<00:00:19.279><c> string</c><00:00:19.920><c> in</c><00:00:20.240><c> s</c><00:00:20.720><c> is</c><00:00:21.039><c> also</c>

00:00:21.670 --> 00:00:21.680 align:start position:0%
separate string in s is also
 

00:00:21.680 --> 00:00:25.269 align:start position:0%
separate string in s is also
found<00:00:22.240><c> inside</c><00:00:23.039><c> of</c><00:00:23.279><c> our</c><00:00:23.600><c> word</c><00:00:23.920><c> dict</c><00:00:24.640><c> and</c><00:00:24.960><c> we</c>

00:00:25.269 --> 00:00:25.279 align:start position:0%
found inside of our word dict and we
 

00:00:25.279 --> 00:00:28.550 align:start position:0%
found inside of our word dict and we
are<00:00:25.680><c> allowed</c><00:00:26.160><c> to</c><00:00:26.480><c> use</c><00:00:26.960><c> words</c><00:00:27.680><c> from</c><00:00:28.000><c> the</c><00:00:28.160><c> word</c>

00:00:28.550 --> 00:00:28.560 align:start position:0%
are allowed to use words from the word
 

00:00:28.560 --> 00:00:30.310 align:start position:0%
are allowed to use words from the word
dict<00:00:28.960><c> multiple</c><00:00:29.599><c> times</c>

00:00:30.310 --> 00:00:30.320 align:start position:0%
dict multiple times
 

00:00:30.320 --> 00:00:32.150 align:start position:0%
dict multiple times
so<00:00:30.560><c> for</c><00:00:30.720><c> example</c><00:00:31.119><c> let's</c><00:00:31.279><c> say</c><00:00:31.439><c> we're</c><00:00:31.679><c> given</c><00:00:32.000><c> an</c>

00:00:32.150 --> 00:00:32.160 align:start position:0%
so for example let's say we're given an
 

00:00:32.160 --> 00:00:33.670 align:start position:0%
so for example let's say we're given an
input<00:00:32.480><c> string</c><00:00:32.800><c> leak</c><00:00:33.040><c> code</c>

00:00:33.670 --> 00:00:33.680 align:start position:0%
input string leak code
 

00:00:33.680 --> 00:00:36.069 align:start position:0%
input string leak code
and<00:00:33.840><c> we're</c><00:00:34.000><c> given</c><00:00:34.320><c> a</c><00:00:34.480><c> word</c><00:00:34.800><c> dictionary</c><00:00:35.600><c> of</c>

00:00:36.069 --> 00:00:36.079 align:start position:0%
and we're given a word dictionary of
 

00:00:36.079 --> 00:00:37.190 align:start position:0%
and we're given a word dictionary of
words<00:00:36.640><c> called</c>

00:00:37.190 --> 00:00:37.200 align:start position:0%
words called
 

00:00:37.200 --> 00:00:41.110 align:start position:0%
words called
leat<00:00:37.920><c> and</c><00:00:38.559><c> code</c><00:00:39.040><c> so</c><00:00:39.680><c> obviously</c><00:00:40.480><c> in</c><00:00:40.640><c> this</c><00:00:40.800><c> case</c>

00:00:41.110 --> 00:00:41.120 align:start position:0%
leat and code so obviously in this case
 

00:00:41.120 --> 00:00:43.110 align:start position:0%
leat and code so obviously in this case
we<00:00:41.280><c> could</c><00:00:41.520><c> split</c><00:00:41.920><c> this</c><00:00:42.079><c> string</c><00:00:42.480><c> right</c><00:00:42.719><c> into</c>

00:00:43.110 --> 00:00:43.120 align:start position:0%
we could split this string right into
 

00:00:43.120 --> 00:00:44.310 align:start position:0%
we could split this string right into
separate<00:00:43.440><c> strings</c><00:00:43.920><c> lee</c>

00:00:44.310 --> 00:00:44.320 align:start position:0%
separate strings lee
 

00:00:44.320 --> 00:00:46.150 align:start position:0%
separate strings lee
right<00:00:44.800><c> break</c><00:00:45.039><c> it</c><00:00:45.120><c> down</c><00:00:45.440><c> in</c><00:00:45.520><c> this</c><00:00:45.840><c> middle</c>

00:00:46.150 --> 00:00:46.160 align:start position:0%
right break it down in this middle
 

00:00:46.160 --> 00:00:47.750 align:start position:0%
right break it down in this middle
position<00:00:46.800><c> and</c><00:00:46.960><c> then</c><00:00:47.039><c> the</c><00:00:47.280><c> sep</c>

00:00:47.750 --> 00:00:47.760 align:start position:0%
position and then the sep
 

00:00:47.760 --> 00:00:50.069 align:start position:0%
position and then the sep
the<00:00:47.920><c> second</c><00:00:48.239><c> string</c><00:00:48.559><c> would</c><00:00:48.719><c> be</c><00:00:48.879><c> code</c><00:00:49.280><c> right</c><00:00:49.520><c> so</c>

00:00:50.069 --> 00:00:50.079 align:start position:0%
the second string would be code right so
 

00:00:50.079 --> 00:00:52.790 align:start position:0%
the second string would be code right so
clearly<00:00:50.559><c> this</c><00:00:50.879><c> can</c><00:00:51.120><c> be</c><00:00:51.360><c> broken</c><00:00:51.760><c> up</c><00:00:51.920><c> into</c><00:00:52.320><c> words</c>

00:00:52.790 --> 00:00:52.800 align:start position:0%
clearly this can be broken up into words
 

00:00:52.800 --> 00:00:54.630 align:start position:0%
clearly this can be broken up into words
that<00:00:52.960><c> are</c><00:00:53.120><c> found</c><00:00:53.440><c> in</c><00:00:53.520><c> the</c><00:00:53.600><c> word</c><00:00:53.920><c> dictionary</c><00:00:54.399><c> so</c>

00:00:54.630 --> 00:00:54.640 align:start position:0%
that are found in the word dictionary so
 

00:00:54.640 --> 00:00:56.790 align:start position:0%
that are found in the word dictionary so
therefore<00:00:55.120><c> we</c><00:00:55.280><c> are</c><00:00:55.440><c> going</c><00:00:55.600><c> to</c><00:00:55.680><c> return</c><00:00:56.160><c> true</c>

00:00:56.790 --> 00:00:56.800 align:start position:0%
therefore we are going to return true
 

00:00:56.800 --> 00:00:59.189 align:start position:0%
therefore we are going to return true
now<00:00:56.960><c> what</c><00:00:57.120><c> if</c><00:00:57.280><c> we</c><00:00:57.440><c> took</c><00:00:58.000><c> code</c><00:00:58.480><c> outside</c><00:00:58.960><c> of</c><00:00:59.120><c> our</c>

00:00:59.189 --> 00:00:59.199 align:start position:0%
now what if we took code outside of our
 

00:00:59.199 --> 00:01:00.069 align:start position:0%
now what if we took code outside of our
word<00:00:59.440><c> dictionary</c>

00:01:00.069 --> 00:01:00.079 align:start position:0%
word dictionary
 

00:01:00.079 --> 00:01:03.430 align:start position:0%
word dictionary
well<00:01:00.239><c> then</c><00:01:00.559><c> in</c><00:01:00.640><c> that</c><00:01:00.879><c> case</c><00:01:01.520><c> this</c><00:01:01.840><c> portion</c><00:01:02.960><c> is</c><00:01:03.199><c> a</c>

00:01:03.430 --> 00:01:03.440 align:start position:0%
well then in that case this portion is a
 

00:01:03.440 --> 00:01:05.429 align:start position:0%
well then in that case this portion is a
word<00:01:03.760><c> right</c><00:01:04.000><c> but</c><00:01:04.159><c> we</c><00:01:04.320><c> have</c><00:01:04.479><c> no</c><00:01:04.720><c> matching</c><00:01:05.119><c> word</c>

00:01:05.429 --> 00:01:05.439 align:start position:0%
word right but we have no matching word
 

00:01:05.439 --> 00:01:07.429 align:start position:0%
word right but we have no matching word
in<00:01:05.519><c> our</c><00:01:05.680><c> dictionary</c><00:01:06.159><c> for</c><00:01:06.320><c> the</c><00:01:06.479><c> remainder</c><00:01:07.119><c> code</c>

00:01:07.429 --> 00:01:07.439 align:start position:0%
in our dictionary for the remainder code
 

00:01:07.439 --> 00:01:09.030 align:start position:0%
in our dictionary for the remainder code
so<00:01:07.600><c> in</c><00:01:07.680><c> that</c><00:01:07.840><c> case</c><00:01:08.080><c> we</c><00:01:08.159><c> would</c><00:01:08.320><c> have</c><00:01:08.479><c> to</c><00:01:08.560><c> return</c>

00:01:09.030 --> 00:01:09.040 align:start position:0%
so in that case we would have to return
 

00:01:09.040 --> 00:01:11.109 align:start position:0%
so in that case we would have to return
false<00:01:09.680><c> and</c><00:01:09.840><c> you</c><00:01:10.000><c> know</c><00:01:10.080><c> let's</c><00:01:10.240><c> say</c><00:01:10.400><c> we</c><00:01:10.560><c> had</c><00:01:10.720><c> an</c>

00:01:11.109 --> 00:01:11.119 align:start position:0%
false and you know let's say we had an
 

00:01:11.119 --> 00:01:12.070 align:start position:0%
false and you know let's say we had an
input<00:01:11.360><c> string</c><00:01:11.680><c> instead</c>

00:01:12.070 --> 00:01:12.080 align:start position:0%
input string instead
 

00:01:12.080 --> 00:01:14.630 align:start position:0%
input string instead
called<00:01:12.400><c> lea</c><00:01:12.880><c> and</c><00:01:13.280><c> li</c><00:01:13.600><c> again</c><00:01:14.000><c> right</c><00:01:14.240><c> so</c><00:01:14.400><c> two</c>

00:01:14.630 --> 00:01:14.640 align:start position:0%
called lea and li again right so two
 

00:01:14.640 --> 00:01:15.670 align:start position:0%
called lea and li again right so two
leads<00:01:14.880><c> in</c><00:01:15.040><c> a</c><00:01:15.119><c> row</c><00:01:15.280><c> would</c>

00:01:15.670 --> 00:01:15.680 align:start position:0%
leads in a row would
 

00:01:15.680 --> 00:01:17.510 align:start position:0%
leads in a row would
would<00:01:15.840><c> we</c><00:01:16.159><c> return</c><00:01:16.560><c> true</c><00:01:16.799><c> yes</c><00:01:17.119><c> because</c><00:01:17.360><c> we're</c>

00:01:17.510 --> 00:01:17.520 align:start position:0%
would we return true yes because we're
 

00:01:17.520 --> 00:01:19.190 align:start position:0%
would we return true yes because we're
allowed<00:01:17.840><c> to</c><00:01:17.920><c> use</c><00:01:18.159><c> this</c><00:01:18.400><c> word</c><00:01:18.640><c> from</c><00:01:18.880><c> our</c>

00:01:19.190 --> 00:01:19.200 align:start position:0%
allowed to use this word from our
 

00:01:19.200 --> 00:01:20.950 align:start position:0%
allowed to use this word from our
dictionary<00:01:19.600><c> multiple</c><00:01:20.000><c> times</c><00:01:20.320><c> right</c><00:01:20.560><c> clearly</c>

00:01:20.950 --> 00:01:20.960 align:start position:0%
dictionary multiple times right clearly
 

00:01:20.960 --> 00:01:21.910 align:start position:0%
dictionary multiple times right clearly
it<00:01:21.040><c> matches</c><00:01:21.439><c> this</c>

00:01:21.910 --> 00:01:21.920 align:start position:0%
it matches this
 

00:01:21.920 --> 00:01:24.630 align:start position:0%
it matches this
and<00:01:22.080><c> it</c><00:01:22.240><c> also</c><00:01:22.560><c> matches</c><00:01:23.119><c> the</c><00:01:23.280><c> first</c><00:01:23.680><c> portion</c>

00:01:24.630 --> 00:01:24.640 align:start position:0%
and it also matches the first portion
 

00:01:24.640 --> 00:01:26.550 align:start position:0%
and it also matches the first portion
now<00:01:24.880><c> let's</c><00:01:25.119><c> start</c><00:01:25.439><c> off</c><00:01:25.600><c> with</c><00:01:25.759><c> the</c><00:01:25.840><c> brute</c><00:01:26.159><c> force</c>

00:01:26.550 --> 00:01:26.560 align:start position:0%
now let's start off with the brute force
 

00:01:26.560 --> 00:01:27.109 align:start position:0%
now let's start off with the brute force
approach

00:01:27.109 --> 00:01:27.119 align:start position:0%
approach
 

00:01:27.119 --> 00:01:28.950 align:start position:0%
approach
how<00:01:27.360><c> would</c><00:01:27.520><c> we</c><00:01:27.680><c> even</c><00:01:28.080><c> structure</c><00:01:28.560><c> a</c><00:01:28.640><c> brute</c>

00:01:28.950 --> 00:01:28.960 align:start position:0%
how would we even structure a brute
 

00:01:28.960 --> 00:01:30.710 align:start position:0%
how would we even structure a brute
force<00:01:29.200><c> solution</c><00:01:29.680><c> well</c><00:01:30.000><c> there's</c><00:01:30.240><c> actually</c>

00:01:30.710 --> 00:01:30.720 align:start position:0%
force solution well there's actually
 

00:01:30.720 --> 00:01:32.630 align:start position:0%
force solution well there's actually
two<00:01:31.040><c> ways</c><00:01:31.360><c> to</c><00:01:31.520><c> do</c><00:01:31.680><c> it</c><00:01:31.759><c> but</c><00:01:32.000><c> one</c><00:01:32.240><c> of</c><00:01:32.320><c> them</c>

00:01:32.630 --> 00:01:32.640 align:start position:0%
two ways to do it but one of them
 

00:01:32.640 --> 00:01:34.310 align:start position:0%
two ways to do it but one of them
happens<00:01:32.960><c> to</c><00:01:33.119><c> be</c><00:01:33.280><c> more</c><00:01:33.520><c> efficient</c><00:01:34.079><c> and</c><00:01:34.159><c> i'll</c>

00:01:34.310 --> 00:01:34.320 align:start position:0%
happens to be more efficient and i'll
 

00:01:34.320 --> 00:01:35.350 align:start position:0%
happens to be more efficient and i'll
tell<00:01:34.560><c> you</c><00:01:34.799><c> why</c>

00:01:35.350 --> 00:01:35.360 align:start position:0%
tell you why
 

00:01:35.360 --> 00:01:37.350 align:start position:0%
tell you why
so<00:01:35.680><c> one</c><00:01:35.840><c> thing</c><00:01:36.079><c> we</c><00:01:36.159><c> could</c><00:01:36.400><c> try</c><00:01:36.720><c> for</c><00:01:36.960><c> an</c><00:01:37.119><c> input</c>

00:01:37.350 --> 00:01:37.360 align:start position:0%
so one thing we could try for an input
 

00:01:37.360 --> 00:01:39.030 align:start position:0%
so one thing we could try for an input
string<00:01:37.680><c> like</c><00:01:37.920><c> this</c><00:01:38.079><c> one</c><00:01:38.240><c> we</c><00:01:38.400><c> could</c><00:01:38.560><c> check</c><00:01:38.799><c> okay</c>

00:01:39.030 --> 00:01:39.040 align:start position:0%
string like this one we could check okay
 

00:01:39.040 --> 00:01:40.069 align:start position:0%
string like this one we could check okay
the<00:01:39.280><c> first</c><00:01:39.600><c> character</c>

00:01:40.069 --> 00:01:40.079 align:start position:0%
the first character
 

00:01:40.079 --> 00:01:42.310 align:start position:0%
the first character
right<00:01:40.320><c> basically</c><00:01:40.640><c> the</c><00:01:40.880><c> first</c><00:01:41.280><c> prefix</c><00:01:42.000><c> of</c><00:01:42.159><c> the</c>

00:01:42.310 --> 00:01:42.320 align:start position:0%
right basically the first prefix of the
 

00:01:42.320 --> 00:01:43.350 align:start position:0%
right basically the first prefix of the
string<00:01:43.040><c> l</c>

00:01:43.350 --> 00:01:43.360 align:start position:0%
string l
 

00:01:43.360 --> 00:01:45.670 align:start position:0%
string l
by<00:01:43.600><c> itself</c><00:01:44.079><c> right</c><00:01:44.399><c> is</c><00:01:44.560><c> this</c><00:01:44.799><c> a</c><00:01:45.040><c> word</c><00:01:45.360><c> that's</c>

00:01:45.670 --> 00:01:45.680 align:start position:0%
by itself right is this a word that's
 

00:01:45.680 --> 00:01:47.510 align:start position:0%
by itself right is this a word that's
found<00:01:46.000><c> in</c><00:01:46.079><c> our</c><00:01:46.240><c> word</c><00:01:46.479><c> dictionary</c><00:01:46.960><c> it's</c><00:01:47.200><c> not</c>

00:01:47.510 --> 00:01:47.520 align:start position:0%
found in our word dictionary it's not
 

00:01:47.520 --> 00:01:47.910 align:start position:0%
found in our word dictionary it's not
right

00:01:47.910 --> 00:01:47.920 align:start position:0%
right
 

00:01:47.920 --> 00:01:49.590 align:start position:0%
right
so<00:01:48.079><c> let's</c><00:01:48.320><c> try</c><00:01:48.560><c> maybe</c><00:01:48.880><c> the</c><00:01:49.040><c> first</c><00:01:49.360><c> two</c>

00:01:49.590 --> 00:01:49.600 align:start position:0%
so let's try maybe the first two
 

00:01:49.600 --> 00:01:51.270 align:start position:0%
so let's try maybe the first two
characters<00:01:50.079><c> together</c><00:01:50.560><c> are</c><00:01:50.720><c> a</c><00:01:50.799><c> word</c><00:01:51.119><c> right</c>

00:01:51.270 --> 00:01:51.280 align:start position:0%
characters together are a word right
 

00:01:51.280 --> 00:01:52.469 align:start position:0%
characters together are a word right
that's<00:01:51.520><c> not</c><00:01:51.759><c> it</c><00:01:52.000><c> either</c>

00:01:52.469 --> 00:01:52.479 align:start position:0%
that's not it either
 

00:01:52.479 --> 00:01:53.910 align:start position:0%
that's not it either
we<00:01:52.640><c> would</c><00:01:52.799><c> try</c><00:01:53.040><c> the</c><00:01:53.119><c> first</c><00:01:53.439><c> three</c><00:01:53.680><c> right</c>

00:01:53.910 --> 00:01:53.920 align:start position:0%
we would try the first three right
 

00:01:53.920 --> 00:01:55.910 align:start position:0%
we would try the first three right
basically<00:01:54.320><c> we</c><00:01:54.399><c> would</c><00:01:54.560><c> try</c><00:01:54.880><c> every</c><00:01:55.280><c> single</c>

00:01:55.910 --> 00:01:55.920 align:start position:0%
basically we would try every single
 

00:01:55.920 --> 00:01:58.149 align:start position:0%
basically we would try every single
portion<00:01:56.479><c> from</c><00:01:56.640><c> the</c><00:01:56.799><c> beginning</c><00:01:57.360><c> until</c><00:01:57.759><c> we</c>

00:01:58.149 --> 00:01:58.159 align:start position:0%
portion from the beginning until we
 

00:01:58.159 --> 00:01:59.190 align:start position:0%
portion from the beginning until we
found<00:01:58.799><c> a</c>

00:01:59.190 --> 00:01:59.200 align:start position:0%
found a
 

00:01:59.200 --> 00:02:01.830 align:start position:0%
found a
matching<00:01:59.759><c> word</c><00:02:00.159><c> that</c><00:02:00.479><c> does</c><00:02:00.960><c> exist</c><00:02:01.520><c> in</c><00:02:01.680><c> our</c>

00:02:01.830 --> 00:02:01.840 align:start position:0%
matching word that does exist in our
 

00:02:01.840 --> 00:02:03.030 align:start position:0%
matching word that does exist in our
word<00:02:02.079><c> dictionary</c>

00:02:03.030 --> 00:02:03.040 align:start position:0%
word dictionary
 

00:02:03.040 --> 00:02:05.270 align:start position:0%
word dictionary
and<00:02:03.280><c> we</c><00:02:03.439><c> know</c><00:02:03.680><c> that</c><00:02:04.079><c> we</c><00:02:04.240><c> are</c><00:02:04.399><c> gonna</c><00:02:04.719><c> find</c><00:02:05.040><c> one</c>

00:02:05.270 --> 00:02:05.280 align:start position:0%
and we know that we are gonna find one
 

00:02:05.280 --> 00:02:07.030 align:start position:0%
and we know that we are gonna find one
like<00:02:05.759><c> this</c><00:02:06.079><c> right</c><00:02:06.320><c> the</c><00:02:06.479><c> first</c>

00:02:07.030 --> 00:02:07.040 align:start position:0%
like this right the first
 

00:02:07.040 --> 00:02:10.150 align:start position:0%
like this right the first
four<00:02:07.439><c> characters</c><00:02:08.399><c> of</c><00:02:08.959><c> the</c><00:02:09.200><c> string</c><00:02:09.840><c> are</c>

00:02:10.150 --> 00:02:10.160 align:start position:0%
four characters of the string are
 

00:02:10.160 --> 00:02:13.270 align:start position:0%
four characters of the string are
a<00:02:10.399><c> word</c><00:02:10.800><c> right</c><00:02:11.200><c> so</c><00:02:11.440><c> once</c><00:02:11.760><c> we</c><00:02:12.080><c> found</c><00:02:12.480><c> that</c><00:02:13.040><c> what</c>

00:02:13.270 --> 00:02:13.280 align:start position:0%
a word right so once we found that what
 

00:02:13.280 --> 00:02:14.150 align:start position:0%
a word right so once we found that what
are<00:02:13.440><c> we</c><00:02:13.599><c> gonna</c><00:02:13.840><c> do</c>

00:02:14.150 --> 00:02:14.160 align:start position:0%
are we gonna do
 

00:02:14.160 --> 00:02:16.150 align:start position:0%
are we gonna do
clearly<00:02:14.560><c> we</c><00:02:14.720><c> have</c><00:02:14.879><c> a</c><00:02:15.120><c> sub</c><00:02:15.440><c> problem</c><00:02:15.760><c> right</c><00:02:15.920><c> we</c>

00:02:16.150 --> 00:02:16.160 align:start position:0%
clearly we have a sub problem right we
 

00:02:16.160 --> 00:02:18.070 align:start position:0%
clearly we have a sub problem right we
found<00:02:16.400><c> a</c><00:02:16.560><c> matching</c><00:02:17.040><c> word</c><00:02:17.360><c> for</c><00:02:17.520><c> this</c><00:02:17.760><c> portion</c>

00:02:18.070 --> 00:02:18.080 align:start position:0%
found a matching word for this portion
 

00:02:18.080 --> 00:02:19.990 align:start position:0%
found a matching word for this portion
but<00:02:18.239><c> now</c><00:02:18.480><c> we</c><00:02:18.560><c> want</c><00:02:18.720><c> to</c><00:02:18.800><c> know</c><00:02:18.959><c> can</c><00:02:19.120><c> we</c><00:02:19.360><c> break</c><00:02:19.760><c> up</c>

00:02:19.990 --> 00:02:20.000 align:start position:0%
but now we want to know can we break up
 

00:02:20.000 --> 00:02:21.510 align:start position:0%
but now we want to know can we break up
the<00:02:20.319><c> rest</c><00:02:20.640><c> of</c><00:02:20.720><c> this</c><00:02:20.959><c> string</c>

00:02:21.510 --> 00:02:21.520 align:start position:0%
the rest of this string
 

00:02:21.520 --> 00:02:23.430 align:start position:0%
the rest of this string
with<00:02:21.760><c> words</c><00:02:22.160><c> from</c><00:02:22.319><c> our</c><00:02:22.480><c> dictionary</c><00:02:23.040><c> so</c><00:02:23.200><c> that's</c>

00:02:23.430 --> 00:02:23.440 align:start position:0%
with words from our dictionary so that's
 

00:02:23.440 --> 00:02:25.110 align:start position:0%
with words from our dictionary so that's
kind<00:02:23.599><c> of</c><00:02:23.760><c> how</c><00:02:24.319><c> uh</c><00:02:24.480><c> we're</c><00:02:24.640><c> going</c><00:02:24.720><c> to</c>

00:02:25.110 --> 00:02:25.120 align:start position:0%
kind of how uh we're going to
 

00:02:25.120 --> 00:02:26.470 align:start position:0%
kind of how uh we're going to
do<00:02:25.360><c> it</c><00:02:25.440><c> right</c><00:02:25.599><c> that's</c><00:02:26.000><c> what's</c><00:02:26.239><c> going</c><00:02:26.319><c> to</c><00:02:26.400><c> be</c>

00:02:26.470 --> 00:02:26.480 align:start position:0%
do it right that's what's going to be
 

00:02:26.480 --> 00:02:28.710 align:start position:0%
do it right that's what's going to be
the<00:02:26.640><c> sub</c><00:02:26.879><c> problem</c><00:02:27.200><c> basically</c><00:02:28.080><c> so</c><00:02:28.319><c> instead</c><00:02:28.560><c> of</c>

00:02:28.710 --> 00:02:28.720 align:start position:0%
the sub problem basically so instead of
 

00:02:28.720 --> 00:02:30.470 align:start position:0%
the sub problem basically so instead of
starting<00:02:29.120><c> from</c><00:02:29.440><c> the</c><00:02:29.599><c> first</c><00:02:29.840><c> position</c><00:02:30.239><c> in</c><00:02:30.319><c> the</c>

00:02:30.470 --> 00:02:30.480 align:start position:0%
starting from the first position in the
 

00:02:30.480 --> 00:02:31.270 align:start position:0%
starting from the first position in the
string<00:02:30.720><c> we</c><00:02:30.800><c> would</c><00:02:30.959><c> start</c>

00:02:31.270 --> 00:02:31.280 align:start position:0%
string we would start
 

00:02:31.280 --> 00:02:32.949 align:start position:0%
string we would start
at<00:02:31.519><c> this</c><00:02:31.760><c> position</c><00:02:32.239><c> in</c><00:02:32.319><c> the</c><00:02:32.400><c> string</c><00:02:32.720><c> and</c><00:02:32.800><c> try</c>

00:02:32.949 --> 00:02:32.959 align:start position:0%
at this position in the string and try
 

00:02:32.959 --> 00:02:34.470 align:start position:0%
at this position in the string and try
to<00:02:33.120><c> word</c><00:02:33.440><c> break</c><00:02:33.840><c> it</c>

00:02:34.470 --> 00:02:34.480 align:start position:0%
to word break it
 

00:02:34.480 --> 00:02:36.390 align:start position:0%
to word break it
now<00:02:34.800><c> in</c><00:02:35.040><c> this</c><00:02:35.360><c> approach</c><00:02:35.920><c> what</c><00:02:36.080><c> we're</c><00:02:36.239><c> going</c><00:02:36.319><c> to</c>

00:02:36.390 --> 00:02:36.400 align:start position:0%
now in this approach what we're going to
 

00:02:36.400 --> 00:02:38.150 align:start position:0%
now in this approach what we're going to
basically<00:02:36.800><c> be</c><00:02:36.959><c> doing</c><00:02:37.280><c> potentially</c><00:02:37.760><c> is</c><00:02:37.920><c> from</c>

00:02:38.150 --> 00:02:38.160 align:start position:0%
basically be doing potentially is from
 

00:02:38.160 --> 00:02:39.509 align:start position:0%
basically be doing potentially is from
every<00:02:38.319><c> single</c><00:02:38.640><c> starting</c><00:02:38.959><c> position</c><00:02:39.360><c> right</c>

00:02:39.509 --> 00:02:39.519 align:start position:0%
every single starting position right
 

00:02:39.519 --> 00:02:41.110 align:start position:0%
every single starting position right
we're<00:02:39.680><c> going</c><00:02:39.760><c> to</c><00:02:39.840><c> check</c><00:02:40.080><c> every</c><00:02:40.400><c> prefix</c><00:02:40.879><c> right</c>

00:02:41.110 --> 00:02:41.120 align:start position:0%
we're going to check every prefix right
 

00:02:41.120 --> 00:02:41.589 align:start position:0%
we're going to check every prefix right
so

00:02:41.589 --> 00:02:41.599 align:start position:0%
so
 

00:02:41.599 --> 00:02:42.949 align:start position:0%
so
from<00:02:41.840><c> the</c><00:02:41.920><c> first</c><00:02:42.160><c> starting</c><00:02:42.400><c> position</c><00:02:42.800><c> we</c>

00:02:42.949 --> 00:02:42.959 align:start position:0%
from the first starting position we
 

00:02:42.959 --> 00:02:45.350 align:start position:0%
from the first starting position we
might<00:02:43.200><c> also</c><00:02:43.599><c> get</c><00:02:44.400><c> if</c><00:02:44.640><c> you</c><00:02:44.720><c> know</c><00:02:44.879><c> this</c><00:02:45.120><c> happened</c>

00:02:45.350 --> 00:02:45.360 align:start position:0%
might also get if you know this happened
 

00:02:45.360 --> 00:02:46.630 align:start position:0%
might also get if you know this happened
to<00:02:45.519><c> be</c><00:02:45.599><c> a</c><00:02:45.760><c> word</c><00:02:46.000><c> then</c><00:02:46.160><c> we</c><00:02:46.319><c> would</c>

00:02:46.630 --> 00:02:46.640 align:start position:0%
to be a word then we would
 

00:02:46.640 --> 00:02:48.150 align:start position:0%
to be a word then we would
start<00:02:46.879><c> at</c><00:02:46.959><c> this</c><00:02:47.200><c> position</c><00:02:47.599><c> and</c><00:02:47.680><c> then</c><00:02:47.840><c> do</c><00:02:48.000><c> the</c>

00:02:48.150 --> 00:02:48.160 align:start position:0%
start at this position and then do the
 

00:02:48.160 --> 00:02:49.990 align:start position:0%
start at this position and then do the
same<00:02:48.400><c> thing</c><00:02:48.959><c> for</c><00:02:49.200><c> this</c><00:02:49.519><c> right</c><00:02:49.760><c> every</c>

00:02:49.990 --> 00:02:50.000 align:start position:0%
same thing for this right every
 

00:02:50.000 --> 00:02:52.390 align:start position:0%
same thing for this right every
word<00:02:50.319><c> starting</c><00:02:50.720><c> here</c><00:02:51.280><c> so</c><00:02:51.760><c> basically</c><00:02:52.239><c> we're</c>

00:02:52.390 --> 00:02:52.400 align:start position:0%
word starting here so basically we're
 

00:02:52.400 --> 00:02:54.070 align:start position:0%
word starting here so basically we're
going<00:02:52.480><c> to</c><00:02:52.560><c> try</c><00:02:52.959><c> every</c><00:02:53.360><c> word</c><00:02:53.680><c> how</c><00:02:53.840><c> many</c>

00:02:54.070 --> 00:02:54.080 align:start position:0%
going to try every word how many
 

00:02:54.080 --> 00:02:55.509 align:start position:0%
going to try every word how many
different<00:02:54.400><c> words</c><00:02:54.800><c> are</c><00:02:54.879><c> we</c><00:02:55.040><c> going</c><00:02:55.120><c> to</c><00:02:55.200><c> end</c><00:02:55.360><c> up</c>

00:02:55.509 --> 00:02:55.519 align:start position:0%
different words are we going to end up
 

00:02:55.519 --> 00:02:56.710 align:start position:0%
different words are we going to end up
trying<00:02:55.840><c> we're</c><00:02:56.000><c> going</c><00:02:56.160><c> to</c><00:02:56.239><c> try</c>

00:02:56.710 --> 00:02:56.720 align:start position:0%
trying we're going to try
 

00:02:56.720 --> 00:02:59.830 align:start position:0%
trying we're going to try
let's<00:02:56.879><c> say</c><00:02:57.200><c> n</c><00:02:57.599><c> is</c><00:02:57.680><c> the</c><00:02:57.920><c> size</c><00:02:58.319><c> of</c><00:02:58.640><c> our</c><00:02:58.879><c> string</c><00:02:59.360><c> n</c>

00:02:59.830 --> 00:02:59.840 align:start position:0%
let's say n is the size of our string n
 

00:02:59.840 --> 00:03:01.110 align:start position:0%
let's say n is the size of our string n
and<00:03:00.000><c> we're</c><00:03:00.239><c> going</c><00:03:00.319><c> to</c><00:03:00.400><c> try</c><00:03:00.640><c> basically</c><00:03:00.959><c> from</c>

00:03:01.110 --> 00:03:01.120 align:start position:0%
and we're going to try basically from
 

00:03:01.120 --> 00:03:02.790 align:start position:0%
and we're going to try basically from
every<00:03:01.280><c> single</c><00:03:01.519><c> starting</c><00:03:01.840><c> position</c><00:03:02.400><c> to</c><00:03:02.560><c> the</c>

00:03:02.790 --> 00:03:02.800 align:start position:0%
every single starting position to the
 

00:03:02.800 --> 00:03:03.430 align:start position:0%
every single starting position to the
end

00:03:03.430 --> 00:03:03.440 align:start position:0%
end
 

00:03:03.440 --> 00:03:05.350 align:start position:0%
end
so<00:03:03.599><c> that's</c><00:03:03.840><c> going</c><00:03:03.920><c> to</c><00:03:04.000><c> basically</c><00:03:04.400><c> be</c><00:03:04.640><c> n</c><00:03:04.879><c> times</c>

00:03:05.350 --> 00:03:05.360 align:start position:0%
so that's going to basically be n times
 

00:03:05.360 --> 00:03:06.470 align:start position:0%
so that's going to basically be n times
n<00:03:05.920><c> now</c>

00:03:06.470 --> 00:03:06.480 align:start position:0%
n now
 

00:03:06.480 --> 00:03:08.710 align:start position:0%
n now
we<00:03:06.640><c> could</c><00:03:06.879><c> also</c><00:03:07.280><c> do</c><00:03:07.440><c> it</c><00:03:07.599><c> a</c><00:03:07.840><c> different</c><00:03:08.239><c> way</c>

00:03:08.710 --> 00:03:08.720 align:start position:0%
we could also do it a different way
 

00:03:08.720 --> 00:03:10.070 align:start position:0%
we could also do it a different way
instead<00:03:09.120><c> of</c><00:03:09.440><c> trying</c>

00:03:10.070 --> 00:03:10.080 align:start position:0%
instead of trying
 

00:03:10.080 --> 00:03:12.869 align:start position:0%
instead of trying
every<00:03:10.640><c> single</c><00:03:11.120><c> possible</c><00:03:11.840><c> you</c><00:03:11.920><c> know</c><00:03:12.159><c> prefix</c>

00:03:12.869 --> 00:03:12.879 align:start position:0%
every single possible you know prefix
 

00:03:12.879 --> 00:03:13.270 align:start position:0%
every single possible you know prefix
let's

00:03:13.270 --> 00:03:13.280 align:start position:0%
let's
 

00:03:13.280 --> 00:03:15.910 align:start position:0%
let's
just<00:03:13.680><c> check</c><00:03:14.159><c> every</c><00:03:14.720><c> word</c><00:03:15.200><c> in</c><00:03:15.360><c> our</c><00:03:15.519><c> word</c>

00:03:15.910 --> 00:03:15.920 align:start position:0%
just check every word in our word
 

00:03:15.920 --> 00:03:18.390 align:start position:0%
just check every word in our word
dictionary<00:03:16.640><c> and</c><00:03:16.879><c> see</c><00:03:17.200><c> if</c><00:03:17.440><c> that</c><00:03:17.840><c> matches</c>

00:03:18.390 --> 00:03:18.400 align:start position:0%
dictionary and see if that matches
 

00:03:18.400 --> 00:03:21.190 align:start position:0%
dictionary and see if that matches
for<00:03:18.560><c> example</c><00:03:19.280><c> this</c><00:03:19.599><c> first</c><00:03:20.080><c> word</c><00:03:20.400><c> is</c><00:03:20.800><c> four</c>

00:03:21.190 --> 00:03:21.200 align:start position:0%
for example this first word is four
 

00:03:21.200 --> 00:03:21.990 align:start position:0%
for example this first word is four
characters

00:03:21.990 --> 00:03:22.000 align:start position:0%
characters
 

00:03:22.000 --> 00:03:23.589 align:start position:0%
characters
long<00:03:22.319><c> right</c><00:03:22.560><c> so</c><00:03:22.720><c> what</c><00:03:22.879><c> we're</c><00:03:23.040><c> going</c><00:03:23.120><c> to</c><00:03:23.280><c> do</c><00:03:23.440><c> is</c>

00:03:23.589 --> 00:03:23.599 align:start position:0%
long right so what we're going to do is
 

00:03:23.599 --> 00:03:25.030 align:start position:0%
long right so what we're going to do is
we're<00:03:23.760><c> going</c><00:03:23.840><c> to</c><00:03:24.000><c> check</c><00:03:24.239><c> the</c><00:03:24.480><c> first</c>

00:03:25.030 --> 00:03:25.040 align:start position:0%
we're going to check the first
 

00:03:25.040 --> 00:03:28.229 align:start position:0%
we're going to check the first
four<00:03:25.440><c> characters</c><00:03:26.080><c> in</c><00:03:26.319><c> our</c><00:03:26.480><c> string</c><00:03:27.280><c> does</c><00:03:27.680><c> this</c>

00:03:28.229 --> 00:03:28.239 align:start position:0%
four characters in our string does this
 

00:03:28.239 --> 00:03:31.589 align:start position:0%
four characters in our string does this
match<00:03:28.879><c> this</c><00:03:29.440><c> word</c><00:03:30.000><c> clearly</c><00:03:30.480><c> it</c><00:03:30.799><c> does</c><00:03:31.200><c> right</c>

00:03:31.589 --> 00:03:31.599 align:start position:0%
match this word clearly it does right
 

00:03:31.599 --> 00:03:34.070 align:start position:0%
match this word clearly it does right
so<00:03:31.760><c> what</c><00:03:32.080><c> does</c><00:03:32.319><c> that</c><00:03:32.560><c> tell</c><00:03:32.799><c> us</c><00:03:33.200><c> that</c><00:03:33.440><c> tells</c><00:03:33.680><c> us</c>

00:03:34.070 --> 00:03:34.080 align:start position:0%
so what does that tell us that tells us
 

00:03:34.080 --> 00:03:35.990 align:start position:0%
so what does that tell us that tells us
now<00:03:34.560><c> you</c><00:03:34.640><c> know</c><00:03:34.799><c> we</c><00:03:34.959><c> have</c><00:03:35.040><c> the</c><00:03:35.280><c> same</c><00:03:35.680><c> sub</c>

00:03:35.990 --> 00:03:36.000 align:start position:0%
now you know we have the same sub
 

00:03:36.000 --> 00:03:37.110 align:start position:0%
now you know we have the same sub
problem<00:03:36.319><c> as</c><00:03:36.560><c> before</c>

00:03:37.110 --> 00:03:37.120 align:start position:0%
problem as before
 

00:03:37.120 --> 00:03:38.869 align:start position:0%
problem as before
we're<00:03:37.280><c> going</c><00:03:37.360><c> to</c><00:03:37.519><c> start</c><00:03:37.840><c> from</c><00:03:38.319><c> these</c><00:03:38.640><c> this</c>

00:03:38.869 --> 00:03:38.879 align:start position:0%
we're going to start from these this
 

00:03:38.879 --> 00:03:40.550 align:start position:0%
we're going to start from these this
next<00:03:39.120><c> position</c><00:03:39.519><c> now</c><00:03:39.760><c> right</c><00:03:39.920><c> and</c><00:03:40.080><c> check</c>

00:03:40.550 --> 00:03:40.560 align:start position:0%
next position now right and check
 

00:03:40.560 --> 00:03:41.990 align:start position:0%
next position now right and check
and<00:03:40.799><c> from</c><00:03:41.040><c> here</c><00:03:41.280><c> we're</c><00:03:41.440><c> basically</c><00:03:41.840><c> going</c><00:03:41.920><c> to</c>

00:03:41.990 --> 00:03:42.000 align:start position:0%
and from here we're basically going to
 

00:03:42.000 --> 00:03:43.270 align:start position:0%
and from here we're basically going to
be<00:03:42.080><c> doing</c><00:03:42.319><c> the</c><00:03:42.400><c> same</c><00:03:42.640><c> thing</c><00:03:42.879><c> right</c><00:03:43.040><c> so</c><00:03:43.200><c> we're</c>

00:03:43.270 --> 00:03:43.280 align:start position:0%
be doing the same thing right so we're
 

00:03:43.280 --> 00:03:43.990 align:start position:0%
be doing the same thing right so we're
going<00:03:43.360><c> to</c><00:03:43.519><c> check</c>

00:03:43.990 --> 00:03:44.000 align:start position:0%
going to check
 

00:03:44.000 --> 00:03:45.990 align:start position:0%
going to check
is<00:03:44.319><c> elite</c><00:03:44.879><c> basically</c><00:03:45.360><c> you</c><00:03:45.519><c> know</c><00:03:45.599><c> the</c><00:03:45.680><c> first</c>

00:03:45.990 --> 00:03:46.000 align:start position:0%
is elite basically you know the first
 

00:03:46.000 --> 00:03:48.149 align:start position:0%
is elite basically you know the first
four<00:03:46.239><c> characters</c><00:03:46.879><c> does</c><00:03:47.040><c> that</c><00:03:47.360><c> match</c><00:03:47.680><c> lee</c>

00:03:48.149 --> 00:03:48.159 align:start position:0%
four characters does that match lee
 

00:03:48.159 --> 00:03:50.149 align:start position:0%
four characters does that match lee
this<00:03:48.400><c> does</c><00:03:48.560><c> not</c><00:03:48.720><c> match</c><00:03:49.280><c> lee</c><00:03:49.599><c> right</c><00:03:49.760><c> so</c><00:03:49.920><c> now</c>

00:03:50.149 --> 00:03:50.159 align:start position:0%
this does not match lee right so now
 

00:03:50.159 --> 00:03:52.390 align:start position:0%
this does not match lee right so now
let's<00:03:50.480><c> check</c><00:03:50.959><c> the</c><00:03:51.280><c> next</c><00:03:51.599><c> word</c><00:03:51.920><c> in</c><00:03:52.080><c> our</c><00:03:52.159><c> word</c>

00:03:52.390 --> 00:03:52.400 align:start position:0%
let's check the next word in our word
 

00:03:52.400 --> 00:03:54.390 align:start position:0%
let's check the next word in our word
dictionary<00:03:52.959><c> and</c><00:03:53.120><c> check</c><00:03:53.360><c> does</c><00:03:53.519><c> that</c><00:03:53.760><c> match</c>

00:03:54.390 --> 00:03:54.400 align:start position:0%
dictionary and check does that match
 

00:03:54.400 --> 00:03:56.710 align:start position:0%
dictionary and check does that match
uh<00:03:54.560><c> the</c><00:03:55.280><c> characters</c><00:03:55.760><c> over</c><00:03:55.920><c> here</c><00:03:56.159><c> it</c><00:03:56.400><c> does</c>

00:03:56.710 --> 00:03:56.720 align:start position:0%
uh the characters over here it does
 

00:03:56.720 --> 00:03:57.589 align:start position:0%
uh the characters over here it does
right<00:03:56.959><c> we</c><00:03:57.120><c> found</c>

00:03:57.589 --> 00:03:57.599 align:start position:0%
right we found
 

00:03:57.599 --> 00:04:00.070 align:start position:0%
right we found
code<00:03:58.239><c> so</c><00:03:58.400><c> this</c><00:03:58.640><c> is</c><00:03:58.720><c> basically</c><00:03:59.200><c> another</c><00:03:59.680><c> way</c><00:03:59.920><c> to</c>

00:04:00.070 --> 00:04:00.080 align:start position:0%
code so this is basically another way to
 

00:04:00.080 --> 00:04:01.750 align:start position:0%
code so this is basically another way to
do<00:04:00.239><c> this</c><00:04:00.480><c> problem</c><00:04:00.799><c> instead</c><00:04:01.120><c> of</c><00:04:01.280><c> checking</c>

00:04:01.750 --> 00:04:01.760 align:start position:0%
do this problem instead of checking
 

00:04:01.760 --> 00:04:03.750 align:start position:0%
do this problem instead of checking
every<00:04:02.000><c> single</c><00:04:02.319><c> possible</c><00:04:02.799><c> prefix</c><00:04:03.360><c> right</c><00:04:03.599><c> of</c>

00:04:03.750 --> 00:04:03.760 align:start position:0%
every single possible prefix right of
 

00:04:03.760 --> 00:04:05.270 align:start position:0%
every single possible prefix right of
any<00:04:04.159><c> length</c><00:04:04.480><c> what</c><00:04:04.640><c> we're</c><00:04:04.799><c> going</c><00:04:04.879><c> to</c><00:04:04.959><c> be</c><00:04:05.120><c> doing</c>

00:04:05.270 --> 00:04:05.280 align:start position:0%
any length what we're going to be doing
 

00:04:05.280 --> 00:04:06.390 align:start position:0%
any length what we're going to be doing
is<00:04:05.360><c> we're</c><00:04:05.519><c> going</c><00:04:05.680><c> to</c><00:04:05.760><c> be</c><00:04:05.920><c> checking</c><00:04:06.239><c> every</c>

00:04:06.390 --> 00:04:06.400 align:start position:0%
is we're going to be checking every
 

00:04:06.400 --> 00:04:07.750 align:start position:0%
is we're going to be checking every
single<00:04:06.720><c> word</c><00:04:07.120><c> in</c><00:04:07.280><c> our</c><00:04:07.360><c> word</c>

00:04:07.750 --> 00:04:07.760 align:start position:0%
single word in our word
 

00:04:07.760 --> 00:04:10.949 align:start position:0%
single word in our word
dictionary<00:04:08.480><c> as</c><00:04:08.799><c> the</c><00:04:08.959><c> prefix</c><00:04:09.920><c> so</c><00:04:10.400><c> instead</c><00:04:10.720><c> of</c>

00:04:10.949 --> 00:04:10.959 align:start position:0%
dictionary as the prefix so instead of
 

00:04:10.959 --> 00:04:11.589 align:start position:0%
dictionary as the prefix so instead of
being

00:04:11.589 --> 00:04:11.599 align:start position:0%
being
 

00:04:11.599 --> 00:04:14.470 align:start position:0%
being
o<00:04:11.840><c> of</c><00:04:12.080><c> n</c><00:04:12.400><c> times</c><00:04:12.959><c> n</c><00:04:13.519><c> we're</c><00:04:13.680><c> going</c><00:04:13.760><c> to</c><00:04:13.840><c> be</c><00:04:14.000><c> doing</c><00:04:14.239><c> o</c>

00:04:14.470 --> 00:04:14.480 align:start position:0%
o of n times n we're going to be doing o
 

00:04:14.480 --> 00:04:14.869 align:start position:0%
o of n times n we're going to be doing o
of<00:04:14.640><c> n</c>

00:04:14.869 --> 00:04:14.879 align:start position:0%
of n
 

00:04:14.879 --> 00:04:16.390 align:start position:0%
of n
because<00:04:15.280><c> potentially</c><00:04:15.760><c> we</c><00:04:15.920><c> are</c><00:04:16.079><c> going</c><00:04:16.160><c> to</c><00:04:16.239><c> be</c>

00:04:16.390 --> 00:04:16.400 align:start position:0%
because potentially we are going to be
 

00:04:16.400 --> 00:04:17.830 align:start position:0%
because potentially we are going to be
going<00:04:16.720><c> through</c><00:04:16.959><c> every</c><00:04:17.199><c> single</c><00:04:17.519><c> starting</c>

00:04:17.830 --> 00:04:17.840 align:start position:0%
going through every single starting
 

00:04:17.840 --> 00:04:19.189 align:start position:0%
going through every single starting
position<00:04:18.400><c> but</c><00:04:18.560><c> we're</c><00:04:18.880><c> going</c><00:04:18.959><c> to</c><00:04:19.040><c> be</c>

00:04:19.189 --> 00:04:19.199 align:start position:0%
position but we're going to be
 

00:04:19.199 --> 00:04:20.069 align:start position:0%
position but we're going to be
multiplying

00:04:20.069 --> 00:04:20.079 align:start position:0%
multiplying
 

00:04:20.079 --> 00:04:23.350 align:start position:0%
multiplying
by<00:04:20.320><c> the</c><00:04:20.560><c> number</c><00:04:21.280><c> of</c><00:04:21.919><c> words</c><00:04:22.479><c> in</c><00:04:22.720><c> our</c><00:04:22.960><c> word</c>

00:04:23.350 --> 00:04:23.360 align:start position:0%
by the number of words in our word
 

00:04:23.360 --> 00:04:25.189 align:start position:0%
by the number of words in our word
dictionary<00:04:23.919><c> which</c><00:04:24.080><c> is</c><00:04:24.240><c> let's</c><00:04:24.639><c> call</c><00:04:24.880><c> it</c>

00:04:25.189 --> 00:04:25.199 align:start position:0%
dictionary which is let's call it
 

00:04:25.199 --> 00:04:27.670 align:start position:0%
dictionary which is let's call it
m<00:04:25.919><c> and</c><00:04:26.320><c> the</c><00:04:26.479><c> reason</c><00:04:26.880><c> why</c><00:04:27.040><c> we're</c><00:04:27.199><c> going</c><00:04:27.360><c> to</c><00:04:27.520><c> be</c>

00:04:27.670 --> 00:04:27.680 align:start position:0%
m and the reason why we're going to be
 

00:04:27.680 --> 00:04:29.030 align:start position:0%
m and the reason why we're going to be
doing<00:04:28.080><c> this</c><00:04:28.400><c> approach</c>

00:04:29.030 --> 00:04:29.040 align:start position:0%
doing this approach
 

00:04:29.040 --> 00:04:30.390 align:start position:0%
doing this approach
is<00:04:29.199><c> because</c><00:04:29.520><c> it's</c><00:04:29.680><c> going</c><00:04:29.759><c> to</c><00:04:29.840><c> be</c><00:04:29.919><c> a</c><00:04:30.000><c> little</c><00:04:30.240><c> bit</c>

00:04:30.390 --> 00:04:30.400 align:start position:0%
is because it's going to be a little bit
 

00:04:30.400 --> 00:04:32.070 align:start position:0%
is because it's going to be a little bit
more<00:04:30.639><c> efficient</c><00:04:31.040><c> and</c><00:04:31.120><c> the</c><00:04:31.280><c> reason</c><00:04:31.600><c> is</c><00:04:31.759><c> they</c>

00:04:32.070 --> 00:04:32.080 align:start position:0%
more efficient and the reason is they
 

00:04:32.080 --> 00:04:33.749 align:start position:0%
more efficient and the reason is they
they<00:04:32.320><c> tell</c><00:04:32.560><c> us</c><00:04:32.720><c> below</c><00:04:33.199><c> in</c><00:04:33.280><c> the</c><00:04:33.440><c> problem</c>

00:04:33.749 --> 00:04:33.759 align:start position:0%
they tell us below in the problem
 

00:04:33.759 --> 00:04:35.830 align:start position:0%
they tell us below in the problem
statement<00:04:34.160><c> that</c><00:04:34.320><c> the</c><00:04:34.479><c> max</c><00:04:34.960><c> size</c><00:04:35.360><c> of</c><00:04:35.520><c> word</c>

00:04:35.830 --> 00:04:35.840 align:start position:0%
statement that the max size of word
 

00:04:35.840 --> 00:04:36.550 align:start position:0%
statement that the max size of word
dictionary

00:04:36.550 --> 00:04:36.560 align:start position:0%
dictionary
 

00:04:36.560 --> 00:04:39.350 align:start position:0%
dictionary
is<00:04:36.720><c> going</c><00:04:36.880><c> to</c><00:04:36.960><c> be</c><00:04:37.280><c> smaller</c><00:04:38.080><c> than</c><00:04:38.240><c> the</c><00:04:38.479><c> max</c><00:04:38.800><c> size</c>

00:04:39.350 --> 00:04:39.360 align:start position:0%
is going to be smaller than the max size
 

00:04:39.360 --> 00:04:41.350 align:start position:0%
is going to be smaller than the max size
of<00:04:39.520><c> the</c><00:04:39.759><c> string</c><00:04:40.160><c> so</c><00:04:40.400><c> this</c><00:04:40.639><c> is</c><00:04:40.800><c> overall</c>

00:04:41.350 --> 00:04:41.360 align:start position:0%
of the string so this is overall
 

00:04:41.360 --> 00:04:43.270 align:start position:0%
of the string so this is overall
probably<00:04:41.840><c> going</c><00:04:42.000><c> to</c><00:04:42.080><c> be</c><00:04:42.240><c> more</c><00:04:42.479><c> efficient</c>

00:04:43.270 --> 00:04:43.280 align:start position:0%
probably going to be more efficient
 

00:04:43.280 --> 00:04:44.950 align:start position:0%
probably going to be more efficient
now<00:04:43.440><c> this</c><00:04:43.759><c> isn't</c><00:04:44.000><c> going</c><00:04:44.160><c> to</c><00:04:44.320><c> be</c><00:04:44.479><c> the</c><00:04:44.639><c> overall</c>

00:04:44.950 --> 00:04:44.960 align:start position:0%
now this isn't going to be the overall
 

00:04:44.960 --> 00:04:46.390 align:start position:0%
now this isn't going to be the overall
time<00:04:45.199><c> complexity</c><00:04:45.680><c> we</c><00:04:45.840><c> are</c><00:04:46.000><c> actually</c><00:04:46.240><c> going</c><00:04:46.320><c> to</c>

00:04:46.390 --> 00:04:46.400 align:start position:0%
time complexity we are actually going to
 

00:04:46.400 --> 00:04:48.070 align:start position:0%
time complexity we are actually going to
multiply<00:04:46.880><c> it</c><00:04:47.040><c> by</c><00:04:47.280><c> another</c>

00:04:48.070 --> 00:04:48.080 align:start position:0%
multiply it by another
 

00:04:48.080 --> 00:04:49.909 align:start position:0%
multiply it by another
n<00:04:48.560><c> because</c><00:04:48.880><c> when</c><00:04:49.040><c> we're</c><00:04:49.360><c> checking</c><00:04:49.759><c> for</c>

00:04:49.909 --> 00:04:49.919 align:start position:0%
n because when we're checking for
 

00:04:49.919 --> 00:04:51.350 align:start position:0%
n because when we're checking for
example<00:04:50.320><c> you</c><00:04:50.400><c> know</c><00:04:50.639><c> this</c><00:04:50.960><c> brief</c>

00:04:51.350 --> 00:04:51.360 align:start position:0%
example you know this brief
 

00:04:51.360 --> 00:04:53.030 align:start position:0%
example you know this brief
this<00:04:51.600><c> string</c><00:04:52.080><c> when</c><00:04:52.240><c> we're</c><00:04:52.479><c> checking</c><00:04:52.800><c> does</c>

00:04:53.030 --> 00:04:53.040 align:start position:0%
this string when we're checking does
 

00:04:53.040 --> 00:04:54.710 align:start position:0%
this string when we're checking does
that<00:04:53.280><c> match</c><00:04:53.600><c> the</c><00:04:53.759><c> first</c><00:04:54.000><c> four</c><00:04:54.240><c> characters</c>

00:04:54.710 --> 00:04:54.720 align:start position:0%
that match the first four characters
 

00:04:54.720 --> 00:04:55.110 align:start position:0%
that match the first four characters
here

00:04:55.110 --> 00:04:55.120 align:start position:0%
here
 

00:04:55.120 --> 00:04:58.310 align:start position:0%
here
that's<00:04:55.520><c> also</c><00:04:55.919><c> a</c><00:04:56.400><c> end</c><00:04:56.720><c> time</c><00:04:57.040><c> operation</c><00:04:58.080><c> because</c>

00:04:58.310 --> 00:04:58.320 align:start position:0%
that's also a end time operation because
 

00:04:58.320 --> 00:04:59.590 align:start position:0%
that's also a end time operation because
it<00:04:58.400><c> could</c><00:04:58.639><c> you</c><00:04:58.720><c> know</c><00:04:58.880><c> potentially</c><00:04:59.280><c> be</c><00:04:59.440><c> the</c>

00:04:59.590 --> 00:04:59.600 align:start position:0%
it could you know potentially be the
 

00:04:59.600 --> 00:05:01.350 align:start position:0%
it could you know potentially be the
size<00:04:59.919><c> of</c><00:05:00.080><c> the</c><00:05:00.320><c> input</c><00:05:00.639><c> string</c><00:05:00.960><c> s</c>

00:05:01.350 --> 00:05:01.360 align:start position:0%
size of the input string s
 

00:05:01.360 --> 00:05:03.110 align:start position:0%
size of the input string s
so<00:05:01.680><c> this</c><00:05:02.000><c> is</c><00:05:02.160><c> basically</c><00:05:02.560><c> going</c><00:05:02.720><c> to</c><00:05:02.800><c> be</c><00:05:02.960><c> the</c>

00:05:03.110 --> 00:05:03.120 align:start position:0%
so this is basically going to be the
 

00:05:03.120 --> 00:05:05.110 align:start position:0%
so this is basically going to be the
overall<00:05:03.440><c> time</c><00:05:03.600><c> complexity</c><00:05:04.320><c> n</c><00:05:04.560><c> squared</c>

00:05:05.110 --> 00:05:05.120 align:start position:0%
overall time complexity n squared
 

00:05:05.120 --> 00:05:07.350 align:start position:0%
overall time complexity n squared
multiplied<00:05:05.759><c> by</c><00:05:06.080><c> m</c><00:05:06.639><c> so</c><00:05:06.880><c> i'm</c><00:05:06.960><c> just</c><00:05:07.199><c> going</c><00:05:07.280><c> to</c>

00:05:07.350 --> 00:05:07.360 align:start position:0%
multiplied by m so i'm just going to
 

00:05:07.360 --> 00:05:09.270 align:start position:0%
multiplied by m so i'm just going to
basically<00:05:07.840><c> show</c><00:05:08.000><c> you</c><00:05:08.160><c> the</c><00:05:08.320><c> same</c><00:05:08.639><c> formula</c><00:05:09.120><c> that</c>

00:05:09.270 --> 00:05:09.280 align:start position:0%
basically show you the same formula that
 

00:05:09.280 --> 00:05:10.710 align:start position:0%
basically show you the same formula that
i<00:05:09.360><c> usually</c><00:05:09.680><c> do</c><00:05:09.919><c> i'm</c><00:05:10.000><c> going</c><00:05:10.080><c> to</c><00:05:10.240><c> give</c><00:05:10.400><c> you</c><00:05:10.560><c> a</c>

00:05:10.710 --> 00:05:10.720 align:start position:0%
i usually do i'm going to give you a
 

00:05:10.720 --> 00:05:12.629 align:start position:0%
i usually do i'm going to give you a
quick<00:05:10.960><c> illustration</c><00:05:11.759><c> of</c><00:05:11.919><c> what</c><00:05:12.080><c> the</c><00:05:12.240><c> decision</c>

00:05:12.629 --> 00:05:12.639 align:start position:0%
quick illustration of what the decision
 

00:05:12.639 --> 00:05:14.230 align:start position:0%
quick illustration of what the decision
tree<00:05:12.880><c> would</c><00:05:13.039><c> look</c><00:05:13.280><c> like</c><00:05:13.520><c> then</c><00:05:13.759><c> we're</c><00:05:13.919><c> going</c><00:05:14.080><c> to</c>

00:05:14.230 --> 00:05:14.240 align:start position:0%
tree would look like then we're going to
 

00:05:14.240 --> 00:05:15.430 align:start position:0%
tree would look like then we're going to
understand<00:05:14.800><c> how</c><00:05:14.960><c> we</c><00:05:15.120><c> could</c>

00:05:15.430 --> 00:05:15.440 align:start position:0%
understand how we could
 

00:05:15.440 --> 00:05:18.469 align:start position:0%
understand how we could
cache<00:05:15.840><c> that</c><00:05:16.720><c> to</c><00:05:17.120><c> eliminate</c><00:05:17.600><c> repeated</c><00:05:18.080><c> work</c>

00:05:18.469 --> 00:05:18.479 align:start position:0%
cache that to eliminate repeated work
 

00:05:18.479 --> 00:05:19.990 align:start position:0%
cache that to eliminate repeated work
and<00:05:18.560><c> then</c><00:05:18.720><c> by</c><00:05:18.960><c> understanding</c><00:05:19.520><c> that</c><00:05:19.840><c> we're</c>

00:05:19.990 --> 00:05:20.000 align:start position:0%
and then by understanding that we're
 

00:05:20.000 --> 00:05:21.830 align:start position:0%
and then by understanding that we're
going<00:05:20.160><c> to</c><00:05:20.240><c> go</c><00:05:20.479><c> to</c><00:05:20.720><c> the</c><00:05:20.960><c> optimal</c>

00:05:21.830 --> 00:05:21.840 align:start position:0%
going to go to the optimal
 

00:05:21.840 --> 00:05:24.070 align:start position:0%
going to go to the optimal
dynamic<00:05:22.400><c> programming</c><00:05:22.880><c> solution</c><00:05:23.360><c> the</c><00:05:23.600><c> bottom</c>

00:05:24.070 --> 00:05:24.080 align:start position:0%
dynamic programming solution the bottom
 

00:05:24.080 --> 00:05:25.749 align:start position:0%
dynamic programming solution the bottom
up<00:05:24.320><c> approach</c><00:05:24.800><c> and</c><00:05:24.960><c> then</c><00:05:25.199><c> we're</c><00:05:25.360><c> going</c><00:05:25.440><c> to</c><00:05:25.520><c> code</c>

00:05:25.749 --> 00:05:25.759 align:start position:0%
up approach and then we're going to code
 

00:05:25.759 --> 00:05:27.830 align:start position:0%
up approach and then we're going to code
that<00:05:26.000><c> up</c><00:05:26.160><c> usually</c><00:05:26.560><c> the</c><00:05:26.720><c> dp</c><00:05:27.120><c> solution</c>

00:05:27.830 --> 00:05:27.840 align:start position:0%
that up usually the dp solution
 

00:05:27.840 --> 00:05:30.950 align:start position:0%
that up usually the dp solution
is<00:05:28.080><c> a</c><00:05:28.560><c> lot</c><00:05:28.880><c> less</c><00:05:29.199><c> code</c><00:05:29.600><c> than</c><00:05:29.840><c> caching</c><00:05:30.639><c> so</c><00:05:30.800><c> we're</c>

00:05:30.950 --> 00:05:30.960 align:start position:0%
is a lot less code than caching so we're
 

00:05:30.960 --> 00:05:32.710 align:start position:0%
is a lot less code than caching so we're
going<00:05:31.039><c> to</c><00:05:31.120><c> be</c><00:05:31.280><c> looking</c><00:05:31.600><c> at</c><00:05:31.840><c> our</c><00:05:32.000><c> input</c><00:05:32.320><c> string</c>

00:05:32.710 --> 00:05:32.720 align:start position:0%
going to be looking at our input string
 

00:05:32.720 --> 00:05:33.590 align:start position:0%
going to be looking at our input string
neat<00:05:33.039><c> code</c>

00:05:33.590 --> 00:05:33.600 align:start position:0%
neat code
 

00:05:33.600 --> 00:05:34.870 align:start position:0%
neat code
so<00:05:33.759><c> i</c><00:05:33.840><c> think</c><00:05:34.000><c> that's</c><00:05:34.240><c> a</c><00:05:34.320><c> little</c><00:05:34.479><c> bit</c><00:05:34.639><c> better</c>

00:05:34.870 --> 00:05:34.880 align:start position:0%
so i think that's a little bit better
 

00:05:34.880 --> 00:05:37.029 align:start position:0%
so i think that's a little bit better
than<00:05:35.039><c> neat</c><00:05:35.280><c> code</c><00:05:35.520><c> wouldn't</c><00:05:35.759><c> you</c><00:05:36.000><c> say</c><00:05:36.320><c> so</c>

00:05:37.029 --> 00:05:37.039 align:start position:0%
than neat code wouldn't you say so
 

00:05:37.039 --> 00:05:39.110 align:start position:0%
than neat code wouldn't you say so
what<00:05:37.280><c> the</c><00:05:37.440><c> decision</c><00:05:37.840><c> tree</c><00:05:38.080><c> is</c><00:05:38.160><c> gonna</c><00:05:38.400><c> be</c><00:05:38.880><c> is</c>

00:05:39.110 --> 00:05:39.120 align:start position:0%
what the decision tree is gonna be is
 

00:05:39.120 --> 00:05:40.710 align:start position:0%
what the decision tree is gonna be is
we're<00:05:39.280><c> gonna</c><00:05:39.520><c> start</c><00:05:39.840><c> at</c><00:05:39.919><c> the</c><00:05:40.080><c> first</c><00:05:40.320><c> position</c>

00:05:40.710 --> 00:05:40.720 align:start position:0%
we're gonna start at the first position
 

00:05:40.720 --> 00:05:41.990 align:start position:0%
we're gonna start at the first position
right<00:05:40.880><c> for</c><00:05:41.039><c> example</c><00:05:41.520><c> i</c>

00:05:41.990 --> 00:05:42.000 align:start position:0%
right for example i
 

00:05:42.000 --> 00:05:43.990 align:start position:0%
right for example i
equals<00:05:42.639><c> zero</c><00:05:42.960><c> we're</c><00:05:43.120><c> gonna</c><00:05:43.280><c> be</c><00:05:43.440><c> keeping</c><00:05:43.759><c> track</c>

00:05:43.990 --> 00:05:44.000 align:start position:0%
equals zero we're gonna be keeping track
 

00:05:44.000 --> 00:05:45.670 align:start position:0%
equals zero we're gonna be keeping track
of<00:05:44.080><c> whatever</c><00:05:44.560><c> index</c><00:05:44.960><c> we're</c><00:05:45.199><c> at</c><00:05:45.280><c> right</c><00:05:45.520><c> because</c>

00:05:45.670 --> 00:05:45.680 align:start position:0%
of whatever index we're at right because
 

00:05:45.680 --> 00:05:47.670 align:start position:0%
of whatever index we're at right because
we<00:05:45.840><c> know</c><00:05:46.000><c> that</c><00:05:46.160><c> if</c><00:05:46.320><c> we</c><00:05:46.479><c> can</c><00:05:46.639><c> find</c><00:05:46.960><c> a</c><00:05:47.199><c> word</c>

00:05:47.670 --> 00:05:47.680 align:start position:0%
we know that if we can find a word
 

00:05:47.680 --> 00:05:49.590 align:start position:0%
we know that if we can find a word
you<00:05:47.759><c> know</c><00:05:47.919><c> that</c><00:05:48.080><c> matches</c><00:05:48.479><c> neat</c><00:05:48.800><c> for</c><00:05:48.960><c> example</c>

00:05:49.590 --> 00:05:49.600 align:start position:0%
you know that matches neat for example
 

00:05:49.600 --> 00:05:51.430 align:start position:0%
you know that matches neat for example
then<00:05:49.840><c> the</c><00:05:50.000><c> sub</c><00:05:50.240><c> problem</c><00:05:50.560><c> is</c><00:05:50.720><c> gonna</c><00:05:50.880><c> be</c>

00:05:51.430 --> 00:05:51.440 align:start position:0%
then the sub problem is gonna be
 

00:05:51.440 --> 00:05:53.670 align:start position:0%
then the sub problem is gonna be
you<00:05:51.520><c> know</c><00:05:51.759><c> finding</c><00:05:52.800><c> words</c><00:05:53.120><c> that</c><00:05:53.280><c> can</c><00:05:53.440><c> match</c>

00:05:53.670 --> 00:05:53.680 align:start position:0%
you know finding words that can match
 

00:05:53.680 --> 00:05:55.350 align:start position:0%
you know finding words that can match
the<00:05:53.840><c> remainder</c><00:05:54.240><c> of</c><00:05:54.320><c> the</c><00:05:54.479><c> string</c><00:05:54.800><c> for</c><00:05:54.960><c> example</c>

00:05:55.350 --> 00:05:55.360 align:start position:0%
the remainder of the string for example
 

00:05:55.360 --> 00:05:56.150 align:start position:0%
the remainder of the string for example
if<00:05:55.440><c> we</c><00:05:55.600><c> did</c><00:05:55.840><c> that</c>

00:05:56.150 --> 00:05:56.160 align:start position:0%
if we did that
 

00:05:56.160 --> 00:05:58.230 align:start position:0%
if we did that
our<00:05:56.400><c> i</c><00:05:56.720><c> instead</c><00:05:56.960><c> of</c><00:05:57.120><c> starting</c><00:05:57.440><c> at</c><00:05:57.600><c> index</c><00:05:57.919><c> zero</c>

00:05:58.230 --> 00:05:58.240 align:start position:0%
our i instead of starting at index zero
 

00:05:58.240 --> 00:05:59.590 align:start position:0%
our i instead of starting at index zero
would<00:05:58.400><c> basically</c><00:05:58.800><c> be</c><00:05:58.960><c> starting</c><00:05:59.280><c> at</c>

00:05:59.590 --> 00:05:59.600 align:start position:0%
would basically be starting at
 

00:05:59.600 --> 00:06:01.830 align:start position:0%
would basically be starting at
index<00:06:00.400><c> four</c><00:06:00.960><c> right</c><00:06:01.120><c> so</c><00:06:01.280><c> that's</c><00:06:01.440><c> kind</c><00:06:01.600><c> of</c><00:06:01.680><c> what</c>

00:06:01.830 --> 00:06:01.840 align:start position:0%
index four right so that's kind of what
 

00:06:01.840 --> 00:06:03.590 align:start position:0%
index four right so that's kind of what
this<00:06:02.160><c> that's</c><00:06:02.319><c> what</c><00:06:02.479><c> the</c><00:06:02.720><c> sub</c><00:06:03.039><c> problem</c><00:06:03.440><c> is</c>

00:06:03.590 --> 00:06:03.600 align:start position:0%
this that's what the sub problem is
 

00:06:03.600 --> 00:06:04.390 align:start position:0%
this that's what the sub problem is
going<00:06:03.840><c> to</c><00:06:04.000><c> be</c>

00:06:04.390 --> 00:06:04.400 align:start position:0%
going to be
 

00:06:04.400 --> 00:06:06.150 align:start position:0%
going to be
so<00:06:04.560><c> really</c><00:06:04.880><c> we're</c><00:06:05.039><c> only</c><00:06:05.280><c> going</c><00:06:05.360><c> to</c><00:06:05.440><c> have</c><00:06:05.680><c> one</c>

00:06:06.150 --> 00:06:06.160 align:start position:0%
so really we're only going to have one
 

00:06:06.160 --> 00:06:07.990 align:start position:0%
so really we're only going to have one
variable<00:06:06.639><c> that</c><00:06:06.800><c> we're</c><00:06:06.960><c> keeping</c><00:06:07.360><c> track</c><00:06:07.680><c> of</c>

00:06:07.990 --> 00:06:08.000 align:start position:0%
variable that we're keeping track of
 

00:06:08.000 --> 00:06:10.550 align:start position:0%
variable that we're keeping track of
in<00:06:08.240><c> this</c><00:06:08.560><c> backtracking</c><00:06:09.280><c> solution</c><00:06:10.160><c> and</c><00:06:10.319><c> so</c>

00:06:10.550 --> 00:06:10.560 align:start position:0%
in this backtracking solution and so
 

00:06:10.560 --> 00:06:11.909 align:start position:0%
in this backtracking solution and so
remember<00:06:11.039><c> we</c><00:06:11.280><c> mentioned</c>

00:06:11.909 --> 00:06:11.919 align:start position:0%
remember we mentioned
 

00:06:11.919 --> 00:06:13.590 align:start position:0%
remember we mentioned
we're<00:06:12.240><c> not</c><00:06:12.400><c> going</c><00:06:12.479><c> to</c><00:06:12.560><c> be</c><00:06:12.720><c> doing</c><00:06:13.039><c> it</c><00:06:13.199><c> like</c><00:06:13.440><c> this</c>

00:06:13.590 --> 00:06:13.600 align:start position:0%
we're not going to be doing it like this
 

00:06:13.600 --> 00:06:14.870 align:start position:0%
we're not going to be doing it like this
we're<00:06:13.759><c> not</c><00:06:13.919><c> going</c><00:06:14.000><c> to</c><00:06:14.080><c> check</c><00:06:14.319><c> every</c><00:06:14.560><c> single</c>

00:06:14.870 --> 00:06:14.880 align:start position:0%
we're not going to check every single
 

00:06:14.880 --> 00:06:15.590 align:start position:0%
we're not going to check every single
prefix

00:06:15.590 --> 00:06:15.600 align:start position:0%
prefix
 

00:06:15.600 --> 00:06:17.189 align:start position:0%
prefix
we're<00:06:15.759><c> going</c><00:06:15.919><c> to</c><00:06:16.000><c> have</c><00:06:16.240><c> decisions</c><00:06:16.960><c> in</c><00:06:17.039><c> our</c>

00:06:17.189 --> 00:06:17.199 align:start position:0%
we're going to have decisions in our
 

00:06:17.199 --> 00:06:19.189 align:start position:0%
we're going to have decisions in our
decision<00:06:17.600><c> tree</c><00:06:17.840><c> based</c><00:06:18.160><c> on</c><00:06:18.319><c> the</c><00:06:18.560><c> number</c><00:06:18.960><c> of</c>

00:06:19.189 --> 00:06:19.199 align:start position:0%
decision tree based on the number of
 

00:06:19.199 --> 00:06:21.350 align:start position:0%
decision tree based on the number of
words<00:06:19.600><c> that</c><00:06:19.680><c> are</c><00:06:19.840><c> in</c><00:06:20.000><c> the</c><00:06:20.080><c> word</c><00:06:20.400><c> dictionary</c><00:06:20.960><c> so</c>

00:06:21.350 --> 00:06:21.360 align:start position:0%
words that are in the word dictionary so
 

00:06:21.360 --> 00:06:24.469 align:start position:0%
words that are in the word dictionary so
we're<00:06:21.520><c> going</c><00:06:21.680><c> to</c><00:06:21.759><c> have</c><00:06:22.400><c> a</c><00:06:22.639><c> decision</c><00:06:23.199><c> for</c><00:06:23.680><c> neat</c>

00:06:24.469 --> 00:06:24.479 align:start position:0%
we're going to have a decision for neat
 

00:06:24.479 --> 00:06:26.790 align:start position:0%
we're going to have a decision for neat
we're<00:06:24.639><c> going</c><00:06:24.720><c> to</c><00:06:24.800><c> have</c><00:06:25.039><c> a</c><00:06:25.120><c> decision</c><00:06:25.680><c> for</c><00:06:25.840><c> elite</c>

00:06:26.790 --> 00:06:26.800 align:start position:0%
we're going to have a decision for elite
 

00:06:26.800 --> 00:06:28.469 align:start position:0%
we're going to have a decision for elite
and<00:06:26.960><c> we're</c><00:06:27.120><c> going</c><00:06:27.199><c> to</c><00:06:27.280><c> have</c><00:06:27.440><c> a</c><00:06:27.600><c> decision</c><00:06:28.080><c> for</c>

00:06:28.469 --> 00:06:28.479 align:start position:0%
and we're going to have a decision for
 

00:06:28.479 --> 00:06:30.710 align:start position:0%
and we're going to have a decision for
code<00:06:29.280><c> now</c><00:06:29.759><c> what</c><00:06:29.919><c> we're</c><00:06:30.080><c> going</c><00:06:30.160><c> to</c><00:06:30.240><c> notice</c><00:06:30.639><c> is</c>

00:06:30.710 --> 00:06:30.720 align:start position:0%
code now what we're going to notice is
 

00:06:30.720 --> 00:06:32.230 align:start position:0%
code now what we're going to notice is
when<00:06:30.880><c> we</c><00:06:31.039><c> try</c><00:06:31.360><c> elite</c><00:06:31.759><c> on</c><00:06:31.919><c> here</c>

00:06:32.230 --> 00:06:32.240 align:start position:0%
when we try elite on here
 

00:06:32.240 --> 00:06:34.309 align:start position:0%
when we try elite on here
right<00:06:32.639><c> basically</c><00:06:33.360><c> is</c><00:06:33.520><c> four</c><00:06:33.840><c> characters</c>

00:06:34.309 --> 00:06:34.319 align:start position:0%
right basically is four characters
 

00:06:34.319 --> 00:06:35.749 align:start position:0%
right basically is four characters
therefore<00:06:34.720><c> we're</c><00:06:34.880><c> going</c><00:06:34.960><c> to</c><00:06:35.039><c> check</c><00:06:35.199><c> the</c><00:06:35.440><c> first</c>

00:06:35.749 --> 00:06:35.759 align:start position:0%
therefore we're going to check the first
 

00:06:35.759 --> 00:06:36.870 align:start position:0%
therefore we're going to check the first
four<00:06:36.000><c> characters</c><00:06:36.400><c> of</c><00:06:36.560><c> here</c>

00:06:36.870 --> 00:06:36.880 align:start position:0%
four characters of here
 

00:06:36.880 --> 00:06:38.870 align:start position:0%
four characters of here
compare<00:06:37.280><c> it</c><00:06:37.440><c> does</c><00:06:37.600><c> that</c><00:06:37.840><c> match</c><00:06:38.160><c> lee</c><00:06:38.560><c> it</c><00:06:38.639><c> does</c>

00:06:38.870 --> 00:06:38.880 align:start position:0%
compare it does that match lee it does
 

00:06:38.880 --> 00:06:40.629 align:start position:0%
compare it does that match lee it does
not<00:06:39.120><c> right</c><00:06:39.280><c> we're</c><00:06:39.440><c> just</c><00:06:39.600><c> one</c><00:06:39.840><c> character</c><00:06:40.319><c> off</c>

00:06:40.629 --> 00:06:40.639 align:start position:0%
not right we're just one character off
 

00:06:40.639 --> 00:06:43.270 align:start position:0%
not right we're just one character off
that<00:06:40.800><c> first</c><00:06:41.199><c> one</c><00:06:41.680><c> so</c><00:06:42.160><c> basically</c><00:06:42.800><c> that</c><00:06:43.039><c> means</c>

00:06:43.270 --> 00:06:43.280 align:start position:0%
that first one so basically that means
 

00:06:43.280 --> 00:06:44.629 align:start position:0%
that first one so basically that means
we're<00:06:43.440><c> not</c><00:06:43.600><c> going</c><00:06:43.759><c> to</c><00:06:43.840><c> continue</c><00:06:44.240><c> down</c><00:06:44.400><c> this</c>

00:06:44.629 --> 00:06:44.639 align:start position:0%
we're not going to continue down this
 

00:06:44.639 --> 00:06:46.629 align:start position:0%
we're not going to continue down this
path<00:06:44.960><c> now</c><00:06:45.120><c> let's</c><00:06:45.360><c> try</c><00:06:45.680><c> code</c><00:06:45.919><c> does</c><00:06:46.160><c> code</c><00:06:46.400><c> match</c>

00:06:46.629 --> 00:06:46.639 align:start position:0%
path now let's try code does code match
 

00:06:46.639 --> 00:06:48.390 align:start position:0%
path now let's try code does code match
the<00:06:46.720><c> first</c><00:06:46.960><c> four</c><00:06:47.199><c> characters</c><00:06:47.759><c> definitely</c><00:06:48.240><c> not</c>

00:06:48.390 --> 00:06:48.400 align:start position:0%
the first four characters definitely not
 

00:06:48.400 --> 00:06:49.430 align:start position:0%
the first four characters definitely not
so<00:06:48.560><c> we're</c><00:06:48.720><c> not</c><00:06:48.880><c> even</c><00:06:49.039><c> gonna</c>

00:06:49.430 --> 00:06:49.440 align:start position:0%
so we're not even gonna
 

00:06:49.440 --> 00:06:51.670 align:start position:0%
so we're not even gonna
continue<00:06:49.840><c> down</c><00:06:50.080><c> this</c><00:06:50.240><c> path</c><00:06:50.479><c> either</c><00:06:50.880><c> of</c><00:06:51.039><c> course</c>

00:06:51.670 --> 00:06:51.680 align:start position:0%
continue down this path either of course
 

00:06:51.680 --> 00:06:52.469 align:start position:0%
continue down this path either of course
neat

00:06:52.469 --> 00:06:52.479 align:start position:0%
neat
 

00:06:52.479 --> 00:06:55.270 align:start position:0%
neat
does<00:06:52.880><c> match</c><00:06:53.520><c> this</c><00:06:54.000><c> so</c><00:06:54.240><c> we</c><00:06:54.479><c> are</c><00:06:54.560><c> gonna</c><00:06:54.800><c> continue</c>

00:06:55.270 --> 00:06:55.280 align:start position:0%
does match this so we are gonna continue
 

00:06:55.280 --> 00:06:55.990 align:start position:0%
does match this so we are gonna continue
down<00:06:55.599><c> here</c>

00:06:55.990 --> 00:06:56.000 align:start position:0%
down here
 

00:06:56.000 --> 00:06:58.390 align:start position:0%
down here
we're<00:06:56.160><c> gonna</c><00:06:56.560><c> do</c><00:06:56.880><c> three</c><00:06:57.280><c> more</c><00:06:57.520><c> decisions</c>

00:06:58.390 --> 00:06:58.400 align:start position:0%
we're gonna do three more decisions
 

00:06:58.400 --> 00:06:59.510 align:start position:0%
we're gonna do three more decisions
basically<00:06:58.960><c> one</c><00:06:59.199><c> for</c>

00:06:59.510 --> 00:06:59.520 align:start position:0%
basically one for
 

00:06:59.520 --> 00:07:01.749 align:start position:0%
basically one for
every<00:06:59.680><c> single</c><00:07:00.080><c> word</c><00:07:00.400><c> in</c><00:07:00.560><c> our</c><00:07:00.720><c> word</c><00:07:00.960><c> dictionary</c>

00:07:01.749 --> 00:07:01.759 align:start position:0%
every single word in our word dictionary
 

00:07:01.759 --> 00:07:02.870 align:start position:0%
every single word in our word dictionary
now<00:07:02.080><c> one</c><00:07:02.319><c> thing</c><00:07:02.560><c> though</c>

00:07:02.870 --> 00:07:02.880 align:start position:0%
now one thing though
 

00:07:02.880 --> 00:07:04.950 align:start position:0%
now one thing though
is<00:07:03.120><c> when</c><00:07:03.360><c> we</c><00:07:03.520><c> are</c><00:07:03.840><c> starting</c><00:07:04.319><c> here</c><00:07:04.479><c> we</c><00:07:04.639><c> know</c><00:07:04.800><c> we</c>

00:07:04.950 --> 00:07:04.960 align:start position:0%
is when we are starting here we know we
 

00:07:04.960 --> 00:07:07.029 align:start position:0%
is when we are starting here we know we
match<00:07:05.360><c> the</c><00:07:05.520><c> first</c><00:07:05.840><c> four</c><00:07:06.080><c> characters</c><00:07:06.560><c> so</c><00:07:06.800><c> by</c>

00:07:07.029 --> 00:07:07.039 align:start position:0%
match the first four characters so by
 

00:07:07.039 --> 00:07:08.790 align:start position:0%
match the first four characters so by
this<00:07:07.360><c> point</c><00:07:07.680><c> we</c><00:07:07.840><c> are</c><00:07:08.000><c> now</c><00:07:08.240><c> going</c><00:07:08.400><c> to</c><00:07:08.479><c> be</c>

00:07:08.790 --> 00:07:08.800 align:start position:0%
this point we are now going to be
 

00:07:08.800 --> 00:07:10.710 align:start position:0%
this point we are now going to be
at<00:07:09.039><c> i</c><00:07:09.440><c> equals</c><00:07:09.840><c> four</c><00:07:10.160><c> meaning</c><00:07:10.400><c> we're</c><00:07:10.560><c> going</c><00:07:10.639><c> to</c>

00:07:10.710 --> 00:07:10.720 align:start position:0%
at i equals four meaning we're going to
 

00:07:10.720 --> 00:07:12.070 align:start position:0%
at i equals four meaning we're going to
be<00:07:10.880><c> looking</c><00:07:11.280><c> at</c><00:07:11.680><c> this</c>

00:07:12.070 --> 00:07:12.080 align:start position:0%
be looking at this
 

00:07:12.080 --> 00:07:14.790 align:start position:0%
be looking at this
part<00:07:12.400><c> of</c><00:07:12.560><c> the</c><00:07:12.720><c> string</c><00:07:13.680><c> so</c><00:07:13.919><c> as</c><00:07:14.080><c> we</c><00:07:14.240><c> can</c><00:07:14.400><c> see</c>

00:07:14.790 --> 00:07:14.800 align:start position:0%
part of the string so as we can see
 

00:07:14.800 --> 00:07:16.469 align:start position:0%
part of the string so as we can see
checking<00:07:15.280><c> neat</c><00:07:15.599><c> that's</c><00:07:15.840><c> four</c><00:07:16.080><c> characters</c>

00:07:16.469 --> 00:07:16.479 align:start position:0%
checking neat that's four characters
 

00:07:16.479 --> 00:07:17.749 align:start position:0%
checking neat that's four characters
long<00:07:16.720><c> so</c><00:07:16.880><c> let's</c><00:07:17.120><c> check</c>

00:07:17.749 --> 00:07:17.759 align:start position:0%
long so let's check
 

00:07:17.759 --> 00:07:20.150 align:start position:0%
long so let's check
four<00:07:18.160><c> characters</c><00:07:18.960><c> starting</c><00:07:19.360><c> from</c><00:07:19.599><c> here</c>

00:07:20.150 --> 00:07:20.160 align:start position:0%
four characters starting from here
 

00:07:20.160 --> 00:07:21.830 align:start position:0%
four characters starting from here
that's<00:07:20.479><c> not</c><00:07:20.720><c> matching</c><00:07:21.120><c> of</c><00:07:21.199><c> course</c><00:07:21.440><c> so</c><00:07:21.680><c> then</c>

00:07:21.830 --> 00:07:21.840 align:start position:0%
that's not matching of course so then
 

00:07:21.840 --> 00:07:23.189 align:start position:0%
that's not matching of course so then
we're<00:07:22.000><c> not</c><00:07:22.080><c> going</c><00:07:22.160><c> to</c><00:07:22.240><c> continue</c><00:07:22.639><c> here</c><00:07:22.880><c> lee</c>

00:07:23.189 --> 00:07:23.199 align:start position:0%
we're not going to continue here lee
 

00:07:23.199 --> 00:07:24.790 align:start position:0%
we're not going to continue here lee
does<00:07:23.360><c> that</c><00:07:23.520><c> match</c><00:07:23.840><c> over</c><00:07:24.000><c> here</c><00:07:24.240><c> nope</c><00:07:24.479><c> we're</c><00:07:24.639><c> not</c>

00:07:24.790 --> 00:07:24.800 align:start position:0%
does that match over here nope we're not
 

00:07:24.800 --> 00:07:26.390 align:start position:0%
does that match over here nope we're not
continue<00:07:25.280><c> down</c><00:07:25.520><c> this</c><00:07:25.759><c> path</c>

00:07:26.390 --> 00:07:26.400 align:start position:0%
continue down this path
 

00:07:26.400 --> 00:07:29.029 align:start position:0%
continue down this path
code<00:07:26.960><c> does</c><00:07:27.199><c> code</c><00:07:27.599><c> match</c><00:07:27.840><c> this</c><00:07:28.160><c> portion</c><00:07:28.560><c> yes</c><00:07:28.800><c> it</c>

00:07:29.029 --> 00:07:29.039 align:start position:0%
code does code match this portion yes it
 

00:07:29.039 --> 00:07:30.150 align:start position:0%
code does code match this portion yes it
exactly<00:07:29.520><c> matches</c>

00:07:30.150 --> 00:07:30.160 align:start position:0%
exactly matches
 

00:07:30.160 --> 00:07:32.309 align:start position:0%
exactly matches
so<00:07:30.400><c> therefore</c><00:07:31.120><c> we</c><00:07:31.280><c> are</c><00:07:31.440><c> going</c><00:07:31.520><c> to</c><00:07:31.680><c> update</c><00:07:32.080><c> our</c>

00:07:32.309 --> 00:07:32.319 align:start position:0%
so therefore we are going to update our
 

00:07:32.319 --> 00:07:34.469 align:start position:0%
so therefore we are going to update our
i<00:07:32.560><c> pointer</c><00:07:33.039><c> again</c><00:07:33.360><c> since</c><00:07:33.599><c> we</c><00:07:33.759><c> matched</c><00:07:34.160><c> four</c>

00:07:34.469 --> 00:07:34.479 align:start position:0%
i pointer again since we matched four
 

00:07:34.479 --> 00:07:35.430 align:start position:0%
i pointer again since we matched four
more<00:07:34.800><c> characters</c>

00:07:35.430 --> 00:07:35.440 align:start position:0%
more characters
 

00:07:35.440 --> 00:07:38.070 align:start position:0%
more characters
we're<00:07:35.599><c> just</c><00:07:35.759><c> gonna</c><00:07:36.000><c> take</c><00:07:36.319><c> i</c><00:07:36.880><c> and</c><00:07:37.199><c> add</c><00:07:37.599><c> four</c><00:07:37.840><c> to</c>

00:07:38.070 --> 00:07:38.080 align:start position:0%
we're just gonna take i and add four to
 

00:07:38.080 --> 00:07:38.950 align:start position:0%
we're just gonna take i and add four to
it<00:07:38.240><c> now</c>

00:07:38.950 --> 00:07:38.960 align:start position:0%
it now
 

00:07:38.960 --> 00:07:42.309 align:start position:0%
it now
so<00:07:39.120><c> now</c><00:07:39.440><c> i</c><00:07:39.919><c> is</c><00:07:40.080><c> going</c><00:07:40.240><c> to</c><00:07:40.479><c> be</c><00:07:40.960><c> at</c><00:07:41.599><c> eight</c>

00:07:42.309 --> 00:07:42.319 align:start position:0%
so now i is going to be at eight
 

00:07:42.319 --> 00:07:45.270 align:start position:0%
so now i is going to be at eight
and<00:07:42.880><c> eight</c><00:07:43.199><c> happens</c><00:07:43.599><c> to</c><00:07:43.759><c> be</c><00:07:44.000><c> that</c><00:07:44.240><c> exact</c>

00:07:45.270 --> 00:07:45.280 align:start position:0%
and eight happens to be that exact
 

00:07:45.280 --> 00:07:46.390 align:start position:0%
and eight happens to be that exact
position

00:07:46.390 --> 00:07:46.400 align:start position:0%
position
 

00:07:46.400 --> 00:07:48.390 align:start position:0%
position
right<00:07:46.879><c> after</c><00:07:47.280><c> the</c><00:07:47.520><c> end</c><00:07:47.680><c> of</c><00:07:47.759><c> the</c><00:07:47.919><c> string</c><00:07:48.160><c> right</c>

00:07:48.390 --> 00:07:48.400 align:start position:0%
right after the end of the string right
 

00:07:48.400 --> 00:07:49.830 align:start position:0%
right after the end of the string right
this<00:07:48.560><c> is</c><00:07:48.720><c> where</c><00:07:49.360><c> index</c>

00:07:49.830 --> 00:07:49.840 align:start position:0%
this is where index
 

00:07:49.840 --> 00:07:52.390 align:start position:0%
this is where index
8<00:07:50.160><c> is</c><00:07:50.400><c> therefore</c><00:07:51.199><c> we</c><00:07:51.360><c> basically</c><00:07:51.840><c> know</c><00:07:52.080><c> that</c><00:07:52.240><c> we</c>

00:07:52.390 --> 00:07:52.400 align:start position:0%
8 is therefore we basically know that we
 

00:07:52.400 --> 00:07:53.350 align:start position:0%
8 is therefore we basically know that we
were<00:07:52.720><c> able</c><00:07:53.039><c> to</c>

00:07:53.350 --> 00:07:53.360 align:start position:0%
were able to
 

00:07:53.360 --> 00:07:55.670 align:start position:0%
were able to
match<00:07:53.840><c> the</c><00:07:54.080><c> entire</c><00:07:54.479><c> string</c><00:07:55.039><c> therefore</c><00:07:55.520><c> we</c>

00:07:55.670 --> 00:07:55.680 align:start position:0%
match the entire string therefore we
 

00:07:55.680 --> 00:07:57.510 align:start position:0%
match the entire string therefore we
know<00:07:55.919><c> we</c><00:07:56.080><c> can</c><00:07:56.160><c> return</c><00:07:56.639><c> true</c><00:07:56.879><c> right</c><00:07:57.120><c> once</c><00:07:57.360><c> we</c>

00:07:57.510 --> 00:07:57.520 align:start position:0%
know we can return true right once we
 

00:07:57.520 --> 00:07:58.950 align:start position:0%
know we can return true right once we
find<00:07:57.840><c> a</c><00:07:58.000><c> single</c><00:07:58.479><c> true</c>

00:07:58.950 --> 00:07:58.960 align:start position:0%
find a single true
 

00:07:58.960 --> 00:08:01.350 align:start position:0%
find a single true
that<00:07:59.120><c> means</c><00:07:59.360><c> we</c><00:07:59.520><c> just</c><00:07:59.759><c> terminate</c><00:08:00.240><c> we</c><00:08:00.560><c> end</c><00:08:01.120><c> the</c>

00:08:01.350 --> 00:08:01.360 align:start position:0%
that means we just terminate we end the
 

00:08:01.360 --> 00:08:02.710 align:start position:0%
that means we just terminate we end the
function<00:08:01.759><c> we</c><00:08:01.840><c> can</c><00:08:02.000><c> just</c><00:08:02.240><c> call</c>

00:08:02.710 --> 00:08:02.720 align:start position:0%
function we can just call
 

00:08:02.720 --> 00:08:04.390 align:start position:0%
function we can just call
we<00:08:02.800><c> can</c><00:08:02.960><c> just</c><00:08:03.039><c> return</c><00:08:03.440><c> true</c><00:08:03.759><c> and</c><00:08:03.919><c> the</c><00:08:04.000><c> function</c>

00:08:04.390 --> 00:08:04.400 align:start position:0%
we can just return true and the function
 

00:08:04.400 --> 00:08:06.629 align:start position:0%
we can just return true and the function
is<00:08:04.639><c> done</c><00:08:05.199><c> now</c><00:08:05.360><c> from</c><00:08:05.680><c> this</c><00:08:05.919><c> example</c><00:08:06.319><c> it</c><00:08:06.479><c> might</c>

00:08:06.629 --> 00:08:06.639 align:start position:0%
is done now from this example it might
 

00:08:06.639 --> 00:08:08.710 align:start position:0%
is done now from this example it might
not<00:08:06.800><c> be</c><00:08:07.039><c> super</c><00:08:07.440><c> intuitive</c><00:08:08.000><c> why</c><00:08:08.160><c> we</c><00:08:08.319><c> would</c><00:08:08.560><c> use</c>

00:08:08.710 --> 00:08:08.720 align:start position:0%
not be super intuitive why we would use
 

00:08:08.720 --> 00:08:10.869 align:start position:0%
not be super intuitive why we would use
a<00:08:08.879><c> cache</c><00:08:09.199><c> but</c><00:08:09.360><c> let's</c><00:08:09.520><c> say</c><00:08:09.759><c> we</c><00:08:09.919><c> had</c><00:08:10.160><c> another</c>

00:08:10.869 --> 00:08:10.879 align:start position:0%
a cache but let's say we had another
 

00:08:10.879 --> 00:08:12.950 align:start position:0%
a cache but let's say we had another
path<00:08:11.199><c> in</c><00:08:11.360><c> our</c><00:08:11.440><c> decision</c><00:08:11.919><c> tree</c><00:08:12.160><c> that</c><00:08:12.319><c> led</c><00:08:12.560><c> us</c><00:08:12.720><c> to</c>

00:08:12.950 --> 00:08:12.960 align:start position:0%
path in our decision tree that led us to
 

00:08:12.960 --> 00:08:13.909 align:start position:0%
path in our decision tree that led us to
for<00:08:13.120><c> example</c>

00:08:13.909 --> 00:08:13.919 align:start position:0%
for example
 

00:08:13.919 --> 00:08:16.150 align:start position:0%
for example
index<00:08:14.400><c> i</c><00:08:14.800><c> equals</c><00:08:15.280><c> five</c><00:08:15.599><c> right</c><00:08:15.759><c> and</c><00:08:15.840><c> let's</c><00:08:16.000><c> say</c>

00:08:16.150 --> 00:08:16.160 align:start position:0%
index i equals five right and let's say
 

00:08:16.160 --> 00:08:18.309 align:start position:0%
index i equals five right and let's say
we<00:08:16.319><c> had</c><00:08:16.720><c> we</c><00:08:16.879><c> used</c><00:08:17.199><c> all</c><00:08:17.360><c> three</c><00:08:17.599><c> decisions</c>

00:08:18.309 --> 00:08:18.319 align:start position:0%
we had we used all three decisions
 

00:08:18.319 --> 00:08:20.790 align:start position:0%
we had we used all three decisions
in<00:08:18.400><c> that</c><00:08:18.720><c> path</c><00:08:19.360><c> and</c><00:08:19.520><c> let's</c><00:08:19.680><c> say</c><00:08:20.080><c> none</c><00:08:20.319><c> of</c><00:08:20.479><c> them</c>

00:08:20.790 --> 00:08:20.800 align:start position:0%
in that path and let's say none of them
 

00:08:20.800 --> 00:08:21.430 align:start position:0%
in that path and let's say none of them
yielded

00:08:21.430 --> 00:08:21.440 align:start position:0%
yielded
 

00:08:21.440 --> 00:08:23.270 align:start position:0%
yielded
the<00:08:21.680><c> correct</c><00:08:22.080><c> result</c><00:08:22.479><c> meaning</c><00:08:22.720><c> we</c><00:08:22.879><c> were</c><00:08:23.039><c> not</c>

00:08:23.270 --> 00:08:23.280 align:start position:0%
the correct result meaning we were not
 

00:08:23.280 --> 00:08:25.510 align:start position:0%
the correct result meaning we were not
able<00:08:23.520><c> to</c><00:08:23.840><c> word</c><00:08:24.160><c> break</c><00:08:24.560><c> this</c><00:08:24.800><c> string</c>

00:08:25.510 --> 00:08:25.520 align:start position:0%
able to word break this string
 

00:08:25.520 --> 00:08:27.589 align:start position:0%
able to word break this string
from<00:08:25.840><c> starting</c><00:08:26.240><c> at</c><00:08:26.400><c> index</c><00:08:26.800><c> five</c><00:08:27.120><c> so</c><00:08:27.280><c> then</c><00:08:27.520><c> we</c>

00:08:27.589 --> 00:08:27.599 align:start position:0%
from starting at index five so then we
 

00:08:27.599 --> 00:08:29.510 align:start position:0%
from starting at index five so then we
would<00:08:27.759><c> return</c><00:08:28.319><c> false</c><00:08:28.800><c> from</c><00:08:29.120><c> this</c>

00:08:29.510 --> 00:08:29.520 align:start position:0%
would return false from this
 

00:08:29.520 --> 00:08:31.270 align:start position:0%
would return false from this
path<00:08:29.840><c> right</c><00:08:30.080><c> and</c><00:08:30.160><c> we</c><00:08:30.319><c> would</c><00:08:30.479><c> want</c><00:08:30.639><c> to</c><00:08:30.879><c> cache</c>

00:08:31.270 --> 00:08:31.280 align:start position:0%
path right and we would want to cache
 

00:08:31.280 --> 00:08:33.190 align:start position:0%
path right and we would want to cache
that<00:08:31.599><c> we</c><00:08:31.759><c> would</c><00:08:32.000><c> want</c><00:08:32.240><c> to</c><00:08:32.479><c> say</c>

00:08:33.190 --> 00:08:33.200 align:start position:0%
that we would want to say
 

00:08:33.200 --> 00:08:36.230 align:start position:0%
that we would want to say
that<00:08:33.680><c> let's</c><00:08:33.919><c> say</c><00:08:34.159><c> dp</c><00:08:34.719><c> of</c><00:08:34.959><c> index</c><00:08:35.519><c> five</c><00:08:35.919><c> right</c><00:08:36.080><c> we</c>

00:08:36.230 --> 00:08:36.240 align:start position:0%
that let's say dp of index five right we
 

00:08:36.240 --> 00:08:37.589 align:start position:0%
that let's say dp of index five right we
would<00:08:36.399><c> want</c><00:08:36.560><c> to</c><00:08:36.719><c> set</c><00:08:36.959><c> that</c><00:08:37.279><c> to</c>

00:08:37.589 --> 00:08:37.599 align:start position:0%
would want to set that to
 

00:08:37.599 --> 00:08:39.909 align:start position:0%
would want to set that to
false<00:08:38.240><c> basically</c><00:08:38.959><c> what</c><00:08:39.120><c> we're</c><00:08:39.279><c> saying</c><00:08:39.519><c> is</c><00:08:39.599><c> if</c>

00:08:39.909 --> 00:08:39.919 align:start position:0%
false basically what we're saying is if
 

00:08:39.919 --> 00:08:40.709 align:start position:0%
false basically what we're saying is if
we<00:08:40.320><c> ever</c>

00:08:40.709 --> 00:08:40.719 align:start position:0%
we ever
 

00:08:40.719 --> 00:08:42.709 align:start position:0%
we ever
reached<00:08:41.279><c> this</c><00:08:41.599><c> same</c><00:08:41.919><c> function</c><00:08:42.320><c> call</c><00:08:42.479><c> if</c><00:08:42.560><c> we</c>

00:08:42.709 --> 00:08:42.719 align:start position:0%
reached this same function call if we
 

00:08:42.719 --> 00:08:44.550 align:start position:0%
reached this same function call if we
ever<00:08:42.959><c> tried</c><00:08:43.360><c> it</c><00:08:43.599><c> again</c><00:08:43.919><c> maybe</c><00:08:44.159><c> you</c><00:08:44.240><c> know</c><00:08:44.399><c> this</c>

00:08:44.550 --> 00:08:44.560 align:start position:0%
ever tried it again maybe you know this
 

00:08:44.560 --> 00:08:46.230 align:start position:0%
ever tried it again maybe you know this
decision<00:08:44.959><c> tree</c><00:08:45.200><c> could</c><00:08:45.360><c> be</c><00:08:45.519><c> really</c><00:08:45.760><c> big</c><00:08:46.000><c> maybe</c>

00:08:46.230 --> 00:08:46.240 align:start position:0%
decision tree could be really big maybe
 

00:08:46.240 --> 00:08:47.509 align:start position:0%
decision tree could be really big maybe
there<00:08:46.399><c> would</c><00:08:46.560><c> be</c><00:08:46.640><c> another</c><00:08:47.040><c> path</c>

00:08:47.509 --> 00:08:47.519 align:start position:0%
there would be another path
 

00:08:47.519 --> 00:08:49.350 align:start position:0%
there would be another path
from<00:08:47.920><c> you</c><00:08:48.080><c> know</c><00:08:48.160><c> somewhere</c><00:08:48.560><c> over</c><00:08:48.720><c> here</c><00:08:49.120><c> where</c>

00:08:49.350 --> 00:08:49.360 align:start position:0%
from you know somewhere over here where
 

00:08:49.360 --> 00:08:51.670 align:start position:0%
from you know somewhere over here where
we<00:08:49.519><c> tried</c><00:08:49.920><c> index</c><00:08:50.320><c> i</c><00:08:50.480><c> equals</c><00:08:50.800><c> 5</c><00:08:51.120><c> again</c>

00:08:51.670 --> 00:08:51.680 align:start position:0%
we tried index i equals 5 again
 

00:08:51.680 --> 00:08:53.269 align:start position:0%
we tried index i equals 5 again
in<00:08:51.760><c> that</c><00:08:51.920><c> case</c><00:08:52.240><c> we</c><00:08:52.320><c> would</c><00:08:52.480><c> want</c><00:08:52.720><c> to</c><00:08:52.800><c> return</c>

00:08:53.269 --> 00:08:53.279 align:start position:0%
in that case we would want to return
 

00:08:53.279 --> 00:08:55.430 align:start position:0%
in that case we would want to return
false<00:08:53.839><c> immediately</c><00:08:54.480><c> because</c><00:08:54.720><c> we</c><00:08:54.959><c> saw</c>

00:08:55.430 --> 00:08:55.440 align:start position:0%
false immediately because we saw
 

00:08:55.440 --> 00:08:57.269 align:start position:0%
false immediately because we saw
from<00:08:55.680><c> here</c><00:08:56.000><c> there</c><00:08:56.160><c> was</c><00:08:56.320><c> no</c><00:08:56.480><c> possible</c><00:08:56.959><c> way</c><00:08:57.120><c> to</c>

00:08:57.269 --> 00:08:57.279 align:start position:0%
from here there was no possible way to
 

00:08:57.279 --> 00:08:59.030 align:start position:0%
from here there was no possible way to
break<00:08:57.519><c> it</c><00:08:57.600><c> down</c><00:08:58.000><c> therefore</c><00:08:58.480><c> we</c><00:08:58.560><c> don't</c><00:08:58.720><c> need</c><00:08:58.880><c> to</c>

00:08:59.030 --> 00:08:59.040 align:start position:0%
break it down therefore we don't need to
 

00:08:59.040 --> 00:08:59.670 align:start position:0%
break it down therefore we don't need to
redo

00:08:59.670 --> 00:08:59.680 align:start position:0%
redo
 

00:08:59.680 --> 00:09:02.310 align:start position:0%
redo
all<00:08:59.839><c> of</c><00:09:00.000><c> that</c><00:09:00.240><c> work</c><00:09:00.800><c> if</c><00:09:00.959><c> we</c><00:09:01.440><c> you</c><00:09:01.519><c> know</c><00:09:01.920><c> try</c><00:09:02.160><c> the</c>

00:09:02.310 --> 00:09:02.320 align:start position:0%
all of that work if we you know try the
 

00:09:02.320 --> 00:09:03.430 align:start position:0%
all of that work if we you know try the
same<00:09:02.560><c> exact</c><00:09:02.959><c> thing</c>

00:09:03.430 --> 00:09:03.440 align:start position:0%
same exact thing
 

00:09:03.440 --> 00:09:05.430 align:start position:0%
same exact thing
so<00:09:03.600><c> we</c><00:09:03.839><c> discovered</c><00:09:04.399><c> that</c><00:09:04.560><c> our</c><00:09:04.720><c> base</c><00:09:05.040><c> case</c><00:09:05.360><c> is</c>

00:09:05.430 --> 00:09:05.440 align:start position:0%
so we discovered that our base case is
 

00:09:05.440 --> 00:09:06.550 align:start position:0%
so we discovered that our base case is
going<00:09:05.680><c> to</c><00:09:05.760><c> be</c><00:09:06.000><c> dp</c>

00:09:06.550 --> 00:09:06.560 align:start position:0%
going to be dp
 

00:09:06.560 --> 00:09:08.870 align:start position:0%
going to be dp
of<00:09:06.800><c> 8</c><00:09:07.040><c> because</c><00:09:07.360><c> a</c><00:09:07.680><c> is</c><00:09:08.240><c> the</c><00:09:08.399><c> length</c><00:09:08.720><c> of</c><00:09:08.800><c> the</c>

00:09:08.870 --> 00:09:08.880 align:start position:0%
of 8 because a is the length of the
 

00:09:08.880 --> 00:09:10.630 align:start position:0%
of 8 because a is the length of the
string<00:09:09.200><c> basically</c><00:09:09.600><c> is</c><00:09:09.760><c> going</c><00:09:09.920><c> to</c><00:09:10.080><c> be</c>

00:09:10.630 --> 00:09:10.640 align:start position:0%
string basically is going to be
 

00:09:10.640 --> 00:09:12.630 align:start position:0%
string basically is going to be
true<00:09:10.959><c> right</c><00:09:11.200><c> if</c><00:09:11.279><c> we</c><00:09:11.440><c> can</c><00:09:11.600><c> ever</c><00:09:11.920><c> get</c><00:09:12.080><c> to</c><00:09:12.240><c> that</c>

00:09:12.630 --> 00:09:12.640 align:start position:0%
true right if we can ever get to that
 

00:09:12.640 --> 00:09:14.710 align:start position:0%
true right if we can ever get to that
last<00:09:13.040><c> index</c><00:09:13.440><c> we're</c><00:09:13.600><c> going</c><00:09:13.680><c> to</c><00:09:13.760><c> return</c><00:09:14.160><c> true</c>

00:09:14.710 --> 00:09:14.720 align:start position:0%
last index we're going to return true
 

00:09:14.720 --> 00:09:16.790 align:start position:0%
last index we're going to return true
so<00:09:15.120><c> what</c><00:09:15.279><c> we're</c><00:09:15.440><c> going</c><00:09:15.600><c> to</c><00:09:15.680><c> do</c><00:09:15.920><c> is</c><00:09:16.160><c> now</c><00:09:16.399><c> do</c><00:09:16.560><c> the</c>

00:09:16.790 --> 00:09:16.800 align:start position:0%
so what we're going to do is now do the
 

00:09:16.800 --> 00:09:18.310 align:start position:0%
so what we're going to do is now do the
bottom<00:09:17.120><c> up</c><00:09:17.279><c> approach</c><00:09:17.680><c> right</c><00:09:17.920><c> we're</c><00:09:18.080><c> going</c><00:09:18.240><c> to</c>

00:09:18.310 --> 00:09:18.320 align:start position:0%
bottom up approach right we're going to
 

00:09:18.320 --> 00:09:19.509 align:start position:0%
bottom up approach right we're going to
go<00:09:18.560><c> through</c><00:09:18.800><c> every</c><00:09:19.040><c> single</c>

00:09:19.509 --> 00:09:19.519 align:start position:0%
go through every single
 

00:09:19.519 --> 00:09:21.350 align:start position:0%
go through every single
index<00:09:19.920><c> in</c><00:09:20.080><c> reverse</c><00:09:20.560><c> order</c><00:09:20.800><c> right</c><00:09:20.959><c> so</c><00:09:21.120><c> we</c><00:09:21.200><c> would</c>

00:09:21.350 --> 00:09:21.360 align:start position:0%
index in reverse order right so we would
 

00:09:21.360 --> 00:09:23.269 align:start position:0%
index in reverse order right so we would
start<00:09:21.519><c> at</c><00:09:21.600><c> the</c><00:09:21.920><c> last</c><00:09:22.320><c> character</c><00:09:22.800><c> which</c><00:09:23.040><c> is</c>

00:09:23.269 --> 00:09:23.279 align:start position:0%
start at the last character which is
 

00:09:23.279 --> 00:09:23.990 align:start position:0%
start at the last character which is
position

00:09:23.990 --> 00:09:24.000 align:start position:0%
position
 

00:09:24.000 --> 00:09:26.550 align:start position:0%
position
seven<00:09:24.399><c> right</c><00:09:24.640><c> and</c><00:09:24.880><c> see</c><00:09:25.360><c> can</c><00:09:25.600><c> we</c><00:09:25.920><c> word</c><00:09:26.320><c> break</c>

00:09:26.550 --> 00:09:26.560 align:start position:0%
seven right and see can we word break
 

00:09:26.560 --> 00:09:27.430 align:start position:0%
seven right and see can we word break
the<00:09:26.720><c> remainder</c>

00:09:27.430 --> 00:09:27.440 align:start position:0%
the remainder
 

00:09:27.440 --> 00:09:30.230 align:start position:0%
the remainder
of<00:09:27.920><c> this</c><00:09:28.160><c> string</c><00:09:29.040><c> you</c><00:09:29.120><c> know</c><00:09:29.519><c> and</c><00:09:29.680><c> we</c><00:09:29.839><c> would</c><00:09:30.000><c> try</c>

00:09:30.230 --> 00:09:30.240 align:start position:0%
of this string you know and we would try
 

00:09:30.240 --> 00:09:32.230 align:start position:0%
of this string you know and we would try
every<00:09:30.480><c> single</c><00:09:30.800><c> word</c><00:09:31.120><c> right</c><00:09:31.279><c> like</c><00:09:31.519><c> neat</c><00:09:31.920><c> does</c>

00:09:32.230 --> 00:09:32.240 align:start position:0%
every single word right like neat does
 

00:09:32.240 --> 00:09:34.710 align:start position:0%
every single word right like neat does
neat<00:09:32.720><c> match</c><00:09:33.360><c> this</c><00:09:33.600><c> string</c><00:09:33.920><c> well</c><00:09:34.240><c> they're</c><00:09:34.480><c> not</c>

00:09:34.710 --> 00:09:34.720 align:start position:0%
neat match this string well they're not
 

00:09:34.720 --> 00:09:36.870 align:start position:0%
neat match this string well they're not
even<00:09:34.959><c> the</c><00:09:35.120><c> same</c><00:09:35.440><c> size</c><00:09:35.839><c> right</c><00:09:36.080><c> if</c><00:09:36.240><c> we</c><00:09:36.399><c> tried</c><00:09:36.720><c> to</c>

00:09:36.870 --> 00:09:36.880 align:start position:0%
even the same size right if we tried to
 

00:09:36.880 --> 00:09:37.350 align:start position:0%
even the same size right if we tried to
match

00:09:37.350 --> 00:09:37.360 align:start position:0%
match
 

00:09:37.360 --> 00:09:39.829 align:start position:0%
match
neat<00:09:37.839><c> on</c><00:09:38.399><c> four</c><00:09:38.720><c> characters</c><00:09:39.279><c> starting</c><00:09:39.600><c> from</c>

00:09:39.829 --> 00:09:39.839 align:start position:0%
neat on four characters starting from
 

00:09:39.839 --> 00:09:40.790 align:start position:0%
neat on four characters starting from
here<00:09:40.000><c> we</c><00:09:40.160><c> would</c><00:09:40.399><c> go</c>

00:09:40.790 --> 00:09:40.800 align:start position:0%
here we would go
 

00:09:40.800 --> 00:09:43.190 align:start position:0%
here we would go
out<00:09:41.040><c> of</c><00:09:41.360><c> bounds</c><00:09:42.080><c> of</c><00:09:42.240><c> this</c><00:09:42.399><c> string</c><00:09:42.880><c> right</c>

00:09:43.190 --> 00:09:43.200 align:start position:0%
out of bounds of this string right
 

00:09:43.200 --> 00:09:44.550 align:start position:0%
out of bounds of this string right
there's<00:09:43.360><c> not</c><00:09:43.600><c> enough</c><00:09:43.839><c> character</c><00:09:44.240><c> so</c><00:09:44.399><c> of</c>

00:09:44.550 --> 00:09:44.560 align:start position:0%
there's not enough character so of
 

00:09:44.560 --> 00:09:45.910 align:start position:0%
there's not enough character so of
course<00:09:44.880><c> this</c><00:09:45.120><c> is</c><00:09:45.279><c> going</c><00:09:45.440><c> to</c><00:09:45.600><c> be</c>

00:09:45.910 --> 00:09:45.920 align:start position:0%
course this is going to be
 

00:09:45.920 --> 00:09:47.990 align:start position:0%
course this is going to be
false<00:09:46.640><c> right</c><00:09:46.880><c> it</c><00:09:46.959><c> wouldn't</c><00:09:47.279><c> match</c><00:09:47.600><c> neat</c><00:09:47.920><c> it</c>

00:09:47.990 --> 00:09:48.000 align:start position:0%
false right it wouldn't match neat it
 

00:09:48.000 --> 00:09:50.070 align:start position:0%
false right it wouldn't match neat it
wouldn't<00:09:48.240><c> match</c><00:09:48.480><c> the</c><00:09:48.720><c> other</c><00:09:48.959><c> two</c>

00:09:50.070 --> 00:09:50.080 align:start position:0%
wouldn't match the other two
 

00:09:50.080 --> 00:09:51.509 align:start position:0%
wouldn't match the other two
words<00:09:50.399><c> in</c><00:09:50.560><c> our</c><00:09:50.640><c> dictionary</c><00:09:51.200><c> either</c><00:09:51.440><c> and</c>

00:09:51.509 --> 00:09:51.519 align:start position:0%
words in our dictionary either and
 

00:09:51.519 --> 00:09:53.590 align:start position:0%
words in our dictionary either and
that's<00:09:51.839><c> obviously</c><00:09:52.320><c> going</c><00:09:52.399><c> to</c><00:09:52.560><c> be</c><00:09:52.640><c> true</c><00:09:52.959><c> for</c><00:09:53.120><c> dp</c>

00:09:53.590 --> 00:09:53.600 align:start position:0%
that's obviously going to be true for dp
 

00:09:53.600 --> 00:09:54.710 align:start position:0%
that's obviously going to be true for dp
of<00:09:53.920><c> 6</c>

00:09:54.710 --> 00:09:54.720 align:start position:0%
of 6
 

00:09:54.720 --> 00:09:58.550 align:start position:0%
of 6
dp<00:09:55.360><c> of</c><00:09:56.000><c> 5</c><00:09:56.720><c> as</c><00:09:56.959><c> well</c><00:09:57.279><c> so</c><00:09:57.519><c> both</c><00:09:57.839><c> of</c><00:09:58.000><c> these</c><00:09:58.320><c> are</c>

00:09:58.550 --> 00:09:58.560 align:start position:0%
dp of 5 as well so both of these are
 

00:09:58.560 --> 00:09:59.430 align:start position:0%
dp of 5 as well so both of these are
also<00:09:58.880><c> going</c><00:09:59.040><c> to</c><00:09:59.120><c> be</c>

00:09:59.430 --> 00:09:59.440 align:start position:0%
also going to be
 

00:09:59.440 --> 00:10:01.750 align:start position:0%
also going to be
false<00:09:59.760><c> right</c><00:10:00.000><c> basically</c><00:10:00.320><c> if</c><00:10:00.399><c> we</c><00:10:00.560><c> started</c><00:10:00.959><c> from</c>

00:10:01.750 --> 00:10:01.760 align:start position:0%
false right basically if we started from
 

00:10:01.760 --> 00:10:04.069 align:start position:0%
false right basically if we started from
6<00:10:02.399><c> or</c><00:10:02.640><c> if</c><00:10:02.720><c> we</c><00:10:02.880><c> started</c><00:10:03.200><c> from</c><00:10:03.519><c> 5</c>

00:10:04.069 --> 00:10:04.079 align:start position:0%
6 or if we started from 5
 

00:10:04.079 --> 00:10:05.990 align:start position:0%
6 or if we started from 5
we<00:10:04.240><c> would</c><00:10:04.399><c> not</c><00:10:04.640><c> be</c><00:10:04.800><c> able</c><00:10:04.959><c> to</c><00:10:05.200><c> match</c><00:10:05.600><c> any</c><00:10:05.760><c> of</c><00:10:05.920><c> the</c>

00:10:05.990 --> 00:10:06.000 align:start position:0%
we would not be able to match any of the
 

00:10:06.000 --> 00:10:07.509 align:start position:0%
we would not be able to match any of the
words<00:10:06.320><c> in</c><00:10:06.480><c> our</c><00:10:06.640><c> dictionary</c>

00:10:07.509 --> 00:10:07.519 align:start position:0%
words in our dictionary
 

00:10:07.519 --> 00:10:10.870 align:start position:0%
words in our dictionary
but<00:10:07.839><c> now</c><00:10:08.079><c> if</c><00:10:08.160><c> we</c><00:10:08.399><c> start</c><00:10:08.880><c> here</c><00:10:09.680><c> index</c><00:10:10.240><c> 4</c><00:10:10.560><c> so</c>

00:10:10.870 --> 00:10:10.880 align:start position:0%
but now if we start here index 4 so
 

00:10:10.880 --> 00:10:12.870 align:start position:0%
but now if we start here index 4 so
we're<00:10:11.120><c> now</c><00:10:11.519><c> trying</c><00:10:11.680><c> to</c><00:10:11.760><c> figure</c><00:10:12.000><c> out</c><00:10:12.079><c> dp</c><00:10:12.480><c> of</c><00:10:12.560><c> 4</c>

00:10:12.870 --> 00:10:12.880 align:start position:0%
we're now trying to figure out dp of 4
 

00:10:12.880 --> 00:10:14.069 align:start position:0%
we're now trying to figure out dp of 4
is<00:10:12.959><c> that</c><00:10:13.279><c> true</c>

00:10:14.069 --> 00:10:14.079 align:start position:0%
is that true
 

00:10:14.079 --> 00:10:15.829 align:start position:0%
is that true
well<00:10:14.320><c> yes</c><00:10:14.560><c> it</c><00:10:14.720><c> is</c><00:10:14.880><c> right</c><00:10:15.120><c> it</c><00:10:15.200><c> doesn't</c><00:10:15.519><c> match</c>

00:10:15.829 --> 00:10:15.839 align:start position:0%
well yes it is right it doesn't match
 

00:10:15.839 --> 00:10:17.670 align:start position:0%
well yes it is right it doesn't match
neat<00:10:16.160><c> it</c><00:10:16.240><c> doesn't</c><00:10:16.560><c> match</c><00:10:16.800><c> elite</c><00:10:17.120><c> but</c><00:10:17.279><c> it</c><00:10:17.440><c> does</c>

00:10:17.670 --> 00:10:17.680 align:start position:0%
neat it doesn't match elite but it does
 

00:10:17.680 --> 00:10:18.069 align:start position:0%
neat it doesn't match elite but it does
match

00:10:18.069 --> 00:10:18.079 align:start position:0%
match
 

00:10:18.079 --> 00:10:20.230 align:start position:0%
match
code<00:10:18.320><c> so</c><00:10:18.480><c> we</c><00:10:18.640><c> are</c><00:10:18.800><c> going</c><00:10:18.880><c> to</c><00:10:18.959><c> set</c><00:10:19.200><c> dp</c><00:10:19.600><c> of</c><00:10:19.760><c> 4</c>

00:10:20.230 --> 00:10:20.240 align:start position:0%
code so we are going to set dp of 4
 

00:10:20.240 --> 00:10:21.509 align:start position:0%
code so we are going to set dp of 4
equal<00:10:20.480><c> to</c><00:10:20.800><c> true</c>

00:10:21.509 --> 00:10:21.519 align:start position:0%
equal to true
 

00:10:21.519 --> 00:10:23.430 align:start position:0%
equal to true
so<00:10:21.680><c> now</c><00:10:21.920><c> let's</c><00:10:22.160><c> keep</c><00:10:22.480><c> doing</c><00:10:22.720><c> it</c><00:10:22.880><c> until</c><00:10:23.120><c> we</c><00:10:23.279><c> get</c>

00:10:23.430 --> 00:10:23.440 align:start position:0%
so now let's keep doing it until we get
 

00:10:23.440 --> 00:10:24.790 align:start position:0%
so now let's keep doing it until we get
to<00:10:23.600><c> the</c><00:10:23.680><c> first</c><00:10:23.920><c> character</c><00:10:24.320><c> so</c><00:10:24.480><c> now</c><00:10:24.640><c> we're</c>

00:10:24.790 --> 00:10:24.800 align:start position:0%
to the first character so now we're
 

00:10:24.800 --> 00:10:26.550 align:start position:0%
to the first character so now we're
going<00:10:24.880><c> to</c><00:10:24.959><c> be</c><00:10:25.120><c> trying</c><00:10:25.519><c> from</c><00:10:25.839><c> dp</c>

00:10:26.550 --> 00:10:26.560 align:start position:0%
going to be trying from dp
 

00:10:26.560 --> 00:10:30.470 align:start position:0%
going to be trying from dp
of<00:10:27.279><c> 3</c><00:10:28.160><c> right</c><00:10:28.560><c> so</c><00:10:28.800><c> starting</c><00:10:29.200><c> from</c><00:10:29.519><c> this</c>

00:10:30.470 --> 00:10:30.480 align:start position:0%
of 3 right so starting from this
 

00:10:30.480 --> 00:10:32.470 align:start position:0%
of 3 right so starting from this
character<00:10:31.440><c> are</c><00:10:31.600><c> we</c><00:10:31.760><c> going</c><00:10:32.000><c> to</c><00:10:32.079><c> be</c><00:10:32.240><c> able</c><00:10:32.320><c> to</c>

00:10:32.470 --> 00:10:32.480 align:start position:0%
character are we going to be able to
 

00:10:32.480 --> 00:10:34.069 align:start position:0%
character are we going to be able to
match<00:10:32.880><c> any</c><00:10:33.040><c> of</c><00:10:33.120><c> these</c><00:10:33.360><c> well</c><00:10:33.600><c> none</c><00:10:33.760><c> of</c><00:10:33.839><c> these</c>

00:10:34.069 --> 00:10:34.079 align:start position:0%
match any of these well none of these
 

00:10:34.079 --> 00:10:35.910 align:start position:0%
match any of these well none of these
words<00:10:34.399><c> even</c><00:10:34.720><c> start</c><00:10:35.040><c> with</c><00:10:35.279><c> a</c><00:10:35.440><c> t</c>

00:10:35.910 --> 00:10:35.920 align:start position:0%
words even start with a t
 

00:10:35.920 --> 00:10:37.190 align:start position:0%
words even start with a t
so<00:10:36.160><c> of</c><00:10:36.240><c> course</c><00:10:36.560><c> we're</c><00:10:36.720><c> not</c><00:10:36.800><c> going</c><00:10:36.880><c> to</c><00:10:36.959><c> be</c><00:10:37.040><c> able</c>

00:10:37.190 --> 00:10:37.200 align:start position:0%
so of course we're not going to be able
 

00:10:37.200 --> 00:10:39.750 align:start position:0%
so of course we're not going to be able
to<00:10:37.360><c> match</c><00:10:37.680><c> so</c><00:10:37.839><c> dp</c><00:10:38.240><c> of</c><00:10:38.399><c> 3</c><00:10:38.720><c> is</c><00:10:38.880><c> going</c><00:10:38.959><c> to</c><00:10:39.040><c> be</c><00:10:39.200><c> false</c>

00:10:39.750 --> 00:10:39.760 align:start position:0%
to match so dp of 3 is going to be false
 

00:10:39.760 --> 00:10:42.310 align:start position:0%
to match so dp of 3 is going to be false
what's<00:10:40.079><c> dp</c><00:10:40.560><c> of</c><00:10:40.720><c> 2</c><00:10:40.959><c> gonna</c><00:10:41.200><c> be</c><00:10:41.600><c> it's</c><00:10:41.920><c> also</c><00:10:42.160><c> going</c>

00:10:42.310 --> 00:10:42.320 align:start position:0%
what's dp of 2 gonna be it's also going
 

00:10:42.320 --> 00:10:43.509 align:start position:0%
what's dp of 2 gonna be it's also going
to<00:10:42.399><c> be</c><00:10:42.560><c> false</c><00:10:42.880><c> because</c>

00:10:43.509 --> 00:10:43.519 align:start position:0%
to be false because
 

00:10:43.519 --> 00:10:45.590 align:start position:0%
to be false because
if<00:10:43.680><c> we</c><00:10:43.839><c> were</c><00:10:44.000><c> to</c><00:10:44.160><c> start</c><00:10:44.480><c> at</c><00:10:44.880><c> this</c><00:10:45.120><c> character</c>

00:10:45.590 --> 00:10:45.600 align:start position:0%
if we were to start at this character
 

00:10:45.600 --> 00:10:46.550 align:start position:0%
if we were to start at this character
this<00:10:46.079><c> e</c>

00:10:46.550 --> 00:10:46.560 align:start position:0%
this e
 

00:10:46.560 --> 00:10:48.550 align:start position:0%
this e
would<00:10:46.800><c> we</c><00:10:46.959><c> be</c><00:10:47.120><c> able</c><00:10:47.200><c> to</c><00:10:47.440><c> match</c><00:10:48.079><c> any</c><00:10:48.320><c> of</c><00:10:48.399><c> the</c>

00:10:48.550 --> 00:10:48.560 align:start position:0%
would we be able to match any of the
 

00:10:48.560 --> 00:10:50.230 align:start position:0%
would we be able to match any of the
words<00:10:48.959><c> in</c><00:10:49.120><c> our</c><00:10:49.200><c> word</c><00:10:49.440><c> dictionary</c><00:10:49.920><c> of</c><00:10:50.000><c> course</c>

00:10:50.230 --> 00:10:50.240 align:start position:0%
words in our word dictionary of course
 

00:10:50.240 --> 00:10:51.190 align:start position:0%
words in our word dictionary of course
we<00:10:50.399><c> would</c><00:10:50.640><c> not</c><00:10:50.880><c> and</c>

00:10:51.190 --> 00:10:51.200 align:start position:0%
we would not and
 

00:10:51.200 --> 00:10:52.949 align:start position:0%
we would not and
what<00:10:51.360><c> about</c><00:10:51.680><c> this</c><00:10:52.000><c> position</c><00:10:52.320><c> if</c><00:10:52.480><c> we</c><00:10:52.640><c> started</c>

00:10:52.949 --> 00:10:52.959 align:start position:0%
what about this position if we started
 

00:10:52.959 --> 00:10:54.630 align:start position:0%
what about this position if we started
here<00:10:53.200><c> would</c><00:10:53.360><c> we</c><00:10:53.519><c> be</c><00:10:53.680><c> able</c><00:10:53.839><c> to</c><00:10:53.920><c> match</c><00:10:54.320><c> any</c><00:10:54.480><c> of</c>

00:10:54.630 --> 00:10:54.640 align:start position:0%
here would we be able to match any of
 

00:10:54.640 --> 00:10:55.269 align:start position:0%
here would we be able to match any of
the<00:10:54.720><c> words</c>

00:10:55.269 --> 00:10:55.279 align:start position:0%
the words
 

00:10:55.279 --> 00:10:58.069 align:start position:0%
the words
in<00:10:55.440><c> our</c><00:10:55.519><c> word</c><00:10:55.760><c> dictionary</c><00:10:56.320><c> again</c><00:10:56.880><c> not</c><00:10:57.040><c> so</c><00:10:57.279><c> dpf3</c>

00:10:58.069 --> 00:10:58.079 align:start position:0%
in our word dictionary again not so dpf3
 

00:10:58.079 --> 00:10:58.870 align:start position:0%
in our word dictionary again not so dpf3
dpf2

00:10:58.870 --> 00:10:58.880 align:start position:0%
dpf2
 

00:10:58.880 --> 00:11:02.230 align:start position:0%
dpf2
and<00:10:59.040><c> dp</c><00:10:59.519><c> of</c><00:10:59.920><c> 1</c><00:11:00.560><c> are</c><00:11:00.720><c> going</c><00:11:00.959><c> to</c><00:11:01.120><c> be</c><00:11:01.519><c> false</c>

00:11:02.230 --> 00:11:02.240 align:start position:0%
and dp of 1 are going to be false
 

00:11:02.240 --> 00:11:05.430 align:start position:0%
and dp of 1 are going to be false
meaning<00:11:02.560><c> we</c><00:11:02.720><c> cannot</c><00:11:03.360><c> word</c><00:11:03.760><c> break</c><00:11:04.480><c> this</c><00:11:04.720><c> string</c>

00:11:05.430 --> 00:11:05.440 align:start position:0%
meaning we cannot word break this string
 

00:11:05.440 --> 00:11:08.150 align:start position:0%
meaning we cannot word break this string
if<00:11:05.519><c> we</c><00:11:05.760><c> start</c><00:11:06.160><c> at</c><00:11:06.320><c> any</c><00:11:06.560><c> of</c><00:11:06.640><c> these</c><00:11:06.959><c> first</c><00:11:07.839><c> any</c><00:11:08.000><c> of</c>

00:11:08.150 --> 00:11:08.160 align:start position:0%
if we start at any of these first any of
 

00:11:08.160 --> 00:11:09.990 align:start position:0%
if we start at any of these first any of
these<00:11:08.399><c> three</c><00:11:08.720><c> positions</c><00:11:09.279><c> basically</c>

00:11:09.990 --> 00:11:10.000 align:start position:0%
these three positions basically
 

00:11:10.000 --> 00:11:12.310 align:start position:0%
these three positions basically
now<00:11:10.240><c> we're</c><00:11:10.560><c> finally</c><00:11:11.120><c> at</c><00:11:11.360><c> the</c><00:11:11.519><c> result</c><00:11:11.920><c> that</c><00:11:12.160><c> we</c>

00:11:12.310 --> 00:11:12.320 align:start position:0%
now we're finally at the result that we
 

00:11:12.320 --> 00:11:13.590 align:start position:0%
now we're finally at the result that we
were<00:11:12.560><c> looking</c><00:11:12.800><c> for</c><00:11:13.040><c> dp</c>

00:11:13.590 --> 00:11:13.600 align:start position:0%
were looking for dp
 

00:11:13.600 --> 00:11:16.630 align:start position:0%
were looking for dp
of<00:11:13.920><c> zero</c><00:11:14.399><c> is</c><00:11:14.560><c> dp</c><00:11:15.120><c> of</c><00:11:15.279><c> zero</c><00:11:15.680><c> gonna</c><00:11:15.839><c> be</c><00:11:16.079><c> true</c>

00:11:16.630 --> 00:11:16.640 align:start position:0%
of zero is dp of zero gonna be true
 

00:11:16.640 --> 00:11:19.509 align:start position:0%
of zero is dp of zero gonna be true
well<00:11:17.279><c> let's</c><00:11:17.600><c> take</c><00:11:17.839><c> a</c><00:11:18.000><c> look</c><00:11:18.640><c> so</c><00:11:18.880><c> we're</c><00:11:19.120><c> starting</c>

00:11:19.509 --> 00:11:19.519 align:start position:0%
well let's take a look so we're starting
 

00:11:19.519 --> 00:11:19.829 align:start position:0%
well let's take a look so we're starting
at

00:11:19.829 --> 00:11:19.839 align:start position:0%
at
 

00:11:19.839 --> 00:11:21.829 align:start position:0%
at
the<00:11:20.079><c> first</c><00:11:20.399><c> character</c><00:11:20.800><c> in</c><00:11:20.880><c> the</c><00:11:21.040><c> string</c><00:11:21.440><c> can</c><00:11:21.600><c> we</c>

00:11:21.829 --> 00:11:21.839 align:start position:0%
the first character in the string can we
 

00:11:21.839 --> 00:11:23.590 align:start position:0%
the first character in the string can we
match<00:11:22.240><c> any</c><00:11:22.480><c> of</c><00:11:22.560><c> the</c><00:11:22.640><c> strings</c><00:11:22.959><c> we</c><00:11:23.120><c> can't</c><00:11:23.279><c> match</c>

00:11:23.590 --> 00:11:23.600 align:start position:0%
match any of the strings we can't match
 

00:11:23.600 --> 00:11:25.110 align:start position:0%
match any of the strings we can't match
lead<00:11:23.839><c> we</c><00:11:23.920><c> can't</c><00:11:24.160><c> match</c><00:11:24.399><c> code</c><00:11:24.720><c> but</c>

00:11:25.110 --> 00:11:25.120 align:start position:0%
lead we can't match code but
 

00:11:25.120 --> 00:11:28.310 align:start position:0%
lead we can't match code but
neat<00:11:25.760><c> it</c><00:11:26.000><c> does</c><00:11:26.399><c> match</c><00:11:27.120><c> this</c><00:11:27.600><c> portion</c><00:11:28.079><c> of</c><00:11:28.160><c> the</c>

00:11:28.310 --> 00:11:28.320 align:start position:0%
neat it does match this portion of the
 

00:11:28.320 --> 00:11:28.790 align:start position:0%
neat it does match this portion of the
string

00:11:28.790 --> 00:11:28.800 align:start position:0%
string
 

00:11:28.800 --> 00:11:31.670 align:start position:0%
string
starting<00:11:29.120><c> at</c><00:11:29.440><c> index</c><00:11:30.079><c> zero</c><00:11:30.800><c> so</c><00:11:31.120><c> then</c><00:11:31.440><c> the</c>

00:11:31.670 --> 00:11:31.680 align:start position:0%
starting at index zero so then the
 

00:11:31.680 --> 00:11:33.190 align:start position:0%
starting at index zero so then the
question<00:11:32.079><c> becomes</c>

00:11:33.190 --> 00:11:33.200 align:start position:0%
question becomes
 

00:11:33.200 --> 00:11:35.509 align:start position:0%
question becomes
we're<00:11:33.440><c> asking</c><00:11:33.760><c> can</c><00:11:34.000><c> we</c><00:11:34.160><c> break</c><00:11:34.480><c> the</c><00:11:34.720><c> entire</c>

00:11:35.509 --> 00:11:35.519 align:start position:0%
we're asking can we break the entire
 

00:11:35.519 --> 00:11:36.870 align:start position:0%
we're asking can we break the entire
string<00:11:36.079><c> starting</c><00:11:36.560><c> at</c>

00:11:36.870 --> 00:11:36.880 align:start position:0%
string starting at
 

00:11:36.880 --> 00:11:39.990 align:start position:0%
string starting at
index<00:11:37.600><c> zero</c><00:11:37.920><c> so</c><00:11:38.160><c> now</c><00:11:38.480><c> since</c><00:11:38.720><c> we</c><00:11:38.959><c> did</c><00:11:39.360><c> match</c><00:11:39.680><c> the</c>

00:11:39.990 --> 00:11:40.000 align:start position:0%
index zero so now since we did match the
 

00:11:40.000 --> 00:11:40.550 align:start position:0%
index zero so now since we did match the
first

00:11:40.550 --> 00:11:40.560 align:start position:0%
first
 

00:11:40.560 --> 00:11:43.829 align:start position:0%
first
four<00:11:40.959><c> characters</c><00:11:41.920><c> we</c><00:11:42.240><c> want</c><00:11:42.480><c> to</c><00:11:42.720><c> know</c><00:11:43.200><c> were</c><00:11:43.519><c> we</c>

00:11:43.829 --> 00:11:43.839 align:start position:0%
four characters we want to know were we
 

00:11:43.839 --> 00:11:46.389 align:start position:0%
four characters we want to know were we
able<00:11:44.160><c> to</c><00:11:44.480><c> match</c><00:11:45.360><c> the</c><00:11:45.519><c> remainder</c><00:11:46.160><c> of</c><00:11:46.240><c> the</c>

00:11:46.389 --> 00:11:46.399 align:start position:0%
able to match the remainder of the
 

00:11:46.399 --> 00:11:47.750 align:start position:0%
able to match the remainder of the
string<00:11:46.720><c> right</c><00:11:46.880><c> so</c><00:11:47.040><c> we</c><00:11:47.200><c> want</c><00:11:47.360><c> to</c><00:11:47.440><c> know</c>

00:11:47.750 --> 00:11:47.760 align:start position:0%
string right so we want to know
 

00:11:47.760 --> 00:11:50.870 align:start position:0%
string right so we want to know
starting<00:11:48.079><c> from</c><00:11:48.399><c> here</c><00:11:48.959><c> were</c><00:11:49.200><c> we</c><00:11:49.519><c> able</c><00:11:49.920><c> to</c><00:11:50.160><c> match</c>

00:11:50.870 --> 00:11:50.880 align:start position:0%
starting from here were we able to match
 

00:11:50.880 --> 00:11:52.629 align:start position:0%
starting from here were we able to match
this<00:11:51.200><c> string</c><00:11:51.680><c> to</c><00:11:51.920><c> words</c><00:11:52.240><c> in</c><00:11:52.320><c> our</c><00:11:52.399><c> word</c>

00:11:52.629 --> 00:11:52.639 align:start position:0%
this string to words in our word
 

00:11:52.639 --> 00:11:54.629 align:start position:0%
this string to words in our word
dictionary<00:11:53.120><c> now</c><00:11:53.360><c> this</c><00:11:53.600><c> is</c><00:11:53.680><c> why</c><00:11:53.920><c> we</c><00:11:54.160><c> computed</c>

00:11:54.629 --> 00:11:54.639 align:start position:0%
dictionary now this is why we computed
 

00:11:54.639 --> 00:11:56.389 align:start position:0%
dictionary now this is why we computed
this<00:11:54.880><c> bottom</c><00:11:55.279><c> up</c><00:11:55.519><c> right</c><00:11:55.760><c> because</c>

00:11:56.389 --> 00:11:56.399 align:start position:0%
this bottom up right because
 

00:11:56.399 --> 00:11:59.350 align:start position:0%
this bottom up right because
this<00:11:56.800><c> is</c><00:11:57.040><c> index</c><00:11:57.519><c> 4</c><00:11:57.839><c> right</c><00:11:58.320><c> notice</c><00:11:58.720><c> how</c><00:11:59.040><c> we</c>

00:11:59.350 --> 00:11:59.360 align:start position:0%
this is index 4 right notice how we
 

00:11:59.360 --> 00:12:00.870 align:start position:0%
this is index 4 right notice how we
already<00:12:00.079><c> computed</c>

00:12:00.870 --> 00:12:00.880 align:start position:0%
already computed
 

00:12:00.880 --> 00:12:03.269 align:start position:0%
already computed
index<00:12:01.360><c> 4</c><00:12:01.920><c> over</c><00:12:02.240><c> here</c><00:12:02.480><c> right</c><00:12:02.720><c> it's</c><00:12:02.880><c> the</c><00:12:03.040><c> one</c>

00:12:03.269 --> 00:12:03.279 align:start position:0%
index 4 over here right it's the one
 

00:12:03.279 --> 00:12:04.870 align:start position:0%
index 4 over here right it's the one
that's<00:12:03.440><c> highlighted</c><00:12:04.000><c> in</c><00:12:04.240><c> green</c>

00:12:04.870 --> 00:12:04.880 align:start position:0%
that's highlighted in green
 

00:12:04.880 --> 00:12:07.350 align:start position:0%
that's highlighted in green
because<00:12:05.120><c> it</c><00:12:05.279><c> was</c><00:12:05.600><c> true</c><00:12:05.920><c> we</c><00:12:06.240><c> were</c><00:12:06.639><c> able</c><00:12:06.959><c> to</c><00:12:07.120><c> do</c>

00:12:07.350 --> 00:12:07.360 align:start position:0%
because it was true we were able to do
 

00:12:07.360 --> 00:12:08.150 align:start position:0%
because it was true we were able to do
it<00:12:07.760><c> so</c>

00:12:08.150 --> 00:12:08.160 align:start position:0%
it so
 

00:12:08.160 --> 00:12:09.990 align:start position:0%
it so
basically<00:12:08.639><c> the</c><00:12:08.800><c> equation</c><00:12:09.360><c> that</c><00:12:09.519><c> we</c><00:12:09.600><c> would</c><00:12:09.760><c> use</c>

00:12:09.990 --> 00:12:10.000 align:start position:0%
basically the equation that we would use
 

00:12:10.000 --> 00:12:11.509 align:start position:0%
basically the equation that we would use
for<00:12:10.160><c> this</c><00:12:10.399><c> is</c><00:12:10.560><c> going</c><00:12:10.720><c> to</c><00:12:10.959><c> be</c>

00:12:11.509 --> 00:12:11.519 align:start position:0%
for this is going to be
 

00:12:11.519 --> 00:12:14.629 align:start position:0%
for this is going to be
dp<00:12:12.560><c> of</c><00:12:13.120><c> 0</c><00:12:14.000><c> plus</c>

00:12:14.629 --> 00:12:14.639 align:start position:0%
dp of 0 plus
 

00:12:14.639 --> 00:12:17.030 align:start position:0%
dp of 0 plus
the<00:12:15.040><c> length</c><00:12:15.519><c> of</c><00:12:15.680><c> the</c><00:12:15.920><c> word</c><00:12:16.320><c> that</c><00:12:16.399><c> we</c><00:12:16.560><c> were</c><00:12:16.800><c> able</c>

00:12:17.030 --> 00:12:17.040 align:start position:0%
the length of the word that we were able
 

00:12:17.040 --> 00:12:18.069 align:start position:0%
the length of the word that we were able
to<00:12:17.279><c> match</c><00:12:17.680><c> with</c>

00:12:18.069 --> 00:12:18.079 align:start position:0%
to match with
 

00:12:18.079 --> 00:12:20.150 align:start position:0%
to match with
and<00:12:18.240><c> we</c><00:12:18.399><c> know</c><00:12:18.560><c> the</c><00:12:18.720><c> length</c><00:12:18.959><c> of</c><00:12:19.040><c> the</c><00:12:19.200><c> word</c>

00:12:20.150 --> 00:12:20.160 align:start position:0%
and we know the length of the word
 

00:12:20.160 --> 00:12:21.110 align:start position:0%
and we know the length of the word
length<00:12:20.480><c> of</c><00:12:20.560><c> the</c><00:12:20.720><c> word</c>

00:12:21.110 --> 00:12:21.120 align:start position:0%
length of the word
 

00:12:21.120 --> 00:12:23.670 align:start position:0%
length of the word
neat<00:12:21.680><c> is</c><00:12:21.839><c> going</c><00:12:21.920><c> to</c><00:12:22.000><c> be</c><00:12:22.399><c> 4</c><00:12:22.880><c> so</c><00:12:23.120><c> basically</c><00:12:23.519><c> we</c>

00:12:23.670 --> 00:12:23.680 align:start position:0%
neat is going to be 4 so basically we
 

00:12:23.680 --> 00:12:25.590 align:start position:0%
neat is going to be 4 so basically we
can<00:12:23.839><c> replace</c><00:12:24.160><c> this</c><00:12:24.480><c> length</c><00:12:24.720><c> of</c><00:12:24.800><c> the</c><00:12:24.959><c> word</c><00:12:25.200><c> with</c>

00:12:25.590 --> 00:12:25.600 align:start position:0%
can replace this length of the word with
 

00:12:25.600 --> 00:12:27.829 align:start position:0%
can replace this length of the word with
four<00:12:25.839><c> so</c><00:12:26.079><c> zero</c><00:12:26.480><c> plus</c><00:12:26.720><c> four</c><00:12:27.040><c> is</c><00:12:27.120><c> just</c><00:12:27.360><c> dp</c><00:12:27.680><c> of</c>

00:12:27.829 --> 00:12:27.839 align:start position:0%
four so zero plus four is just dp of
 

00:12:27.839 --> 00:12:29.670 align:start position:0%
four so zero plus four is just dp of
four<00:12:28.240><c> we</c><00:12:28.399><c> know</c><00:12:28.639><c> that</c><00:12:28.800><c> was</c><00:12:29.120><c> true</c>

00:12:29.670 --> 00:12:29.680 align:start position:0%
four we know that was true
 

00:12:29.680 --> 00:12:33.509 align:start position:0%
four we know that was true
so<00:12:29.839><c> we</c><00:12:30.000><c> can</c><00:12:30.240><c> set</c><00:12:30.800><c> dp</c><00:12:31.440><c> of</c><00:12:31.920><c> zero</c><00:12:32.480><c> equal</c><00:12:32.720><c> to</c><00:12:32.959><c> true</c>

00:12:33.509 --> 00:12:33.519 align:start position:0%
so we can set dp of zero equal to true
 

00:12:33.519 --> 00:12:36.790 align:start position:0%
so we can set dp of zero equal to true
so<00:12:33.760><c> this</c><00:12:34.320><c> is</c><00:12:34.560><c> basically</c><00:12:35.600><c> uh</c><00:12:36.000><c> the</c><00:12:36.240><c> result</c><00:12:36.560><c> right</c>

00:12:36.790 --> 00:12:36.800 align:start position:0%
so this is basically uh the result right
 

00:12:36.800 --> 00:12:37.990 align:start position:0%
so this is basically uh the result right
this<00:12:36.959><c> is</c><00:12:37.040><c> how</c><00:12:37.279><c> we're</c><00:12:37.440><c> going</c><00:12:37.519><c> to</c><00:12:37.600><c> compute</c>

00:12:37.990 --> 00:12:38.000 align:start position:0%
this is how we're going to compute
 

00:12:38.000 --> 00:12:39.430 align:start position:0%
this is how we're going to compute
it<00:12:38.399><c> and</c><00:12:38.720><c> this</c><00:12:38.959><c> is</c><00:12:39.040><c> what</c><00:12:39.120><c> we're</c><00:12:39.279><c> going</c><00:12:39.360><c> to</c>

00:12:39.430 --> 00:12:39.440 align:start position:0%
it and this is what we're going to
 

00:12:39.440 --> 00:12:41.670 align:start position:0%
it and this is what we're going to
assign<00:12:39.839><c> dp</c><00:12:40.320><c> of</c><00:12:40.480><c> 0</c><00:12:40.800><c> to</c><00:12:41.040><c> and</c><00:12:41.120><c> once</c><00:12:41.360><c> we've</c><00:12:41.519><c> done</c>

00:12:41.670 --> 00:12:41.680 align:start position:0%
assign dp of 0 to and once we've done
 

00:12:41.680 --> 00:12:43.110 align:start position:0%
assign dp of 0 to and once we've done
that<00:12:41.839><c> we've</c><00:12:42.079><c> computed</c><00:12:42.480><c> the</c><00:12:42.639><c> result</c>

00:12:43.110 --> 00:12:43.120 align:start position:0%
that we've computed the result
 

00:12:43.120 --> 00:12:45.269 align:start position:0%
that we've computed the result
we<00:12:43.279><c> know</c><00:12:43.519><c> we</c><00:12:43.680><c> can</c><00:12:43.839><c> return</c><00:12:44.560><c> true</c><00:12:44.880><c> for</c><00:12:45.120><c> the</c>

00:12:45.269 --> 00:12:45.279 align:start position:0%
we know we can return true for the
 

00:12:45.279 --> 00:12:46.389 align:start position:0%
we know we can return true for the
overall<00:12:45.760><c> function</c>

00:12:46.389 --> 00:12:46.399 align:start position:0%
overall function
 

00:12:46.399 --> 00:12:48.310 align:start position:0%
overall function
so<00:12:46.560><c> with</c><00:12:46.720><c> that</c><00:12:46.959><c> being</c><00:12:47.200><c> said</c><00:12:47.440><c> let's</c><00:12:47.760><c> jump</c><00:12:48.079><c> into</c>

00:12:48.310 --> 00:12:48.320 align:start position:0%
so with that being said let's jump into
 

00:12:48.320 --> 00:12:51.110 align:start position:0%
so with that being said let's jump into
the<00:12:48.480><c> code</c><00:12:49.200><c> so</c><00:12:49.440><c> our</c><00:12:49.680><c> cache</c><00:12:50.240><c> is</c><00:12:50.480><c> going</c><00:12:50.639><c> to</c><00:12:50.800><c> be</c>

00:12:51.110 --> 00:12:51.120 align:start position:0%
the code so our cache is going to be
 

00:12:51.120 --> 00:12:53.509 align:start position:0%
the code so our cache is going to be
let's<00:12:51.360><c> say</c><00:12:51.839><c> a</c><00:12:52.240><c> one-dimensional</c><00:12:52.959><c> array</c><00:12:53.279><c> right</c>

00:12:53.509 --> 00:12:53.519 align:start position:0%
let's say a one-dimensional array right
 

00:12:53.519 --> 00:12:55.350 align:start position:0%
let's say a one-dimensional array right
because<00:12:54.000><c> for</c><00:12:54.160><c> every</c><00:12:54.399><c> position</c><00:12:54.959><c> i</c>

00:12:55.350 --> 00:12:55.360 align:start position:0%
because for every position i
 

00:12:55.360 --> 00:12:58.550 align:start position:0%
because for every position i
in<00:12:55.519><c> the</c><00:12:55.680><c> string</c><00:12:56.079><c> s</c><00:12:56.399><c> we</c><00:12:56.560><c> are</c><00:12:56.639><c> going</c><00:12:56.720><c> to</c><00:12:56.880><c> have</c><00:12:57.600><c> a</c>

00:12:58.550 --> 00:12:58.560 align:start position:0%
in the string s we are going to have a
 

00:12:58.560 --> 00:13:00.069 align:start position:0%
in the string s we are going to have a
value<00:12:58.959><c> so</c><00:12:59.120><c> we're</c><00:12:59.279><c> going</c><00:12:59.360><c> to</c><00:12:59.440><c> initialize</c><00:12:59.920><c> this</c>

00:13:00.069 --> 00:13:00.079 align:start position:0%
value so we're going to initialize this
 

00:13:00.079 --> 00:13:01.670 align:start position:0%
value so we're going to initialize this
to<00:13:00.320><c> false</c><00:13:00.639><c> it's</c><00:13:00.800><c> going</c><00:13:00.880><c> to</c><00:13:00.959><c> be</c><00:13:01.120><c> the</c><00:13:01.279><c> length</c><00:13:01.600><c> of</c>

00:13:01.670 --> 00:13:01.680 align:start position:0%
to false it's going to be the length of
 

00:13:01.680 --> 00:13:02.710 align:start position:0%
to false it's going to be the length of
the<00:13:01.839><c> string</c><00:13:02.160><c> s</c>

00:13:02.710 --> 00:13:02.720 align:start position:0%
the string s
 

00:13:02.720 --> 00:13:05.590 align:start position:0%
the string s
plus<00:13:03.440><c> 1</c><00:13:03.839><c> for</c><00:13:04.160><c> our</c><00:13:04.399><c> base</c><00:13:04.720><c> case</c><00:13:05.120><c> and</c><00:13:05.279><c> we</c><00:13:05.440><c> are</c>

00:13:05.590 --> 00:13:05.600 align:start position:0%
plus 1 for our base case and we are
 

00:13:05.600 --> 00:13:07.269 align:start position:0%
plus 1 for our base case and we are
going<00:13:05.680><c> to</c><00:13:05.839><c> initialize</c><00:13:06.480><c> our</c><00:13:06.639><c> base</c><00:13:06.880><c> case</c><00:13:07.120><c> we</c>

00:13:07.269 --> 00:13:07.279 align:start position:0%
going to initialize our base case we
 

00:13:07.279 --> 00:13:09.030 align:start position:0%
going to initialize our base case we
know<00:13:07.519><c> that</c><00:13:07.760><c> it's</c><00:13:08.000><c> the</c><00:13:08.240><c> last</c><00:13:08.639><c> position</c>

00:13:09.030 --> 00:13:09.040 align:start position:0%
know that it's the last position
 

00:13:09.040 --> 00:13:10.069 align:start position:0%
know that it's the last position
basically<00:13:09.440><c> the</c><00:13:09.600><c> position</c>

00:13:10.069 --> 00:13:10.079 align:start position:0%
basically the position
 

00:13:10.079 --> 00:13:12.230 align:start position:0%
basically the position
the<00:13:10.160><c> position</c><00:13:10.720><c> out</c><00:13:10.800><c> of</c><00:13:10.959><c> bounds</c><00:13:11.360><c> of</c><00:13:11.440><c> the</c><00:13:11.600><c> string</c>

00:13:12.230 --> 00:13:12.240 align:start position:0%
the position out of bounds of the string
 

00:13:12.240 --> 00:13:13.509 align:start position:0%
the position out of bounds of the string
so<00:13:12.480><c> the</c><00:13:12.720><c> length</c><00:13:13.200><c> of</c>

00:13:13.509 --> 00:13:13.519 align:start position:0%
so the length of
 

00:13:13.519 --> 00:13:15.590 align:start position:0%
so the length of
s<00:13:14.000><c> and</c><00:13:14.160><c> we</c><00:13:14.320><c> know</c><00:13:14.560><c> that's</c><00:13:14.800><c> going</c><00:13:14.959><c> to</c><00:13:15.040><c> be</c><00:13:15.200><c> set</c><00:13:15.440><c> to</c>

00:13:15.590 --> 00:13:15.600 align:start position:0%
s and we know that's going to be set to
 

00:13:15.600 --> 00:13:17.430 align:start position:0%
s and we know that's going to be set to
true<00:13:16.000><c> that's</c><00:13:16.240><c> our</c><00:13:16.480><c> base</c><00:13:16.800><c> case</c>

00:13:17.430 --> 00:13:17.440 align:start position:0%
true that's our base case
 

00:13:17.440 --> 00:13:18.629 align:start position:0%
true that's our base case
so<00:13:17.600><c> now</c><00:13:17.839><c> we're</c><00:13:17.920><c> going</c><00:13:18.000><c> to</c><00:13:18.079><c> go</c><00:13:18.240><c> through</c><00:13:18.399><c> every</c>

00:13:18.629 --> 00:13:18.639 align:start position:0%
so now we're going to go through every
 

00:13:18.639 --> 00:13:20.470 align:start position:0%
so now we're going to go through every
position<00:13:19.200><c> i</c><00:13:19.920><c> in</c>

00:13:20.470 --> 00:13:20.480 align:start position:0%
position i in
 

00:13:20.480 --> 00:13:23.509 align:start position:0%
position i in
the<00:13:20.800><c> length</c><00:13:21.279><c> of</c><00:13:21.440><c> the</c><00:13:21.680><c> string</c><00:13:22.639><c> starting</c><00:13:23.120><c> at</c><00:13:23.279><c> the</c>

00:13:23.509 --> 00:13:23.519 align:start position:0%
the length of the string starting at the
 

00:13:23.519 --> 00:13:25.430 align:start position:0%
the length of the string starting at the
last<00:13:24.000><c> index</c><00:13:24.320><c> and</c><00:13:24.560><c> working</c><00:13:24.800><c> our</c><00:13:24.959><c> way</c><00:13:25.200><c> to</c><00:13:25.360><c> the</c>

00:13:25.430 --> 00:13:25.440 align:start position:0%
last index and working our way to the
 

00:13:25.440 --> 00:13:27.110 align:start position:0%
last index and working our way to the
beginning<00:13:25.920><c> so</c><00:13:26.079><c> that's</c><00:13:26.240><c> why</c><00:13:26.480><c> i'm</c><00:13:26.639><c> using</c><00:13:26.959><c> the</c>

00:13:27.110 --> 00:13:27.120 align:start position:0%
beginning so that's why i'm using the
 

00:13:27.120 --> 00:13:28.949 align:start position:0%
beginning so that's why i'm using the
decrementer<00:13:27.839><c> of</c><00:13:28.079><c> negative</c><00:13:28.480><c> one</c>

00:13:28.949 --> 00:13:28.959 align:start position:0%
decrementer of negative one
 

00:13:28.959 --> 00:13:30.550 align:start position:0%
decrementer of negative one
and<00:13:29.040><c> we're</c><00:13:29.200><c> going</c><00:13:29.360><c> to</c><00:13:29.440><c> go</c><00:13:29.760><c> up</c><00:13:30.000><c> until</c><00:13:30.320><c> the</c>

00:13:30.550 --> 00:13:30.560 align:start position:0%
and we're going to go up until the
 

00:13:30.560 --> 00:13:32.230 align:start position:0%
and we're going to go up until the
beginning<00:13:31.200><c> of</c><00:13:31.360><c> the</c><00:13:31.600><c> string</c>

00:13:32.230 --> 00:13:32.240 align:start position:0%
beginning of the string
 

00:13:32.240 --> 00:13:35.829 align:start position:0%
beginning of the string
and<00:13:32.560><c> for</c><00:13:32.959><c> each</c><00:13:33.279><c> position</c><00:13:33.920><c> i</c><00:13:34.639><c> we</c><00:13:34.959><c> want</c><00:13:35.120><c> to</c><00:13:35.360><c> try</c>

00:13:35.829 --> 00:13:35.839 align:start position:0%
and for each position i we want to try
 

00:13:35.839 --> 00:13:38.150 align:start position:0%
and for each position i we want to try
every<00:13:36.079><c> single</c><00:13:36.480><c> word</c><00:13:36.880><c> in</c><00:13:37.040><c> our</c><00:13:37.200><c> word</c><00:13:37.519><c> dictionary</c>

00:13:38.150 --> 00:13:38.160 align:start position:0%
every single word in our word dictionary
 

00:13:38.160 --> 00:13:39.829 align:start position:0%
every single word in our word dictionary
and<00:13:38.320><c> see</c><00:13:38.720><c> if</c><00:13:38.880><c> the</c><00:13:39.120><c> word</c>

00:13:39.829 --> 00:13:39.839 align:start position:0%
and see if the word
 

00:13:39.839 --> 00:13:42.470 align:start position:0%
and see if the word
matches<00:13:40.399><c> this</c><00:13:40.720><c> portion</c><00:13:41.279><c> so</c><00:13:41.760><c> first</c><00:13:42.079><c> we</c><00:13:42.240><c> have</c><00:13:42.320><c> to</c>

00:13:42.470 --> 00:13:42.480 align:start position:0%
matches this portion so first we have to
 

00:13:42.480 --> 00:13:43.110 align:start position:0%
matches this portion so first we have to
see<00:13:42.800><c> if</c>

00:13:43.110 --> 00:13:43.120 align:start position:0%
see if
 

00:13:43.120 --> 00:13:46.150 align:start position:0%
see if
starting<00:13:43.519><c> at</c><00:13:43.680><c> position</c><00:13:44.160><c> i</c><00:13:44.639><c> the</c><00:13:44.880><c> string</c><00:13:45.440><c> s</c><00:13:45.839><c> even</c>

00:13:46.150 --> 00:13:46.160 align:start position:0%
starting at position i the string s even
 

00:13:46.160 --> 00:13:46.870 align:start position:0%
starting at position i the string s even
has<00:13:46.320><c> enough</c>

00:13:46.870 --> 00:13:46.880 align:start position:0%
has enough
 

00:13:46.880 --> 00:13:49.670 align:start position:0%
has enough
characters<00:13:47.519><c> for</c><00:13:47.839><c> w</c><00:13:48.399><c> to</c><00:13:48.560><c> be</c><00:13:48.720><c> compared</c><00:13:49.279><c> to</c><00:13:49.440><c> it</c><00:13:49.519><c> so</c>

00:13:49.670 --> 00:13:49.680 align:start position:0%
characters for w to be compared to it so
 

00:13:49.680 --> 00:13:50.790 align:start position:0%
characters for w to be compared to it so
what<00:13:49.760><c> we're</c><00:13:49.920><c> going</c><00:13:50.000><c> to</c><00:13:50.079><c> do</c><00:13:50.240><c> is</c><00:13:50.399><c> we're</c><00:13:50.560><c> going</c><00:13:50.639><c> to</c>

00:13:50.790 --> 00:13:50.800 align:start position:0%
what we're going to do is we're going to
 

00:13:50.800 --> 00:13:51.189 align:start position:0%
what we're going to do is we're going to
check

00:13:51.189 --> 00:13:51.199 align:start position:0%
check
 

00:13:51.199 --> 00:13:54.550 align:start position:0%
check
i<00:13:51.839><c> plus</c><00:13:52.240><c> the</c><00:13:52.480><c> length</c><00:13:52.959><c> of</c><00:13:53.519><c> w</c><00:13:54.079><c> and</c><00:13:54.160><c> we</c><00:13:54.320><c> want</c><00:13:54.480><c> to</c>

00:13:54.550 --> 00:13:54.560 align:start position:0%
i plus the length of w and we want to
 

00:13:54.560 --> 00:13:55.910 align:start position:0%
i plus the length of w and we want to
know<00:13:54.720><c> is</c><00:13:54.880><c> it</c><00:13:55.120><c> less</c><00:13:55.360><c> than</c><00:13:55.600><c> or</c>

00:13:55.910 --> 00:13:55.920 align:start position:0%
know is it less than or
 

00:13:55.920 --> 00:13:59.189 align:start position:0%
know is it less than or
equal<00:13:56.560><c> to</c><00:13:56.720><c> the</c><00:13:56.959><c> length</c><00:13:57.519><c> of</c><00:13:58.000><c> s</c><00:13:58.480><c> if</c><00:13:58.639><c> that's</c><00:13:58.959><c> the</c>

00:13:59.189 --> 00:13:59.199 align:start position:0%
equal to the length of s if that's the
 

00:13:59.199 --> 00:13:59.829 align:start position:0%
equal to the length of s if that's the
case

00:13:59.829 --> 00:13:59.839 align:start position:0%
case
 

00:13:59.839 --> 00:14:01.990 align:start position:0%
case
then<00:14:00.079><c> that</c><00:14:00.399><c> means</c><00:14:01.040><c> there</c><00:14:01.279><c> are</c><00:14:01.519><c> enough</c>

00:14:01.990 --> 00:14:02.000 align:start position:0%
then that means there are enough
 

00:14:02.000 --> 00:14:02.949 align:start position:0%
then that means there are enough
characters<00:14:02.639><c> in</c>

00:14:02.949 --> 00:14:02.959 align:start position:0%
characters in
 

00:14:02.959 --> 00:14:04.710 align:start position:0%
characters in
s<00:14:03.199><c> for</c><00:14:03.360><c> us</c><00:14:03.519><c> to</c><00:14:03.600><c> compare</c><00:14:04.000><c> them</c><00:14:04.240><c> so</c><00:14:04.399><c> that's</c><00:14:04.560><c> what</c>

00:14:04.710 --> 00:14:04.720 align:start position:0%
s for us to compare them so that's what
 

00:14:04.720 --> 00:14:05.670 align:start position:0%
s for us to compare them so that's what
exactly<00:14:05.040><c> what</c><00:14:05.199><c> we're</c><00:14:05.279><c> going</c><00:14:05.360><c> to</c><00:14:05.440><c> do</c><00:14:05.519><c> we're</c>

00:14:05.670 --> 00:14:05.680 align:start position:0%
exactly what we're going to do we're
 

00:14:05.680 --> 00:14:06.069 align:start position:0%
exactly what we're going to do we're
going

00:14:06.069 --> 00:14:06.079 align:start position:0%
going
 

00:14:06.079 --> 00:14:08.150 align:start position:0%
going
if<00:14:06.399><c> this</c><00:14:06.639><c> is</c><00:14:06.720><c> true</c><00:14:07.040><c> then</c><00:14:07.199><c> let's</c><00:14:07.519><c> compare</c><00:14:07.839><c> so</c><00:14:08.000><c> we</c>

00:14:08.150 --> 00:14:08.160 align:start position:0%
if this is true then let's compare so we
 

00:14:08.160 --> 00:14:09.269 align:start position:0%
if this is true then let's compare so we
want<00:14:08.240><c> to</c><00:14:08.320><c> know</c><00:14:08.560><c> if</c><00:14:08.639><c> that's</c><00:14:08.959><c> true</c>

00:14:09.269 --> 00:14:09.279 align:start position:0%
want to know if that's true
 

00:14:09.279 --> 00:14:12.949 align:start position:0%
want to know if that's true
and<00:14:09.839><c> if</c><00:14:10.399><c> s</c><00:14:11.120><c> starting</c><00:14:11.600><c> at</c><00:14:11.760><c> index</c><00:14:12.240><c> i</c>

00:14:12.949 --> 00:14:12.959 align:start position:0%
and if s starting at index i
 

00:14:12.959 --> 00:14:15.990 align:start position:0%
and if s starting at index i
going<00:14:13.440><c> up</c><00:14:13.680><c> until</c><00:14:14.240><c> i</c><00:14:14.800><c> plus</c><00:14:15.279><c> the</c><00:14:15.519><c> length</c>

00:14:15.990 --> 00:14:16.000 align:start position:0%
going up until i plus the length
 

00:14:16.000 --> 00:14:19.189 align:start position:0%
going up until i plus the length
of<00:14:16.240><c> w</c><00:14:17.120><c> so</c><00:14:17.360><c> basically</c><00:14:18.320><c> let's</c><00:14:18.560><c> say</c>

00:14:19.189 --> 00:14:19.199 align:start position:0%
of w so basically let's say
 

00:14:19.199 --> 00:14:21.509 align:start position:0%
of w so basically let's say
w<00:14:19.920><c> was</c><00:14:20.240><c> three</c><00:14:20.560><c> characters</c><00:14:21.040><c> then</c><00:14:21.199><c> we</c><00:14:21.279><c> want</c><00:14:21.440><c> to</c>

00:14:21.509 --> 00:14:21.519 align:start position:0%
w was three characters then we want to
 

00:14:21.519 --> 00:14:23.269 align:start position:0%
w was three characters then we want to
know<00:14:21.760><c> the</c><00:14:21.920><c> first</c><00:14:22.240><c> three</c><00:14:22.480><c> characters</c><00:14:22.959><c> in</c>

00:14:23.269 --> 00:14:23.279 align:start position:0%
know the first three characters in
 

00:14:23.279 --> 00:14:25.910 align:start position:0%
know the first three characters in
s<00:14:23.680><c> starting</c><00:14:24.000><c> at</c><00:14:24.160><c> index</c><00:14:24.560><c> i</c><00:14:25.040><c> are</c><00:14:25.199><c> they</c><00:14:25.360><c> exactly</c>

00:14:25.910 --> 00:14:25.920 align:start position:0%
s starting at index i are they exactly
 

00:14:25.920 --> 00:14:26.389 align:start position:0%
s starting at index i are they exactly
equal

00:14:26.389 --> 00:14:26.399 align:start position:0%
equal
 

00:14:26.399 --> 00:14:28.790 align:start position:0%
equal
if<00:14:26.480><c> they</c><00:14:26.800><c> are</c><00:14:27.120><c> equal</c><00:14:27.839><c> then</c><00:14:28.000><c> we</c><00:14:28.240><c> wanna</c><00:14:28.560><c> know</c>

00:14:28.790 --> 00:14:28.800 align:start position:0%
if they are equal then we wanna know
 

00:14:28.800 --> 00:14:30.230 align:start position:0%
if they are equal then we wanna know
okay<00:14:29.040><c> so</c><00:14:29.279><c> dp</c><00:14:29.920><c> of</c>

00:14:30.230 --> 00:14:30.240 align:start position:0%
okay so dp of
 

00:14:30.240 --> 00:14:33.670 align:start position:0%
okay so dp of
i<00:14:30.959><c> is</c><00:14:31.199><c> going</c><00:14:31.279><c> to</c><00:14:31.440><c> be</c><00:14:32.000><c> set</c><00:14:32.399><c> to</c><00:14:32.720><c> dp</c>

00:14:33.670 --> 00:14:33.680 align:start position:0%
i is going to be set to dp
 

00:14:33.680 --> 00:14:36.949 align:start position:0%
i is going to be set to dp
of<00:14:34.000><c> i</c><00:14:34.639><c> plus</c><00:14:35.120><c> the</c><00:14:35.360><c> length</c><00:14:35.760><c> of</c><00:14:35.920><c> w</c><00:14:36.399><c> right</c><00:14:36.560><c> that</c><00:14:36.720><c> was</c>

00:14:36.949 --> 00:14:36.959 align:start position:0%
of i plus the length of w right that was
 

00:14:36.959 --> 00:14:38.310 align:start position:0%
of i plus the length of w right that was
the<00:14:37.120><c> relationship</c><00:14:37.760><c> we</c><00:14:37.920><c> got</c>

00:14:38.310 --> 00:14:38.320 align:start position:0%
the relationship we got
 

00:14:38.320 --> 00:14:41.829 align:start position:0%
the relationship we got
i<00:14:38.720><c> plus</c><00:14:39.920><c> the</c><00:14:40.160><c> length</c><00:14:40.639><c> of</c><00:14:40.959><c> whatever</c><00:14:41.279><c> the</c><00:14:41.440><c> word</c>

00:14:41.829 --> 00:14:41.839 align:start position:0%
i plus the length of whatever the word
 

00:14:41.839 --> 00:14:42.949 align:start position:0%
i plus the length of whatever the word
happens<00:14:42.160><c> to</c><00:14:42.399><c> be</c>

00:14:42.949 --> 00:14:42.959 align:start position:0%
happens to be
 

00:14:42.959 --> 00:14:46.470 align:start position:0%
happens to be
now<00:14:43.279><c> if</c><00:14:43.600><c> we</c><00:14:43.920><c> got</c><00:14:44.320><c> a</c><00:14:44.560><c> single</c><00:14:45.440><c> a</c><00:14:45.600><c> way</c><00:14:45.920><c> to</c><00:14:46.079><c> word</c>

00:14:46.470 --> 00:14:46.480 align:start position:0%
now if we got a single a way to word
 

00:14:46.480 --> 00:14:47.030 align:start position:0%
now if we got a single a way to word
break<00:14:46.720><c> this</c>

00:14:47.030 --> 00:14:47.040 align:start position:0%
break this
 

00:14:47.040 --> 00:14:49.269 align:start position:0%
break this
starting<00:14:47.440><c> at</c><00:14:48.000><c> index</c><00:14:48.399><c> i</c><00:14:48.639><c> that</c><00:14:48.800><c> means</c><00:14:49.040><c> we</c><00:14:49.199><c> can</c>

00:14:49.269 --> 00:14:49.279 align:start position:0%
starting at index i that means we can
 

00:14:49.279 --> 00:14:51.030 align:start position:0%
starting at index i that means we can
basically<00:14:49.760><c> stop</c><00:14:50.079><c> this</c><00:14:50.399><c> loop</c><00:14:50.639><c> right</c><00:14:50.800><c> we</c><00:14:50.880><c> don't</c>

00:14:51.030 --> 00:14:51.040 align:start position:0%
basically stop this loop right we don't
 

00:14:51.040 --> 00:14:52.550 align:start position:0%
basically stop this loop right we don't
have<00:14:51.120><c> to</c><00:14:51.199><c> look</c><00:14:51.440><c> at</c><00:14:51.600><c> every</c><00:14:51.839><c> single</c><00:14:52.160><c> word</c><00:14:52.399><c> in</c><00:14:52.480><c> the</c>

00:14:52.550 --> 00:14:52.560 align:start position:0%
have to look at every single word in the
 

00:14:52.560 --> 00:14:53.910 align:start position:0%
have to look at every single word in the
dictionary<00:14:53.040><c> if</c><00:14:53.120><c> we</c><00:14:53.199><c> found</c><00:14:53.440><c> at</c><00:14:53.519><c> least</c>

00:14:53.910 --> 00:14:53.920 align:start position:0%
dictionary if we found at least
 

00:14:53.920 --> 00:14:55.670 align:start position:0%
dictionary if we found at least
one<00:14:54.160><c> way</c><00:14:54.320><c> we</c><00:14:54.480><c> were</c><00:14:54.639><c> able</c><00:14:54.800><c> to</c><00:14:54.959><c> word</c><00:14:55.279><c> break</c><00:14:55.519><c> it</c>

00:14:55.670 --> 00:14:55.680 align:start position:0%
one way we were able to word break it
 

00:14:55.680 --> 00:14:57.590 align:start position:0%
one way we were able to word break it
then<00:14:55.839><c> we're</c><00:14:56.000><c> gonna</c><00:14:56.160><c> stop</c><00:14:56.399><c> so</c><00:14:56.560><c> basically</c><00:14:56.959><c> if</c><00:14:57.120><c> dp</c>

00:14:57.590 --> 00:14:57.600 align:start position:0%
then we're gonna stop so basically if dp
 

00:14:57.600 --> 00:14:58.470 align:start position:0%
then we're gonna stop so basically if dp
of<00:14:57.920><c> i</c>

00:14:58.470 --> 00:14:58.480 align:start position:0%
of i
 

00:14:58.480 --> 00:15:01.110 align:start position:0%
of i
is<00:14:58.880><c> true</c><00:14:59.360><c> then</c><00:14:59.519><c> we</c><00:14:59.680><c> can</c><00:14:59.839><c> break</c><00:15:00.320><c> out</c><00:15:00.480><c> of</c><00:15:00.560><c> this</c>

00:15:01.110 --> 00:15:01.120 align:start position:0%
is true then we can break out of this
 

00:15:01.120 --> 00:15:03.590 align:start position:0%
is true then we can break out of this
for<00:15:01.360><c> loop</c><00:15:01.760><c> and</c><00:15:01.920><c> then</c><00:15:02.079><c> move</c><00:15:02.399><c> on</c><00:15:02.560><c> to</c><00:15:02.880><c> the</c><00:15:03.120><c> next</c>

00:15:03.590 --> 00:15:03.600 align:start position:0%
for loop and then move on to the next
 

00:15:03.600 --> 00:15:05.750 align:start position:0%
for loop and then move on to the next
index<00:15:04.480><c> so</c><00:15:04.639><c> we're</c><00:15:04.800><c> going</c><00:15:04.880><c> to</c><00:15:05.040><c> start</c><00:15:05.279><c> basically</c>

00:15:05.750 --> 00:15:05.760 align:start position:0%
index so we're going to start basically
 

00:15:05.760 --> 00:15:06.790 align:start position:0%
index so we're going to start basically
at<00:15:05.839><c> the</c><00:15:05.920><c> last</c><00:15:06.240><c> index</c>

00:15:06.790 --> 00:15:06.800 align:start position:0%
at the last index
 

00:15:06.800 --> 00:15:09.110 align:start position:0%
at the last index
keep<00:15:06.959><c> going</c><00:15:07.279><c> until</c><00:15:07.519><c> we've</c><00:15:07.760><c> gotten</c><00:15:08.000><c> to</c><00:15:08.240><c> index</c><00:15:08.720><c> 0</c>

00:15:09.110 --> 00:15:09.120 align:start position:0%
keep going until we've gotten to index 0
 

00:15:09.120 --> 00:15:10.629 align:start position:0%
keep going until we've gotten to index 0
and<00:15:09.199><c> then</c><00:15:09.360><c> once</c><00:15:09.600><c> we've</c><00:15:09.760><c> done</c><00:15:09.920><c> that</c><00:15:10.079><c> we</c><00:15:10.320><c> know</c><00:15:10.480><c> we</c>

00:15:10.629 --> 00:15:10.639 align:start position:0%
and then once we've done that we know we
 

00:15:10.639 --> 00:15:12.069 align:start position:0%
and then once we've done that we know we
can<00:15:10.800><c> actually</c><00:15:11.040><c> return</c><00:15:11.600><c> that</c>

00:15:12.069 --> 00:15:12.079 align:start position:0%
can actually return that
 

00:15:12.079 --> 00:15:14.150 align:start position:0%
can actually return that
and<00:15:12.160><c> that's</c><00:15:12.399><c> going</c><00:15:12.480><c> to</c><00:15:12.560><c> be</c><00:15:12.639><c> stored</c><00:15:13.120><c> in</c><00:15:13.279><c> dp</c><00:15:13.920><c> of</c>

00:15:14.150 --> 00:15:14.160 align:start position:0%
and that's going to be stored in dp of
 

00:15:14.160 --> 00:15:15.990 align:start position:0%
and that's going to be stored in dp of
zero<00:15:14.880><c> so</c><00:15:15.120><c> believe</c><00:15:15.440><c> it</c><00:15:15.519><c> or</c><00:15:15.600><c> not</c>

00:15:15.990 --> 00:15:16.000 align:start position:0%
zero so believe it or not
 

00:15:16.000 --> 00:15:18.790 align:start position:0%
zero so believe it or not
that<00:15:16.240><c> is</c><00:15:16.399><c> the</c><00:15:16.560><c> entire</c><00:15:16.959><c> code</c><00:15:17.680><c> about</c><00:15:18.000><c> 10</c><00:15:18.320><c> lines</c><00:15:18.639><c> i</c>

00:15:18.790 --> 00:15:18.800 align:start position:0%
that is the entire code about 10 lines i
 

00:15:18.800 --> 00:15:19.430 align:start position:0%
that is the entire code about 10 lines i
think<00:15:19.120><c> and</c>

00:15:19.430 --> 00:15:19.440 align:start position:0%
think and
 

00:15:19.440 --> 00:15:21.509 align:start position:0%
think and
this<00:15:19.760><c> is</c><00:15:20.000><c> a</c><00:15:20.240><c> pretty</c><00:15:20.480><c> efficient</c><00:15:20.880><c> solution</c><00:15:21.360><c> as</c>

00:15:21.509 --> 00:15:21.519 align:start position:0%
this is a pretty efficient solution as
 

00:15:21.519 --> 00:15:23.189 align:start position:0%
this is a pretty efficient solution as
you<00:15:21.600><c> can</c><00:15:21.839><c> see</c><00:15:22.240><c> so</c><00:15:22.399><c> i</c><00:15:22.480><c> hope</c><00:15:22.639><c> that</c><00:15:22.800><c> this</c><00:15:22.959><c> was</c>

00:15:23.189 --> 00:15:23.199 align:start position:0%
you can see so i hope that this was
 

00:15:23.199 --> 00:15:23.750 align:start position:0%
you can see so i hope that this was
helpful

00:15:23.750 --> 00:15:23.760 align:start position:0%
helpful
 

00:15:23.760 --> 00:15:25.829 align:start position:0%
helpful
if<00:15:24.000><c> it</c><00:15:24.160><c> was</c><00:15:24.639><c> please</c><00:15:24.959><c> like</c><00:15:25.120><c> and</c><00:15:25.279><c> subscribe</c><00:15:25.760><c> it</c>

00:15:25.829 --> 00:15:25.839 align:start position:0%
if it was please like and subscribe it
 

00:15:25.839 --> 00:15:27.430 align:start position:0%
if it was please like and subscribe it
supports<00:15:26.240><c> the</c><00:15:26.399><c> channel</c><00:15:26.800><c> a</c><00:15:27.040><c> lot</c>

00:15:27.430 --> 00:15:27.440 align:start position:0%
supports the channel a lot
 

00:15:27.440 --> 00:15:29.590 align:start position:0%
supports the channel a lot
and<00:15:27.519><c> i'll</c><00:15:27.760><c> hopefully</c><00:15:28.399><c> see</c><00:15:28.639><c> you</c><00:15:28.800><c> pretty</c><00:15:29.040><c> soon</c>

00:15:29.590 --> 00:15:29.600 align:start position:0%
and i'll hopefully see you pretty soon
 

00:15:29.600 --> 00:15:36.079 align:start position:0%
and i'll hopefully see you pretty soon
thanks<00:15:29.839><c> for</c><00:15:33.079><c> watching</c>

