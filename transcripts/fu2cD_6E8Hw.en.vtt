WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.670 align:start position:0%
 
hey<00:00:00.160><c> everyone</c><00:00:00.640><c> welcome</c><00:00:01.040><c> back</c><00:00:01.360><c> and</c><00:00:01.439><c> let's</c>

00:00:01.670 --> 00:00:01.680 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.680 --> 00:00:03.590 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.920><c> some</c><00:00:02.080><c> more</c><00:00:02.320><c> neat</c><00:00:02.560><c> code</c><00:00:02.800><c> today</c><00:00:03.040><c> so</c><00:00:03.199><c> today</c>

00:00:03.590 --> 00:00:03.600 align:start position:0%
write some more neat code today so today
 

00:00:03.600 --> 00:00:06.150 align:start position:0%
write some more neat code today so today
let's<00:00:03.840><c> solve</c><00:00:04.080><c> the</c><00:00:04.319><c> problem</c><00:00:04.880><c> time</c><00:00:05.279><c> based</c><00:00:05.839><c> key</c>

00:00:06.150 --> 00:00:06.160 align:start position:0%
let's solve the problem time based key
 

00:00:06.160 --> 00:00:08.070 align:start position:0%
let's solve the problem time based key
value<00:00:06.640><c> store</c><00:00:07.200><c> and</c><00:00:07.359><c> this</c><00:00:07.600><c> is</c><00:00:07.680><c> one</c><00:00:07.839><c> of</c><00:00:07.919><c> my</c>

00:00:08.070 --> 00:00:08.080 align:start position:0%
value store and this is one of my
 

00:00:08.080 --> 00:00:10.390 align:start position:0%
value store and this is one of my
favorite<00:00:08.559><c> problems</c><00:00:09.280><c> honestly</c><00:00:09.840><c> on</c><00:00:10.080><c> all</c><00:00:10.240><c> of</c>

00:00:10.390 --> 00:00:10.400 align:start position:0%
favorite problems honestly on all of
 

00:00:10.400 --> 00:00:12.470 align:start position:0%
favorite problems honestly on all of
late<00:00:10.639><c> code</c><00:00:10.960><c> because</c><00:00:11.759><c> there's</c><00:00:12.000><c> not</c><00:00:12.160><c> a</c><00:00:12.240><c> lot</c><00:00:12.400><c> of</c>

00:00:12.470 --> 00:00:12.480 align:start position:0%
late code because there's not a lot of
 

00:00:12.480 --> 00:00:14.230 align:start position:0%
late code because there's not a lot of
fancy<00:00:12.960><c> tricks</c><00:00:13.280><c> involved</c><00:00:13.679><c> you</c><00:00:13.759><c> can</c><00:00:13.920><c> really</c>

00:00:14.230 --> 00:00:14.240 align:start position:0%
fancy tricks involved you can really
 

00:00:14.240 --> 00:00:16.470 align:start position:0%
fancy tricks involved you can really
logically<00:00:15.200><c> uh</c><00:00:15.599><c> you</c><00:00:15.759><c> know</c><00:00:15.839><c> dig</c><00:00:16.080><c> your</c><00:00:16.240><c> way</c>

00:00:16.470 --> 00:00:16.480 align:start position:0%
logically uh you know dig your way
 

00:00:16.480 --> 00:00:18.630 align:start position:0%
logically uh you know dig your way
through<00:00:16.720><c> this</c><00:00:16.960><c> problem</c><00:00:17.760><c> so</c><00:00:17.920><c> you</c><00:00:18.080><c> can</c><00:00:18.240><c> go</c><00:00:18.400><c> ahead</c>

00:00:18.630 --> 00:00:18.640 align:start position:0%
through this problem so you can go ahead
 

00:00:18.640 --> 00:00:20.390 align:start position:0%
through this problem so you can go ahead
and<00:00:18.800><c> read</c><00:00:19.119><c> through</c><00:00:19.359><c> this</c><00:00:19.680><c> description</c><00:00:20.160><c> if</c><00:00:20.320><c> you</c>

00:00:20.390 --> 00:00:20.400 align:start position:0%
and read through this description if you
 

00:00:20.400 --> 00:00:21.830 align:start position:0%
and read through this description if you
want<00:00:20.560><c> but</c><00:00:20.720><c> i'm</c><00:00:20.880><c> going</c><00:00:20.960><c> to</c><00:00:21.039><c> go</c><00:00:21.199><c> ahead</c><00:00:21.359><c> and</c><00:00:21.600><c> jump</c>

00:00:21.830 --> 00:00:21.840 align:start position:0%
want but i'm going to go ahead and jump
 

00:00:21.840 --> 00:00:24.390 align:start position:0%
want but i'm going to go ahead and jump
straight<00:00:22.400><c> into</c><00:00:22.720><c> the</c><00:00:22.960><c> explanation</c><00:00:24.080><c> because</c><00:00:24.320><c> i</c>

00:00:24.390 --> 00:00:24.400 align:start position:0%
straight into the explanation because i
 

00:00:24.400 --> 00:00:26.390 align:start position:0%
straight into the explanation because i
think<00:00:24.560><c> this</c><00:00:24.800><c> is</c><00:00:24.960><c> best</c><00:00:25.279><c> understood</c><00:00:26.160><c> by</c>

00:00:26.390 --> 00:00:26.400 align:start position:0%
think this is best understood by
 

00:00:26.400 --> 00:00:28.630 align:start position:0%
think this is best understood by
actually<00:00:26.720><c> going</c><00:00:26.960><c> through</c><00:00:27.199><c> an</c><00:00:27.359><c> example</c><00:00:28.240><c> so</c><00:00:28.480><c> our</c>

00:00:28.630 --> 00:00:28.640 align:start position:0%
actually going through an example so our
 

00:00:28.640 --> 00:00:31.429 align:start position:0%
actually going through an example so our
whole<00:00:28.880><c> objective</c><00:00:29.359><c> here</c><00:00:29.679><c> is</c><00:00:29.920><c> to</c><00:00:30.240><c> design</c><00:00:30.720><c> a</c><00:00:31.039><c> key</c>

00:00:31.429 --> 00:00:31.439 align:start position:0%
whole objective here is to design a key
 

00:00:31.439 --> 00:00:33.830 align:start position:0%
whole objective here is to design a key
value<00:00:32.000><c> store</c><00:00:32.719><c> so</c><00:00:32.960><c> it's</c><00:00:33.120><c> kind</c><00:00:33.200><c> of</c><00:00:33.280><c> like</c><00:00:33.440><c> a</c><00:00:33.520><c> hash</c>

00:00:33.830 --> 00:00:33.840 align:start position:0%
value store so it's kind of like a hash
 

00:00:33.840 --> 00:00:35.830 align:start position:0%
value store so it's kind of like a hash
map<00:00:34.000><c> we're</c><00:00:34.160><c> gonna</c><00:00:34.320><c> have</c><00:00:34.559><c> some</c><00:00:34.960><c> key</c><00:00:35.280><c> value</c><00:00:35.760><c> and</c>

00:00:35.830 --> 00:00:35.840 align:start position:0%
map we're gonna have some key value and
 

00:00:35.840 --> 00:00:38.470 align:start position:0%
map we're gonna have some key value and
then<00:00:36.079><c> we're</c><00:00:36.239><c> gonna</c><00:00:36.480><c> have</c><00:00:36.880><c> a</c><00:00:37.120><c> value</c><00:00:37.600><c> associated</c>

00:00:38.470 --> 00:00:38.480 align:start position:0%
then we're gonna have a value associated
 

00:00:38.480 --> 00:00:40.150 align:start position:0%
then we're gonna have a value associated
with<00:00:38.800><c> that</c><00:00:39.120><c> key</c><00:00:39.440><c> but</c><00:00:39.600><c> we're</c><00:00:39.760><c> actually</c><00:00:40.000><c> not</c>

00:00:40.150 --> 00:00:40.160 align:start position:0%
with that key but we're actually not
 

00:00:40.160 --> 00:00:41.830 align:start position:0%
with that key but we're actually not
just<00:00:40.320><c> gonna</c><00:00:40.480><c> have</c><00:00:40.640><c> a</c><00:00:40.879><c> single</c><00:00:41.280><c> value</c><00:00:41.680><c> we're</c>

00:00:41.830 --> 00:00:41.840 align:start position:0%
just gonna have a single value we're
 

00:00:41.840 --> 00:00:44.630 align:start position:0%
just gonna have a single value we're
gonna<00:00:42.000><c> have</c><00:00:42.239><c> a</c><00:00:42.559><c> list</c><00:00:43.120><c> of</c><00:00:43.520><c> values</c>

00:00:44.630 --> 00:00:44.640 align:start position:0%
gonna have a list of values
 

00:00:44.640 --> 00:00:47.430 align:start position:0%
gonna have a list of values
uh<00:00:44.879><c> so</c><00:00:45.120><c> plural</c><00:00:45.600><c> so</c><00:00:45.840><c> it'll</c><00:00:46.079><c> be</c><00:00:46.239><c> a</c><00:00:46.480><c> list</c><00:00:46.960><c> and</c><00:00:47.200><c> in</c>

00:00:47.430 --> 00:00:47.440 align:start position:0%
uh so plural so it'll be a list and in
 

00:00:47.440 --> 00:00:50.069 align:start position:0%
uh so plural so it'll be a list and in
that<00:00:47.840><c> list</c><00:00:48.399><c> we're</c><00:00:48.559><c> gonna</c><00:00:48.719><c> have</c><00:00:49.120><c> a</c><00:00:49.360><c> pair</c><00:00:49.920><c> of</c>

00:00:50.069 --> 00:00:50.079 align:start position:0%
that list we're gonna have a pair of
 

00:00:50.079 --> 00:00:51.350 align:start position:0%
that list we're gonna have a pair of
values<00:00:50.480><c> so</c><00:00:50.640><c> it's</c><00:00:50.719><c> not</c><00:00:50.879><c> just</c><00:00:51.039><c> gonna</c><00:00:51.199><c> be</c><00:00:51.280><c> a</c>

00:00:51.350 --> 00:00:51.360 align:start position:0%
values so it's not just gonna be a
 

00:00:51.360 --> 00:00:54.150 align:start position:0%
values so it's not just gonna be a
single<00:00:51.760><c> value</c><00:00:52.239><c> each</c><00:00:52.640><c> value</c><00:00:53.199><c> is</c><00:00:53.360><c> gonna</c><00:00:53.520><c> have</c><00:00:53.840><c> a</c>

00:00:54.150 --> 00:00:54.160 align:start position:0%
single value each value is gonna have a
 

00:00:54.160 --> 00:00:57.029 align:start position:0%
single value each value is gonna have a
time<00:00:54.640><c> stamp</c><00:00:55.199><c> associated</c><00:00:56.000><c> with</c><00:00:56.239><c> it</c><00:00:56.559><c> so</c><00:00:56.800><c> for</c><00:00:56.960><c> an</c>

00:00:57.029 --> 00:00:57.039 align:start position:0%
time stamp associated with it so for an
 

00:00:57.039 --> 00:00:59.349 align:start position:0%
time stamp associated with it so for an
example<00:00:57.440><c> we</c><00:00:57.600><c> can</c><00:00:57.760><c> have</c><00:00:57.920><c> a</c><00:00:58.000><c> key</c><00:00:58.320><c> value</c><00:00:58.879><c> of</c><00:00:59.120><c> let's</c>

00:00:59.349 --> 00:00:59.359 align:start position:0%
example we can have a key value of let's
 

00:00:59.359 --> 00:01:01.590 align:start position:0%
example we can have a key value of let's
say<00:00:59.840><c> foo</c><00:01:00.480><c> and</c><00:01:00.719><c> we</c><00:01:00.800><c> would</c><00:01:00.960><c> have</c><00:01:01.120><c> a</c><00:01:01.199><c> list</c><00:01:01.520><c> of</c>

00:01:01.590 --> 00:01:01.600 align:start position:0%
say foo and we would have a list of
 

00:01:01.600 --> 00:01:03.830 align:start position:0%
say foo and we would have a list of
values<00:01:02.160><c> associated</c><00:01:02.800><c> with</c><00:01:02.960><c> that</c><00:01:03.199><c> and</c><00:01:03.359><c> one</c><00:01:03.600><c> of</c>

00:01:03.830 --> 00:01:03.840 align:start position:0%
values associated with that and one of
 

00:01:03.840 --> 00:01:06.789 align:start position:0%
values associated with that and one of
the<00:01:04.320><c> values</c><00:01:04.879><c> the</c><00:01:05.040><c> pair</c><00:01:05.439><c> of</c><00:01:05.600><c> values</c><00:01:06.479><c> right</c>

00:01:06.789 --> 00:01:06.799 align:start position:0%
the values the pair of values right
 

00:01:06.799 --> 00:01:08.630 align:start position:0%
the values the pair of values right
because<00:01:07.119><c> we're</c><00:01:07.280><c> going</c><00:01:07.360><c> to</c><00:01:07.439><c> have</c><00:01:07.760><c> a</c><00:01:08.000><c> value</c><00:01:08.560><c> and</c>

00:01:08.630 --> 00:01:08.640 align:start position:0%
because we're going to have a value and
 

00:01:08.640 --> 00:01:10.789 align:start position:0%
because we're going to have a value and
then<00:01:08.960><c> a</c><00:01:09.280><c> time</c><00:01:09.920><c> so</c>

00:01:10.789 --> 00:01:10.799 align:start position:0%
then a time so
 

00:01:10.799 --> 00:01:13.109 align:start position:0%
then a time so
the<00:01:10.960><c> value</c><00:01:11.360><c> let's</c><00:01:11.600><c> say</c><00:01:11.920><c> is</c><00:01:12.000><c> going</c><00:01:12.159><c> to</c><00:01:12.240><c> be</c><00:01:12.640><c> bar</c>

00:01:13.109 --> 00:01:13.119 align:start position:0%
the value let's say is going to be bar
 

00:01:13.119 --> 00:01:16.550 align:start position:0%
the value let's say is going to be bar
it's<00:01:13.280><c> a</c><00:01:13.439><c> string</c><00:01:14.000><c> in</c><00:01:14.159><c> this</c><00:01:14.400><c> case</c><00:01:14.880><c> and</c><00:01:15.680><c> the</c><00:01:16.240><c> time</c>

00:01:16.550 --> 00:01:16.560 align:start position:0%
it's a string in this case and the time
 

00:01:16.560 --> 00:01:18.630 align:start position:0%
it's a string in this case and the time
stamp<00:01:16.880><c> associated</c><00:01:17.439><c> with</c><00:01:17.600><c> it</c><00:01:17.680><c> let's</c><00:01:17.840><c> just</c><00:01:18.000><c> say</c>

00:01:18.630 --> 00:01:18.640 align:start position:0%
stamp associated with it let's just say
 

00:01:18.640 --> 00:01:20.070 align:start position:0%
stamp associated with it let's just say
in<00:01:18.799><c> this</c><00:01:18.960><c> case</c><00:01:19.280><c> the</c><00:01:19.439><c> example</c><00:01:19.759><c> it's</c><00:01:19.920><c> going</c><00:01:20.000><c> to</c>

00:01:20.070 --> 00:01:20.080 align:start position:0%
in this case the example it's going to
 

00:01:20.080 --> 00:01:21.830 align:start position:0%
in this case the example it's going to
be<00:01:20.240><c> integer</c><00:01:20.560><c> so</c><00:01:20.720><c> let's</c><00:01:20.880><c> just</c><00:01:21.040><c> say</c><00:01:21.200><c> it's</c><00:01:21.439><c> 1</c><00:01:21.759><c> in</c>

00:01:21.830 --> 00:01:21.840 align:start position:0%
be integer so let's just say it's 1 in
 

00:01:21.840 --> 00:01:24.390 align:start position:0%
be integer so let's just say it's 1 in
this<00:01:22.080><c> case</c><00:01:22.640><c> and</c><00:01:22.799><c> then</c><00:01:23.439><c> we</c><00:01:23.600><c> could</c><00:01:23.840><c> have</c><00:01:24.159><c> a</c>

00:01:24.390 --> 00:01:24.400 align:start position:0%
this case and then we could have a
 

00:01:24.400 --> 00:01:26.710 align:start position:0%
this case and then we could have a
second<00:01:24.799><c> value</c><00:01:25.680><c> right</c><00:01:25.920><c> associated</c><00:01:26.320><c> with</c><00:01:26.479><c> it</c><00:01:26.640><c> as</c>

00:01:26.710 --> 00:01:26.720 align:start position:0%
second value right associated with it as
 

00:01:26.720 --> 00:01:28.070 align:start position:0%
second value right associated with it as
well<00:01:27.040><c> and</c><00:01:27.119><c> that</c><00:01:27.360><c> will</c><00:01:27.520><c> have</c><00:01:27.680><c> its</c><00:01:27.840><c> own</c>

00:01:28.070 --> 00:01:28.080 align:start position:0%
well and that will have its own
 

00:01:28.080 --> 00:01:30.310 align:start position:0%
well and that will have its own
timestamp<00:01:28.640><c> as</c><00:01:28.720><c> well</c><00:01:28.960><c> right</c><00:01:29.119><c> so</c><00:01:29.520><c> basically</c>

00:01:30.310 --> 00:01:30.320 align:start position:0%
timestamp as well right so basically
 

00:01:30.320 --> 00:01:32.390 align:start position:0%
timestamp as well right so basically
it's<00:01:30.479><c> going</c><00:01:30.560><c> to</c><00:01:30.640><c> be</c><00:01:30.720><c> a</c><00:01:30.799><c> list</c><00:01:31.040><c> of</c><00:01:31.119><c> values</c><00:01:31.920><c> the</c>

00:01:32.390 --> 00:01:32.400 align:start position:0%
it's going to be a list of values the
 

00:01:32.400 --> 00:01:33.670 align:start position:0%
it's going to be a list of values the
and<00:01:32.560><c> the</c><00:01:32.640><c> values</c><00:01:33.040><c> themselves</c><00:01:33.439><c> are</c><00:01:33.520><c> going</c><00:01:33.600><c> to</c>

00:01:33.670 --> 00:01:33.680 align:start position:0%
and the values themselves are going to
 

00:01:33.680 --> 00:01:36.230 align:start position:0%
and the values themselves are going to
be<00:01:33.920><c> pairs</c><00:01:34.479><c> a</c><00:01:34.640><c> value</c><00:01:35.119><c> and</c><00:01:35.200><c> then</c><00:01:35.439><c> a</c><00:01:35.600><c> timestamp</c>

00:01:36.230 --> 00:01:36.240 align:start position:0%
be pairs a value and then a timestamp
 

00:01:36.240 --> 00:01:38.069 align:start position:0%
be pairs a value and then a timestamp
associated<00:01:36.799><c> with</c><00:01:36.880><c> that</c><00:01:37.119><c> so</c><00:01:37.200><c> it's</c><00:01:37.360><c> not</c><00:01:37.680><c> super</c>

00:01:38.069 --> 00:01:38.079 align:start position:0%
associated with that so it's not super
 

00:01:38.079 --> 00:01:41.270 align:start position:0%
associated with that so it's not super
complicated<00:01:39.040><c> but</c><00:01:39.280><c> the</c><00:01:39.520><c> main</c><00:01:39.840><c> operations</c><00:01:41.119><c> that</c>

00:01:41.270 --> 00:01:41.280 align:start position:0%
complicated but the main operations that
 

00:01:41.280 --> 00:01:42.630 align:start position:0%
complicated but the main operations that
we're<00:01:41.439><c> going</c><00:01:41.520><c> to</c><00:01:41.680><c> support</c><00:01:42.159><c> are</c><00:01:42.320><c> actually</c>

00:01:42.630 --> 00:01:42.640 align:start position:0%
we're going to support are actually
 

00:01:42.640 --> 00:01:45.109 align:start position:0%
we're going to support are actually
pretty<00:01:42.880><c> simple</c><00:01:43.280><c> just</c><00:01:43.680><c> two</c><00:01:43.920><c> operations</c>

00:01:45.109 --> 00:01:45.119 align:start position:0%
pretty simple just two operations
 

00:01:45.119 --> 00:01:46.469 align:start position:0%
pretty simple just two operations
actually<00:01:45.520><c> three</c><00:01:45.840><c> if</c><00:01:45.920><c> you</c><00:01:46.079><c> count</c><00:01:46.320><c> the</c>

00:01:46.469 --> 00:01:46.479 align:start position:0%
actually three if you count the
 

00:01:46.479 --> 00:01:48.469 align:start position:0%
actually three if you count the
constructor<00:01:47.119><c> so</c><00:01:47.360><c> yes</c><00:01:47.680><c> we're</c><00:01:47.840><c> going</c><00:01:47.920><c> to</c><00:01:48.000><c> have</c><00:01:48.240><c> a</c>

00:01:48.469 --> 00:01:48.479 align:start position:0%
constructor so yes we're going to have a
 

00:01:48.479 --> 00:01:50.389 align:start position:0%
constructor so yes we're going to have a
you<00:01:48.640><c> know</c><00:01:48.799><c> constructor</c><00:01:49.520><c> because</c><00:01:49.759><c> it's</c><00:01:50.240><c> an</c>

00:01:50.389 --> 00:01:50.399 align:start position:0%
you know constructor because it's an
 

00:01:50.399 --> 00:01:52.550 align:start position:0%
you know constructor because it's an
object<00:01:50.799><c> that</c><00:01:50.880><c> we're</c><00:01:51.040><c> designing</c><00:01:51.520><c> a</c><00:01:51.600><c> class</c><00:01:52.399><c> and</c>

00:01:52.550 --> 00:01:52.560 align:start position:0%
object that we're designing a class and
 

00:01:52.560 --> 00:01:54.310 align:start position:0%
object that we're designing a class and
the<00:01:52.640><c> two</c><00:01:52.960><c> operations</c><00:01:53.360><c> we</c><00:01:53.520><c> want</c><00:01:53.600><c> to</c><00:01:53.759><c> support</c><00:01:54.159><c> on</c>

00:01:54.310 --> 00:01:54.320 align:start position:0%
the two operations we want to support on
 

00:01:54.320 --> 00:01:57.350 align:start position:0%
the two operations we want to support on
this<00:01:54.880><c> key</c><00:01:55.119><c> value</c><00:01:55.520><c> store</c><00:01:56.079><c> are</c><00:01:56.159><c> going</c><00:01:56.320><c> to</c><00:01:56.399><c> be</c><00:01:56.719><c> set</c>

00:01:57.350 --> 00:01:57.360 align:start position:0%
this key value store are going to be set
 

00:01:57.360 --> 00:01:59.190 align:start position:0%
this key value store are going to be set
and<00:01:57.759><c> get</c><00:01:58.000><c> which</c><00:01:58.240><c> is</c><00:01:58.320><c> pretty</c><00:01:58.560><c> straightforward</c>

00:01:59.190 --> 00:01:59.200 align:start position:0%
and get which is pretty straightforward
 

00:01:59.200 --> 00:02:00.870 align:start position:0%
and get which is pretty straightforward
that's<00:01:59.360><c> what</c><00:01:59.520><c> we</c><00:01:59.600><c> would</c><00:01:59.840><c> expect</c><00:02:00.479><c> so</c><00:02:00.640><c> let's</c>

00:02:00.870 --> 00:02:00.880 align:start position:0%
that's what we would expect so let's
 

00:02:00.880 --> 00:02:02.709 align:start position:0%
that's what we would expect so let's
just<00:02:01.119><c> go</c><00:02:01.360><c> through</c><00:02:01.600><c> this</c><00:02:01.840><c> example</c><00:02:02.320><c> and</c><00:02:02.479><c> i</c><00:02:02.560><c> think</c>

00:02:02.709 --> 00:02:02.719 align:start position:0%
just go through this example and i think
 

00:02:02.719 --> 00:02:04.310 align:start position:0%
just go through this example and i think
the<00:02:02.960><c> problem</c><00:02:03.280><c> will</c><00:02:03.439><c> actually</c><00:02:03.680><c> make</c><00:02:03.920><c> a</c><00:02:04.000><c> lot</c><00:02:04.159><c> of</c>

00:02:04.310 --> 00:02:04.320 align:start position:0%
the problem will actually make a lot of
 

00:02:04.320 --> 00:02:06.709 align:start position:0%
the problem will actually make a lot of
sense<00:02:04.640><c> to</c><00:02:04.719><c> you</c><00:02:04.960><c> so</c><00:02:05.520><c> the</c><00:02:05.680><c> first</c><00:02:06.000><c> operation</c><00:02:06.560><c> we</c>

00:02:06.709 --> 00:02:06.719 align:start position:0%
sense to you so the first operation we
 

00:02:06.719 --> 00:02:10.070 align:start position:0%
sense to you so the first operation we
have<00:02:07.119><c> is</c><00:02:07.360><c> a</c><00:02:07.759><c> set</c><00:02:08.239><c> operation</c><00:02:09.119><c> the</c><00:02:09.360><c> key</c><00:02:09.759><c> is</c><00:02:10.000><c> going</c>

00:02:10.070 --> 00:02:10.080 align:start position:0%
have is a set operation the key is going
 

00:02:10.080 --> 00:02:12.869 align:start position:0%
have is a set operation the key is going
to<00:02:10.160><c> be</c><00:02:10.319><c> the</c><00:02:10.479><c> first</c><00:02:10.720><c> value</c><00:02:11.200><c> foo</c><00:02:11.920><c> the</c><00:02:12.239><c> value</c><00:02:12.720><c> is</c>

00:02:12.869 --> 00:02:12.879 align:start position:0%
to be the first value foo the value is
 

00:02:12.879 --> 00:02:14.790 align:start position:0%
to be the first value foo the value is
going<00:02:13.040><c> to</c><00:02:13.120><c> be</c><00:02:13.440><c> bar</c><00:02:13.920><c> and</c><00:02:14.080><c> the</c><00:02:14.239><c> time</c><00:02:14.480><c> stamp</c>

00:02:14.790 --> 00:02:14.800 align:start position:0%
going to be bar and the time stamp
 

00:02:14.800 --> 00:02:16.949 align:start position:0%
going to be bar and the time stamp
associated<00:02:15.280><c> with</c><00:02:15.440><c> it</c><00:02:15.520><c> is</c><00:02:15.680><c> going</c><00:02:15.760><c> to</c><00:02:15.840><c> be</c><00:02:16.000><c> 1.</c><00:02:16.319><c> so</c>

00:02:16.949 --> 00:02:16.959 align:start position:0%
associated with it is going to be 1. so
 

00:02:16.959 --> 00:02:19.190 align:start position:0%
associated with it is going to be 1. so
let's<00:02:17.599><c> put</c><00:02:17.760><c> the</c><00:02:17.840><c> first</c><00:02:18.160><c> value</c><00:02:18.560><c> here</c><00:02:19.040><c> it's</c>

00:02:19.190 --> 00:02:19.200 align:start position:0%
let's put the first value here it's
 

00:02:19.200 --> 00:02:20.470 align:start position:0%
let's put the first value here it's
going<00:02:19.280><c> to</c><00:02:19.360><c> be</c><00:02:19.680><c> bar</c>

00:02:20.470 --> 00:02:20.480 align:start position:0%
going to be bar
 

00:02:20.480 --> 00:02:22.949 align:start position:0%
going to be bar
and<00:02:21.120><c> the</c><00:02:21.360><c> time</c><00:02:21.520><c> associated</c><00:02:22.000><c> with</c><00:02:22.160><c> it</c><00:02:22.319><c> is</c><00:02:22.480><c> just</c>

00:02:22.949 --> 00:02:22.959 align:start position:0%
and the time associated with it is just
 

00:02:22.959 --> 00:02:25.830 align:start position:0%
and the time associated with it is just
one<00:02:23.520><c> and</c><00:02:23.680><c> now</c><00:02:24.080><c> we</c><00:02:24.400><c> get</c><00:02:24.720><c> the</c><00:02:24.879><c> second</c><00:02:25.200><c> operation</c>

00:02:25.830 --> 00:02:25.840 align:start position:0%
one and now we get the second operation
 

00:02:25.840 --> 00:02:28.070 align:start position:0%
one and now we get the second operation
get<00:02:26.560><c> what</c><00:02:26.720><c> are</c><00:02:26.800><c> we</c><00:02:26.959><c> getting</c><00:02:27.280><c> we're</c><00:02:27.599><c> getting</c>

00:02:28.070 --> 00:02:28.080 align:start position:0%
get what are we getting we're getting
 

00:02:28.080 --> 00:02:31.670 align:start position:0%
get what are we getting we're getting
the<00:02:28.319><c> key</c><00:02:28.959><c> uh</c><00:02:29.520><c> associated</c><00:02:30.160><c> with</c><00:02:30.800><c> foo</c>

00:02:31.670 --> 00:02:31.680 align:start position:0%
the key uh associated with foo
 

00:02:31.680 --> 00:02:33.990 align:start position:0%
the key uh associated with foo
and<00:02:31.840><c> the</c><00:02:32.319><c> the</c><00:02:32.480><c> second</c><00:02:32.800><c> parameter</c><00:02:33.360><c> in</c><00:02:33.519><c> our</c><00:02:33.680><c> get</c>

00:02:33.990 --> 00:02:34.000 align:start position:0%
and the the second parameter in our get
 

00:02:34.000 --> 00:02:35.670 align:start position:0%
and the the second parameter in our get
operation<00:02:34.720><c> is</c><00:02:34.879><c> actually</c><00:02:35.200><c> going</c><00:02:35.360><c> to</c><00:02:35.440><c> be</c><00:02:35.599><c> the</c>

00:02:35.670 --> 00:02:35.680 align:start position:0%
operation is actually going to be the
 

00:02:35.680 --> 00:02:38.790 align:start position:0%
operation is actually going to be the
time<00:02:36.080><c> stamp</c><00:02:36.720><c> so</c><00:02:37.040><c> when</c><00:02:37.280><c> we</c><00:02:37.360><c> do</c><00:02:37.519><c> a</c><00:02:37.680><c> get</c><00:02:38.000><c> operation</c>

00:02:38.790 --> 00:02:38.800 align:start position:0%
time stamp so when we do a get operation
 

00:02:38.800 --> 00:02:40.949 align:start position:0%
time stamp so when we do a get operation
normally<00:02:39.280><c> on</c><00:02:39.440><c> a</c><00:02:39.519><c> hashmap</c><00:02:40.080><c> we</c><00:02:40.160><c> just</c><00:02:40.319><c> need</c><00:02:40.560><c> a</c><00:02:40.720><c> key</c>

00:02:40.949 --> 00:02:40.959 align:start position:0%
normally on a hashmap we just need a key
 

00:02:40.959 --> 00:02:42.790 align:start position:0%
normally on a hashmap we just need a key
but<00:02:41.120><c> in</c><00:02:41.280><c> this</c><00:02:41.440><c> case</c><00:02:41.680><c> we</c><00:02:41.760><c> need</c><00:02:42.000><c> two</c><00:02:42.160><c> values</c><00:02:42.560><c> the</c>

00:02:42.790 --> 00:02:42.800 align:start position:0%
but in this case we need two values the
 

00:02:42.800 --> 00:02:44.710 align:start position:0%
but in this case we need two values the
key<00:02:43.120><c> and</c><00:02:43.360><c> the</c><00:02:43.519><c> timestamp</c><00:02:44.160><c> right</c><00:02:44.319><c> because</c><00:02:44.560><c> we</c>

00:02:44.710 --> 00:02:44.720 align:start position:0%
key and the timestamp right because we
 

00:02:44.720 --> 00:02:47.190 align:start position:0%
key and the timestamp right because we
know<00:02:44.959><c> that</c><00:02:45.200><c> for</c><00:02:45.599><c> a</c><00:02:45.760><c> single</c><00:02:46.160><c> key</c><00:02:46.720><c> it's</c><00:02:46.959><c> not</c>

00:02:47.190 --> 00:02:47.200 align:start position:0%
know that for a single key it's not
 

00:02:47.200 --> 00:02:49.589 align:start position:0%
know that for a single key it's not
enough<00:02:47.760><c> to</c><00:02:48.000><c> identify</c><00:02:48.560><c> a</c><00:02:48.720><c> value</c><00:02:49.120><c> right</c><00:02:49.360><c> because</c>

00:02:49.589 --> 00:02:49.599 align:start position:0%
enough to identify a value right because
 

00:02:49.599 --> 00:02:51.750 align:start position:0%
enough to identify a value right because
there<00:02:49.760><c> could</c><00:02:49.920><c> be</c><00:02:50.160><c> multiple</c><00:02:50.640><c> values</c><00:02:51.200><c> over</c><00:02:51.360><c> here</c>

00:02:51.750 --> 00:02:51.760 align:start position:0%
there could be multiple values over here
 

00:02:51.760 --> 00:02:53.589 align:start position:0%
there could be multiple values over here
we<00:02:51.920><c> need</c><00:02:52.160><c> the</c><00:02:52.239><c> time</c><00:02:52.480><c> stamp</c><00:02:52.800><c> to</c><00:02:52.959><c> identify</c><00:02:53.440><c> the</c>

00:02:53.589 --> 00:02:53.599 align:start position:0%
we need the time stamp to identify the
 

00:02:53.599 --> 00:02:56.070 align:start position:0%
we need the time stamp to identify the
actual<00:02:53.920><c> value</c><00:02:54.480><c> in</c><00:02:54.640><c> this</c><00:02:54.800><c> case</c><00:02:55.280><c> we</c><00:02:55.440><c> were</c><00:02:55.599><c> given</c>

00:02:56.070 --> 00:02:56.080 align:start position:0%
actual value in this case we were given
 

00:02:56.080 --> 00:02:58.149 align:start position:0%
actual value in this case we were given
a<00:02:56.239><c> key</c><00:02:56.480><c> value</c><00:02:56.879><c> of</c><00:02:57.040><c> foo</c><00:02:57.440><c> and</c><00:02:57.519><c> we</c><00:02:57.680><c> were</c><00:02:57.760><c> given</c><00:02:58.000><c> a</c>

00:02:58.149 --> 00:02:58.159 align:start position:0%
a key value of foo and we were given a
 

00:02:58.159 --> 00:03:00.309 align:start position:0%
a key value of foo and we were given a
timestamp<00:02:58.800><c> of</c><00:02:59.200><c> one</c><00:02:59.680><c> right</c><00:02:59.840><c> you</c><00:02:59.920><c> can</c><00:03:00.000><c> see</c><00:03:00.159><c> up</c>

00:03:00.309 --> 00:03:00.319 align:start position:0%
timestamp of one right you can see up
 

00:03:00.319 --> 00:03:02.149 align:start position:0%
timestamp of one right you can see up
above<00:03:00.640><c> yeah</c><00:03:00.879><c> it's</c><00:03:01.040><c> one</c><00:03:01.519><c> and</c><00:03:01.680><c> by</c><00:03:01.840><c> the</c><00:03:01.920><c> way</c><00:03:02.080><c> in</c>

00:03:02.149 --> 00:03:02.159 align:start position:0%
above yeah it's one and by the way in
 

00:03:02.159 --> 00:03:03.430 align:start position:0%
above yeah it's one and by the way in
case<00:03:02.400><c> i</c><00:03:02.480><c> didn't</c><00:03:02.640><c> mention</c><00:03:03.040><c> we're</c><00:03:03.280><c> actually</c>

00:03:03.430 --> 00:03:03.440 align:start position:0%
case i didn't mention we're actually
 

00:03:03.440 --> 00:03:05.110 align:start position:0%
case i didn't mention we're actually
going<00:03:03.519><c> to</c><00:03:03.599><c> be</c><00:03:03.840><c> implementing</c><00:03:04.319><c> this</c><00:03:04.879><c> this</c>

00:03:05.110 --> 00:03:05.120 align:start position:0%
going to be implementing this this
 

00:03:05.120 --> 00:03:07.270 align:start position:0%
going to be implementing this this
entire<00:03:05.599><c> key</c><00:03:05.760><c> value</c><00:03:06.159><c> store</c><00:03:06.319><c> with</c><00:03:06.560><c> a</c><00:03:06.720><c> hash</c><00:03:07.040><c> map</c>

00:03:07.270 --> 00:03:07.280 align:start position:0%
entire key value store with a hash map
 

00:03:07.280 --> 00:03:08.470 align:start position:0%
entire key value store with a hash map
so

00:03:08.470 --> 00:03:08.480 align:start position:0%
so
 

00:03:08.480 --> 00:03:09.830 align:start position:0%
so
you<00:03:08.640><c> know</c><00:03:08.800><c> the</c><00:03:08.959><c> keys</c><00:03:09.280><c> are</c><00:03:09.360><c> just</c><00:03:09.519><c> going</c><00:03:09.599><c> to</c><00:03:09.680><c> be</c>

00:03:09.830 --> 00:03:09.840 align:start position:0%
you know the keys are just going to be
 

00:03:09.840 --> 00:03:10.710 align:start position:0%
you know the keys are just going to be
normal

00:03:10.710 --> 00:03:10.720 align:start position:0%
normal
 

00:03:10.720 --> 00:03:13.990 align:start position:0%
normal
hash<00:03:11.040><c> map</c><00:03:11.280><c> keys</c><00:03:11.920><c> and</c><00:03:12.319><c> the</c><00:03:12.560><c> value</c><00:03:13.440><c> in</c><00:03:13.519><c> this</c><00:03:13.680><c> hash</c>

00:03:13.990 --> 00:03:14.000 align:start position:0%
hash map keys and the value in this hash
 

00:03:14.000 --> 00:03:16.149 align:start position:0%
hash map keys and the value in this hash
map<00:03:14.239><c> is</c><00:03:14.319><c> going</c><00:03:14.400><c> to</c><00:03:14.480><c> be</c><00:03:14.640><c> a</c><00:03:14.720><c> list</c><00:03:14.959><c> of</c><00:03:15.120><c> values</c>

00:03:16.149 --> 00:03:16.159 align:start position:0%
map is going to be a list of values
 

00:03:16.159 --> 00:03:18.070 align:start position:0%
map is going to be a list of values
with<00:03:16.640><c> you</c><00:03:16.720><c> know</c><00:03:16.879><c> this</c><00:03:17.040><c> schema</c><00:03:17.519><c> right</c><00:03:17.680><c> this</c><00:03:18.000><c> the</c>

00:03:18.070 --> 00:03:18.080 align:start position:0%
with you know this schema right this the
 

00:03:18.080 --> 00:03:19.750 align:start position:0%
with you know this schema right this the
list<00:03:18.319><c> of</c><00:03:18.400><c> values</c><00:03:18.800><c> are</c><00:03:18.879><c> going</c><00:03:18.959><c> to</c><00:03:19.040><c> be</c><00:03:19.200><c> pairs</c><00:03:19.680><c> so</c>

00:03:19.750 --> 00:03:19.760 align:start position:0%
list of values are going to be pairs so
 

00:03:19.760 --> 00:03:21.589 align:start position:0%
list of values are going to be pairs so
when<00:03:20.000><c> we</c><00:03:20.080><c> use</c><00:03:20.319><c> the</c><00:03:20.480><c> key</c><00:03:20.879><c> in</c><00:03:20.959><c> the</c><00:03:21.040><c> hashmap</c><00:03:21.519><c> we're</c>

00:03:21.589 --> 00:03:21.599 align:start position:0%
when we use the key in the hashmap we're
 

00:03:21.599 --> 00:03:23.910 align:start position:0%
when we use the key in the hashmap we're
going<00:03:21.760><c> to</c><00:03:21.840><c> get</c><00:03:22.080><c> a</c><00:03:22.400><c> list</c><00:03:23.040><c> of</c><00:03:23.200><c> values</c><00:03:23.599><c> right</c><00:03:23.840><c> in</c>

00:03:23.910 --> 00:03:23.920 align:start position:0%
going to get a list of values right in
 

00:03:23.920 --> 00:03:26.309 align:start position:0%
going to get a list of values right in
this<00:03:24.080><c> case</c><00:03:24.560><c> this</c><00:03:24.799><c> list</c><00:03:25.120><c> only</c><00:03:25.360><c> has</c><00:03:25.680><c> one</c><00:03:25.920><c> pair</c><00:03:26.159><c> of</c>

00:03:26.309 --> 00:03:26.319 align:start position:0%
this case this list only has one pair of
 

00:03:26.319 --> 00:03:29.750 align:start position:0%
this case this list only has one pair of
values<00:03:27.120><c> bar</c><00:03:27.760><c> is</c><00:03:27.920><c> that</c><00:03:28.159><c> value</c><00:03:28.959><c> and</c><00:03:29.280><c> remember</c><00:03:29.680><c> we</c>

00:03:29.750 --> 00:03:29.760 align:start position:0%
values bar is that value and remember we
 

00:03:29.760 --> 00:03:32.070 align:start position:0%
values bar is that value and remember we
were<00:03:29.920><c> given</c><00:03:30.159><c> a</c><00:03:30.239><c> timestamp</c><00:03:30.799><c> of</c><00:03:30.959><c> one</c><00:03:31.360><c> so</c><00:03:31.599><c> in</c><00:03:31.680><c> this</c>

00:03:32.070 --> 00:03:32.080 align:start position:0%
were given a timestamp of one so in this
 

00:03:32.080 --> 00:03:33.990 align:start position:0%
were given a timestamp of one so in this
list<00:03:32.560><c> we're</c><00:03:32.720><c> gonna</c><00:03:32.959><c> basically</c><00:03:33.519><c> iterate</c>

00:03:33.990 --> 00:03:34.000 align:start position:0%
list we're gonna basically iterate
 

00:03:34.000 --> 00:03:36.149 align:start position:0%
list we're gonna basically iterate
through<00:03:34.239><c> the</c><00:03:34.400><c> list</c><00:03:34.640><c> to</c><00:03:34.959><c> find</c><00:03:35.519><c> the</c><00:03:35.680><c> pair</c><00:03:36.000><c> that</c>

00:03:36.149 --> 00:03:36.159 align:start position:0%
through the list to find the pair that
 

00:03:36.159 --> 00:03:37.990 align:start position:0%
through the list to find the pair that
has<00:03:36.400><c> a</c><00:03:36.480><c> timestamp</c><00:03:36.959><c> of</c><00:03:37.120><c> one</c><00:03:37.360><c> in</c><00:03:37.440><c> this</c><00:03:37.599><c> case</c><00:03:37.840><c> we</c>

00:03:37.990 --> 00:03:38.000 align:start position:0%
has a timestamp of one in this case we
 

00:03:38.000 --> 00:03:40.309 align:start position:0%
has a timestamp of one in this case we
did<00:03:38.319><c> find</c><00:03:38.640><c> it</c><00:03:38.799><c> right</c><00:03:38.959><c> it</c><00:03:39.120><c> does</c><00:03:39.360><c> exist</c><00:03:40.000><c> so</c><00:03:40.159><c> then</c>

00:03:40.309 --> 00:03:40.319 align:start position:0%
did find it right it does exist so then
 

00:03:40.319 --> 00:03:42.550 align:start position:0%
did find it right it does exist so then
we<00:03:40.400><c> can</c><00:03:40.560><c> take</c><00:03:40.799><c> this</c><00:03:41.440><c> and</c><00:03:42.000><c> uh</c><00:03:42.159><c> the</c><00:03:42.319><c> thing</c><00:03:42.480><c> i</c>

00:03:42.550 --> 00:03:42.560 align:start position:0%
we can take this and uh the thing i
 

00:03:42.560 --> 00:03:44.149 align:start position:0%
we can take this and uh the thing i
think<00:03:42.640><c> we're</c><00:03:42.879><c> returning</c><00:03:43.280><c> is</c><00:03:43.360><c> just</c><00:03:43.519><c> the</c><00:03:43.680><c> value</c>

00:03:44.149 --> 00:03:44.159 align:start position:0%
think we're returning is just the value
 

00:03:44.159 --> 00:03:46.869 align:start position:0%
think we're returning is just the value
itself<00:03:44.480><c> so</c><00:03:44.720><c> we</c><00:03:44.799><c> can</c><00:03:44.959><c> return</c><00:03:45.840><c> bar</c><00:03:46.480><c> and</c><00:03:46.640><c> you</c><00:03:46.720><c> can</c>

00:03:46.869 --> 00:03:46.879 align:start position:0%
itself so we can return bar and you can
 

00:03:46.879 --> 00:03:48.869 align:start position:0%
itself so we can return bar and you can
see<00:03:47.040><c> up</c><00:03:47.200><c> above</c><00:03:47.599><c> that's</c><00:03:48.000><c> what</c><00:03:48.159><c> they</c><00:03:48.480><c> ended</c><00:03:48.720><c> up</c>

00:03:48.869 --> 00:03:48.879 align:start position:0%
see up above that's what they ended up
 

00:03:48.879 --> 00:03:51.589 align:start position:0%
see up above that's what they ended up
returning<00:03:49.599><c> for</c><00:03:49.840><c> this</c><00:03:50.000><c> operation</c><00:03:50.560><c> so</c><00:03:51.280><c> we</c><00:03:51.360><c> did</c>

00:03:51.589 --> 00:03:51.599 align:start position:0%
returning for this operation so we did
 

00:03:51.599 --> 00:03:53.350 align:start position:0%
returning for this operation so we did
our<00:03:51.760><c> first</c><00:03:52.080><c> get</c><00:03:52.319><c> operation</c><00:03:52.799><c> that's</c><00:03:53.040><c> great</c><00:03:53.200><c> now</c>

00:03:53.350 --> 00:03:53.360 align:start position:0%
our first get operation that's great now
 

00:03:53.360 --> 00:03:55.589 align:start position:0%
our first get operation that's great now
let's<00:03:53.599><c> do</c><00:03:53.840><c> our</c><00:03:54.159><c> second</c><00:03:54.640><c> get</c><00:03:54.959><c> operation</c><00:03:55.519><c> in</c>

00:03:55.589 --> 00:03:55.599 align:start position:0%
let's do our second get operation in
 

00:03:55.599 --> 00:03:58.390 align:start position:0%
let's do our second get operation in
this<00:03:55.760><c> case</c><00:03:56.239><c> we're</c><00:03:56.480><c> given</c><00:03:57.200><c> this</c><00:03:57.680><c> pair</c><00:03:58.159><c> we're</c>

00:03:58.390 --> 00:03:58.400 align:start position:0%
this case we're given this pair we're
 

00:03:58.400 --> 00:04:01.110 align:start position:0%
this case we're given this pair we're
given<00:03:58.640><c> the</c><00:03:58.799><c> key</c><00:03:59.200><c> is</c><00:03:59.360><c> going</c><00:03:59.439><c> to</c><00:03:59.519><c> be</c><00:03:59.760><c> foo</c><00:04:00.080><c> so</c>

00:04:01.110 --> 00:04:01.120 align:start position:0%
given the key is going to be foo so
 

00:04:01.120 --> 00:04:03.190 align:start position:0%
given the key is going to be foo so
right<00:04:01.280><c> we</c><00:04:01.439><c> can</c><00:04:01.519><c> go</c><00:04:01.760><c> to</c><00:04:01.920><c> the</c><00:04:02.080><c> same</c><00:04:02.400><c> list</c><00:04:02.879><c> and</c><00:04:03.040><c> the</c>

00:04:03.190 --> 00:04:03.200 align:start position:0%
right we can go to the same list and the
 

00:04:03.200 --> 00:04:05.750 align:start position:0%
right we can go to the same list and the
timestamp<00:04:03.760><c> is</c><00:04:03.840><c> actually</c><00:04:04.319><c> three</c><00:04:04.799><c> in</c><00:04:04.879><c> this</c><00:04:05.120><c> case</c>

00:04:05.750 --> 00:04:05.760 align:start position:0%
timestamp is actually three in this case
 

00:04:05.760 --> 00:04:07.990 align:start position:0%
timestamp is actually three in this case
but<00:04:06.159><c> if</c><00:04:06.319><c> you</c><00:04:06.480><c> scan</c><00:04:06.879><c> through</c><00:04:07.120><c> the</c><00:04:07.280><c> entire</c><00:04:07.680><c> list</c>

00:04:07.990 --> 00:04:08.000 align:start position:0%
but if you scan through the entire list
 

00:04:08.000 --> 00:04:09.670 align:start position:0%
but if you scan through the entire list
that<00:04:08.080><c> we</c><00:04:08.239><c> have</c><00:04:08.400><c> here</c><00:04:08.720><c> you</c><00:04:08.799><c> can</c><00:04:08.959><c> see</c><00:04:09.120><c> that</c><00:04:09.439><c> none</c>

00:04:09.670 --> 00:04:09.680 align:start position:0%
that we have here you can see that none
 

00:04:09.680 --> 00:04:12.149 align:start position:0%
that we have here you can see that none
of<00:04:09.840><c> these</c><00:04:10.319><c> have</c><00:04:10.560><c> a</c><00:04:10.720><c> timestamp</c><00:04:11.360><c> of</c><00:04:11.680><c> three</c>

00:04:12.149 --> 00:04:12.159 align:start position:0%
of these have a timestamp of three
 

00:04:12.159 --> 00:04:13.589 align:start position:0%
of these have a timestamp of three
associated<00:04:12.720><c> with</c><00:04:12.879><c> them</c><00:04:13.120><c> so</c><00:04:13.280><c> what</c><00:04:13.360><c> does</c><00:04:13.519><c> that</c>

00:04:13.589 --> 00:04:13.599 align:start position:0%
associated with them so what does that
 

00:04:13.599 --> 00:04:15.750 align:start position:0%
associated with them so what does that
mean<00:04:13.840><c> are</c><00:04:14.000><c> we</c><00:04:14.080><c> just</c><00:04:14.239><c> gonna</c><00:04:14.480><c> return</c><00:04:15.280><c> null</c><00:04:15.680><c> in</c>

00:04:15.750 --> 00:04:15.760 align:start position:0%
mean are we just gonna return null in
 

00:04:15.760 --> 00:04:18.069 align:start position:0%
mean are we just gonna return null in
this<00:04:16.000><c> case</c><00:04:16.639><c> no</c><00:04:17.040><c> because</c><00:04:17.359><c> remember</c><00:04:17.759><c> what</c><00:04:17.919><c> we're</c>

00:04:18.069 --> 00:04:18.079 align:start position:0%
this case no because remember what we're
 

00:04:18.079 --> 00:04:20.310 align:start position:0%
this case no because remember what we're
doing<00:04:18.320><c> here</c><00:04:18.479><c> we're</c><00:04:18.639><c> designing</c><00:04:19.120><c> a</c><00:04:19.359><c> key</c>

00:04:20.310 --> 00:04:20.320 align:start position:0%
doing here we're designing a key
 

00:04:20.320 --> 00:04:23.270 align:start position:0%
doing here we're designing a key
a<00:04:20.479><c> key</c><00:04:20.639><c> value</c><00:04:21.040><c> store</c><00:04:21.280><c> based</c><00:04:21.680><c> on</c><00:04:22.000><c> time</c><00:04:22.720><c> so</c><00:04:22.960><c> we</c>

00:04:23.270 --> 00:04:23.280 align:start position:0%
a key value store based on time so we
 

00:04:23.280 --> 00:04:26.550 align:start position:0%
a key value store based on time so we
set<00:04:23.600><c> this</c><00:04:23.919><c> value</c><00:04:24.479><c> at</c><00:04:24.639><c> time</c><00:04:25.040><c> one</c><00:04:25.520><c> now</c><00:04:25.840><c> it's</c><00:04:26.080><c> time</c>

00:04:26.550 --> 00:04:26.560 align:start position:0%
set this value at time one now it's time
 

00:04:26.560 --> 00:04:28.790 align:start position:0%
set this value at time one now it's time
three<00:04:27.199><c> so</c><00:04:27.440><c> the</c><00:04:27.520><c> way</c><00:04:27.680><c> this</c><00:04:27.919><c> problem</c><00:04:28.400><c> wants</c><00:04:28.720><c> us</c>

00:04:28.790 --> 00:04:28.800 align:start position:0%
three so the way this problem wants us
 

00:04:28.800 --> 00:04:31.830 align:start position:0%
three so the way this problem wants us
to<00:04:28.960><c> handle</c><00:04:29.360><c> the</c><00:04:29.520><c> timing</c><00:04:30.320><c> is</c><00:04:30.800><c> basically</c><00:04:31.360><c> if</c><00:04:31.520><c> you</c>

00:04:31.830 --> 00:04:31.840 align:start position:0%
to handle the timing is basically if you
 

00:04:31.840 --> 00:04:35.749 align:start position:0%
to handle the timing is basically if you
don't<00:04:32.320><c> find</c><00:04:33.040><c> an</c><00:04:33.199><c> exact</c><00:04:34.000><c> match</c><00:04:34.720><c> in</c><00:04:34.960><c> our</c><00:04:35.360><c> in</c><00:04:35.600><c> our</c>

00:04:35.749 --> 00:04:35.759 align:start position:0%
don't find an exact match in our in our
 

00:04:35.759 --> 00:04:38.070 align:start position:0%
don't find an exact match in our in our
key<00:04:36.000><c> value</c><00:04:36.320><c> store</c><00:04:36.880><c> then</c><00:04:37.120><c> just</c><00:04:37.440><c> return</c><00:04:37.840><c> the</c>

00:04:38.070 --> 00:04:38.080 align:start position:0%
key value store then just return the
 

00:04:38.080 --> 00:04:40.390 align:start position:0%
key value store then just return the
most<00:04:38.639><c> recent</c><00:04:39.280><c> one</c><00:04:39.520><c> so</c><00:04:39.759><c> in</c><00:04:39.840><c> this</c><00:04:40.000><c> case</c><00:04:40.240><c> we're</c>

00:04:40.390 --> 00:04:40.400 align:start position:0%
most recent one so in this case we're
 

00:04:40.400 --> 00:04:41.189 align:start position:0%
most recent one so in this case we're
doing

00:04:41.189 --> 00:04:41.199 align:start position:0%
doing
 

00:04:41.199 --> 00:04:43.110 align:start position:0%
doing
the<00:04:41.360><c> time</c><00:04:41.600><c> is</c><00:04:41.840><c> three</c><00:04:42.160><c> right</c><00:04:42.320><c> just</c><00:04:42.560><c> return</c><00:04:42.960><c> the</c>

00:04:43.110 --> 00:04:43.120 align:start position:0%
the time is three right just return the
 

00:04:43.120 --> 00:04:46.310 align:start position:0%
the time is three right just return the
most<00:04:43.520><c> recent</c><00:04:44.080><c> one</c><00:04:44.560><c> and</c><00:04:44.720><c> by</c><00:04:45.040><c> recent</c><00:04:45.680><c> they</c><00:04:45.919><c> mean</c>

00:04:46.310 --> 00:04:46.320 align:start position:0%
most recent one and by recent they mean
 

00:04:46.320 --> 00:04:49.189 align:start position:0%
most recent one and by recent they mean
the<00:04:46.800><c> the</c><00:04:47.120><c> closest</c><00:04:47.759><c> value</c><00:04:48.160><c> to</c><00:04:48.400><c> three</c><00:04:48.720><c> that's</c>

00:04:49.189 --> 00:04:49.199 align:start position:0%
the the closest value to three that's
 

00:04:49.199 --> 00:04:51.350 align:start position:0%
the the closest value to three that's
less<00:04:49.520><c> than</c><00:04:49.840><c> three</c><00:04:50.479><c> so</c><00:04:50.639><c> for</c><00:04:50.800><c> example</c><00:04:51.199><c> there's</c>

00:04:51.350 --> 00:04:51.360 align:start position:0%
less than three so for example there's
 

00:04:51.360 --> 00:04:53.830 align:start position:0%
less than three so for example there's
only<00:04:51.600><c> a</c><00:04:51.759><c> single</c><00:04:52.479><c> value</c><00:04:52.960><c> here</c><00:04:53.199><c> right</c><00:04:53.600><c> so</c><00:04:53.759><c> in</c>

00:04:53.830 --> 00:04:53.840 align:start position:0%
only a single value here right so in
 

00:04:53.840 --> 00:04:55.749 align:start position:0%
only a single value here right so in
this<00:04:54.000><c> case</c><00:04:54.320><c> we</c><00:04:54.400><c> only</c><00:04:54.560><c> have</c><00:04:54.720><c> a</c><00:04:54.880><c> single</c><00:04:55.360><c> one</c><00:04:55.600><c> and</c>

00:04:55.749 --> 00:04:55.759 align:start position:0%
this case we only have a single one and
 

00:04:55.759 --> 00:04:57.749 align:start position:0%
this case we only have a single one and
the<00:04:55.919><c> time</c><00:04:56.080><c> with</c><00:04:56.240><c> that</c><00:04:56.479><c> is</c><00:04:56.720><c> one</c><00:04:57.040><c> so</c><00:04:57.199><c> of</c><00:04:57.360><c> course</c>

00:04:57.749 --> 00:04:57.759 align:start position:0%
the time with that is one so of course
 

00:04:57.759 --> 00:05:00.070 align:start position:0%
the time with that is one so of course
one<00:04:58.080><c> is</c><00:04:58.160><c> going</c><00:04:58.240><c> to</c><00:04:58.320><c> be</c><00:04:58.479><c> the</c><00:04:58.639><c> closest</c><00:04:59.440><c> to</c><00:04:59.680><c> three</c>

00:05:00.070 --> 00:05:00.080 align:start position:0%
one is going to be the closest to three
 

00:05:00.080 --> 00:05:01.909 align:start position:0%
one is going to be the closest to three
but<00:05:00.320><c> what</c><00:05:00.479><c> if</c><00:05:00.639><c> instead</c><00:05:01.120><c> we</c><00:05:01.280><c> had</c><00:05:01.520><c> something</c>

00:05:01.909 --> 00:05:01.919 align:start position:0%
but what if instead we had something
 

00:05:01.919 --> 00:05:03.670 align:start position:0%
but what if instead we had something
like<00:05:02.560><c> four</c>

00:05:03.670 --> 00:05:03.680 align:start position:0%
like four
 

00:05:03.680 --> 00:05:06.150 align:start position:0%
like four
four<00:05:04.080><c> is</c><00:05:04.320><c> close</c><00:05:04.639><c> to</c><00:05:04.880><c> three</c><00:05:05.280><c> but</c><00:05:05.440><c> it's</c><00:05:05.759><c> greater</c>

00:05:06.150 --> 00:05:06.160 align:start position:0%
four is close to three but it's greater
 

00:05:06.160 --> 00:05:07.830 align:start position:0%
four is close to three but it's greater
than<00:05:06.320><c> three</c><00:05:06.560><c> so</c><00:05:06.720><c> that's</c><00:05:07.039><c> not</c><00:05:07.360><c> allowed</c><00:05:07.680><c> we</c>

00:05:07.830 --> 00:05:07.840 align:start position:0%
than three so that's not allowed we
 

00:05:07.840 --> 00:05:10.070 align:start position:0%
than three so that's not allowed we
wanna<00:05:08.080><c> find</c><00:05:08.240><c> the</c><00:05:08.400><c> closest</c><00:05:09.039><c> timestamp</c><00:05:09.600><c> that's</c>

00:05:10.070 --> 00:05:10.080 align:start position:0%
wanna find the closest timestamp that's
 

00:05:10.080 --> 00:05:12.550 align:start position:0%
wanna find the closest timestamp that's
less<00:05:10.320><c> than</c><00:05:10.560><c> three</c><00:05:11.120><c> now</c><00:05:11.360><c> if</c><00:05:11.440><c> we</c><00:05:11.600><c> had</c><00:05:11.840><c> multiple</c>

00:05:12.550 --> 00:05:12.560 align:start position:0%
less than three now if we had multiple
 

00:05:12.560 --> 00:05:15.430 align:start position:0%
less than three now if we had multiple
if<00:05:12.720><c> we</c><00:05:12.880><c> had</c><00:05:13.360><c> another</c><00:05:13.919><c> bar</c><00:05:14.240><c> here</c><00:05:14.720><c> or</c><00:05:15.039><c> some</c><00:05:15.280><c> other</c>

00:05:15.430 --> 00:05:15.440 align:start position:0%
if we had another bar here or some other
 

00:05:15.440 --> 00:05:17.189 align:start position:0%
if we had another bar here or some other
value<00:05:15.840><c> and</c><00:05:15.919><c> the</c><00:05:16.080><c> time</c><00:05:16.320><c> associated</c><00:05:16.800><c> with</c><00:05:16.960><c> that</c>

00:05:17.189 --> 00:05:17.199 align:start position:0%
value and the time associated with that
 

00:05:17.199 --> 00:05:20.070 align:start position:0%
value and the time associated with that
is<00:05:17.520><c> two</c><00:05:18.160><c> then</c><00:05:18.479><c> in</c><00:05:18.639><c> that</c><00:05:18.880><c> case</c><00:05:19.440><c> uh</c><00:05:19.759><c> which</c><00:05:20.000><c> of</c>

00:05:20.070 --> 00:05:20.080 align:start position:0%
is two then in that case uh which of
 

00:05:20.080 --> 00:05:21.830 align:start position:0%
is two then in that case uh which of
these<00:05:20.320><c> two</c><00:05:20.560><c> would</c><00:05:20.720><c> we</c><00:05:20.800><c> want</c><00:05:20.960><c> to</c><00:05:21.360><c> return</c><00:05:21.759><c> we</c>

00:05:21.830 --> 00:05:21.840 align:start position:0%
these two would we want to return we
 

00:05:21.840 --> 00:05:23.909 align:start position:0%
these two would we want to return we
would<00:05:22.000><c> want</c><00:05:22.160><c> to</c><00:05:22.320><c> return</c><00:05:22.880><c> this</c><00:05:23.120><c> one</c><00:05:23.759><c> even</c>

00:05:23.909 --> 00:05:23.919 align:start position:0%
would want to return this one even
 

00:05:23.919 --> 00:05:25.350 align:start position:0%
would want to return this one even
though<00:05:24.080><c> the</c><00:05:24.160><c> value</c><00:05:24.560><c> is</c><00:05:24.639><c> the</c><00:05:24.800><c> exact</c><00:05:25.039><c> same</c><00:05:25.199><c> but</c>

00:05:25.350 --> 00:05:25.360 align:start position:0%
though the value is the exact same but
 

00:05:25.360 --> 00:05:27.110 align:start position:0%
though the value is the exact same but
we'd<00:05:25.520><c> want</c><00:05:25.680><c> to</c><00:05:25.759><c> return</c><00:05:26.080><c> this</c><00:05:26.320><c> one</c><00:05:26.720><c> because</c><00:05:27.039><c> it</c>

00:05:27.110 --> 00:05:27.120 align:start position:0%
we'd want to return this one because it
 

00:05:27.120 --> 00:05:30.230 align:start position:0%
we'd want to return this one because it
has<00:05:27.360><c> a</c><00:05:27.440><c> closer</c><00:05:28.000><c> time</c><00:05:28.639><c> to</c><00:05:29.120><c> the</c><00:05:29.360><c> three</c><00:05:29.919><c> but</c><00:05:30.080><c> in</c>

00:05:30.230 --> 00:05:30.240 align:start position:0%
has a closer time to the three but in
 

00:05:30.240 --> 00:05:31.909 align:start position:0%
has a closer time to the three but in
this<00:05:30.320><c> case</c><00:05:30.560><c> we</c><00:05:30.720><c> only</c><00:05:30.880><c> had</c><00:05:31.039><c> a</c><00:05:31.120><c> single</c><00:05:31.440><c> value</c><00:05:31.759><c> so</c>

00:05:31.909 --> 00:05:31.919 align:start position:0%
this case we only had a single value so
 

00:05:31.919 --> 00:05:33.670 align:start position:0%
this case we only had a single value so
we're<00:05:32.080><c> just</c><00:05:32.240><c> going</c><00:05:32.320><c> to</c><00:05:32.400><c> return</c><00:05:32.880><c> bar</c><00:05:33.199><c> again</c><00:05:33.520><c> and</c>

00:05:33.670 --> 00:05:33.680 align:start position:0%
we're just going to return bar again and
 

00:05:33.680 --> 00:05:35.830 align:start position:0%
we're just going to return bar again and
you<00:05:33.759><c> can</c><00:05:33.919><c> see</c><00:05:34.240><c> in</c><00:05:34.639><c> the</c><00:05:34.880><c> explanation</c><00:05:35.600><c> and</c><00:05:35.680><c> the</c>

00:05:35.830 --> 00:05:35.840 align:start position:0%
you can see in the explanation and the
 

00:05:35.840 --> 00:05:37.909 align:start position:0%
you can see in the explanation and the
output<00:05:36.320><c> that</c><00:05:36.560><c> is</c><00:05:36.720><c> the</c><00:05:36.960><c> correct</c><00:05:37.360><c> value</c><00:05:37.680><c> so</c><00:05:37.840><c> we</c>

00:05:37.909 --> 00:05:37.919 align:start position:0%
output that is the correct value so we
 

00:05:37.919 --> 00:05:41.110 align:start position:0%
output that is the correct value so we
return<00:05:38.400><c> bar</c><00:05:38.720><c> in</c><00:05:38.880><c> this</c><00:05:39.120><c> case</c><00:05:39.919><c> okay</c><00:05:40.320><c> so</c><00:05:40.880><c> just</c>

00:05:41.110 --> 00:05:41.120 align:start position:0%
return bar in this case okay so just
 

00:05:41.120 --> 00:05:42.710 align:start position:0%
return bar in this case okay so just
cleaning<00:05:41.440><c> up</c><00:05:41.600><c> what</c><00:05:41.759><c> we've</c><00:05:42.000><c> already</c><00:05:42.240><c> done</c><00:05:42.479><c> so</c>

00:05:42.710 --> 00:05:42.720 align:start position:0%
cleaning up what we've already done so
 

00:05:42.720 --> 00:05:45.189 align:start position:0%
cleaning up what we've already done so
far<00:05:42.960><c> but</c><00:05:43.360><c> now</c><00:05:43.520><c> we're</c><00:05:43.759><c> at</c><00:05:43.919><c> a</c><00:05:44.240><c> second</c><00:05:44.720><c> set</c>

00:05:45.189 --> 00:05:45.199 align:start position:0%
far but now we're at a second set
 

00:05:45.199 --> 00:05:47.189 align:start position:0%
far but now we're at a second set
operation<00:05:46.000><c> the</c><00:05:46.160><c> values</c><00:05:46.560><c> associated</c><00:05:47.120><c> with</c>

00:05:47.189 --> 00:05:47.199 align:start position:0%
operation the values associated with
 

00:05:47.199 --> 00:05:50.310 align:start position:0%
operation the values associated with
this<00:05:47.440><c> set</c><00:05:48.000><c> are</c><00:05:48.320><c> well</c><00:05:48.560><c> the</c><00:05:48.720><c> key</c><00:05:49.039><c> is</c><00:05:49.199><c> foo</c><00:05:49.600><c> so</c><00:05:49.840><c> same</c>

00:05:50.310 --> 00:05:50.320 align:start position:0%
this set are well the key is foo so same
 

00:05:50.320 --> 00:05:52.230 align:start position:0%
this set are well the key is foo so same
you<00:05:50.479><c> know</c><00:05:50.720><c> slot</c><00:05:51.039><c> we're</c><00:05:51.199><c> gonna</c><00:05:51.360><c> go</c><00:05:51.520><c> over</c><00:05:51.680><c> here</c>

00:05:52.230 --> 00:05:52.240 align:start position:0%
you know slot we're gonna go over here
 

00:05:52.240 --> 00:05:54.550 align:start position:0%
you know slot we're gonna go over here
and<00:05:52.560><c> the</c><00:05:52.720><c> value</c><00:05:53.120><c> in</c><00:05:53.199><c> this</c><00:05:53.360><c> case</c><00:05:53.600><c> is</c><00:05:53.680><c> bar</c><00:05:54.000><c> two</c>

00:05:54.550 --> 00:05:54.560 align:start position:0%
and the value in this case is bar two
 

00:05:54.560 --> 00:05:56.070 align:start position:0%
and the value in this case is bar two
pretty<00:05:54.800><c> simple</c><00:05:55.120><c> and</c><00:05:55.199><c> the</c><00:05:55.280><c> time</c><00:05:55.520><c> associated</c>

00:05:56.070 --> 00:05:56.080 align:start position:0%
pretty simple and the time associated
 

00:05:56.080 --> 00:05:58.390 align:start position:0%
pretty simple and the time associated
with<00:05:56.240><c> it</c><00:05:56.479><c> is</c><00:05:56.800><c> four</c><00:05:57.039><c> so</c><00:05:57.199><c> that's</c><00:05:57.360><c> the</c><00:05:57.520><c> timestamp</c>

00:05:58.390 --> 00:05:58.400 align:start position:0%
with it is four so that's the timestamp
 

00:05:58.400 --> 00:06:02.870 align:start position:0%
with it is four so that's the timestamp
uh<00:05:58.800><c> bar</c><00:05:59.199><c> two</c><00:05:59.919><c> and</c><00:06:00.479><c> the</c><00:06:00.639><c> time</c><00:06:01.199><c> is</c><00:06:01.919><c> four</c><00:06:02.560><c> and</c><00:06:02.720><c> by</c>

00:06:02.870 --> 00:06:02.880 align:start position:0%
uh bar two and the time is four and by
 

00:06:02.880 --> 00:06:04.790 align:start position:0%
uh bar two and the time is four and by
the<00:06:03.039><c> way</c><00:06:03.360><c> the</c><00:06:03.600><c> set</c><00:06:04.000><c> operation</c><00:06:04.479><c> that</c><00:06:04.639><c> we're</c>

00:06:04.790 --> 00:06:04.800 align:start position:0%
the way the set operation that we're
 

00:06:04.800 --> 00:06:06.870 align:start position:0%
the way the set operation that we're
doing<00:06:05.120><c> is</c><00:06:05.360><c> always</c><00:06:05.759><c> going</c><00:06:05.919><c> to</c><00:06:06.000><c> be</c><00:06:06.240><c> a</c><00:06:06.400><c> constant</c>

00:06:06.870 --> 00:06:06.880 align:start position:0%
doing is always going to be a constant
 

00:06:06.880 --> 00:06:08.790 align:start position:0%
doing is always going to be a constant
time<00:06:07.199><c> operation</c><00:06:07.680><c> big</c><00:06:07.919><c> o</c><00:06:08.160><c> of</c><00:06:08.319><c> one</c><00:06:08.639><c> right</c>

00:06:08.790 --> 00:06:08.800 align:start position:0%
time operation big o of one right
 

00:06:08.800 --> 00:06:11.350 align:start position:0%
time operation big o of one right
because<00:06:09.600><c> the</c><00:06:10.000><c> you</c><00:06:10.160><c> know</c><00:06:10.400><c> so</c><00:06:10.560><c> finding</c><00:06:10.880><c> the</c><00:06:11.120><c> key</c>

00:06:11.350 --> 00:06:11.360 align:start position:0%
because the you know so finding the key
 

00:06:11.360 --> 00:06:12.870 align:start position:0%
because the you know so finding the key
is<00:06:11.440><c> an</c><00:06:11.600><c> o</c><00:06:11.759><c> of</c><00:06:11.840><c> one</c><00:06:12.080><c> operation</c><00:06:12.479><c> because</c><00:06:12.639><c> we're</c>

00:06:12.870 --> 00:06:12.880 align:start position:0%
is an o of one operation because we're
 

00:06:12.880 --> 00:06:14.870 align:start position:0%
is an o of one operation because we're
using<00:06:13.120><c> a</c><00:06:13.199><c> hash</c><00:06:13.520><c> map</c><00:06:13.840><c> and</c><00:06:14.000><c> then</c><00:06:14.479><c> uh</c><00:06:14.639><c> you</c><00:06:14.800><c> know</c>

00:06:14.870 --> 00:06:14.880 align:start position:0%
using a hash map and then uh you know
 

00:06:14.880 --> 00:06:17.270 align:start position:0%
using a hash map and then uh you know
this<00:06:15.120><c> list</c><00:06:15.360><c> of</c><00:06:15.520><c> values</c><00:06:16.080><c> is</c><00:06:16.160><c> gonna</c><00:06:16.319><c> be</c><00:06:16.639><c> a</c><00:06:16.800><c> list</c>

00:06:17.270 --> 00:06:17.280 align:start position:0%
this list of values is gonna be a list
 

00:06:17.280 --> 00:06:19.510 align:start position:0%
this list of values is gonna be a list
and<00:06:17.759><c> every</c><00:06:18.000><c> time</c><00:06:18.240><c> we</c><00:06:18.479><c> add</c><00:06:18.720><c> a</c><00:06:18.800><c> value</c><00:06:19.199><c> to</c><00:06:19.360><c> this</c>

00:06:19.510 --> 00:06:19.520 align:start position:0%
and every time we add a value to this
 

00:06:19.520 --> 00:06:21.110 align:start position:0%
and every time we add a value to this
list<00:06:19.759><c> we're</c><00:06:19.919><c> always</c><00:06:20.240><c> going</c><00:06:20.319><c> to</c><00:06:20.479><c> add</c><00:06:20.639><c> it</c><00:06:20.720><c> to</c><00:06:20.880><c> the</c>

00:06:21.110 --> 00:06:21.120 align:start position:0%
list we're always going to add it to the
 

00:06:21.120 --> 00:06:23.670 align:start position:0%
list we're always going to add it to the
end<00:06:21.280><c> of</c><00:06:21.440><c> the</c><00:06:21.600><c> list</c><00:06:22.160><c> so</c><00:06:22.720><c> we</c><00:06:22.880><c> can</c><00:06:22.960><c> do</c><00:06:23.120><c> that</c><00:06:23.280><c> in</c><00:06:23.440><c> big</c>

00:06:23.670 --> 00:06:23.680 align:start position:0%
end of the list so we can do that in big
 

00:06:23.680 --> 00:06:25.350 align:start position:0%
end of the list so we can do that in big
o<00:06:23.919><c> of</c><00:06:24.160><c> one</c><00:06:24.479><c> time</c>

00:06:25.350 --> 00:06:25.360 align:start position:0%
o of one time
 

00:06:25.360 --> 00:06:27.590 align:start position:0%
o of one time
so<00:06:25.600><c> not</c><00:06:25.759><c> too</c><00:06:26.000><c> bad</c><00:06:26.479><c> but</c><00:06:26.720><c> where</c><00:06:26.880><c> things</c><00:06:27.280><c> get</c>

00:06:27.590 --> 00:06:27.600 align:start position:0%
so not too bad but where things get
 

00:06:27.600 --> 00:06:29.590 align:start position:0%
so not too bad but where things get
tricky<00:06:28.400><c> uh</c><00:06:28.560><c> now</c><00:06:28.720><c> that</c><00:06:28.800><c> we're</c><00:06:28.960><c> done</c><00:06:29.199><c> with</c><00:06:29.360><c> the</c>

00:06:29.590 --> 00:06:29.600 align:start position:0%
tricky uh now that we're done with the
 

00:06:29.600 --> 00:06:31.430 align:start position:0%
tricky uh now that we're done with the
second<00:06:30.000><c> set</c><00:06:30.240><c> operation</c><00:06:30.720><c> where</c><00:06:30.960><c> things</c><00:06:31.199><c> get</c>

00:06:31.430 --> 00:06:31.440 align:start position:0%
second set operation where things get
 

00:06:31.440 --> 00:06:33.350 align:start position:0%
second set operation where things get
tricky<00:06:31.919><c> is</c><00:06:32.000><c> when</c><00:06:32.240><c> we</c><00:06:32.400><c> get</c><00:06:32.560><c> to</c><00:06:32.720><c> the</c><00:06:33.039><c> get</c>

00:06:33.350 --> 00:06:33.360 align:start position:0%
tricky is when we get to the get
 

00:06:33.360 --> 00:06:35.510 align:start position:0%
tricky is when we get to the get
operation<00:06:33.759><c> so</c><00:06:34.000><c> now</c><00:06:34.160><c> we're</c><00:06:34.400><c> at</c><00:06:34.639><c> another</c><00:06:35.199><c> get</c>

00:06:35.510 --> 00:06:35.520 align:start position:0%
operation so now we're at another get
 

00:06:35.520 --> 00:06:37.909 align:start position:0%
operation so now we're at another get
operation<00:06:36.080><c> the</c><00:06:36.319><c> key</c><00:06:36.639><c> is</c><00:06:36.960><c> foo</c><00:06:37.440><c> and</c><00:06:37.520><c> the</c><00:06:37.680><c> time</c>

00:06:37.909 --> 00:06:37.919 align:start position:0%
operation the key is foo and the time
 

00:06:37.919 --> 00:06:39.990 align:start position:0%
operation the key is foo and the time
stamp<00:06:38.319><c> is</c><00:06:38.560><c> four</c><00:06:39.199><c> so</c><00:06:39.440><c> we're</c><00:06:39.600><c> going</c><00:06:39.680><c> to</c><00:06:39.759><c> go</c><00:06:39.919><c> to</c>

00:06:39.990 --> 00:06:40.000 align:start position:0%
stamp is four so we're going to go to
 

00:06:40.000 --> 00:06:42.629 align:start position:0%
stamp is four so we're going to go to
the<00:06:40.080><c> same</c><00:06:40.400><c> slot</c><00:06:40.720><c> here</c><00:06:41.199><c> and</c><00:06:41.520><c> then</c><00:06:42.240><c> now</c><00:06:42.400><c> that</c><00:06:42.479><c> we</c>

00:06:42.629 --> 00:06:42.639 align:start position:0%
the same slot here and then now that we
 

00:06:42.639 --> 00:06:44.230 align:start position:0%
the same slot here and then now that we
actually<00:06:42.880><c> have</c><00:06:43.199><c> more</c><00:06:43.520><c> values</c><00:06:44.000><c> you're</c>

00:06:44.230 --> 00:06:44.240 align:start position:0%
actually have more values you're
 

00:06:44.240 --> 00:06:46.070 align:start position:0%
actually have more values you're
probably<00:06:44.560><c> getting</c><00:06:44.880><c> at</c><00:06:45.039><c> what</c><00:06:45.199><c> the</c><00:06:45.360><c> bottleneck</c>

00:06:46.070 --> 00:06:46.080 align:start position:0%
probably getting at what the bottleneck
 

00:06:46.080 --> 00:06:48.230 align:start position:0%
probably getting at what the bottleneck
is<00:06:46.400><c> so</c><00:06:46.639><c> in</c><00:06:46.800><c> this</c><00:06:46.880><c> case</c><00:06:47.120><c> the</c><00:06:47.280><c> timestamp</c><00:06:47.759><c> is</c><00:06:47.919><c> 4.</c>

00:06:48.230 --> 00:06:48.240 align:start position:0%
is so in this case the timestamp is 4.
 

00:06:48.240 --> 00:06:50.629 align:start position:0%
is so in this case the timestamp is 4.
so<00:06:48.400><c> we</c><00:06:48.560><c> want</c><00:06:48.720><c> to</c><00:06:48.960><c> look</c><00:06:49.360><c> in</c><00:06:49.599><c> this</c><00:06:49.919><c> list</c><00:06:50.240><c> we</c><00:06:50.479><c> want</c>

00:06:50.629 --> 00:06:50.639 align:start position:0%
so we want to look in this list we want
 

00:06:50.639 --> 00:06:53.589 align:start position:0%
so we want to look in this list we want
to<00:06:50.800><c> look</c><00:06:51.360><c> for</c><00:06:51.919><c> an</c><00:06:52.080><c> exact</c><00:06:52.720><c> match</c><00:06:53.120><c> and</c><00:06:53.280><c> if</c><00:06:53.440><c> we</c>

00:06:53.589 --> 00:06:53.599 align:start position:0%
to look for an exact match and if we
 

00:06:53.599 --> 00:06:55.670 align:start position:0%
to look for an exact match and if we
can't<00:06:53.919><c> find</c><00:06:54.160><c> an</c><00:06:54.400><c> exact</c><00:06:54.880><c> match</c><00:06:55.280><c> we</c><00:06:55.440><c> want</c><00:06:55.599><c> to</c>

00:06:55.670 --> 00:06:55.680 align:start position:0%
can't find an exact match we want to
 

00:06:55.680 --> 00:06:58.070 align:start position:0%
can't find an exact match we want to
find<00:06:55.840><c> the</c><00:06:56.000><c> closest</c><00:06:56.560><c> value</c><00:06:57.120><c> that's</c><00:06:57.440><c> less</c><00:06:57.759><c> than</c>

00:06:58.070 --> 00:06:58.080 align:start position:0%
find the closest value that's less than
 

00:06:58.080 --> 00:07:00.390 align:start position:0%
find the closest value that's less than
4.<00:06:58.639><c> and</c><00:06:58.800><c> how</c><00:06:59.039><c> exactly</c><00:06:59.680><c> are</c><00:06:59.840><c> we</c><00:07:00.000><c> going</c><00:07:00.160><c> to</c><00:07:00.240><c> be</c>

00:07:00.390 --> 00:07:00.400 align:start position:0%
4. and how exactly are we going to be
 

00:07:00.400 --> 00:07:03.029 align:start position:0%
4. and how exactly are we going to be
doing<00:07:00.720><c> that</c><00:07:01.440><c> if</c><00:07:01.599><c> we</c><00:07:01.680><c> just</c><00:07:01.919><c> do</c><00:07:02.080><c> a</c><00:07:02.160><c> linear</c><00:07:02.639><c> scan</c>

00:07:03.029 --> 00:07:03.039 align:start position:0%
doing that if we just do a linear scan
 

00:07:03.039 --> 00:07:04.950 align:start position:0%
doing that if we just do a linear scan
through<00:07:03.199><c> the</c><00:07:03.360><c> array</c><00:07:04.000><c> worst</c><00:07:04.319><c> case</c><00:07:04.639><c> it's</c><00:07:04.800><c> going</c>

00:07:04.950 --> 00:07:04.960 align:start position:0%
through the array worst case it's going
 

00:07:04.960 --> 00:07:07.029 align:start position:0%
through the array worst case it's going
to<00:07:05.039><c> be</c><00:07:05.199><c> linear</c><00:07:05.599><c> time</c><00:07:06.000><c> now</c><00:07:06.160><c> that's</c><00:07:06.400><c> really</c><00:07:06.720><c> not</c>

00:07:07.029 --> 00:07:07.039 align:start position:0%
to be linear time now that's really not
 

00:07:07.039 --> 00:07:10.070 align:start position:0%
to be linear time now that's really not
that<00:07:07.440><c> bad</c><00:07:07.919><c> but</c><00:07:08.080><c> the</c><00:07:08.319><c> question</c><00:07:08.800><c> is</c><00:07:09.199><c> can</c><00:07:09.440><c> we</c><00:07:09.680><c> do</c>

00:07:10.070 --> 00:07:10.080 align:start position:0%
that bad but the question is can we do
 

00:07:10.080 --> 00:07:12.870 align:start position:0%
that bad but the question is can we do
any<00:07:10.479><c> better</c><00:07:11.039><c> well</c><00:07:11.280><c> obviously</c><00:07:12.319><c> very</c><00:07:12.560><c> few</c>

00:07:12.870 --> 00:07:12.880 align:start position:0%
any better well obviously very few
 

00:07:12.880 --> 00:07:14.710 align:start position:0%
any better well obviously very few
algorithms<00:07:13.360><c> are</c><00:07:13.440><c> better</c><00:07:13.680><c> than</c><00:07:13.840><c> big</c><00:07:14.080><c> o</c><00:07:14.160><c> of</c><00:07:14.400><c> n</c>

00:07:14.710 --> 00:07:14.720 align:start position:0%
algorithms are better than big o of n
 

00:07:14.720 --> 00:07:16.309 align:start position:0%
algorithms are better than big o of n
one<00:07:14.880><c> of</c><00:07:14.960><c> the</c><00:07:15.120><c> algorithms</c><00:07:15.599><c> that's</c><00:07:15.919><c> better</c><00:07:16.160><c> than</c>

00:07:16.309 --> 00:07:16.319 align:start position:0%
one of the algorithms that's better than
 

00:07:16.319 --> 00:07:18.390 align:start position:0%
one of the algorithms that's better than
big<00:07:16.479><c> o</c><00:07:16.639><c> of</c><00:07:16.800><c> n</c><00:07:17.039><c> is</c><00:07:17.280><c> binary</c><00:07:17.759><c> search</c><00:07:18.080><c> which</c><00:07:18.240><c> we</c>

00:07:18.390 --> 00:07:18.400 align:start position:0%
big o of n is binary search which we
 

00:07:18.400 --> 00:07:20.790 align:start position:0%
big o of n is binary search which we
know<00:07:18.720><c> runs</c><00:07:19.120><c> in</c><00:07:19.520><c> log</c><00:07:20.000><c> n</c><00:07:20.240><c> time</c><00:07:20.479><c> that's</c>

00:07:20.790 --> 00:07:20.800 align:start position:0%
know runs in log n time that's
 

00:07:20.800 --> 00:07:23.430 align:start position:0%
know runs in log n time that's
definitely<00:07:21.199><c> an</c><00:07:21.520><c> improvement</c><00:07:22.240><c> over</c><00:07:22.800><c> big</c><00:07:23.039><c> o</c><00:07:23.199><c> of</c>

00:07:23.430 --> 00:07:23.440 align:start position:0%
definitely an improvement over big o of
 

00:07:23.440 --> 00:07:26.550 align:start position:0%
definitely an improvement over big o of
n<00:07:24.000><c> but</c><00:07:24.240><c> that</c><00:07:24.400><c> would</c><00:07:24.639><c> require</c><00:07:25.199><c> that</c><00:07:25.440><c> our</c><00:07:25.680><c> values</c>

00:07:26.550 --> 00:07:26.560 align:start position:0%
n but that would require that our values
 

00:07:26.560 --> 00:07:28.790 align:start position:0%
n but that would require that our values
are<00:07:26.880><c> sorted</c><00:07:27.520><c> but</c><00:07:27.759><c> what</c><00:07:28.000><c> exactly</c><00:07:28.400><c> do</c><00:07:28.639><c> these</c>

00:07:28.790 --> 00:07:28.800 align:start position:0%
are sorted but what exactly do these
 

00:07:28.800 --> 00:07:30.790 align:start position:0%
are sorted but what exactly do these
values<00:07:29.280><c> have</c><00:07:29.360><c> to</c><00:07:29.440><c> be</c><00:07:29.599><c> sorted</c><00:07:30.080><c> by</c><00:07:30.400><c> do</c><00:07:30.560><c> they</c><00:07:30.720><c> have</c>

00:07:30.790 --> 00:07:30.800 align:start position:0%
values have to be sorted by do they have
 

00:07:30.800 --> 00:07:33.670 align:start position:0%
values have to be sorted by do they have
to<00:07:30.880><c> be</c><00:07:31.039><c> sorted</c><00:07:31.680><c> by</c><00:07:31.919><c> the</c><00:07:32.160><c> value</c><00:07:32.720><c> or</c><00:07:32.960><c> by</c><00:07:33.120><c> the</c><00:07:33.360><c> time</c>

00:07:33.670 --> 00:07:33.680 align:start position:0%
to be sorted by the value or by the time
 

00:07:33.680 --> 00:07:35.589 align:start position:0%
to be sorted by the value or by the time
stamp<00:07:34.160><c> well</c><00:07:34.400><c> since</c><00:07:34.639><c> we're</c><00:07:34.880><c> searching</c><00:07:35.280><c> for</c><00:07:35.440><c> an</c>

00:07:35.589 --> 00:07:35.599 align:start position:0%
stamp well since we're searching for an
 

00:07:35.599 --> 00:07:37.430 align:start position:0%
stamp well since we're searching for an
exact<00:07:35.919><c> match</c><00:07:36.160><c> with</c><00:07:36.319><c> the</c><00:07:36.479><c> time</c><00:07:36.720><c> stamp</c><00:07:37.199><c> these</c>

00:07:37.430 --> 00:07:37.440 align:start position:0%
exact match with the time stamp these
 

00:07:37.440 --> 00:07:39.990 align:start position:0%
exact match with the time stamp these
have<00:07:37.520><c> to</c><00:07:37.680><c> be</c><00:07:37.840><c> sorted</c><00:07:38.319><c> by</c><00:07:38.560><c> the</c><00:07:38.720><c> timestamp</c><00:07:39.599><c> so</c>

00:07:39.990 --> 00:07:40.000 align:start position:0%
have to be sorted by the timestamp so
 

00:07:40.000 --> 00:07:42.070 align:start position:0%
have to be sorted by the timestamp so
again<00:07:40.560><c> not</c><00:07:40.720><c> too</c><00:07:40.960><c> bad</c><00:07:41.360><c> what</c><00:07:41.520><c> are</c><00:07:41.599><c> we</c><00:07:41.759><c> supposed</c>

00:07:42.070 --> 00:07:42.080 align:start position:0%
again not too bad what are we supposed
 

00:07:42.080 --> 00:07:43.430 align:start position:0%
again not too bad what are we supposed
to<00:07:42.160><c> do</c><00:07:42.319><c> though</c><00:07:42.560><c> are</c><00:07:42.639><c> we</c><00:07:42.800><c> supposed</c><00:07:42.960><c> to</c><00:07:43.199><c> sort</c>

00:07:43.430 --> 00:07:43.440 align:start position:0%
to do though are we supposed to sort
 

00:07:43.440 --> 00:07:45.350 align:start position:0%
to do though are we supposed to sort
this<00:07:43.680><c> every</c><00:07:43.919><c> single</c><00:07:44.240><c> time</c><00:07:44.400><c> we</c><00:07:44.639><c> want</c><00:07:44.800><c> to</c><00:07:44.879><c> do</c><00:07:45.120><c> a</c>

00:07:45.350 --> 00:07:45.360 align:start position:0%
this every single time we want to do a
 

00:07:45.360 --> 00:07:47.189 align:start position:0%
this every single time we want to do a
get<00:07:45.680><c> operation</c><00:07:46.080><c> that's</c><00:07:46.319><c> not</c><00:07:46.560><c> going</c><00:07:46.639><c> to</c><00:07:46.800><c> make</c>

00:07:47.189 --> 00:07:47.199 align:start position:0%
get operation that's not going to make
 

00:07:47.199 --> 00:07:48.629 align:start position:0%
get operation that's not going to make
things<00:07:47.520><c> any</c><00:07:47.759><c> better</c><00:07:48.000><c> because</c><00:07:48.240><c> if</c><00:07:48.319><c> we</c><00:07:48.400><c> have</c><00:07:48.479><c> to</c>

00:07:48.629 --> 00:07:48.639 align:start position:0%
things any better because if we have to
 

00:07:48.639 --> 00:07:50.390 align:start position:0%
things any better because if we have to
sort<00:07:49.039><c> the</c><00:07:49.199><c> time</c><00:07:49.360><c> complexity</c><00:07:49.919><c> is</c><00:07:50.000><c> not</c><00:07:50.160><c> going</c><00:07:50.319><c> to</c>

00:07:50.390 --> 00:07:50.400 align:start position:0%
sort the time complexity is not going to
 

00:07:50.400 --> 00:07:52.950 align:start position:0%
sort the time complexity is not going to
be<00:07:50.800><c> log</c><00:07:51.120><c> n</c><00:07:51.440><c> and</c><00:07:51.520><c> it's</c><00:07:51.680><c> not</c><00:07:51.919><c> even</c><00:07:52.160><c> going</c><00:07:52.240><c> to</c><00:07:52.319><c> be</c><00:07:52.560><c> n</c>

00:07:52.950 --> 00:07:52.960 align:start position:0%
be log n and it's not even going to be n
 

00:07:52.960 --> 00:07:55.189 align:start position:0%
be log n and it's not even going to be n
either<00:07:53.199><c> it's</c><00:07:53.360><c> going</c><00:07:53.440><c> to</c><00:07:53.520><c> be</c><00:07:54.080><c> n</c><00:07:54.560><c> log</c><00:07:54.879><c> n</c><00:07:55.039><c> so</c>

00:07:55.189 --> 00:07:55.199 align:start position:0%
either it's going to be n log n so
 

00:07:55.199 --> 00:07:57.670 align:start position:0%
either it's going to be n log n so
that's<00:07:55.680><c> not</c><00:07:55.919><c> an</c><00:07:56.080><c> improvement</c><00:07:56.720><c> at</c><00:07:56.960><c> all</c><00:07:57.440><c> and</c><00:07:57.520><c> so</c>

00:07:57.670 --> 00:07:57.680 align:start position:0%
that's not an improvement at all and so
 

00:07:57.680 --> 00:07:58.950 align:start position:0%
that's not an improvement at all and so
this<00:07:57.840><c> is</c><00:07:58.000><c> the</c><00:07:58.080><c> part</c><00:07:58.240><c> where</c><00:07:58.400><c> we</c><00:07:58.560><c> kind</c><00:07:58.720><c> of</c><00:07:58.879><c> have</c>

00:07:58.950 --> 00:07:58.960 align:start position:0%
this is the part where we kind of have
 

00:07:58.960 --> 00:08:01.189 align:start position:0%
this is the part where we kind of have
to<00:07:59.120><c> be</c><00:07:59.280><c> smart</c><00:07:59.840><c> let's</c><00:08:00.080><c> go</c><00:08:00.319><c> down</c><00:08:00.639><c> and</c><00:08:00.800><c> read</c><00:08:01.039><c> the</c>

00:08:01.189 --> 00:08:01.199 align:start position:0%
to be smart let's go down and read the
 

00:08:01.199 --> 00:08:03.029 align:start position:0%
to be smart let's go down and read the
problem<00:08:01.599><c> carefully</c><00:08:02.080><c> if</c><00:08:02.160><c> you</c><00:08:02.319><c> scroll</c><00:08:02.720><c> all</c><00:08:02.960><c> the</c>

00:08:03.029 --> 00:08:03.039 align:start position:0%
problem carefully if you scroll all the
 

00:08:03.039 --> 00:08:06.070 align:start position:0%
problem carefully if you scroll all the
way<00:08:03.280><c> down</c><00:08:03.599><c> and</c><00:08:03.919><c> read</c><00:08:04.479><c> the</c><00:08:04.879><c> fine</c><00:08:05.280><c> print</c><00:08:05.680><c> you</c><00:08:05.840><c> can</c>

00:08:06.070 --> 00:08:06.080 align:start position:0%
way down and read the fine print you can
 

00:08:06.080 --> 00:08:09.110 align:start position:0%
way down and read the fine print you can
see<00:08:06.639><c> that</c><00:08:07.039><c> all</c><00:08:07.280><c> the</c><00:08:07.520><c> time</c><00:08:07.840><c> stamps</c><00:08:08.560><c> every</c><00:08:08.879><c> time</c>

00:08:09.110 --> 00:08:09.120 align:start position:0%
see that all the time stamps every time
 

00:08:09.120 --> 00:08:12.469 align:start position:0%
see that all the time stamps every time
we<00:08:09.520><c> we</c><00:08:09.840><c> set</c><00:08:10.240><c> a</c><00:08:10.560><c> value</c><00:08:11.280><c> the</c><00:08:11.520><c> timestamp</c><00:08:12.240><c> is</c><00:08:12.400><c> going</c>

00:08:12.469 --> 00:08:12.479 align:start position:0%
we we set a value the timestamp is going
 

00:08:12.479 --> 00:08:15.909 align:start position:0%
we we set a value the timestamp is going
to<00:08:12.639><c> be</c><00:08:12.879><c> in</c><00:08:13.280><c> increasing</c><00:08:14.240><c> order</c><00:08:14.800><c> strictly</c><00:08:15.520><c> in</c>

00:08:15.909 --> 00:08:15.919 align:start position:0%
to be in increasing order strictly in
 

00:08:15.919 --> 00:08:18.469 align:start position:0%
to be in increasing order strictly in
increasing<00:08:16.639><c> order</c><00:08:17.199><c> so</c><00:08:17.440><c> how</c><00:08:17.599><c> does</c><00:08:17.840><c> this</c><00:08:18.160><c> help</c>

00:08:18.469 --> 00:08:18.479 align:start position:0%
increasing order so how does this help
 

00:08:18.479 --> 00:08:21.350 align:start position:0%
increasing order so how does this help
us<00:08:18.800><c> well</c><00:08:19.360><c> basically</c><00:08:20.160><c> it</c><00:08:20.319><c> means</c><00:08:20.800><c> if</c><00:08:20.960><c> we</c><00:08:21.120><c> have</c><00:08:21.280><c> a</c>

00:08:21.350 --> 00:08:21.360 align:start position:0%
us well basically it means if we have a
 

00:08:21.360 --> 00:08:23.270 align:start position:0%
us well basically it means if we have a
list<00:08:21.680><c> here</c><00:08:21.840><c> and</c><00:08:22.000><c> every</c><00:08:22.240><c> time</c><00:08:22.400><c> we</c><00:08:22.639><c> set</c><00:08:22.800><c> a</c><00:08:22.960><c> value</c>

00:08:23.270 --> 00:08:23.280 align:start position:0%
list here and every time we set a value
 

00:08:23.280 --> 00:08:25.430 align:start position:0%
list here and every time we set a value
we<00:08:23.360><c> just</c><00:08:23.599><c> add</c><00:08:23.840><c> it</c><00:08:23.919><c> to</c><00:08:24.080><c> the</c><00:08:24.319><c> end</c><00:08:24.479><c> of</c><00:08:24.639><c> the</c><00:08:24.800><c> list</c>

00:08:25.430 --> 00:08:25.440 align:start position:0%
we just add it to the end of the list
 

00:08:25.440 --> 00:08:27.430 align:start position:0%
we just add it to the end of the list
then<00:08:25.919><c> the</c><00:08:26.160><c> list</c><00:08:26.479><c> is</c><00:08:26.639><c> actually</c><00:08:26.960><c> going</c><00:08:27.120><c> to</c><00:08:27.199><c> be</c>

00:08:27.430 --> 00:08:27.440 align:start position:0%
then the list is actually going to be
 

00:08:27.440 --> 00:08:30.230 align:start position:0%
then the list is actually going to be
sorted<00:08:27.840><c> by</c><00:08:28.080><c> the</c><00:08:28.240><c> timestamp</c><00:08:29.199><c> by</c><00:08:29.440><c> default</c><00:08:30.080><c> so</c>

00:08:30.230 --> 00:08:30.240 align:start position:0%
sorted by the timestamp by default so
 

00:08:30.240 --> 00:08:32.870 align:start position:0%
sorted by the timestamp by default so
it's<00:08:30.479><c> already</c><00:08:31.199><c> in</c><00:08:31.360><c> sorted</c><00:08:31.759><c> order</c><00:08:32.080><c> so</c><00:08:32.479><c> that's</c>

00:08:32.870 --> 00:08:32.880 align:start position:0%
it's already in sorted order so that's
 

00:08:32.880 --> 00:08:33.670 align:start position:0%
it's already in sorted order so that's
why

00:08:33.670 --> 00:08:33.680 align:start position:0%
why
 

00:08:33.680 --> 00:08:35.029 align:start position:0%
why
we<00:08:33.839><c> don't</c><00:08:34.000><c> have</c><00:08:34.080><c> to</c><00:08:34.159><c> sort</c><00:08:34.479><c> it</c><00:08:34.560><c> again</c><00:08:34.880><c> we</c>

00:08:35.029 --> 00:08:35.039 align:start position:0%
we don't have to sort it again we
 

00:08:35.039 --> 00:08:37.269 align:start position:0%
we don't have to sort it again we
actually<00:08:35.440><c> can</c><00:08:35.680><c> just</c><00:08:36.080><c> run</c><00:08:36.320><c> a</c><00:08:36.479><c> binary</c><00:08:36.959><c> search</c>

00:08:37.269 --> 00:08:37.279 align:start position:0%
actually can just run a binary search
 

00:08:37.279 --> 00:08:39.509 align:start position:0%
actually can just run a binary search
that's<00:08:37.680><c> really</c><00:08:38.080><c> good</c><00:08:38.399><c> for</c><00:08:38.640><c> us</c><00:08:38.959><c> but</c><00:08:39.200><c> what</c><00:08:39.360><c> if</c>

00:08:39.509 --> 00:08:39.519 align:start position:0%
that's really good for us but what if
 

00:08:39.519 --> 00:08:41.190 align:start position:0%
that's really good for us but what if
you you<00:08:40.000><c> know</c><00:08:40.080><c> what</c><00:08:40.240><c> if</c><00:08:40.399><c> you</c><00:08:40.560><c> didn't</c><00:08:40.880><c> really</c>

00:08:41.190 --> 00:08:41.200 align:start position:0%
you you know what if you didn't really
 

00:08:41.200 --> 00:08:43.670 align:start position:0%
you you know what if you didn't really
read<00:08:41.519><c> the</c><00:08:41.680><c> fine</c><00:08:42.080><c> print</c><00:08:42.560><c> well</c><00:08:43.200><c> the</c><00:08:43.279><c> way</c><00:08:43.440><c> this</c>

00:08:43.670 --> 00:08:43.680 align:start position:0%
read the fine print well the way this
 

00:08:43.680 --> 00:08:45.350 align:start position:0%
read the fine print well the way this
problem<00:08:44.080><c> is</c><00:08:44.240><c> set</c><00:08:44.480><c> up</c><00:08:44.640><c> i</c><00:08:44.720><c> think</c><00:08:44.880><c> it's</c><00:08:45.040><c> kind</c><00:08:45.200><c> of</c>

00:08:45.350 --> 00:08:45.360 align:start position:0%
problem is set up i think it's kind of
 

00:08:45.360 --> 00:08:47.829 align:start position:0%
problem is set up i think it's kind of
intuitive<00:08:46.320><c> that</c><00:08:46.560><c> if</c><00:08:46.720><c> you</c><00:08:46.880><c> are</c><00:08:47.040><c> in</c><00:08:47.200><c> a</c><00:08:47.360><c> real</c>

00:08:47.829 --> 00:08:47.839 align:start position:0%
intuitive that if you are in a real
 

00:08:47.839 --> 00:08:49.910 align:start position:0%
intuitive that if you are in a real
interview<00:08:48.480><c> the</c><00:08:48.640><c> best</c><00:08:48.959><c> question</c><00:08:49.279><c> would</c><00:08:49.519><c> be</c><00:08:49.680><c> to</c>

00:08:49.910 --> 00:08:49.920 align:start position:0%
interview the best question would be to
 

00:08:49.920 --> 00:08:53.030 align:start position:0%
interview the best question would be to
ask<00:08:50.560><c> every</c><00:08:50.800><c> time</c><00:08:50.959><c> we</c><00:08:51.279><c> set</c><00:08:51.519><c> a</c><00:08:51.680><c> value</c><00:08:52.240><c> is</c><00:08:52.399><c> it</c><00:08:52.959><c> you</c>

00:08:53.030 --> 00:08:53.040 align:start position:0%
ask every time we set a value is it you
 

00:08:53.040 --> 00:08:54.870 align:start position:0%
ask every time we set a value is it you
know<00:08:53.279><c> is</c><00:08:53.440><c> the</c><00:08:53.600><c> timestamp</c><00:08:54.160><c> gonna</c><00:08:54.480><c> be</c><00:08:54.720><c> in</c>

00:08:54.870 --> 00:08:54.880 align:start position:0%
know is the timestamp gonna be in
 

00:08:54.880 --> 00:08:57.190 align:start position:0%
know is the timestamp gonna be in
ascending<00:08:55.440><c> order</c><00:08:56.080><c> because</c><00:08:56.560><c> you</c><00:08:56.640><c> know</c><00:08:56.880><c> the</c><00:08:56.959><c> way</c>

00:08:57.190 --> 00:08:57.200 align:start position:0%
ascending order because you know the way
 

00:08:57.200 --> 00:08:59.350 align:start position:0%
ascending order because you know the way
a<00:08:57.360><c> set</c><00:08:57.680><c> operation</c><00:08:58.160><c> would</c><00:08:58.320><c> work</c><00:08:58.640><c> in</c><00:08:58.800><c> real</c><00:08:59.040><c> life</c>

00:08:59.350 --> 00:08:59.360 align:start position:0%
a set operation would work in real life
 

00:08:59.360 --> 00:09:01.990 align:start position:0%
a set operation would work in real life
is<00:08:59.440><c> you</c><00:08:59.600><c> would</c><00:08:59.760><c> use</c><00:09:00.160><c> the</c><00:09:00.640><c> the</c><00:09:00.800><c> current</c><00:09:01.279><c> time</c>

00:09:01.990 --> 00:09:02.000 align:start position:0%
is you would use the the current time
 

00:09:02.000 --> 00:09:03.670 align:start position:0%
is you would use the the current time
that<00:09:02.399><c> you</c><00:09:02.560><c> know</c><00:09:02.959><c> the</c><00:09:03.120><c> current</c><00:09:03.360><c> time</c><00:09:03.600><c> that</c>

00:09:03.670 --> 00:09:03.680 align:start position:0%
that you know the current time that
 

00:09:03.680 --> 00:09:05.590 align:start position:0%
that you know the current time that
you're<00:09:03.839><c> setting</c><00:09:04.080><c> the</c><00:09:04.240><c> value</c><00:09:04.720><c> and</c><00:09:05.040><c> you</c><00:09:05.200><c> know</c><00:09:05.279><c> as</c>

00:09:05.590 --> 00:09:05.600 align:start position:0%
you're setting the value and you know as
 

00:09:05.600 --> 00:09:07.910 align:start position:0%
you're setting the value and you know as
most<00:09:05.839><c> of</c><00:09:06.000><c> us</c><00:09:06.160><c> know</c><00:09:06.560><c> time</c><00:09:07.040><c> really</c><00:09:07.279><c> just</c><00:09:07.440><c> flows</c>

00:09:07.910 --> 00:09:07.920 align:start position:0%
most of us know time really just flows
 

00:09:07.920 --> 00:09:10.470 align:start position:0%
most of us know time really just flows
in<00:09:08.080><c> one</c><00:09:08.399><c> direction</c><00:09:09.040><c> so</c><00:09:09.200><c> it</c><00:09:09.360><c> makes</c><00:09:09.760><c> sense</c><00:09:10.240><c> that</c>

00:09:10.470 --> 00:09:10.480 align:start position:0%
in one direction so it makes sense that
 

00:09:10.480 --> 00:09:11.430 align:start position:0%
in one direction so it makes sense that
these

00:09:11.430 --> 00:09:11.440 align:start position:0%
these
 

00:09:11.440 --> 00:09:12.710 align:start position:0%
these
you<00:09:11.600><c> know</c><00:09:11.680><c> the</c><00:09:11.839><c> list</c><00:09:12.080><c> that</c><00:09:12.240><c> we're</c><00:09:12.399><c> setting</c>

00:09:12.710 --> 00:09:12.720 align:start position:0%
you know the list that we're setting
 

00:09:12.720 --> 00:09:15.190 align:start position:0%
you know the list that we're setting
would<00:09:13.040><c> already</c><00:09:13.440><c> be</c><00:09:13.760><c> in</c><00:09:14.000><c> sorted</c><00:09:14.480><c> order</c><00:09:15.040><c> but</c>

00:09:15.190 --> 00:09:15.200 align:start position:0%
would already be in sorted order but
 

00:09:15.200 --> 00:09:16.630 align:start position:0%
would already be in sorted order but
again<00:09:15.440><c> that's</c><00:09:15.600><c> kind</c><00:09:15.760><c> of</c><00:09:15.839><c> why</c><00:09:16.000><c> i</c><00:09:16.160><c> like</c><00:09:16.399><c> this</c>

00:09:16.630 --> 00:09:16.640 align:start position:0%
again that's kind of why i like this
 

00:09:16.640 --> 00:09:18.550 align:start position:0%
again that's kind of why i like this
question<00:09:17.040><c> because</c><00:09:17.680><c> even</c><00:09:17.920><c> if</c><00:09:18.000><c> you</c><00:09:18.080><c> don't</c><00:09:18.320><c> read</c>

00:09:18.550 --> 00:09:18.560 align:start position:0%
question because even if you don't read
 

00:09:18.560 --> 00:09:19.910 align:start position:0%
question because even if you don't read
the<00:09:18.720><c> fine</c><00:09:18.959><c> print</c><00:09:19.279><c> you</c><00:09:19.360><c> might</c><00:09:19.519><c> think</c><00:09:19.760><c> to</c>

00:09:19.910 --> 00:09:19.920 align:start position:0%
the fine print you might think to
 

00:09:19.920 --> 00:09:21.990 align:start position:0%
the fine print you might think to
yourself<00:09:20.399><c> are</c><00:09:20.640><c> the</c><00:09:20.800><c> set</c><00:09:21.120><c> operations</c><00:09:21.680><c> going</c><00:09:21.839><c> to</c>

00:09:21.990 --> 00:09:22.000 align:start position:0%
yourself are the set operations going to
 

00:09:22.000 --> 00:09:23.910 align:start position:0%
yourself are the set operations going to
be<00:09:22.320><c> in</c><00:09:22.399><c> sorted</c><00:09:22.800><c> order</c><00:09:23.200><c> and</c><00:09:23.279><c> that</c><00:09:23.440><c> would</c><00:09:23.600><c> be</c><00:09:23.760><c> a</c>

00:09:23.910 --> 00:09:23.920 align:start position:0%
be in sorted order and that would be a
 

00:09:23.920 --> 00:09:26.070 align:start position:0%
be in sorted order and that would be a
really<00:09:24.160><c> good</c><00:09:24.399><c> question</c><00:09:24.720><c> to</c><00:09:24.880><c> ask</c><00:09:25.279><c> in</c><00:09:25.519><c> a</c><00:09:25.680><c> real</c>

00:09:26.070 --> 00:09:26.080 align:start position:0%
really good question to ask in a real
 

00:09:26.080 --> 00:09:27.910 align:start position:0%
really good question to ask in a real
interview<00:09:26.800><c> so</c><00:09:26.959><c> in</c><00:09:27.040><c> this</c><00:09:27.200><c> case</c><00:09:27.519><c> we</c><00:09:27.600><c> would</c><00:09:27.760><c> want</c>

00:09:27.910 --> 00:09:27.920 align:start position:0%
interview so in this case we would want
 

00:09:27.920 --> 00:09:29.670 align:start position:0%
interview so in this case we would want
to<00:09:28.080><c> run</c><00:09:28.320><c> binary</c><00:09:28.800><c> search</c><00:09:29.120><c> which</c><00:09:29.279><c> would</c><00:09:29.440><c> be</c>

00:09:29.670 --> 00:09:29.680 align:start position:0%
to run binary search which would be
 

00:09:29.680 --> 00:09:31.829 align:start position:0%
to run binary search which would be
login<00:09:30.160><c> time</c><00:09:30.399><c> so</c><00:09:30.560><c> that</c><00:09:30.720><c> just</c><00:09:30.959><c> means</c><00:09:31.440><c> that</c><00:09:31.600><c> the</c>

00:09:31.829 --> 00:09:31.839 align:start position:0%
login time so that just means that the
 

00:09:31.839 --> 00:09:33.990 align:start position:0%
login time so that just means that the
get<00:09:32.160><c> operation</c><00:09:32.720><c> worst</c><00:09:33.040><c> case</c><00:09:33.360><c> is</c><00:09:33.519><c> going</c><00:09:33.680><c> to</c><00:09:33.760><c> be</c>

00:09:33.990 --> 00:09:34.000 align:start position:0%
get operation worst case is going to be
 

00:09:34.000 --> 00:09:36.870 align:start position:0%
get operation worst case is going to be
a<00:09:34.240><c> log</c><00:09:34.560><c> in</c><00:09:34.800><c> operation</c><00:09:35.519><c> and</c><00:09:35.680><c> by</c><00:09:35.920><c> the</c><00:09:36.000><c> way</c><00:09:36.720><c> if</c>

00:09:36.870 --> 00:09:36.880 align:start position:0%
a log in operation and by the way if
 

00:09:36.880 --> 00:09:38.470 align:start position:0%
a log in operation and by the way if
we're<00:09:37.120><c> looking</c><00:09:37.360><c> for</c><00:09:37.440><c> the</c><00:09:37.519><c> key</c><00:09:37.760><c> value</c><00:09:38.160><c> 4</c><00:09:38.399><c> we</c>

00:09:38.470 --> 00:09:38.480 align:start position:0%
we're looking for the key value 4 we
 

00:09:38.480 --> 00:09:39.990 align:start position:0%
we're looking for the key value 4 we
know<00:09:38.640><c> that</c><00:09:38.800><c> it</c><00:09:38.959><c> exists</c><00:09:39.279><c> so</c><00:09:39.440><c> this</c><00:09:39.600><c> is</c><00:09:39.680><c> what</c><00:09:39.839><c> we</c>

00:09:39.990 --> 00:09:40.000 align:start position:0%
know that it exists so this is what we
 

00:09:40.000 --> 00:09:41.430 align:start position:0%
know that it exists so this is what we
would<00:09:40.160><c> end</c><00:09:40.320><c> up</c><00:09:40.399><c> returning</c><00:09:40.800><c> we</c><00:09:40.880><c> would</c><00:09:41.040><c> return</c>

00:09:41.430 --> 00:09:41.440 align:start position:0%
would end up returning we would return
 

00:09:41.440 --> 00:09:43.269 align:start position:0%
would end up returning we would return
bar<00:09:41.760><c> 2</c><00:09:42.240><c> and</c><00:09:42.399><c> you</c><00:09:42.480><c> can</c><00:09:42.560><c> see</c><00:09:42.720><c> that's</c><00:09:42.959><c> exactly</c>

00:09:43.269 --> 00:09:43.279 align:start position:0%
bar 2 and you can see that's exactly
 

00:09:43.279 --> 00:09:46.070 align:start position:0%
bar 2 and you can see that's exactly
what<00:09:43.440><c> they</c><00:09:43.680><c> did</c><00:09:44.000><c> return</c><00:09:44.800><c> in</c><00:09:45.200><c> the</c><00:09:45.519><c> output</c><00:09:45.920><c> so</c>

00:09:46.070 --> 00:09:46.080 align:start position:0%
what they did return in the output so
 

00:09:46.080 --> 00:09:47.910 align:start position:0%
what they did return in the output so
we're<00:09:46.320><c> done</c><00:09:46.480><c> with</c><00:09:46.720><c> another</c><00:09:47.120><c> operation</c><00:09:47.680><c> let's</c>

00:09:47.910 --> 00:09:47.920 align:start position:0%
we're done with another operation let's
 

00:09:47.920 --> 00:09:49.829 align:start position:0%
we're done with another operation let's
cross<00:09:48.240><c> this</c><00:09:48.560><c> out</c><00:09:48.800><c> and</c><00:09:48.959><c> let's</c><00:09:49.120><c> do</c><00:09:49.279><c> our</c><00:09:49.440><c> last</c>

00:09:49.829 --> 00:09:49.839 align:start position:0%
cross this out and let's do our last
 

00:09:49.839 --> 00:09:51.910 align:start position:0%
cross this out and let's do our last
operation<00:09:50.320><c> the</c><00:09:50.480><c> get</c><00:09:50.720><c> operation</c><00:09:51.440><c> in</c><00:09:51.600><c> this</c><00:09:51.760><c> case</c>

00:09:51.910 --> 00:09:51.920 align:start position:0%
operation the get operation in this case
 

00:09:51.920 --> 00:09:54.310 align:start position:0%
operation the get operation in this case
the<00:09:52.160><c> key</c><00:09:52.480><c> is</c><00:09:52.720><c> foo</c><00:09:53.040><c> so</c><00:09:53.200><c> again</c><00:09:53.600><c> over</c><00:09:53.839><c> here</c><00:09:54.160><c> and</c>

00:09:54.310 --> 00:09:54.320 align:start position:0%
the key is foo so again over here and
 

00:09:54.320 --> 00:09:56.870 align:start position:0%
the key is foo so again over here and
the<00:09:54.480><c> time</c><00:09:54.720><c> stamp</c><00:09:55.200><c> is</c><00:09:55.680><c> five</c><00:09:56.160><c> so</c><00:09:56.399><c> again</c><00:09:56.720><c> we're</c>

00:09:56.870 --> 00:09:56.880 align:start position:0%
the time stamp is five so again we're
 

00:09:56.880 --> 00:09:58.470 align:start position:0%
the time stamp is five so again we're
gonna<00:09:56.959><c> run</c><00:09:57.200><c> binary</c><00:09:57.680><c> search</c><00:09:58.000><c> right</c><00:09:58.240><c> we're</c>

00:09:58.470 --> 00:09:58.480 align:start position:0%
gonna run binary search right we're
 

00:09:58.480 --> 00:10:00.230 align:start position:0%
gonna run binary search right we're
looking<00:09:58.720><c> for</c><00:09:58.880><c> an</c><00:09:59.040><c> exact</c><00:09:59.360><c> match</c><00:09:59.680><c> of</c><00:09:59.839><c> five</c><00:10:00.160><c> and</c>

00:10:00.230 --> 00:10:00.240 align:start position:0%
looking for an exact match of five and
 

00:10:00.240 --> 00:10:01.910 align:start position:0%
looking for an exact match of five and
if<00:10:00.320><c> we</c><00:10:00.480><c> can't</c><00:10:00.720><c> find</c><00:10:00.959><c> the</c><00:10:01.120><c> five</c><00:10:01.519><c> what's</c><00:10:01.760><c> the</c>

00:10:01.910 --> 00:10:01.920 align:start position:0%
if we can't find the five what's the
 

00:10:01.920 --> 00:10:03.269 align:start position:0%
if we can't find the five what's the
closest<00:10:02.320><c> thing</c><00:10:02.480><c> that</c><00:10:02.560><c> we</c><00:10:02.720><c> can</c><00:10:02.800><c> get</c><00:10:02.959><c> that's</c>

00:10:03.269 --> 00:10:03.279 align:start position:0%
closest thing that we can get that's
 

00:10:03.279 --> 00:10:05.910 align:start position:0%
closest thing that we can get that's
less<00:10:03.519><c> than</c><00:10:03.760><c> five</c><00:10:04.320><c> well</c><00:10:04.640><c> in</c><00:10:04.800><c> this</c><00:10:04.959><c> case</c><00:10:05.440><c> it's</c>

00:10:05.910 --> 00:10:05.920 align:start position:0%
less than five well in this case it's
 

00:10:05.920 --> 00:10:08.949 align:start position:0%
less than five well in this case it's
four<00:10:06.320><c> so</c><00:10:06.959><c> the</c><00:10:07.120><c> value</c><00:10:07.600><c> of</c><00:10:07.680><c> that</c><00:10:07.920><c> is</c><00:10:08.079><c> bar</c><00:10:08.399><c> two</c><00:10:08.720><c> so</c>

00:10:08.949 --> 00:10:08.959 align:start position:0%
four so the value of that is bar two so
 

00:10:08.959 --> 00:10:11.509 align:start position:0%
four so the value of that is bar two so
again<00:10:09.200><c> we'd</c><00:10:09.440><c> return</c><00:10:09.839><c> bar</c><00:10:10.079><c> two</c><00:10:10.560><c> so</c><00:10:11.120><c> that's</c><00:10:11.360><c> kind</c>

00:10:11.509 --> 00:10:11.519 align:start position:0%
again we'd return bar two so that's kind
 

00:10:11.519 --> 00:10:13.030 align:start position:0%
again we'd return bar two so that's kind
of<00:10:11.760><c> what</c><00:10:12.000><c> i</c><00:10:12.079><c> wanted</c><00:10:12.320><c> to</c><00:10:12.399><c> cover</c><00:10:12.640><c> with</c><00:10:12.800><c> this</c>

00:10:13.030 --> 00:10:13.040 align:start position:0%
of what i wanted to cover with this
 

00:10:13.040 --> 00:10:14.949 align:start position:0%
of what i wanted to cover with this
problem<00:10:13.440><c> of</c><00:10:13.519><c> course</c><00:10:13.760><c> we</c><00:10:13.920><c> just</c><00:10:14.079><c> had</c><00:10:14.320><c> a</c><00:10:14.480><c> single</c>

00:10:14.949 --> 00:10:14.959 align:start position:0%
problem of course we just had a single
 

00:10:14.959 --> 00:10:16.550 align:start position:0%
problem of course we just had a single
key<00:10:15.200><c> but</c><00:10:15.519><c> you</c><00:10:15.680><c> know</c><00:10:15.920><c> this</c><00:10:16.079><c> problem</c><00:10:16.320><c> wouldn't</c>

00:10:16.550 --> 00:10:16.560 align:start position:0%
key but you know this problem wouldn't
 

00:10:16.560 --> 00:10:18.630 align:start position:0%
key but you know this problem wouldn't
be<00:10:16.720><c> much</c><00:10:16.959><c> different</c><00:10:17.279><c> if</c><00:10:17.440><c> we</c><00:10:17.519><c> had</c><00:10:17.680><c> a</c><00:10:17.760><c> second</c><00:10:18.160><c> key</c>

00:10:18.630 --> 00:10:18.640 align:start position:0%
be much different if we had a second key
 

00:10:18.640 --> 00:10:20.870 align:start position:0%
be much different if we had a second key
or<00:10:18.959><c> you</c><00:10:19.040><c> know</c><00:10:19.200><c> multiple</c><00:10:19.680><c> keys</c><00:10:20.160><c> so</c><00:10:20.320><c> i</c><00:10:20.399><c> think</c><00:10:20.720><c> we</c>

00:10:20.870 --> 00:10:20.880 align:start position:0%
or you know multiple keys so i think we
 

00:10:20.880 --> 00:10:22.710 align:start position:0%
or you know multiple keys so i think we
can<00:10:21.040><c> actually</c><00:10:21.440><c> go</c><00:10:21.760><c> into</c><00:10:22.000><c> the</c><00:10:22.079><c> code</c><00:10:22.320><c> now</c><00:10:22.560><c> and</c>

00:10:22.710 --> 00:10:22.720 align:start position:0%
can actually go into the code now and
 

00:10:22.720 --> 00:10:24.630 align:start position:0%
can actually go into the code now and
see<00:10:22.880><c> how</c><00:10:23.120><c> we</c><00:10:23.200><c> can</c><00:10:23.519><c> implement</c><00:10:24.000><c> this</c><00:10:24.240><c> binary</c>

00:10:24.630 --> 00:10:24.640 align:start position:0%
see how we can implement this binary
 

00:10:24.640 --> 00:10:26.710 align:start position:0%
see how we can implement this binary
search<00:10:24.959><c> solution</c><00:10:25.760><c> okay</c><00:10:26.079><c> so</c><00:10:26.240><c> now</c><00:10:26.399><c> let's</c><00:10:26.560><c> get</c>

00:10:26.710 --> 00:10:26.720 align:start position:0%
search solution okay so now let's get
 

00:10:26.720 --> 00:10:28.630 align:start position:0%
search solution okay so now let's get
into<00:10:26.959><c> the</c><00:10:27.040><c> code</c><00:10:27.600><c> and</c><00:10:28.000><c> so</c><00:10:28.160><c> you</c><00:10:28.240><c> can</c><00:10:28.399><c> see</c><00:10:28.560><c> that</c>

00:10:28.630 --> 00:10:28.640 align:start position:0%
into the code and so you can see that
 

00:10:28.640 --> 00:10:30.630 align:start position:0%
into the code and so you can see that
they<00:10:28.800><c> already</c><00:10:29.120><c> gave</c><00:10:29.360><c> us</c><00:10:29.519><c> like</c><00:10:29.760><c> a</c><00:10:29.839><c> class</c><00:10:30.320><c> and</c><00:10:30.480><c> a</c>

00:10:30.630 --> 00:10:30.640 align:start position:0%
they already gave us like a class and a
 

00:10:30.640 --> 00:10:32.870 align:start position:0%
they already gave us like a class and a
few<00:10:31.279><c> functions</c><00:10:31.839><c> that</c><00:10:32.000><c> we're</c><00:10:32.160><c> going</c><00:10:32.320><c> to</c><00:10:32.399><c> define</c>

00:10:32.870 --> 00:10:32.880 align:start position:0%
few functions that we're going to define
 

00:10:32.880 --> 00:10:33.670 align:start position:0%
few functions that we're going to define
so

00:10:33.670 --> 00:10:33.680 align:start position:0%
so
 

00:10:33.680 --> 00:10:35.110 align:start position:0%
so
the<00:10:33.839><c> only</c><00:10:34.000><c> thing</c><00:10:34.160><c> we</c><00:10:34.320><c> really</c><00:10:34.480><c> need</c><00:10:34.640><c> to</c><00:10:34.720><c> do</c><00:10:35.040><c> in</c>

00:10:35.110 --> 00:10:35.120 align:start position:0%
the only thing we really need to do in
 

00:10:35.120 --> 00:10:37.190 align:start position:0%
the only thing we really need to do in
the<00:10:35.279><c> constructor</c><00:10:35.920><c> is</c><00:10:36.079><c> just</c><00:10:36.320><c> initialize</c><00:10:36.959><c> our</c>

00:10:37.190 --> 00:10:37.200 align:start position:0%
the constructor is just initialize our
 

00:10:37.200 --> 00:10:38.870 align:start position:0%
the constructor is just initialize our
store<00:10:37.760><c> like</c><00:10:38.000><c> i</c><00:10:38.079><c> mentioned</c><00:10:38.480><c> it's</c><00:10:38.640><c> just</c><00:10:38.800><c> going</c>

00:10:38.870 --> 00:10:38.880 align:start position:0%
store like i mentioned it's just going
 

00:10:38.880 --> 00:10:40.949 align:start position:0%
store like i mentioned it's just going
to<00:10:38.959><c> be</c><00:10:39.120><c> a</c><00:10:39.200><c> pretty</c><00:10:39.360><c> simple</c><00:10:39.760><c> hash</c><00:10:40.000><c> map</c>

00:10:40.949 --> 00:10:40.959 align:start position:0%
to be a pretty simple hash map
 

00:10:40.959 --> 00:10:43.430 align:start position:0%
to be a pretty simple hash map
where<00:10:41.200><c> the</c><00:10:41.519><c> key</c><00:10:41.760><c> value</c><00:10:42.640><c> is</c><00:10:42.800><c> going</c><00:10:42.959><c> to</c><00:10:43.120><c> end</c><00:10:43.279><c> up</c>

00:10:43.430 --> 00:10:43.440 align:start position:0%
where the key value is going to end up
 

00:10:43.440 --> 00:10:46.310 align:start position:0%
where the key value is going to end up
being<00:10:43.839><c> a</c><00:10:44.160><c> string</c><00:10:44.959><c> and</c><00:10:45.360><c> the</c><00:10:45.600><c> value</c><00:10:46.079><c> of</c><00:10:46.160><c> the</c>

00:10:46.310 --> 00:10:46.320 align:start position:0%
being a string and the value of the
 

00:10:46.320 --> 00:10:50.550 align:start position:0%
being a string and the value of the
hashmap<00:10:46.800><c> is</c><00:10:46.959><c> going</c><00:10:47.040><c> to</c><00:10:47.200><c> be</c><00:10:47.760><c> a</c><00:10:48.399><c> list</c><00:10:49.120><c> of</c><00:10:49.839><c> lists</c>

00:10:50.550 --> 00:10:50.560 align:start position:0%
hashmap is going to be a list of lists
 

00:10:50.560 --> 00:10:51.430 align:start position:0%
hashmap is going to be a list of lists
so

00:10:51.430 --> 00:10:51.440 align:start position:0%
so
 

00:10:51.440 --> 00:10:53.910 align:start position:0%
so
a<00:10:51.519><c> list</c><00:10:51.839><c> of</c><00:10:52.000><c> pairs</c><00:10:52.480><c> really</c><00:10:53.040><c> but</c><00:10:53.519><c> what</c><00:10:53.680><c> we're</c>

00:10:53.910 --> 00:10:53.920 align:start position:0%
a list of pairs really but what we're
 

00:10:53.920 --> 00:10:55.509 align:start position:0%
a list of pairs really but what we're
actually<00:10:54.079><c> going</c><00:10:54.160><c> to</c><00:10:54.240><c> be</c><00:10:54.640><c> using</c><00:10:54.959><c> to</c><00:10:55.120><c> implement</c>

00:10:55.509 --> 00:10:55.519 align:start position:0%
actually going to be using to implement
 

00:10:55.519 --> 00:10:58.069 align:start position:0%
actually going to be using to implement
that<00:10:55.680><c> pair</c><00:10:56.000><c> is</c><00:10:56.160><c> going</c><00:10:56.240><c> to</c><00:10:56.399><c> be</c><00:10:56.560><c> yes</c><00:10:57.040><c> a</c>

00:10:58.069 --> 00:10:58.079 align:start position:0%
that pair is going to be yes a
 

00:10:58.079 --> 00:11:00.550 align:start position:0%
that pair is going to be yes a
another<00:10:58.480><c> sub</c><00:10:58.800><c> list</c><00:10:59.440><c> and</c><00:10:59.680><c> the</c><00:10:59.920><c> values</c><00:11:00.320><c> of</c><00:11:00.399><c> that</c>

00:11:00.550 --> 00:11:00.560 align:start position:0%
another sub list and the values of that
 

00:11:00.560 --> 00:11:02.470 align:start position:0%
another sub list and the values of that
sub-list<00:11:01.040><c> are</c><00:11:01.120><c> going</c><00:11:01.200><c> to</c><00:11:01.279><c> represent</c><00:11:02.079><c> the</c>

00:11:02.470 --> 00:11:02.480 align:start position:0%
sub-list are going to represent the
 

00:11:02.480 --> 00:11:03.910 align:start position:0%
sub-list are going to represent the
value<00:11:02.880><c> itself</c><00:11:03.279><c> which</c><00:11:03.440><c> is</c><00:11:03.519><c> going</c><00:11:03.600><c> to</c><00:11:03.680><c> be</c><00:11:03.839><c> a</c>

00:11:03.910 --> 00:11:03.920 align:start position:0%
value itself which is going to be a
 

00:11:03.920 --> 00:11:06.550 align:start position:0%
value itself which is going to be a
string<00:11:04.480><c> and</c><00:11:04.640><c> the</c><00:11:04.800><c> second</c><00:11:05.120><c> is</c><00:11:05.279><c> going</c><00:11:05.360><c> to</c><00:11:05.440><c> be</c><00:11:06.079><c> the</c>

00:11:06.550 --> 00:11:06.560 align:start position:0%
string and the second is going to be the
 

00:11:06.560 --> 00:11:08.790 align:start position:0%
string and the second is going to be the
time<00:11:06.800><c> stamp</c><00:11:07.440><c> uh</c><00:11:07.680><c> and</c><00:11:07.839><c> yeah</c><00:11:08.079><c> just</c><00:11:08.320><c> uh</c><00:11:08.560><c> kind</c><00:11:08.720><c> of</c>

00:11:08.790 --> 00:11:08.800 align:start position:0%
time stamp uh and yeah just uh kind of
 

00:11:08.800 --> 00:11:11.190 align:start position:0%
time stamp uh and yeah just uh kind of
condense<00:11:09.360><c> this</c><00:11:09.920><c> uh</c><00:11:10.240><c> basically</c><00:11:10.880><c> we're</c><00:11:11.120><c> gonna</c>

00:11:11.190 --> 00:11:11.200 align:start position:0%
condense this uh basically we're gonna
 

00:11:11.200 --> 00:11:13.030 align:start position:0%
condense this uh basically we're gonna
have<00:11:11.360><c> a</c><00:11:11.440><c> key</c><00:11:11.839><c> that</c><00:11:12.079><c> key</c><00:11:12.240><c> is</c><00:11:12.399><c> gonna</c><00:11:12.560><c> be</c><00:11:12.640><c> mapped</c>

00:11:13.030 --> 00:11:13.040 align:start position:0%
have a key that key is gonna be mapped
 

00:11:13.040 --> 00:11:15.590 align:start position:0%
have a key that key is gonna be mapped
to<00:11:13.200><c> a</c><00:11:13.279><c> list</c><00:11:13.760><c> of</c><00:11:14.160><c> pairs</c><00:11:14.720><c> okay</c><00:11:14.959><c> so</c><00:11:15.040><c> now</c><00:11:15.200><c> let's</c><00:11:15.440><c> get</c>

00:11:15.590 --> 00:11:15.600 align:start position:0%
to a list of pairs okay so now let's get
 

00:11:15.600 --> 00:11:17.269 align:start position:0%
to a list of pairs okay so now let's get
into<00:11:15.839><c> the</c><00:11:16.000><c> set</c><00:11:16.320><c> operation</c><00:11:16.800><c> because</c><00:11:17.040><c> it's</c><00:11:17.200><c> a</c>

00:11:17.269 --> 00:11:17.279 align:start position:0%
into the set operation because it's a
 

00:11:17.279 --> 00:11:19.350 align:start position:0%
into the set operation because it's a
little<00:11:17.440><c> bit</c><00:11:17.600><c> more</c><00:11:17.839><c> simple</c><00:11:18.240><c> than</c><00:11:18.640><c> the</c><00:11:18.959><c> get</c>

00:11:19.350 --> 00:11:19.360 align:start position:0%
little bit more simple than the get
 

00:11:19.360 --> 00:11:20.790 align:start position:0%
little bit more simple than the get
operation<00:11:20.000><c> the</c><00:11:20.079><c> way</c><00:11:20.240><c> i'm</c><00:11:20.399><c> going</c><00:11:20.480><c> to</c><00:11:20.560><c> do</c><00:11:20.640><c> this</c>

00:11:20.790 --> 00:11:20.800 align:start position:0%
operation the way i'm going to do this
 

00:11:20.800 --> 00:11:22.949 align:start position:0%
operation the way i'm going to do this
is<00:11:20.959><c> first</c><00:11:21.200><c> just</c><00:11:21.519><c> check</c><00:11:22.000><c> so</c><00:11:22.399><c> of</c><00:11:22.480><c> course</c><00:11:22.720><c> we're</c>

00:11:22.949 --> 00:11:22.959 align:start position:0%
is first just check so of course we're
 

00:11:22.959 --> 00:11:25.110 align:start position:0%
is first just check so of course we're
inserting<00:11:23.440><c> something</c><00:11:24.160><c> based</c><00:11:24.480><c> on</c><00:11:24.640><c> this</c><00:11:24.880><c> key</c>

00:11:25.110 --> 00:11:25.120 align:start position:0%
inserting something based on this key
 

00:11:25.120 --> 00:11:28.150 align:start position:0%
inserting something based on this key
value<00:11:25.920><c> based</c><00:11:26.240><c> on</c><00:11:26.320><c> this</c><00:11:26.640><c> key</c><00:11:27.200><c> and</c><00:11:27.680><c> based</c><00:11:28.000><c> on</c>

00:11:28.150 --> 00:11:28.160 align:start position:0%
value based on this key and based on
 

00:11:28.160 --> 00:11:31.030 align:start position:0%
value based on this key and based on
this<00:11:28.480><c> value</c><00:11:29.360><c> based</c><00:11:29.680><c> on</c><00:11:29.920><c> this</c><00:11:30.240><c> timestamp</c><00:11:30.880><c> so</c>

00:11:31.030 --> 00:11:31.040 align:start position:0%
this value based on this timestamp so
 

00:11:31.040 --> 00:11:33.030 align:start position:0%
this value based on this timestamp so
this<00:11:31.279><c> is</c><00:11:31.360><c> going</c><00:11:31.440><c> to</c><00:11:31.519><c> be</c><00:11:31.760><c> that</c><00:11:32.000><c> pair</c><00:11:32.399><c> of</c><00:11:32.560><c> value</c>

00:11:33.030 --> 00:11:33.040 align:start position:0%
this is going to be that pair of value
 

00:11:33.040 --> 00:11:34.150 align:start position:0%
this is going to be that pair of value
timestamp<00:11:33.519><c> and</c><00:11:33.600><c> this</c><00:11:33.760><c> is</c><00:11:33.839><c> just</c><00:11:33.920><c> going</c><00:11:34.000><c> to</c><00:11:34.079><c> be</c>

00:11:34.150 --> 00:11:34.160 align:start position:0%
timestamp and this is just going to be
 

00:11:34.160 --> 00:11:35.990 align:start position:0%
timestamp and this is just going to be
the<00:11:34.320><c> key</c><00:11:34.560><c> of</c><00:11:34.640><c> the</c><00:11:34.720><c> hashmap</c><00:11:35.200><c> first</c><00:11:35.440><c> of</c><00:11:35.600><c> all</c><00:11:35.839><c> we</c>

00:11:35.990 --> 00:11:36.000 align:start position:0%
the key of the hashmap first of all we
 

00:11:36.000 --> 00:11:38.550 align:start position:0%
the key of the hashmap first of all we
want<00:11:36.160><c> to</c><00:11:36.240><c> know</c><00:11:36.399><c> does</c><00:11:36.640><c> this</c><00:11:36.880><c> key</c><00:11:37.120><c> even</c><00:11:37.600><c> exist</c><00:11:38.240><c> in</c>

00:11:38.550 --> 00:11:38.560 align:start position:0%
want to know does this key even exist in
 

00:11:38.560 --> 00:11:41.670 align:start position:0%
want to know does this key even exist in
our<00:11:39.200><c> store</c><00:11:39.839><c> and</c><00:11:40.000><c> if</c><00:11:40.160><c> it</c><00:11:40.399><c> doesn't</c><00:11:40.880><c> exist</c><00:11:41.440><c> in</c><00:11:41.519><c> our</c>

00:11:41.670 --> 00:11:41.680 align:start position:0%
our store and if it doesn't exist in our
 

00:11:41.680 --> 00:11:42.389 align:start position:0%
our store and if it doesn't exist in our
store

00:11:42.389 --> 00:11:42.399 align:start position:0%
store
 

00:11:42.399 --> 00:11:44.310 align:start position:0%
store
the<00:11:42.480><c> first</c><00:11:42.720><c> thing</c><00:11:42.880><c> we</c><00:11:43.040><c> want</c><00:11:43.120><c> to</c><00:11:43.279><c> do</c><00:11:43.519><c> is</c><00:11:43.680><c> just</c>

00:11:44.310 --> 00:11:44.320 align:start position:0%
the first thing we want to do is just
 

00:11:44.320 --> 00:11:46.150 align:start position:0%
the first thing we want to do is just
you<00:11:44.399><c> know</c><00:11:44.560><c> insert</c><00:11:44.959><c> it</c><00:11:45.120><c> into</c><00:11:45.279><c> the</c><00:11:45.440><c> store</c><00:11:45.839><c> and</c>

00:11:46.150 --> 00:11:46.160 align:start position:0%
you know insert it into the store and
 

00:11:46.160 --> 00:11:48.389 align:start position:0%
you know insert it into the store and
you<00:11:46.240><c> know</c><00:11:46.399><c> set</c><00:11:46.640><c> it</c><00:11:46.720><c> to</c><00:11:47.040><c> let's</c><00:11:47.279><c> say</c><00:11:47.600><c> an</c><00:11:47.839><c> empty</c>

00:11:48.389 --> 00:11:48.399 align:start position:0%
you know set it to let's say an empty
 

00:11:48.399 --> 00:11:49.750 align:start position:0%
you know set it to let's say an empty
list<00:11:48.880><c> so</c>

00:11:49.750 --> 00:11:49.760 align:start position:0%
list so
 

00:11:49.760 --> 00:11:51.030 align:start position:0%
list so
put<00:11:49.920><c> this</c><00:11:50.240><c> key</c>

00:11:51.030 --> 00:11:51.040 align:start position:0%
put this key
 

00:11:51.040 --> 00:11:53.910 align:start position:0%
put this key
and<00:11:51.440><c> just</c><00:11:51.680><c> set</c><00:11:51.920><c> it</c><00:11:52.000><c> to</c><00:11:52.320><c> an</c><00:11:52.560><c> empty</c><00:11:52.959><c> list</c>

00:11:53.910 --> 00:11:53.920 align:start position:0%
and just set it to an empty list
 

00:11:53.920 --> 00:11:55.910 align:start position:0%
and just set it to an empty list
you<00:11:54.160><c> probably</c><00:11:54.399><c> don't</c><00:11:54.639><c> need</c><00:11:54.880><c> to</c><00:11:55.040><c> do</c><00:11:55.440><c> this</c><00:11:55.680><c> line</c>

00:11:55.910 --> 00:11:55.920 align:start position:0%
you probably don't need to do this line
 

00:11:55.920 --> 00:11:57.590 align:start position:0%
you probably don't need to do this line
we<00:11:56.079><c> could</c><00:11:56.160><c> just</c><00:11:56.320><c> use</c><00:11:56.480><c> a</c><00:11:56.639><c> default</c><00:11:57.120><c> dictionary</c>

00:11:57.590 --> 00:11:57.600 align:start position:0%
we could just use a default dictionary
 

00:11:57.600 --> 00:11:59.350 align:start position:0%
we could just use a default dictionary
if<00:11:57.760><c> we</c><00:11:57.839><c> really</c><00:11:58.079><c> wanted</c><00:11:58.399><c> to</c><00:11:58.800><c> but</c><00:11:58.959><c> i</c><00:11:59.040><c> don't</c><00:11:59.200><c> want</c>

00:11:59.350 --> 00:11:59.360 align:start position:0%
if we really wanted to but i don't want
 

00:11:59.360 --> 00:12:01.350 align:start position:0%
if we really wanted to but i don't want
to<00:11:59.519><c> abuse</c><00:12:00.000><c> python</c><00:12:00.560><c> too</c><00:12:00.720><c> much</c><00:12:00.959><c> because</c><00:12:01.120><c> i</c><00:12:01.200><c> think</c>

00:12:01.350 --> 00:12:01.360 align:start position:0%
to abuse python too much because i think
 

00:12:01.360 --> 00:12:03.750 align:start position:0%
to abuse python too much because i think
sometimes<00:12:01.760><c> it</c><00:12:01.839><c> makes</c><00:12:02.079><c> things</c><00:12:02.480><c> too</c><00:12:02.720><c> easy</c><00:12:03.600><c> and</c>

00:12:03.750 --> 00:12:03.760 align:start position:0%
sometimes it makes things too easy and
 

00:12:03.760 --> 00:12:05.269 align:start position:0%
sometimes it makes things too easy and
this<00:12:04.000><c> would</c><00:12:04.160><c> kind</c><00:12:04.320><c> of</c><00:12:04.399><c> be</c>

00:12:05.269 --> 00:12:05.279 align:start position:0%
this would kind of be
 

00:12:05.279 --> 00:12:06.550 align:start position:0%
this would kind of be
i<00:12:05.440><c> assume</c><00:12:05.760><c> this</c><00:12:05.839><c> is</c><00:12:06.000><c> what</c><00:12:06.079><c> you</c><00:12:06.240><c> would</c><00:12:06.320><c> want</c><00:12:06.480><c> to</c>

00:12:06.550 --> 00:12:06.560 align:start position:0%
i assume this is what you would want to
 

00:12:06.560 --> 00:12:08.629 align:start position:0%
i assume this is what you would want to
do<00:12:06.720><c> if</c><00:12:06.800><c> you</c><00:12:06.880><c> were</c><00:12:07.040><c> doing</c><00:12:07.200><c> this</c><00:12:07.360><c> in</c><00:12:07.519><c> java</c><00:12:07.920><c> or</c><00:12:08.160><c> c</c>

00:12:08.629 --> 00:12:08.639 align:start position:0%
do if you were doing this in java or c
 

00:12:08.639 --> 00:12:10.230 align:start position:0%
do if you were doing this in java or c
plus<00:12:08.880><c> or</c><00:12:08.959><c> something</c><00:12:09.200><c> like</c><00:12:09.440><c> that</c><00:12:09.839><c> yeah</c><00:12:10.000><c> so</c>

00:12:10.230 --> 00:12:10.240 align:start position:0%
plus or something like that yeah so
 

00:12:10.240 --> 00:12:13.269 align:start position:0%
plus or something like that yeah so
after<00:12:10.639><c> we</c><00:12:10.880><c> have</c><00:12:11.519><c> uh</c><00:12:12.160><c> you</c><00:12:12.320><c> know</c><00:12:12.800><c> we</c><00:12:12.959><c> know</c><00:12:13.120><c> that</c>

00:12:13.269 --> 00:12:13.279 align:start position:0%
after we have uh you know we know that
 

00:12:13.279 --> 00:12:15.190 align:start position:0%
after we have uh you know we know that
for<00:12:13.440><c> sure</c><00:12:13.600><c> we</c><00:12:13.760><c> have</c><00:12:13.839><c> an</c><00:12:14.000><c> empty</c><00:12:14.399><c> list</c><00:12:14.720><c> there</c>

00:12:15.190 --> 00:12:15.200 align:start position:0%
for sure we have an empty list there
 

00:12:15.200 --> 00:12:17.590 align:start position:0%
for sure we have an empty list there
then<00:12:15.519><c> all</c><00:12:15.680><c> we</c><00:12:15.760><c> want</c><00:12:15.920><c> to</c><00:12:16.000><c> do</c><00:12:16.320><c> is</c><00:12:16.560><c> to</c><00:12:16.800><c> that</c><00:12:17.040><c> list</c>

00:12:17.590 --> 00:12:17.600 align:start position:0%
then all we want to do is to that list
 

00:12:17.600 --> 00:12:20.870 align:start position:0%
then all we want to do is to that list
append<00:12:18.560><c> a</c><00:12:18.720><c> value</c><00:12:19.120><c> to</c><00:12:19.360><c> it</c><00:12:19.519><c> right</c><00:12:19.839><c> append</c><00:12:20.560><c> to</c><00:12:20.720><c> the</c>

00:12:20.870 --> 00:12:20.880 align:start position:0%
append a value to it right append to the
 

00:12:20.880 --> 00:12:23.829 align:start position:0%
append a value to it right append to the
end<00:12:21.040><c> of</c><00:12:21.120><c> the</c><00:12:21.279><c> list</c><00:12:22.000><c> uh</c><00:12:22.320><c> a</c><00:12:22.480><c> pair</c><00:12:22.720><c> of</c><00:12:22.880><c> values</c><00:12:23.519><c> the</c>

00:12:23.829 --> 00:12:23.839 align:start position:0%
end of the list uh a pair of values the
 

00:12:23.839 --> 00:12:25.829 align:start position:0%
end of the list uh a pair of values the
value<00:12:24.240><c> itself</c><00:12:24.800><c> and</c><00:12:24.959><c> the</c><00:12:25.120><c> timestamp</c>

00:12:25.829 --> 00:12:25.839 align:start position:0%
value itself and the timestamp
 

00:12:25.839 --> 00:12:27.829 align:start position:0%
value itself and the timestamp
associated<00:12:26.399><c> with</c><00:12:26.639><c> it</c><00:12:27.040><c> and</c><00:12:27.120><c> that's</c><00:12:27.360><c> really</c><00:12:27.680><c> it</c>

00:12:27.829 --> 00:12:27.839 align:start position:0%
associated with it and that's really it
 

00:12:27.839 --> 00:12:29.110 align:start position:0%
associated with it and that's really it
right<00:12:28.000><c> the</c><00:12:28.160><c> set</c><00:12:28.399><c> operation</c><00:12:28.800><c> is</c><00:12:28.959><c> pretty</c>

00:12:29.110 --> 00:12:29.120 align:start position:0%
right the set operation is pretty
 

00:12:29.120 --> 00:12:31.110 align:start position:0%
right the set operation is pretty
straightforward<00:12:29.680><c> in</c><00:12:29.760><c> this</c><00:12:29.920><c> case</c><00:12:30.399><c> but</c><00:12:30.560><c> the</c><00:12:30.880><c> get</c>

00:12:31.110 --> 00:12:31.120 align:start position:0%
straightforward in this case but the get
 

00:12:31.120 --> 00:12:32.949 align:start position:0%
straightforward in this case but the get
operation<00:12:31.760><c> is</c><00:12:32.000><c> where</c><00:12:32.240><c> things</c><00:12:32.639><c> are</c><00:12:32.800><c> going</c><00:12:32.880><c> to</c>

00:12:32.949 --> 00:12:32.959 align:start position:0%
operation is where things are going to
 

00:12:32.959 --> 00:12:34.870 align:start position:0%
operation is where things are going to
get<00:12:33.120><c> a</c><00:12:33.200><c> little</c><00:12:33.360><c> bit</c><00:12:33.600><c> tricky</c><00:12:34.320><c> so</c><00:12:34.560><c> first</c><00:12:34.800><c> i'm</c>

00:12:34.870 --> 00:12:34.880 align:start position:0%
get a little bit tricky so first i'm
 

00:12:34.880 --> 00:12:36.949 align:start position:0%
get a little bit tricky so first i'm
just<00:12:35.040><c> going</c><00:12:35.120><c> to</c><00:12:35.279><c> initialize</c><00:12:36.160><c> the</c><00:12:36.399><c> result</c>

00:12:36.949 --> 00:12:36.959 align:start position:0%
just going to initialize the result
 

00:12:36.959 --> 00:12:39.190 align:start position:0%
just going to initialize the result
initially<00:12:37.920><c> it's</c><00:12:38.079><c> just</c><00:12:38.240><c> going</c><00:12:38.320><c> to</c><00:12:38.399><c> be</c><00:12:38.720><c> an</c><00:12:38.880><c> empty</c>

00:12:39.190 --> 00:12:39.200 align:start position:0%
initially it's just going to be an empty
 

00:12:39.200 --> 00:12:40.790 align:start position:0%
initially it's just going to be an empty
string<00:12:39.680><c> and</c><00:12:39.839><c> the</c><00:12:39.920><c> reason</c><00:12:40.160><c> i'm</c><00:12:40.320><c> doing</c><00:12:40.480><c> this</c><00:12:40.639><c> is</c>

00:12:40.790 --> 00:12:40.800 align:start position:0%
string and the reason i'm doing this is
 

00:12:40.800 --> 00:12:42.710 align:start position:0%
string and the reason i'm doing this is
because<00:12:41.040><c> if</c><00:12:41.120><c> this</c><00:12:41.360><c> key</c><00:12:41.600><c> doesn't</c><00:12:41.920><c> even</c><00:12:42.160><c> exist</c>

00:12:42.710 --> 00:12:42.720 align:start position:0%
because if this key doesn't even exist
 

00:12:42.720 --> 00:12:44.790 align:start position:0%
because if this key doesn't even exist
in<00:12:42.880><c> the</c><00:12:43.040><c> store</c><00:12:43.440><c> itself</c><00:12:44.000><c> then</c><00:12:44.160><c> this</c><00:12:44.399><c> is</c><00:12:44.480><c> what</c>

00:12:44.790 --> 00:12:44.800 align:start position:0%
in the store itself then this is what
 

00:12:44.800 --> 00:12:46.470 align:start position:0%
in the store itself then this is what
they<00:12:44.959><c> want</c><00:12:45.200><c> us</c><00:12:45.360><c> to</c><00:12:45.519><c> return</c><00:12:45.920><c> they</c><00:12:46.000><c> just</c><00:12:46.160><c> want</c><00:12:46.320><c> us</c>

00:12:46.470 --> 00:12:46.480 align:start position:0%
they want us to return they just want us
 

00:12:46.480 --> 00:12:48.310 align:start position:0%
they want us to return they just want us
to<00:12:46.639><c> return</c><00:12:47.040><c> an</c><00:12:47.279><c> empty</c><00:12:47.519><c> string</c><00:12:47.839><c> that's</c><00:12:48.000><c> why</c><00:12:48.160><c> i'm</c>

00:12:48.310 --> 00:12:48.320 align:start position:0%
to return an empty string that's why i'm
 

00:12:48.320 --> 00:12:50.150 align:start position:0%
to return an empty string that's why i'm
initializing<00:12:48.880><c> it</c><00:12:48.959><c> this</c><00:12:49.200><c> way</c><00:12:49.600><c> and</c><00:12:49.839><c> the</c><00:12:50.000><c> next</c>

00:12:50.150 --> 00:12:50.160 align:start position:0%
initializing it this way and the next
 

00:12:50.160 --> 00:12:51.750 align:start position:0%
initializing it this way and the next
thing<00:12:50.320><c> we</c><00:12:50.480><c> want</c><00:12:50.560><c> to</c><00:12:50.639><c> do</c><00:12:50.800><c> is</c><00:12:50.959><c> actually</c><00:12:51.279><c> check</c>

00:12:51.750 --> 00:12:51.760 align:start position:0%
thing we want to do is actually check
 

00:12:51.760 --> 00:12:54.150 align:start position:0%
thing we want to do is actually check
what<00:12:52.079><c> that</c><00:12:52.399><c> list</c><00:12:52.720><c> of</c><00:12:52.800><c> values</c><00:12:53.279><c> actually</c><00:12:53.680><c> is</c><00:12:53.920><c> so</c>

00:12:54.150 --> 00:12:54.160 align:start position:0%
what that list of values actually is so
 

00:12:54.160 --> 00:12:57.430 align:start position:0%
what that list of values actually is so
let's<00:12:54.399><c> go</c><00:12:54.639><c> to</c><00:12:54.959><c> our</c><00:12:55.200><c> store</c><00:12:55.760><c> and</c><00:12:56.320><c> run</c><00:12:56.880><c> the</c><00:12:57.120><c> get</c>

00:12:57.430 --> 00:12:57.440 align:start position:0%
let's go to our store and run the get
 

00:12:57.440 --> 00:12:59.350 align:start position:0%
let's go to our store and run the get
operation<00:12:58.000><c> reason</c><00:12:58.240><c> i'm</c><00:12:58.399><c> using</c><00:12:58.639><c> the</c><00:12:58.800><c> get</c><00:12:59.120><c> is</c>

00:12:59.350 --> 00:12:59.360 align:start position:0%
operation reason i'm using the get is
 

00:12:59.360 --> 00:13:02.150 align:start position:0%
operation reason i'm using the get is
because<00:13:00.000><c> if</c><00:13:00.160><c> we</c><00:13:00.399><c> find</c><00:13:00.720><c> a</c><00:13:00.800><c> match</c><00:13:01.360><c> it'll</c><00:13:01.760><c> return</c>

00:13:02.150 --> 00:13:02.160 align:start position:0%
because if we find a match it'll return
 

00:13:02.160 --> 00:13:04.069 align:start position:0%
because if we find a match it'll return
that<00:13:02.399><c> list</c><00:13:02.880><c> if</c><00:13:03.040><c> it</c><00:13:03.120><c> doesn't</c><00:13:03.440><c> find</c><00:13:03.680><c> a</c><00:13:03.839><c> match</c>

00:13:04.069 --> 00:13:04.079 align:start position:0%
that list if it doesn't find a match
 

00:13:04.079 --> 00:13:06.470 align:start position:0%
that list if it doesn't find a match
with<00:13:04.240><c> this</c><00:13:04.560><c> key</c><00:13:04.959><c> by</c><00:13:05.200><c> default</c><00:13:05.600><c> we</c><00:13:05.760><c> can</c>

00:13:06.470 --> 00:13:06.480 align:start position:0%
with this key by default we can
 

00:13:06.480 --> 00:13:08.790 align:start position:0%
with this key by default we can
tell<00:13:06.720><c> it</c><00:13:06.800><c> to</c><00:13:06.959><c> just</c><00:13:07.200><c> return</c><00:13:07.680><c> an</c><00:13:07.920><c> empty</c><00:13:08.240><c> list</c>

00:13:08.790 --> 00:13:08.800 align:start position:0%
tell it to just return an empty list
 

00:13:08.800 --> 00:13:12.550 align:start position:0%
tell it to just return an empty list
yeah<00:13:08.959><c> so</c><00:13:09.200><c> this</c><00:13:09.519><c> is</c><00:13:09.760><c> our</c><00:13:10.000><c> list</c><00:13:10.399><c> of</c><00:13:10.880><c> values</c><00:13:12.000><c> and</c>

00:13:12.550 --> 00:13:12.560 align:start position:0%
yeah so this is our list of values and
 

00:13:12.560 --> 00:13:14.790 align:start position:0%
yeah so this is our list of values and
now<00:13:12.880><c> is</c><00:13:13.040><c> when</c><00:13:13.200><c> we</c><00:13:13.360><c> actually</c><00:13:13.680><c> want</c><00:13:13.839><c> to</c><00:13:14.000><c> run</c><00:13:14.480><c> the</c>

00:13:14.790 --> 00:13:14.800 align:start position:0%
now is when we actually want to run the
 

00:13:14.800 --> 00:13:16.870 align:start position:0%
now is when we actually want to run the
binary<00:13:15.360><c> search</c><00:13:15.839><c> and</c><00:13:16.000><c> then</c><00:13:16.160><c> after</c><00:13:16.480><c> we</c><00:13:16.639><c> run</c><00:13:16.800><c> the</c>

00:13:16.870 --> 00:13:16.880 align:start position:0%
binary search and then after we run the
 

00:13:16.880 --> 00:13:18.230 align:start position:0%
binary search and then after we run the
binary<00:13:17.279><c> search</c><00:13:17.519><c> we're</c><00:13:17.760><c> going</c><00:13:17.839><c> to</c><00:13:17.920><c> end</c><00:13:18.079><c> up</c>

00:13:18.230 --> 00:13:18.240 align:start position:0%
binary search we're going to end up
 

00:13:18.240 --> 00:13:20.710 align:start position:0%
binary search we're going to end up
returning<00:13:18.959><c> whatever</c><00:13:19.360><c> the</c><00:13:19.519><c> result</c><00:13:20.079><c> happens</c><00:13:20.480><c> to</c>

00:13:20.710 --> 00:13:20.720 align:start position:0%
returning whatever the result happens to
 

00:13:20.720 --> 00:13:22.629 align:start position:0%
returning whatever the result happens to
be<00:13:21.279><c> as</c><00:13:21.519><c> you</c><00:13:21.600><c> may</c><00:13:21.839><c> know</c>

00:13:22.629 --> 00:13:22.639 align:start position:0%
be as you may know
 

00:13:22.639 --> 00:13:24.629 align:start position:0%
be as you may know
binary<00:13:23.040><c> search</c><00:13:23.360><c> has</c><00:13:23.600><c> usually</c><00:13:24.000><c> two</c><00:13:24.160><c> pointers</c><00:13:24.560><c> a</c>

00:13:24.629 --> 00:13:24.639 align:start position:0%
binary search has usually two pointers a
 

00:13:24.639 --> 00:13:27.030 align:start position:0%
binary search has usually two pointers a
left<00:13:24.880><c> and</c><00:13:24.959><c> right</c><00:13:25.200><c> pointer</c><00:13:25.600><c> i</c><00:13:25.760><c> have</c><00:13:26.000><c> solved</c><00:13:26.480><c> a</c>

00:13:27.030 --> 00:13:27.040 align:start position:0%
left and right pointer i have solved a
 

00:13:27.040 --> 00:13:29.269 align:start position:0%
left and right pointer i have solved a
variety<00:13:27.519><c> of</c><00:13:27.680><c> binary</c><00:13:28.000><c> search</c><00:13:28.399><c> problems</c><00:13:29.200><c> on</c>

00:13:29.269 --> 00:13:29.279 align:start position:0%
variety of binary search problems on
 

00:13:29.279 --> 00:13:31.269 align:start position:0%
variety of binary search problems on
this<00:13:29.519><c> channel</c><00:13:29.920><c> i</c><00:13:30.079><c> even</c><00:13:30.320><c> have</c><00:13:30.480><c> a</c><00:13:30.560><c> binary</c><00:13:30.959><c> search</c>

00:13:31.269 --> 00:13:31.279 align:start position:0%
this channel i even have a binary search
 

00:13:31.279 --> 00:13:33.030 align:start position:0%
this channel i even have a binary search
playlist<00:13:32.000><c> if</c><00:13:32.160><c> you</c>

00:13:33.030 --> 00:13:33.040 align:start position:0%
playlist if you
 

00:13:33.040 --> 00:13:35.110 align:start position:0%
playlist if you
want<00:13:33.200><c> to</c><00:13:33.279><c> practice</c><00:13:33.920><c> uh</c><00:13:34.240><c> but</c><00:13:34.560><c> yeah</c><00:13:34.720><c> so</c><00:13:34.880><c> let's</c>

00:13:35.110 --> 00:13:35.120 align:start position:0%
want to practice uh but yeah so let's
 

00:13:35.120 --> 00:13:38.790 align:start position:0%
want to practice uh but yeah so let's
set<00:13:35.279><c> the</c><00:13:35.440><c> left</c><00:13:35.920><c> and</c><00:13:36.399><c> let's</c><00:13:36.639><c> get</c><00:13:37.040><c> the</c><00:13:37.839><c> length</c><00:13:38.320><c> of</c>

00:13:38.790 --> 00:13:38.800 align:start position:0%
set the left and let's get the length of
 

00:13:38.800 --> 00:13:40.790 align:start position:0%
set the left and let's get the length of
the<00:13:39.120><c> array</c><00:13:39.440><c> minus</c><00:13:39.839><c> one</c><00:13:40.160><c> is</c><00:13:40.320><c> going</c><00:13:40.399><c> to</c><00:13:40.480><c> be</c><00:13:40.639><c> our</c>

00:13:40.790 --> 00:13:40.800 align:start position:0%
the array minus one is going to be our
 

00:13:40.800 --> 00:13:43.750 align:start position:0%
the array minus one is going to be our
right<00:13:41.040><c> pointer</c><00:13:41.760><c> and</c><00:13:42.000><c> basically</c><00:13:42.800><c> while</c><00:13:43.440><c> the</c>

00:13:43.750 --> 00:13:43.760 align:start position:0%
right pointer and basically while the
 

00:13:43.760 --> 00:13:46.069 align:start position:0%
right pointer and basically while the
left<00:13:44.079><c> pointer</c><00:13:44.480><c> hasn't</c><00:13:45.040><c> crossed</c><00:13:45.680><c> the</c><00:13:45.839><c> right</c>

00:13:46.069 --> 00:13:46.079 align:start position:0%
left pointer hasn't crossed the right
 

00:13:46.079 --> 00:13:48.150 align:start position:0%
left pointer hasn't crossed the right
pointer<00:13:46.880><c> we</c><00:13:47.120><c> are</c><00:13:47.279><c> going</c><00:13:47.360><c> to</c><00:13:47.440><c> run</c><00:13:47.600><c> the</c><00:13:47.760><c> binary</c>

00:13:48.150 --> 00:13:48.160 align:start position:0%
pointer we are going to run the binary
 

00:13:48.160 --> 00:13:49.030 align:start position:0%
pointer we are going to run the binary
search

00:13:49.030 --> 00:13:49.040 align:start position:0%
search
 

00:13:49.040 --> 00:13:50.629 align:start position:0%
search
actually<00:13:49.360><c> should</c><00:13:49.519><c> be</c><00:13:49.760><c> equal</c><00:13:50.240><c> if</c><00:13:50.320><c> we</c><00:13:50.480><c> want</c><00:13:50.560><c> to</c>

00:13:50.629 --> 00:13:50.639 align:start position:0%
actually should be equal if we want to
 

00:13:50.639 --> 00:13:53.030 align:start position:0%
actually should be equal if we want to
make<00:13:50.800><c> sure</c><00:13:51.199><c> to</c><00:13:51.360><c> get</c><00:13:51.519><c> the</c><00:13:51.600><c> last</c><00:13:51.920><c> value</c><00:13:52.320><c> but</c><00:13:52.800><c> yeah</c>

00:13:53.030 --> 00:13:53.040 align:start position:0%
make sure to get the last value but yeah
 

00:13:53.040 --> 00:13:55.269 align:start position:0%
make sure to get the last value but yeah
so<00:13:53.360><c> we</c><00:13:53.440><c> have</c><00:13:53.600><c> a</c><00:13:53.680><c> left</c><00:13:53.920><c> and</c><00:13:54.000><c> right</c><00:13:54.240><c> pointer</c><00:13:54.800><c> and</c>

00:13:55.269 --> 00:13:55.279 align:start position:0%
so we have a left and right pointer and
 

00:13:55.279 --> 00:13:56.629 align:start position:0%
so we have a left and right pointer and
usually<00:13:55.600><c> we</c><00:13:55.760><c> want</c><00:13:55.920><c> to</c><00:13:56.000><c> look</c><00:13:56.160><c> at</c><00:13:56.240><c> the</c><00:13:56.320><c> middle</c>

00:13:56.629 --> 00:13:56.639 align:start position:0%
usually we want to look at the middle
 

00:13:56.639 --> 00:13:58.710 align:start position:0%
usually we want to look at the middle
value<00:13:57.120><c> so</c><00:13:57.279><c> we</c><00:13:57.440><c> can</c><00:13:57.519><c> just</c><00:13:57.680><c> take</c><00:13:57.920><c> left</c><00:13:58.320><c> plus</c>

00:13:58.710 --> 00:13:58.720 align:start position:0%
value so we can just take left plus
 

00:13:58.720 --> 00:14:01.430 align:start position:0%
value so we can just take left plus
right<00:13:59.199><c> divide</c><00:13:59.600><c> it</c><00:13:59.680><c> by</c><00:13:59.839><c> two</c><00:14:00.160><c> in</c><00:14:00.800><c> in</c><00:14:00.959><c> python</c>

00:14:01.430 --> 00:14:01.440 align:start position:0%
right divide it by two in in python
 

00:14:01.440 --> 00:14:04.870 align:start position:0%
right divide it by two in in python
integer<00:14:01.920><c> division</c><00:14:02.800><c> you</c><00:14:02.959><c> need</c><00:14:03.360><c> two</c><00:14:04.000><c> uh</c><00:14:04.320><c> slashes</c>

00:14:04.870 --> 00:14:04.880 align:start position:0%
integer division you need two uh slashes
 

00:14:04.880 --> 00:14:06.790 align:start position:0%
integer division you need two uh slashes
to<00:14:04.959><c> do</c><00:14:05.120><c> that</c><00:14:05.600><c> otherwise</c><00:14:06.000><c> it</c><00:14:06.079><c> does</c><00:14:06.320><c> decimal</c>

00:14:06.790 --> 00:14:06.800 align:start position:0%
to do that otherwise it does decimal
 

00:14:06.800 --> 00:14:08.629 align:start position:0%
to do that otherwise it does decimal
division<00:14:07.680><c> and</c>

00:14:08.629 --> 00:14:08.639 align:start position:0%
division and
 

00:14:08.639 --> 00:14:10.470 align:start position:0%
division and
then<00:14:08.880><c> we</c><00:14:09.040><c> just</c><00:14:09.199><c> want</c><00:14:09.360><c> to</c><00:14:09.440><c> know</c><00:14:09.600><c> did</c><00:14:09.760><c> we</c><00:14:10.000><c> find</c>

00:14:10.470 --> 00:14:10.480 align:start position:0%
then we just want to know did we find
 

00:14:10.480 --> 00:14:12.870 align:start position:0%
then we just want to know did we find
the<00:14:10.639><c> result</c><00:14:11.120><c> or</c><00:14:11.360><c> not</c><00:14:11.680><c> well</c><00:14:11.920><c> if</c><00:14:12.079><c> we</c><00:14:12.320><c> found</c><00:14:12.639><c> it</c>

00:14:12.870 --> 00:14:12.880 align:start position:0%
the result or not well if we found it
 

00:14:12.880 --> 00:14:15.990 align:start position:0%
the result or not well if we found it
let's<00:14:13.360><c> check</c><00:14:13.839><c> in</c><00:14:14.000><c> our</c><00:14:14.160><c> values</c><00:14:15.120><c> values</c><00:14:15.680><c> at</c>

00:14:15.990 --> 00:14:16.000 align:start position:0%
let's check in our values values at
 

00:14:16.000 --> 00:14:18.230 align:start position:0%
let's check in our values values at
index<00:14:16.560><c> m</c><00:14:17.120><c> and</c><00:14:17.279><c> we</c><00:14:17.440><c> know</c><00:14:17.600><c> this</c><00:14:17.839><c> is</c><00:14:17.920><c> going</c><00:14:18.000><c> to</c><00:14:18.079><c> be</c>

00:14:18.230 --> 00:14:18.240 align:start position:0%
index m and we know this is going to be
 

00:14:18.240 --> 00:14:19.990 align:start position:0%
index m and we know this is going to be
a<00:14:18.399><c> pair</c><00:14:18.639><c> of</c><00:14:18.800><c> values</c><00:14:19.279><c> we</c><00:14:19.360><c> want</c><00:14:19.519><c> to</c><00:14:19.600><c> look</c><00:14:19.760><c> at</c><00:14:19.839><c> the</c>

00:14:19.990 --> 00:14:20.000 align:start position:0%
a pair of values we want to look at the
 

00:14:20.000 --> 00:14:22.069 align:start position:0%
a pair of values we want to look at the
time<00:14:20.320><c> stamp</c><00:14:20.639><c> which</c><00:14:20.800><c> is</c><00:14:20.959><c> the</c><00:14:21.120><c> second</c><00:14:21.519><c> value</c><00:14:21.920><c> up</c>

00:14:22.069 --> 00:14:22.079 align:start position:0%
time stamp which is the second value up
 

00:14:22.079 --> 00:14:23.269 align:start position:0%
time stamp which is the second value up
above<00:14:22.399><c> right</c><00:14:22.560><c> you</c><00:14:22.639><c> can</c><00:14:22.720><c> see</c><00:14:22.880><c> even</c><00:14:23.120><c> in</c><00:14:23.199><c> the</c>

00:14:23.269 --> 00:14:23.279 align:start position:0%
above right you can see even in the
 

00:14:23.279 --> 00:14:25.269 align:start position:0%
above right you can see even in the
comments<00:14:23.760><c> we</c><00:14:24.160><c> said</c><00:14:24.399><c> that</c><00:14:24.480><c> the</c><00:14:24.639><c> second</c><00:14:24.959><c> value</c>

00:14:25.269 --> 00:14:25.279 align:start position:0%
comments we said that the second value
 

00:14:25.279 --> 00:14:27.350 align:start position:0%
comments we said that the second value
is<00:14:25.360><c> the</c><00:14:25.519><c> timestamp</c><00:14:26.000><c> so</c><00:14:26.480><c> we</c><00:14:26.639><c> can</c><00:14:26.720><c> go</c><00:14:26.800><c> to</c><00:14:26.959><c> index</c>

00:14:27.350 --> 00:14:27.360 align:start position:0%
is the timestamp so we can go to index
 

00:14:27.360 --> 00:14:30.310 align:start position:0%
is the timestamp so we can go to index
1.<00:14:27.920><c> if</c><00:14:28.240><c> this</c><00:14:28.639><c> is</c><00:14:28.880><c> equal</c><00:14:29.519><c> to</c><00:14:29.680><c> the</c><00:14:29.839><c> timestamp</c>

00:14:30.310 --> 00:14:30.320 align:start position:0%
1. if this is equal to the timestamp
 

00:14:30.320 --> 00:14:31.829 align:start position:0%
1. if this is equal to the timestamp
that<00:14:30.480><c> we're</c><00:14:30.639><c> searching</c><00:14:30.959><c> for</c><00:14:31.199><c> which</c><00:14:31.440><c> was</c><00:14:31.680><c> an</c>

00:14:31.829 --> 00:14:31.839 align:start position:0%
that we're searching for which was an
 

00:14:31.839 --> 00:14:33.990 align:start position:0%
that we're searching for which was an
input<00:14:32.240><c> parameter</c><00:14:32.720><c> to</c><00:14:32.800><c> this</c><00:14:33.040><c> function</c><00:14:33.440><c> called</c>

00:14:33.990 --> 00:14:34.000 align:start position:0%
input parameter to this function called
 

00:14:34.000 --> 00:14:36.150 align:start position:0%
input parameter to this function called
timestamp<00:14:34.959><c> actually</c><00:14:35.279><c> instead</c><00:14:35.519><c> of</c><00:14:35.680><c> an</c><00:14:35.839><c> exact</c>

00:14:36.150 --> 00:14:36.160 align:start position:0%
timestamp actually instead of an exact
 

00:14:36.160 --> 00:14:38.230 align:start position:0%
timestamp actually instead of an exact
match<00:14:36.560><c> let's</c><00:14:36.800><c> first</c><00:14:37.120><c> check</c><00:14:37.440><c> if</c><00:14:37.600><c> it's</c><00:14:37.920><c> less</c>

00:14:38.230 --> 00:14:38.240 align:start position:0%
match let's first check if it's less
 

00:14:38.240 --> 00:14:41.189 align:start position:0%
match let's first check if it's less
than<00:14:38.959><c> the</c><00:14:39.120><c> timestamp</c><00:14:40.160><c> less</c><00:14:40.399><c> than</c><00:14:40.639><c> or</c><00:14:40.880><c> even</c>

00:14:41.189 --> 00:14:41.199 align:start position:0%
than the timestamp less than or even
 

00:14:41.199 --> 00:14:43.430 align:start position:0%
than the timestamp less than or even
equal<00:14:41.519><c> to</c><00:14:41.680><c> the</c><00:14:41.760><c> timestamp</c><00:14:42.560><c> because</c><00:14:43.199><c> in</c><00:14:43.279><c> that</c>

00:14:43.430 --> 00:14:43.440 align:start position:0%
equal to the timestamp because in that
 

00:14:43.440 --> 00:14:45.750 align:start position:0%
equal to the timestamp because in that
case<00:14:43.680><c> we</c><00:14:43.839><c> know</c><00:14:44.000><c> that</c><00:14:44.240><c> it's</c><00:14:44.399><c> a</c><00:14:44.560><c> valid</c><00:14:45.040><c> value</c>

00:14:45.750 --> 00:14:45.760 align:start position:0%
case we know that it's a valid value
 

00:14:45.760 --> 00:14:48.069 align:start position:0%
case we know that it's a valid value
because<00:14:46.079><c> remember</c><00:14:46.399><c> the</c><00:14:46.560><c> else</c><00:14:46.959><c> case</c><00:14:47.519><c> from</c><00:14:47.839><c> this</c>

00:14:48.069 --> 00:14:48.079 align:start position:0%
because remember the else case from this
 

00:14:48.079 --> 00:14:49.829 align:start position:0%
because remember the else case from this
is<00:14:48.240><c> completely</c><00:14:48.800><c> different</c><00:14:49.199><c> than</c><00:14:49.440><c> this</c><00:14:49.600><c> one</c>

00:14:49.829 --> 00:14:49.839 align:start position:0%
is completely different than this one
 

00:14:49.839 --> 00:14:51.990 align:start position:0%
is completely different than this one
right<00:14:50.160><c> if</c><00:14:50.320><c> it's</c><00:14:50.560><c> equal</c><00:14:50.880><c> to</c><00:14:50.959><c> the</c><00:14:51.120><c> timestamp</c><00:14:51.680><c> or</c>

00:14:51.990 --> 00:14:52.000 align:start position:0%
right if it's equal to the timestamp or
 

00:14:52.000 --> 00:14:53.670 align:start position:0%
right if it's equal to the timestamp or
less<00:14:52.320><c> than</c><00:14:52.480><c> the</c><00:14:52.639><c> timestamp</c><00:14:53.360><c> that's</c>

00:14:53.670 --> 00:14:53.680 align:start position:0%
less than the timestamp that's
 

00:14:53.680 --> 00:14:55.910 align:start position:0%
less than the timestamp that's
completely<00:14:54.320><c> fine</c><00:14:54.720><c> but</c><00:14:54.880><c> if</c><00:14:55.040><c> it's</c><00:14:55.360><c> greater</c><00:14:55.760><c> than</c>

00:14:55.910 --> 00:14:55.920 align:start position:0%
completely fine but if it's greater than
 

00:14:55.920 --> 00:14:58.550 align:start position:0%
completely fine but if it's greater than
the<00:14:56.079><c> timestamp</c><00:14:56.800><c> that</c><00:14:57.120><c> value</c><00:14:57.600><c> is</c><00:14:57.839><c> not</c><00:14:58.160><c> allowed</c>

00:14:58.550 --> 00:14:58.560 align:start position:0%
the timestamp that value is not allowed
 

00:14:58.560 --> 00:15:00.230 align:start position:0%
the timestamp that value is not allowed
so<00:14:58.720><c> we</c><00:14:58.880><c> are</c><00:14:58.959><c> going</c><00:14:59.120><c> to</c><00:14:59.199><c> be</c><00:14:59.360><c> handling</c><00:14:59.760><c> these</c><00:15:00.000><c> two</c>

00:15:00.230 --> 00:15:00.240 align:start position:0%
so we are going to be handling these two
 

00:15:00.240 --> 00:15:02.629 align:start position:0%
so we are going to be handling these two
cases<00:15:00.720><c> a</c><00:15:00.880><c> little</c><00:15:01.040><c> bit</c><00:15:01.199><c> differently</c><00:15:02.079><c> so</c><00:15:02.399><c> with</c>

00:15:02.629 --> 00:15:02.639 align:start position:0%
cases a little bit differently so with
 

00:15:02.639 --> 00:15:04.710 align:start position:0%
cases a little bit differently so with
most<00:15:02.880><c> binary</c><00:15:03.279><c> search</c><00:15:03.680><c> if</c><00:15:03.839><c> we</c>

00:15:04.710 --> 00:15:04.720 align:start position:0%
most binary search if we
 

00:15:04.720 --> 00:15:06.310 align:start position:0%
most binary search if we
if<00:15:04.800><c> we</c><00:15:04.959><c> know</c><00:15:05.120><c> that</c><00:15:05.199><c> this</c><00:15:05.360><c> is</c><00:15:05.519><c> less</c><00:15:05.760><c> than</c><00:15:06.160><c> the</c>

00:15:06.310 --> 00:15:06.320 align:start position:0%
if we know that this is less than the
 

00:15:06.320 --> 00:15:07.829 align:start position:0%
if we know that this is less than the
timestamp<00:15:06.800><c> what</c><00:15:06.959><c> would</c><00:15:07.120><c> we</c><00:15:07.199><c> want</c><00:15:07.360><c> to</c><00:15:07.440><c> do</c><00:15:07.680><c> we</c>

00:15:07.829 --> 00:15:07.839 align:start position:0%
timestamp what would we want to do we
 

00:15:07.839 --> 00:15:09.670 align:start position:0%
timestamp what would we want to do we
would<00:15:08.000><c> want</c><00:15:08.160><c> to</c><00:15:08.399><c> say</c><00:15:08.959><c> the</c><00:15:09.120><c> way</c><00:15:09.279><c> we</c><00:15:09.440><c> want</c><00:15:09.600><c> to</c>

00:15:09.670 --> 00:15:09.680 align:start position:0%
would want to say the way we want to
 

00:15:09.680 --> 00:15:12.790 align:start position:0%
would want to say the way we want to
update<00:15:09.920><c> the</c><00:15:10.079><c> pointer</c><00:15:10.480><c> is</c><00:15:10.639><c> to</c><00:15:10.880><c> set</c><00:15:11.279><c> left</c><00:15:12.000><c> equal</c>

00:15:12.790 --> 00:15:12.800 align:start position:0%
update the pointer is to set left equal
 

00:15:12.800 --> 00:15:16.629 align:start position:0%
update the pointer is to set left equal
to<00:15:13.440><c> mid</c><00:15:14.160><c> plus</c><00:15:14.959><c> 1</c><00:15:15.440><c> because</c><00:15:15.760><c> we</c><00:15:15.920><c> want</c><00:15:16.079><c> to</c><00:15:16.240><c> search</c>

00:15:16.629 --> 00:15:16.639 align:start position:0%
to mid plus 1 because we want to search
 

00:15:16.639 --> 00:15:19.509 align:start position:0%
to mid plus 1 because we want to search
to<00:15:16.800><c> the</c><00:15:17.120><c> right</c><00:15:17.360><c> portion</c><00:15:17.920><c> if</c><00:15:18.079><c> it</c><00:15:18.240><c> was</c><00:15:18.560><c> less</c><00:15:18.880><c> than</c>

00:15:19.509 --> 00:15:19.519 align:start position:0%
to the right portion if it was less than
 

00:15:19.519 --> 00:15:23.430 align:start position:0%
to the right portion if it was less than
the<00:15:19.920><c> result</c><00:15:20.560><c> but</c><00:15:20.800><c> before</c><00:15:21.199><c> we</c><00:15:21.920><c> do</c><00:15:22.160><c> that</c><00:15:22.720><c> even</c><00:15:23.199><c> we</c>

00:15:23.430 --> 00:15:23.440 align:start position:0%
the result but before we do that even we
 

00:15:23.440 --> 00:15:26.230 align:start position:0%
the result but before we do that even we
want<00:15:23.680><c> to</c><00:15:23.920><c> say</c><00:15:24.480><c> the</c><00:15:24.639><c> result</c><00:15:25.199><c> so</c><00:15:25.600><c> far</c><00:15:25.920><c> at</c><00:15:26.079><c> this</c>

00:15:26.230 --> 00:15:26.240 align:start position:0%
want to say the result so far at this
 

00:15:26.240 --> 00:15:28.550 align:start position:0%
want to say the result so far at this
point<00:15:26.480><c> right</c><00:15:26.639><c> since</c><00:15:26.959><c> this</c><00:15:27.199><c> is</c><00:15:27.360><c> a</c><00:15:27.600><c> valid</c><00:15:28.079><c> value</c>

00:15:28.550 --> 00:15:28.560 align:start position:0%
point right since this is a valid value
 

00:15:28.560 --> 00:15:30.870 align:start position:0%
point right since this is a valid value
and<00:15:28.959><c> this</c><00:15:29.120><c> is</c><00:15:29.279><c> the</c><00:15:29.440><c> closest</c><00:15:30.000><c> value</c><00:15:30.399><c> we</c><00:15:30.639><c> have</c>

00:15:30.870 --> 00:15:30.880 align:start position:0%
and this is the closest value we have
 

00:15:30.880 --> 00:15:32.870 align:start position:0%
and this is the closest value we have
seen<00:15:31.199><c> so</c><00:15:31.519><c> far</c><00:15:32.000><c> we</c><00:15:32.160><c> are</c><00:15:32.320><c> going</c><00:15:32.399><c> to</c><00:15:32.480><c> set</c><00:15:32.720><c> the</c>

00:15:32.870 --> 00:15:32.880 align:start position:0%
seen so far we are going to set the
 

00:15:32.880 --> 00:15:36.790 align:start position:0%
seen so far we are going to set the
result<00:15:33.519><c> equal</c><00:15:34.240><c> to</c><00:15:34.800><c> values</c><00:15:35.839><c> uh</c><00:15:36.320><c> you</c><00:15:36.480><c> know</c>

00:15:36.790 --> 00:15:36.800 align:start position:0%
result equal to values uh you know
 

00:15:36.800 --> 00:15:39.430 align:start position:0%
result equal to values uh you know
basically<00:15:37.120><c> the</c><00:15:37.279><c> value</c><00:15:37.600><c> at</c><00:15:37.759><c> index</c><00:15:38.240><c> m</c>

00:15:39.430 --> 00:15:39.440 align:start position:0%
basically the value at index m
 

00:15:39.440 --> 00:15:40.710 align:start position:0%
basically the value at index m
and<00:15:39.600><c> then</c><00:15:40.000><c> you</c><00:15:40.079><c> know</c><00:15:40.160><c> this</c><00:15:40.399><c> is</c><00:15:40.480><c> going</c><00:15:40.560><c> to</c><00:15:40.639><c> be</c>

00:15:40.710 --> 00:15:40.720 align:start position:0%
and then you know this is going to be
 

00:15:40.720 --> 00:15:42.310 align:start position:0%
and then you know this is going to be
index<00:15:41.040><c> 0.</c><00:15:41.519><c> right</c><00:15:41.680><c> because</c><00:15:41.920><c> this</c><00:15:42.079><c> is</c><00:15:42.160><c> the</c>

00:15:42.310 --> 00:15:42.320 align:start position:0%
index 0. right because this is the
 

00:15:42.320 --> 00:15:44.470 align:start position:0%
index 0. right because this is the
closest<00:15:42.800><c> we</c><00:15:43.040><c> have</c><00:15:43.199><c> seen</c><00:15:43.600><c> so</c><00:15:43.839><c> far</c><00:15:44.079><c> that's</c><00:15:44.320><c> how</c>

00:15:44.470 --> 00:15:44.480 align:start position:0%
closest we have seen so far that's how
 

00:15:44.480 --> 00:15:46.069 align:start position:0%
closest we have seen so far that's how
this<00:15:44.639><c> binary</c><00:15:45.040><c> search</c><00:15:45.279><c> is</c><00:15:45.360><c> going</c><00:15:45.519><c> to</c><00:15:45.600><c> work</c><00:15:45.920><c> this</c>

00:15:46.069 --> 00:15:46.079 align:start position:0%
this binary search is going to work this
 

00:15:46.079 --> 00:15:48.150 align:start position:0%
this binary search is going to work this
is<00:15:46.240><c> the</c><00:15:46.320><c> closest</c><00:15:46.720><c> we've</c><00:15:46.880><c> seen</c><00:15:47.120><c> so</c><00:15:47.360><c> far</c><00:15:47.839><c> now</c>

00:15:48.150 --> 00:15:48.160 align:start position:0%
is the closest we've seen so far now
 

00:15:48.160 --> 00:15:49.749 align:start position:0%
is the closest we've seen so far now
let's<00:15:48.320><c> go</c><00:15:48.480><c> to</c><00:15:48.639><c> the</c><00:15:48.720><c> next</c><00:15:49.040><c> iteration</c><00:15:49.519><c> of</c><00:15:49.600><c> the</c>

00:15:49.749 --> 00:15:49.759 align:start position:0%
let's go to the next iteration of the
 

00:15:49.759 --> 00:15:52.550 align:start position:0%
let's go to the next iteration of the
loop<00:15:50.079><c> and</c><00:15:50.240><c> then</c><00:15:50.399><c> see</c><00:15:50.720><c> if</c><00:15:50.880><c> we</c><00:15:51.040><c> got</c><00:15:51.440><c> any</c><00:15:51.759><c> closer</c>

00:15:52.550 --> 00:15:52.560 align:start position:0%
loop and then see if we got any closer
 

00:15:52.560 --> 00:15:54.710 align:start position:0%
loop and then see if we got any closer
to<00:15:52.800><c> the</c><00:15:52.880><c> result</c><00:15:53.279><c> but</c><00:15:53.440><c> the</c><00:15:53.680><c> else</c><00:15:54.079><c> case</c><00:15:54.399><c> is</c><00:15:54.560><c> going</c>

00:15:54.710 --> 00:15:54.720 align:start position:0%
to the result but the else case is going
 

00:15:54.720 --> 00:15:55.590 align:start position:0%
to the result but the else case is going
to<00:15:54.880><c> be</c>

00:15:55.590 --> 00:15:55.600 align:start position:0%
to be
 

00:15:55.600 --> 00:15:57.430 align:start position:0%
to be
whoops<00:15:56.079><c> the</c><00:15:56.240><c> else</c><00:15:56.560><c> case</c><00:15:56.880><c> is</c><00:15:56.959><c> going</c><00:15:57.040><c> to</c><00:15:57.120><c> be</c><00:15:57.279><c> the</c>

00:15:57.430 --> 00:15:57.440 align:start position:0%
whoops the else case is going to be the
 

00:15:57.440 --> 00:15:59.590 align:start position:0%
whoops the else case is going to be the
opposite<00:15:58.160><c> here</c><00:15:58.639><c> all</c><00:15:58.800><c> we're</c><00:15:58.959><c> going</c><00:15:59.120><c> to</c><00:15:59.199><c> do</c><00:15:59.360><c> is</c>

00:15:59.590 --> 00:15:59.600 align:start position:0%
opposite here all we're going to do is
 

00:15:59.600 --> 00:16:02.150 align:start position:0%
opposite here all we're going to do is
update<00:15:59.839><c> the</c><00:16:00.000><c> pointer</c><00:16:00.480><c> if</c><00:16:00.639><c> the</c><00:16:00.800><c> value</c><00:16:01.680><c> was</c><00:16:01.920><c> too</c>

00:16:02.150 --> 00:16:02.160 align:start position:0%
update the pointer if the value was too
 

00:16:02.160 --> 00:16:03.670 align:start position:0%
update the pointer if the value was too
big<00:16:02.480><c> it</c><00:16:02.560><c> was</c><00:16:02.720><c> greater</c><00:16:02.959><c> than</c><00:16:03.199><c> the</c><00:16:03.279><c> timestamp</c>

00:16:03.670 --> 00:16:03.680 align:start position:0%
big it was greater than the timestamp
 

00:16:03.680 --> 00:16:05.269 align:start position:0%
big it was greater than the timestamp
which<00:16:03.839><c> is</c><00:16:03.920><c> what</c><00:16:04.079><c> the</c><00:16:04.160><c> else</c><00:16:04.399><c> case</c><00:16:04.720><c> is</c><00:16:04.959><c> we</c><00:16:05.120><c> would</c>

00:16:05.269 --> 00:16:05.279 align:start position:0%
which is what the else case is we would
 

00:16:05.279 --> 00:16:06.629 align:start position:0%
which is what the else case is we would
want<00:16:05.440><c> to</c><00:16:05.519><c> update</c><00:16:05.759><c> the</c><00:16:05.839><c> right</c><00:16:06.079><c> pointer</c><00:16:06.399><c> set</c><00:16:06.560><c> it</c>

00:16:06.629 --> 00:16:06.639 align:start position:0%
want to update the right pointer set it
 

00:16:06.639 --> 00:16:09.990 align:start position:0%
want to update the right pointer set it
to<00:16:06.800><c> mid</c><00:16:07.360><c> minus</c><00:16:08.079><c> one</c><00:16:08.639><c> and</c><00:16:08.880><c> then</c><00:16:09.440><c> you</c><00:16:09.519><c> know</c>

00:16:09.990 --> 00:16:10.000 align:start position:0%
to mid minus one and then you know
 

00:16:10.000 --> 00:16:11.110 align:start position:0%
to mid minus one and then you know
that's<00:16:10.240><c> just</c><00:16:10.399><c> how</c><00:16:10.560><c> we're</c><00:16:10.720><c> going</c><00:16:10.800><c> to</c><00:16:10.959><c> be</c>

00:16:11.110 --> 00:16:11.120 align:start position:0%
that's just how we're going to be
 

00:16:11.120 --> 00:16:13.269 align:start position:0%
that's just how we're going to be
searching<00:16:11.759><c> but</c><00:16:11.920><c> we're</c><00:16:12.079><c> not</c><00:16:12.320><c> going</c><00:16:12.399><c> to</c><00:16:12.560><c> assign</c>

00:16:13.269 --> 00:16:13.279 align:start position:0%
searching but we're not going to assign
 

00:16:13.279 --> 00:16:15.749 align:start position:0%
searching but we're not going to assign
the<00:16:13.440><c> result</c><00:16:13.839><c> here</c><00:16:14.399><c> because</c><00:16:15.120><c> this</c><00:16:15.360><c> is</c><00:16:15.519><c> an</c>

00:16:15.749 --> 00:16:15.759 align:start position:0%
the result here because this is an
 

00:16:15.759 --> 00:16:18.310 align:start position:0%
the result here because this is an
invalid<00:16:16.399><c> value</c><00:16:16.880><c> we</c><00:16:17.120><c> cannot</c><00:16:17.519><c> assign</c><00:16:17.920><c> it</c><00:16:18.000><c> to</c><00:16:18.240><c> the</c>

00:16:18.310 --> 00:16:18.320 align:start position:0%
invalid value we cannot assign it to the
 

00:16:18.320 --> 00:16:20.310 align:start position:0%
invalid value we cannot assign it to the
result<00:16:19.040><c> technically</c><00:16:19.519><c> this</c><00:16:19.839><c> isn't</c><00:16:20.160><c> as</c>

00:16:20.310 --> 00:16:20.320 align:start position:0%
result technically this isn't as
 

00:16:20.320 --> 00:16:21.910 align:start position:0%
result technically this isn't as
optimized<00:16:20.880><c> as</c><00:16:21.040><c> it</c><00:16:21.120><c> could</c><00:16:21.279><c> be</c><00:16:21.519><c> because</c><00:16:21.839><c> you</c>

00:16:21.910 --> 00:16:21.920 align:start position:0%
optimized as it could be because you
 

00:16:21.920 --> 00:16:24.389 align:start position:0%
optimized as it could be because you
know<00:16:22.320><c> in</c><00:16:22.480><c> this</c><00:16:22.880><c> uh</c><00:16:23.199><c> equals</c><00:16:23.759><c> in</c><00:16:23.839><c> the</c><00:16:23.920><c> first</c><00:16:24.160><c> case</c>

00:16:24.389 --> 00:16:24.399 align:start position:0%
know in this uh equals in the first case
 

00:16:24.399 --> 00:16:26.710 align:start position:0%
know in this uh equals in the first case
if<00:16:24.480><c> we</c><00:16:24.639><c> even</c><00:16:24.959><c> find</c><00:16:25.199><c> the</c><00:16:25.360><c> exact</c><00:16:25.920><c> match</c><00:16:26.320><c> to</c><00:16:26.560><c> the</c>

00:16:26.710 --> 00:16:26.720 align:start position:0%
if we even find the exact match to the
 

00:16:26.720 --> 00:16:28.470 align:start position:0%
if we even find the exact match to the
time<00:16:26.959><c> stamp</c><00:16:27.360><c> we're</c><00:16:27.600><c> not</c><00:16:27.759><c> even</c><00:16:28.000><c> returning</c>

00:16:28.470 --> 00:16:28.480 align:start position:0%
time stamp we're not even returning
 

00:16:28.480 --> 00:16:30.069 align:start position:0%
time stamp we're not even returning
right<00:16:28.639><c> we're</c><00:16:28.800><c> still</c><00:16:29.040><c> continuing</c><00:16:29.519><c> the</c><00:16:29.680><c> binary</c>

00:16:30.069 --> 00:16:30.079 align:start position:0%
right we're still continuing the binary
 

00:16:30.079 --> 00:16:32.389 align:start position:0%
right we're still continuing the binary
search<00:16:30.480><c> which</c><00:16:30.720><c> is</c><00:16:30.800><c> kind</c><00:16:31.040><c> of</c><00:16:31.279><c> sub</c><00:16:31.680><c> optimal</c><00:16:32.240><c> but</c>

00:16:32.389 --> 00:16:32.399 align:start position:0%
search which is kind of sub optimal but
 

00:16:32.399 --> 00:16:33.990 align:start position:0%
search which is kind of sub optimal but
it<00:16:32.560><c> doesn't</c><00:16:32.880><c> change</c><00:16:33.120><c> the</c><00:16:33.360><c> overall</c><00:16:33.759><c> time</c>

00:16:33.990 --> 00:16:34.000 align:start position:0%
it doesn't change the overall time
 

00:16:34.000 --> 00:16:36.150 align:start position:0%
it doesn't change the overall time
complexity<00:16:34.560><c> it's</c><00:16:34.720><c> still</c><00:16:34.959><c> login</c><00:16:35.680><c> and</c><00:16:35.920><c> in</c><00:16:36.000><c> this</c>

00:16:36.150 --> 00:16:36.160 align:start position:0%
complexity it's still login and in this
 

00:16:36.160 --> 00:16:38.150 align:start position:0%
complexity it's still login and in this
case<00:16:36.399><c> i</c><00:16:36.480><c> kind</c><00:16:36.639><c> of</c><00:16:36.720><c> prefer</c><00:16:37.120><c> the</c><00:16:37.279><c> concise</c><00:16:37.839><c> code</c>

00:16:38.150 --> 00:16:38.160 align:start position:0%
case i kind of prefer the concise code
 

00:16:38.160 --> 00:16:39.829 align:start position:0%
case i kind of prefer the concise code
so<00:16:38.320><c> i'm</c><00:16:38.399><c> going</c><00:16:38.480><c> to</c><00:16:38.639><c> leave</c><00:16:38.880><c> it</c><00:16:39.040><c> as</c><00:16:39.199><c> it</c><00:16:39.440><c> is</c>

00:16:39.829 --> 00:16:39.839 align:start position:0%
so i'm going to leave it as it is
 

00:16:39.839 --> 00:16:41.590 align:start position:0%
so i'm going to leave it as it is
because<00:16:40.399><c> we</c><00:16:40.560><c> are</c><00:16:40.720><c> actually</c><00:16:41.040><c> done</c><00:16:41.279><c> with</c><00:16:41.440><c> the</c>

00:16:41.590 --> 00:16:41.600 align:start position:0%
because we are actually done with the
 

00:16:41.600 --> 00:16:43.749 align:start position:0%
because we are actually done with the
function<00:16:42.320><c> after</c><00:16:43.040><c> you</c><00:16:43.199><c> know</c><00:16:43.279><c> this</c><00:16:43.440><c> binary</c>

00:16:43.749 --> 00:16:43.759 align:start position:0%
function after you know this binary
 

00:16:43.759 --> 00:16:45.269 align:start position:0%
function after you know this binary
search<00:16:44.000><c> is</c><00:16:44.160><c> over</c><00:16:44.720><c> we're</c><00:16:44.880><c> going</c><00:16:44.959><c> to</c><00:16:45.040><c> go</c><00:16:45.120><c> ahead</c>

00:16:45.269 --> 00:16:45.279 align:start position:0%
search is over we're going to go ahead
 

00:16:45.279 --> 00:16:46.870 align:start position:0%
search is over we're going to go ahead
and<00:16:45.440><c> return</c><00:16:45.759><c> the</c><00:16:45.839><c> result</c><00:16:46.240><c> whether</c><00:16:46.480><c> it's</c><00:16:46.639><c> an</c>

00:16:46.870 --> 00:16:46.880 align:start position:0%
and return the result whether it's an
 

00:16:46.880 --> 00:16:48.470 align:start position:0%
and return the result whether it's an
empty<00:16:47.120><c> string</c><00:16:47.519><c> or</c><00:16:47.680><c> whether</c><00:16:48.000><c> we</c><00:16:48.160><c> actually</c>

00:16:48.470 --> 00:16:48.480 align:start position:0%
empty string or whether we actually
 

00:16:48.480 --> 00:16:50.470 align:start position:0%
empty string or whether we actually
found<00:16:48.800><c> the</c><00:16:48.959><c> correct</c><00:16:49.360><c> value</c>

00:16:50.470 --> 00:16:50.480 align:start position:0%
found the correct value
 

00:16:50.480 --> 00:16:52.069 align:start position:0%
found the correct value
you<00:16:50.639><c> know</c><00:16:50.720><c> the</c><00:16:50.800><c> closest</c><00:16:51.360><c> value</c><00:16:51.759><c> to</c><00:16:51.920><c> that</c>

00:16:52.069 --> 00:16:52.079 align:start position:0%
you know the closest value to that
 

00:16:52.079 --> 00:16:54.710 align:start position:0%
you know the closest value to that
timestamp<00:16:52.959><c> that's</c><00:16:53.360><c> the</c><00:16:53.519><c> entire</c><00:16:53.920><c> code</c><00:16:54.399><c> let's</c>

00:16:54.710 --> 00:16:54.720 align:start position:0%
timestamp that's the entire code let's
 

00:16:54.720 --> 00:16:56.629 align:start position:0%
timestamp that's the entire code let's
run<00:16:54.959><c> it</c><00:16:55.040><c> to</c><00:16:55.120><c> make</c><00:16:55.279><c> sure</c><00:16:55.440><c> that</c><00:16:55.600><c> it</c><00:16:55.680><c> works</c>

00:16:56.629 --> 00:16:56.639 align:start position:0%
run it to make sure that it works
 

00:16:56.639 --> 00:16:58.870 align:start position:0%
run it to make sure that it works
and<00:16:56.880><c> as</c><00:16:57.040><c> you</c><00:16:57.120><c> can</c><00:16:57.279><c> see</c><00:16:57.920><c> on</c><00:16:58.079><c> the</c><00:16:58.240><c> left</c><00:16:58.560><c> yes</c><00:16:58.800><c> it</c>

00:16:58.870 --> 00:16:58.880 align:start position:0%
and as you can see on the left yes it
 

00:16:58.880 --> 00:17:00.790 align:start position:0%
and as you can see on the left yes it
does<00:16:59.120><c> work</c><00:16:59.360><c> and</c><00:16:59.519><c> it's</c><00:16:59.680><c> pretty</c><00:17:00.000><c> efficient</c>

00:17:00.790 --> 00:17:00.800 align:start position:0%
does work and it's pretty efficient
 

00:17:00.800 --> 00:17:01.910 align:start position:0%
does work and it's pretty efficient
probably<00:17:01.040><c> could</c><00:17:01.199><c> be</c><00:17:01.360><c> a</c><00:17:01.440><c> little</c><00:17:01.600><c> bit</c><00:17:01.759><c> more</c>

00:17:01.910 --> 00:17:01.920 align:start position:0%
probably could be a little bit more
 

00:17:01.920 --> 00:17:03.430 align:start position:0%
probably could be a little bit more
efficient<00:17:02.320><c> if</c><00:17:02.399><c> we</c><00:17:02.560><c> actually</c><00:17:02.800><c> returned</c><00:17:03.199><c> when</c>

00:17:03.430 --> 00:17:03.440 align:start position:0%
efficient if we actually returned when
 

00:17:03.440 --> 00:17:05.909 align:start position:0%
efficient if we actually returned when
we<00:17:03.600><c> find</c><00:17:04.079><c> the</c><00:17:04.240><c> value</c><00:17:04.640><c> but</c><00:17:04.799><c> that's</c><00:17:05.039><c> okay</c><00:17:05.600><c> i</c><00:17:05.679><c> hope</c>

00:17:05.909 --> 00:17:05.919 align:start position:0%
we find the value but that's okay i hope
 

00:17:05.919 --> 00:17:07.510 align:start position:0%
we find the value but that's okay i hope
that<00:17:06.000><c> this</c><00:17:06.160><c> was</c><00:17:06.400><c> helpful</c><00:17:06.720><c> if</c><00:17:06.880><c> it</c><00:17:06.959><c> was</c><00:17:07.199><c> please</c>

00:17:07.510 --> 00:17:07.520 align:start position:0%
that this was helpful if it was please
 

00:17:07.520 --> 00:17:08.949 align:start position:0%
that this was helpful if it was please
like<00:17:07.679><c> and</c><00:17:07.760><c> subscribe</c><00:17:08.240><c> it</c><00:17:08.400><c> really</c><00:17:08.640><c> supports</c>

00:17:08.949 --> 00:17:08.959 align:start position:0%
like and subscribe it really supports
 

00:17:08.959 --> 00:17:10.390 align:start position:0%
like and subscribe it really supports
the<00:17:09.039><c> channel</c><00:17:09.360><c> a</c><00:17:09.439><c> lot</c><00:17:09.679><c> consider</c><00:17:10.079><c> checking</c><00:17:10.319><c> out</c>

00:17:10.390 --> 00:17:10.400 align:start position:0%
the channel a lot consider checking out
 

00:17:10.400 --> 00:17:11.909 align:start position:0%
the channel a lot consider checking out
my<00:17:10.559><c> patreon</c><00:17:10.959><c> where</c><00:17:11.120><c> you</c><00:17:11.199><c> can</c><00:17:11.360><c> further</c><00:17:11.600><c> support</c>

00:17:11.909 --> 00:17:11.919 align:start position:0%
my patreon where you can further support
 

00:17:11.919 --> 00:17:13.429 align:start position:0%
my patreon where you can further support
the<00:17:12.079><c> channel</c><00:17:12.400><c> and</c><00:17:12.559><c> hopefully</c><00:17:13.039><c> i'll</c><00:17:13.199><c> see</c><00:17:13.360><c> you</c>

00:17:13.429 --> 00:17:13.439 align:start position:0%
the channel and hopefully i'll see you
 

00:17:13.439 --> 00:17:17.039 align:start position:0%
the channel and hopefully i'll see you
pretty<00:17:13.679><c> soon</c><00:17:14.079><c> thanks</c><00:17:14.319><c> for</c><00:17:14.480><c> watching</c>

