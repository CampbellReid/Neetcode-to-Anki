WEBVTT
Kind: captions
Language: en

00:00:00.160 --> 00:00:01.670 align:start position:0%
 
everyone<00:00:00.560><c> welcome</c><00:00:00.960><c> back</c><00:00:01.199><c> and</c><00:00:01.280><c> let's</c><00:00:01.520><c> write</c>

00:00:01.670 --> 00:00:01.680 align:start position:0%
everyone welcome back and let's write
 

00:00:01.680 --> 00:00:03.429 align:start position:0%
everyone welcome back and let's write
some<00:00:01.839><c> more</c><00:00:02.080><c> neat</c><00:00:02.320><c> code</c><00:00:02.560><c> today</c><00:00:02.800><c> so</c><00:00:02.960><c> today</c><00:00:03.280><c> let's</c>

00:00:03.429 --> 00:00:03.439 align:start position:0%
some more neat code today so today let's
 

00:00:03.439 --> 00:00:06.389 align:start position:0%
some more neat code today so today let's
solve<00:00:03.760><c> the</c><00:00:03.919><c> problem</c><00:00:04.400><c> reconstruct</c><00:00:05.359><c> itinerary</c>

00:00:06.389 --> 00:00:06.399 align:start position:0%
solve the problem reconstruct itinerary
 

00:00:06.399 --> 00:00:08.470 align:start position:0%
solve the problem reconstruct itinerary
this<00:00:06.640><c> is</c><00:00:06.799><c> a</c><00:00:06.960><c> pretty</c><00:00:07.359><c> difficult</c><00:00:07.919><c> problem</c><00:00:08.320><c> but</c>

00:00:08.470 --> 00:00:08.480 align:start position:0%
this is a pretty difficult problem but
 

00:00:08.480 --> 00:00:10.070 align:start position:0%
this is a pretty difficult problem but
it's<00:00:08.720><c> doable</c><00:00:09.200><c> if</c><00:00:09.360><c> you</c><00:00:09.440><c> have</c><00:00:09.679><c> a</c><00:00:09.760><c> good</c>

00:00:10.070 --> 00:00:10.080 align:start position:0%
it's doable if you have a good
 

00:00:10.080 --> 00:00:12.549 align:start position:0%
it's doable if you have a good
understanding<00:00:10.880><c> of</c><00:00:11.120><c> graphs</c><00:00:11.840><c> and</c><00:00:12.160><c> graph</c>

00:00:12.549 --> 00:00:12.559 align:start position:0%
understanding of graphs and graph
 

00:00:12.559 --> 00:00:14.709 align:start position:0%
understanding of graphs and graph
traversals<00:00:13.280><c> especially</c><00:00:13.759><c> dfs</c><00:00:14.320><c> which</c><00:00:14.559><c> we're</c>

00:00:14.709 --> 00:00:14.719 align:start position:0%
traversals especially dfs which we're
 

00:00:14.719 --> 00:00:16.390 align:start position:0%
traversals especially dfs which we're
going<00:00:14.799><c> to</c><00:00:14.880><c> be</c><00:00:15.040><c> using</c><00:00:15.360><c> in</c><00:00:15.440><c> this</c><00:00:15.679><c> problem</c><00:00:16.240><c> but</c>

00:00:16.390 --> 00:00:16.400 align:start position:0%
going to be using in this problem but
 

00:00:16.400 --> 00:00:19.189 align:start position:0%
going to be using in this problem but
we're<00:00:16.640><c> given</c><00:00:17.199><c> a</c><00:00:17.520><c> list</c><00:00:17.920><c> of</c><00:00:18.160><c> airline</c><00:00:18.720><c> tickets</c>

00:00:19.189 --> 00:00:19.199 align:start position:0%
we're given a list of airline tickets
 

00:00:19.199 --> 00:00:21.590 align:start position:0%
we're given a list of airline tickets
and<00:00:19.359><c> these</c><00:00:19.600><c> tickets</c><00:00:20.160><c> are</c><00:00:20.320><c> basically</c><00:00:20.800><c> a</c><00:00:21.039><c> graph</c>

00:00:21.590 --> 00:00:21.600 align:start position:0%
and these tickets are basically a graph
 

00:00:21.600 --> 00:00:24.550 align:start position:0%
and these tickets are basically a graph
edge<00:00:22.080><c> we</c><00:00:22.240><c> have</c><00:00:22.480><c> a</c><00:00:22.800><c> from</c><00:00:23.600><c> and</c><00:00:23.840><c> a</c><00:00:24.080><c> two</c><00:00:24.400><c> so</c>

00:00:24.550 --> 00:00:24.560 align:start position:0%
edge we have a from and a two so
 

00:00:24.560 --> 00:00:27.349 align:start position:0%
edge we have a from and a two so
basically<00:00:24.960><c> a</c><00:00:25.199><c> source</c><00:00:25.599><c> and</c><00:00:25.760><c> a</c><00:00:25.920><c> destination</c><00:00:27.119><c> and</c>

00:00:27.349 --> 00:00:27.359 align:start position:0%
basically a source and a destination and
 

00:00:27.359 --> 00:00:29.349 align:start position:0%
basically a source and a destination and
it<00:00:27.519><c> connects</c><00:00:28.000><c> two</c><00:00:28.240><c> nodes</c><00:00:28.640><c> together</c><00:00:29.039><c> in</c><00:00:29.119><c> this</c>

00:00:29.349 --> 00:00:29.359 align:start position:0%
it connects two nodes together in this
 

00:00:29.359 --> 00:00:31.029 align:start position:0%
it connects two nodes together in this
case<00:00:29.599><c> the</c><00:00:29.840><c> nodes</c><00:00:30.240><c> are</c><00:00:30.320><c> going</c><00:00:30.400><c> to</c><00:00:30.560><c> represent</c>

00:00:31.029 --> 00:00:31.039 align:start position:0%
case the nodes are going to represent
 

00:00:31.039 --> 00:00:33.590 align:start position:0%
case the nodes are going to represent
airports<00:00:31.760><c> or</c><00:00:32.079><c> cities</c><00:00:32.719><c> and</c><00:00:32.880><c> basically</c><00:00:33.360><c> using</c>

00:00:33.590 --> 00:00:33.600 align:start position:0%
airports or cities and basically using
 

00:00:33.600 --> 00:00:35.190 align:start position:0%
airports or cities and basically using
this<00:00:33.920><c> list</c><00:00:34.239><c> of</c><00:00:34.399><c> tickets</c><00:00:34.800><c> we</c><00:00:34.960><c> want</c><00:00:35.120><c> to</c>

00:00:35.190 --> 00:00:35.200 align:start position:0%
this list of tickets we want to
 

00:00:35.200 --> 00:00:37.430 align:start position:0%
this list of tickets we want to
reconstruct<00:00:36.000><c> the</c><00:00:36.239><c> itinerary</c><00:00:36.960><c> and</c><00:00:37.120><c> basically</c>

00:00:37.430 --> 00:00:37.440 align:start position:0%
reconstruct the itinerary and basically
 

00:00:37.440 --> 00:00:38.709 align:start position:0%
reconstruct the itinerary and basically
what<00:00:37.600><c> that</c><00:00:37.760><c> means</c><00:00:37.920><c> is</c><00:00:38.079><c> we</c><00:00:38.239><c> want</c><00:00:38.399><c> to</c>

00:00:38.709 --> 00:00:38.719 align:start position:0%
what that means is we want to
 

00:00:38.719 --> 00:00:41.110 align:start position:0%
what that means is we want to
reconstruct<00:00:39.440><c> the</c><00:00:39.680><c> flight</c><00:00:40.160><c> history</c><00:00:40.800><c> of</c><00:00:40.960><c> a</c>

00:00:41.110 --> 00:00:41.120 align:start position:0%
reconstruct the flight history of a
 

00:00:41.120 --> 00:00:44.389 align:start position:0%
reconstruct the flight history of a
person<00:00:41.520><c> who</c><00:00:41.760><c> had</c><00:00:42.079><c> this</c><00:00:42.480><c> list</c><00:00:42.879><c> of</c><00:00:43.200><c> tickets</c><00:00:44.000><c> all</c>

00:00:44.389 --> 00:00:44.399 align:start position:0%
person who had this list of tickets all
 

00:00:44.399 --> 00:00:46.150 align:start position:0%
person who had this list of tickets all
of<00:00:44.559><c> the</c><00:00:44.719><c> tickets</c><00:00:45.039><c> belong</c><00:00:45.440><c> to</c><00:00:45.600><c> someone</c><00:00:46.000><c> who</c>

00:00:46.150 --> 00:00:46.160 align:start position:0%
of the tickets belong to someone who
 

00:00:46.160 --> 00:00:49.029 align:start position:0%
of the tickets belong to someone who
departed<00:00:46.800><c> from</c><00:00:47.120><c> jfk</c><00:00:47.840><c> so</c><00:00:48.079><c> no</c><00:00:48.239><c> matter</c><00:00:48.559><c> what</c><00:00:48.879><c> this</c>

00:00:49.029 --> 00:00:49.039 align:start position:0%
departed from jfk so no matter what this
 

00:00:49.039 --> 00:00:51.029 align:start position:0%
departed from jfk so no matter what this
is<00:00:49.120><c> going</c><00:00:49.200><c> to</c><00:00:49.360><c> be</c><00:00:49.520><c> our</c><00:00:49.760><c> starting</c><00:00:50.320><c> edge</c><00:00:50.719><c> in</c><00:00:50.879><c> our</c>

00:00:51.029 --> 00:00:51.039 align:start position:0%
is going to be our starting edge in our
 

00:00:51.039 --> 00:00:52.630 align:start position:0%
is going to be our starting edge in our
graph<00:00:51.360><c> so</c><00:00:51.600><c> basically</c><00:00:51.920><c> if</c><00:00:52.079><c> you</c><00:00:52.160><c> take</c><00:00:52.320><c> a</c><00:00:52.399><c> look</c><00:00:52.559><c> at</c>

00:00:52.630 --> 00:00:52.640 align:start position:0%
graph so basically if you take a look at
 

00:00:52.640 --> 00:00:53.910 align:start position:0%
graph so basically if you take a look at
this<00:00:52.800><c> picture</c><00:00:53.120><c> we're</c><00:00:53.360><c> always</c><00:00:53.680><c> going</c><00:00:53.760><c> to</c><00:00:53.840><c> be</c>

00:00:53.910 --> 00:00:53.920 align:start position:0%
this picture we're always going to be
 

00:00:53.920 --> 00:00:55.510 align:start position:0%
this picture we're always going to be
starting<00:00:54.239><c> at</c><00:00:54.320><c> jfk</c><00:00:54.879><c> so</c><00:00:55.039><c> we're</c><00:00:55.120><c> pretty</c><00:00:55.280><c> much</c>

00:00:55.510 --> 00:00:55.520 align:start position:0%
starting at jfk so we're pretty much
 

00:00:55.520 --> 00:00:58.069 align:start position:0%
starting at jfk so we're pretty much
guaranteed<00:00:56.000><c> that</c><00:00:56.160><c> jfk</c><00:00:56.800><c> is</c><00:00:56.879><c> going</c><00:00:57.120><c> to</c><00:00:57.280><c> be</c><00:00:57.760><c> a</c>

00:00:58.069 --> 00:00:58.079 align:start position:0%
guaranteed that jfk is going to be a
 

00:00:58.079 --> 00:01:00.470 align:start position:0%
guaranteed that jfk is going to be a
node<00:00:58.480><c> in</c><00:00:58.640><c> our</c><00:00:58.879><c> graph</c><00:00:59.440><c> they</c><00:00:59.680><c> also</c><00:01:00.000><c> tell</c><00:01:00.239><c> us</c><00:01:00.320><c> that</c>

00:01:00.470 --> 00:01:00.480 align:start position:0%
node in our graph they also tell us that
 

00:01:00.480 --> 00:01:02.630 align:start position:0%
node in our graph they also tell us that
we<00:01:00.640><c> can</c><00:01:00.800><c> assume</c><00:01:01.120><c> all</c><00:01:01.359><c> tickets</c><00:01:01.840><c> form</c><00:01:02.160><c> at</c><00:01:02.239><c> least</c>

00:01:02.630 --> 00:01:02.640 align:start position:0%
we can assume all tickets form at least
 

00:01:02.640 --> 00:01:04.710 align:start position:0%
we can assume all tickets form at least
one<00:01:02.960><c> valid</c><00:01:03.359><c> itinerary</c><00:01:03.920><c> so</c><00:01:04.159><c> basically</c><00:01:04.559><c> we're</c>

00:01:04.710 --> 00:01:04.720 align:start position:0%
one valid itinerary so basically we're
 

00:01:04.720 --> 00:01:06.950 align:start position:0%
one valid itinerary so basically we're
guaranteed<00:01:05.199><c> that</c><00:01:05.280><c> there</c><00:01:05.519><c> is</c><00:01:05.680><c> a</c><00:01:05.840><c> solution</c><00:01:06.640><c> and</c>

00:01:06.950 --> 00:01:06.960 align:start position:0%
guaranteed that there is a solution and
 

00:01:06.960 --> 00:01:09.350 align:start position:0%
guaranteed that there is a solution and
in<00:01:07.200><c> the</c><00:01:07.360><c> solution</c><00:01:07.760><c> that</c><00:01:07.920><c> we</c><00:01:08.080><c> create</c><00:01:08.720><c> we</c><00:01:09.040><c> have</c>

00:01:09.350 --> 00:01:09.360 align:start position:0%
in the solution that we create we have
 

00:01:09.360 --> 00:01:13.270 align:start position:0%
in the solution that we create we have
to<00:01:09.600><c> use</c><00:01:10.240><c> every</c><00:01:10.720><c> single</c><00:01:11.200><c> ticket</c><00:01:11.680><c> exactly</c><00:01:12.640><c> once</c>

00:01:13.270 --> 00:01:13.280 align:start position:0%
to use every single ticket exactly once
 

00:01:13.280 --> 00:01:14.469 align:start position:0%
to use every single ticket exactly once
and<00:01:13.360><c> there's</c><00:01:13.600><c> one</c><00:01:13.760><c> last</c><00:01:14.000><c> thing</c><00:01:14.159><c> that</c><00:01:14.320><c> they</c>

00:01:14.469 --> 00:01:14.479 align:start position:0%
and there's one last thing that they
 

00:01:14.479 --> 00:01:16.230 align:start position:0%
and there's one last thing that they
tell<00:01:14.720><c> us</c><00:01:14.960><c> there</c><00:01:15.119><c> could</c><00:01:15.360><c> be</c><00:01:15.680><c> multiple</c>

00:01:16.230 --> 00:01:16.240 align:start position:0%
tell us there could be multiple
 

00:01:16.240 --> 00:01:17.990 align:start position:0%
tell us there could be multiple
solutions<00:01:16.880><c> and</c><00:01:17.040><c> if</c><00:01:17.119><c> there</c><00:01:17.360><c> are</c><00:01:17.520><c> multiple</c>

00:01:17.990 --> 00:01:18.000 align:start position:0%
solutions and if there are multiple
 

00:01:18.000 --> 00:01:20.870 align:start position:0%
solutions and if there are multiple
solutions<00:01:18.479><c> we</c><00:01:18.720><c> want</c><00:01:18.960><c> to</c><00:01:19.600><c> return</c><00:01:20.159><c> the</c><00:01:20.400><c> one</c><00:01:20.720><c> that</c>

00:01:20.870 --> 00:01:20.880 align:start position:0%
solutions we want to return the one that
 

00:01:20.880 --> 00:01:23.350 align:start position:0%
solutions we want to return the one that
has<00:01:21.119><c> a</c><00:01:21.280><c> smaller</c><00:01:21.920><c> lexical</c><00:01:22.479><c> order</c><00:01:22.960><c> basically</c>

00:01:23.350 --> 00:01:23.360 align:start position:0%
has a smaller lexical order basically
 

00:01:23.360 --> 00:01:25.510 align:start position:0%
has a smaller lexical order basically
the<00:01:23.439><c> one</c><00:01:23.600><c> that</c><00:01:23.759><c> comes</c><00:01:24.240><c> first</c><00:01:24.640><c> in</c><00:01:24.799><c> sorted</c><00:01:25.200><c> order</c>

00:01:25.510 --> 00:01:25.520 align:start position:0%
the one that comes first in sorted order
 

00:01:25.520 --> 00:01:27.190 align:start position:0%
the one that comes first in sorted order
and<00:01:25.680><c> you</c><00:01:25.759><c> can't</c><00:01:25.920><c> really</c><00:01:26.159><c> tell</c><00:01:26.400><c> that</c><00:01:26.640><c> from</c><00:01:26.960><c> this</c>

00:01:27.190 --> 00:01:27.200 align:start position:0%
and you can't really tell that from this
 

00:01:27.200 --> 00:01:28.789 align:start position:0%
and you can't really tell that from this
example<00:01:27.600><c> because</c><00:01:27.840><c> there's</c><00:01:28.080><c> really</c><00:01:28.320><c> only</c><00:01:28.560><c> one</c>

00:01:28.789 --> 00:01:28.799 align:start position:0%
example because there's really only one
 

00:01:28.799 --> 00:01:30.149 align:start position:0%
example because there's really only one
solution<00:01:29.280><c> but</c><00:01:29.439><c> let's</c><00:01:29.600><c> take</c><00:01:29.759><c> a</c><00:01:29.840><c> look</c><00:01:30.000><c> at</c>

00:01:30.149 --> 00:01:30.159 align:start position:0%
solution but let's take a look at
 

00:01:30.159 --> 00:01:31.910 align:start position:0%
solution but let's take a look at
another<00:01:30.640><c> so</c><00:01:30.880><c> here</c><00:01:31.040><c> we</c><00:01:31.200><c> have</c><00:01:31.439><c> a</c><00:01:31.520><c> different</c>

00:01:31.910 --> 00:01:31.920 align:start position:0%
another so here we have a different
 

00:01:31.920 --> 00:01:34.950 align:start position:0%
another so here we have a different
graph<00:01:32.400><c> let's</c><00:01:32.560><c> say</c><00:01:33.040><c> you</c><00:01:33.119><c> know</c><00:01:33.360><c> a</c><00:01:33.520><c> was</c><00:01:33.759><c> jfk</c><00:01:34.880><c> in</c>

00:01:34.950 --> 00:01:34.960 align:start position:0%
graph let's say you know a was jfk in
 

00:01:34.960 --> 00:01:37.590 align:start position:0%
graph let's say you know a was jfk in
this<00:01:35.200><c> context</c><00:01:36.000><c> i'm</c><00:01:36.240><c> just</c><00:01:36.400><c> using</c><00:01:36.640><c> abc</c><00:01:37.200><c> to</c><00:01:37.360><c> keep</c>

00:01:37.590 --> 00:01:37.600 align:start position:0%
this context i'm just using abc to keep
 

00:01:37.600 --> 00:01:40.230 align:start position:0%
this context i'm just using abc to keep
it<00:01:37.759><c> simple</c><00:01:38.320><c> but</c><00:01:38.479><c> we're</c><00:01:38.720><c> starting</c><00:01:39.040><c> at</c><00:01:39.280><c> a</c><00:01:39.920><c> we</c>

00:01:40.230 --> 00:01:40.240 align:start position:0%
it simple but we're starting at a we
 

00:01:40.240 --> 00:01:42.950 align:start position:0%
it simple but we're starting at a we
could<00:01:40.799><c> uh</c><00:01:41.439><c> you</c><00:01:41.600><c> know</c><00:01:41.840><c> we</c><00:01:42.000><c> want</c><00:01:42.240><c> to</c><00:01:42.320><c> go</c><00:01:42.640><c> over</c>

00:01:42.950 --> 00:01:42.960 align:start position:0%
could uh you know we want to go over
 

00:01:42.960 --> 00:01:44.789 align:start position:0%
could uh you know we want to go over
every<00:01:43.119><c> single</c><00:01:43.520><c> edge</c><00:01:43.840><c> basically</c><00:01:44.240><c> each</c><00:01:44.560><c> edge</c>

00:01:44.789 --> 00:01:44.799 align:start position:0%
every single edge basically each edge
 

00:01:44.799 --> 00:01:46.469 align:start position:0%
every single edge basically each edge
represents<00:01:45.200><c> a</c><00:01:45.280><c> ticket</c><00:01:45.600><c> we</c><00:01:45.680><c> want</c><00:01:45.840><c> to</c><00:01:45.920><c> go</c><00:01:46.159><c> over</c>

00:01:46.469 --> 00:01:46.479 align:start position:0%
represents a ticket we want to go over
 

00:01:46.479 --> 00:01:48.389 align:start position:0%
represents a ticket we want to go over
every<00:01:46.640><c> single</c><00:01:47.040><c> edge</c><00:01:47.600><c> and</c><00:01:47.840><c> we</c><00:01:48.000><c> want</c><00:01:48.240><c> the</c>

00:01:48.389 --> 00:01:48.399 align:start position:0%
every single edge and we want the
 

00:01:48.399 --> 00:01:50.950 align:start position:0%
every single edge and we want the
history<00:01:49.040><c> of</c><00:01:49.280><c> the</c><00:01:49.439><c> destinations</c><00:01:50.240><c> to</c><00:01:50.399><c> be</c><00:01:50.640><c> our</c>

00:01:50.950 --> 00:01:50.960 align:start position:0%
history of the destinations to be our
 

00:01:50.960 --> 00:01:52.469 align:start position:0%
history of the destinations to be our
result<00:01:51.360><c> so</c><00:01:51.840><c> you</c><00:01:51.920><c> know</c><00:01:52.000><c> let's</c><00:01:52.159><c> say</c><00:01:52.320><c> we're</c>

00:01:52.469 --> 00:01:52.479 align:start position:0%
result so you know let's say we're
 

00:01:52.479 --> 00:01:54.149 align:start position:0%
result so you know let's say we're
creating<00:01:52.799><c> our</c><00:01:52.960><c> result</c><00:01:53.360><c> a</c><00:01:53.520><c> is</c><00:01:53.680><c> going</c><00:01:53.759><c> to</c><00:01:53.840><c> be</c>

00:01:54.149 --> 00:01:54.159 align:start position:0%
creating our result a is going to be
 

00:01:54.159 --> 00:01:56.709 align:start position:0%
creating our result a is going to be
first<00:01:54.720><c> and</c><00:01:54.960><c> then</c><00:01:55.520><c> you</c><00:01:55.600><c> know</c><00:01:55.759><c> what</c><00:01:55.920><c> we</c><00:01:56.159><c> could</c><00:01:56.479><c> do</c>

00:01:56.709 --> 00:01:56.719 align:start position:0%
first and then you know what we could do
 

00:01:56.719 --> 00:01:59.270 align:start position:0%
first and then you know what we could do
is<00:01:56.799><c> we</c><00:01:56.880><c> could</c><00:01:57.040><c> say</c><00:01:57.200><c> okay</c><00:01:57.600><c> let's</c><00:01:57.920><c> visit</c><00:01:58.479><c> uh</c><00:01:58.880><c> c</c>

00:01:59.270 --> 00:01:59.280 align:start position:0%
is we could say okay let's visit uh c
 

00:01:59.280 --> 00:02:01.429 align:start position:0%
is we could say okay let's visit uh c
first<00:01:59.759><c> right</c><00:01:59.920><c> we</c><00:02:00.079><c> get</c><00:02:00.240><c> to</c><00:02:00.399><c> c</c><00:02:00.640><c> and</c><00:02:00.719><c> then</c><00:02:00.880><c> we</c><00:02:01.040><c> go</c>

00:02:01.429 --> 00:02:01.439 align:start position:0%
first right we get to c and then we go
 

00:02:01.439 --> 00:02:04.789 align:start position:0%
first right we get to c and then we go
back<00:02:01.759><c> to</c><00:02:02.079><c> a</c><00:02:02.719><c> right</c><00:02:03.040><c> from</c><00:02:03.439><c> c</c><00:02:04.000><c> so</c>

00:02:04.789 --> 00:02:04.799 align:start position:0%
back to a right from c so
 

00:02:04.799 --> 00:02:06.230 align:start position:0%
back to a right from c so
you<00:02:04.880><c> know</c><00:02:05.040><c> what</c><00:02:05.200><c> we</c><00:02:05.280><c> could</c><00:02:05.439><c> say</c><00:02:05.600><c> is</c><00:02:05.759><c> okay</c><00:02:06.000><c> we</c>

00:02:06.230 --> 00:02:06.240 align:start position:0%
you know what we could say is okay we
 

00:02:06.240 --> 00:02:08.229 align:start position:0%
you know what we could say is okay we
first<00:02:06.479><c> go</c><00:02:06.560><c> to</c><00:02:06.719><c> a</c><00:02:06.880><c> then</c><00:02:07.119><c> go</c><00:02:07.200><c> to</c><00:02:07.360><c> c</c><00:02:07.520><c> then</c><00:02:07.680><c> go</c><00:02:07.920><c> back</c>

00:02:08.229 --> 00:02:08.239 align:start position:0%
first go to a then go to c then go back
 

00:02:08.239 --> 00:02:10.949 align:start position:0%
first go to a then go to c then go back
to<00:02:08.479><c> a</c><00:02:08.959><c> and</c><00:02:09.039><c> then</c><00:02:09.200><c> we</c><00:02:09.360><c> go</c><00:02:09.599><c> to</c><00:02:09.840><c> b</c><00:02:10.319><c> and</c><00:02:10.399><c> then</c><00:02:10.560><c> we</c><00:02:10.640><c> go</c>

00:02:10.949 --> 00:02:10.959 align:start position:0%
to a and then we go to b and then we go
 

00:02:10.959 --> 00:02:13.830 align:start position:0%
to a and then we go to b and then we go
back<00:02:11.440><c> to</c><00:02:11.680><c> a</c><00:02:12.080><c> from</c><00:02:12.480><c> b</c><00:02:13.120><c> and</c><00:02:13.280><c> then</c><00:02:13.520><c> that</c><00:02:13.680><c> would</c>

00:02:13.830 --> 00:02:13.840 align:start position:0%
back to a from b and then that would
 

00:02:13.840 --> 00:02:15.990 align:start position:0%
back to a from b and then that would
leave<00:02:14.080><c> our</c><00:02:14.239><c> result</c><00:02:14.560><c> looking</c><00:02:14.879><c> something</c><00:02:15.360><c> like</c>

00:02:15.990 --> 00:02:16.000 align:start position:0%
leave our result looking something like
 

00:02:16.000 --> 00:02:19.190 align:start position:0%
leave our result looking something like
this<00:02:16.480><c> that's</c><00:02:16.800><c> one</c><00:02:17.200><c> possible</c><00:02:17.680><c> solution</c><00:02:18.560><c> but</c>

00:02:19.190 --> 00:02:19.200 align:start position:0%
this that's one possible solution but
 

00:02:19.200 --> 00:02:21.110 align:start position:0%
this that's one possible solution but
the<00:02:19.520><c> other</c><00:02:19.920><c> solution</c><00:02:20.319><c> would</c><00:02:20.480><c> have</c><00:02:20.560><c> been</c><00:02:20.720><c> to</c><00:02:20.879><c> go</c>

00:02:21.110 --> 00:02:21.120 align:start position:0%
the other solution would have been to go
 

00:02:21.120 --> 00:02:24.070 align:start position:0%
the other solution would have been to go
to<00:02:21.360><c> b</c><00:02:21.920><c> first</c><00:02:22.400><c> and</c><00:02:22.720><c> then</c><00:02:22.959><c> go</c><00:02:23.200><c> to</c><00:02:23.440><c> c</c><00:02:23.680><c> what</c><00:02:23.840><c> that</c>

00:02:24.070 --> 00:02:24.080 align:start position:0%
to b first and then go to c what that
 

00:02:24.080 --> 00:02:25.910 align:start position:0%
to b first and then go to c what that
would<00:02:24.239><c> have</c><00:02:24.319><c> looked</c><00:02:24.640><c> like</c><00:02:24.879><c> is</c><00:02:25.200><c> a</c>

00:02:25.910 --> 00:02:25.920 align:start position:0%
would have looked like is a
 

00:02:25.920 --> 00:02:26.710 align:start position:0%
would have looked like is a
b

00:02:26.710 --> 00:02:26.720 align:start position:0%
b
 

00:02:26.720 --> 00:02:27.589 align:start position:0%
b
a

00:02:27.589 --> 00:02:27.599 align:start position:0%
a
 

00:02:27.599 --> 00:02:31.030 align:start position:0%
a
c<00:02:28.239><c> a</c><00:02:28.800><c> now</c><00:02:29.200><c> which</c><00:02:29.440><c> one</c><00:02:29.680><c> of</c><00:02:29.760><c> these</c><00:02:30.000><c> has</c><00:02:30.239><c> a</c><00:02:30.480><c> smaller</c>

00:02:31.030 --> 00:02:31.040 align:start position:0%
c a now which one of these has a smaller
 

00:02:31.040 --> 00:02:33.509 align:start position:0%
c a now which one of these has a smaller
lexical<00:02:31.680><c> order</c><00:02:32.160><c> which</c><00:02:32.400><c> one</c><00:02:32.560><c> of</c><00:02:32.720><c> these</c><00:02:32.959><c> comes</c>

00:02:33.509 --> 00:02:33.519 align:start position:0%
lexical order which one of these comes
 

00:02:33.519 --> 00:02:35.430 align:start position:0%
lexical order which one of these comes
first<00:02:34.000><c> in</c><00:02:34.160><c> sorted</c><00:02:34.640><c> order</c><00:02:34.879><c> well</c><00:02:35.040><c> the</c><00:02:35.200><c> first</c>

00:02:35.430 --> 00:02:35.440 align:start position:0%
first in sorted order well the first
 

00:02:35.440 --> 00:02:37.190 align:start position:0%
first in sorted order well the first
character<00:02:35.920><c> a</c><00:02:36.160><c> is</c><00:02:36.239><c> the</c><00:02:36.400><c> same</c><00:02:36.640><c> but</c><00:02:36.800><c> the</c><00:02:36.879><c> second</c>

00:02:37.190 --> 00:02:37.200 align:start position:0%
character a is the same but the second
 

00:02:37.200 --> 00:02:39.750 align:start position:0%
character a is the same but the second
character<00:02:37.840><c> could</c><00:02:38.000><c> be</c><00:02:38.319><c> b</c><00:02:38.720><c> or</c><00:02:39.040><c> c</c><00:02:39.360><c> which</c><00:02:39.519><c> one</c><00:02:39.680><c> of</c>

00:02:39.750 --> 00:02:39.760 align:start position:0%
character could be b or c which one of
 

00:02:39.760 --> 00:02:41.990 align:start position:0%
character could be b or c which one of
these<00:02:39.920><c> comes</c><00:02:40.239><c> first</c><00:02:40.720><c> b</c><00:02:41.120><c> comes</c><00:02:41.440><c> first</c><00:02:41.760><c> so</c><00:02:41.920><c> of</c>

00:02:41.990 --> 00:02:42.000 align:start position:0%
these comes first b comes first so of
 

00:02:42.000 --> 00:02:44.550 align:start position:0%
these comes first b comes first so of
course<00:02:42.560><c> of</c><00:02:42.800><c> these</c><00:02:43.120><c> two</c><00:02:43.519><c> we</c><00:02:43.760><c> would</c><00:02:43.920><c> prefer</c><00:02:44.319><c> the</c>

00:02:44.550 --> 00:02:44.560 align:start position:0%
course of these two we would prefer the
 

00:02:44.560 --> 00:02:46.309 align:start position:0%
course of these two we would prefer the
second<00:02:44.879><c> one</c><00:02:45.040><c> we</c><00:02:45.200><c> would</c><00:02:45.360><c> return</c><00:02:45.760><c> the</c><00:02:45.920><c> second</c>

00:02:46.309 --> 00:02:46.319 align:start position:0%
second one we would return the second
 

00:02:46.319 --> 00:02:48.390 align:start position:0%
second one we would return the second
order<00:02:46.879><c> as</c><00:02:47.120><c> our</c><00:02:47.280><c> result</c><00:02:47.680><c> so</c><00:02:47.840><c> that's</c><00:02:48.080><c> something</c>

00:02:48.390 --> 00:02:48.400 align:start position:0%
order as our result so that's something
 

00:02:48.400 --> 00:02:49.910 align:start position:0%
order as our result so that's something
to<00:02:48.480><c> keep</c><00:02:48.720><c> in</c><00:02:48.879><c> mind</c><00:02:49.200><c> and</c><00:02:49.360><c> the</c><00:02:49.440><c> way</c><00:02:49.599><c> we</c><00:02:49.760><c> can</c>

00:02:49.910 --> 00:02:49.920 align:start position:0%
to keep in mind and the way we can
 

00:02:49.920 --> 00:02:51.110 align:start position:0%
to keep in mind and the way we can
actually<00:02:50.160><c> handle</c><00:02:50.480><c> this</c><00:02:50.640><c> is</c><00:02:50.720><c> going</c><00:02:50.800><c> to</c><00:02:50.959><c> be</c>

00:02:51.110 --> 00:02:51.120 align:start position:0%
actually handle this is going to be
 

00:02:51.120 --> 00:02:53.270 align:start position:0%
actually handle this is going to be
pretty<00:02:51.440><c> easy</c><00:02:51.840><c> i'll</c><00:02:52.000><c> show</c><00:02:52.239><c> you</c><00:02:52.400><c> how</c><00:02:52.560><c> we</c><00:02:52.800><c> can</c><00:02:53.120><c> you</c>

00:02:53.270 --> 00:02:53.280 align:start position:0%
pretty easy i'll show you how we can you
 

00:02:53.280 --> 00:02:55.509 align:start position:0%
pretty easy i'll show you how we can you
know<00:02:53.360><c> make</c><00:02:53.519><c> sure</c><00:02:53.680><c> that</c><00:02:53.760><c> we</c><00:02:53.920><c> return</c><00:02:54.720><c> the</c>

00:02:55.509 --> 00:02:55.519 align:start position:0%
know make sure that we return the
 

00:02:55.519 --> 00:02:57.990 align:start position:0%
know make sure that we return the
smaller<00:02:55.920><c> lexical</c><00:02:56.480><c> order</c><00:02:56.959><c> result</c><00:02:57.519><c> now</c><00:02:57.760><c> this</c>

00:02:57.990 --> 00:02:58.000 align:start position:0%
smaller lexical order result now this
 

00:02:58.000 --> 00:03:00.229 align:start position:0%
smaller lexical order result now this
example<00:02:58.400><c> is</c><00:02:58.560><c> very</c><00:02:58.800><c> simple</c><00:02:59.440><c> because</c><00:02:59.920><c> there's</c>

00:03:00.229 --> 00:03:00.239 align:start position:0%
example is very simple because there's
 

00:03:00.239 --> 00:03:02.790 align:start position:0%
example is very simple because there's
really<00:03:00.480><c> only</c><00:03:00.959><c> one</c><00:03:01.599><c> you</c><00:03:01.680><c> know</c><00:03:02.159><c> ordering</c><00:03:02.640><c> that</c>

00:03:02.790 --> 00:03:02.800 align:start position:0%
really only one you know ordering that
 

00:03:02.800 --> 00:03:05.350 align:start position:0%
really only one you know ordering that
we<00:03:02.879><c> could</c><00:03:03.120><c> possibly</c><00:03:03.760><c> create</c><00:03:04.400><c> and</c><00:03:04.720><c> to</c><00:03:04.879><c> get</c><00:03:05.120><c> that</c>

00:03:05.350 --> 00:03:05.360 align:start position:0%
we could possibly create and to get that
 

00:03:05.360 --> 00:03:06.949 align:start position:0%
we could possibly create and to get that
ordering<00:03:05.760><c> what</c><00:03:05.920><c> we</c><00:03:06.000><c> could</c><00:03:06.159><c> do</c><00:03:06.319><c> is</c><00:03:06.480><c> just</c><00:03:06.640><c> run</c>

00:03:06.949 --> 00:03:06.959 align:start position:0%
ordering what we could do is just run
 

00:03:06.959 --> 00:03:09.270 align:start position:0%
ordering what we could do is just run
dfs<00:03:07.680><c> starting</c><00:03:08.000><c> at</c><00:03:08.080><c> jfk</c><00:03:08.640><c> we</c><00:03:08.720><c> know</c><00:03:08.879><c> we're</c><00:03:09.040><c> always</c>

00:03:09.270 --> 00:03:09.280 align:start position:0%
dfs starting at jfk we know we're always
 

00:03:09.280 --> 00:03:11.670 align:start position:0%
dfs starting at jfk we know we're always
going<00:03:09.360><c> to</c><00:03:09.440><c> start</c><00:03:09.680><c> at</c><00:03:09.760><c> jfk</c><00:03:10.480><c> we</c><00:03:10.640><c> create</c><00:03:10.959><c> a</c><00:03:11.040><c> dfs</c>

00:03:11.670 --> 00:03:11.680 align:start position:0%
going to start at jfk we create a dfs
 

00:03:11.680 --> 00:03:14.149 align:start position:0%
going to start at jfk we create a dfs
running<00:03:12.080><c> on</c><00:03:12.319><c> this</c><00:03:12.800><c> and</c><00:03:13.360><c> you</c><00:03:13.519><c> know</c><00:03:13.680><c> using</c><00:03:13.920><c> this</c>

00:03:14.149 --> 00:03:14.159 align:start position:0%
running on this and you know using this
 

00:03:14.159 --> 00:03:16.550 align:start position:0%
running on this and you know using this
dfs<00:03:14.640><c> technically</c><00:03:15.120><c> we</c><00:03:15.440><c> are</c><00:03:15.680><c> allowed</c><00:03:16.080><c> to</c><00:03:16.239><c> visit</c>

00:03:16.550 --> 00:03:16.560 align:start position:0%
dfs technically we are allowed to visit
 

00:03:16.560 --> 00:03:18.229 align:start position:0%
dfs technically we are allowed to visit
multiple<00:03:17.120><c> the</c><00:03:17.360><c> you</c><00:03:17.440><c> know</c><00:03:17.519><c> the</c><00:03:17.680><c> same</c><00:03:18.000><c> node</c>

00:03:18.229 --> 00:03:18.239 align:start position:0%
multiple the you know the same node
 

00:03:18.239 --> 00:03:19.830 align:start position:0%
multiple the you know the same node
multiple<00:03:18.640><c> times</c><00:03:18.959><c> as</c><00:03:19.200><c> i</c><00:03:19.280><c> showed</c><00:03:19.599><c> in</c><00:03:19.680><c> the</c>

00:03:19.830 --> 00:03:19.840 align:start position:0%
multiple times as i showed in the
 

00:03:19.840 --> 00:03:21.750 align:start position:0%
multiple times as i showed in the
example<00:03:20.239><c> just</c><00:03:20.480><c> a</c><00:03:20.560><c> moment</c><00:03:20.879><c> ago</c><00:03:21.200><c> but</c><00:03:21.360><c> what</c><00:03:21.599><c> we</c>

00:03:21.750 --> 00:03:21.760 align:start position:0%
example just a moment ago but what we
 

00:03:21.760 --> 00:03:24.229 align:start position:0%
example just a moment ago but what we
can't<00:03:22.080><c> do</c><00:03:22.319><c> is</c><00:03:22.480><c> go</c><00:03:22.800><c> over</c><00:03:23.120><c> the</c><00:03:23.280><c> same</c><00:03:23.760><c> edge</c>

00:03:24.229 --> 00:03:24.239 align:start position:0%
can't do is go over the same edge
 

00:03:24.239 --> 00:03:26.789 align:start position:0%
can't do is go over the same edge
multiple<00:03:24.799><c> times</c><00:03:25.120><c> we</c><00:03:25.200><c> can't</c><00:03:25.599><c> reuse</c><00:03:26.319><c> one</c><00:03:26.480><c> of</c><00:03:26.640><c> our</c>

00:03:26.789 --> 00:03:26.799 align:start position:0%
multiple times we can't reuse one of our
 

00:03:26.799 --> 00:03:28.949 align:start position:0%
multiple times we can't reuse one of our
tickets<00:03:27.440><c> but</c><00:03:27.680><c> in</c><00:03:27.760><c> this</c><00:03:27.920><c> case</c><00:03:28.159><c> if</c><00:03:28.239><c> we</c><00:03:28.319><c> run</c><00:03:28.480><c> a</c><00:03:28.560><c> dfs</c>

00:03:28.949 --> 00:03:28.959 align:start position:0%
tickets but in this case if we run a dfs
 

00:03:28.959 --> 00:03:30.789 align:start position:0%
tickets but in this case if we run a dfs
starting<00:03:29.280><c> at</c><00:03:29.360><c> jfk</c><00:03:30.080><c> you</c><00:03:30.159><c> know</c><00:03:30.239><c> what</c><00:03:30.400><c> we'll</c><00:03:30.560><c> get</c>

00:03:30.789 --> 00:03:30.799 align:start position:0%
starting at jfk you know what we'll get
 

00:03:30.799 --> 00:03:33.589 align:start position:0%
starting at jfk you know what we'll get
is<00:03:30.959><c> jfk</c><00:03:31.440><c> first</c><00:03:32.000><c> then</c><00:03:32.239><c> this</c><00:03:32.480><c> one</c><00:03:32.799><c> then</c><00:03:33.040><c> this</c><00:03:33.280><c> one</c>

00:03:33.589 --> 00:03:33.599 align:start position:0%
is jfk first then this one then this one
 

00:03:33.599 --> 00:03:35.110 align:start position:0%
is jfk first then this one then this one
then<00:03:33.920><c> this</c><00:03:34.080><c> one</c><00:03:34.400><c> and</c><00:03:34.480><c> then</c><00:03:34.640><c> this</c><00:03:34.799><c> one</c><00:03:34.959><c> so</c>

00:03:35.110 --> 00:03:35.120 align:start position:0%
then this one and then this one so
 

00:03:35.120 --> 00:03:36.630 align:start position:0%
then this one and then this one so
there's<00:03:35.360><c> really</c><00:03:35.519><c> only</c><00:03:35.760><c> one</c><00:03:36.080><c> ordering</c><00:03:36.480><c> and</c><00:03:36.560><c> you</c>

00:03:36.630 --> 00:03:36.640 align:start position:0%
there's really only one ordering and you
 

00:03:36.640 --> 00:03:38.470 align:start position:0%
there's really only one ordering and you
can<00:03:36.799><c> see</c><00:03:36.959><c> that</c><00:03:37.040><c> that's</c><00:03:37.280><c> the</c><00:03:37.519><c> output</c><00:03:38.000><c> for</c><00:03:38.239><c> this</c>

00:03:38.470 --> 00:03:38.480 align:start position:0%
can see that that's the output for this
 

00:03:38.480 --> 00:03:40.710 align:start position:0%
can see that that's the output for this
example<00:03:39.200><c> the</c><00:03:39.360><c> expected</c><00:03:39.920><c> output</c><00:03:40.400><c> and</c><00:03:40.560><c> so</c>

00:03:40.710 --> 00:03:40.720 align:start position:0%
example the expected output and so
 

00:03:40.720 --> 00:03:42.229 align:start position:0%
example the expected output and so
that's<00:03:40.959><c> what</c><00:03:41.040><c> we</c><00:03:41.200><c> can</c><00:03:41.360><c> return</c><00:03:41.680><c> but</c><00:03:41.840><c> if</c><00:03:42.000><c> we</c><00:03:42.159><c> of</c>

00:03:42.229 --> 00:03:42.239 align:start position:0%
that's what we can return but if we of
 

00:03:42.239 --> 00:03:44.470 align:start position:0%
that's what we can return but if we of
course<00:03:42.480><c> had</c><00:03:42.720><c> multiple</c><00:03:43.200><c> choices</c><00:03:43.680><c> like</c><00:03:43.920><c> this</c><00:03:44.239><c> or</c>

00:03:44.470 --> 00:03:44.480 align:start position:0%
course had multiple choices like this or
 

00:03:44.480 --> 00:03:46.869 align:start position:0%
course had multiple choices like this or
you<00:03:44.640><c> know</c><00:03:44.879><c> adding</c><00:03:45.519><c> a</c><00:03:45.599><c> bunch</c><00:03:45.920><c> more</c><00:03:46.080><c> edges</c><00:03:46.720><c> and</c>

00:03:46.869 --> 00:03:46.879 align:start position:0%
you know adding a bunch more edges and
 

00:03:46.879 --> 00:03:49.110 align:start position:0%
you know adding a bunch more edges and
we<00:03:47.120><c> still</c><00:03:47.280><c> have</c><00:03:47.440><c> to</c><00:03:47.599><c> go</c><00:03:47.840><c> over</c><00:03:48.159><c> every</c><00:03:48.400><c> single</c>

00:03:49.110 --> 00:03:49.120 align:start position:0%
we still have to go over every single
 

00:03:49.120 --> 00:03:50.949 align:start position:0%
we still have to go over every single
edge<00:03:49.599><c> and</c><00:03:49.760><c> we</c><00:03:49.920><c> have</c><00:03:50.000><c> to</c><00:03:50.159><c> return</c><00:03:50.400><c> the</c><00:03:50.480><c> smallest</c>

00:03:50.949 --> 00:03:50.959 align:start position:0%
edge and we have to return the smallest
 

00:03:50.959 --> 00:03:53.030 align:start position:0%
edge and we have to return the smallest
lexical<00:03:51.440><c> order</c><00:03:52.000><c> you</c><00:03:52.080><c> know</c><00:03:52.400><c> let's</c><00:03:52.560><c> see</c><00:03:52.720><c> how</c><00:03:52.879><c> we</c>

00:03:53.030 --> 00:03:53.040 align:start position:0%
lexical order you know let's see how we
 

00:03:53.040 --> 00:03:54.869 align:start position:0%
lexical order you know let's see how we
can<00:03:53.280><c> do</c><00:03:53.439><c> that</c><00:03:53.760><c> algorithm</c><00:03:54.400><c> so</c><00:03:54.560><c> like</c><00:03:54.720><c> i</c>

00:03:54.869 --> 00:03:54.879 align:start position:0%
can do that algorithm so like i
 

00:03:54.879 --> 00:03:56.149 align:start position:0%
can do that algorithm so like i
mentioned<00:03:55.200><c> you</c><00:03:55.360><c> really</c><00:03:55.599><c> have</c><00:03:55.680><c> to</c><00:03:55.760><c> have</c><00:03:55.920><c> a</c><00:03:56.000><c> good</c>

00:03:56.149 --> 00:03:56.159 align:start position:0%
mentioned you really have to have a good
 

00:03:56.159 --> 00:03:57.830 align:start position:0%
mentioned you really have to have a good
understanding<00:03:56.720><c> of</c><00:03:56.879><c> graphs</c><00:03:57.280><c> to</c><00:03:57.439><c> be</c><00:03:57.599><c> able</c><00:03:57.760><c> to</c>

00:03:57.830 --> 00:03:57.840 align:start position:0%
understanding of graphs to be able to
 

00:03:57.840 --> 00:03:59.270 align:start position:0%
understanding of graphs to be able to
solve<00:03:58.080><c> this</c><00:03:58.319><c> problem</c><00:03:58.640><c> i'm</c><00:03:58.799><c> going</c><00:03:58.879><c> to</c><00:03:58.959><c> assume</c>

00:03:59.270 --> 00:03:59.280 align:start position:0%
solve this problem i'm going to assume
 

00:03:59.280 --> 00:04:00.949 align:start position:0%
solve this problem i'm going to assume
you<00:03:59.439><c> kind</c><00:03:59.599><c> of</c><00:03:59.680><c> already</c><00:04:00.000><c> know</c><00:04:00.239><c> dfs</c><00:04:00.720><c> and</c><00:04:00.799><c> the</c>

00:04:00.949 --> 00:04:00.959 align:start position:0%
you kind of already know dfs and the
 

00:04:00.959 --> 00:04:02.789 align:start position:0%
you kind of already know dfs and the
basics<00:04:01.360><c> of</c><00:04:01.519><c> graphs</c><00:04:02.080><c> so</c><00:04:02.239><c> what</c><00:04:02.400><c> we're</c><00:04:02.560><c> going</c><00:04:02.640><c> to</c>

00:04:02.789 --> 00:04:02.799 align:start position:0%
basics of graphs so what we're going to
 

00:04:02.799 --> 00:04:05.190 align:start position:0%
basics of graphs so what we're going to
use<00:04:03.280><c> to</c><00:04:03.599><c> do</c><00:04:03.840><c> the</c><00:04:04.000><c> traversal</c><00:04:04.560><c> on</c><00:04:04.640><c> this</c><00:04:04.879><c> graph</c><00:04:05.120><c> in</c>

00:04:05.190 --> 00:04:05.200 align:start position:0%
use to do the traversal on this graph in
 

00:04:05.200 --> 00:04:07.270 align:start position:0%
use to do the traversal on this graph in
the<00:04:05.280><c> first</c><00:04:05.519><c> place</c><00:04:06.000><c> is</c><00:04:06.480><c> you</c><00:04:06.640><c> know</c><00:04:06.799><c> create</c><00:04:07.120><c> an</c>

00:04:07.270 --> 00:04:07.280 align:start position:0%
the first place is you know create an
 

00:04:07.280 --> 00:04:09.270 align:start position:0%
the first place is you know create an
adjacency<00:04:07.920><c> list</c><00:04:08.239><c> of</c><00:04:08.319><c> course</c><00:04:08.560><c> we're</c><00:04:08.799><c> already</c>

00:04:09.270 --> 00:04:09.280 align:start position:0%
adjacency list of course we're already
 

00:04:09.280 --> 00:04:11.429 align:start position:0%
adjacency list of course we're already
given<00:04:09.840><c> the</c><00:04:10.080><c> list</c><00:04:10.400><c> of</c><00:04:10.560><c> edges</c><00:04:10.879><c> but</c><00:04:11.120><c> we</c><00:04:11.280><c> have</c><00:04:11.360><c> to</c>

00:04:11.429 --> 00:04:11.439 align:start position:0%
given the list of edges but we have to
 

00:04:11.439 --> 00:04:13.270 align:start position:0%
given the list of edges but we have to
actually<00:04:11.760><c> create</c><00:04:12.080><c> an</c><00:04:12.159><c> adjacency</c><00:04:12.799><c> list</c><00:04:13.040><c> out</c><00:04:13.200><c> of</c>

00:04:13.270 --> 00:04:13.280 align:start position:0%
actually create an adjacency list out of
 

00:04:13.280 --> 00:04:15.830 align:start position:0%
actually create an adjacency list out of
that<00:04:13.439><c> to</c><00:04:13.599><c> be</c><00:04:13.840><c> able</c><00:04:14.319><c> to</c><00:04:14.560><c> traverse</c><00:04:15.439><c> over</c><00:04:15.680><c> the</c>

00:04:15.830 --> 00:04:15.840 align:start position:0%
that to be able to traverse over the
 

00:04:15.840 --> 00:04:17.349 align:start position:0%
that to be able to traverse over the
graph<00:04:16.320><c> and</c><00:04:16.479><c> the</c><00:04:16.560><c> way</c><00:04:16.720><c> we're</c><00:04:16.880><c> going</c><00:04:17.040><c> to</c><00:04:17.120><c> be</c><00:04:17.280><c> you</c>

00:04:17.349 --> 00:04:17.359 align:start position:0%
graph and the way we're going to be you
 

00:04:17.359 --> 00:04:19.030 align:start position:0%
graph and the way we're going to be you
know<00:04:17.519><c> creating</c><00:04:17.840><c> this</c><00:04:18.079><c> adjacency</c><00:04:18.639><c> list</c><00:04:18.959><c> is</c>

00:04:19.030 --> 00:04:19.040 align:start position:0%
know creating this adjacency list is
 

00:04:19.040 --> 00:04:21.110 align:start position:0%
know creating this adjacency list is
just<00:04:19.199><c> going</c><00:04:19.359><c> to</c><00:04:19.519><c> be</c><00:04:19.680><c> by</c><00:04:19.919><c> using</c><00:04:20.239><c> a</c><00:04:20.400><c> hashmap</c>

00:04:21.110 --> 00:04:21.120 align:start position:0%
just going to be by using a hashmap
 

00:04:21.120 --> 00:04:24.790 align:start position:0%
just going to be by using a hashmap
we're<00:04:21.280><c> going</c><00:04:21.440><c> to</c><00:04:21.680><c> map</c><00:04:22.160><c> every</c><00:04:22.639><c> single</c><00:04:23.280><c> node</c><00:04:24.000><c> to</c>

00:04:24.790 --> 00:04:24.800 align:start position:0%
we're going to map every single node to
 

00:04:24.800 --> 00:04:27.350 align:start position:0%
we're going to map every single node to
the<00:04:25.440><c> you</c><00:04:25.600><c> know</c><00:04:25.759><c> every</c><00:04:25.919><c> single</c><00:04:26.320><c> source</c><00:04:26.880><c> rather</c>

00:04:27.350 --> 00:04:27.360 align:start position:0%
the you know every single source rather
 

00:04:27.360 --> 00:04:29.510 align:start position:0%
the you know every single source rather
to<00:04:27.759><c> the</c><00:04:28.000><c> possible</c><00:04:28.479><c> destinations</c><00:04:29.120><c> that</c><00:04:29.199><c> we</c><00:04:29.360><c> can</c>

00:04:29.510 --> 00:04:29.520 align:start position:0%
to the possible destinations that we can
 

00:04:29.520 --> 00:04:31.110 align:start position:0%
to the possible destinations that we can
take<00:04:29.759><c> and</c><00:04:29.919><c> the</c><00:04:30.000><c> easiest</c><00:04:30.400><c> way</c><00:04:30.560><c> to</c><00:04:30.720><c> build</c><00:04:30.960><c> an</c>

00:04:31.110 --> 00:04:31.120 align:start position:0%
take and the easiest way to build an
 

00:04:31.120 --> 00:04:33.030 align:start position:0%
take and the easiest way to build an
adjacency<00:04:31.680><c> list</c><00:04:31.919><c> is</c><00:04:32.080><c> just</c><00:04:32.240><c> kind</c><00:04:32.400><c> of</c><00:04:32.560><c> iterate</c>

00:04:33.030 --> 00:04:33.040 align:start position:0%
adjacency list is just kind of iterate
 

00:04:33.040 --> 00:04:35.189 align:start position:0%
adjacency list is just kind of iterate
over<00:04:33.280><c> the</c><00:04:33.520><c> input</c><00:04:34.000><c> which</c><00:04:34.240><c> is</c><00:04:34.479><c> tickets</c><00:04:34.880><c> in</c><00:04:34.960><c> this</c>

00:04:35.189 --> 00:04:35.199 align:start position:0%
over the input which is tickets in this
 

00:04:35.199 --> 00:04:37.189 align:start position:0%
over the input which is tickets in this
case<00:04:35.440><c> right</c><00:04:35.600><c> it's</c><00:04:35.680><c> a</c><00:04:35.919><c> list</c><00:04:36.320><c> of</c><00:04:36.800><c> source</c>

00:04:37.189 --> 00:04:37.199 align:start position:0%
case right it's a list of source
 

00:04:37.199 --> 00:04:39.749 align:start position:0%
case right it's a list of source
destination<00:04:38.000><c> pairs</c><00:04:38.800><c> so</c><00:04:38.960><c> what</c><00:04:39.120><c> we</c><00:04:39.280><c> would</c><00:04:39.440><c> do</c><00:04:39.600><c> is</c>

00:04:39.749 --> 00:04:39.759 align:start position:0%
destination pairs so what we would do is
 

00:04:39.759 --> 00:04:43.270 align:start position:0%
destination pairs so what we would do is
say<00:04:39.919><c> okay</c><00:04:40.160><c> jfk</c><00:04:40.720><c> has</c><00:04:41.280><c> a</c><00:04:41.520><c> san</c><00:04:41.759><c> francisco</c><00:04:42.400><c> sfo</c><00:04:43.120><c> at</c>

00:04:43.270 --> 00:04:43.280 align:start position:0%
say okay jfk has a san francisco sfo at
 

00:04:43.280 --> 00:04:45.749 align:start position:0%
say okay jfk has a san francisco sfo at
least<00:04:43.520><c> i</c><00:04:43.680><c> assume</c><00:04:44.000><c> that's</c><00:04:44.400><c> san</c><00:04:44.639><c> francisco</c><00:04:45.440><c> uh</c>

00:04:45.749 --> 00:04:45.759 align:start position:0%
least i assume that's san francisco uh
 

00:04:45.759 --> 00:04:48.390 align:start position:0%
least i assume that's san francisco uh
and<00:04:45.919><c> then</c><00:04:46.639><c> it</c><00:04:46.800><c> also</c><00:04:47.040><c> has</c><00:04:47.280><c> a</c><00:04:47.360><c> second</c><00:04:47.680><c> one</c>

00:04:48.390 --> 00:04:48.400 align:start position:0%
and then it also has a second one
 

00:04:48.400 --> 00:04:51.110 align:start position:0%
and then it also has a second one
atlanta<00:04:49.040><c> atl</c><00:04:49.919><c> and</c><00:04:50.000><c> we</c><00:04:50.160><c> can</c><00:04:50.479><c> start</c><00:04:50.800><c> adding</c>

00:04:51.110 --> 00:04:51.120 align:start position:0%
atlanta atl and we can start adding
 

00:04:51.120 --> 00:04:53.110 align:start position:0%
atlanta atl and we can start adding
those<00:04:51.440><c> to</c><00:04:51.680><c> our</c><00:04:51.840><c> adjacency</c><00:04:52.479><c> list</c><00:04:52.720><c> like</c><00:04:52.880><c> this</c><00:04:53.040><c> is</c>

00:04:53.110 --> 00:04:53.120 align:start position:0%
those to our adjacency list like this is
 

00:04:53.120 --> 00:04:54.950 align:start position:0%
those to our adjacency list like this is
the<00:04:53.280><c> list</c><00:04:53.759><c> this</c><00:04:53.919><c> is</c><00:04:54.080><c> the</c><00:04:54.240><c> source</c><00:04:54.560><c> right</c><00:04:54.720><c> so</c>

00:04:54.950 --> 00:04:54.960 align:start position:0%
the list this is the source right so
 

00:04:54.960 --> 00:04:57.189 align:start position:0%
the list this is the source right so
from<00:04:55.199><c> jfk</c><00:04:55.680><c> we</c><00:04:55.840><c> can</c><00:04:56.000><c> travel</c><00:04:56.320><c> to</c><00:04:56.479><c> these</c><00:04:56.880><c> two</c>

00:04:57.189 --> 00:04:57.199 align:start position:0%
from jfk we can travel to these two
 

00:04:57.199 --> 00:04:59.430 align:start position:0%
from jfk we can travel to these two
cities<00:04:57.919><c> but</c><00:04:58.479><c> what</c><00:04:58.720><c> i'm</c><00:04:58.880><c> going</c><00:04:58.960><c> to</c><00:04:59.040><c> tell</c><00:04:59.199><c> you</c>

00:04:59.430 --> 00:04:59.440 align:start position:0%
cities but what i'm going to tell you
 

00:04:59.440 --> 00:05:02.469 align:start position:0%
cities but what i'm going to tell you
right<00:04:59.600><c> now</c><00:04:59.919><c> is</c><00:05:00.080><c> that</c><00:05:00.720><c> we</c><00:05:01.280><c> should</c><00:05:01.600><c> have</c><00:05:02.080><c> this</c>

00:05:02.469 --> 00:05:02.479 align:start position:0%
right now is that we should have this
 

00:05:02.479 --> 00:05:04.710 align:start position:0%
right now is that we should have this
list<00:05:03.039><c> in</c><00:05:03.280><c> sorted</c><00:05:03.840><c> order</c><00:05:04.240><c> because</c><00:05:04.479><c> we're</c><00:05:04.639><c> going</c>

00:05:04.710 --> 00:05:04.720 align:start position:0%
list in sorted order because we're going
 

00:05:04.720 --> 00:05:08.150 align:start position:0%
list in sorted order because we're going
to<00:05:04.800><c> be</c><00:05:05.039><c> running</c><00:05:05.440><c> dfs</c><00:05:06.560><c> and</c><00:05:06.800><c> as</c><00:05:07.039><c> we</c><00:05:07.199><c> run</c><00:05:07.440><c> dfs</c>

00:05:08.150 --> 00:05:08.160 align:start position:0%
to be running dfs and as we run dfs
 

00:05:08.160 --> 00:05:09.670 align:start position:0%
to be running dfs and as we run dfs
we're<00:05:08.320><c> going</c><00:05:08.479><c> to</c><00:05:08.560><c> start</c><00:05:08.880><c> at</c><00:05:09.039><c> the</c><00:05:09.280><c> first</c>

00:05:09.670 --> 00:05:09.680 align:start position:0%
we're going to start at the first
 

00:05:09.680 --> 00:05:11.590 align:start position:0%
we're going to start at the first
possible<00:05:10.160><c> source</c><00:05:10.479><c> that</c><00:05:10.560><c> we</c><00:05:10.720><c> could</c><00:05:10.880><c> visit</c><00:05:11.280><c> from</c>

00:05:11.590 --> 00:05:11.600 align:start position:0%
possible source that we could visit from
 

00:05:11.600 --> 00:05:14.550 align:start position:0%
possible source that we could visit from
jfk<00:05:12.479><c> right</c><00:05:12.720><c> we're</c><00:05:12.880><c> going</c><00:05:12.960><c> to</c><00:05:13.120><c> try</c><00:05:13.680><c> sfo</c><00:05:14.400><c> and</c>

00:05:14.550 --> 00:05:14.560 align:start position:0%
jfk right we're going to try sfo and
 

00:05:14.560 --> 00:05:17.670 align:start position:0%
jfk right we're going to try sfo and
maybe<00:05:14.880><c> we</c><00:05:15.120><c> find</c><00:05:15.440><c> a</c><00:05:15.600><c> result</c><00:05:16.320><c> starting</c><00:05:16.720><c> at</c><00:05:16.960><c> sfo</c>

00:05:17.670 --> 00:05:17.680 align:start position:0%
maybe we find a result starting at sfo
 

00:05:17.680 --> 00:05:19.909 align:start position:0%
maybe we find a result starting at sfo
in<00:05:17.840><c> that</c><00:05:18.080><c> case</c><00:05:18.560><c> we</c><00:05:18.720><c> could</c><00:05:18.880><c> return</c><00:05:19.280><c> that</c><00:05:19.520><c> as</c><00:05:19.759><c> the</c>

00:05:19.909 --> 00:05:19.919 align:start position:0%
in that case we could return that as the
 

00:05:19.919 --> 00:05:21.990 align:start position:0%
in that case we could return that as the
result<00:05:20.479><c> but</c><00:05:20.800><c> what</c><00:05:20.960><c> if</c><00:05:21.120><c> it</c><00:05:21.280><c> turned</c><00:05:21.600><c> out</c><00:05:21.759><c> that</c>

00:05:21.990 --> 00:05:22.000 align:start position:0%
result but what if it turned out that
 

00:05:22.000 --> 00:05:24.629 align:start position:0%
result but what if it turned out that
maybe<00:05:22.320><c> we</c><00:05:22.479><c> could</c><00:05:22.639><c> have</c><00:05:22.880><c> also</c><00:05:23.280><c> found</c><00:05:23.600><c> a</c><00:05:23.840><c> result</c>

00:05:24.629 --> 00:05:24.639 align:start position:0%
maybe we could have also found a result
 

00:05:24.639 --> 00:05:27.029 align:start position:0%
maybe we could have also found a result
of<00:05:24.800><c> you</c><00:05:24.960><c> know</c><00:05:25.120><c> going</c><00:05:25.440><c> to</c><00:05:25.680><c> atlanta</c><00:05:26.560><c> first</c>

00:05:27.029 --> 00:05:27.039 align:start position:0%
of you know going to atlanta first
 

00:05:27.039 --> 00:05:29.830 align:start position:0%
of you know going to atlanta first
rather<00:05:27.280><c> than</c><00:05:27.600><c> sfo</c><00:05:28.400><c> in</c><00:05:28.560><c> that</c><00:05:28.880><c> case</c><00:05:29.360><c> this</c><00:05:29.600><c> is</c><00:05:29.680><c> the</c>

00:05:29.830 --> 00:05:29.840 align:start position:0%
rather than sfo in that case this is the
 

00:05:29.840 --> 00:05:31.670 align:start position:0%
rather than sfo in that case this is the
result<00:05:30.240><c> that</c><00:05:30.320><c> we</c><00:05:30.479><c> would</c><00:05:30.720><c> prefer</c><00:05:31.280><c> because</c><00:05:31.520><c> it</c>

00:05:31.670 --> 00:05:31.680 align:start position:0%
result that we would prefer because it
 

00:05:31.680 --> 00:05:34.230 align:start position:0%
result that we would prefer because it
comes<00:05:32.160><c> first</c><00:05:32.560><c> in</c><00:05:32.800><c> sorted</c><00:05:33.199><c> order</c><00:05:33.520><c> so</c><00:05:33.840><c> what</c><00:05:34.080><c> we</c>

00:05:34.230 --> 00:05:34.240 align:start position:0%
comes first in sorted order so what we
 

00:05:34.240 --> 00:05:36.950 align:start position:0%
comes first in sorted order so what we
want<00:05:34.479><c> is</c><00:05:34.639><c> for</c><00:05:34.800><c> each</c><00:05:35.039><c> of</c><00:05:35.120><c> these</c><00:05:35.520><c> lists</c><00:05:36.160><c> to</c><00:05:36.400><c> be</c><00:05:36.720><c> in</c>

00:05:36.950 --> 00:05:36.960 align:start position:0%
want is for each of these lists to be in
 

00:05:36.960 --> 00:05:38.870 align:start position:0%
want is for each of these lists to be in
sorted<00:05:37.360><c> order</c><00:05:37.680><c> and</c><00:05:37.840><c> we</c><00:05:38.080><c> could</c><00:05:38.400><c> build</c><00:05:38.720><c> the</c>

00:05:38.870 --> 00:05:38.880 align:start position:0%
sorted order and we could build the
 

00:05:38.880 --> 00:05:40.710 align:start position:0%
sorted order and we could build the
adjacency<00:05:39.440><c> list</c><00:05:39.680><c> and</c><00:05:39.759><c> then</c><00:05:40.080><c> sort</c><00:05:40.400><c> each</c><00:05:40.560><c> of</c>

00:05:40.710 --> 00:05:40.720 align:start position:0%
adjacency list and then sort each of
 

00:05:40.720 --> 00:05:42.870 align:start position:0%
adjacency list and then sort each of
these<00:05:40.960><c> lists</c><00:05:41.360><c> independently</c><00:05:42.240><c> but</c><00:05:42.400><c> the</c><00:05:42.560><c> easier</c>

00:05:42.870 --> 00:05:42.880 align:start position:0%
these lists independently but the easier
 

00:05:42.880 --> 00:05:44.710 align:start position:0%
these lists independently but the easier
way<00:05:43.039><c> to</c><00:05:43.199><c> do</c><00:05:43.360><c> it</c><00:05:43.440><c> is</c><00:05:43.600><c> actually</c><00:05:43.919><c> just</c><00:05:44.080><c> to</c><00:05:44.320><c> sort</c>

00:05:44.710 --> 00:05:44.720 align:start position:0%
way to do it is actually just to sort
 

00:05:44.720 --> 00:05:47.029 align:start position:0%
way to do it is actually just to sort
the<00:05:45.039><c> input</c><00:05:45.600><c> and</c><00:05:45.680><c> i'll</c><00:05:45.840><c> show</c><00:05:46.000><c> you</c><00:05:46.320><c> why</c><00:05:46.720><c> because</c>

00:05:47.029 --> 00:05:47.039 align:start position:0%
the input and i'll show you why because
 

00:05:47.039 --> 00:05:48.390 align:start position:0%
the input and i'll show you why because
the<00:05:47.199><c> way</c><00:05:47.360><c> we're</c><00:05:47.520><c> going</c><00:05:47.600><c> to</c><00:05:47.680><c> be</c><00:05:47.840><c> sorting</c><00:05:48.160><c> the</c>

00:05:48.390 --> 00:05:48.400 align:start position:0%
the way we're going to be sorting the
 

00:05:48.400 --> 00:05:51.110 align:start position:0%
the way we're going to be sorting the
input<00:05:49.039><c> is</c><00:05:49.199><c> by</c><00:05:49.360><c> doing</c><00:05:49.759><c> this</c><00:05:50.240><c> these</c><00:05:50.479><c> are</c><00:05:50.720><c> pairs</c>

00:05:51.110 --> 00:05:51.120 align:start position:0%
input is by doing this these are pairs
 

00:05:51.120 --> 00:05:53.990 align:start position:0%
input is by doing this these are pairs
of<00:05:51.280><c> values</c><00:05:51.759><c> right</c><00:05:52.160><c> the</c><00:05:52.479><c> first</c><00:05:53.039><c> uh</c><00:05:53.440><c> value</c><00:05:53.840><c> is</c>

00:05:53.990 --> 00:05:54.000 align:start position:0%
of values right the first uh value is
 

00:05:54.000 --> 00:05:55.510 align:start position:0%
of values right the first uh value is
going<00:05:54.080><c> to</c><00:05:54.160><c> be</c><00:05:54.320><c> the</c><00:05:54.479><c> first</c><00:05:54.880><c> key</c><00:05:55.199><c> that</c><00:05:55.360><c> we're</c>

00:05:55.510 --> 00:05:55.520 align:start position:0%
going to be the first key that we're
 

00:05:55.520 --> 00:05:57.270 align:start position:0%
going to be the first key that we're
going<00:05:55.600><c> to</c><00:05:55.680><c> use</c><00:05:55.919><c> to</c><00:05:56.080><c> sort</c><00:05:56.400><c> so</c><00:05:56.800><c> you</c><00:05:56.960><c> know</c><00:05:57.039><c> these</c>

00:05:57.270 --> 00:05:57.280 align:start position:0%
going to use to sort so you know these
 

00:05:57.280 --> 00:05:59.749 align:start position:0%
going to use to sort so you know these
two<00:05:57.440><c> jfks</c><00:05:58.080><c> would</c><00:05:58.319><c> be</c><00:05:58.800><c> next</c><00:05:59.039><c> to</c><00:05:59.199><c> each</c><00:05:59.360><c> other</c><00:05:59.600><c> but</c>

00:05:59.749 --> 00:05:59.759 align:start position:0%
two jfks would be next to each other but
 

00:05:59.759 --> 00:06:01.830 align:start position:0%
two jfks would be next to each other but
then<00:06:00.240><c> if</c><00:06:00.400><c> there's</c><00:06:00.639><c> a</c><00:06:00.800><c> tie</c><00:06:01.120><c> between</c><00:06:01.440><c> the</c><00:06:01.520><c> first</c>

00:06:01.830 --> 00:06:01.840 align:start position:0%
then if there's a tie between the first
 

00:06:01.840 --> 00:06:03.350 align:start position:0%
then if there's a tie between the first
value<00:06:02.160><c> then</c><00:06:02.319><c> we</c><00:06:02.479><c> want</c><00:06:02.639><c> to</c><00:06:02.720><c> use</c><00:06:02.880><c> the</c><00:06:03.039><c> second</c>

00:06:03.350 --> 00:06:03.360 align:start position:0%
value then we want to use the second
 

00:06:03.360 --> 00:06:05.990 align:start position:0%
value then we want to use the second
value<00:06:03.840><c> as</c><00:06:04.160><c> our</c><00:06:04.400><c> sorting</c><00:06:04.880><c> keys</c><00:06:05.199><c> so</c><00:06:05.440><c> among</c><00:06:05.759><c> these</c>

00:06:05.990 --> 00:06:06.000 align:start position:0%
value as our sorting keys so among these
 

00:06:06.000 --> 00:06:08.230 align:start position:0%
value as our sorting keys so among these
two<00:06:06.160><c> which</c><00:06:06.400><c> is</c><00:06:06.479><c> going</c><00:06:06.560><c> to</c><00:06:06.639><c> come</c><00:06:06.880><c> first</c><00:06:07.199><c> sfo</c><00:06:07.759><c> or</c>

00:06:08.230 --> 00:06:08.240 align:start position:0%
two which is going to come first sfo or
 

00:06:08.240 --> 00:06:10.629 align:start position:0%
two which is going to come first sfo or
atl<00:06:08.880><c> of</c><00:06:08.960><c> course</c><00:06:09.199><c> atl</c><00:06:09.680><c> because</c><00:06:09.919><c> it</c><00:06:10.000><c> comes</c><00:06:10.240><c> first</c>

00:06:10.629 --> 00:06:10.639 align:start position:0%
atl of course atl because it comes first
 

00:06:10.639 --> 00:06:12.070 align:start position:0%
atl of course atl because it comes first
you<00:06:10.720><c> know</c><00:06:10.800><c> that's</c><00:06:11.039><c> just</c><00:06:11.199><c> something</c><00:06:11.600><c> to</c><00:06:11.840><c> keep</c>

00:06:12.070 --> 00:06:12.080 align:start position:0%
you know that's just something to keep
 

00:06:12.080 --> 00:06:14.390 align:start position:0%
you know that's just something to keep
in<00:06:12.240><c> mind</c><00:06:12.720><c> so</c><00:06:12.880><c> if</c><00:06:13.039><c> we</c><00:06:13.199><c> have</c><00:06:13.440><c> this</c><00:06:13.840><c> in</c><00:06:14.000><c> sorted</c>

00:06:14.390 --> 00:06:14.400 align:start position:0%
in mind so if we have this in sorted
 

00:06:14.400 --> 00:06:16.710 align:start position:0%
in mind so if we have this in sorted
order<00:06:14.880><c> then</c><00:06:15.280><c> our</c><00:06:15.440><c> adjacency</c><00:06:16.080><c> list</c><00:06:16.319><c> will</c><00:06:16.479><c> be</c>

00:06:16.710 --> 00:06:16.720 align:start position:0%
order then our adjacency list will be
 

00:06:16.720 --> 00:06:18.950 align:start position:0%
order then our adjacency list will be
sorted<00:06:17.199><c> by</c><00:06:17.440><c> default</c><00:06:18.240><c> right</c><00:06:18.400><c> and</c><00:06:18.560><c> i'm</c><00:06:18.720><c> actually</c>

00:06:18.950 --> 00:06:18.960 align:start position:0%
sorted by default right and i'm actually
 

00:06:18.960 --> 00:06:20.629 align:start position:0%
sorted by default right and i'm actually
going<00:06:19.120><c> to</c><00:06:19.199><c> build</c><00:06:19.360><c> this</c><00:06:19.520><c> adjacency</c><00:06:20.080><c> list</c><00:06:20.319><c> now</c>

00:06:20.629 --> 00:06:20.639 align:start position:0%
going to build this adjacency list now
 

00:06:20.639 --> 00:06:22.710 align:start position:0%
going to build this adjacency list now
assuming<00:06:21.039><c> that</c><00:06:21.199><c> this</c><00:06:21.440><c> thing</c><00:06:21.759><c> is</c><00:06:22.080><c> in</c><00:06:22.240><c> sorted</c>

00:06:22.710 --> 00:06:22.720 align:start position:0%
assuming that this thing is in sorted
 

00:06:22.720 --> 00:06:24.309 align:start position:0%
assuming that this thing is in sorted
order<00:06:23.199><c> or</c><00:06:23.360><c> at</c><00:06:23.440><c> least</c><00:06:23.680><c> i'm</c><00:06:23.759><c> going</c><00:06:23.840><c> to</c><00:06:23.919><c> be</c><00:06:24.080><c> going</c>

00:06:24.309 --> 00:06:24.319 align:start position:0%
order or at least i'm going to be going
 

00:06:24.319 --> 00:06:26.390 align:start position:0%
order or at least i'm going to be going
through<00:06:24.479><c> the</c><00:06:24.639><c> sorted</c><00:06:25.039><c> order</c><00:06:25.280><c> version</c><00:06:25.759><c> of</c><00:06:26.000><c> this</c>

00:06:26.390 --> 00:06:26.400 align:start position:0%
through the sorted order version of this
 

00:06:26.400 --> 00:06:28.710 align:start position:0%
through the sorted order version of this
uh<00:06:26.880><c> list</c><00:06:27.120><c> of</c><00:06:27.280><c> tickets</c><00:06:27.919><c> so</c><00:06:28.160><c> first</c><00:06:28.479><c> is</c><00:06:28.560><c> going</c><00:06:28.639><c> to</c>

00:06:28.710 --> 00:06:28.720 align:start position:0%
uh list of tickets so first is going to
 

00:06:28.720 --> 00:06:32.790 align:start position:0%
uh list of tickets so first is going to
be<00:06:29.199><c> atl</c><00:06:30.240><c> and</c><00:06:30.639><c> it</c><00:06:30.800><c> has</c><00:06:31.199><c> jfk</c><00:06:32.080><c> as</c><00:06:32.319><c> one</c><00:06:32.479><c> of</c><00:06:32.560><c> its</c>

00:06:32.790 --> 00:06:32.800 align:start position:0%
be atl and it has jfk as one of its
 

00:06:32.800 --> 00:06:35.029 align:start position:0%
be atl and it has jfk as one of its
destinations<00:06:33.280><c> so</c><00:06:33.440><c> let's</c><00:06:33.680><c> do</c><00:06:33.759><c> that</c><00:06:34.160><c> and</c><00:06:34.400><c> atl</c>

00:06:35.029 --> 00:06:35.039 align:start position:0%
destinations so let's do that and atl
 

00:06:35.039 --> 00:06:37.670 align:start position:0%
destinations so let's do that and atl
also<00:06:35.360><c> has</c><00:06:35.680><c> sfo</c><00:06:36.400><c> as</c><00:06:36.639><c> one</c><00:06:36.800><c> of</c><00:06:36.960><c> its</c><00:06:37.120><c> destinations</c>

00:06:37.670 --> 00:06:37.680 align:start position:0%
also has sfo as one of its destinations
 

00:06:37.680 --> 00:06:40.230 align:start position:0%
also has sfo as one of its destinations
so<00:06:37.840><c> let's</c><00:06:38.080><c> add</c><00:06:38.319><c> that</c><00:06:38.720><c> next</c><00:06:38.960><c> we</c><00:06:39.120><c> have</c><00:06:39.280><c> jfk</c><00:06:40.080><c> it</c>

00:06:40.230 --> 00:06:40.240 align:start position:0%
so let's add that next we have jfk it
 

00:06:40.240 --> 00:06:42.710 align:start position:0%
so let's add that next we have jfk it
has<00:06:40.479><c> atlanta</c><00:06:41.120><c> as</c><00:06:41.280><c> one</c><00:06:41.440><c> of</c><00:06:41.520><c> its</c><00:06:41.680><c> destinations</c>

00:06:42.710 --> 00:06:42.720 align:start position:0%
has atlanta as one of its destinations
 

00:06:42.720 --> 00:06:45.029 align:start position:0%
has atlanta as one of its destinations
and<00:06:42.960><c> it</c><00:06:43.120><c> also</c><00:06:43.360><c> has</c><00:06:43.759><c> sfo</c><00:06:44.400><c> as</c><00:06:44.560><c> one</c><00:06:44.720><c> of</c><00:06:44.800><c> its</c>

00:06:45.029 --> 00:06:45.039 align:start position:0%
and it also has sfo as one of its
 

00:06:45.039 --> 00:06:47.990 align:start position:0%
and it also has sfo as one of its
destinations<00:06:45.680><c> and</c><00:06:45.759><c> then</c><00:06:46.080><c> lastly</c><00:06:46.720><c> we</c><00:06:46.880><c> have</c><00:06:47.440><c> sfo</c>

00:06:47.990 --> 00:06:48.000 align:start position:0%
destinations and then lastly we have sfo
 

00:06:48.000 --> 00:06:49.749 align:start position:0%
destinations and then lastly we have sfo
which<00:06:48.240><c> only</c><00:06:48.479><c> has</c><00:06:48.639><c> one</c><00:06:48.880><c> destination</c><00:06:49.360><c> which</c><00:06:49.599><c> is</c>

00:06:49.749 --> 00:06:49.759 align:start position:0%
which only has one destination which is
 

00:06:49.759 --> 00:06:52.230 align:start position:0%
which only has one destination which is
atl<00:06:50.400><c> so</c><00:06:50.560><c> let's</c><00:06:50.800><c> add</c><00:06:51.120><c> that</c><00:06:51.520><c> so</c><00:06:51.680><c> now</c><00:06:51.840><c> we're</c><00:06:52.080><c> gonna</c>

00:06:52.230 --> 00:06:52.240 align:start position:0%
atl so let's add that so now we're gonna
 

00:06:52.240 --> 00:06:54.790 align:start position:0%
atl so let's add that so now we're gonna
start<00:06:52.479><c> running</c><00:06:52.800><c> our</c><00:06:52.960><c> dfs</c><00:06:53.840><c> so</c><00:06:54.000><c> let's</c><00:06:54.240><c> focus</c><00:06:54.639><c> on</c>

00:06:54.790 --> 00:06:54.800 align:start position:0%
start running our dfs so let's focus on
 

00:06:54.800 --> 00:06:56.150 align:start position:0%
start running our dfs so let's focus on
the<00:06:54.960><c> picture</c><00:06:55.360><c> now</c><00:06:55.520><c> so</c><00:06:55.680><c> we're</c><00:06:55.840><c> gonna</c><00:06:56.000><c> be</c>

00:06:56.150 --> 00:06:56.160 align:start position:0%
the picture now so we're gonna be
 

00:06:56.160 --> 00:06:58.629 align:start position:0%
the picture now so we're gonna be
starting<00:06:56.720><c> at</c><00:06:56.960><c> jfk</c><00:06:57.840><c> you</c><00:06:57.919><c> know</c><00:06:58.080><c> we</c><00:06:58.160><c> have</c><00:06:58.319><c> two</c>

00:06:58.629 --> 00:06:58.639 align:start position:0%
starting at jfk you know we have two
 

00:06:58.639 --> 00:07:00.629 align:start position:0%
starting at jfk you know we have two
outgoing<00:06:59.039><c> edges</c><00:06:59.360><c> from</c><00:06:59.520><c> jfk</c><00:07:00.000><c> we</c><00:07:00.160><c> could</c><00:07:00.319><c> go</c><00:07:00.479><c> to</c>

00:07:00.629 --> 00:07:00.639 align:start position:0%
outgoing edges from jfk we could go to
 

00:07:00.639 --> 00:07:03.430 align:start position:0%
outgoing edges from jfk we could go to
sfo<00:07:01.199><c> or</c><00:07:01.360><c> we</c><00:07:01.520><c> could</c><00:07:01.680><c> go</c><00:07:01.919><c> to</c><00:07:02.160><c> atl</c><00:07:02.960><c> which</c><00:07:03.199><c> one</c><00:07:03.360><c> are</c>

00:07:03.430 --> 00:07:03.440 align:start position:0%
sfo or we could go to atl which one are
 

00:07:03.440 --> 00:07:04.710 align:start position:0%
sfo or we could go to atl which one are
we<00:07:03.599><c> going</c><00:07:03.680><c> to</c><00:07:03.759><c> decide</c><00:07:04.160><c> well</c><00:07:04.319><c> we're</c><00:07:04.479><c> going</c><00:07:04.560><c> to</c>

00:07:04.710 --> 00:07:04.720 align:start position:0%
we going to decide well we're going to
 

00:07:04.720 --> 00:07:06.629 align:start position:0%
we going to decide well we're going to
look<00:07:04.960><c> at</c><00:07:05.120><c> our</c><00:07:05.360><c> adjacency</c><00:07:06.000><c> list</c><00:07:06.240><c> and</c><00:07:06.319><c> see</c><00:07:06.479><c> which</c>

00:07:06.629 --> 00:07:06.639 align:start position:0%
look at our adjacency list and see which
 

00:07:06.639 --> 00:07:09.350 align:start position:0%
look at our adjacency list and see which
one<00:07:06.800><c> comes</c><00:07:07.039><c> first</c><00:07:07.360><c> well</c><00:07:07.599><c> atl</c><00:07:08.080><c> comes</c><00:07:08.400><c> first</c><00:07:08.960><c> so</c>

00:07:09.350 --> 00:07:09.360 align:start position:0%
one comes first well atl comes first so
 

00:07:09.360 --> 00:07:11.270 align:start position:0%
one comes first well atl comes first so
let's<00:07:09.680><c> visit</c><00:07:10.080><c> atl</c><00:07:10.479><c> so</c><00:07:10.639><c> we're</c><00:07:10.720><c> going</c><00:07:10.880><c> to</c><00:07:11.039><c> go</c>

00:07:11.270 --> 00:07:11.280 align:start position:0%
let's visit atl so we're going to go
 

00:07:11.280 --> 00:07:13.510 align:start position:0%
let's visit atl so we're going to go
along<00:07:11.919><c> this</c><00:07:12.319><c> edge</c><00:07:12.800><c> and</c><00:07:12.960><c> now</c><00:07:13.120><c> we're</c><00:07:13.280><c> going</c><00:07:13.440><c> to</c>

00:07:13.510 --> 00:07:13.520 align:start position:0%
along this edge and now we're going to
 

00:07:13.520 --> 00:07:16.390 align:start position:0%
along this edge and now we're going to
be<00:07:14.000><c> at</c><00:07:14.240><c> atl</c><00:07:15.039><c> and</c><00:07:15.199><c> when</c><00:07:15.360><c> we</c><00:07:15.599><c> do</c><00:07:15.919><c> that</c><00:07:16.240><c> we're</c>

00:07:16.390 --> 00:07:16.400 align:start position:0%
be at atl and when we do that we're
 

00:07:16.400 --> 00:07:18.790 align:start position:0%
be at atl and when we do that we're
actually<00:07:16.639><c> going</c><00:07:16.800><c> to</c><00:07:16.880><c> remove</c><00:07:17.840><c> atl</c><00:07:18.400><c> from</c><00:07:18.639><c> our</c>

00:07:18.790 --> 00:07:18.800 align:start position:0%
actually going to remove atl from our
 

00:07:18.800 --> 00:07:21.670 align:start position:0%
actually going to remove atl from our
adjacency<00:07:19.440><c> list</c><00:07:19.759><c> at</c><00:07:19.840><c> least</c><00:07:20.160><c> temporarily</c><00:07:21.440><c> for</c>

00:07:21.670 --> 00:07:21.680 align:start position:0%
adjacency list at least temporarily for
 

00:07:21.680 --> 00:07:23.990 align:start position:0%
adjacency list at least temporarily for
now<00:07:22.319><c> and</c><00:07:22.479><c> by</c><00:07:22.639><c> the</c><00:07:22.720><c> way</c><00:07:22.960><c> as</c><00:07:23.199><c> we</c><00:07:23.520><c> you</c><00:07:23.680><c> know</c><00:07:23.759><c> go</c>

00:07:23.990 --> 00:07:24.000 align:start position:0%
now and by the way as we you know go
 

00:07:24.000 --> 00:07:25.110 align:start position:0%
now and by the way as we you know go
along<00:07:24.240><c> this</c><00:07:24.400><c> we're</c><00:07:24.560><c> also</c><00:07:24.800><c> going</c><00:07:24.880><c> to</c><00:07:24.960><c> be</c>

00:07:25.110 --> 00:07:25.120 align:start position:0%
along this we're also going to be
 

00:07:25.120 --> 00:07:26.870 align:start position:0%
along this we're also going to be
building<00:07:25.440><c> our</c><00:07:25.680><c> result</c><00:07:26.080><c> our</c><00:07:26.240><c> result</c><00:07:26.639><c> is</c><00:07:26.720><c> just</c>

00:07:26.870 --> 00:07:26.880 align:start position:0%
building our result our result is just
 

00:07:26.880 --> 00:07:28.469 align:start position:0%
building our result our result is just
going<00:07:26.960><c> to</c><00:07:27.039><c> be</c><00:07:27.199><c> you</c><00:07:27.280><c> know</c><00:07:27.440><c> the</c><00:07:27.520><c> travel</c><00:07:27.919><c> history</c>

00:07:28.469 --> 00:07:28.479 align:start position:0%
going to be you know the travel history
 

00:07:28.479 --> 00:07:30.230 align:start position:0%
going to be you know the travel history
of<00:07:28.560><c> these</c><00:07:28.880><c> airports</c><00:07:29.360><c> we</c><00:07:29.520><c> know</c><00:07:29.759><c> initially</c><00:07:30.160><c> we</c>

00:07:30.230 --> 00:07:30.240 align:start position:0%
of these airports we know initially we
 

00:07:30.240 --> 00:07:32.150 align:start position:0%
of these airports we know initially we
start<00:07:30.479><c> at</c><00:07:30.560><c> jfk</c><00:07:31.280><c> and</c><00:07:31.520><c> right</c><00:07:31.680><c> now</c><00:07:31.840><c> we</c><00:07:32.000><c> just</c>

00:07:32.150 --> 00:07:32.160 align:start position:0%
start at jfk and right now we just
 

00:07:32.160 --> 00:07:34.629 align:start position:0%
start at jfk and right now we just
visited<00:07:32.639><c> atl</c><00:07:33.199><c> so</c><00:07:33.280><c> that's</c><00:07:33.520><c> going</c><00:07:33.599><c> to</c><00:07:33.680><c> come</c><00:07:34.000><c> next</c>

00:07:34.629 --> 00:07:34.639 align:start position:0%
visited atl so that's going to come next
 

00:07:34.639 --> 00:07:37.350 align:start position:0%
visited atl so that's going to come next
okay<00:07:34.880><c> now</c><00:07:35.120><c> from</c><00:07:35.360><c> atl</c><00:07:36.080><c> we</c><00:07:36.319><c> have</c><00:07:36.639><c> two</c><00:07:36.960><c> outgoing</c>

00:07:37.350 --> 00:07:37.360 align:start position:0%
okay now from atl we have two outgoing
 

00:07:37.360 --> 00:07:39.189 align:start position:0%
okay now from atl we have two outgoing
edges<00:07:37.599><c> we</c><00:07:37.759><c> could</c><00:07:37.919><c> go</c><00:07:38.000><c> to</c><00:07:38.160><c> sfo</c><00:07:38.639><c> or</c><00:07:38.800><c> we</c><00:07:38.960><c> could</c><00:07:39.039><c> go</c>

00:07:39.189 --> 00:07:39.199 align:start position:0%
edges we could go to sfo or we could go
 

00:07:39.199 --> 00:07:40.950 align:start position:0%
edges we could go to sfo or we could go
to<00:07:39.280><c> jfk</c><00:07:39.840><c> which</c><00:07:40.000><c> one</c><00:07:40.160><c> are</c><00:07:40.240><c> we</c><00:07:40.319><c> going</c><00:07:40.400><c> to</c><00:07:40.479><c> decide</c>

00:07:40.950 --> 00:07:40.960 align:start position:0%
to jfk which one are we going to decide
 

00:07:40.960 --> 00:07:42.550 align:start position:0%
to jfk which one are we going to decide
well<00:07:41.120><c> let's</c><00:07:41.280><c> see</c><00:07:41.440><c> which</c><00:07:41.680><c> one</c><00:07:41.840><c> comes</c><00:07:42.080><c> first</c><00:07:42.400><c> in</c>

00:07:42.550 --> 00:07:42.560 align:start position:0%
well let's see which one comes first in
 

00:07:42.560 --> 00:07:45.270 align:start position:0%
well let's see which one comes first in
sorted<00:07:42.880><c> order</c><00:07:43.199><c> it's</c><00:07:43.360><c> jfk</c><00:07:43.840><c> so</c><00:07:44.000><c> let's</c><00:07:44.080><c> go</c><00:07:44.240><c> to</c><00:07:44.319><c> jfk</c>

00:07:45.270 --> 00:07:45.280 align:start position:0%
sorted order it's jfk so let's go to jfk
 

00:07:45.280 --> 00:07:47.909 align:start position:0%
sorted order it's jfk so let's go to jfk
next<00:07:45.759><c> so</c><00:07:46.000><c> we're</c><00:07:46.400><c> going</c><00:07:46.800><c> back</c><00:07:46.960><c> to</c><00:07:47.120><c> jfk</c><00:07:47.599><c> so</c><00:07:47.759><c> we</c>

00:07:47.909 --> 00:07:47.919 align:start position:0%
next so we're going back to jfk so we
 

00:07:47.919 --> 00:07:49.830 align:start position:0%
next so we're going back to jfk so we
visited<00:07:48.400><c> both</c><00:07:48.639><c> of</c><00:07:48.720><c> these</c><00:07:48.960><c> two</c><00:07:49.280><c> edges</c><00:07:49.680><c> and</c>

00:07:49.830 --> 00:07:49.840 align:start position:0%
visited both of these two edges and
 

00:07:49.840 --> 00:07:52.309 align:start position:0%
visited both of these two edges and
let's<00:07:50.080><c> remove</c><00:07:50.560><c> jfk</c><00:07:51.360><c> as</c><00:07:51.599><c> an</c>

00:07:52.309 --> 00:07:52.319 align:start position:0%
let's remove jfk as an
 

00:07:52.319 --> 00:07:55.029 align:start position:0%
let's remove jfk as an
as<00:07:52.479><c> a</c><00:07:52.560><c> destination</c><00:07:53.199><c> from</c><00:07:53.520><c> atlanta</c><00:07:54.319><c> and</c><00:07:54.720><c> in</c><00:07:54.879><c> our</c>

00:07:55.029 --> 00:07:55.039 align:start position:0%
as a destination from atlanta and in our
 

00:07:55.039 --> 00:07:58.230 align:start position:0%
as a destination from atlanta and in our
result<00:07:55.520><c> now</c><00:07:55.680><c> let's</c><00:07:55.919><c> add</c><00:07:56.160><c> jfk</c><00:07:57.120><c> again</c><00:07:57.840><c> because</c>

00:07:58.230 --> 00:07:58.240 align:start position:0%
result now let's add jfk again because
 

00:07:58.240 --> 00:07:59.909 align:start position:0%
result now let's add jfk again because
we<00:07:58.479><c> started</c><00:07:58.800><c> at</c><00:07:58.879><c> jfk</c><00:07:59.360><c> then</c><00:07:59.520><c> we</c><00:07:59.599><c> went</c><00:07:59.759><c> to</c>

00:07:59.909 --> 00:07:59.919 align:start position:0%
we started at jfk then we went to
 

00:07:59.919 --> 00:08:02.469 align:start position:0%
we started at jfk then we went to
atlanta<00:08:00.240><c> then</c><00:08:00.400><c> we're</c><00:08:00.639><c> back</c><00:08:00.800><c> at</c><00:08:00.960><c> jfk</c><00:08:01.759><c> now</c><00:08:02.240><c> from</c>

00:08:02.469 --> 00:08:02.479 align:start position:0%
atlanta then we're back at jfk now from
 

00:08:02.479 --> 00:08:04.550 align:start position:0%
atlanta then we're back at jfk now from
jfk<00:08:02.960><c> we</c><00:08:03.120><c> only</c><00:08:03.280><c> have</c><00:08:03.520><c> one</c><00:08:03.919><c> outgoing</c><00:08:04.319><c> edge</c>

00:08:04.550 --> 00:08:04.560 align:start position:0%
jfk we only have one outgoing edge
 

00:08:04.560 --> 00:08:06.950 align:start position:0%
jfk we only have one outgoing edge
remaining<00:08:05.120><c> sfo</c><00:08:05.840><c> and</c><00:08:06.000><c> that</c><00:08:06.319><c> you</c><00:08:06.400><c> can</c><00:08:06.560><c> tell</c><00:08:06.800><c> from</c>

00:08:06.950 --> 00:08:06.960 align:start position:0%
remaining sfo and that you can tell from
 

00:08:06.960 --> 00:08:09.110 align:start position:0%
remaining sfo and that you can tell from
our<00:08:07.120><c> adjacency</c><00:08:07.680><c> list</c><00:08:08.000><c> as</c><00:08:08.080><c> well</c><00:08:08.240><c> so</c><00:08:08.400><c> let's</c><00:08:08.800><c> pop</c>

00:08:09.110 --> 00:08:09.120 align:start position:0%
our adjacency list as well so let's pop
 

00:08:09.120 --> 00:08:12.070 align:start position:0%
our adjacency list as well so let's pop
sfo<00:08:09.919><c> now</c><00:08:10.240><c> we're</c><00:08:10.720><c> at</c><00:08:10.960><c> sfo</c><00:08:11.440><c> let's</c><00:08:11.599><c> add</c><00:08:11.759><c> that</c><00:08:11.919><c> to</c>

00:08:12.070 --> 00:08:12.080 align:start position:0%
sfo now we're at sfo let's add that to
 

00:08:12.080 --> 00:08:14.869 align:start position:0%
sfo now we're at sfo let's add that to
our<00:08:12.240><c> result</c><00:08:12.800><c> as</c><00:08:13.039><c> well</c><00:08:13.599><c> now</c><00:08:13.759><c> from</c><00:08:14.080><c> sfo</c><00:08:14.560><c> we</c><00:08:14.720><c> only</c>

00:08:14.869 --> 00:08:14.879 align:start position:0%
our result as well now from sfo we only
 

00:08:14.879 --> 00:08:16.629 align:start position:0%
our result as well now from sfo we only
have<00:08:15.039><c> one</c><00:08:15.280><c> destination</c><00:08:16.000><c> it</c><00:08:16.080><c> makes</c><00:08:16.319><c> things</c>

00:08:16.629 --> 00:08:16.639 align:start position:0%
have one destination it makes things
 

00:08:16.639 --> 00:08:19.589 align:start position:0%
have one destination it makes things
easy<00:08:16.879><c> for</c><00:08:17.039><c> us</c><00:08:17.440><c> that's</c><00:08:17.840><c> atlanta</c><00:08:18.400><c> so</c><00:08:18.720><c> let's</c><00:08:19.280><c> pop</c>

00:08:19.589 --> 00:08:19.599 align:start position:0%
easy for us that's atlanta so let's pop
 

00:08:19.599 --> 00:08:21.749 align:start position:0%
easy for us that's atlanta so let's pop
atlanta<00:08:20.000><c> from</c><00:08:20.240><c> here</c><00:08:20.639><c> let's</c><00:08:20.879><c> go</c><00:08:21.120><c> along</c><00:08:21.440><c> that</c>

00:08:21.749 --> 00:08:21.759 align:start position:0%
atlanta from here let's go along that
 

00:08:21.759 --> 00:08:26.390 align:start position:0%
atlanta from here let's go along that
edge<00:08:22.319><c> and</c><00:08:22.560><c> let's</c><00:08:22.879><c> add</c><00:08:23.599><c> atl</c><00:08:24.560><c> to</c><00:08:24.960><c> our</c><00:08:25.440><c> result</c><00:08:26.160><c> and</c>

00:08:26.390 --> 00:08:26.400 align:start position:0%
edge and let's add atl to our result and
 

00:08:26.400 --> 00:08:28.790 align:start position:0%
edge and let's add atl to our result and
from<00:08:26.639><c> atl</c><00:08:27.120><c> now</c><00:08:27.280><c> we</c><00:08:27.520><c> only</c><00:08:27.759><c> have</c><00:08:27.919><c> another</c><00:08:28.639><c> a</c>

00:08:28.790 --> 00:08:28.800 align:start position:0%
from atl now we only have another a
 

00:08:28.800 --> 00:08:31.430 align:start position:0%
from atl now we only have another a
single<00:08:29.199><c> edge</c><00:08:29.840><c> outgoing</c><00:08:30.479><c> it's</c><00:08:30.639><c> to</c><00:08:30.879><c> sfo</c><00:08:31.280><c> so</c>

00:08:31.430 --> 00:08:31.440 align:start position:0%
single edge outgoing it's to sfo so
 

00:08:31.440 --> 00:08:34.389 align:start position:0%
single edge outgoing it's to sfo so
let's<00:08:31.680><c> pop</c><00:08:31.919><c> sfo</c><00:08:32.560><c> travel</c><00:08:32.880><c> along</c><00:08:33.200><c> that</c><00:08:33.519><c> edge</c><00:08:34.080><c> and</c>

00:08:34.389 --> 00:08:34.399 align:start position:0%
let's pop sfo travel along that edge and
 

00:08:34.399 --> 00:08:38.149 align:start position:0%
let's pop sfo travel along that edge and
add<00:08:34.880><c> sfo</c><00:08:35.440><c> to</c><00:08:35.839><c> our</c><00:08:36.479><c> result</c><00:08:37.120><c> so</c><00:08:37.279><c> this</c><00:08:37.599><c> was</c><00:08:38.000><c> a</c>

00:08:38.149 --> 00:08:38.159 align:start position:0%
add sfo to our result so this was a
 

00:08:38.159 --> 00:08:41.190 align:start position:0%
add sfo to our result so this was a
valid<00:08:38.560><c> way</c><00:08:38.880><c> because</c><00:08:39.519><c> we</c><00:08:39.839><c> just</c><00:08:40.159><c> visited</c><00:08:40.880><c> every</c>

00:08:41.190 --> 00:08:41.200 align:start position:0%
valid way because we just visited every
 

00:08:41.200 --> 00:08:43.670 align:start position:0%
valid way because we just visited every
single<00:08:41.680><c> edge</c><00:08:42.080><c> how</c><00:08:42.399><c> exactly</c><00:08:42.800><c> do</c><00:08:42.959><c> we</c><00:08:43.279><c> know</c><00:08:43.519><c> we</c>

00:08:43.670 --> 00:08:43.680 align:start position:0%
single edge how exactly do we know we
 

00:08:43.680 --> 00:08:45.590 align:start position:0%
single edge how exactly do we know we
visited<00:08:44.080><c> every</c><00:08:44.240><c> single</c><00:08:44.560><c> edge</c><00:08:44.880><c> though</c><00:08:45.120><c> well</c>

00:08:45.590 --> 00:08:45.600 align:start position:0%
visited every single edge though well
 

00:08:45.600 --> 00:08:47.990 align:start position:0%
visited every single edge though well
our<00:08:46.000><c> result</c><00:08:46.720><c> is</c><00:08:46.800><c> going</c><00:08:46.959><c> to</c><00:08:47.040><c> be</c><00:08:47.279><c> keeping</c><00:08:47.680><c> track</c>

00:08:47.990 --> 00:08:48.000 align:start position:0%
our result is going to be keeping track
 

00:08:48.000 --> 00:08:51.269 align:start position:0%
our result is going to be keeping track
of<00:08:48.480><c> all</c><00:08:48.720><c> of</c><00:08:48.959><c> the</c><00:08:49.680><c> nodes</c><00:08:50.080><c> that</c><00:08:50.240><c> we</c><00:08:50.399><c> visited</c><00:08:51.120><c> in</c>

00:08:51.269 --> 00:08:51.279 align:start position:0%
of all of the nodes that we visited in
 

00:08:51.279 --> 00:08:53.670 align:start position:0%
of all of the nodes that we visited in
our<00:08:51.440><c> graph</c><00:08:51.839><c> right</c><00:08:52.080><c> not</c><00:08:52.320><c> the</c><00:08:52.560><c> edges</c><00:08:53.279><c> we</c><00:08:53.440><c> know</c>

00:08:53.670 --> 00:08:53.680 align:start position:0%
our graph right not the edges we know
 

00:08:53.680 --> 00:08:55.350 align:start position:0%
our graph right not the edges we know
every<00:08:53.920><c> time</c><00:08:54.080><c> we</c><00:08:54.320><c> visit</c><00:08:54.640><c> one</c><00:08:54.800><c> of</c><00:08:54.880><c> the</c><00:08:55.040><c> edges</c>

00:08:55.350 --> 00:08:55.360 align:start position:0%
every time we visit one of the edges
 

00:08:55.360 --> 00:08:58.070 align:start position:0%
every time we visit one of the edges
we're<00:08:55.519><c> going</c><00:08:55.519><c> to</c><00:08:55.600><c> be</c><00:08:55.839><c> adding</c><00:08:56.240><c> another</c><00:08:57.279><c> node</c><00:08:57.839><c> to</c>

00:08:58.070 --> 00:08:58.080 align:start position:0%
we're going to be adding another node to
 

00:08:58.080 --> 00:09:00.630 align:start position:0%
we're going to be adding another node to
our<00:08:58.399><c> result</c><00:08:58.880><c> and</c><00:08:59.040><c> we</c><00:08:59.279><c> know</c><00:08:59.839><c> that</c><00:09:00.080><c> we</c><00:09:00.240><c> actually</c>

00:09:00.630 --> 00:09:00.640 align:start position:0%
our result and we know that we actually
 

00:09:00.640 --> 00:09:02.630 align:start position:0%
our result and we know that we actually
initially<00:09:01.200><c> start</c><00:09:01.519><c> with</c><00:09:01.680><c> a</c><00:09:01.839><c> single</c><00:09:02.240><c> node</c><00:09:02.480><c> which</c>

00:09:02.630 --> 00:09:02.640 align:start position:0%
initially start with a single node which
 

00:09:02.640 --> 00:09:05.269 align:start position:0%
initially start with a single node which
is<00:09:02.720><c> jfk</c><00:09:03.279><c> before</c><00:09:03.680><c> we</c><00:09:03.839><c> even</c><00:09:04.160><c> travel</c><00:09:04.560><c> along</c><00:09:05.040><c> any</c>

00:09:05.269 --> 00:09:05.279 align:start position:0%
is jfk before we even travel along any
 

00:09:05.279 --> 00:09:07.910 align:start position:0%
is jfk before we even travel along any
edges<00:09:05.680><c> right</c><00:09:05.839><c> we</c><00:09:06.000><c> start</c><00:09:06.240><c> at</c><00:09:06.399><c> jfk</c><00:09:07.040><c> so</c><00:09:07.279><c> basically</c>

00:09:07.910 --> 00:09:07.920 align:start position:0%
edges right we start at jfk so basically
 

00:09:07.920 --> 00:09:10.550 align:start position:0%
edges right we start at jfk so basically
we<00:09:08.160><c> know</c><00:09:08.399><c> we</c><00:09:08.560><c> are</c><00:09:08.720><c> finished</c><00:09:09.279><c> when</c><00:09:09.680><c> the</c><00:09:10.080><c> length</c>

00:09:10.550 --> 00:09:10.560 align:start position:0%
we know we are finished when the length
 

00:09:10.560 --> 00:09:13.670 align:start position:0%
we know we are finished when the length
of<00:09:10.720><c> our</c><00:09:10.959><c> results</c><00:09:11.680><c> array</c><00:09:12.399><c> is</c><00:09:12.720><c> equal</c><00:09:13.360><c> so</c><00:09:13.519><c> i'll</c>

00:09:13.670 --> 00:09:13.680 align:start position:0%
of our results array is equal so i'll
 

00:09:13.680 --> 00:09:15.990 align:start position:0%
of our results array is equal so i'll
write<00:09:13.839><c> it</c><00:09:14.000><c> out</c><00:09:14.160><c> is</c><00:09:14.399><c> equal</c><00:09:14.959><c> to</c><00:09:15.120><c> the</c><00:09:15.440><c> length</c><00:09:15.839><c> of</c>

00:09:15.990 --> 00:09:16.000 align:start position:0%
write it out is equal to the length of
 

00:09:16.000 --> 00:09:18.230 align:start position:0%
write it out is equal to the length of
our<00:09:16.320><c> tickets</c><00:09:17.279><c> plus</c>

00:09:18.230 --> 00:09:18.240 align:start position:0%
our tickets plus
 

00:09:18.240 --> 00:09:20.870 align:start position:0%
our tickets plus
1.<00:09:18.800><c> so</c><00:09:19.040><c> down</c><00:09:19.279><c> here</c><00:09:19.440><c> you</c><00:09:19.519><c> can</c><00:09:19.680><c> see</c><00:09:20.240><c> when</c><00:09:20.480><c> length</c>

00:09:20.870 --> 00:09:20.880 align:start position:0%
1. so down here you can see when length
 

00:09:20.880 --> 00:09:22.550 align:start position:0%
1. so down here you can see when length
of<00:09:21.120><c> result</c><00:09:21.440><c> is</c><00:09:21.600><c> equal</c><00:09:21.760><c> to</c><00:09:21.839><c> length</c><00:09:22.080><c> of</c><00:09:22.160><c> tickets</c>

00:09:22.550 --> 00:09:22.560 align:start position:0%
of result is equal to length of tickets
 

00:09:22.560 --> 00:09:24.470 align:start position:0%
of result is equal to length of tickets
plus<00:09:22.800><c> one</c><00:09:23.040><c> that's</c><00:09:23.279><c> how</c><00:09:23.440><c> we</c><00:09:23.600><c> know</c><00:09:24.000><c> that</c><00:09:24.160><c> we</c><00:09:24.320><c> are</c>

00:09:24.470 --> 00:09:24.480 align:start position:0%
plus one that's how we know that we are
 

00:09:24.480 --> 00:09:26.470 align:start position:0%
plus one that's how we know that we are
done<00:09:24.880><c> the</c><00:09:25.200><c> plus</c><00:09:25.440><c> one</c><00:09:25.760><c> comes</c><00:09:26.000><c> from</c><00:09:26.160><c> the</c><00:09:26.240><c> fact</c>

00:09:26.470 --> 00:09:26.480 align:start position:0%
done the plus one comes from the fact
 

00:09:26.480 --> 00:09:29.190 align:start position:0%
done the plus one comes from the fact
that<00:09:26.560><c> we</c><00:09:26.880><c> already</c><00:09:27.360><c> start</c><00:09:27.680><c> with</c><00:09:27.839><c> a</c><00:09:28.000><c> single</c><00:09:28.800><c> uh</c>

00:09:29.190 --> 00:09:29.200 align:start position:0%
that we already start with a single uh
 

00:09:29.200 --> 00:09:31.030 align:start position:0%
that we already start with a single uh
node<00:09:29.600><c> in</c><00:09:29.760><c> our</c><00:09:29.839><c> result</c><00:09:30.240><c> array</c><00:09:30.560><c> and</c><00:09:30.640><c> then</c><00:09:30.800><c> every</c>

00:09:31.030 --> 00:09:31.040 align:start position:0%
node in our result array and then every
 

00:09:31.040 --> 00:09:33.110 align:start position:0%
node in our result array and then every
other<00:09:31.200><c> node</c><00:09:31.519><c> comes</c><00:09:31.839><c> from</c><00:09:32.320><c> traveling</c><00:09:32.720><c> along</c>

00:09:33.110 --> 00:09:33.120 align:start position:0%
other node comes from traveling along
 

00:09:33.120 --> 00:09:35.190 align:start position:0%
other node comes from traveling along
one<00:09:33.279><c> of</c><00:09:33.360><c> the</c><00:09:33.519><c> edges</c><00:09:34.000><c> in</c><00:09:34.160><c> our</c><00:09:34.320><c> graph</c><00:09:34.720><c> so</c><00:09:34.880><c> that's</c>

00:09:35.190 --> 00:09:35.200 align:start position:0%
one of the edges in our graph so that's
 

00:09:35.200 --> 00:09:37.110 align:start position:0%
one of the edges in our graph so that's
the<00:09:35.360><c> main</c><00:09:35.600><c> idea</c><00:09:36.000><c> now</c><00:09:36.240><c> in</c><00:09:36.320><c> this</c><00:09:36.560><c> example</c><00:09:36.959><c> it</c><00:09:37.040><c> was</c>

00:09:37.110 --> 00:09:37.120 align:start position:0%
the main idea now in this example it was
 

00:09:37.120 --> 00:09:39.269 align:start position:0%
the main idea now in this example it was
kind<00:09:37.279><c> of</c><00:09:37.440><c> simple</c><00:09:37.839><c> for</c><00:09:38.000><c> us</c><00:09:38.240><c> because</c><00:09:38.480><c> the</c><00:09:38.720><c> first</c>

00:09:39.269 --> 00:09:39.279 align:start position:0%
kind of simple for us because the first
 

00:09:39.279 --> 00:09:41.110 align:start position:0%
kind of simple for us because the first
you<00:09:39.360><c> know</c><00:09:39.600><c> solution</c><00:09:40.080><c> ended</c><00:09:40.320><c> up</c><00:09:40.560><c> working</c><00:09:40.959><c> the</c>

00:09:41.110 --> 00:09:41.120 align:start position:0%
you know solution ended up working the
 

00:09:41.120 --> 00:09:42.630 align:start position:0%
you know solution ended up working the
first<00:09:41.440><c> path</c><00:09:41.760><c> that</c><00:09:41.839><c> we</c><00:09:42.000><c> tried</c><00:09:42.320><c> ended</c><00:09:42.560><c> up</c>

00:09:42.630 --> 00:09:42.640 align:start position:0%
first path that we tried ended up
 

00:09:42.640 --> 00:09:44.550 align:start position:0%
first path that we tried ended up
working<00:09:42.959><c> but</c><00:09:43.120><c> if</c><00:09:43.279><c> it</c><00:09:43.519><c> didn't</c><00:09:44.000><c> suppose</c><00:09:44.399><c> we</c>

00:09:44.550 --> 00:09:44.560 align:start position:0%
working but if it didn't suppose we
 

00:09:44.560 --> 00:09:45.910 align:start position:0%
working but if it didn't suppose we
actually<00:09:44.800><c> had</c><00:09:45.040><c> a</c><00:09:45.120><c> graph</c><00:09:45.360><c> that</c><00:09:45.519><c> looked</c><00:09:45.760><c> like</c>

00:09:45.910 --> 00:09:45.920 align:start position:0%
actually had a graph that looked like
 

00:09:45.920 --> 00:09:47.590 align:start position:0%
actually had a graph that looked like
this<00:09:46.080><c> one</c><00:09:46.320><c> and</c><00:09:46.399><c> let's</c><00:09:46.560><c> say</c><00:09:46.720><c> we</c><00:09:46.880><c> started</c><00:09:47.279><c> at</c><00:09:47.440><c> the</c>

00:09:47.590 --> 00:09:47.600 align:start position:0%
this one and let's say we started at the
 

00:09:47.600 --> 00:09:50.150 align:start position:0%
this one and let's say we started at the
a<00:09:48.160><c> node</c><00:09:48.640><c> in</c><00:09:48.720><c> this</c><00:09:48.959><c> case</c><00:09:49.279><c> we</c><00:09:49.440><c> have</c><00:09:49.519><c> two</c><00:09:49.760><c> choices</c>

00:09:50.150 --> 00:09:50.160 align:start position:0%
a node in this case we have two choices
 

00:09:50.160 --> 00:09:51.590 align:start position:0%
a node in this case we have two choices
of<00:09:50.240><c> where</c><00:09:50.399><c> we</c><00:09:50.560><c> could</c><00:09:50.640><c> go</c><00:09:50.800><c> we</c><00:09:50.959><c> could</c><00:09:51.120><c> go</c><00:09:51.200><c> to</c><00:09:51.360><c> c</c>

00:09:51.590 --> 00:09:51.600 align:start position:0%
of where we could go we could go to c
 

00:09:51.600 --> 00:09:53.350 align:start position:0%
of where we could go we could go to c
first<00:09:51.920><c> or</c><00:09:52.080><c> we</c><00:09:52.240><c> could</c><00:09:52.399><c> go</c><00:09:52.560><c> to</c><00:09:52.640><c> b</c><00:09:52.880><c> first</c><00:09:53.200><c> we're</c>

00:09:53.350 --> 00:09:53.360 align:start position:0%
first or we could go to b first we're
 

00:09:53.360 --> 00:09:55.430 align:start position:0%
first or we could go to b first we're
going<00:09:53.440><c> to</c><00:09:53.600><c> choose</c><00:09:54.000><c> b</c><00:09:54.320><c> because</c><00:09:54.560><c> it</c><00:09:54.720><c> comes</c><00:09:55.040><c> first</c>

00:09:55.430 --> 00:09:55.440 align:start position:0%
going to choose b because it comes first
 

00:09:55.440 --> 00:09:57.350 align:start position:0%
going to choose b because it comes first
in<00:09:55.600><c> lexical</c><00:09:56.080><c> order</c><00:09:56.320><c> compared</c><00:09:56.720><c> to</c><00:09:56.800><c> c</c><00:09:57.040><c> so</c><00:09:57.200><c> we</c>

00:09:57.350 --> 00:09:57.360 align:start position:0%
in lexical order compared to c so we
 

00:09:57.360 --> 00:09:59.590 align:start position:0%
in lexical order compared to c so we
travel<00:09:57.839><c> along</c><00:09:58.240><c> this</c><00:09:58.560><c> edge</c><00:09:58.959><c> and</c><00:09:59.120><c> we</c><00:09:59.279><c> end</c><00:09:59.440><c> up</c>

00:09:59.590 --> 00:09:59.600 align:start position:0%
travel along this edge and we end up
 

00:09:59.600 --> 00:10:02.550 align:start position:0%
travel along this edge and we end up
visiting<00:10:00.000><c> the</c><00:10:00.160><c> b</c><00:10:00.720><c> okay</c><00:10:01.279><c> well</c><00:10:01.519><c> now</c><00:10:02.000><c> we're</c><00:10:02.240><c> stuck</c>

00:10:02.550 --> 00:10:02.560 align:start position:0%
visiting the b okay well now we're stuck
 

00:10:02.560 --> 00:10:04.470 align:start position:0%
visiting the b okay well now we're stuck
here<00:10:02.800><c> there's</c><00:10:02.959><c> no</c><00:10:03.279><c> outgoing</c><00:10:03.680><c> edges</c><00:10:04.000><c> from</c><00:10:04.160><c> b</c><00:10:04.399><c> we</c>

00:10:04.470 --> 00:10:04.480 align:start position:0%
here there's no outgoing edges from b we
 

00:10:04.480 --> 00:10:06.949 align:start position:0%
here there's no outgoing edges from b we
can't<00:10:04.640><c> even</c><00:10:04.959><c> get</c><00:10:05.279><c> back</c><00:10:05.600><c> to</c><00:10:05.839><c> a</c><00:10:06.320><c> so</c><00:10:06.560><c> what</c><00:10:06.720><c> we</c>

00:10:06.949 --> 00:10:06.959 align:start position:0%
can't even get back to a so what we
 

00:10:06.959 --> 00:10:09.190 align:start position:0%
can't even get back to a so what we
found<00:10:07.279><c> is</c><00:10:07.519><c> we</c><00:10:07.680><c> tried</c><00:10:08.000><c> to</c><00:10:08.079><c> be</c><00:10:08.320><c> greedy</c><00:10:08.720><c> we</c><00:10:08.880><c> tried</c>

00:10:09.190 --> 00:10:09.200 align:start position:0%
found is we tried to be greedy we tried
 

00:10:09.200 --> 00:10:11.670 align:start position:0%
found is we tried to be greedy we tried
to<00:10:09.440><c> take</c><00:10:10.000><c> the</c><00:10:10.320><c> first</c><00:10:10.720><c> character</c><00:10:11.200><c> that</c><00:10:11.360><c> came</c>

00:10:11.670 --> 00:10:11.680 align:start position:0%
to take the first character that came
 

00:10:11.680 --> 00:10:13.670 align:start position:0%
to take the first character that came
right<00:10:11.920><c> the</c><00:10:12.160><c> the</c><00:10:12.320><c> first</c><00:10:12.800><c> the</c><00:10:12.959><c> alphabetical</c>

00:10:13.670 --> 00:10:13.680 align:start position:0%
right the the first the alphabetical
 

00:10:13.680 --> 00:10:15.670 align:start position:0%
right the the first the alphabetical
character<00:10:14.079><c> but</c><00:10:14.240><c> it</c><00:10:14.399><c> didn't</c><00:10:14.720><c> work</c><00:10:15.120><c> out</c><00:10:15.279><c> for</c><00:10:15.519><c> us</c>

00:10:15.670 --> 00:10:15.680 align:start position:0%
character but it didn't work out for us
 

00:10:15.680 --> 00:10:17.670 align:start position:0%
character but it didn't work out for us
so<00:10:15.839><c> we</c><00:10:16.000><c> end</c><00:10:16.240><c> up</c><00:10:16.480><c> backtracking</c><00:10:17.120><c> we</c><00:10:17.279><c> say</c><00:10:17.440><c> okay</c>

00:10:17.670 --> 00:10:17.680 align:start position:0%
so we end up backtracking we say okay
 

00:10:17.680 --> 00:10:19.590 align:start position:0%
so we end up backtracking we say okay
we're<00:10:17.920><c> actually</c><00:10:18.320><c> not</c><00:10:18.560><c> going</c><00:10:18.640><c> to</c><00:10:18.800><c> travel</c><00:10:19.200><c> along</c>

00:10:19.590 --> 00:10:19.600 align:start position:0%
we're actually not going to travel along
 

00:10:19.600 --> 00:10:21.910 align:start position:0%
we're actually not going to travel along
this<00:10:19.839><c> edge</c><00:10:20.240><c> at</c><00:10:20.399><c> least</c><00:10:20.880><c> just</c><00:10:21.279><c> yet</c><00:10:21.680><c> we're</c>

00:10:21.910 --> 00:10:21.920 align:start position:0%
this edge at least just yet we're
 

00:10:21.920 --> 00:10:23.990 align:start position:0%
this edge at least just yet we're
actually<00:10:22.240><c> going</c><00:10:22.320><c> to</c><00:10:22.480><c> travel</c><00:10:22.880><c> to</c><00:10:23.040><c> the</c><00:10:23.279><c> c</c><00:10:23.600><c> first</c>

00:10:23.990 --> 00:10:24.000 align:start position:0%
actually going to travel to the c first
 

00:10:24.000 --> 00:10:25.670 align:start position:0%
actually going to travel to the c first
even<00:10:24.160><c> though</c><00:10:24.399><c> it</c><00:10:24.480><c> comes</c><00:10:24.800><c> after</c><00:10:25.279><c> in</c><00:10:25.440><c> order</c>

00:10:25.670 --> 00:10:25.680 align:start position:0%
even though it comes after in order
 

00:10:25.680 --> 00:10:27.750 align:start position:0%
even though it comes after in order
compared<00:10:26.079><c> to</c><00:10:26.160><c> the</c><00:10:26.240><c> b</c><00:10:26.640><c> just</c><00:10:26.880><c> because</c><00:10:27.440><c> we</c><00:10:27.600><c> know</c>

00:10:27.750 --> 00:10:27.760 align:start position:0%
compared to the b just because we know
 

00:10:27.760 --> 00:10:29.750 align:start position:0%
compared to the b just because we know
that<00:10:27.920><c> at</c><00:10:28.000><c> least</c><00:10:28.320><c> here</c><00:10:28.640><c> we</c><00:10:28.880><c> might</c><00:10:29.040><c> be</c><00:10:29.279><c> able</c><00:10:29.440><c> to</c>

00:10:29.750 --> 00:10:29.760 align:start position:0%
that at least here we might be able to
 

00:10:29.760 --> 00:10:32.310 align:start position:0%
that at least here we might be able to
create<00:10:30.160><c> a</c><00:10:30.320><c> valid</c><00:10:30.880><c> path</c><00:10:31.200><c> so</c><00:10:31.360><c> we</c><00:10:31.440><c> go</c><00:10:31.600><c> to</c><00:10:31.680><c> c</c><00:10:32.079><c> then</c>

00:10:32.310 --> 00:10:32.320 align:start position:0%
create a valid path so we go to c then
 

00:10:32.320 --> 00:10:35.509 align:start position:0%
create a valid path so we go to c then
we<00:10:32.480><c> go</c><00:10:32.720><c> back</c><00:10:32.959><c> to</c><00:10:33.279><c> a</c><00:10:33.680><c> and</c><00:10:34.000><c> then</c><00:10:34.399><c> we</c><00:10:34.640><c> go</c><00:10:34.800><c> to</c><00:10:35.040><c> b</c><00:10:35.279><c> so</c>

00:10:35.509 --> 00:10:35.519 align:start position:0%
we go back to a and then we go to b so
 

00:10:35.519 --> 00:10:37.030 align:start position:0%
we go back to a and then we go to b so
basically<00:10:36.000><c> what</c><00:10:36.240><c> we</c>

00:10:37.030 --> 00:10:37.040 align:start position:0%
basically what we
 

00:10:37.040 --> 00:10:38.470 align:start position:0%
basically what we
realized<00:10:37.519><c> from</c><00:10:37.680><c> this</c><00:10:37.839><c> example</c><00:10:38.240><c> is</c><00:10:38.320><c> that</c>

00:10:38.470 --> 00:10:38.480 align:start position:0%
realized from this example is that
 

00:10:38.480 --> 00:10:40.310 align:start position:0%
realized from this example is that
sometimes<00:10:39.200><c> in</c><00:10:39.360><c> some</c><00:10:39.600><c> of</c><00:10:39.680><c> the</c><00:10:39.839><c> cases</c><00:10:40.160><c> we're</c>

00:10:40.310 --> 00:10:40.320 align:start position:0%
sometimes in some of the cases we're
 

00:10:40.320 --> 00:10:42.389 align:start position:0%
sometimes in some of the cases we're
going<00:10:40.399><c> to</c><00:10:40.480><c> have</c><00:10:40.640><c> to</c><00:10:40.959><c> backtrack</c><00:10:41.839><c> so</c><00:10:42.000><c> we</c><00:10:42.160><c> might</c>

00:10:42.389 --> 00:10:42.399 align:start position:0%
going to have to backtrack so we might
 

00:10:42.399 --> 00:10:43.990 align:start position:0%
going to have to backtrack so we might
go<00:10:42.560><c> along</c><00:10:42.880><c> an</c><00:10:43.040><c> edge</c><00:10:43.279><c> and</c><00:10:43.360><c> realize</c><00:10:43.760><c> that</c><00:10:43.920><c> it</c>

00:10:43.990 --> 00:10:44.000 align:start position:0%
go along an edge and realize that it
 

00:10:44.000 --> 00:10:44.949 align:start position:0%
go along an edge and realize that it
doesn't<00:10:44.240><c> work</c><00:10:44.480><c> and</c><00:10:44.560><c> then</c><00:10:44.640><c> we're</c><00:10:44.800><c> going</c><00:10:44.880><c> to</c>

00:10:44.949 --> 00:10:44.959 align:start position:0%
doesn't work and then we're going to
 

00:10:44.959 --> 00:10:47.030 align:start position:0%
doesn't work and then we're going to
have<00:10:45.040><c> to</c><00:10:45.279><c> reverse</c><00:10:45.920><c> our</c><00:10:46.160><c> decision</c><00:10:46.720><c> and</c><00:10:46.800><c> then</c>

00:10:47.030 --> 00:10:47.040 align:start position:0%
have to reverse our decision and then
 

00:10:47.040 --> 00:10:49.030 align:start position:0%
have to reverse our decision and then
travel<00:10:47.360><c> along</c><00:10:47.680><c> a</c><00:10:47.760><c> different</c><00:10:48.160><c> edge</c><00:10:48.640><c> so</c><00:10:48.800><c> that's</c>

00:10:49.030 --> 00:10:49.040 align:start position:0%
travel along a different edge so that's
 

00:10:49.040 --> 00:10:50.069 align:start position:0%
travel along a different edge so that's
something<00:10:49.279><c> we're</c><00:10:49.440><c> gonna</c><00:10:49.519><c> have</c><00:10:49.680><c> to</c><00:10:49.760><c> keep</c><00:10:50.000><c> in</c>

00:10:50.069 --> 00:10:50.079 align:start position:0%
something we're gonna have to keep in
 

00:10:50.079 --> 00:10:52.310 align:start position:0%
something we're gonna have to keep in
mind<00:10:50.640><c> let's</c><00:10:50.880><c> actually</c><00:10:51.120><c> jump</c><00:10:51.360><c> into</c><00:10:51.519><c> the</c><00:10:51.680><c> code</c>

00:10:52.310 --> 00:10:52.320 align:start position:0%
mind let's actually jump into the code
 

00:10:52.320 --> 00:10:54.389 align:start position:0%
mind let's actually jump into the code
in<00:10:52.480><c> a</c><00:10:52.640><c> second</c><00:10:53.279><c> and</c><00:10:53.519><c> stay</c><00:10:53.839><c> tuned</c><00:10:54.079><c> because</c><00:10:54.240><c> it's</c>

00:10:54.389 --> 00:10:54.399 align:start position:0%
in a second and stay tuned because it's
 

00:10:54.399 --> 00:10:56.389 align:start position:0%
in a second and stay tuned because it's
actually<00:10:54.640><c> gonna</c><00:10:54.880><c> be</c><00:10:55.040><c> pretty</c><00:10:55.440><c> tricky</c><00:10:56.079><c> but</c>

00:10:56.389 --> 00:10:56.399 align:start position:0%
actually gonna be pretty tricky but
 

00:10:56.399 --> 00:10:58.550 align:start position:0%
actually gonna be pretty tricky but
let's<00:10:56.720><c> discuss</c><00:10:57.120><c> the</c><00:10:57.279><c> time</c><00:10:57.519><c> complexity</c><00:10:58.160><c> of</c>

00:10:58.550 --> 00:10:58.560 align:start position:0%
let's discuss the time complexity of
 

00:10:58.560 --> 00:11:00.230 align:start position:0%
let's discuss the time complexity of
this<00:10:58.720><c> solution</c><00:10:59.360><c> and</c><00:10:59.440><c> since</c><00:10:59.680><c> i</c><00:10:59.839><c> mentioned</c><00:11:00.160><c> we</c>

00:11:00.230 --> 00:11:00.240 align:start position:0%
this solution and since i mentioned we
 

00:11:00.240 --> 00:11:01.590 align:start position:0%
this solution and since i mentioned we
are<00:11:00.399><c> going</c><00:11:00.480><c> to</c><00:11:00.560><c> be</c><00:11:00.720><c> doing</c><00:11:00.959><c> some</c><00:11:01.200><c> form</c><00:11:01.440><c> of</c>

00:11:01.590 --> 00:11:01.600 align:start position:0%
are going to be doing some form of
 

00:11:01.600 --> 00:11:03.750 align:start position:0%
are going to be doing some form of
backtracking<00:11:02.399><c> the</c><00:11:02.560><c> overall</c><00:11:02.880><c> time</c><00:11:03.120><c> complexity</c>

00:11:03.750 --> 00:11:03.760 align:start position:0%
backtracking the overall time complexity
 

00:11:03.760 --> 00:11:05.990 align:start position:0%
backtracking the overall time complexity
to<00:11:03.920><c> run</c><00:11:04.160><c> a</c><00:11:04.240><c> dfs</c><00:11:04.720><c> on</c><00:11:04.880><c> the</c><00:11:04.959><c> entire</c><00:11:05.360><c> graph</c><00:11:05.760><c> in</c><00:11:05.839><c> the</c>

00:11:05.990 --> 00:11:06.000 align:start position:0%
to run a dfs on the entire graph in the
 

00:11:06.000 --> 00:11:08.389 align:start position:0%
to run a dfs on the entire graph in the
worst<00:11:06.240><c> case</c><00:11:06.480><c> it</c><00:11:06.640><c> would</c><00:11:06.800><c> be</c><00:11:06.959><c> like</c><00:11:07.279><c> a</c><00:11:07.440><c> v</c><00:11:07.839><c> plus</c><00:11:08.079><c> e</c>

00:11:08.389 --> 00:11:08.399 align:start position:0%
worst case it would be like a v plus e
 

00:11:08.399 --> 00:11:10.550 align:start position:0%
worst case it would be like a v plus e
right<00:11:08.560><c> basically</c><00:11:08.959><c> the</c><00:11:09.279><c> size</c><00:11:09.680><c> of</c><00:11:09.839><c> the</c><00:11:10.000><c> graph</c>

00:11:10.550 --> 00:11:10.560 align:start position:0%
right basically the size of the graph
 

00:11:10.560 --> 00:11:12.710 align:start position:0%
right basically the size of the graph
but<00:11:10.880><c> since</c><00:11:11.120><c> we</c><00:11:11.360><c> are</c><00:11:11.680><c> backtracking</c>

00:11:12.710 --> 00:11:12.720 align:start position:0%
but since we are backtracking
 

00:11:12.720 --> 00:11:14.790 align:start position:0%
but since we are backtracking
potentially<00:11:13.440><c> for</c><00:11:13.600><c> every</c><00:11:13.920><c> single</c><00:11:14.320><c> edge</c><00:11:14.560><c> that</c>

00:11:14.790 --> 00:11:14.800 align:start position:0%
potentially for every single edge that
 

00:11:14.800 --> 00:11:16.949 align:start position:0%
potentially for every single edge that
exists<00:11:15.360><c> in</c><00:11:15.519><c> the</c><00:11:15.680><c> graph</c><00:11:16.240><c> the</c><00:11:16.399><c> overall</c><00:11:16.800><c> time</c>

00:11:16.949 --> 00:11:16.959 align:start position:0%
exists in the graph the overall time
 

00:11:16.959 --> 00:11:19.190 align:start position:0%
exists in the graph the overall time
complexity<00:11:17.839><c> is</c><00:11:18.000><c> going</c><00:11:18.160><c> to</c><00:11:18.320><c> be</c><00:11:18.880><c> you</c><00:11:18.959><c> know</c><00:11:19.120><c> the</c>

00:11:19.190 --> 00:11:19.200 align:start position:0%
complexity is going to be you know the
 

00:11:19.200 --> 00:11:21.509 align:start position:0%
complexity is going to be you know the
size<00:11:19.440><c> of</c><00:11:19.519><c> the</c><00:11:19.680><c> graph</c><00:11:20.079><c> squared</c><00:11:20.800><c> and</c><00:11:21.279><c> you</c><00:11:21.360><c> know</c>

00:11:21.509 --> 00:11:21.519 align:start position:0%
size of the graph squared and you know
 

00:11:21.519 --> 00:11:22.949 align:start position:0%
size of the graph squared and you know
since<00:11:21.760><c> we</c><00:11:21.839><c> know</c><00:11:22.000><c> that</c><00:11:22.160><c> the</c><00:11:22.240><c> number</c><00:11:22.480><c> of</c><00:11:22.640><c> edges</c>

00:11:22.949 --> 00:11:22.959 align:start position:0%
since we know that the number of edges
 

00:11:22.959 --> 00:11:24.230 align:start position:0%
since we know that the number of edges
is<00:11:23.120><c> actually</c><00:11:23.440><c> going</c><00:11:23.600><c> to</c><00:11:23.680><c> be</c><00:11:23.920><c> you</c><00:11:24.079><c> know</c>

00:11:24.230 --> 00:11:24.240 align:start position:0%
is actually going to be you know
 

00:11:24.240 --> 00:11:26.230 align:start position:0%
is actually going to be you know
approximately<00:11:25.040><c> the</c><00:11:25.200><c> same</c><00:11:25.440><c> or</c><00:11:25.760><c> greater</c><00:11:26.079><c> than</c>

00:11:26.230 --> 00:11:26.240 align:start position:0%
approximately the same or greater than
 

00:11:26.240 --> 00:11:28.150 align:start position:0%
approximately the same or greater than
the<00:11:26.399><c> number</c><00:11:26.800><c> of</c><00:11:26.959><c> vertices</c><00:11:27.600><c> we</c><00:11:27.760><c> can</c><00:11:27.839><c> actually</c>

00:11:28.150 --> 00:11:28.160 align:start position:0%
the number of vertices we can actually
 

00:11:28.160 --> 00:11:29.990 align:start position:0%
the number of vertices we can actually
think<00:11:28.320><c> of</c><00:11:28.399><c> this</c><00:11:28.640><c> as</c><00:11:28.880><c> pretty</c><00:11:29.040><c> much</c><00:11:29.279><c> being</c><00:11:29.680><c> e</c>

00:11:29.990 --> 00:11:30.000 align:start position:0%
think of this as pretty much being e
 

00:11:30.000 --> 00:11:32.630 align:start position:0%
think of this as pretty much being e
squared<00:11:30.480><c> as</c><00:11:30.640><c> the</c><00:11:30.880><c> time</c><00:11:31.120><c> complexity</c><00:11:32.000><c> and</c><00:11:32.320><c> as</c>

00:11:32.630 --> 00:11:32.640 align:start position:0%
squared as the time complexity and as
 

00:11:32.640 --> 00:11:35.030 align:start position:0%
squared as the time complexity and as
the<00:11:33.120><c> memory</c><00:11:33.440><c> complexity</c><00:11:34.240><c> we</c><00:11:34.399><c> can</c><00:11:34.560><c> consider</c><00:11:34.959><c> it</c>

00:11:35.030 --> 00:11:35.040 align:start position:0%
the memory complexity we can consider it
 

00:11:35.040 --> 00:11:37.590 align:start position:0%
the memory complexity we can consider it
to<00:11:35.120><c> be</c><00:11:35.360><c> big</c><00:11:35.600><c> o</c><00:11:36.000><c> of</c><00:11:36.240><c> the</c><00:11:36.399><c> number</c><00:11:36.640><c> of</c><00:11:36.800><c> edges</c><00:11:37.360><c> one</c>

00:11:37.590 --> 00:11:37.600 align:start position:0%
to be big o of the number of edges one
 

00:11:37.600 --> 00:11:39.110 align:start position:0%
to be big o of the number of edges one
because<00:11:37.839><c> we're</c><00:11:38.000><c> going</c><00:11:38.079><c> to</c><00:11:38.160><c> be</c><00:11:38.240><c> storing</c><00:11:38.640><c> it</c><00:11:38.880><c> in</c>

00:11:39.110 --> 00:11:39.120 align:start position:0%
because we're going to be storing it in
 

00:11:39.120 --> 00:11:41.269 align:start position:0%
because we're going to be storing it in
our<00:11:39.279><c> adjacency</c><00:11:39.920><c> list</c><00:11:40.240><c> and</c><00:11:40.399><c> when</c><00:11:40.560><c> we</c><00:11:40.800><c> do</c><00:11:40.959><c> the</c>

00:11:41.269 --> 00:11:41.279 align:start position:0%
our adjacency list and when we do the
 

00:11:41.279 --> 00:11:43.269 align:start position:0%
our adjacency list and when we do the
function<00:11:41.680><c> recursively</c><00:11:42.560><c> this</c><00:11:42.800><c> could</c><00:11:42.959><c> be</c><00:11:43.120><c> the</c>

00:11:43.269 --> 00:11:43.279 align:start position:0%
function recursively this could be the
 

00:11:43.279 --> 00:11:45.750 align:start position:0%
function recursively this could be the
size<00:11:43.680><c> of</c><00:11:43.760><c> the</c><00:11:43.920><c> call</c><00:11:44.240><c> stack</c><00:11:44.720><c> in</c><00:11:44.880><c> the</c><00:11:45.040><c> worst</c><00:11:45.440><c> case</c>

00:11:45.750 --> 00:11:45.760 align:start position:0%
size of the call stack in the worst case
 

00:11:45.760 --> 00:11:47.190 align:start position:0%
size of the call stack in the worst case
so<00:11:45.920><c> this</c><00:11:46.079><c> is</c><00:11:46.240><c> the</c><00:11:46.320><c> time</c><00:11:46.560><c> complexity</c><00:11:47.040><c> this</c><00:11:47.120><c> is</c>

00:11:47.190 --> 00:11:47.200 align:start position:0%
so this is the time complexity this is
 

00:11:47.200 --> 00:11:49.269 align:start position:0%
so this is the time complexity this is
the<00:11:47.279><c> memory</c><00:11:47.600><c> complexity</c><00:11:48.320><c> now</c><00:11:48.560><c> let's</c><00:11:48.800><c> code</c><00:11:49.120><c> it</c>

00:11:49.269 --> 00:11:49.279 align:start position:0%
the memory complexity now let's code it
 

00:11:49.279 --> 00:11:51.509 align:start position:0%
the memory complexity now let's code it
up<00:11:49.440><c> okay</c><00:11:49.680><c> so</c><00:11:49.760><c> let's</c><00:11:50.000><c> code</c><00:11:50.240><c> it</c><00:11:50.399><c> up</c><00:11:50.880><c> we</c><00:11:51.200><c> are</c><00:11:51.360><c> going</c>

00:11:51.509 --> 00:11:51.519 align:start position:0%
up okay so let's code it up we are going
 

00:11:51.519 --> 00:11:53.430 align:start position:0%
up okay so let's code it up we are going
to<00:11:51.600><c> first</c><00:11:51.839><c> create</c><00:11:52.160><c> our</c><00:11:52.320><c> adjacency</c><00:11:52.880><c> list</c><00:11:53.279><c> we</c>

00:11:53.430 --> 00:11:53.440 align:start position:0%
to first create our adjacency list we
 

00:11:53.440 --> 00:11:55.030 align:start position:0%
to first create our adjacency list we
are<00:11:53.519><c> going</c><00:11:53.600><c> to</c><00:11:53.760><c> map</c><00:11:54.079><c> every</c><00:11:54.240><c> single</c><00:11:54.639><c> source</c>

00:11:55.030 --> 00:11:55.040 align:start position:0%
are going to map every single source
 

00:11:55.040 --> 00:11:57.670 align:start position:0%
are going to map every single source
node<00:11:55.519><c> to</c><00:11:55.760><c> an</c><00:11:56.079><c> empty</c><00:11:56.480><c> list</c><00:11:56.880><c> initially</c><00:11:57.279><c> so</c><00:11:57.440><c> let's</c>

00:11:57.670 --> 00:11:57.680 align:start position:0%
node to an empty list initially so let's
 

00:11:57.680 --> 00:11:59.030 align:start position:0%
node to an empty list initially so let's
go<00:11:57.839><c> through</c><00:11:58.000><c> every</c><00:11:58.160><c> single</c><00:11:58.560><c> source</c>

00:11:59.030 --> 00:11:59.040 align:start position:0%
go through every single source
 

00:11:59.040 --> 00:12:01.430 align:start position:0%
go through every single source
destination<00:11:59.839><c> in</c><00:12:00.320><c> our</c><00:12:00.639><c> input</c><00:12:01.040><c> which</c><00:12:01.279><c> is</c>

00:12:01.430 --> 00:12:01.440 align:start position:0%
destination in our input which is
 

00:12:01.440 --> 00:12:03.910 align:start position:0%
destination in our input which is
tickets<00:12:02.240><c> and</c><00:12:02.639><c> just</c><00:12:02.880><c> map</c><00:12:03.040><c> the</c><00:12:03.200><c> source</c><00:12:03.519><c> to</c><00:12:03.760><c> an</c>

00:12:03.910 --> 00:12:03.920 align:start position:0%
tickets and just map the source to an
 

00:12:03.920 --> 00:12:05.750 align:start position:0%
tickets and just map the source to an
empty<00:12:04.240><c> list</c><00:12:04.480><c> for</c><00:12:04.720><c> now</c><00:12:05.200><c> and</c><00:12:05.279><c> then</c><00:12:05.440><c> let's</c>

00:12:05.750 --> 00:12:05.760 align:start position:0%
empty list for now and then let's
 

00:12:05.760 --> 00:12:07.590 align:start position:0%
empty list for now and then let's
actually<00:12:06.160><c> build</c><00:12:06.560><c> the</c><00:12:06.720><c> adjacency</c><00:12:07.279><c> list</c><00:12:07.519><c> so</c>

00:12:07.590 --> 00:12:07.600 align:start position:0%
actually build the adjacency list so
 

00:12:07.600 --> 00:12:08.629 align:start position:0%
actually build the adjacency list so
let's<00:12:07.760><c> go</c><00:12:07.920><c> through</c><00:12:08.079><c> every</c><00:12:08.320><c> source</c>

00:12:08.629 --> 00:12:08.639 align:start position:0%
let's go through every source
 

00:12:08.639 --> 00:12:13.110 align:start position:0%
let's go through every source
destination<00:12:09.440><c> in</c><00:12:09.760><c> our</c><00:12:10.160><c> tickets</c><00:12:11.120><c> and</c><00:12:11.600><c> then</c><00:12:12.160><c> say</c>

00:12:13.110 --> 00:12:13.120 align:start position:0%
destination in our tickets and then say
 

00:12:13.120 --> 00:12:16.470 align:start position:0%
destination in our tickets and then say
for<00:12:13.680><c> this</c><00:12:14.240><c> source</c><00:12:14.800><c> we</c><00:12:15.040><c> want</c><00:12:15.200><c> to</c><00:12:15.440><c> append</c><00:12:16.000><c> to</c><00:12:16.160><c> it</c>

00:12:16.470 --> 00:12:16.480 align:start position:0%
for this source we want to append to it
 

00:12:16.480 --> 00:12:18.790 align:start position:0%
for this source we want to append to it
this<00:12:16.959><c> destination</c><00:12:18.079><c> and</c><00:12:18.160><c> that's</c><00:12:18.399><c> really</c><00:12:18.639><c> all</c>

00:12:18.790 --> 00:12:18.800 align:start position:0%
this destination and that's really all
 

00:12:18.800 --> 00:12:20.389 align:start position:0%
this destination and that's really all
the<00:12:18.880><c> pre-work</c><00:12:19.360><c> that</c><00:12:19.519><c> we</c><00:12:19.600><c> have</c><00:12:19.760><c> to</c><00:12:19.839><c> do</c><00:12:20.000><c> now</c><00:12:20.240><c> we</c>

00:12:20.389 --> 00:12:20.399 align:start position:0%
the pre-work that we have to do now we
 

00:12:20.399 --> 00:12:23.110 align:start position:0%
the pre-work that we have to do now we
actually<00:12:20.720><c> get</c><00:12:21.040><c> into</c><00:12:21.360><c> our</c><00:12:21.519><c> dfs</c><00:12:22.480><c> where</c><00:12:22.880><c> we</c><00:12:23.040><c> are</c>

00:12:23.110 --> 00:12:23.120 align:start position:0%
actually get into our dfs where we are
 

00:12:23.120 --> 00:12:25.670 align:start position:0%
actually get into our dfs where we are
going<00:12:23.200><c> to</c><00:12:23.279><c> be</c><00:12:23.440><c> passing</c><00:12:23.920><c> in</c><00:12:24.160><c> some</c><00:12:24.560><c> source</c><00:12:25.040><c> node</c>

00:12:25.670 --> 00:12:25.680 align:start position:0%
going to be passing in some source node
 

00:12:25.680 --> 00:12:28.310 align:start position:0%
going to be passing in some source node
and<00:12:25.920><c> then</c><00:12:26.240><c> running</c><00:12:26.560><c> dfs</c><00:12:27.200><c> on</c><00:12:27.360><c> it</c><00:12:27.839><c> seeing</c><00:12:28.079><c> if</c><00:12:28.240><c> we</c>

00:12:28.310 --> 00:12:28.320 align:start position:0%
and then running dfs on it seeing if we
 

00:12:28.320 --> 00:12:30.629 align:start position:0%
and then running dfs on it seeing if we
can<00:12:28.480><c> actually</c><00:12:28.800><c> find</c><00:12:29.120><c> a</c><00:12:29.200><c> valid</c><00:12:29.680><c> path</c><00:12:30.240><c> and</c><00:12:30.320><c> then</c>

00:12:30.629 --> 00:12:30.639 align:start position:0%
can actually find a valid path and then
 

00:12:30.639 --> 00:12:32.870 align:start position:0%
can actually find a valid path and then
updating<00:12:31.120><c> our</c><00:12:31.279><c> result</c><00:12:31.920><c> accordingly</c><00:12:32.639><c> right</c>

00:12:32.870 --> 00:12:32.880 align:start position:0%
updating our result accordingly right
 

00:12:32.880 --> 00:12:34.790 align:start position:0%
updating our result accordingly right
our<00:12:33.040><c> result</c><00:12:33.360><c> is</c><00:12:33.519><c> basically</c><00:12:34.000><c> going</c><00:12:34.160><c> to</c><00:12:34.320><c> be</c><00:12:34.560><c> that</c>

00:12:34.790 --> 00:12:34.800 align:start position:0%
our result is basically going to be that
 

00:12:34.800 --> 00:12:37.509 align:start position:0%
our result is basically going to be that
path<00:12:35.200><c> that</c><00:12:35.360><c> we</c><00:12:35.519><c> found</c><00:12:35.839><c> that</c><00:12:36.000><c> is</c><00:12:36.160><c> valid</c><00:12:36.639><c> and</c><00:12:37.120><c> in</c>

00:12:37.509 --> 00:12:37.519 align:start position:0%
path that we found that is valid and in
 

00:12:37.519 --> 00:12:40.069 align:start position:0%
path that we found that is valid and in
lexical<00:12:38.160><c> order</c><00:12:38.720><c> now</c><00:12:38.959><c> we</c><00:12:39.120><c> know</c><00:12:39.279><c> that</c><00:12:39.440><c> we</c><00:12:39.680><c> have</c><00:12:39.920><c> a</c>

00:12:40.069 --> 00:12:40.079 align:start position:0%
lexical order now we know that we have a
 

00:12:40.079 --> 00:12:42.310 align:start position:0%
lexical order now we know that we have a
starting<00:12:40.480><c> point</c><00:12:40.800><c> in</c><00:12:41.120><c> our</c><00:12:41.360><c> results</c><00:12:41.920><c> initially</c>

00:12:42.310 --> 00:12:42.320 align:start position:0%
starting point in our results initially
 

00:12:42.320 --> 00:12:44.470 align:start position:0%
starting point in our results initially
we<00:12:42.560><c> start</c><00:12:42.800><c> at</c><00:12:42.959><c> jfk</c><00:12:43.760><c> and</c><00:12:43.839><c> we</c><00:12:44.000><c> actually</c><00:12:44.240><c> don't</c>

00:12:44.470 --> 00:12:44.480 align:start position:0%
we start at jfk and we actually don't
 

00:12:44.480 --> 00:12:46.710 align:start position:0%
we start at jfk and we actually don't
have<00:12:44.560><c> to</c><00:12:44.720><c> pass</c><00:12:44.959><c> this</c><00:12:45.120><c> variable</c><00:12:45.600><c> into</c><00:12:45.920><c> our</c><00:12:46.000><c> dfs</c>

00:12:46.710 --> 00:12:46.720 align:start position:0%
have to pass this variable into our dfs
 

00:12:46.720 --> 00:12:49.110 align:start position:0%
have to pass this variable into our dfs
because<00:12:47.279><c> our</c><00:12:47.440><c> dfs</c><00:12:48.000><c> is</c><00:12:48.240><c> declared</c><00:12:48.720><c> inside</c><00:12:49.040><c> of</c>

00:12:49.110 --> 00:12:49.120 align:start position:0%
because our dfs is declared inside of
 

00:12:49.120 --> 00:12:51.509 align:start position:0%
because our dfs is declared inside of
the<00:12:49.200><c> outer</c><00:12:49.519><c> function</c><00:12:50.160><c> but</c><00:12:50.399><c> now</c><00:12:50.800><c> for</c><00:12:51.040><c> the</c><00:12:51.200><c> base</c>

00:12:51.509 --> 00:12:51.519 align:start position:0%
the outer function but now for the base
 

00:12:51.519 --> 00:12:54.790 align:start position:0%
the outer function but now for the base
case<00:12:51.839><c> of</c><00:12:52.000><c> this</c><00:12:52.160><c> dfs</c><00:12:53.200><c> one</c><00:12:53.680><c> is</c><00:12:53.839><c> that</c><00:12:54.000><c> we</c><00:12:54.240><c> find</c><00:12:54.560><c> our</c>

00:12:54.790 --> 00:12:54.800 align:start position:0%
case of this dfs one is that we find our
 

00:12:54.800 --> 00:12:56.470 align:start position:0%
case of this dfs one is that we find our
solution<00:12:55.440><c> how</c><00:12:55.600><c> do</c><00:12:55.680><c> we</c><00:12:55.760><c> know</c><00:12:55.920><c> if</c><00:12:56.000><c> we</c><00:12:56.160><c> find</c><00:12:56.399><c> our</c>

00:12:56.470 --> 00:12:56.480 align:start position:0%
solution how do we know if we find our
 

00:12:56.480 --> 00:12:58.310 align:start position:0%
solution how do we know if we find our
solution<00:12:56.880><c> again</c><00:12:57.360><c> well</c><00:12:57.600><c> if</c><00:12:57.680><c> the</c><00:12:57.839><c> length</c><00:12:58.079><c> of</c><00:12:58.240><c> the</c>

00:12:58.310 --> 00:12:58.320 align:start position:0%
solution again well if the length of the
 

00:12:58.320 --> 00:13:00.790 align:start position:0%
solution again well if the length of the
result<00:12:58.800><c> is</c><00:12:59.040><c> exactly</c><00:12:59.600><c> equal</c><00:13:00.079><c> to</c><00:13:00.320><c> the</c><00:13:00.399><c> length</c><00:13:00.639><c> of</c>

00:13:00.790 --> 00:13:00.800 align:start position:0%
result is exactly equal to the length of
 

00:13:00.800 --> 00:13:03.590 align:start position:0%
result is exactly equal to the length of
the<00:13:00.880><c> tickets</c><00:13:01.600><c> plus</c><00:13:02.480><c> one</c><00:13:02.959><c> and</c><00:13:03.120><c> in</c><00:13:03.200><c> that</c><00:13:03.360><c> case</c>

00:13:03.590 --> 00:13:03.600 align:start position:0%
the tickets plus one and in that case
 

00:13:03.600 --> 00:13:05.269 align:start position:0%
the tickets plus one and in that case
we're<00:13:03.760><c> going</c><00:13:03.839><c> to</c><00:13:03.920><c> return</c><00:13:04.320><c> true</c><00:13:04.880><c> saying</c><00:13:05.120><c> that</c>

00:13:05.269 --> 00:13:05.279 align:start position:0%
we're going to return true saying that
 

00:13:05.279 --> 00:13:07.990 align:start position:0%
we're going to return true saying that
we<00:13:05.440><c> did</c><00:13:05.680><c> find</c><00:13:06.000><c> a</c><00:13:06.079><c> valid</c><00:13:06.560><c> path</c><00:13:07.120><c> now</c><00:13:07.519><c> one</c><00:13:07.680><c> of</c><00:13:07.760><c> the</c>

00:13:07.990 --> 00:13:08.000 align:start position:0%
we did find a valid path now one of the
 

00:13:08.000 --> 00:13:11.670 align:start position:0%
we did find a valid path now one of the
cases<00:13:08.720><c> where</c><00:13:09.279><c> we</c><00:13:09.680><c> can't</c><00:13:10.320><c> find</c><00:13:10.639><c> a</c><00:13:10.720><c> valid</c><00:13:11.040><c> path</c>

00:13:11.670 --> 00:13:11.680 align:start position:0%
cases where we can't find a valid path
 

00:13:11.680 --> 00:13:14.949 align:start position:0%
cases where we can't find a valid path
is<00:13:12.000><c> if</c><00:13:12.480><c> the</c><00:13:12.720><c> this</c><00:13:13.200><c> source</c><00:13:13.519><c> that</c><00:13:13.680><c> we're</c><00:13:14.000><c> at</c><00:13:14.560><c> is</c>

00:13:14.949 --> 00:13:14.959 align:start position:0%
is if the this source that we're at is
 

00:13:14.959 --> 00:13:17.590 align:start position:0%
is if the this source that we're at is
not<00:13:15.360><c> actually</c><00:13:15.839><c> in</c><00:13:16.240><c> our</c><00:13:16.480><c> adjacency</c><00:13:17.120><c> list</c><00:13:17.440><c> what</c>

00:13:17.590 --> 00:13:17.600 align:start position:0%
not actually in our adjacency list what
 

00:13:17.600 --> 00:13:20.069 align:start position:0%
not actually in our adjacency list what
that<00:13:17.839><c> means</c><00:13:18.160><c> is</c><00:13:18.240><c> that</c><00:13:18.399><c> this</c><00:13:18.720><c> source</c><00:13:19.279><c> does</c><00:13:19.600><c> not</c>

00:13:20.069 --> 00:13:20.079 align:start position:0%
that means is that this source does not
 

00:13:20.079 --> 00:13:23.430 align:start position:0%
that means is that this source does not
have<00:13:20.560><c> any</c><00:13:21.040><c> outgoing</c><00:13:21.760><c> edges</c><00:13:22.320><c> from</c><00:13:22.639><c> it</c><00:13:23.040><c> in</c><00:13:23.200><c> that</c>

00:13:23.430 --> 00:13:23.440 align:start position:0%
have any outgoing edges from it in that
 

00:13:23.440 --> 00:13:26.310 align:start position:0%
have any outgoing edges from it in that
case<00:13:23.920><c> we</c><00:13:24.079><c> can</c><00:13:24.240><c> go</c><00:13:24.399><c> ahead</c><00:13:24.800><c> and</c><00:13:25.040><c> return</c><00:13:25.760><c> false</c>

00:13:26.310 --> 00:13:26.320 align:start position:0%
case we can go ahead and return false
 

00:13:26.320 --> 00:13:28.550 align:start position:0%
case we can go ahead and return false
that<00:13:26.480><c> means</c><00:13:26.720><c> we</c><00:13:26.880><c> can't</c><00:13:27.200><c> find</c><00:13:27.519><c> a</c><00:13:27.680><c> valid</c><00:13:28.079><c> path</c>

00:13:28.550 --> 00:13:28.560 align:start position:0%
that means we can't find a valid path
 

00:13:28.560 --> 00:13:31.110 align:start position:0%
that means we can't find a valid path
okay<00:13:28.800><c> so</c><00:13:29.120><c> now</c><00:13:29.360><c> what</c><00:13:29.519><c> we</c><00:13:29.760><c> want</c><00:13:30.079><c> to</c><00:13:30.320><c> do</c><00:13:30.880><c> is</c>

00:13:31.110 --> 00:13:31.120 align:start position:0%
okay so now what we want to do is
 

00:13:31.120 --> 00:13:33.350 align:start position:0%
okay so now what we want to do is
actually<00:13:31.600><c> iterate</c><00:13:32.000><c> through</c><00:13:32.399><c> all</c><00:13:32.720><c> of</c><00:13:33.040><c> the</c>

00:13:33.350 --> 00:13:33.360 align:start position:0%
actually iterate through all of the
 

00:13:33.360 --> 00:13:36.550 align:start position:0%
actually iterate through all of the
neighbors<00:13:34.320><c> of</c><00:13:34.959><c> our</c><00:13:35.600><c> current</c>

00:13:36.550 --> 00:13:36.560 align:start position:0%
neighbors of our current
 

00:13:36.560 --> 00:13:38.310 align:start position:0%
neighbors of our current
source<00:13:36.959><c> node</c><00:13:37.200><c> right</c><00:13:37.360><c> so</c><00:13:37.600><c> for</c><00:13:37.760><c> this</c><00:13:38.000><c> source</c>

00:13:38.310 --> 00:13:38.320 align:start position:0%
source node right so for this source
 

00:13:38.320 --> 00:13:39.430 align:start position:0%
source node right so for this source
node<00:13:38.560><c> we're</c><00:13:38.720><c> going</c><00:13:38.800><c> to</c><00:13:38.880><c> go</c><00:13:39.040><c> through</c><00:13:39.279><c> all</c><00:13:39.360><c> of</c>

00:13:39.430 --> 00:13:39.440 align:start position:0%
node we're going to go through all of
 

00:13:39.440 --> 00:13:41.189 align:start position:0%
node we're going to go through all of
the<00:13:39.600><c> adjacent</c><00:13:40.240><c> neighbors</c><00:13:40.800><c> and</c><00:13:40.959><c> let's</c>

00:13:41.189 --> 00:13:41.199 align:start position:0%
the adjacent neighbors and let's
 

00:13:41.199 --> 00:13:43.910 align:start position:0%
the adjacent neighbors and let's
actually<00:13:41.519><c> call</c><00:13:41.680><c> it</c><00:13:41.920><c> v</c><00:13:42.560><c> so</c><00:13:42.880><c> for</c><00:13:43.040><c> the</c><00:13:43.440><c> input</c><00:13:43.760><c> that</c>

00:13:43.910 --> 00:13:43.920 align:start position:0%
actually call it v so for the input that
 

00:13:43.920 --> 00:13:45.110 align:start position:0%
actually call it v so for the input that
we're<00:13:44.079><c> given</c><00:13:44.320><c> this</c><00:13:44.480><c> source</c><00:13:44.720><c> we're</c><00:13:44.959><c> going</c><00:13:45.040><c> to</c>

00:13:45.110 --> 00:13:45.120 align:start position:0%
we're given this source we're going to
 

00:13:45.120 --> 00:13:46.550 align:start position:0%
we're given this source we're going to
go<00:13:45.279><c> through</c><00:13:45.440><c> all</c><00:13:45.600><c> of</c><00:13:45.680><c> its</c><00:13:45.839><c> neighbors</c><00:13:46.399><c> we're</c>

00:13:46.550 --> 00:13:46.560 align:start position:0%
go through all of its neighbors we're
 

00:13:46.560 --> 00:13:48.470 align:start position:0%
go through all of its neighbors we're
going<00:13:46.639><c> to</c><00:13:46.720><c> call</c><00:13:46.959><c> that</c><00:13:47.120><c> neighbor</c><00:13:47.440><c> the</c><00:13:47.600><c> v</c><00:13:48.160><c> and</c><00:13:48.320><c> we</c>

00:13:48.470 --> 00:13:48.480 align:start position:0%
going to call that neighbor the v and we
 

00:13:48.480 --> 00:13:50.790 align:start position:0%
going to call that neighbor the v and we
actually<00:13:48.720><c> want</c><00:13:48.880><c> to</c><00:13:48.959><c> enumerate</c><00:13:50.079><c> over</c><00:13:50.399><c> this</c><00:13:50.639><c> and</c>

00:13:50.790 --> 00:13:50.800 align:start position:0%
actually want to enumerate over this and
 

00:13:50.800 --> 00:13:52.310 align:start position:0%
actually want to enumerate over this and
basically<00:13:51.120><c> what</c><00:13:51.360><c> enumerate</c><00:13:51.920><c> is</c><00:13:52.000><c> going</c><00:13:52.079><c> to</c><00:13:52.160><c> do</c>

00:13:52.310 --> 00:13:52.320 align:start position:0%
basically what enumerate is going to do
 

00:13:52.320 --> 00:13:54.069 align:start position:0%
basically what enumerate is going to do
for<00:13:52.399><c> us</c><00:13:52.560><c> is</c><00:13:52.720><c> going</c><00:13:52.800><c> to</c><00:13:52.959><c> allow</c><00:13:53.279><c> us</c><00:13:53.440><c> to</c><00:13:53.680><c> iterate</c>

00:13:54.069 --> 00:13:54.079 align:start position:0%
for us is going to allow us to iterate
 

00:13:54.079 --> 00:13:56.550 align:start position:0%
for us is going to allow us to iterate
over<00:13:54.399><c> the</c><00:13:54.639><c> index</c><00:13:55.279><c> at</c><00:13:55.440><c> the</c><00:13:55.519><c> same</c><00:13:55.839><c> time</c><00:13:56.160><c> as</c><00:13:56.399><c> the</c>

00:13:56.550 --> 00:13:56.560 align:start position:0%
over the index at the same time as the
 

00:13:56.560 --> 00:13:57.430 align:start position:0%
over the index at the same time as the
actual

00:13:57.430 --> 00:13:57.440 align:start position:0%
actual
 

00:13:57.440 --> 00:13:59.670 align:start position:0%
actual
value<00:13:57.920><c> which</c><00:13:58.079><c> is</c><00:13:58.240><c> the</c><00:13:58.480><c> vertex</c><00:13:59.360><c> but</c><00:13:59.519><c> what</c>

00:13:59.670 --> 00:13:59.680 align:start position:0%
value which is the vertex but what
 

00:13:59.680 --> 00:14:01.590 align:start position:0%
value which is the vertex but what
you're<00:13:59.920><c> about</c><00:14:00.079><c> to</c><00:14:00.320><c> see</c><00:14:00.800><c> is</c><00:14:01.040><c> actually</c><00:14:01.360><c> we're</c>

00:14:01.590 --> 00:14:01.600 align:start position:0%
you're about to see is actually we're
 

00:14:01.600 --> 00:14:05.030 align:start position:0%
you're about to see is actually we're
going<00:14:01.760><c> to</c><00:14:01.920><c> be</c><00:14:02.240><c> modifying</c><00:14:03.600><c> the</c><00:14:03.839><c> adjacency</c><00:14:04.639><c> list</c>

00:14:05.030 --> 00:14:05.040 align:start position:0%
going to be modifying the adjacency list
 

00:14:05.040 --> 00:14:06.389 align:start position:0%
going to be modifying the adjacency list
as<00:14:05.199><c> we</c><00:14:05.440><c> iterate</c><00:14:05.760><c> through</c><00:14:05.920><c> it</c><00:14:06.000><c> right</c><00:14:06.160><c> because</c>

00:14:06.389 --> 00:14:06.399 align:start position:0%
as we iterate through it right because
 

00:14:06.399 --> 00:14:08.310 align:start position:0%
as we iterate through it right because
if<00:14:06.560><c> we</c><00:14:06.720><c> visit</c><00:14:07.120><c> this</c><00:14:07.600><c> v</c>

00:14:08.310 --> 00:14:08.320 align:start position:0%
if we visit this v
 

00:14:08.320 --> 00:14:11.030 align:start position:0%
if we visit this v
vertex<00:14:08.800><c> this</c><00:14:09.120><c> node</c><00:14:09.680><c> then</c><00:14:10.000><c> we</c><00:14:10.160><c> want</c><00:14:10.320><c> to</c><00:14:10.480><c> remove</c>

00:14:11.030 --> 00:14:11.040 align:start position:0%
vertex this node then we want to remove
 

00:14:11.040 --> 00:14:13.590 align:start position:0%
vertex this node then we want to remove
it<00:14:11.120><c> we</c><00:14:11.279><c> want</c><00:14:11.440><c> to</c><00:14:11.519><c> remove</c><00:14:11.920><c> the</c><00:14:12.160><c> i</c><00:14:12.720><c> index</c><00:14:13.440><c> from</c>

00:14:13.590 --> 00:14:13.600 align:start position:0%
it we want to remove the i index from
 

00:14:13.600 --> 00:14:15.509 align:start position:0%
it we want to remove the i index from
the<00:14:13.760><c> adjacency</c><00:14:14.399><c> list</c><00:14:14.720><c> currently</c><00:14:15.120><c> but</c><00:14:15.360><c> we</c>

00:14:15.509 --> 00:14:15.519 align:start position:0%
the adjacency list currently but we
 

00:14:15.519 --> 00:14:16.389 align:start position:0%
the adjacency list currently but we
can't<00:14:15.680><c> really</c>

00:14:16.389 --> 00:14:16.399 align:start position:0%
can't really
 

00:14:16.399 --> 00:14:18.790 align:start position:0%
can't really
you<00:14:16.480><c> know</c><00:14:16.800><c> update</c><00:14:17.279><c> a</c><00:14:17.440><c> list</c><00:14:17.920><c> as</c><00:14:18.160><c> we</c><00:14:18.399><c> iterate</c>

00:14:18.790 --> 00:14:18.800 align:start position:0%
you know update a list as we iterate
 

00:14:18.800 --> 00:14:20.389 align:start position:0%
you know update a list as we iterate
through<00:14:18.959><c> it</c><00:14:19.040><c> that's</c><00:14:19.279><c> not</c><00:14:19.519><c> really</c><00:14:19.920><c> good</c><00:14:20.079><c> to</c><00:14:20.240><c> do</c>

00:14:20.389 --> 00:14:20.399 align:start position:0%
through it that's not really good to do
 

00:14:20.399 --> 00:14:22.150 align:start position:0%
through it that's not really good to do
it<00:14:20.560><c> in</c><00:14:20.639><c> many</c><00:14:20.880><c> cases</c><00:14:21.199><c> it's</c><00:14:21.360><c> not</c><00:14:21.519><c> even</c><00:14:21.760><c> allowed</c>

00:14:22.150 --> 00:14:22.160 align:start position:0%
it in many cases it's not even allowed
 

00:14:22.160 --> 00:14:24.310 align:start position:0%
it in many cases it's not even allowed
so<00:14:22.639><c> you</c><00:14:22.720><c> know</c><00:14:22.880><c> rather</c><00:14:23.120><c> than</c><00:14:23.360><c> iterating</c><00:14:23.920><c> over</c>

00:14:24.310 --> 00:14:24.320 align:start position:0%
so you know rather than iterating over
 

00:14:24.320 --> 00:14:25.990 align:start position:0%
so you know rather than iterating over
this<00:14:24.880><c> i'm</c><00:14:25.120><c> going</c><00:14:25.199><c> to</c><00:14:25.279><c> actually</c><00:14:25.600><c> create</c><00:14:25.839><c> a</c>

00:14:25.990 --> 00:14:26.000 align:start position:0%
this i'm going to actually create a
 

00:14:26.000 --> 00:14:28.310 align:start position:0%
this i'm going to actually create a
temporary<00:14:26.720><c> array</c><00:14:27.199><c> of</c><00:14:27.440><c> that</c><00:14:27.680><c> so</c><00:14:27.839><c> i'm</c><00:14:28.079><c> going</c><00:14:28.240><c> to</c>

00:14:28.310 --> 00:14:28.320 align:start position:0%
temporary array of that so i'm going to
 

00:14:28.320 --> 00:14:30.470 align:start position:0%
temporary array of that so i'm going to
create<00:14:28.639><c> a</c><00:14:28.800><c> copy</c><00:14:29.279><c> of</c><00:14:29.519><c> it</c><00:14:29.760><c> and</c><00:14:29.920><c> in</c><00:14:30.000><c> python</c><00:14:30.399><c> you</c>

00:14:30.470 --> 00:14:30.480 align:start position:0%
create a copy of it and in python you
 

00:14:30.480 --> 00:14:32.470 align:start position:0%
create a copy of it and in python you
can<00:14:30.560><c> do</c><00:14:30.720><c> that</c><00:14:30.959><c> just</c><00:14:31.120><c> like</c><00:14:31.360><c> this</c><00:14:31.600><c> just</c><00:14:31.839><c> pass</c>

00:14:32.470 --> 00:14:32.480 align:start position:0%
can do that just like this just pass
 

00:14:32.480 --> 00:14:35.110 align:start position:0%
can do that just like this just pass
that<00:14:32.800><c> list</c><00:14:33.199><c> into</c><00:14:33.519><c> a</c><00:14:33.680><c> list</c><00:14:34.079><c> constructor</c><00:14:34.959><c> and</c>

00:14:35.110 --> 00:14:35.120 align:start position:0%
that list into a list constructor and
 

00:14:35.120 --> 00:14:36.949 align:start position:0%
that list into a list constructor and
that'll<00:14:35.440><c> create</c><00:14:35.760><c> a</c><00:14:35.839><c> copy</c><00:14:36.240><c> for</c><00:14:36.399><c> us</c><00:14:36.720><c> and</c><00:14:36.800><c> then</c>

00:14:36.949 --> 00:14:36.959 align:start position:0%
that'll create a copy for us and then
 

00:14:36.959 --> 00:14:40.470 align:start position:0%
that'll create a copy for us and then
let's<00:14:37.199><c> iterate</c><00:14:37.760><c> over</c><00:14:38.399><c> that</c><00:14:38.800><c> copy</c><00:14:39.680><c> instead</c>

00:14:40.470 --> 00:14:40.480 align:start position:0%
let's iterate over that copy instead
 

00:14:40.480 --> 00:14:42.230 align:start position:0%
let's iterate over that copy instead
because<00:14:40.720><c> we</c><00:14:40.880><c> want</c><00:14:41.120><c> to</c><00:14:41.199><c> be</c><00:14:41.440><c> updating</c><00:14:42.000><c> the</c>

00:14:42.230 --> 00:14:42.240 align:start position:0%
because we want to be updating the
 

00:14:42.240 --> 00:14:44.230 align:start position:0%
because we want to be updating the
actual<00:14:42.800><c> adjacency</c><00:14:43.440><c> list</c><00:14:43.760><c> because</c><00:14:44.000><c> that's</c>

00:14:44.230 --> 00:14:44.240 align:start position:0%
actual adjacency list because that's
 

00:14:44.240 --> 00:14:46.069 align:start position:0%
actual adjacency list because that's
what's<00:14:44.480><c> going</c><00:14:44.560><c> to</c><00:14:44.720><c> be</c><00:14:44.959><c> used</c><00:14:45.360><c> in</c><00:14:45.600><c> future</c>

00:14:46.069 --> 00:14:46.079 align:start position:0%
what's going to be used in future
 

00:14:46.079 --> 00:14:48.470 align:start position:0%
what's going to be used in future
recursive<00:14:46.800><c> calls</c><00:14:47.519><c> okay</c><00:14:47.760><c> so</c><00:14:47.920><c> we're</c><00:14:48.240><c> we're</c>

00:14:48.470 --> 00:14:48.480 align:start position:0%
recursive calls okay so we're we're
 

00:14:48.480 --> 00:14:50.470 align:start position:0%
recursive calls okay so we're we're
visiting<00:14:49.120><c> one</c><00:14:49.279><c> of</c><00:14:49.360><c> the</c><00:14:49.519><c> neighbors</c><00:14:50.000><c> this</c><00:14:50.320><c> is</c>

00:14:50.470 --> 00:14:50.480 align:start position:0%
visiting one of the neighbors this is
 

00:14:50.480 --> 00:14:52.949 align:start position:0%
visiting one of the neighbors this is
that<00:14:50.720><c> neighbor</c><00:14:51.040><c> what</c><00:14:51.279><c> we</c><00:14:51.360><c> want</c><00:14:51.600><c> to</c><00:14:51.760><c> do</c><00:14:52.079><c> is</c><00:14:52.639><c> pop</c>

00:14:52.949 --> 00:14:52.959 align:start position:0%
that neighbor what we want to do is pop
 

00:14:52.959 --> 00:14:55.110 align:start position:0%
that neighbor what we want to do is pop
it<00:14:53.199><c> from</c><00:14:53.519><c> our</c><00:14:53.760><c> adjacency</c><00:14:54.399><c> list</c><00:14:54.639><c> so</c><00:14:54.800><c> let's</c><00:14:54.959><c> get</c>

00:14:55.110 --> 00:14:55.120 align:start position:0%
it from our adjacency list so let's get
 

00:14:55.120 --> 00:14:57.269 align:start position:0%
it from our adjacency list so let's get
the<00:14:55.199><c> adjacency</c><00:14:55.839><c> list</c><00:14:56.480><c> of</c><00:14:56.639><c> the</c><00:14:56.800><c> source</c><00:14:57.199><c> and</c>

00:14:57.269 --> 00:14:57.279 align:start position:0%
the adjacency list of the source and
 

00:14:57.279 --> 00:15:00.230 align:start position:0%
the adjacency list of the source and
then<00:14:57.600><c> pop</c><00:14:57.920><c> it</c><00:14:58.000><c> so</c><00:14:58.160><c> we're</c><00:14:58.320><c> popping</c><00:14:58.639><c> the</c><00:14:58.880><c> i</c><00:14:59.519><c> index</c>

00:15:00.230 --> 00:15:00.240 align:start position:0%
then pop it so we're popping the i index
 

00:15:00.240 --> 00:15:02.230 align:start position:0%
then pop it so we're popping the i index
and<00:15:00.880><c> once</c><00:15:01.120><c> we</c><00:15:01.279><c> pop</c><00:15:01.519><c> it</c><00:15:01.600><c> we</c><00:15:01.760><c> also</c><00:15:01.920><c> want</c><00:15:02.079><c> to</c>

00:15:02.230 --> 00:15:02.240 align:start position:0%
and once we pop it we also want to
 

00:15:02.240 --> 00:15:03.670 align:start position:0%
and once we pop it we also want to
append<00:15:02.560><c> it</c><00:15:02.639><c> to</c><00:15:02.800><c> our</c><00:15:02.959><c> result</c><00:15:03.360><c> what</c><00:15:03.519><c> we're</c>

00:15:03.670 --> 00:15:03.680 align:start position:0%
append it to our result what we're
 

00:15:03.680 --> 00:15:05.750 align:start position:0%
append it to our result what we're
saying<00:15:03.920><c> is</c><00:15:04.000><c> this</c><00:15:04.240><c> is</c><00:15:04.320><c> our</c><00:15:04.480><c> current</c><00:15:04.880><c> path</c><00:15:05.440><c> so</c><00:15:05.600><c> we</c>

00:15:05.750 --> 00:15:05.760 align:start position:0%
saying is this is our current path so we
 

00:15:05.760 --> 00:15:08.389 align:start position:0%
saying is this is our current path so we
can<00:15:06.000><c> add</c><00:15:06.240><c> that</c><00:15:06.560><c> v</c><00:15:06.800><c> that</c><00:15:07.040><c> vertex</c><00:15:07.519><c> to</c><00:15:07.760><c> our</c><00:15:08.000><c> result</c>

00:15:08.389 --> 00:15:08.399 align:start position:0%
can add that v that vertex to our result
 

00:15:08.399 --> 00:15:11.670 align:start position:0%
can add that v that vertex to our result
and<00:15:08.560><c> then</c><00:15:08.959><c> what</c><00:15:09.120><c> we</c><00:15:09.279><c> want</c><00:15:09.440><c> to</c><00:15:09.600><c> do</c><00:15:09.920><c> is</c><00:15:10.399><c> run</c><00:15:10.800><c> our</c>

00:15:11.670 --> 00:15:11.680 align:start position:0%
and then what we want to do is run our
 

00:15:11.680 --> 00:15:13.189 align:start position:0%
and then what we want to do is run our
i'm<00:15:11.839><c> just</c><00:15:12.000><c> gonna</c><00:15:12.320><c> you</c><00:15:12.399><c> know</c><00:15:12.560><c> leave</c><00:15:12.720><c> that</c><00:15:12.959><c> as</c><00:15:13.120><c> a</c>

00:15:13.189 --> 00:15:13.199 align:start position:0%
i'm just gonna you know leave that as a
 

00:15:13.199 --> 00:15:15.910 align:start position:0%
i'm just gonna you know leave that as a
placeholder<00:15:13.760><c> for</c><00:15:13.920><c> now</c><00:15:14.240><c> and</c><00:15:14.320><c> then</c><00:15:14.560><c> if</c><00:15:14.800><c> that</c><00:15:15.040><c> dfs</c>

00:15:15.910 --> 00:15:15.920 align:start position:0%
placeholder for now and then if that dfs
 

00:15:15.920 --> 00:15:18.069 align:start position:0%
placeholder for now and then if that dfs
ends<00:15:16.160><c> up</c><00:15:16.320><c> returning</c><00:15:16.880><c> true</c><00:15:17.360><c> then</c><00:15:17.680><c> we</c><00:15:17.839><c> can</c>

00:15:18.069 --> 00:15:18.079 align:start position:0%
ends up returning true then we can
 

00:15:18.079 --> 00:15:20.310 align:start position:0%
ends up returning true then we can
return<00:15:18.480><c> true</c><00:15:19.120><c> and</c><00:15:19.279><c> then</c><00:15:19.519><c> stop</c><00:15:19.760><c> the</c><00:15:19.920><c> function</c>

00:15:20.310 --> 00:15:20.320 align:start position:0%
return true and then stop the function
 

00:15:20.320 --> 00:15:21.829 align:start position:0%
return true and then stop the function
call<00:15:20.560><c> because</c><00:15:20.720><c> we're</c><00:15:20.880><c> just</c><00:15:21.040><c> looking</c><00:15:21.360><c> for</c><00:15:21.600><c> one</c>

00:15:21.829 --> 00:15:21.839 align:start position:0%
call because we're just looking for one
 

00:15:21.839 --> 00:15:24.230 align:start position:0%
call because we're just looking for one
path<00:15:22.320><c> and</c><00:15:22.480><c> we</c><00:15:22.639><c> will</c><00:15:22.800><c> know</c><00:15:23.040><c> that</c><00:15:23.199><c> that</c><00:15:23.440><c> path</c><00:15:24.000><c> is</c>

00:15:24.230 --> 00:15:24.240 align:start position:0%
path and we will know that that path is
 

00:15:24.240 --> 00:15:26.310 align:start position:0%
path and we will know that that path is
the<00:15:24.480><c> smallest</c><00:15:24.959><c> lexical</c><00:15:25.440><c> order</c><00:15:25.680><c> one</c><00:15:26.000><c> because</c>

00:15:26.310 --> 00:15:26.320 align:start position:0%
the smallest lexical order one because
 

00:15:26.320 --> 00:15:27.910 align:start position:0%
the smallest lexical order one because
we<00:15:26.480><c> sorted</c><00:15:26.959><c> our</c><00:15:27.040><c> tickets</c><00:15:27.360><c> which</c><00:15:27.519><c> i</c><00:15:27.680><c> just</c>

00:15:27.910 --> 00:15:27.920 align:start position:0%
we sorted our tickets which i just
 

00:15:27.920 --> 00:15:29.509 align:start position:0%
we sorted our tickets which i just
realized<00:15:28.320><c> i</c><00:15:28.399><c> forgot</c><00:15:28.720><c> to</c><00:15:28.880><c> do</c><00:15:29.120><c> so</c><00:15:29.279><c> let's</c>

00:15:29.509 --> 00:15:29.519 align:start position:0%
realized i forgot to do so let's
 

00:15:29.519 --> 00:15:31.110 align:start position:0%
realized i forgot to do so let's
actually<00:15:29.759><c> do</c><00:15:29.920><c> that</c><00:15:30.160><c> up</c><00:15:30.320><c> above</c><00:15:30.639><c> before</c><00:15:30.880><c> we</c>

00:15:31.110 --> 00:15:31.120 align:start position:0%
actually do that up above before we
 

00:15:31.120 --> 00:15:33.030 align:start position:0%
actually do that up above before we
build<00:15:31.440><c> our</c><00:15:31.600><c> adjacency</c><00:15:32.160><c> list</c><00:15:32.560><c> let's</c><00:15:32.880><c> not</c>

00:15:33.030 --> 00:15:33.040 align:start position:0%
build our adjacency list let's not
 

00:15:33.040 --> 00:15:36.069 align:start position:0%
build our adjacency list let's not
forget<00:15:33.519><c> to</c><00:15:33.759><c> actually</c><00:15:34.160><c> sort</c><00:15:34.800><c> our</c><00:15:35.120><c> tickets</c>

00:15:36.069 --> 00:15:36.079 align:start position:0%
forget to actually sort our tickets
 

00:15:36.079 --> 00:15:38.310 align:start position:0%
forget to actually sort our tickets
by<00:15:36.320><c> default</c><00:15:36.720><c> in</c><00:15:36.800><c> python</c><00:15:37.199><c> this</c><00:15:37.440><c> will</c>

00:15:38.310 --> 00:15:38.320 align:start position:0%
by default in python this will
 

00:15:38.320 --> 00:15:40.310 align:start position:0%
by default in python this will
sort<00:15:38.639><c> the</c><00:15:38.720><c> tickets</c><00:15:39.040><c> based</c><00:15:39.360><c> on</c><00:15:39.519><c> the</c><00:15:39.680><c> pair</c>

00:15:40.310 --> 00:15:40.320 align:start position:0%
sort the tickets based on the pair
 

00:15:40.320 --> 00:15:42.230 align:start position:0%
sort the tickets based on the pair
basically<00:15:40.800><c> the</c><00:15:40.959><c> logic</c><00:15:41.360><c> that</c><00:15:41.440><c> i</c><00:15:41.600><c> summarized</c>

00:15:42.230 --> 00:15:42.240 align:start position:0%
basically the logic that i summarized
 

00:15:42.240 --> 00:15:44.150 align:start position:0%
basically the logic that i summarized
earlier<00:15:42.720><c> in</c><00:15:42.800><c> the</c><00:15:42.959><c> video</c><00:15:43.519><c> but</c><00:15:43.839><c> in</c><00:15:44.000><c> some</c>

00:15:44.150 --> 00:15:44.160 align:start position:0%
earlier in the video but in some
 

00:15:44.160 --> 00:15:45.509 align:start position:0%
earlier in the video but in some
languages<00:15:44.639><c> you</c><00:15:44.720><c> might</c><00:15:44.880><c> have</c><00:15:45.040><c> to</c><00:15:45.199><c> you</c><00:15:45.360><c> know</c>

00:15:45.509 --> 00:15:45.519 align:start position:0%
languages you might have to you know
 

00:15:45.519 --> 00:15:48.069 align:start position:0%
languages you might have to you know
customize<00:15:46.079><c> that</c><00:15:46.320><c> source</c><00:15:46.800><c> comparator</c><00:15:47.680><c> okay</c><00:15:47.920><c> by</c>

00:15:48.069 --> 00:15:48.079 align:start position:0%
customize that source comparator okay by
 

00:15:48.079 --> 00:15:50.069 align:start position:0%
customize that source comparator okay by
jumping<00:15:48.399><c> back</c><00:15:48.639><c> to</c><00:15:48.800><c> the</c><00:15:48.880><c> logic</c><00:15:49.279><c> down</c><00:15:49.519><c> here</c><00:15:49.920><c> so</c>

00:15:50.069 --> 00:15:50.079 align:start position:0%
jumping back to the logic down here so
 

00:15:50.079 --> 00:15:51.829 align:start position:0%
jumping back to the logic down here so
this<00:15:50.240><c> is</c><00:15:50.399><c> the</c><00:15:50.560><c> decision</c><00:15:51.040><c> that</c><00:15:51.199><c> we're</c><00:15:51.360><c> making</c>

00:15:51.829 --> 00:15:51.839 align:start position:0%
this is the decision that we're making
 

00:15:51.839 --> 00:15:53.509 align:start position:0%
this is the decision that we're making
kind<00:15:52.000><c> of</c><00:15:52.160><c> in</c><00:15:52.240><c> our</c><00:15:52.399><c> back</c><00:15:52.639><c> tracking</c><00:15:53.040><c> if</c><00:15:53.120><c> we</c><00:15:53.279><c> find</c>

00:15:53.509 --> 00:15:53.519 align:start position:0%
kind of in our back tracking if we find
 

00:15:53.519 --> 00:15:55.269 align:start position:0%
kind of in our back tracking if we find
that<00:15:53.680><c> it</c><00:15:53.759><c> returns</c><00:15:54.240><c> true</c><00:15:54.480><c> that's</c><00:15:54.720><c> great</c><00:15:55.040><c> but</c><00:15:55.199><c> if</c>

00:15:55.269 --> 00:15:55.279 align:start position:0%
that it returns true that's great but if
 

00:15:55.279 --> 00:15:56.870 align:start position:0%
that it returns true that's great but if
it<00:15:55.440><c> doesn't</c><00:15:55.759><c> return</c><00:15:56.079><c> true</c><00:15:56.320><c> then</c><00:15:56.480><c> we</c><00:15:56.639><c> have</c><00:15:56.720><c> to</c>

00:15:56.870 --> 00:15:56.880 align:start position:0%
it doesn't return true then we have to
 

00:15:56.880 --> 00:15:59.350 align:start position:0%
it doesn't return true then we have to
backtrack<00:15:57.680><c> this</c><00:15:57.920><c> decision</c><00:15:58.480><c> so</c><00:15:58.639><c> what</c><00:15:58.959><c> what</c><00:15:59.199><c> we</c>

00:15:59.350 --> 00:15:59.360 align:start position:0%
backtrack this decision so what what we
 

00:15:59.360 --> 00:16:01.509 align:start position:0%
backtrack this decision so what what we
just<00:15:59.519><c> did</c><00:15:59.839><c> up</c><00:16:00.000><c> above</c><00:16:00.399><c> what</c><00:16:00.639><c> we</c><00:16:00.720><c> did</c><00:16:00.959><c> was</c><00:16:01.279><c> we</c>

00:16:01.509 --> 00:16:01.519 align:start position:0%
just did up above what we did was we
 

00:16:01.519 --> 00:16:05.189 align:start position:0%
just did up above what we did was we
popped<00:16:02.240><c> this</c><00:16:02.800><c> so</c><00:16:03.519><c> instead</c><00:16:03.759><c> of</c><00:16:04.000><c> popping</c><00:16:04.800><c> let's</c>

00:16:05.189 --> 00:16:05.199 align:start position:0%
popped this so instead of popping let's
 

00:16:05.199 --> 00:16:08.949 align:start position:0%
popped this so instead of popping let's
insert<00:16:05.680><c> it</c><00:16:05.920><c> back</c><00:16:06.399><c> into</c><00:16:07.040><c> our</c><00:16:08.079><c> adjacency</c><00:16:08.720><c> list</c>

00:16:08.949 --> 00:16:08.959 align:start position:0%
insert it back into our adjacency list
 

00:16:08.959 --> 00:16:11.749 align:start position:0%
insert it back into our adjacency list
so<00:16:09.199><c> at</c><00:16:09.519><c> this</c><00:16:09.839><c> index</c><00:16:10.160><c> we</c><00:16:10.320><c> want</c><00:16:10.560><c> to</c><00:16:10.720><c> add</c><00:16:11.120><c> v</c><00:16:11.440><c> back</c>

00:16:11.749 --> 00:16:11.759 align:start position:0%
so at this index we want to add v back
 

00:16:11.759 --> 00:16:14.710 align:start position:0%
so at this index we want to add v back
to<00:16:11.920><c> it</c><00:16:12.399><c> and</c><00:16:12.959><c> we</c><00:16:13.360><c> you</c><00:16:13.440><c> know</c><00:16:13.759><c> added</c><00:16:14.160><c> this</c><00:16:14.320><c> to</c><00:16:14.480><c> the</c>

00:16:14.710 --> 00:16:14.720 align:start position:0%
to it and we you know added this to the
 

00:16:14.720 --> 00:16:17.030 align:start position:0%
to it and we you know added this to the
end<00:16:14.880><c> of</c><00:16:15.040><c> our</c><00:16:15.199><c> result</c><00:16:15.600><c> so</c><00:16:15.839><c> now</c><00:16:16.000><c> let's</c><00:16:16.320><c> actually</c>

00:16:17.030 --> 00:16:17.040 align:start position:0%
end of our result so now let's actually
 

00:16:17.040 --> 00:16:19.509 align:start position:0%
end of our result so now let's actually
pop<00:16:17.600><c> from</c><00:16:17.839><c> the</c><00:16:18.079><c> end</c><00:16:18.240><c> of</c><00:16:18.399><c> our</c><00:16:18.480><c> result</c><00:16:18.880><c> to</c><00:16:18.959><c> remove</c>

00:16:19.509 --> 00:16:19.519 align:start position:0%
pop from the end of our result to remove
 

00:16:19.519 --> 00:16:21.509 align:start position:0%
pop from the end of our result to remove
that<00:16:20.079><c> right</c><00:16:20.320><c> basically</c><00:16:20.800><c> reversing</c><00:16:21.360><c> this</c>

00:16:21.509 --> 00:16:21.519 align:start position:0%
that right basically reversing this
 

00:16:21.519 --> 00:16:23.749 align:start position:0%
that right basically reversing this
decision<00:16:22.000><c> that</c><00:16:22.079><c> we</c><00:16:22.240><c> make</c><00:16:22.880><c> and</c><00:16:23.040><c> then</c><00:16:23.279><c> making</c><00:16:23.600><c> a</c>

00:16:23.749 --> 00:16:23.759 align:start position:0%
decision that we make and then making a
 

00:16:23.759 --> 00:16:25.670 align:start position:0%
decision that we make and then making a
new<00:16:24.000><c> decision</c><00:16:24.399><c> on</c><00:16:24.560><c> the</c><00:16:24.720><c> next</c><00:16:25.040><c> iteration</c><00:16:25.600><c> of</c>

00:16:25.670 --> 00:16:25.680 align:start position:0%
new decision on the next iteration of
 

00:16:25.680 --> 00:16:27.910 align:start position:0%
new decision on the next iteration of
the<00:16:25.920><c> loop</c><00:16:26.320><c> now</c><00:16:26.480><c> of</c><00:16:26.560><c> course</c><00:16:26.880><c> it's</c><00:16:27.120><c> possible</c>

00:16:27.910 --> 00:16:27.920 align:start position:0%
the loop now of course it's possible
 

00:16:27.920 --> 00:16:30.550 align:start position:0%
the loop now of course it's possible
that<00:16:28.480><c> you</c><00:16:28.639><c> know</c><00:16:28.959><c> down</c><00:16:29.279><c> this</c><00:16:29.759><c> decision</c><00:16:30.480><c> you</c>

00:16:30.550 --> 00:16:30.560 align:start position:0%
that you know down this decision you
 

00:16:30.560 --> 00:16:32.710 align:start position:0%
that you know down this decision you
know<00:16:30.880><c> down</c><00:16:31.120><c> this</c><00:16:31.279><c> recursive</c><00:16:31.839><c> call</c><00:16:32.160><c> we</c><00:16:32.320><c> don't</c>

00:16:32.710 --> 00:16:32.720 align:start position:0%
know down this recursive call we don't
 

00:16:32.720 --> 00:16:34.870 align:start position:0%
know down this recursive call we don't
find<00:16:33.120><c> a</c><00:16:33.279><c> solution</c><00:16:33.759><c> so</c><00:16:33.920><c> in</c><00:16:34.000><c> that</c><00:16:34.160><c> case</c><00:16:34.399><c> we</c><00:16:34.639><c> end</c>

00:16:34.870 --> 00:16:34.880 align:start position:0%
find a solution so in that case we end
 

00:16:34.880 --> 00:16:38.069 align:start position:0%
find a solution so in that case we end
up<00:16:35.040><c> returning</c><00:16:35.680><c> false</c><00:16:36.399><c> from</c><00:16:36.959><c> this</c><00:16:37.440><c> function</c>

00:16:38.069 --> 00:16:38.079 align:start position:0%
up returning false from this function
 

00:16:38.079 --> 00:16:39.829 align:start position:0%
up returning false from this function
but<00:16:38.240><c> we</c><00:16:38.399><c> know</c><00:16:38.560><c> we</c><00:16:38.800><c> are</c><00:16:38.959><c> guaranteed</c><00:16:39.440><c> at</c><00:16:39.519><c> least</c>

00:16:39.829 --> 00:16:39.839 align:start position:0%
but we know we are guaranteed at least
 

00:16:39.839 --> 00:16:41.749 align:start position:0%
but we know we are guaranteed at least
one<00:16:40.079><c> solution</c><00:16:40.560><c> so</c><00:16:40.959><c> we</c><00:16:41.120><c> know</c><00:16:41.279><c> that</c><00:16:41.440><c> when</c><00:16:41.600><c> we</c>

00:16:41.749 --> 00:16:41.759 align:start position:0%
one solution so we know that when we
 

00:16:41.759 --> 00:16:43.430 align:start position:0%
one solution so we know that when we
actually<00:16:42.000><c> called</c><00:16:42.240><c> this</c><00:16:42.480><c> dfs</c><00:16:42.880><c> function</c><00:16:43.199><c> which</c>

00:16:43.430 --> 00:16:43.440 align:start position:0%
actually called this dfs function which
 

00:16:43.440 --> 00:16:45.910 align:start position:0%
actually called this dfs function which
i'm<00:16:43.519><c> going</c><00:16:43.600><c> to</c><00:16:43.680><c> do</c><00:16:43.920><c> right</c><00:16:44.160><c> now</c><00:16:44.720><c> called</c><00:16:44.959><c> the</c><00:16:45.040><c> dfs</c>

00:16:45.910 --> 00:16:45.920 align:start position:0%
i'm going to do right now called the dfs
 

00:16:45.920 --> 00:16:47.430 align:start position:0%
i'm going to do right now called the dfs
and<00:16:46.160><c> we</c><00:16:46.320><c> know</c><00:16:46.480><c> that</c><00:16:46.639><c> the</c><00:16:46.720><c> parameter</c><00:16:47.199><c> we</c><00:16:47.279><c> want</c>

00:16:47.430 --> 00:16:47.440 align:start position:0%
and we know that the parameter we want
 

00:16:47.440 --> 00:16:49.990 align:start position:0%
and we know that the parameter we want
to<00:16:47.519><c> pass</c><00:16:47.839><c> in</c><00:16:48.079><c> is</c><00:16:48.240><c> jfk</c><00:16:48.880><c> that's</c><00:16:49.199><c> always</c><00:16:49.600><c> going</c><00:16:49.839><c> to</c>

00:16:49.990 --> 00:16:50.000 align:start position:0%
to pass in is jfk that's always going to
 

00:16:50.000 --> 00:16:52.790 align:start position:0%
to pass in is jfk that's always going to
be<00:16:50.240><c> our</c><00:16:50.480><c> initial</c><00:16:50.959><c> source</c><00:16:51.440><c> node</c><00:16:51.759><c> so</c><00:16:51.920><c> we</c><00:16:52.160><c> pass</c><00:16:52.560><c> in</c>

00:16:52.790 --> 00:16:52.800 align:start position:0%
be our initial source node so we pass in
 

00:16:52.800 --> 00:16:54.870 align:start position:0%
be our initial source node so we pass in
dfs<00:16:53.440><c> and</c><00:16:53.519><c> then</c><00:16:53.600><c> what</c><00:16:53.759><c> we</c><00:16:53.920><c> end</c><00:16:54.079><c> up</c><00:16:54.160><c> returning</c><00:16:54.720><c> is</c>

00:16:54.870 --> 00:16:54.880 align:start position:0%
dfs and then what we end up returning is
 

00:16:54.880 --> 00:16:57.110 align:start position:0%
dfs and then what we end up returning is
going<00:16:55.040><c> to</c><00:16:55.120><c> be</c><00:16:55.440><c> our</c><00:16:55.759><c> result</c><00:16:56.480><c> and</c><00:16:56.720><c> of</c><00:16:56.800><c> course</c>

00:16:57.110 --> 00:16:57.120 align:start position:0%
going to be our result and of course
 

00:16:57.120 --> 00:16:59.269 align:start position:0%
going to be our result and of course
this<00:16:57.279><c> time</c><00:16:57.600><c> it</c><00:16:57.680><c> wasn't</c><00:16:58.000><c> really</c><00:16:58.240><c> the</c><00:16:58.399><c> logic</c><00:16:58.880><c> i</c>

00:16:59.269 --> 00:16:59.279 align:start position:0%
this time it wasn't really the logic i
 

00:16:59.279 --> 00:17:00.870 align:start position:0%
this time it wasn't really the logic i
misnamed<00:16:59.920><c> one</c><00:17:00.079><c> of</c><00:17:00.160><c> the</c><00:17:00.240><c> variables</c><00:17:00.639><c> i</c><00:17:00.720><c> don't</c>

00:17:00.870 --> 00:17:00.880 align:start position:0%
misnamed one of the variables i don't
 

00:17:00.880 --> 00:17:02.629 align:start position:0%
misnamed one of the variables i don't
know<00:17:00.959><c> why</c><00:17:01.120><c> i</c><00:17:01.199><c> named</c><00:17:01.519><c> it</c><00:17:01.680><c> time</c><00:17:02.000><c> it</c><00:17:02.160><c> should</c><00:17:02.399><c> be</c>

00:17:02.629 --> 00:17:02.639 align:start position:0%
know why i named it time it should be
 

00:17:02.639 --> 00:17:05.350 align:start position:0%
know why i named it time it should be
temp<00:17:02.959><c> okay</c><00:17:03.279><c> now</c><00:17:03.440><c> let's</c><00:17:03.680><c> rerun</c><00:17:04.160><c> this</c><00:17:04.640><c> and</c><00:17:05.039><c> i</c>

00:17:05.350 --> 00:17:05.360 align:start position:0%
temp okay now let's rerun this and i
 

00:17:05.360 --> 00:17:07.510 align:start position:0%
temp okay now let's rerun this and i
left<00:17:05.600><c> our</c><00:17:05.839><c> placeholder</c><00:17:06.400><c> dfs</c><00:17:06.959><c> as</c><00:17:07.120><c> it</c><00:17:07.280><c> is</c><00:17:07.439><c> we</c>

00:17:07.510 --> 00:17:07.520 align:start position:0%
left our placeholder dfs as it is we
 

00:17:07.520 --> 00:17:09.990 align:start position:0%
left our placeholder dfs as it is we
forgot<00:17:07.839><c> to</c><00:17:08.000><c> pass</c><00:17:08.319><c> in</c><00:17:08.559><c> the</c><00:17:09.280><c> variable</c><00:17:09.760><c> we</c><00:17:09.839><c> know</c>

00:17:09.990 --> 00:17:10.000 align:start position:0%
forgot to pass in the variable we know
 

00:17:10.000 --> 00:17:11.750 align:start position:0%
forgot to pass in the variable we know
that<00:17:10.160><c> the</c><00:17:10.240><c> variable</c><00:17:10.720><c> is</c><00:17:11.039><c> v</c>

00:17:11.750 --> 00:17:11.760 align:start position:0%
that the variable is v
 

00:17:11.760 --> 00:17:13.350 align:start position:0%
that the variable is v
v<00:17:12.079><c> is</c><00:17:12.160><c> the</c><00:17:12.319><c> node</c><00:17:12.559><c> that</c><00:17:12.720><c> we're</c><00:17:13.039><c> going</c><00:17:13.120><c> to</c><00:17:13.199><c> be</c>

00:17:13.350 --> 00:17:13.360 align:start position:0%
v is the node that we're going to be
 

00:17:13.360 --> 00:17:15.429 align:start position:0%
v is the node that we're going to be
passing<00:17:13.679><c> in</c><00:17:13.839><c> okay</c><00:17:14.079><c> let's</c><00:17:14.319><c> try</c><00:17:14.559><c> this</c><00:17:14.720><c> again</c>

00:17:15.429 --> 00:17:15.439 align:start position:0%
passing in okay let's try this again
 

00:17:15.439 --> 00:17:17.350 align:start position:0%
passing in okay let's try this again
okay<00:17:15.919><c> awesome</c><00:17:16.240><c> now</c><00:17:16.480><c> it</c><00:17:16.640><c> actually</c><00:17:16.880><c> works</c><00:17:17.199><c> you</c>

00:17:17.350 --> 00:17:17.360 align:start position:0%
okay awesome now it actually works you
 

00:17:17.360 --> 00:17:18.949 align:start position:0%
okay awesome now it actually works you
can<00:17:17.439><c> see</c><00:17:17.600><c> that</c><00:17:17.760><c> it's</c><00:17:18.000><c> pretty</c><00:17:18.319><c> efficient</c><00:17:18.799><c> on</c>

00:17:18.949 --> 00:17:18.959 align:start position:0%
can see that it's pretty efficient on
 

00:17:18.959 --> 00:17:20.870 align:start position:0%
can see that it's pretty efficient on
the<00:17:19.199><c> left</c><00:17:19.760><c> this</c><00:17:19.919><c> is</c><00:17:20.000><c> a</c><00:17:20.079><c> pretty</c><00:17:20.400><c> challenging</c>

00:17:20.870 --> 00:17:20.880 align:start position:0%
the left this is a pretty challenging
 

00:17:20.880 --> 00:17:23.029 align:start position:0%
the left this is a pretty challenging
problem<00:17:21.280><c> but</c><00:17:21.439><c> i</c><00:17:21.520><c> think</c><00:17:21.679><c> that</c><00:17:21.839><c> this</c><00:17:22.079><c> solution</c>

00:17:23.029 --> 00:17:23.039 align:start position:0%
problem but i think that this solution
 

00:17:23.039 --> 00:17:25.429 align:start position:0%
problem but i think that this solution
while<00:17:23.360><c> it's</c><00:17:23.520><c> difficult</c><00:17:24.079><c> it</c><00:17:24.319><c> is</c><00:17:24.559><c> also</c><00:17:24.959><c> doable</c>

00:17:25.429 --> 00:17:25.439 align:start position:0%
while it's difficult it is also doable
 

00:17:25.439 --> 00:17:26.949 align:start position:0%
while it's difficult it is also doable
for<00:17:25.600><c> a</c><00:17:25.679><c> hard</c><00:17:26.000><c> problem</c><00:17:26.240><c> so</c><00:17:26.400><c> i</c><00:17:26.480><c> really</c><00:17:26.640><c> hope</c><00:17:26.880><c> that</c>

00:17:26.949 --> 00:17:26.959 align:start position:0%
for a hard problem so i really hope that
 

00:17:26.959 --> 00:17:29.029 align:start position:0%
for a hard problem so i really hope that
this<00:17:27.120><c> was</c><00:17:27.280><c> helpful</c><00:17:27.760><c> if</c><00:17:27.919><c> it</c><00:17:28.000><c> was</c><00:17:28.480><c> please</c><00:17:28.799><c> like</c>

00:17:29.029 --> 00:17:29.039 align:start position:0%
this was helpful if it was please like
 

00:17:29.039 --> 00:17:30.630 align:start position:0%
this was helpful if it was please like
and<00:17:29.120><c> subscribe</c><00:17:29.679><c> it</c><00:17:29.840><c> really</c><00:17:30.080><c> supports</c><00:17:30.480><c> the</c>

00:17:30.630 --> 00:17:30.640 align:start position:0%
and subscribe it really supports the
 

00:17:30.640 --> 00:17:32.390 align:start position:0%
and subscribe it really supports the
channel<00:17:30.960><c> a</c><00:17:31.120><c> lot</c><00:17:31.360><c> consider</c><00:17:31.760><c> checking</c><00:17:32.080><c> out</c><00:17:32.160><c> my</c>

00:17:32.390 --> 00:17:32.400 align:start position:0%
channel a lot consider checking out my
 

00:17:32.400 --> 00:17:33.830 align:start position:0%
channel a lot consider checking out my
patreon<00:17:32.799><c> where</c><00:17:32.960><c> you</c><00:17:33.039><c> can</c><00:17:33.200><c> further</c><00:17:33.440><c> support</c>

00:17:33.830 --> 00:17:33.840 align:start position:0%
patreon where you can further support
 

00:17:33.840 --> 00:17:35.750 align:start position:0%
patreon where you can further support
the<00:17:34.000><c> channel</c><00:17:34.480><c> and</c><00:17:34.720><c> hopefully</c><00:17:35.200><c> i'll</c><00:17:35.440><c> see</c><00:17:35.600><c> you</c>

00:17:35.750 --> 00:17:35.760 align:start position:0%
the channel and hopefully i'll see you
 

00:17:35.760 --> 00:17:39.520 align:start position:0%
the channel and hopefully i'll see you
pretty<00:17:36.080><c> soon</c><00:17:36.559><c> thanks</c><00:17:36.799><c> for</c><00:17:36.960><c> watching</c>

