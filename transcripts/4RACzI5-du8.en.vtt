WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.910 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.799><c> welcome</c><00:00:01.280><c> back</c><00:00:01.599><c> and</c><00:00:01.680><c> let's</c>

00:00:01.910 --> 00:00:01.920 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.920 --> 00:00:03.990 align:start position:0%
hey everyone welcome back and let's
write<00:00:02.159><c> some</c><00:00:02.320><c> more</c><00:00:02.560><c> neat</c><00:00:02.879><c> code</c><00:00:03.199><c> today</c><00:00:03.439><c> so</c><00:00:03.600><c> today</c>

00:00:03.990 --> 00:00:04.000 align:start position:0%
write some more neat code today so today
 

00:00:04.000 --> 00:00:04.630 align:start position:0%
write some more neat code today so today
let's<00:00:04.240><c> solve</c>

00:00:04.630 --> 00:00:04.640 align:start position:0%
let's solve
 

00:00:04.640 --> 00:00:07.430 align:start position:0%
let's solve
palindromic<00:00:05.680><c> substrings</c><00:00:06.720><c> and</c><00:00:06.960><c> this</c><00:00:07.200><c> is</c>

00:00:07.430 --> 00:00:07.440 align:start position:0%
palindromic substrings and this is
 

00:00:07.440 --> 00:00:09.669 align:start position:0%
palindromic substrings and this is
another<00:00:08.000><c> problem</c><00:00:08.480><c> from</c><00:00:08.720><c> the</c><00:00:08.880><c> leak</c><00:00:09.200><c> code</c>

00:00:09.669 --> 00:00:09.679 align:start position:0%
another problem from the leak code
 

00:00:09.679 --> 00:00:13.190 align:start position:0%
another problem from the leak code
blind<00:00:10.160><c> 75</c><00:00:10.960><c> list</c><00:00:11.280><c> a</c><00:00:11.440><c> list</c><00:00:11.679><c> of</c><00:00:11.840><c> 75</c><00:00:12.480><c> very</c><00:00:12.880><c> good</c>

00:00:13.190 --> 00:00:13.200 align:start position:0%
blind 75 list a list of 75 very good
 

00:00:13.200 --> 00:00:15.110 align:start position:0%
blind 75 list a list of 75 very good
leak<00:00:13.440><c> code</c><00:00:13.679><c> problems</c><00:00:14.080><c> to</c><00:00:14.320><c> solve</c><00:00:14.719><c> and</c><00:00:14.960><c> this</c>

00:00:15.110 --> 00:00:15.120 align:start position:0%
leak code problems to solve and this
 

00:00:15.120 --> 00:00:16.710 align:start position:0%
leak code problems to solve and this
time<00:00:15.360><c> we</c><00:00:15.440><c> will</c><00:00:15.679><c> be</c><00:00:15.759><c> doing</c><00:00:16.000><c> palindromic</c>

00:00:16.710 --> 00:00:16.720 align:start position:0%
time we will be doing palindromic
 

00:00:16.720 --> 00:00:18.150 align:start position:0%
time we will be doing palindromic
substrings<00:00:17.279><c> down</c><00:00:17.600><c> here</c>

00:00:18.150 --> 00:00:18.160 align:start position:0%
substrings down here
 

00:00:18.160 --> 00:00:19.990 align:start position:0%
substrings down here
and<00:00:18.320><c> so</c><00:00:18.480><c> we</c><00:00:18.640><c> are</c><00:00:18.800><c> getting</c><00:00:19.039><c> one</c><00:00:19.199><c> step</c><00:00:19.520><c> closer</c><00:00:19.840><c> to</c>

00:00:19.990 --> 00:00:20.000 align:start position:0%
and so we are getting one step closer to
 

00:00:20.000 --> 00:00:21.830 align:start position:0%
and so we are getting one step closer to
filling<00:00:20.320><c> out</c><00:00:20.400><c> this</c><00:00:20.640><c> entire</c><00:00:21.119><c> list</c><00:00:21.439><c> and</c><00:00:21.600><c> this</c>

00:00:21.830 --> 00:00:21.840 align:start position:0%
filling out this entire list and this
 

00:00:21.840 --> 00:00:23.590 align:start position:0%
filling out this entire list and this
problem<00:00:22.240><c> palindromic</c><00:00:22.880><c> substrings</c><00:00:23.439><c> is</c>

00:00:23.590 --> 00:00:23.600 align:start position:0%
problem palindromic substrings is
 

00:00:23.600 --> 00:00:25.269 align:start position:0%
problem palindromic substrings is
actually<00:00:24.000><c> really</c><00:00:24.320><c> similar</c><00:00:24.640><c> to</c><00:00:24.880><c> another</c>

00:00:25.269 --> 00:00:25.279 align:start position:0%
actually really similar to another
 

00:00:25.279 --> 00:00:26.470 align:start position:0%
actually really similar to another
problem<00:00:25.680><c> i've</c><00:00:25.840><c> solved</c>

00:00:26.470 --> 00:00:26.480 align:start position:0%
problem i've solved
 

00:00:26.480 --> 00:00:29.109 align:start position:0%
problem i've solved
longest<00:00:26.960><c> palindromic</c><00:00:27.760><c> substring</c><00:00:28.720><c> so</c><00:00:28.880><c> if</c><00:00:29.039><c> you</c>

00:00:29.109 --> 00:00:29.119 align:start position:0%
longest palindromic substring so if you
 

00:00:29.119 --> 00:00:30.550 align:start position:0%
longest palindromic substring so if you
would<00:00:29.279><c> like</c><00:00:29.439><c> to</c><00:00:29.599><c> i'd</c><00:00:29.840><c> recommend</c><00:00:30.240><c> watching</c>

00:00:30.550 --> 00:00:30.560 align:start position:0%
would like to i'd recommend watching
 

00:00:30.560 --> 00:00:32.549 align:start position:0%
would like to i'd recommend watching
this<00:00:30.800><c> video</c><00:00:31.119><c> as</c><00:00:31.279><c> well</c><00:00:31.519><c> longest</c><00:00:31.920><c> palindromic</c>

00:00:32.549 --> 00:00:32.559 align:start position:0%
this video as well longest palindromic
 

00:00:32.559 --> 00:00:34.310 align:start position:0%
this video as well longest palindromic
substring<00:00:33.040><c> i</c><00:00:33.120><c> will</c><00:00:33.360><c> probably</c><00:00:33.760><c> link</c><00:00:34.000><c> it</c><00:00:34.160><c> in</c><00:00:34.239><c> the</c>

00:00:34.310 --> 00:00:34.320 align:start position:0%
substring i will probably link it in the
 

00:00:34.320 --> 00:00:35.830 align:start position:0%
substring i will probably link it in the
description<00:00:34.880><c> below</c>

00:00:35.830 --> 00:00:35.840 align:start position:0%
description below
 

00:00:35.840 --> 00:00:38.470 align:start position:0%
description below
so<00:00:36.079><c> simply</c><00:00:36.480><c> we</c><00:00:36.640><c> are</c><00:00:36.800><c> given</c><00:00:37.200><c> a</c><00:00:37.360><c> string</c><00:00:37.760><c> s</c><00:00:38.079><c> and</c><00:00:38.160><c> we</c>

00:00:38.470 --> 00:00:38.480 align:start position:0%
so simply we are given a string s and we
 

00:00:38.480 --> 00:00:41.030 align:start position:0%
so simply we are given a string s and we
just<00:00:38.879><c> want</c><00:00:39.040><c> to</c><00:00:39.200><c> return</c><00:00:39.680><c> the</c><00:00:39.920><c> total</c><00:00:40.399><c> number</c><00:00:40.719><c> of</c>

00:00:41.030 --> 00:00:41.040 align:start position:0%
just want to return the total number of
 

00:00:41.040 --> 00:00:44.150 align:start position:0%
just want to return the total number of
palindromic<00:00:42.000><c> sub</c><00:00:42.320><c> strings</c><00:00:42.960><c> contained</c><00:00:43.760><c> in</c><00:00:44.000><c> the</c>

00:00:44.150 --> 00:00:44.160 align:start position:0%
palindromic sub strings contained in the
 

00:00:44.160 --> 00:00:45.270 align:start position:0%
palindromic sub strings contained in the
string<00:00:44.640><c> s</c>

00:00:45.270 --> 00:00:45.280 align:start position:0%
string s
 

00:00:45.280 --> 00:00:47.590 align:start position:0%
string s
and<00:00:45.520><c> as</c><00:00:45.760><c> you</c><00:00:45.920><c> may</c><00:00:46.079><c> know</c><00:00:46.320><c> a</c><00:00:46.559><c> palindromic</c>

00:00:47.590 --> 00:00:47.600 align:start position:0%
and as you may know a palindromic
 

00:00:47.600 --> 00:00:48.389 align:start position:0%
and as you may know a palindromic
substring

00:00:48.389 --> 00:00:48.399 align:start position:0%
substring
 

00:00:48.399 --> 00:00:50.549 align:start position:0%
substring
is<00:00:48.640><c> basically</c><00:00:49.120><c> a</c><00:00:49.280><c> string</c><00:00:49.600><c> that</c><00:00:49.680><c> can</c><00:00:49.840><c> be</c><00:00:50.160><c> read</c>

00:00:50.549 --> 00:00:50.559 align:start position:0%
is basically a string that can be read
 

00:00:50.559 --> 00:00:52.310 align:start position:0%
is basically a string that can be read
backwards<00:00:51.120><c> and</c><00:00:51.280><c> it's</c><00:00:51.440><c> the</c><00:00:51.600><c> same</c><00:00:51.840><c> string</c><00:00:52.160><c> so</c>

00:00:52.310 --> 00:00:52.320 align:start position:0%
backwards and it's the same string so
 

00:00:52.320 --> 00:00:52.950 align:start position:0%
backwards and it's the same string so
you<00:00:52.399><c> know</c><00:00:52.640><c> a</c>

00:00:52.950 --> 00:00:52.960 align:start position:0%
you know a
 

00:00:52.960 --> 00:00:54.549 align:start position:0%
you know a
a<00:00:53.199><c> if</c><00:00:53.360><c> you</c><00:00:53.440><c> read</c><00:00:53.680><c> it</c><00:00:53.840><c> backwards</c><00:00:54.239><c> it's</c><00:00:54.399><c> the</c>

00:00:54.549 --> 00:00:54.559 align:start position:0%
a if you read it backwards it's the
 

00:00:54.559 --> 00:00:55.990 align:start position:0%
a if you read it backwards it's the
exact<00:00:54.879><c> same</c><00:00:55.120><c> string</c><00:00:55.440><c> right</c>

00:00:55.990 --> 00:00:56.000 align:start position:0%
exact same string right
 

00:00:56.000 --> 00:00:59.590 align:start position:0%
exact same string right
a<00:00:56.719><c> b</c><00:00:57.520><c> a</c><00:00:58.160><c> you</c><00:00:58.320><c> know</c><00:00:58.399><c> this</c><00:00:58.640><c> is</c><00:00:58.719><c> the</c><00:00:58.879><c> same</c><00:00:59.280><c> string</c>

00:00:59.590 --> 00:00:59.600 align:start position:0%
a b a you know this is the same string
 

00:00:59.600 --> 00:01:00.709 align:start position:0%
a b a you know this is the same string
reversed

00:01:00.709 --> 00:01:00.719 align:start position:0%
reversed
 

00:01:00.719 --> 00:01:02.150 align:start position:0%
reversed
you<00:01:00.800><c> know</c><00:01:00.960><c> because</c><00:01:01.199><c> the</c><00:01:01.280><c> first</c><00:01:01.600><c> character</c><00:01:02.000><c> is</c>

00:01:02.150 --> 00:01:02.160 align:start position:0%
you know because the first character is
 

00:01:02.160 --> 00:01:03.830 align:start position:0%
you know because the first character is
the<00:01:02.239><c> same</c><00:01:02.559><c> as</c><00:01:02.719><c> the</c><00:01:02.800><c> last</c><00:01:03.120><c> character</c>

00:01:03.830 --> 00:01:03.840 align:start position:0%
the same as the last character
 

00:01:03.840 --> 00:01:05.590 align:start position:0%
the same as the last character
and<00:01:04.000><c> then</c><00:01:04.559><c> in</c><00:01:04.640><c> the</c><00:01:04.799><c> middle</c><00:01:05.040><c> we're</c><00:01:05.199><c> just</c><00:01:05.360><c> left</c>

00:01:05.590 --> 00:01:05.600 align:start position:0%
and then in the middle we're just left
 

00:01:05.600 --> 00:01:07.109 align:start position:0%
and then in the middle we're just left
with<00:01:05.760><c> one</c><00:01:06.080><c> character</c><00:01:06.560><c> and</c>

00:01:07.109 --> 00:01:07.119 align:start position:0%
with one character and
 

00:01:07.119 --> 00:01:09.190 align:start position:0%
with one character and
you<00:01:07.280><c> know</c><00:01:07.439><c> basically</c><00:01:07.920><c> that</c><00:01:08.159><c> kind</c><00:01:08.400><c> of</c><00:01:08.799><c> pushes</c>

00:01:09.190 --> 00:01:09.200 align:start position:0%
you know basically that kind of pushes
 

00:01:09.200 --> 00:01:11.190 align:start position:0%
you know basically that kind of pushes
us<00:01:09.439><c> towards</c><00:01:09.760><c> a</c><00:01:09.920><c> base</c><00:01:10.240><c> case</c><00:01:10.479><c> so</c>

00:01:11.190 --> 00:01:11.200 align:start position:0%
us towards a base case so
 

00:01:11.200 --> 00:01:13.030 align:start position:0%
us towards a base case so
as<00:01:11.360><c> you</c><00:01:11.520><c> may</c><00:01:11.680><c> know</c><00:01:11.920><c> there's</c><00:01:12.159><c> two</c><00:01:12.479><c> types</c><00:01:12.880><c> of</c>

00:01:13.030 --> 00:01:13.040 align:start position:0%
as you may know there's two types of
 

00:01:13.040 --> 00:01:14.630 align:start position:0%
as you may know there's two types of
palindromic<00:01:13.760><c> substrings</c>

00:01:14.630 --> 00:01:14.640 align:start position:0%
palindromic substrings
 

00:01:14.640 --> 00:01:16.630 align:start position:0%
palindromic substrings
strings<00:01:15.040><c> of</c><00:01:15.280><c> odd</c><00:01:15.759><c> length</c><00:01:16.080><c> right</c><00:01:16.320><c> so</c><00:01:16.479><c> for</c>

00:01:16.630 --> 00:01:16.640 align:start position:0%
strings of odd length right so for
 

00:01:16.640 --> 00:01:18.469 align:start position:0%
strings of odd length right so for
example<00:01:16.960><c> just</c><00:01:17.200><c> a</c><00:01:17.360><c> single</c><00:01:17.759><c> letter</c><00:01:18.080><c> a</c>

00:01:18.469 --> 00:01:18.479 align:start position:0%
example just a single letter a
 

00:01:18.479 --> 00:01:20.390 align:start position:0%
example just a single letter a
that's<00:01:18.720><c> a</c><00:01:18.799><c> palindrome</c><00:01:19.520><c> right</c><00:01:19.759><c> it's</c><00:01:20.000><c> it's</c><00:01:20.320><c> the</c>

00:01:20.390 --> 00:01:20.400 align:start position:0%
that's a palindrome right it's it's the
 

00:01:20.400 --> 00:01:21.590 align:start position:0%
that's a palindrome right it's it's the
same<00:01:20.720><c> backwards</c>

00:01:21.590 --> 00:01:21.600 align:start position:0%
same backwards
 

00:01:21.600 --> 00:01:23.510 align:start position:0%
same backwards
if<00:01:21.759><c> we</c><00:01:21.920><c> add</c><00:01:22.240><c> a</c><00:01:22.320><c> b</c><00:01:22.560><c> to</c><00:01:22.720><c> the</c><00:01:22.799><c> beginning</c><00:01:23.119><c> and</c><00:01:23.280><c> a</c><00:01:23.360><c> b</c>

00:01:23.510 --> 00:01:23.520 align:start position:0%
if we add a b to the beginning and a b
 

00:01:23.520 --> 00:01:25.429 align:start position:0%
if we add a b to the beginning and a b
to<00:01:23.680><c> the</c><00:01:23.840><c> end</c><00:01:24.159><c> it's</c><00:01:24.400><c> still</c><00:01:24.799><c> a</c><00:01:24.960><c> palindrome</c>

00:01:25.429 --> 00:01:25.439 align:start position:0%
to the end it's still a palindrome
 

00:01:25.439 --> 00:01:25.990 align:start position:0%
to the end it's still a palindrome
because<00:01:25.600><c> now</c><00:01:25.759><c> we</c>

00:01:25.990 --> 00:01:26.000 align:start position:0%
because now we
 

00:01:26.000 --> 00:01:28.710 align:start position:0%
because now we
expanded<00:01:26.640><c> it</c><00:01:27.040><c> outwards</c><00:01:27.680><c> with</c><00:01:27.920><c> the</c><00:01:28.080><c> exact</c><00:01:28.400><c> same</c>

00:01:28.710 --> 00:01:28.720 align:start position:0%
expanded it outwards with the exact same
 

00:01:28.720 --> 00:01:29.429 align:start position:0%
expanded it outwards with the exact same
character

00:01:29.429 --> 00:01:29.439 align:start position:0%
character
 

00:01:29.439 --> 00:01:31.190 align:start position:0%
character
similarly<00:01:30.079><c> we</c><00:01:30.159><c> can</c><00:01:30.320><c> do</c><00:01:30.479><c> the</c><00:01:30.560><c> same</c><00:01:30.799><c> thing</c><00:01:30.960><c> with</c>

00:01:31.190 --> 00:01:31.200 align:start position:0%
similarly we can do the same thing with
 

00:01:31.200 --> 00:01:33.590 align:start position:0%
similarly we can do the same thing with
even<00:01:31.600><c> length</c><00:01:32.400><c> sub</c><00:01:32.640><c> strings</c><00:01:33.040><c> as</c><00:01:33.119><c> well</c><00:01:33.360><c> if</c><00:01:33.439><c> we</c>

00:01:33.590 --> 00:01:33.600 align:start position:0%
even length sub strings as well if we
 

00:01:33.600 --> 00:01:35.030 align:start position:0%
even length sub strings as well if we
have<00:01:33.840><c> two</c><00:01:34.159><c> a's</c>

00:01:35.030 --> 00:01:35.040 align:start position:0%
have two a's
 

00:01:35.040 --> 00:01:37.270 align:start position:0%
have two a's
in<00:01:35.119><c> the</c><00:01:35.280><c> middle</c><00:01:35.840><c> then</c><00:01:36.159><c> of</c><00:01:36.240><c> course</c><00:01:36.560><c> this</c><00:01:36.880><c> is</c><00:01:37.119><c> a</c>

00:01:37.270 --> 00:01:37.280 align:start position:0%
in the middle then of course this is a
 

00:01:37.280 --> 00:01:38.469 align:start position:0%
in the middle then of course this is a
palindrome<00:01:38.000><c> and</c><00:01:38.079><c> then</c>

00:01:38.469 --> 00:01:38.479 align:start position:0%
palindrome and then
 

00:01:38.479 --> 00:01:40.469 align:start position:0%
palindrome and then
if<00:01:38.560><c> we</c><00:01:38.720><c> continue</c><00:01:39.119><c> to</c><00:01:39.280><c> expand</c><00:01:39.680><c> outwards</c><00:01:40.079><c> we</c><00:01:40.320><c> add</c>

00:01:40.469 --> 00:01:40.479 align:start position:0%
if we continue to expand outwards we add
 

00:01:40.479 --> 00:01:41.670 align:start position:0%
if we continue to expand outwards we add
a<00:01:40.560><c> b</c><00:01:40.799><c> at</c><00:01:40.960><c> the</c><00:01:41.040><c> beginning</c>

00:01:41.670 --> 00:01:41.680 align:start position:0%
a b at the beginning
 

00:01:41.680 --> 00:01:43.830 align:start position:0%
a b at the beginning
and<00:01:41.840><c> we</c><00:01:42.000><c> add</c><00:01:42.399><c> a</c><00:01:42.560><c> b</c><00:01:42.799><c> at</c><00:01:42.880><c> the</c><00:01:43.119><c> end</c><00:01:43.520><c> it's</c>

00:01:43.830 --> 00:01:43.840 align:start position:0%
and we add a b at the end it's
 

00:01:43.840 --> 00:01:44.870 align:start position:0%
and we add a b at the end it's
continuously

00:01:44.870 --> 00:01:44.880 align:start position:0%
continuously
 

00:01:44.880 --> 00:01:46.389 align:start position:0%
continuously
going<00:01:45.040><c> to</c><00:01:45.200><c> be</c><00:01:45.360><c> a</c><00:01:45.439><c> palindrome</c><00:01:46.000><c> because</c><00:01:46.159><c> these</c>

00:01:46.389 --> 00:01:46.399 align:start position:0%
going to be a palindrome because these
 

00:01:46.399 --> 00:01:48.069 align:start position:0%
going to be a palindrome because these
characters<00:01:46.799><c> are</c><00:01:46.960><c> also</c><00:01:47.280><c> matching</c><00:01:47.600><c> now</c><00:01:47.759><c> if</c><00:01:47.920><c> we</c>

00:01:48.069 --> 00:01:48.079 align:start position:0%
characters are also matching now if we
 

00:01:48.079 --> 00:01:49.910 align:start position:0%
characters are also matching now if we
instead<00:01:48.399><c> of</c><00:01:48.479><c> adding</c><00:01:48.799><c> a</c><00:01:48.960><c> b</c><00:01:49.200><c> we</c><00:01:49.360><c> added</c><00:01:49.680><c> a</c>

00:01:49.910 --> 00:01:49.920 align:start position:0%
instead of adding a b we added a
 

00:01:49.920 --> 00:01:53.109 align:start position:0%
instead of adding a b we added a
c<00:01:50.240><c> at</c><00:01:50.320><c> the</c><00:01:50.560><c> end</c><00:01:51.119><c> the</c><00:01:51.360><c> inside</c><00:01:52.159><c> is</c><00:01:52.399><c> a</c><00:01:52.560><c> palindrome</c>

00:01:53.109 --> 00:01:53.119 align:start position:0%
c at the end the inside is a palindrome
 

00:01:53.119 --> 00:01:54.149 align:start position:0%
c at the end the inside is a palindrome
this<00:01:53.280><c> string</c><00:01:53.600><c> of</c><00:01:53.680><c> length</c>

00:01:54.149 --> 00:01:54.159 align:start position:0%
this string of length
 

00:01:54.159 --> 00:01:57.270 align:start position:0%
this string of length
two<00:01:54.560><c> but</c><00:01:54.720><c> now</c><00:01:54.960><c> if</c><00:01:55.119><c> we</c><00:01:55.280><c> expand</c><00:01:55.759><c> outwards</c><00:01:56.719><c> this</c>

00:01:57.270 --> 00:01:57.280 align:start position:0%
two but now if we expand outwards this
 

00:01:57.280 --> 00:01:59.670 align:start position:0%
two but now if we expand outwards this
is<00:01:57.600><c> not</c><00:01:57.840><c> a</c><00:01:58.000><c> palindrome</c><00:01:58.640><c> right</c><00:01:58.880><c> yeah</c><00:01:59.040><c> this</c><00:01:59.280><c> just</c>

00:01:59.670 --> 00:01:59.680 align:start position:0%
is not a palindrome right yeah this just
 

00:01:59.680 --> 00:02:01.350 align:start position:0%
is not a palindrome right yeah this just
it<00:01:59.840><c> can't</c><00:02:00.000><c> be</c><00:02:00.159><c> read</c><00:02:00.399><c> backwards</c><00:02:00.799><c> c</c><00:02:01.040><c> is</c><00:02:01.119><c> not</c><00:02:01.280><c> the</c>

00:02:01.350 --> 00:02:01.360 align:start position:0%
it can't be read backwards c is not the
 

00:02:01.360 --> 00:02:02.950 align:start position:0%
it can't be read backwards c is not the
same<00:02:01.600><c> as</c><00:02:01.759><c> b</c><00:02:01.920><c> it's</c><00:02:02.000><c> not</c><00:02:02.240><c> a</c><00:02:02.320><c> palindrome</c>

00:02:02.950 --> 00:02:02.960 align:start position:0%
same as b it's not a palindrome
 

00:02:02.960 --> 00:02:04.709 align:start position:0%
same as b it's not a palindrome
so<00:02:03.119><c> that's</c><00:02:03.360><c> a</c><00:02:03.439><c> little</c><00:02:03.600><c> bit</c><00:02:03.759><c> about</c><00:02:04.079><c> palindromes</c>

00:02:04.709 --> 00:02:04.719 align:start position:0%
so that's a little bit about palindromes
 

00:02:04.719 --> 00:02:06.069 align:start position:0%
so that's a little bit about palindromes
even<00:02:05.040><c> an</c><00:02:05.200><c> odd</c><00:02:05.520><c> length</c>

00:02:06.069 --> 00:02:06.079 align:start position:0%
even an odd length
 

00:02:06.079 --> 00:02:08.389 align:start position:0%
even an odd length
but<00:02:06.240><c> so</c><00:02:06.399><c> how</c><00:02:06.560><c> can</c><00:02:06.719><c> we</c><00:02:06.960><c> apply</c><00:02:07.280><c> that</c><00:02:07.600><c> to</c><00:02:08.000><c> our</c>

00:02:08.389 --> 00:02:08.399 align:start position:0%
but so how can we apply that to our
 

00:02:08.399 --> 00:02:09.190 align:start position:0%
but so how can we apply that to our
input

00:02:09.190 --> 00:02:09.200 align:start position:0%
input
 

00:02:09.200 --> 00:02:12.390 align:start position:0%
input
so<00:02:09.520><c> in</c><00:02:09.599><c> this</c><00:02:09.840><c> case</c><00:02:10.640><c> we</c><00:02:10.800><c> are</c><00:02:10.879><c> given</c><00:02:11.280><c> a</c><00:02:11.440><c> string</c><00:02:11.920><c> a</c>

00:02:12.390 --> 00:02:12.400 align:start position:0%
so in this case we are given a string a
 

00:02:12.400 --> 00:02:15.350 align:start position:0%
so in this case we are given a string a
b<00:02:12.959><c> c</c><00:02:13.280><c> now</c><00:02:13.520><c> of</c><00:02:13.680><c> course</c><00:02:14.000><c> we</c><00:02:14.239><c> have</c><00:02:14.480><c> three</c>

00:02:15.350 --> 00:02:15.360 align:start position:0%
b c now of course we have three
 

00:02:15.360 --> 00:02:15.990 align:start position:0%
b c now of course we have three
different

00:02:15.990 --> 00:02:16.000 align:start position:0%
different
 

00:02:16.000 --> 00:02:17.670 align:start position:0%
different
palindromes<00:02:16.720><c> because</c><00:02:16.959><c> each</c><00:02:17.120><c> character</c><00:02:17.520><c> by</c>

00:02:17.670 --> 00:02:17.680 align:start position:0%
palindromes because each character by
 

00:02:17.680 --> 00:02:19.750 align:start position:0%
palindromes because each character by
itself<00:02:18.319><c> is</c><00:02:18.480><c> a</c><00:02:18.640><c> substring</c><00:02:19.280><c> of</c><00:02:19.360><c> course</c>

00:02:19.750 --> 00:02:19.760 align:start position:0%
itself is a substring of course
 

00:02:19.760 --> 00:02:21.589 align:start position:0%
itself is a substring of course
and<00:02:19.920><c> each</c><00:02:20.160><c> of</c><00:02:20.239><c> those</c><00:02:20.480><c> by</c><00:02:20.720><c> themselves</c><00:02:21.280><c> is</c><00:02:21.520><c> a</c>

00:02:21.589 --> 00:02:21.599 align:start position:0%
and each of those by themselves is a
 

00:02:21.599 --> 00:02:23.589 align:start position:0%
and each of those by themselves is a
palindrome<00:02:22.160><c> as</c><00:02:22.239><c> well</c><00:02:22.480><c> so</c><00:02:22.640><c> that's</c><00:02:22.879><c> three</c><00:02:23.200><c> now</c>

00:02:23.589 --> 00:02:23.599 align:start position:0%
palindrome as well so that's three now
 

00:02:23.599 --> 00:02:25.990 align:start position:0%
palindrome as well so that's three now
is<00:02:23.920><c> any</c><00:02:24.239><c> other</c><00:02:24.480><c> substring</c><00:02:25.040><c> for</c><00:02:25.200><c> example</c><00:02:25.599><c> a</c><00:02:25.760><c> b</c>

00:02:25.990 --> 00:02:26.000 align:start position:0%
is any other substring for example a b
 

00:02:26.000 --> 00:02:27.430 align:start position:0%
is any other substring for example a b
that's<00:02:26.239><c> not</c><00:02:26.400><c> a</c><00:02:26.480><c> palindrome</c>

00:02:27.430 --> 00:02:27.440 align:start position:0%
that's not a palindrome
 

00:02:27.440 --> 00:02:30.470 align:start position:0%
that's not a palindrome
bc<00:02:27.920><c> that's</c><00:02:28.239><c> not</c><00:02:28.400><c> a</c><00:02:28.480><c> palindrome</c><00:02:29.440><c> abc</c><00:02:30.160><c> that's</c>

00:02:30.470 --> 00:02:30.480 align:start position:0%
bc that's not a palindrome abc that's
 

00:02:30.480 --> 00:02:32.309 align:start position:0%
bc that's not a palindrome abc that's
also<00:02:30.720><c> not</c><00:02:30.879><c> a</c><00:02:30.959><c> palindrome</c><00:02:31.519><c> that's</c><00:02:31.760><c> basically</c>

00:02:32.309 --> 00:02:32.319 align:start position:0%
also not a palindrome that's basically
 

00:02:32.319 --> 00:02:33.990 align:start position:0%
also not a palindrome that's basically
all<00:02:32.480><c> the</c><00:02:32.640><c> substrings</c><00:02:33.120><c> available</c><00:02:33.519><c> to</c><00:02:33.680><c> us</c>

00:02:33.990 --> 00:02:34.000 align:start position:0%
all the substrings available to us
 

00:02:34.000 --> 00:02:35.670 align:start position:0%
all the substrings available to us
so<00:02:34.239><c> we</c><00:02:34.480><c> only</c><00:02:34.720><c> find</c><00:02:35.040><c> three</c><00:02:35.200><c> so</c><00:02:35.440><c> we're</c><00:02:35.519><c> going</c><00:02:35.599><c> to</c>

00:02:35.670 --> 00:02:35.680 align:start position:0%
so we only find three so we're going to
 

00:02:35.680 --> 00:02:37.270 align:start position:0%
so we only find three so we're going to
return<00:02:36.080><c> three</c><00:02:36.560><c> so</c><00:02:36.720><c> let's</c>

00:02:37.270 --> 00:02:37.280 align:start position:0%
return three so let's
 

00:02:37.280 --> 00:02:39.350 align:start position:0%
return three so let's
understand<00:02:37.840><c> how</c><00:02:38.000><c> we</c><00:02:38.160><c> can</c><00:02:38.319><c> do</c><00:02:38.560><c> the</c><00:02:38.720><c> brute</c><00:02:39.120><c> force</c>

00:02:39.350 --> 00:02:39.360 align:start position:0%
understand how we can do the brute force
 

00:02:39.360 --> 00:02:41.589 align:start position:0%
understand how we can do the brute force
solution<00:02:39.760><c> which</c><00:02:39.920><c> is</c><00:02:40.080><c> actually</c><00:02:40.480><c> big</c><00:02:40.720><c> o</c><00:02:40.959><c> of</c><00:02:41.200><c> n</c>

00:02:41.589 --> 00:02:41.599 align:start position:0%
solution which is actually big o of n
 

00:02:41.599 --> 00:02:43.670 align:start position:0%
solution which is actually big o of n
cubed<00:02:42.160><c> and</c><00:02:42.400><c> then</c><00:02:42.560><c> we</c><00:02:42.720><c> can</c><00:02:42.800><c> actually</c><00:02:43.200><c> optimize</c>

00:02:43.670 --> 00:02:43.680 align:start position:0%
cubed and then we can actually optimize
 

00:02:43.680 --> 00:02:45.750 align:start position:0%
cubed and then we can actually optimize
it<00:02:43.840><c> a</c><00:02:43.920><c> little</c><00:02:44.080><c> bit</c><00:02:44.560><c> understanding</c><00:02:45.200><c> how</c><00:02:45.440><c> even</c>

00:02:45.750 --> 00:02:45.760 align:start position:0%
it a little bit understanding how even
 

00:02:45.760 --> 00:02:47.350 align:start position:0%
it a little bit understanding how even
an<00:02:45.920><c> odd</c><00:02:46.239><c> palindromes</c><00:02:46.959><c> work</c>

00:02:47.350 --> 00:02:47.360 align:start position:0%
an odd palindromes work
 

00:02:47.360 --> 00:02:50.070 align:start position:0%
an odd palindromes work
and<00:02:47.440><c> then</c><00:02:47.680><c> we</c><00:02:47.760><c> can</c><00:02:47.920><c> get</c><00:02:48.160><c> a</c><00:02:48.480><c> big</c><00:02:48.720><c> o</c><00:02:48.959><c> of</c><00:02:49.200><c> n</c><00:02:49.519><c> squared</c>

00:02:50.070 --> 00:02:50.080 align:start position:0%
and then we can get a big o of n squared
 

00:02:50.080 --> 00:02:51.830 align:start position:0%
and then we can get a big o of n squared
time<00:02:50.400><c> complexity</c><00:02:51.040><c> solution</c>

00:02:51.830 --> 00:02:51.840 align:start position:0%
time complexity solution
 

00:02:51.840 --> 00:02:53.509 align:start position:0%
time complexity solution
so<00:02:52.000><c> let's</c><00:02:52.239><c> say</c><00:02:52.400><c> we're</c><00:02:52.560><c> given</c><00:02:52.879><c> a</c><00:02:53.040><c> string</c><00:02:53.360><c> that</c>

00:02:53.509 --> 00:02:53.519 align:start position:0%
so let's say we're given a string that
 

00:02:53.519 --> 00:02:54.869 align:start position:0%
so let's say we're given a string that
looks<00:02:53.760><c> like</c><00:02:54.080><c> this</c>

00:02:54.869 --> 00:02:54.879 align:start position:0%
looks like this
 

00:02:54.879 --> 00:02:56.710 align:start position:0%
looks like this
if<00:02:55.040><c> we</c><00:02:55.200><c> just</c><00:02:55.440><c> start</c><00:02:55.680><c> brute</c><00:02:56.000><c> forcing</c><00:02:56.480><c> it</c><00:02:56.560><c> we</c>

00:02:56.710 --> 00:02:56.720 align:start position:0%
if we just start brute forcing it we
 

00:02:56.720 --> 00:02:58.550 align:start position:0%
if we just start brute forcing it we
want<00:02:56.879><c> to</c><00:02:57.120><c> go</c><00:02:57.440><c> through</c><00:02:57.840><c> every</c><00:02:58.239><c> single</c>

00:02:58.550 --> 00:02:58.560 align:start position:0%
want to go through every single
 

00:02:58.560 --> 00:02:59.830 align:start position:0%
want to go through every single
substring<00:02:59.040><c> right</c><00:02:59.200><c> so</c><00:02:59.360><c> every</c><00:02:59.599><c> single</c>

00:02:59.830 --> 00:02:59.840 align:start position:0%
substring right so every single
 

00:02:59.840 --> 00:03:01.509 align:start position:0%
substring right so every single
substring<00:03:00.400><c> starting</c><00:03:00.800><c> at</c><00:03:00.959><c> this</c><00:03:01.200><c> first</c>

00:03:01.509 --> 00:03:01.519 align:start position:0%
substring starting at this first
 

00:03:01.519 --> 00:03:03.430 align:start position:0%
substring starting at this first
position<00:03:02.000><c> would</c><00:03:02.239><c> be</c><00:03:02.400><c> something</c><00:03:02.720><c> like</c><00:03:03.040><c> this</c>

00:03:03.430 --> 00:03:03.440 align:start position:0%
position would be something like this
 

00:03:03.440 --> 00:03:03.750 align:start position:0%
position would be something like this
right

00:03:03.750 --> 00:03:03.760 align:start position:0%
right
 

00:03:03.760 --> 00:03:05.830 align:start position:0%
right
there's<00:03:04.560><c> these</c><00:03:04.800><c> substrings</c><00:03:05.360><c> right</c><00:03:05.519><c> then</c><00:03:05.680><c> we'd</c>

00:03:05.830 --> 00:03:05.840 align:start position:0%
there's these substrings right then we'd
 

00:03:05.840 --> 00:03:06.949 align:start position:0%
there's these substrings right then we'd
want<00:03:06.000><c> to</c><00:03:06.080><c> go</c><00:03:06.239><c> through</c><00:03:06.480><c> every</c><00:03:06.640><c> single</c>

00:03:06.949 --> 00:03:06.959 align:start position:0%
want to go through every single
 

00:03:06.959 --> 00:03:08.550 align:start position:0%
want to go through every single
substring<00:03:07.360><c> starting</c><00:03:07.680><c> at</c><00:03:07.840><c> this</c><00:03:08.080><c> position</c>

00:03:08.550 --> 00:03:08.560 align:start position:0%
substring starting at this position
 

00:03:08.560 --> 00:03:10.229 align:start position:0%
substring starting at this position
which<00:03:08.800><c> would</c><00:03:08.959><c> look</c><00:03:09.200><c> something</c><00:03:09.599><c> like</c>

00:03:10.229 --> 00:03:10.239 align:start position:0%
which would look something like
 

00:03:10.239 --> 00:03:12.630 align:start position:0%
which would look something like
this<00:03:10.640><c> right</c><00:03:11.120><c> in</c><00:03:11.440><c> total</c><00:03:11.920><c> there's</c><00:03:12.239><c> going</c><00:03:12.319><c> to</c><00:03:12.400><c> be</c>

00:03:12.630 --> 00:03:12.640 align:start position:0%
this right in total there's going to be
 

00:03:12.640 --> 00:03:14.550 align:start position:0%
this right in total there's going to be
n<00:03:12.959><c> squared</c><00:03:13.360><c> sub</c><00:03:13.680><c> strings</c><00:03:14.080><c> right</c>

00:03:14.550 --> 00:03:14.560 align:start position:0%
n squared sub strings right
 

00:03:14.560 --> 00:03:17.430 align:start position:0%
n squared sub strings right
and<00:03:15.040><c> for</c><00:03:15.360><c> each</c><00:03:15.760><c> substring</c><00:03:16.400><c> for</c><00:03:16.560><c> example</c><00:03:17.360><c> you</c>

00:03:17.430 --> 00:03:17.440 align:start position:0%
and for each substring for example you
 

00:03:17.440 --> 00:03:17.990 align:start position:0%
and for each substring for example you
know<00:03:17.680><c> this</c>

00:03:17.990 --> 00:03:18.000 align:start position:0%
know this
 

00:03:18.000 --> 00:03:20.309 align:start position:0%
know this
one<00:03:18.800><c> we</c><00:03:18.959><c> need</c><00:03:19.120><c> to</c><00:03:19.280><c> determine</c><00:03:19.920><c> if</c><00:03:20.080><c> it's</c><00:03:20.239><c> a</c>

00:03:20.309 --> 00:03:20.319 align:start position:0%
one we need to determine if it's a
 

00:03:20.319 --> 00:03:22.390 align:start position:0%
one we need to determine if it's a
palindrome<00:03:21.120><c> or</c><00:03:21.280><c> not</c><00:03:21.599><c> and</c><00:03:21.760><c> we</c><00:03:21.920><c> know</c><00:03:22.159><c> it</c><00:03:22.239><c> you</c>

00:03:22.390 --> 00:03:22.400 align:start position:0%
palindrome or not and we know it you
 

00:03:22.400 --> 00:03:23.190 align:start position:0%
palindrome or not and we know it you
know<00:03:22.480><c> that's</c><00:03:22.800><c> not</c>

00:03:23.190 --> 00:03:23.200 align:start position:0%
know that's not
 

00:03:23.200 --> 00:03:24.869 align:start position:0%
know that's not
a<00:03:23.360><c> difficult</c><00:03:23.760><c> algorithm</c><00:03:24.239><c> to</c><00:03:24.400><c> write</c><00:03:24.640><c> we</c><00:03:24.720><c> could</c>

00:03:24.869 --> 00:03:24.879 align:start position:0%
a difficult algorithm to write we could
 

00:03:24.879 --> 00:03:26.390 align:start position:0%
a difficult algorithm to write we could
have<00:03:25.040><c> two</c><00:03:25.280><c> pointers</c><00:03:25.680><c> one</c><00:03:25.840><c> at</c><00:03:25.920><c> the</c><00:03:26.000><c> beginning</c>

00:03:26.390 --> 00:03:26.400 align:start position:0%
have two pointers one at the beginning
 

00:03:26.400 --> 00:03:27.270 align:start position:0%
have two pointers one at the beginning
one<00:03:26.640><c> at</c><00:03:26.720><c> the</c><00:03:26.879><c> end</c>

00:03:27.270 --> 00:03:27.280 align:start position:0%
one at the end
 

00:03:27.280 --> 00:03:28.869 align:start position:0%
one at the end
we<00:03:27.440><c> basically</c><00:03:28.000><c> keep</c><00:03:28.239><c> comparing</c><00:03:28.720><c> the</c>

00:03:28.869 --> 00:03:28.879 align:start position:0%
we basically keep comparing the
 

00:03:28.879 --> 00:03:31.030 align:start position:0%
we basically keep comparing the
characters<00:03:29.760><c> and</c><00:03:30.239><c> making</c><00:03:30.480><c> sure</c><00:03:30.640><c> that</c><00:03:30.799><c> they're</c>

00:03:31.030 --> 00:03:31.040 align:start position:0%
characters and making sure that they're
 

00:03:31.040 --> 00:03:32.070 align:start position:0%
characters and making sure that they're
the<00:03:31.120><c> same</c><00:03:31.360><c> right</c><00:03:31.599><c> so</c>

00:03:32.070 --> 00:03:32.080 align:start position:0%
the same right so
 

00:03:32.080 --> 00:03:34.630 align:start position:0%
the same right so
and<00:03:32.239><c> for</c><00:03:32.400><c> a</c><00:03:32.560><c> substring</c><00:03:33.120><c> like</c><00:03:33.360><c> this</c><00:03:33.920><c> we'd</c><00:03:34.400><c> also</c>

00:03:34.630 --> 00:03:34.640 align:start position:0%
and for a substring like this we'd also
 

00:03:34.640 --> 00:03:36.070 align:start position:0%
and for a substring like this we'd also
have<00:03:34.799><c> two</c><00:03:35.040><c> pointers</c><00:03:35.360><c> right</c><00:03:35.519><c> compare</c><00:03:35.920><c> that</c>

00:03:36.070 --> 00:03:36.080 align:start position:0%
have two pointers right compare that
 

00:03:36.080 --> 00:03:37.110 align:start position:0%
have two pointers right compare that
okay<00:03:36.319><c> these</c><00:03:36.560><c> two</c>

00:03:37.110 --> 00:03:37.120 align:start position:0%
okay these two
 

00:03:37.120 --> 00:03:39.350 align:start position:0%
okay these two
characters<00:03:37.680><c> are</c><00:03:37.760><c> the</c><00:03:37.920><c> same</c><00:03:38.319><c> so</c><00:03:38.480><c> then</c><00:03:38.640><c> we</c><00:03:38.879><c> can</c>

00:03:39.350 --> 00:03:39.360 align:start position:0%
characters are the same so then we can
 

00:03:39.360 --> 00:03:40.789 align:start position:0%
characters are the same so then we can
move<00:03:39.680><c> inward</c><00:03:40.080><c> right</c><00:03:40.239><c> we'd</c><00:03:40.480><c> shift</c><00:03:40.720><c> our</c>

00:03:40.789 --> 00:03:40.799 align:start position:0%
move inward right we'd shift our
 

00:03:40.799 --> 00:03:41.830 align:start position:0%
move inward right we'd shift our
pointers<00:03:41.200><c> here</c>

00:03:41.830 --> 00:03:41.840 align:start position:0%
pointers here
 

00:03:41.840 --> 00:03:44.390 align:start position:0%
pointers here
and<00:03:42.000><c> then</c><00:03:42.159><c> we'd</c><00:03:42.400><c> see</c><00:03:43.200><c> okay</c><00:03:43.519><c> this</c><00:03:43.680><c> character</c><00:03:44.239><c> is</c>

00:03:44.390 --> 00:03:44.400 align:start position:0%
and then we'd see okay this character is
 

00:03:44.400 --> 00:03:46.229 align:start position:0%
and then we'd see okay this character is
also<00:03:44.640><c> the</c><00:03:44.799><c> same</c><00:03:45.040><c> and</c><00:03:45.200><c> then</c><00:03:45.440><c> you</c><00:03:45.599><c> know</c><00:03:45.680><c> we</c><00:03:45.920><c> we</c><00:03:46.080><c> go</c>

00:03:46.229 --> 00:03:46.239 align:start position:0%
also the same and then you know we we go
 

00:03:46.239 --> 00:03:47.589 align:start position:0%
also the same and then you know we we go
through<00:03:46.400><c> every</c><00:03:46.560><c> character</c><00:03:46.879><c> so</c><00:03:47.040><c> we</c><00:03:47.200><c> determine</c>

00:03:47.589 --> 00:03:47.599 align:start position:0%
through every character so we determine
 

00:03:47.599 --> 00:03:49.430 align:start position:0%
through every character so we determine
yes<00:03:47.840><c> that's</c><00:03:48.080><c> a</c><00:03:48.159><c> palindrome</c><00:03:48.799><c> then</c><00:03:49.040><c> we</c><00:03:49.200><c> can</c>

00:03:49.430 --> 00:03:49.440 align:start position:0%
yes that's a palindrome then we can
 

00:03:49.440 --> 00:03:51.430 align:start position:0%
yes that's a palindrome then we can
increment<00:03:49.920><c> our</c><00:03:50.159><c> count</c><00:03:50.560><c> of</c><00:03:50.720><c> palindromes</c><00:03:51.280><c> right</c>

00:03:51.430 --> 00:03:51.440 align:start position:0%
increment our count of palindromes right
 

00:03:51.440 --> 00:03:53.509 align:start position:0%
increment our count of palindromes right
we'll<00:03:51.760><c> call</c><00:03:51.920><c> that</c><00:03:52.159><c> our</c><00:03:52.319><c> result</c><00:03:52.799><c> variable</c>

00:03:53.509 --> 00:03:53.519 align:start position:0%
we'll call that our result variable
 

00:03:53.519 --> 00:03:55.350 align:start position:0%
we'll call that our result variable
so<00:03:54.080><c> then</c><00:03:54.239><c> we'll</c><00:03:54.400><c> add</c><00:03:54.640><c> one</c><00:03:54.879><c> to</c><00:03:55.040><c> it</c><00:03:55.120><c> right</c>

00:03:55.350 --> 00:03:55.360 align:start position:0%
so then we'll add one to it right
 

00:03:55.360 --> 00:03:56.630 align:start position:0%
so then we'll add one to it right
because<00:03:55.599><c> that's</c><00:03:55.920><c> ultimately</c><00:03:56.319><c> what</c><00:03:56.480><c> we're</c>

00:03:56.630 --> 00:03:56.640 align:start position:0%
because that's ultimately what we're
 

00:03:56.640 --> 00:03:58.229 align:start position:0%
because that's ultimately what we're
trying<00:03:56.879><c> to</c><00:03:56.959><c> return</c><00:03:57.360><c> the</c><00:03:57.599><c> number</c><00:03:58.080><c> of</c>

00:03:58.229 --> 00:03:58.239 align:start position:0%
trying to return the number of
 

00:03:58.239 --> 00:04:00.789 align:start position:0%
trying to return the number of
palindromic<00:03:58.959><c> substrings</c><00:03:59.680><c> inside</c><00:04:00.080><c> of</c><00:04:00.239><c> this</c>

00:04:00.789 --> 00:04:00.799 align:start position:0%
palindromic substrings inside of this
 

00:04:00.799 --> 00:04:03.670 align:start position:0%
palindromic substrings inside of this
string<00:04:01.200><c> s</c><00:04:01.920><c> and</c><00:04:02.159><c> clearly</c><00:04:02.720><c> finding</c><00:04:03.439><c> and</c>

00:04:03.670 --> 00:04:03.680 align:start position:0%
string s and clearly finding and
 

00:04:03.680 --> 00:04:05.429 align:start position:0%
string s and clearly finding and
determining<00:04:04.319><c> that</c><00:04:04.560><c> a</c><00:04:04.799><c> string</c>

00:04:05.429 --> 00:04:05.439 align:start position:0%
determining that a string
 

00:04:05.439 --> 00:04:08.949 align:start position:0%
determining that a string
is<00:04:05.599><c> a</c><00:04:05.760><c> palindrome</c><00:04:06.400><c> is</c><00:04:06.560><c> also</c><00:04:06.959><c> big</c><00:04:07.280><c> o</c><00:04:07.519><c> of</c><00:04:07.920><c> n</c>

00:04:08.949 --> 00:04:08.959 align:start position:0%
is a palindrome is also big o of n
 

00:04:08.959 --> 00:04:11.830 align:start position:0%
is a palindrome is also big o of n
so<00:04:09.680><c> since</c><00:04:10.000><c> there</c><00:04:10.159><c> are</c><00:04:10.400><c> n</c><00:04:10.640><c> squared</c><00:04:11.120><c> substrings</c>

00:04:11.830 --> 00:04:11.840 align:start position:0%
so since there are n squared substrings
 

00:04:11.840 --> 00:04:12.789 align:start position:0%
so since there are n squared substrings
in<00:04:11.920><c> the</c><00:04:12.000><c> entire</c><00:04:12.400><c> string</c>

00:04:12.789 --> 00:04:12.799 align:start position:0%
in the entire string
 

00:04:12.799 --> 00:04:14.710 align:start position:0%
in the entire string
s<00:04:13.040><c> and</c><00:04:13.200><c> for</c><00:04:13.439><c> each</c><00:04:13.599><c> of</c><00:04:13.680><c> those</c><00:04:13.840><c> substrings</c><00:04:14.560><c> we</c>

00:04:14.710 --> 00:04:14.720 align:start position:0%
s and for each of those substrings we
 

00:04:14.720 --> 00:04:16.229 align:start position:0%
s and for each of those substrings we
have<00:04:14.799><c> to</c><00:04:14.879><c> determine</c><00:04:15.280><c> that</c><00:04:15.439><c> it's</c><00:04:15.599><c> a</c><00:04:15.680><c> palindrome</c>

00:04:16.229 --> 00:04:16.239 align:start position:0%
have to determine that it's a palindrome
 

00:04:16.239 --> 00:04:17.830 align:start position:0%
have to determine that it's a palindrome
we're<00:04:16.400><c> going</c><00:04:16.479><c> to</c><00:04:16.560><c> multiply</c><00:04:16.959><c> it</c><00:04:17.040><c> by</c><00:04:17.280><c> n</c><00:04:17.440><c> so</c><00:04:17.600><c> this</c>

00:04:17.830 --> 00:04:17.840 align:start position:0%
we're going to multiply it by n so this
 

00:04:17.840 --> 00:04:18.629 align:start position:0%
we're going to multiply it by n so this
is<00:04:17.919><c> going</c><00:04:18.000><c> to</c><00:04:18.079><c> give</c><00:04:18.239><c> us</c><00:04:18.400><c> an</c>

00:04:18.629 --> 00:04:18.639 align:start position:0%
is going to give us an
 

00:04:18.639 --> 00:04:21.590 align:start position:0%
is going to give us an
n<00:04:18.880><c> cubed</c><00:04:19.359><c> time</c><00:04:19.600><c> complexity</c><00:04:20.400><c> now</c><00:04:21.120><c> we</c><00:04:21.280><c> can</c>

00:04:21.590 --> 00:04:21.600 align:start position:0%
n cubed time complexity now we can
 

00:04:21.600 --> 00:04:22.469 align:start position:0%
n cubed time complexity now we can
improve<00:04:22.079><c> this</c>

00:04:22.469 --> 00:04:22.479 align:start position:0%
improve this
 

00:04:22.479 --> 00:04:24.310 align:start position:0%
improve this
and<00:04:22.720><c> it's</c><00:04:22.880><c> going</c><00:04:23.040><c> to</c><00:04:23.120><c> require</c><00:04:23.600><c> us</c><00:04:23.759><c> to</c><00:04:24.000><c> solve</c>

00:04:24.310 --> 00:04:24.320 align:start position:0%
and it's going to require us to solve
 

00:04:24.320 --> 00:04:25.830 align:start position:0%
and it's going to require us to solve
this<00:04:24.560><c> problem</c><00:04:24.960><c> in</c><00:04:25.120><c> a</c><00:04:25.360><c> different</c>

00:04:25.830 --> 00:04:25.840 align:start position:0%
this problem in a different
 

00:04:25.840 --> 00:04:28.870 align:start position:0%
this problem in a different
order<00:04:26.639><c> what</c><00:04:26.800><c> we're</c><00:04:27.120><c> instead</c><00:04:27.600><c> going</c><00:04:27.759><c> to</c><00:04:28.000><c> do</c><00:04:28.560><c> is</c>

00:04:28.870 --> 00:04:28.880 align:start position:0%
order what we're instead going to do is
 

00:04:28.880 --> 00:04:30.710 align:start position:0%
order what we're instead going to do is
we're<00:04:29.120><c> going</c><00:04:29.199><c> to</c><00:04:29.360><c> go</c><00:04:29.680><c> through</c><00:04:30.080><c> every</c><00:04:30.400><c> single</c>

00:04:30.710 --> 00:04:30.720 align:start position:0%
we're going to go through every single
 

00:04:30.720 --> 00:04:32.070 align:start position:0%
we're going to go through every single
position<00:04:31.440><c> in</c>

00:04:32.070 --> 00:04:32.080 align:start position:0%
position in
 

00:04:32.080 --> 00:04:34.310 align:start position:0%
position in
this<00:04:32.320><c> right</c><00:04:32.560><c> instead</c><00:04:33.040><c> of</c><00:04:33.280><c> finding</c><00:04:33.840><c> for</c><00:04:34.080><c> this</c>

00:04:34.310 --> 00:04:34.320 align:start position:0%
this right instead of finding for this
 

00:04:34.320 --> 00:04:36.230 align:start position:0%
this right instead of finding for this
position<00:04:35.040><c> all</c><00:04:35.199><c> the</c><00:04:35.360><c> substrings</c><00:04:35.919><c> that</c>

00:04:36.230 --> 00:04:36.240 align:start position:0%
position all the substrings that
 

00:04:36.240 --> 00:04:38.390 align:start position:0%
position all the substrings that
start<00:04:36.800><c> at</c><00:04:36.960><c> this</c><00:04:37.199><c> position</c><00:04:37.919><c> we're</c><00:04:38.160><c> going</c><00:04:38.320><c> to</c>

00:04:38.390 --> 00:04:38.400 align:start position:0%
start at this position we're going to
 

00:04:38.400 --> 00:04:40.070 align:start position:0%
start at this position we're going to
find<00:04:38.800><c> all</c><00:04:39.040><c> the</c><00:04:39.199><c> sub</c><00:04:39.440><c> strings</c>

00:04:40.070 --> 00:04:40.080 align:start position:0%
find all the sub strings
 

00:04:40.080 --> 00:04:43.189 align:start position:0%
find all the sub strings
that<00:04:40.639><c> this</c><00:04:40.880><c> position</c><00:04:41.440><c> is</c><00:04:41.520><c> the</c><00:04:41.919><c> middle</c><00:04:42.479><c> of</c><00:04:42.960><c> so</c>

00:04:43.189 --> 00:04:43.199 align:start position:0%
that this position is the middle of so
 

00:04:43.199 --> 00:04:44.629 align:start position:0%
that this position is the middle of so
instead<00:04:43.520><c> of</c><00:04:43.680><c> you</c><00:04:43.759><c> know</c><00:04:43.919><c> just</c><00:04:44.160><c> going</c><00:04:44.400><c> to</c><00:04:44.479><c> the</c>

00:04:44.629 --> 00:04:44.639 align:start position:0%
instead of you know just going to the
 

00:04:44.639 --> 00:04:46.230 align:start position:0%
instead of you know just going to the
right<00:04:44.880><c> we're</c><00:04:45.120><c> actually</c><00:04:45.360><c> going</c><00:04:45.440><c> to</c><00:04:45.520><c> expand</c><00:04:46.080><c> in</c>

00:04:46.230 --> 00:04:46.240 align:start position:0%
right we're actually going to expand in
 

00:04:46.240 --> 00:04:47.590 align:start position:0%
right we're actually going to expand in
both<00:04:46.560><c> directions</c><00:04:47.040><c> we're</c><00:04:47.199><c> going</c><00:04:47.360><c> to</c><00:04:47.440><c> go</c>

00:04:47.590 --> 00:04:47.600 align:start position:0%
both directions we're going to go
 

00:04:47.600 --> 00:04:47.990 align:start position:0%
both directions we're going to go
through

00:04:47.990 --> 00:04:48.000 align:start position:0%
through
 

00:04:48.000 --> 00:04:50.550 align:start position:0%
through
all<00:04:48.320><c> sub</c><00:04:48.560><c> strings</c><00:04:49.040><c> where</c><00:04:49.360><c> this</c><00:04:49.680><c> position</c><00:04:50.320><c> is</c>

00:04:50.550 --> 00:04:50.560 align:start position:0%
all sub strings where this position is
 

00:04:50.560 --> 00:04:52.150 align:start position:0%
all sub strings where this position is
the<00:04:50.800><c> middle</c><00:04:51.199><c> position</c>

00:04:52.150 --> 00:04:52.160 align:start position:0%
the middle position
 

00:04:52.160 --> 00:04:54.870 align:start position:0%
the middle position
now<00:04:52.400><c> clearly</c><00:04:53.199><c> this</c><00:04:53.520><c> string</c><00:04:53.919><c> itself</c><00:04:54.479><c> is</c><00:04:54.639><c> one</c>

00:04:54.870 --> 00:04:54.880 align:start position:0%
now clearly this string itself is one
 

00:04:54.880 --> 00:04:55.990 align:start position:0%
now clearly this string itself is one
string<00:04:55.280><c> right</c><00:04:55.520><c> and</c>

00:04:55.990 --> 00:04:56.000 align:start position:0%
string right and
 

00:04:56.000 --> 00:04:57.670 align:start position:0%
string right and
this<00:04:56.320><c> is</c><00:04:56.560><c> a</c><00:04:56.720><c> palindrome</c><00:04:57.199><c> so</c><00:04:57.360><c> we're</c><00:04:57.440><c> gonna</c><00:04:57.600><c> have</c>

00:04:57.670 --> 00:04:57.680 align:start position:0%
this is a palindrome so we're gonna have
 

00:04:57.680 --> 00:04:59.110 align:start position:0%
this is a palindrome so we're gonna have
our<00:04:57.919><c> left</c><00:04:58.240><c> and</c><00:04:58.400><c> right</c><00:04:58.639><c> pointer</c><00:04:58.960><c> just</c>

00:04:59.110 --> 00:04:59.120 align:start position:0%
our left and right pointer just
 

00:04:59.120 --> 00:05:00.550 align:start position:0%
our left and right pointer just
initially<00:04:59.600><c> at</c><00:04:59.840><c> this</c><00:05:00.000><c> position</c>

00:05:00.550 --> 00:05:00.560 align:start position:0%
initially at this position
 

00:05:00.560 --> 00:05:01.990 align:start position:0%
initially at this position
we're<00:05:00.720><c> gonna</c><00:05:00.880><c> see</c><00:05:01.039><c> that</c><00:05:01.280><c> okay</c><00:05:01.520><c> both</c><00:05:01.759><c> of</c><00:05:01.840><c> these</c>

00:05:01.990 --> 00:05:02.000 align:start position:0%
we're gonna see that okay both of these
 

00:05:02.000 --> 00:05:03.590 align:start position:0%
we're gonna see that okay both of these
characters<00:05:02.479><c> are</c><00:05:02.560><c> the</c><00:05:02.720><c> same</c><00:05:02.960><c> right</c><00:05:03.199><c> so</c><00:05:03.360><c> then</c><00:05:03.520><c> we</c>

00:05:03.590 --> 00:05:03.600 align:start position:0%
characters are the same right so then we
 

00:05:03.600 --> 00:05:04.710 align:start position:0%
characters are the same right so then we
can<00:05:03.680><c> take</c><00:05:03.919><c> our</c><00:05:04.080><c> result</c>

00:05:04.710 --> 00:05:04.720 align:start position:0%
can take our result
 

00:05:04.720 --> 00:05:07.270 align:start position:0%
can take our result
add<00:05:05.039><c> one</c><00:05:05.280><c> to</c><00:05:05.520><c> it</c><00:05:05.680><c> right</c><00:05:06.240><c> so</c><00:05:06.400><c> we</c><00:05:06.560><c> found</c><00:05:07.039><c> so</c><00:05:07.199><c> we</c>

00:05:07.270 --> 00:05:07.280 align:start position:0%
add one to it right so we found so we
 

00:05:07.280 --> 00:05:09.430 align:start position:0%
add one to it right so we found so we
did<00:05:07.520><c> find</c><00:05:07.759><c> one</c><00:05:08.000><c> palindromic</c><00:05:08.720><c> substring</c>

00:05:09.430 --> 00:05:09.440 align:start position:0%
did find one palindromic substring
 

00:05:09.440 --> 00:05:10.790 align:start position:0%
did find one palindromic substring
and<00:05:09.600><c> then</c><00:05:09.680><c> we're</c><00:05:09.840><c> going</c><00:05:09.919><c> to</c><00:05:10.000><c> try</c><00:05:10.160><c> to</c><00:05:10.320><c> expand</c>

00:05:10.790 --> 00:05:10.800 align:start position:0%
and then we're going to try to expand
 

00:05:10.800 --> 00:05:12.150 align:start position:0%
and then we're going to try to expand
outward<00:05:11.199><c> right</c><00:05:11.360><c> our</c><00:05:11.520><c> left</c><00:05:11.759><c> pointer</c><00:05:12.000><c> is</c><00:05:12.080><c> going</c>

00:05:12.150 --> 00:05:12.160 align:start position:0%
outward right our left pointer is going
 

00:05:12.160 --> 00:05:13.749 align:start position:0%
outward right our left pointer is going
to<00:05:12.240><c> go</c><00:05:12.400><c> here</c><00:05:12.639><c> our</c><00:05:12.880><c> right</c><00:05:13.120><c> pointer</c><00:05:13.440><c> is</c><00:05:13.600><c> going</c><00:05:13.680><c> to</c>

00:05:13.749 --> 00:05:13.759 align:start position:0%
to go here our right pointer is going to
 

00:05:13.759 --> 00:05:14.310 align:start position:0%
to go here our right pointer is going to
go<00:05:13.919><c> here</c>

00:05:14.310 --> 00:05:14.320 align:start position:0%
go here
 

00:05:14.320 --> 00:05:16.230 align:start position:0%
go here
clearly<00:05:14.720><c> we</c><00:05:14.880><c> go</c><00:05:15.120><c> out</c><00:05:15.280><c> of</c><00:05:15.440><c> bounds</c><00:05:15.840><c> though</c><00:05:16.080><c> to</c>

00:05:16.230 --> 00:05:16.240 align:start position:0%
clearly we go out of bounds though to
 

00:05:16.240 --> 00:05:17.510 align:start position:0%
clearly we go out of bounds though to
the<00:05:16.400><c> left</c><00:05:16.720><c> right</c><00:05:16.880><c> so</c>

00:05:17.510 --> 00:05:17.520 align:start position:0%
the left right so
 

00:05:17.520 --> 00:05:19.270 align:start position:0%
the left right so
so<00:05:17.680><c> basically</c><00:05:18.080><c> what</c><00:05:18.240><c> we're</c><00:05:18.400><c> saying</c><00:05:18.720><c> is</c>

00:05:19.270 --> 00:05:19.280 align:start position:0%
so basically what we're saying is
 

00:05:19.280 --> 00:05:21.270 align:start position:0%
so basically what we're saying is
there's<00:05:19.600><c> only</c><00:05:19.919><c> one</c><00:05:20.160><c> substring</c><00:05:20.720><c> where</c><00:05:20.960><c> this</c><00:05:21.199><c> is</c>

00:05:21.270 --> 00:05:21.280 align:start position:0%
there's only one substring where this is
 

00:05:21.280 --> 00:05:22.950 align:start position:0%
there's only one substring where this is
the<00:05:21.520><c> middle</c><00:05:21.840><c> position</c><00:05:22.320><c> of</c>

00:05:22.950 --> 00:05:22.960 align:start position:0%
the middle position of
 

00:05:22.960 --> 00:05:24.070 align:start position:0%
the middle position of
and<00:05:23.039><c> then</c><00:05:23.199><c> we're</c><00:05:23.360><c> going</c><00:05:23.440><c> to</c><00:05:23.520><c> do</c><00:05:23.759><c> the</c><00:05:23.840><c> same</c>

00:05:24.070 --> 00:05:24.080 align:start position:0%
and then we're going to do the same
 

00:05:24.080 --> 00:05:26.070 align:start position:0%
and then we're going to do the same
thing<00:05:24.240><c> for</c><00:05:24.479><c> here</c><00:05:24.720><c> so</c><00:05:24.960><c> from</c><00:05:25.280><c> this</c><00:05:25.520><c> position</c><00:05:25.919><c> we</c>

00:05:26.070 --> 00:05:26.080 align:start position:0%
thing for here so from this position we
 

00:05:26.080 --> 00:05:27.749 align:start position:0%
thing for here so from this position we
want<00:05:26.400><c> all</c><00:05:26.639><c> sub</c><00:05:26.880><c> strings</c><00:05:27.199><c> where</c><00:05:27.440><c> this</c>

00:05:27.749 --> 00:05:27.759 align:start position:0%
want all sub strings where this
 

00:05:27.759 --> 00:05:29.110 align:start position:0%
want all sub strings where this
is<00:05:27.840><c> the</c><00:05:28.080><c> middle</c><00:05:28.400><c> of</c><00:05:28.560><c> so</c><00:05:28.720><c> we're</c><00:05:28.880><c> going</c><00:05:28.880><c> to</c><00:05:28.960><c> have</c>

00:05:29.110 --> 00:05:29.120 align:start position:0%
is the middle of so we're going to have
 

00:05:29.120 --> 00:05:30.469 align:start position:0%
is the middle of so we're going to have
our<00:05:29.199><c> left</c><00:05:29.440><c> and</c><00:05:29.520><c> right</c><00:05:29.680><c> pointer</c><00:05:30.000><c> initially</c>

00:05:30.469 --> 00:05:30.479 align:start position:0%
our left and right pointer initially
 

00:05:30.479 --> 00:05:30.870 align:start position:0%
our left and right pointer initially
here

00:05:30.870 --> 00:05:30.880 align:start position:0%
here
 

00:05:30.880 --> 00:05:32.550 align:start position:0%
here
yes<00:05:31.120><c> this</c><00:05:31.360><c> character</c><00:05:31.840><c> you</c><00:05:32.000><c> know</c><00:05:32.080><c> our</c><00:05:32.240><c> left</c><00:05:32.400><c> and</c>

00:05:32.550 --> 00:05:32.560 align:start position:0%
yes this character you know our left and
 

00:05:32.560 --> 00:05:33.590 align:start position:0%
yes this character you know our left and
right<00:05:32.720><c> pointer</c><00:05:32.960><c> point</c><00:05:33.199><c> at</c><00:05:33.280><c> the</c><00:05:33.360><c> same</c>

00:05:33.590 --> 00:05:33.600 align:start position:0%
right pointer point at the same
 

00:05:33.600 --> 00:05:34.469 align:start position:0%
right pointer point at the same
character<00:05:33.919><c> so</c><00:05:34.080><c> we</c>

00:05:34.469 --> 00:05:34.479 align:start position:0%
character so we
 

00:05:34.479 --> 00:05:36.629 align:start position:0%
character so we
we<00:05:34.639><c> found</c><00:05:34.960><c> one</c><00:05:35.360><c> palindromic</c><00:05:36.000><c> substring</c><00:05:36.479><c> just</c>

00:05:36.629 --> 00:05:36.639 align:start position:0%
we found one palindromic substring just
 

00:05:36.639 --> 00:05:38.070 align:start position:0%
we found one palindromic substring just
the<00:05:36.800><c> single</c><00:05:37.120><c> character</c><00:05:37.520><c> itself</c>

00:05:38.070 --> 00:05:38.080 align:start position:0%
the single character itself
 

00:05:38.080 --> 00:05:39.350 align:start position:0%
the single character itself
then<00:05:38.240><c> we</c><00:05:38.400><c> are</c><00:05:38.479><c> going</c><00:05:38.560><c> to</c><00:05:38.639><c> take</c><00:05:38.880><c> our</c><00:05:38.960><c> left</c><00:05:39.199><c> and</c>

00:05:39.350 --> 00:05:39.360 align:start position:0%
then we are going to take our left and
 

00:05:39.360 --> 00:05:40.950 align:start position:0%
then we are going to take our left and
right<00:05:39.520><c> pointers</c><00:05:40.000><c> and</c><00:05:40.080><c> then</c><00:05:40.320><c> shift</c><00:05:40.639><c> them</c><00:05:40.720><c> so</c>

00:05:40.950 --> 00:05:40.960 align:start position:0%
right pointers and then shift them so
 

00:05:40.960 --> 00:05:42.390 align:start position:0%
right pointers and then shift them so
left<00:05:41.199><c> is</c><00:05:41.360><c> going</c><00:05:41.440><c> to</c><00:05:41.520><c> go</c><00:05:41.680><c> over</c><00:05:41.840><c> here</c>

00:05:42.390 --> 00:05:42.400 align:start position:0%
left is going to go over here
 

00:05:42.400 --> 00:05:44.150 align:start position:0%
left is going to go over here
right<00:05:42.720><c> is</c><00:05:42.880><c> going</c><00:05:42.960><c> to</c><00:05:43.039><c> go</c><00:05:43.360><c> over</c><00:05:43.600><c> here</c><00:05:43.840><c> right</c><00:05:44.000><c> so</c>

00:05:44.150 --> 00:05:44.160 align:start position:0%
right is going to go over here right so
 

00:05:44.160 --> 00:05:45.590 align:start position:0%
right is going to go over here right so
now<00:05:44.320><c> let's</c><00:05:44.479><c> compare</c><00:05:44.800><c> left</c><00:05:45.039><c> character</c><00:05:45.440><c> and</c>

00:05:45.590 --> 00:05:45.600 align:start position:0%
now let's compare left character and
 

00:05:45.600 --> 00:05:46.710 align:start position:0%
now let's compare left character and
right<00:05:45.840><c> character</c>

00:05:46.710 --> 00:05:46.720 align:start position:0%
right character
 

00:05:46.720 --> 00:05:49.749 align:start position:0%
right character
since<00:05:47.039><c> we</c><00:05:47.360><c> already</c><00:05:48.080><c> know</c><00:05:48.800><c> this</c><00:05:49.360><c> middle</c>

00:05:49.749 --> 00:05:49.759 align:start position:0%
since we already know this middle
 

00:05:49.759 --> 00:05:50.629 align:start position:0%
since we already know this middle
portion

00:05:50.629 --> 00:05:50.639 align:start position:0%
portion
 

00:05:50.639 --> 00:05:53.270 align:start position:0%
portion
is<00:05:50.960><c> a</c><00:05:51.120><c> palindrome</c><00:05:51.759><c> right</c><00:05:52.320><c> now</c><00:05:52.560><c> we</c><00:05:52.800><c> only</c><00:05:53.120><c> have</c>

00:05:53.270 --> 00:05:53.280 align:start position:0%
is a palindrome right now we only have
 

00:05:53.280 --> 00:05:55.430 align:start position:0%
is a palindrome right now we only have
to<00:05:53.440><c> compare</c><00:05:53.840><c> the</c><00:05:54.160><c> left</c><00:05:54.479><c> and</c><00:05:54.720><c> right</c><00:05:54.960><c> characters</c>

00:05:55.430 --> 00:05:55.440 align:start position:0%
to compare the left and right characters
 

00:05:55.440 --> 00:05:57.430 align:start position:0%
to compare the left and right characters
the<00:05:55.759><c> new</c><00:05:56.080><c> left</c><00:05:56.319><c> and</c><00:05:56.479><c> right</c><00:05:56.639><c> characters</c><00:05:57.120><c> if</c>

00:05:57.430 --> 00:05:57.440 align:start position:0%
the new left and right characters if
 

00:05:57.440 --> 00:06:00.309 align:start position:0%
the new left and right characters if
they<00:05:57.759><c> are</c><00:05:58.080><c> equal</c><00:05:58.720><c> right</c><00:05:59.039><c> which</c><00:05:59.280><c> they</c><00:05:59.600><c> are</c><00:06:00.000><c> a</c>

00:06:00.309 --> 00:06:00.319 align:start position:0%
they are equal right which they are a
 

00:06:00.319 --> 00:06:01.189 align:start position:0%
they are equal right which they are a
equals<00:06:00.800><c> a</c>

00:06:01.189 --> 00:06:01.199 align:start position:0%
equals a
 

00:06:01.199 --> 00:06:04.390 align:start position:0%
equals a
right<00:06:01.680><c> so</c><00:06:02.240><c> therefore</c><00:06:03.360><c> we</c><00:06:03.600><c> found</c><00:06:04.000><c> one</c>

00:06:04.390 --> 00:06:04.400 align:start position:0%
right so therefore we found one
 

00:06:04.400 --> 00:06:06.550 align:start position:0%
right so therefore we found one
additional<00:06:04.960><c> palindrome</c><00:06:05.520><c> this</c><00:06:05.759><c> palindrome</c><00:06:06.400><c> of</c>

00:06:06.550 --> 00:06:06.560 align:start position:0%
additional palindrome this palindrome of
 

00:06:06.560 --> 00:06:08.230 align:start position:0%
additional palindrome this palindrome of
length<00:06:07.199><c> three</c>

00:06:08.230 --> 00:06:08.240 align:start position:0%
length three
 

00:06:08.240 --> 00:06:11.350 align:start position:0%
length three
where<00:06:09.520><c> this</c><00:06:09.759><c> character</c><00:06:10.240><c> is</c><00:06:10.400><c> still</c><00:06:10.800><c> the</c><00:06:11.039><c> middle</c>

00:06:11.350 --> 00:06:11.360 align:start position:0%
where this character is still the middle
 

00:06:11.360 --> 00:06:13.029 align:start position:0%
where this character is still the middle
position<00:06:11.840><c> right</c><00:06:12.000><c> so</c><00:06:12.240><c> now</c><00:06:12.400><c> we</c><00:06:12.560><c> found</c><00:06:12.800><c> an</c>

00:06:13.029 --> 00:06:13.039 align:start position:0%
position right so now we found an
 

00:06:13.039 --> 00:06:14.870 align:start position:0%
position right so now we found an
additional<00:06:13.680><c> palindrome</c><00:06:14.240><c> so</c><00:06:14.400><c> i</c><00:06:14.479><c> think</c><00:06:14.720><c> our</c>

00:06:14.870 --> 00:06:14.880 align:start position:0%
additional palindrome so i think our
 

00:06:14.880 --> 00:06:16.629 align:start position:0%
additional palindrome so i think our
total<00:06:15.199><c> number</c><00:06:15.440><c> of</c><00:06:15.520><c> palindromes</c><00:06:16.080><c> is</c><00:06:16.240><c> up</c><00:06:16.400><c> to</c>

00:06:16.629 --> 00:06:16.639 align:start position:0%
total number of palindromes is up to
 

00:06:16.639 --> 00:06:17.510 align:start position:0%
total number of palindromes is up to
three<00:06:16.960><c> now</c>

00:06:17.510 --> 00:06:17.520 align:start position:0%
three now
 

00:06:17.520 --> 00:06:18.870 align:start position:0%
three now
and<00:06:17.759><c> once</c><00:06:18.000><c> again</c><00:06:18.240><c> we're</c><00:06:18.400><c> going</c><00:06:18.479><c> to</c><00:06:18.560><c> take</c><00:06:18.720><c> our</c>

00:06:18.870 --> 00:06:18.880 align:start position:0%
and once again we're going to take our
 

00:06:18.880 --> 00:06:21.110 align:start position:0%
and once again we're going to take our
left<00:06:19.120><c> pointer</c><00:06:19.520><c> shift</c><00:06:19.759><c> it</c><00:06:20.240><c> to</c><00:06:20.400><c> the</c><00:06:20.639><c> left</c>

00:06:21.110 --> 00:06:21.120 align:start position:0%
left pointer shift it to the left
 

00:06:21.120 --> 00:06:22.469 align:start position:0%
left pointer shift it to the left
right<00:06:21.280><c> pointer</c><00:06:21.520><c> and</c><00:06:21.680><c> shift</c><00:06:21.919><c> it</c><00:06:22.000><c> to</c><00:06:22.080><c> the</c><00:06:22.240><c> right</c>

00:06:22.469 --> 00:06:22.479 align:start position:0%
right pointer and shift it to the right
 

00:06:22.479 --> 00:06:24.070 align:start position:0%
right pointer and shift it to the right
now<00:06:22.639><c> clearly</c><00:06:23.039><c> once</c><00:06:23.280><c> again</c><00:06:23.440><c> our</c><00:06:23.600><c> left</c><00:06:23.840><c> pointer</c>

00:06:24.070 --> 00:06:24.080 align:start position:0%
now clearly once again our left pointer
 

00:06:24.080 --> 00:06:25.110 align:start position:0%
now clearly once again our left pointer
goes<00:06:24.319><c> out</c><00:06:24.479><c> of</c><00:06:24.639><c> bounds</c>

00:06:25.110 --> 00:06:25.120 align:start position:0%
goes out of bounds
 

00:06:25.120 --> 00:06:27.510 align:start position:0%
goes out of bounds
so<00:06:25.600><c> you</c><00:06:25.759><c> know</c><00:06:25.840><c> this</c><00:06:26.080><c> is</c><00:06:26.639><c> we</c><00:06:26.800><c> can't</c><00:06:26.960><c> really</c><00:06:27.199><c> find</c>

00:06:27.510 --> 00:06:27.520 align:start position:0%
so you know this is we can't really find
 

00:06:27.520 --> 00:06:28.950 align:start position:0%
so you know this is we can't really find
any<00:06:27.680><c> more</c><00:06:27.919><c> sub</c><00:06:28.160><c> strings</c><00:06:28.479><c> where</c><00:06:28.639><c> this</c>

00:06:28.950 --> 00:06:28.960 align:start position:0%
any more sub strings where this
 

00:06:28.960 --> 00:06:31.670 align:start position:0%
any more sub strings where this
is<00:06:29.039><c> the</c><00:06:29.199><c> middle</c><00:06:29.520><c> position</c><00:06:30.560><c> but</c><00:06:30.800><c> do</c><00:06:30.960><c> you</c><00:06:31.199><c> notice</c>

00:06:31.670 --> 00:06:31.680 align:start position:0%
is the middle position but do you notice
 

00:06:31.680 --> 00:06:32.550 align:start position:0%
is the middle position but do you notice
how

00:06:32.550 --> 00:06:32.560 align:start position:0%
how
 

00:06:32.560 --> 00:06:35.189 align:start position:0%
how
what<00:06:32.720><c> we</c><00:06:32.880><c> just</c><00:06:33.199><c> did</c><00:06:33.440><c> right</c><00:06:33.600><c> we</c><00:06:34.160><c> we</c><00:06:34.400><c> cut</c><00:06:34.639><c> down</c><00:06:34.960><c> on</c>

00:06:35.189 --> 00:06:35.199 align:start position:0%
what we just did right we we cut down on
 

00:06:35.199 --> 00:06:36.870 align:start position:0%
what we just did right we we cut down on
repeated<00:06:35.919><c> work</c>

00:06:36.870 --> 00:06:36.880 align:start position:0%
repeated work
 

00:06:36.880 --> 00:06:38.550 align:start position:0%
repeated work
we<00:06:37.120><c> found</c><00:06:37.360><c> that</c><00:06:37.520><c> this</c><00:06:37.759><c> is</c><00:06:37.919><c> a</c><00:06:38.000><c> substring</c><00:06:38.479><c> and</c>

00:06:38.550 --> 00:06:38.560 align:start position:0%
we found that this is a substring and
 

00:06:38.560 --> 00:06:40.550 align:start position:0%
we found that this is a substring and
then<00:06:38.800><c> in</c><00:06:39.120><c> another</c><00:06:39.600><c> single</c><00:06:40.000><c> operation</c><00:06:40.400><c> we</c>

00:06:40.550 --> 00:06:40.560 align:start position:0%
then in another single operation we
 

00:06:40.560 --> 00:06:41.909 align:start position:0%
then in another single operation we
found<00:06:40.720><c> that</c><00:06:40.880><c> this</c><00:06:41.120><c> is</c><00:06:41.199><c> a</c><00:06:41.280><c> palindromic</c>

00:06:41.909 --> 00:06:41.919 align:start position:0%
found that this is a palindromic
 

00:06:41.919 --> 00:06:43.670 align:start position:0%
found that this is a palindromic
substring<00:06:42.400><c> as</c><00:06:42.639><c> well</c>

00:06:43.670 --> 00:06:43.680 align:start position:0%
substring as well
 

00:06:43.680 --> 00:06:45.590 align:start position:0%
substring as well
that<00:06:43.919><c> cuts</c><00:06:44.240><c> down</c><00:06:44.479><c> on</c><00:06:44.639><c> the</c><00:06:44.720><c> repeated</c><00:06:45.199><c> work</c>

00:06:45.590 --> 00:06:45.600 align:start position:0%
that cuts down on the repeated work
 

00:06:45.600 --> 00:06:47.110 align:start position:0%
that cuts down on the repeated work
whereas<00:06:46.000><c> before</c><00:06:46.400><c> we</c><00:06:46.560><c> would</c><00:06:46.800><c> have</c><00:06:46.880><c> done</c>

00:06:47.110 --> 00:06:47.120 align:start position:0%
whereas before we would have done
 

00:06:47.120 --> 00:06:48.150 align:start position:0%
whereas before we would have done
something<00:06:47.440><c> like</c><00:06:47.680><c> okay</c>

00:06:48.150 --> 00:06:48.160 align:start position:0%
something like okay
 

00:06:48.160 --> 00:06:50.710 align:start position:0%
something like okay
you<00:06:48.319><c> know</c><00:06:48.880><c> this</c><00:06:49.120><c> is</c><00:06:49.199><c> a</c><00:06:49.280><c> polynomic</c><00:06:49.840><c> substring</c>

00:06:50.710 --> 00:06:50.720 align:start position:0%
you know this is a polynomic substring
 

00:06:50.720 --> 00:06:51.189 align:start position:0%
you know this is a polynomic substring
then<00:06:50.880><c> we</c>

00:06:51.189 --> 00:06:51.199 align:start position:0%
then we
 

00:06:51.199 --> 00:06:53.110 align:start position:0%
then we
increase<00:06:51.680><c> it</c><00:06:52.000><c> then</c><00:06:52.160><c> we</c><00:06:52.319><c> have</c><00:06:52.400><c> to</c><00:06:52.560><c> look</c><00:06:52.720><c> at</c><00:06:52.880><c> both</c>

00:06:53.110 --> 00:06:53.120 align:start position:0%
increase it then we have to look at both
 

00:06:53.120 --> 00:06:54.309 align:start position:0%
increase it then we have to look at both
of<00:06:53.280><c> these</c><00:06:54.000><c> and</c>

00:06:54.309 --> 00:06:54.319 align:start position:0%
of these and
 

00:06:54.319 --> 00:06:56.070 align:start position:0%
of these and
you<00:06:54.400><c> know</c><00:06:54.639><c> if</c><00:06:54.800><c> we</c><00:06:54.960><c> continue</c><00:06:55.440><c> to</c><00:06:55.599><c> increase</c><00:06:55.919><c> it</c>

00:06:56.070 --> 00:06:56.080 align:start position:0%
you know if we continue to increase it
 

00:06:56.080 --> 00:06:57.749 align:start position:0%
you know if we continue to increase it
if<00:06:56.240><c> we</c><00:06:56.319><c> go</c><00:06:56.560><c> all</c><00:06:56.720><c> the</c><00:06:56.800><c> way</c><00:06:57.039><c> here</c><00:06:57.360><c> then</c><00:06:57.520><c> we</c><00:06:57.599><c> have</c>

00:06:57.749 --> 00:06:57.759 align:start position:0%
if we go all the way here then we have
 

00:06:57.759 --> 00:06:58.550 align:start position:0%
if we go all the way here then we have
to<00:06:57.919><c> still</c>

00:06:58.550 --> 00:06:58.560 align:start position:0%
to still
 

00:06:58.560 --> 00:07:00.950 align:start position:0%
to still
check<00:06:58.880><c> okay</c><00:06:59.199><c> this</c><00:06:59.440><c> is</c><00:06:59.599><c> the</c><00:06:59.759><c> same</c><00:07:00.319><c> and</c><00:07:00.479><c> now</c><00:07:00.720><c> this</c>

00:07:00.950 --> 00:07:00.960 align:start position:0%
check okay this is the same and now this
 

00:07:00.960 --> 00:07:02.309 align:start position:0%
check okay this is the same and now this
is<00:07:01.039><c> the</c><00:07:01.120><c> same</c><00:07:01.360><c> right</c><00:07:01.520><c> we're</c>

00:07:02.309 --> 00:07:02.319 align:start position:0%
is the same right we're
 

00:07:02.319 --> 00:07:05.029 align:start position:0%
is the same right we're
continuing<00:07:02.800><c> to</c><00:07:02.880><c> do</c><00:07:03.039><c> repeated</c><00:07:03.599><c> work</c><00:07:04.160><c> if</c><00:07:04.639><c> we</c>

00:07:05.029 --> 00:07:05.039 align:start position:0%
continuing to do repeated work if we
 

00:07:05.039 --> 00:07:06.870 align:start position:0%
continuing to do repeated work if we
start<00:07:05.360><c> from</c><00:07:05.520><c> the</c><00:07:05.759><c> left</c><00:07:06.080><c> and</c><00:07:06.160><c> then</c><00:07:06.319><c> expand</c><00:07:06.800><c> to</c>

00:07:06.870 --> 00:07:06.880 align:start position:0%
start from the left and then expand to
 

00:07:06.880 --> 00:07:08.950 align:start position:0%
start from the left and then expand to
the<00:07:07.039><c> right</c><00:07:07.360><c> but</c><00:07:07.520><c> if</c><00:07:07.680><c> we</c><00:07:07.840><c> start</c><00:07:08.160><c> in</c><00:07:08.319><c> the</c><00:07:08.560><c> middle</c>

00:07:08.950 --> 00:07:08.960 align:start position:0%
the right but if we start in the middle
 

00:07:08.960 --> 00:07:11.189 align:start position:0%
the right but if we start in the middle
and<00:07:09.120><c> expand</c><00:07:09.680><c> left</c><00:07:10.080><c> and</c><00:07:10.319><c> right</c><00:07:10.880><c> then</c><00:07:11.039><c> we</c>

00:07:11.189 --> 00:07:11.199 align:start position:0%
and expand left and right then we
 

00:07:11.199 --> 00:07:12.950 align:start position:0%
and expand left and right then we
eliminate<00:07:11.759><c> repeated</c><00:07:12.319><c> work</c>

00:07:12.950 --> 00:07:12.960 align:start position:0%
eliminate repeated work
 

00:07:12.960 --> 00:07:14.950 align:start position:0%
eliminate repeated work
so<00:07:13.120><c> let's</c><00:07:13.360><c> do</c><00:07:13.520><c> the</c><00:07:13.680><c> same</c><00:07:13.919><c> thing</c><00:07:14.080><c> from</c><00:07:14.319><c> here</c><00:07:14.720><c> so</c>

00:07:14.950 --> 00:07:14.960 align:start position:0%
so let's do the same thing from here so
 

00:07:14.960 --> 00:07:16.710 align:start position:0%
so let's do the same thing from here so
this<00:07:15.280><c> is</c><00:07:15.440><c> a</c><00:07:15.520><c> palindromic</c><00:07:16.080><c> substring</c><00:07:16.479><c> right</c>

00:07:16.710 --> 00:07:16.720 align:start position:0%
this is a palindromic substring right
 

00:07:16.720 --> 00:07:17.990 align:start position:0%
this is a palindromic substring right
left<00:07:16.960><c> and</c><00:07:17.039><c> right</c><00:07:17.280><c> point</c><00:07:17.520><c> at</c><00:07:17.599><c> the</c><00:07:17.759><c> same</c>

00:07:17.990 --> 00:07:18.000 align:start position:0%
left and right point at the same
 

00:07:18.000 --> 00:07:18.629 align:start position:0%
left and right point at the same
character

00:07:18.629 --> 00:07:18.639 align:start position:0%
character
 

00:07:18.639 --> 00:07:21.350 align:start position:0%
character
then<00:07:18.800><c> we</c><00:07:18.960><c> expand</c><00:07:19.759><c> once</c><00:07:20.160><c> to</c><00:07:20.319><c> the</c><00:07:20.479><c> left</c><00:07:20.960><c> once</c><00:07:21.199><c> to</c>

00:07:21.350 --> 00:07:21.360 align:start position:0%
then we expand once to the left once to
 

00:07:21.360 --> 00:07:22.070 align:start position:0%
then we expand once to the left once to
the<00:07:21.520><c> right</c>

00:07:22.070 --> 00:07:22.080 align:start position:0%
the right
 

00:07:22.080 --> 00:07:25.189 align:start position:0%
the right
are<00:07:22.479><c> these</c><00:07:22.800><c> characters</c><00:07:23.599><c> the</c><00:07:23.919><c> same</c><00:07:24.479><c> right</c><00:07:24.880><c> are</c>

00:07:25.189 --> 00:07:25.199 align:start position:0%
are these characters the same right are
 

00:07:25.199 --> 00:07:25.589 align:start position:0%
are these characters the same right are
a

00:07:25.589 --> 00:07:25.599 align:start position:0%
a
 

00:07:25.599 --> 00:07:28.469 align:start position:0%
a
and<00:07:25.840><c> b</c><00:07:26.160><c> the</c><00:07:26.319><c> same</c><00:07:26.560><c> they're</c><00:07:26.960><c> not</c><00:07:27.360><c> the</c><00:07:27.599><c> same</c><00:07:28.240><c> so</c>

00:07:28.469 --> 00:07:28.479 align:start position:0%
and b the same they're not the same so
 

00:07:28.479 --> 00:07:30.070 align:start position:0%
and b the same they're not the same so
we<00:07:28.720><c> knew</c><00:07:28.960><c> that</c><00:07:29.120><c> the</c><00:07:29.280><c> initial</c>

00:07:30.070 --> 00:07:30.080 align:start position:0%
we knew that the initial
 

00:07:30.080 --> 00:07:32.230 align:start position:0%
we knew that the initial
substring<00:07:30.639><c> just</c><00:07:30.960><c> in</c><00:07:31.039><c> the</c><00:07:31.199><c> middle</c><00:07:31.599><c> over</c><00:07:31.919><c> here</c>

00:07:32.230 --> 00:07:32.240 align:start position:0%
substring just in the middle over here
 

00:07:32.240 --> 00:07:33.990 align:start position:0%
substring just in the middle over here
the<00:07:32.560><c> one</c><00:07:32.720><c> the</c><00:07:32.880><c> single</c><00:07:33.280><c> character</c>

00:07:33.990 --> 00:07:34.000 align:start position:0%
the one the single character
 

00:07:34.000 --> 00:07:37.029 align:start position:0%
the one the single character
was<00:07:34.400><c> a</c><00:07:34.560><c> palindrome</c><00:07:35.199><c> but</c><00:07:35.440><c> when</c><00:07:35.680><c> we</c><00:07:36.080><c> add</c><00:07:36.800><c> this</c>

00:07:37.029 --> 00:07:37.039 align:start position:0%
was a palindrome but when we add this
 

00:07:37.039 --> 00:07:39.029 align:start position:0%
was a palindrome but when we add this
character<00:07:37.520><c> and</c><00:07:37.680><c> this</c><00:07:37.919><c> character</c><00:07:38.400><c> it's</c><00:07:38.720><c> no</c>

00:07:39.029 --> 00:07:39.039 align:start position:0%
character and this character it's no
 

00:07:39.039 --> 00:07:40.710 align:start position:0%
character and this character it's no
longer<00:07:39.440><c> a</c><00:07:39.599><c> palindrome</c><00:07:40.160><c> this</c><00:07:40.400><c> is</c><00:07:40.479><c> not</c><00:07:40.639><c> a</c>

00:07:40.710 --> 00:07:40.720 align:start position:0%
longer a palindrome this is not a
 

00:07:40.720 --> 00:07:43.430 align:start position:0%
longer a palindrome this is not a
palindrome<00:07:41.280><c> so</c><00:07:41.520><c> no</c><00:07:41.840><c> matter</c><00:07:42.319><c> what</c><00:07:42.479><c> we</c><00:07:42.800><c> do</c><00:07:43.120><c> now</c>

00:07:43.430 --> 00:07:43.440 align:start position:0%
palindrome so no matter what we do now
 

00:07:43.440 --> 00:07:45.510 align:start position:0%
palindrome so no matter what we do now
if<00:07:43.599><c> i</c><00:07:43.840><c> expand</c><00:07:44.319><c> one</c><00:07:44.560><c> more</c><00:07:44.800><c> to</c><00:07:44.960><c> the</c><00:07:45.039><c> left</c><00:07:45.360><c> and</c>

00:07:45.510 --> 00:07:45.520 align:start position:0%
if i expand one more to the left and
 

00:07:45.520 --> 00:07:46.869 align:start position:0%
if i expand one more to the left and
expand<00:07:45.919><c> one</c><00:07:46.080><c> more</c><00:07:46.240><c> to</c><00:07:46.400><c> the</c><00:07:46.479><c> right</c>

00:07:46.869 --> 00:07:46.879 align:start position:0%
expand one more to the right
 

00:07:46.879 --> 00:07:48.950 align:start position:0%
expand one more to the right
even<00:07:47.120><c> if</c><00:07:47.280><c> these</c><00:07:47.599><c> characters</c><00:07:48.080><c> were</c><00:07:48.240><c> the</c><00:07:48.479><c> same</c>

00:07:48.950 --> 00:07:48.960 align:start position:0%
even if these characters were the same
 

00:07:48.960 --> 00:07:51.189 align:start position:0%
even if these characters were the same
assume<00:07:49.360><c> we</c><00:07:49.520><c> had</c><00:07:49.759><c> an</c><00:07:49.919><c> a</c><00:07:50.160><c> in</c><00:07:50.319><c> both</c><00:07:50.560><c> positions</c>

00:07:51.189 --> 00:07:51.199 align:start position:0%
assume we had an a in both positions
 

00:07:51.199 --> 00:07:53.510 align:start position:0%
assume we had an a in both positions
it<00:07:51.440><c> doesn't</c><00:07:52.000><c> matter</c><00:07:52.560><c> because</c><00:07:52.879><c> the</c><00:07:53.199><c> sub</c>

00:07:53.510 --> 00:07:53.520 align:start position:0%
it doesn't matter because the sub
 

00:07:53.520 --> 00:07:55.589 align:start position:0%
it doesn't matter because the sub
problem<00:07:53.919><c> the</c><00:07:54.160><c> substring</c><00:07:54.720><c> in</c><00:07:54.800><c> the</c><00:07:55.120><c> middle</c>

00:07:55.589 --> 00:07:55.599 align:start position:0%
problem the substring in the middle
 

00:07:55.599 --> 00:07:58.869 align:start position:0%
problem the substring in the middle
is<00:07:55.919><c> not</c><00:07:56.160><c> a</c><00:07:56.240><c> palindrome</c><00:07:57.039><c> so</c><00:07:57.280><c> therefore</c><00:07:58.160><c> no</c><00:07:58.560><c> more</c>

00:07:58.869 --> 00:07:58.879 align:start position:0%
is not a palindrome so therefore no more
 

00:07:58.879 --> 00:07:59.749 align:start position:0%
is not a palindrome so therefore no more
substrings

00:07:59.749 --> 00:07:59.759 align:start position:0%
substrings
 

00:07:59.759 --> 00:08:02.070 align:start position:0%
substrings
expanded<00:08:00.560><c> from</c><00:08:00.800><c> the</c><00:08:01.039><c> middle</c><00:08:01.440><c> of</c><00:08:01.759><c> this</c>

00:08:02.070 --> 00:08:02.080 align:start position:0%
expanded from the middle of this
 

00:08:02.080 --> 00:08:04.070 align:start position:0%
expanded from the middle of this
position<00:08:02.560><c> to</c><00:08:02.720><c> the</c><00:08:02.960><c> left</c><00:08:03.280><c> and</c><00:08:03.440><c> right</c>

00:08:04.070 --> 00:08:04.080 align:start position:0%
position to the left and right
 

00:08:04.080 --> 00:08:06.230 align:start position:0%
position to the left and right
none<00:08:04.319><c> of</c><00:08:04.400><c> those</c><00:08:04.879><c> additional</c><00:08:05.440><c> substrings</c><00:08:06.080><c> are</c>

00:08:06.230 --> 00:08:06.240 align:start position:0%
none of those additional substrings are
 

00:08:06.240 --> 00:08:08.230 align:start position:0%
none of those additional substrings are
going<00:08:06.479><c> to</c><00:08:06.639><c> be</c><00:08:06.960><c> palindromes</c>

00:08:08.230 --> 00:08:08.240 align:start position:0%
going to be palindromes
 

00:08:08.240 --> 00:08:10.950 align:start position:0%
going to be palindromes
so<00:08:08.479><c> so</c><00:08:08.800><c> far</c><00:08:09.120><c> our</c><00:08:09.440><c> count</c><00:08:09.759><c> of</c><00:08:09.919><c> palindromes</c><00:08:10.560><c> is</c><00:08:10.720><c> at</c>

00:08:10.950 --> 00:08:10.960 align:start position:0%
so so far our count of palindromes is at
 

00:08:10.960 --> 00:08:12.309 align:start position:0%
so so far our count of palindromes is at
four<00:08:11.280><c> i</c><00:08:11.440><c> believe</c><00:08:11.840><c> so</c>

00:08:12.309 --> 00:08:12.319 align:start position:0%
four i believe so
 

00:08:12.319 --> 00:08:14.629 align:start position:0%
four i believe so
now<00:08:12.560><c> let's</c><00:08:12.800><c> go</c><00:08:13.199><c> to</c><00:08:13.360><c> the</c><00:08:13.440><c> last</c><00:08:13.759><c> position</c><00:08:14.160><c> so</c><00:08:14.479><c> we</c>

00:08:14.629 --> 00:08:14.639 align:start position:0%
now let's go to the last position so we
 

00:08:14.639 --> 00:08:15.510 align:start position:0%
now let's go to the last position so we
want<00:08:14.720><c> to</c><00:08:14.879><c> expand</c>

00:08:15.510 --> 00:08:15.520 align:start position:0%
want to expand
 

00:08:15.520 --> 00:08:17.270 align:start position:0%
want to expand
from<00:08:15.840><c> this</c><00:08:16.080><c> middle</c><00:08:16.400><c> position</c><00:08:16.720><c> so</c><00:08:16.879><c> we're</c><00:08:17.039><c> gonna</c>

00:08:17.270 --> 00:08:17.280 align:start position:0%
from this middle position so we're gonna
 

00:08:17.280 --> 00:08:19.510 align:start position:0%
from this middle position so we're gonna
go<00:08:17.919><c> so</c><00:08:18.160><c> initially</c><00:08:18.560><c> we're</c><00:08:18.720><c> gonna</c><00:08:18.879><c> say</c><00:08:19.120><c> okay</c>

00:08:19.510 --> 00:08:19.520 align:start position:0%
go so initially we're gonna say okay
 

00:08:19.520 --> 00:08:21.589 align:start position:0%
go so initially we're gonna say okay
this<00:08:19.919><c> itself</c><00:08:20.400><c> is</c><00:08:20.560><c> a</c><00:08:20.639><c> palindrome</c><00:08:21.199><c> so</c><00:08:21.360><c> we</c><00:08:21.440><c> can</c>

00:08:21.589 --> 00:08:21.599 align:start position:0%
this itself is a palindrome so we can
 

00:08:21.599 --> 00:08:23.670 align:start position:0%
this itself is a palindrome so we can
change<00:08:21.840><c> our</c><00:08:22.000><c> count</c><00:08:22.240><c> of</c><00:08:22.319><c> palindromes</c><00:08:22.879><c> to</c><00:08:23.120><c> five</c>

00:08:23.670 --> 00:08:23.680 align:start position:0%
change our count of palindromes to five
 

00:08:23.680 --> 00:08:25.270 align:start position:0%
change our count of palindromes to five
we<00:08:23.840><c> try</c><00:08:24.000><c> to</c><00:08:24.160><c> expand</c><00:08:24.560><c> left</c><00:08:24.800><c> and</c><00:08:24.960><c> we</c><00:08:25.039><c> try</c><00:08:25.199><c> to</c>

00:08:25.270 --> 00:08:25.280 align:start position:0%
we try to expand left and we try to
 

00:08:25.280 --> 00:08:27.430 align:start position:0%
we try to expand left and we try to
expand<00:08:25.680><c> right</c><00:08:25.919><c> but</c><00:08:26.479><c> again</c><00:08:26.800><c> we</c><00:08:26.960><c> go</c><00:08:27.199><c> out</c><00:08:27.280><c> of</c>

00:08:27.430 --> 00:08:27.440 align:start position:0%
expand right but again we go out of
 

00:08:27.440 --> 00:08:28.710 align:start position:0%
expand right but again we go out of
bounds<00:08:27.759><c> to</c><00:08:27.919><c> the</c><00:08:28.000><c> right</c><00:08:28.240><c> side</c>

00:08:28.710 --> 00:08:28.720 align:start position:0%
bounds to the right side
 

00:08:28.720 --> 00:08:31.990 align:start position:0%
bounds to the right side
so<00:08:28.960><c> we're</c><00:08:29.120><c> done</c><00:08:29.840><c> so</c><00:08:30.240><c> in</c><00:08:30.479><c> total</c><00:08:30.879><c> we</c><00:08:31.039><c> found</c><00:08:31.599><c> five</c>

00:08:31.990 --> 00:08:32.000 align:start position:0%
so we're done so in total we found five
 

00:08:32.000 --> 00:08:32.469 align:start position:0%
so we're done so in total we found five
different

00:08:32.469 --> 00:08:32.479 align:start position:0%
different
 

00:08:32.479 --> 00:08:35.029 align:start position:0%
different
palindromes<00:08:33.279><c> but</c><00:08:33.519><c> it</c><00:08:33.680><c> turns</c><00:08:34.080><c> out</c><00:08:34.240><c> we</c><00:08:34.479><c> actually</c>

00:08:35.029 --> 00:08:35.039 align:start position:0%
palindromes but it turns out we actually
 

00:08:35.039 --> 00:08:35.990 align:start position:0%
palindromes but it turns out we actually
missed<00:08:35.440><c> a</c><00:08:35.519><c> couple</c>

00:08:35.990 --> 00:08:36.000 align:start position:0%
missed a couple
 

00:08:36.000 --> 00:08:39.350 align:start position:0%
missed a couple
we<00:08:36.399><c> missed</c><00:08:37.039><c> this</c><00:08:37.440><c> palindrome</c><00:08:38.240><c> of</c><00:08:38.399><c> length</c><00:08:38.880><c> two</c>

00:08:39.350 --> 00:08:39.360 align:start position:0%
we missed this palindrome of length two
 

00:08:39.360 --> 00:08:42.469 align:start position:0%
we missed this palindrome of length two
and<00:08:39.519><c> we</c><00:08:39.760><c> missed</c><00:08:40.479><c> this</c><00:08:40.880><c> palindrome</c><00:08:41.839><c> of</c><00:08:42.080><c> length</c>

00:08:42.469 --> 00:08:42.479 align:start position:0%
and we missed this palindrome of length
 

00:08:42.479 --> 00:08:43.029 align:start position:0%
and we missed this palindrome of length
two

00:08:43.029 --> 00:08:43.039 align:start position:0%
two
 

00:08:43.039 --> 00:08:45.509 align:start position:0%
two
how<00:08:43.519><c> is</c><00:08:43.680><c> it</c><00:08:43.839><c> that</c><00:08:44.000><c> we</c><00:08:44.399><c> missed</c><00:08:44.800><c> palindromes</c><00:08:45.440><c> and</c>

00:08:45.509 --> 00:08:45.519 align:start position:0%
how is it that we missed palindromes and
 

00:08:45.519 --> 00:08:46.790 align:start position:0%
how is it that we missed palindromes and
how<00:08:45.760><c> is</c><00:08:45.920><c> it</c><00:08:46.000><c> that</c><00:08:46.160><c> they're</c><00:08:46.399><c> both</c>

00:08:46.790 --> 00:08:46.800 align:start position:0%
how is it that they're both
 

00:08:46.800 --> 00:08:49.269 align:start position:0%
how is it that they're both
length<00:08:47.279><c> two</c><00:08:47.839><c> notice</c><00:08:48.240><c> how</c><00:08:48.399><c> we</c><00:08:48.560><c> were</c><00:08:48.880><c> starting</c>

00:08:49.269 --> 00:08:49.279 align:start position:0%
length two notice how we were starting
 

00:08:49.279 --> 00:08:50.710 align:start position:0%
length two notice how we were starting
at<00:08:49.440><c> each</c><00:08:49.760><c> middle</c><00:08:50.080><c> position</c>

00:08:50.710 --> 00:08:50.720 align:start position:0%
at each middle position
 

00:08:50.720 --> 00:08:54.230 align:start position:0%
at each middle position
so<00:08:51.120><c> this</c><00:08:51.360><c> was</c><00:08:51.519><c> a</c><00:08:52.000><c> length</c><00:08:52.399><c> of</c><00:08:52.800><c> one</c><00:08:53.120><c> right</c><00:08:53.600><c> as</c><00:08:53.839><c> we</c>

00:08:54.230 --> 00:08:54.240 align:start position:0%
so this was a length of one right as we
 

00:08:54.240 --> 00:08:56.550 align:start position:0%
so this was a length of one right as we
add<00:08:54.880><c> the</c><00:08:55.120><c> adjacent</c><00:08:55.760><c> positions</c><00:08:56.240><c> then</c><00:08:56.399><c> we're</c>

00:08:56.550 --> 00:08:56.560 align:start position:0%
add the adjacent positions then we're
 

00:08:56.560 --> 00:08:58.070 align:start position:0%
add the adjacent positions then we're
increasing<00:08:57.120><c> the</c><00:08:57.279><c> palindrome</c>

00:08:58.070 --> 00:08:58.080 align:start position:0%
increasing the palindrome
 

00:08:58.080 --> 00:09:00.470 align:start position:0%
increasing the palindrome
to<00:08:58.320><c> length</c><00:08:58.880><c> three</c><00:08:59.360><c> and</c><00:08:59.440><c> then</c><00:08:59.600><c> if</c><00:08:59.680><c> we</c><00:08:59.839><c> added</c><00:09:00.399><c> a</c>

00:09:00.470 --> 00:09:00.480 align:start position:0%
to length three and then if we added a
 

00:09:00.480 --> 00:09:02.070 align:start position:0%
to length three and then if we added a
couple<00:09:00.720><c> more</c><00:09:00.959><c> we'd</c><00:09:01.200><c> increase</c><00:09:01.519><c> it</c><00:09:01.600><c> to</c><00:09:01.760><c> length</c>

00:09:02.070 --> 00:09:02.080 align:start position:0%
couple more we'd increase it to length
 

00:09:02.080 --> 00:09:03.110 align:start position:0%
couple more we'd increase it to length
five<00:09:02.320><c> so</c><00:09:02.480><c> we're</c><00:09:02.720><c> only</c>

00:09:03.110 --> 00:09:03.120 align:start position:0%
five so we're only
 

00:09:03.120 --> 00:09:05.829 align:start position:0%
five so we're only
getting<00:09:03.519><c> palindromes</c><00:09:04.240><c> of</c><00:09:04.480><c> odd</c><00:09:04.959><c> length</c><00:09:05.440><c> if</c><00:09:05.600><c> we</c>

00:09:05.829 --> 00:09:05.839 align:start position:0%
getting palindromes of odd length if we
 

00:09:05.839 --> 00:09:06.550 align:start position:0%
getting palindromes of odd length if we
want<00:09:06.080><c> to</c><00:09:06.240><c> get</c>

00:09:06.550 --> 00:09:06.560 align:start position:0%
want to get
 

00:09:06.560 --> 00:09:08.949 align:start position:0%
want to get
palindromes<00:09:07.200><c> of</c><00:09:07.519><c> even</c><00:09:08.000><c> lengths</c><00:09:08.480><c> we</c><00:09:08.640><c> have</c><00:09:08.800><c> to</c>

00:09:08.949 --> 00:09:08.959 align:start position:0%
palindromes of even lengths we have to
 

00:09:08.959 --> 00:09:09.590 align:start position:0%
palindromes of even lengths we have to
start

00:09:09.590 --> 00:09:09.600 align:start position:0%
start
 

00:09:09.600 --> 00:09:12.150 align:start position:0%
start
at<00:09:09.920><c> every</c><00:09:10.240><c> single</c><00:09:10.640><c> even</c><00:09:11.040><c> position</c><00:09:11.760><c> so</c><00:09:11.920><c> we'd</c>

00:09:12.150 --> 00:09:12.160 align:start position:0%
at every single even position so we'd
 

00:09:12.160 --> 00:09:13.110 align:start position:0%
at every single even position so we'd
have<00:09:12.320><c> to</c><00:09:12.480><c> start</c>

00:09:13.110 --> 00:09:13.120 align:start position:0%
have to start
 

00:09:13.120 --> 00:09:15.430 align:start position:0%
have to start
at<00:09:13.760><c> here</c><00:09:14.240><c> and</c><00:09:14.320><c> then</c><00:09:14.800><c> you</c><00:09:14.880><c> know</c><00:09:15.040><c> this</c><00:09:15.200><c> is</c><00:09:15.360><c> a</c>

00:09:15.430 --> 00:09:15.440 align:start position:0%
at here and then you know this is a
 

00:09:15.440 --> 00:09:17.030 align:start position:0%
at here and then you know this is a
problem<00:09:15.760><c> this</c><00:09:16.000><c> is</c><00:09:16.080><c> a</c><00:09:16.160><c> substring</c><00:09:16.640><c> of</c><00:09:16.720><c> length</c>

00:09:17.030 --> 00:09:17.040 align:start position:0%
problem this is a substring of length
 

00:09:17.040 --> 00:09:18.470 align:start position:0%
problem this is a substring of length
two<00:09:17.200><c> and</c><00:09:17.279><c> then</c><00:09:17.360><c> we'd</c><00:09:17.600><c> expand</c>

00:09:18.470 --> 00:09:18.480 align:start position:0%
two and then we'd expand
 

00:09:18.480 --> 00:09:20.230 align:start position:0%
two and then we'd expand
by<00:09:18.800><c> one</c><00:09:19.040><c> more</c><00:09:19.279><c> so</c><00:09:19.440><c> then</c><00:09:19.600><c> we'd</c><00:09:19.760><c> get</c><00:09:20.160><c> a</c>

00:09:20.230 --> 00:09:20.240 align:start position:0%
by one more so then we'd get a
 

00:09:20.240 --> 00:09:22.230 align:start position:0%
by one more so then we'd get a
palindrome<00:09:20.800><c> of</c><00:09:20.959><c> length</c><00:09:21.279><c> four</c><00:09:21.680><c> and</c><00:09:21.760><c> etcetera</c>

00:09:22.230 --> 00:09:22.240 align:start position:0%
palindrome of length four and etcetera
 

00:09:22.240 --> 00:09:24.310 align:start position:0%
palindrome of length four and etcetera
etcetera<00:09:22.720><c> just</c><00:09:22.880><c> keep</c><00:09:23.120><c> increasing</c><00:09:23.600><c> it</c><00:09:23.680><c> by</c><00:09:24.000><c> two</c>

00:09:24.310 --> 00:09:24.320 align:start position:0%
etcetera just keep increasing it by two
 

00:09:24.320 --> 00:09:25.509 align:start position:0%
etcetera just keep increasing it by two
so<00:09:24.480><c> this</c><00:09:24.720><c> is</c><00:09:24.800><c> how</c><00:09:24.959><c> we're</c><00:09:25.120><c> going</c><00:09:25.200><c> to</c><00:09:25.279><c> get</c>

00:09:25.509 --> 00:09:25.519 align:start position:0%
so this is how we're going to get
 

00:09:25.519 --> 00:09:27.509 align:start position:0%
so this is how we're going to get
palindromes<00:09:26.240><c> of</c><00:09:26.480><c> even</c><00:09:26.880><c> length</c>

00:09:27.509 --> 00:09:27.519 align:start position:0%
palindromes of even length
 

00:09:27.519 --> 00:09:28.949 align:start position:0%
palindromes of even length
so<00:09:27.680><c> when</c><00:09:27.839><c> we</c><00:09:28.000><c> do</c><00:09:28.160><c> this</c><00:09:28.399><c> we're</c><00:09:28.560><c> gonna</c><00:09:28.720><c> have</c><00:09:28.800><c> our</c>

00:09:28.949 --> 00:09:28.959 align:start position:0%
so when we do this we're gonna have our
 

00:09:28.959 --> 00:09:30.790 align:start position:0%
so when we do this we're gonna have our
left<00:09:29.200><c> pointer</c><00:09:29.440><c> initialized</c><00:09:30.080><c> here</c><00:09:30.399><c> and</c>

00:09:30.790 --> 00:09:30.800 align:start position:0%
left pointer initialized here and
 

00:09:30.800 --> 00:09:32.550 align:start position:0%
left pointer initialized here and
in<00:09:30.959><c> this</c><00:09:31.120><c> case</c><00:09:31.600><c> the</c><00:09:31.839><c> right</c><00:09:32.160><c> pointer</c><00:09:32.480><c> is</c>

00:09:32.550 --> 00:09:32.560 align:start position:0%
in this case the right pointer is
 

00:09:32.560 --> 00:09:33.910 align:start position:0%
in this case the right pointer is
actually<00:09:32.800><c> just</c><00:09:32.959><c> gonna</c><00:09:33.120><c> be</c><00:09:33.440><c> left</c>

00:09:33.910 --> 00:09:33.920 align:start position:0%
actually just gonna be left
 

00:09:33.920 --> 00:09:36.949 align:start position:0%
actually just gonna be left
plus<00:09:34.480><c> one</c><00:09:34.880><c> before</c><00:09:35.279><c> we</c><00:09:35.440><c> were</c><00:09:35.600><c> doing</c><00:09:35.920><c> it</c><00:09:36.320><c> as</c><00:09:36.720><c> left</c>

00:09:36.949 --> 00:09:36.959 align:start position:0%
plus one before we were doing it as left
 

00:09:36.959 --> 00:09:38.389 align:start position:0%
plus one before we were doing it as left
and<00:09:37.120><c> right</c><00:09:37.360><c> both</c><00:09:37.680><c> starting</c><00:09:38.000><c> at</c><00:09:38.080><c> the</c><00:09:38.160><c> same</c>

00:09:38.389 --> 00:09:38.399 align:start position:0%
and right both starting at the same
 

00:09:38.399 --> 00:09:39.509 align:start position:0%
and right both starting at the same
position<00:09:38.800><c> in</c><00:09:38.959><c> this</c><00:09:39.120><c> case</c>

00:09:39.509 --> 00:09:39.519 align:start position:0%
position in this case
 

00:09:39.519 --> 00:09:42.389 align:start position:0%
position in this case
left<00:09:40.240><c> right</c><00:09:40.480><c> is</c><00:09:40.640><c> going</c><00:09:40.720><c> to</c><00:09:40.800><c> be</c><00:09:41.120><c> left</c><00:09:41.519><c> plus</c><00:09:41.920><c> one</c>

00:09:42.389 --> 00:09:42.399 align:start position:0%
left right is going to be left plus one
 

00:09:42.399 --> 00:09:43.670 align:start position:0%
left right is going to be left plus one
and<00:09:42.560><c> so</c><00:09:42.720><c> in</c><00:09:42.800><c> this</c><00:09:42.959><c> case</c><00:09:43.200><c> we</c><00:09:43.440><c> see</c>

00:09:43.670 --> 00:09:43.680 align:start position:0%
and so in this case we see
 

00:09:43.680 --> 00:09:45.269 align:start position:0%
and so in this case we see
these<00:09:43.839><c> characters</c><00:09:44.320><c> are</c><00:09:44.480><c> equal</c><00:09:44.800><c> therefore</c>

00:09:45.269 --> 00:09:45.279 align:start position:0%
these characters are equal therefore
 

00:09:45.279 --> 00:09:47.430 align:start position:0%
these characters are equal therefore
they<00:09:45.519><c> are</c><00:09:45.760><c> palindromes</c><00:09:46.560><c> so</c><00:09:46.800><c> we</c><00:09:46.959><c> can</c><00:09:47.120><c> increase</c>

00:09:47.430 --> 00:09:47.440 align:start position:0%
they are palindromes so we can increase
 

00:09:47.440 --> 00:09:48.710 align:start position:0%
they are palindromes so we can increase
our<00:09:47.680><c> count</c><00:09:48.000><c> from</c><00:09:48.240><c> five</c>

00:09:48.710 --> 00:09:48.720 align:start position:0%
our count from five
 

00:09:48.720 --> 00:09:51.269 align:start position:0%
our count from five
to<00:09:48.959><c> six</c><00:09:49.360><c> we</c><00:09:49.519><c> expand</c><00:09:50.000><c> outwards</c><00:09:50.720><c> left</c><00:09:50.959><c> and</c><00:09:51.120><c> right</c>

00:09:51.269 --> 00:09:51.279 align:start position:0%
to six we expand outwards left and right
 

00:09:51.279 --> 00:09:52.790 align:start position:0%
to six we expand outwards left and right
but<00:09:51.440><c> we</c><00:09:51.519><c> see</c><00:09:51.760><c> left</c><00:09:52.080><c> is</c><00:09:52.160><c> going</c><00:09:52.240><c> to</c><00:09:52.320><c> be</c><00:09:52.560><c> out</c><00:09:52.640><c> of</c>

00:09:52.790 --> 00:09:52.800 align:start position:0%
but we see left is going to be out of
 

00:09:52.800 --> 00:09:53.269 align:start position:0%
but we see left is going to be out of
bounds

00:09:53.269 --> 00:09:53.279 align:start position:0%
bounds
 

00:09:53.279 --> 00:09:55.910 align:start position:0%
bounds
so<00:09:53.440><c> then</c><00:09:53.680><c> we</c><00:09:53.760><c> can</c><00:09:53.920><c> stop</c><00:09:54.640><c> so</c><00:09:54.959><c> next</c><00:09:55.360><c> we're</c><00:09:55.519><c> gonna</c>

00:09:55.910 --> 00:09:55.920 align:start position:0%
so then we can stop so next we're gonna
 

00:09:55.920 --> 00:09:57.750 align:start position:0%
so then we can stop so next we're gonna
basically<00:09:56.320><c> do</c><00:09:56.480><c> the</c><00:09:56.640><c> same</c><00:09:56.800><c> thing</c><00:09:57.040><c> for</c><00:09:57.200><c> every</c>

00:09:57.750 --> 00:09:57.760 align:start position:0%
basically do the same thing for every
 

00:09:57.760 --> 00:09:59.670 align:start position:0%
basically do the same thing for every
pair<00:09:58.080><c> of</c><00:09:58.240><c> adjacent</c><00:09:58.800><c> characters</c><00:09:59.360><c> right</c><00:09:59.519><c> to</c>

00:09:59.670 --> 00:09:59.680 align:start position:0%
pair of adjacent characters right to
 

00:09:59.680 --> 00:10:02.310 align:start position:0%
pair of adjacent characters right to
find<00:10:00.080><c> even</c><00:10:00.560><c> length</c><00:10:00.959><c> palindromes</c><00:10:01.839><c> so</c><00:10:02.000><c> here</c>

00:10:02.310 --> 00:10:02.320 align:start position:0%
find even length palindromes so here
 

00:10:02.320 --> 00:10:03.750 align:start position:0%
find even length palindromes so here
left<00:10:02.560><c> and</c><00:10:02.720><c> right</c><00:10:02.959><c> are</c><00:10:03.040><c> once</c><00:10:03.279><c> again</c><00:10:03.440><c> the</c><00:10:03.600><c> same</c>

00:10:03.750 --> 00:10:03.760 align:start position:0%
left and right are once again the same
 

00:10:03.760 --> 00:10:03.990 align:start position:0%
left and right are once again the same
so

00:10:03.990 --> 00:10:04.000 align:start position:0%
so
 

00:10:04.000 --> 00:10:05.829 align:start position:0%
so
we're<00:10:04.079><c> gonna</c><00:10:04.240><c> get</c><00:10:04.480><c> our</c><00:10:04.640><c> total</c><00:10:04.959><c> to</c><00:10:05.040><c> be</c><00:10:05.279><c> seven</c>

00:10:05.829 --> 00:10:05.839 align:start position:0%
we're gonna get our total to be seven
 

00:10:05.839 --> 00:10:07.910 align:start position:0%
we're gonna get our total to be seven
when<00:10:06.079><c> we</c><00:10:06.240><c> expand</c><00:10:06.640><c> to</c><00:10:06.720><c> the</c><00:10:06.880><c> left</c><00:10:07.200><c> and</c><00:10:07.360><c> right</c>

00:10:07.910 --> 00:10:07.920 align:start position:0%
when we expand to the left and right
 

00:10:07.920 --> 00:10:10.630 align:start position:0%
when we expand to the left and right
we<00:10:08.160><c> see</c><00:10:08.800><c> we</c><00:10:08.959><c> have</c><00:10:09.200><c> an</c><00:10:09.440><c> a</c><00:10:09.839><c> and</c><00:10:10.000><c> we</c><00:10:10.079><c> have</c><00:10:10.240><c> a</c><00:10:10.320><c> b</c>

00:10:10.630 --> 00:10:10.640 align:start position:0%
we see we have an a and we have a b
 

00:10:10.640 --> 00:10:12.389 align:start position:0%
we see we have an a and we have a b
these<00:10:10.800><c> characters</c><00:10:11.279><c> are</c><00:10:11.440><c> not</c><00:10:11.680><c> the</c><00:10:11.839><c> same</c><00:10:12.079><c> so</c><00:10:12.240><c> we</c>

00:10:12.389 --> 00:10:12.399 align:start position:0%
these characters are not the same so we
 

00:10:12.399 --> 00:10:14.310 align:start position:0%
these characters are not the same so we
can't<00:10:12.640><c> continue</c><00:10:13.120><c> to</c><00:10:13.200><c> expand</c><00:10:13.680><c> and</c><00:10:13.760><c> we</c><00:10:14.000><c> don't</c>

00:10:14.310 --> 00:10:14.320 align:start position:0%
can't continue to expand and we don't
 

00:10:14.320 --> 00:10:16.310 align:start position:0%
can't continue to expand and we don't
increment<00:10:14.800><c> our</c><00:10:14.880><c> result</c><00:10:15.600><c> so</c><00:10:15.760><c> now</c><00:10:15.920><c> we</c><00:10:16.079><c> have</c>

00:10:16.310 --> 00:10:16.320 align:start position:0%
increment our result so now we have
 

00:10:16.320 --> 00:10:18.710 align:start position:0%
increment our result so now we have
seven<00:10:16.640><c> palindromes</c><00:10:17.360><c> this</c><00:10:17.519><c> is</c><00:10:17.600><c> the</c><00:10:17.839><c> last</c><00:10:18.240><c> even</c>

00:10:18.710 --> 00:10:18.720 align:start position:0%
seven palindromes this is the last even
 

00:10:18.720 --> 00:10:20.310 align:start position:0%
seven palindromes this is the last even
length<00:10:19.120><c> sub</c><00:10:19.360><c> string</c><00:10:19.760><c> that</c><00:10:19.920><c> we're</c><00:10:20.079><c> going</c><00:10:20.160><c> to</c>

00:10:20.310 --> 00:10:20.320 align:start position:0%
length sub string that we're going to
 

00:10:20.320 --> 00:10:21.750 align:start position:0%
length sub string that we're going to
start<00:10:20.640><c> at</c><00:10:21.120><c> and</c>

00:10:21.750 --> 00:10:21.760 align:start position:0%
start at and
 

00:10:21.760 --> 00:10:22.949 align:start position:0%
start at and
the<00:10:21.920><c> left</c><00:10:22.160><c> and</c><00:10:22.320><c> right</c><00:10:22.480><c> characters</c><00:10:22.880><c> are</c>

00:10:22.949 --> 00:10:22.959 align:start position:0%
the left and right characters are
 

00:10:22.959 --> 00:10:24.550 align:start position:0%
the left and right characters are
clearly<00:10:23.360><c> not</c><00:10:23.519><c> the</c><00:10:23.680><c> same</c><00:10:23.920><c> so</c><00:10:24.160><c> we</c><00:10:24.320><c> don't</c>

00:10:24.550 --> 00:10:24.560 align:start position:0%
clearly not the same so we don't
 

00:10:24.560 --> 00:10:26.389 align:start position:0%
clearly not the same so we don't
continue<00:10:25.040><c> to</c><00:10:25.120><c> expand</c><00:10:25.680><c> and</c><00:10:25.920><c> we</c><00:10:26.079><c> don't</c>

00:10:26.389 --> 00:10:26.399 align:start position:0%
continue to expand and we don't
 

00:10:26.399 --> 00:10:27.829 align:start position:0%
continue to expand and we don't
increment<00:10:26.880><c> our</c><00:10:26.959><c> result</c><00:10:27.360><c> so</c>

00:10:27.829 --> 00:10:27.839 align:start position:0%
increment our result so
 

00:10:27.839 --> 00:10:29.829 align:start position:0%
increment our result so
we're<00:10:28.079><c> done</c><00:10:28.320><c> with</c><00:10:28.480><c> everything</c><00:10:28.880><c> here</c><00:10:29.360><c> we</c><00:10:29.519><c> get</c><00:10:29.680><c> a</c>

00:10:29.829 --> 00:10:29.839 align:start position:0%
we're done with everything here we get a
 

00:10:29.839 --> 00:10:31.110 align:start position:0%
we're done with everything here we get a
result<00:10:30.320><c> of</c><00:10:30.560><c> seven</c>

00:10:31.110 --> 00:10:31.120 align:start position:0%
result of seven
 

00:10:31.120 --> 00:10:33.030 align:start position:0%
result of seven
and<00:10:31.360><c> the</c><00:10:31.519><c> overall</c><00:10:31.920><c> time</c><00:10:32.160><c> complexity</c><00:10:32.720><c> of</c><00:10:32.800><c> doing</c>

00:10:33.030 --> 00:10:33.040 align:start position:0%
and the overall time complexity of doing
 

00:10:33.040 --> 00:10:34.389 align:start position:0%
and the overall time complexity of doing
it<00:10:33.120><c> like</c><00:10:33.360><c> this</c>

00:10:34.389 --> 00:10:34.399 align:start position:0%
it like this
 

00:10:34.399 --> 00:10:36.710 align:start position:0%
it like this
it's<00:10:34.560><c> going</c><00:10:34.640><c> to</c><00:10:34.720><c> be</c><00:10:34.880><c> big</c><00:10:35.120><c> o</c><00:10:35.360><c> of</c><00:10:35.600><c> n</c><00:10:35.839><c> because</c><00:10:36.480><c> for</c>

00:10:36.710 --> 00:10:36.720 align:start position:0%
it's going to be big o of n because for
 

00:10:36.720 --> 00:10:38.230 align:start position:0%
it's going to be big o of n because for
let's<00:10:36.880><c> say</c><00:10:37.040><c> the</c><00:10:37.279><c> odd</c><00:10:37.680><c> lengths</c>

00:10:38.230 --> 00:10:38.240 align:start position:0%
let's say the odd lengths
 

00:10:38.240 --> 00:10:40.389 align:start position:0%
let's say the odd lengths
uh<00:10:38.880><c> palindromes</c><00:10:39.519><c> we're</c><00:10:39.760><c> starting</c><00:10:40.079><c> at</c><00:10:40.160><c> every</c>

00:10:40.389 --> 00:10:40.399 align:start position:0%
uh palindromes we're starting at every
 

00:10:40.399 --> 00:10:41.269 align:start position:0%
uh palindromes we're starting at every
single<00:10:40.640><c> position</c>

00:10:41.269 --> 00:10:41.279 align:start position:0%
single position
 

00:10:41.279 --> 00:10:43.509 align:start position:0%
single position
and<00:10:41.600><c> potentially</c><00:10:42.160><c> expanding</c><00:10:42.800><c> outwards</c><00:10:43.360><c> all</c>

00:10:43.509 --> 00:10:43.519 align:start position:0%
and potentially expanding outwards all
 

00:10:43.519 --> 00:10:45.350 align:start position:0%
and potentially expanding outwards all
the<00:10:43.680><c> way</c><00:10:43.839><c> to</c><00:10:44.000><c> the</c><00:10:44.240><c> end</c><00:10:44.560><c> of</c><00:10:44.720><c> the</c><00:10:44.880><c> string</c><00:10:45.200><c> so</c>

00:10:45.350 --> 00:10:45.360 align:start position:0%
the way to the end of the string so
 

00:10:45.360 --> 00:10:46.310 align:start position:0%
the way to the end of the string so
that's<00:10:45.600><c> going</c><00:10:45.680><c> to</c><00:10:45.760><c> be</c>

00:10:46.310 --> 00:10:46.320 align:start position:0%
that's going to be
 

00:10:46.320 --> 00:10:49.350 align:start position:0%
that's going to be
an<00:10:46.640><c> end</c><00:10:46.880><c> time</c><00:10:47.200><c> operation</c><00:10:48.240><c> so</c><00:10:48.959><c> since</c><00:10:49.200><c> we're</c>

00:10:49.350 --> 00:10:49.360 align:start position:0%
an end time operation so since we're
 

00:10:49.360 --> 00:10:50.710 align:start position:0%
an end time operation so since we're
doing<00:10:49.600><c> it</c><00:10:49.680><c> for</c><00:10:49.839><c> every</c><00:10:50.000><c> single</c><00:10:50.240><c> character</c><00:10:50.640><c> in</c>

00:10:50.710 --> 00:10:50.720 align:start position:0%
doing it for every single character in
 

00:10:50.720 --> 00:10:51.990 align:start position:0%
doing it for every single character in
the<00:10:50.880><c> array</c><00:10:51.120><c> it's</c><00:10:51.200><c> going</c><00:10:51.279><c> to</c><00:10:51.360><c> be</c><00:10:51.519><c> big</c><00:10:51.760><c> o</c>

00:10:51.990 --> 00:10:52.000 align:start position:0%
the array it's going to be big o
 

00:10:52.000 --> 00:10:54.310 align:start position:0%
the array it's going to be big o
n<00:10:52.240><c> times</c><00:10:52.640><c> n</c><00:10:52.959><c> right</c><00:10:53.519><c> so</c><00:10:53.680><c> that's</c><00:10:54.079><c> that's</c>

00:10:54.310 --> 00:10:54.320 align:start position:0%
n times n right so that's that's
 

00:10:54.320 --> 00:10:56.230 align:start position:0%
n times n right so that's that's
basically<00:10:54.720><c> how</c><00:10:54.880><c> we're</c><00:10:55.040><c> doing</c><00:10:55.279><c> the</c><00:10:55.440><c> odd</c><00:10:55.839><c> length</c>

00:10:56.230 --> 00:10:56.240 align:start position:0%
basically how we're doing the odd length
 

00:10:56.240 --> 00:10:57.430 align:start position:0%
basically how we're doing the odd length
palindromes<00:10:56.959><c> and</c><00:10:57.040><c> the</c>

00:10:57.430 --> 00:10:57.440 align:start position:0%
palindromes and the
 

00:10:57.440 --> 00:10:58.949 align:start position:0%
palindromes and the
the<00:10:57.600><c> same</c><00:10:57.839><c> time</c><00:10:58.079><c> complexity</c><00:10:58.560><c> is</c><00:10:58.640><c> going</c><00:10:58.720><c> to</c><00:10:58.800><c> be</c>

00:10:58.949 --> 00:10:58.959 align:start position:0%
the same time complexity is going to be
 

00:10:58.959 --> 00:11:00.710 align:start position:0%
the same time complexity is going to be
true<00:10:59.519><c> for</c><00:10:59.760><c> even</c><00:11:00.079><c> length</c><00:11:00.399><c> right</c><00:11:00.560><c> we're</c>

00:11:00.710 --> 00:11:00.720 align:start position:0%
true for even length right we're
 

00:11:00.720 --> 00:11:02.710 align:start position:0%
true for even length right we're
basically<00:11:01.200><c> going</c><00:11:01.440><c> through</c><00:11:01.760><c> every</c><00:11:02.160><c> pair</c>

00:11:02.710 --> 00:11:02.720 align:start position:0%
basically going through every pair
 

00:11:02.720 --> 00:11:05.829 align:start position:0%
basically going through every pair
of<00:11:02.880><c> characters</c><00:11:03.839><c> which</c><00:11:04.320><c> there</c><00:11:04.640><c> are</c><00:11:05.279><c> you</c><00:11:05.360><c> know</c>

00:11:05.829 --> 00:11:05.839 align:start position:0%
of characters which there are you know
 

00:11:05.839 --> 00:11:07.910 align:start position:0%
of characters which there are you know
big<00:11:06.079><c> o</c><00:11:06.160><c> of</c><00:11:06.399><c> n</c><00:11:06.640><c> of</c><00:11:06.800><c> them</c><00:11:07.040><c> and</c><00:11:07.120><c> then</c><00:11:07.360><c> we're</c><00:11:07.680><c> still</c>

00:11:07.910 --> 00:11:07.920 align:start position:0%
big o of n of them and then we're still
 

00:11:07.920 --> 00:11:09.110 align:start position:0%
big o of n of them and then we're still
expanding<00:11:08.399><c> outwards</c>

00:11:09.110 --> 00:11:09.120 align:start position:0%
expanding outwards
 

00:11:09.120 --> 00:11:10.630 align:start position:0%
expanding outwards
so<00:11:09.279><c> that's</c><00:11:09.519><c> also</c><00:11:09.760><c> going</c><00:11:09.839><c> to</c><00:11:09.920><c> be</c><00:11:10.079><c> big</c><00:11:10.240><c> o</c><00:11:10.320><c> of</c><00:11:10.480><c> n</c>

00:11:10.630 --> 00:11:10.640 align:start position:0%
so that's also going to be big o of n
 

00:11:10.640 --> 00:11:13.269 align:start position:0%
so that's also going to be big o of n
times<00:11:11.040><c> n</c><00:11:11.200><c> now</c><00:11:11.760><c> if</c><00:11:11.839><c> you</c><00:11:12.079><c> add</c><00:11:12.399><c> these</c><00:11:12.640><c> together</c>

00:11:13.269 --> 00:11:13.279 align:start position:0%
times n now if you add these together
 

00:11:13.279 --> 00:11:15.030 align:start position:0%
times n now if you add these together
we're<00:11:13.519><c> still</c><00:11:13.760><c> going</c><00:11:13.920><c> to</c><00:11:14.079><c> get</c><00:11:14.320><c> a</c><00:11:14.480><c> overall</c><00:11:14.880><c> time</c>

00:11:15.030 --> 00:11:15.040 align:start position:0%
we're still going to get a overall time
 

00:11:15.040 --> 00:11:16.550 align:start position:0%
we're still going to get a overall time
complexity<00:11:15.600><c> of</c><00:11:15.680><c> big</c><00:11:16.000><c> o</c>

00:11:16.550 --> 00:11:16.560 align:start position:0%
complexity of big o
 

00:11:16.560 --> 00:11:19.110 align:start position:0%
complexity of big o
n<00:11:17.200><c> squared</c><00:11:17.839><c> so</c><00:11:18.079><c> that's</c><00:11:18.320><c> the</c><00:11:18.480><c> overall</c><00:11:18.880><c> time</c>

00:11:19.110 --> 00:11:19.120 align:start position:0%
n squared so that's the overall time
 

00:11:19.120 --> 00:11:19.829 align:start position:0%
n squared so that's the overall time
complexity

00:11:19.829 --> 00:11:19.839 align:start position:0%
complexity
 

00:11:19.839 --> 00:11:22.150 align:start position:0%
complexity
in<00:11:19.920><c> this</c><00:11:20.160><c> solution</c><00:11:21.040><c> and</c><00:11:21.200><c> coding</c><00:11:21.600><c> it</c><00:11:21.760><c> up</c><00:11:22.000><c> is</c>

00:11:22.150 --> 00:11:22.160 align:start position:0%
in this solution and coding it up is
 

00:11:22.160 --> 00:11:24.630 align:start position:0%
in this solution and coding it up is
pretty<00:11:22.560><c> easy</c><00:11:22.959><c> so</c><00:11:23.120><c> let's</c><00:11:23.279><c> get</c><00:11:23.519><c> into</c><00:11:23.760><c> that</c>

00:11:24.630 --> 00:11:24.640 align:start position:0%
pretty easy so let's get into that
 

00:11:24.640 --> 00:11:27.350 align:start position:0%
pretty easy so let's get into that
so<00:11:24.800><c> let's</c><00:11:25.040><c> keep</c><00:11:25.279><c> track</c><00:11:25.600><c> of</c><00:11:25.839><c> a</c><00:11:26.079><c> single</c><00:11:26.959><c> result</c>

00:11:27.350 --> 00:11:27.360 align:start position:0%
so let's keep track of a single result
 

00:11:27.360 --> 00:11:28.870 align:start position:0%
so let's keep track of a single result
variable<00:11:27.839><c> and</c><00:11:28.000><c> it's</c><00:11:28.240><c> initially</c><00:11:28.560><c> going</c><00:11:28.640><c> to</c><00:11:28.720><c> be</c>

00:11:28.870 --> 00:11:28.880 align:start position:0%
variable and it's initially going to be
 

00:11:28.880 --> 00:11:30.069 align:start position:0%
variable and it's initially going to be
zero<00:11:29.120><c> it's</c><00:11:29.200><c> going</c><00:11:29.279><c> to</c><00:11:29.360><c> be</c><00:11:29.519><c> the</c><00:11:29.680><c> count</c>

00:11:30.069 --> 00:11:30.079 align:start position:0%
zero it's going to be the count
 

00:11:30.079 --> 00:11:32.310 align:start position:0%
zero it's going to be the count
of<00:11:30.240><c> the</c><00:11:30.399><c> palindromic</c><00:11:31.040><c> substrings</c><00:11:31.760><c> so</c><00:11:32.000><c> we</c><00:11:32.160><c> want</c>

00:11:32.310 --> 00:11:32.320 align:start position:0%
of the palindromic substrings so we want
 

00:11:32.320 --> 00:11:34.230 align:start position:0%
of the palindromic substrings so we want
to<00:11:32.399><c> go</c><00:11:32.640><c> through</c><00:11:32.959><c> every</c><00:11:33.200><c> single</c><00:11:33.600><c> position</c>

00:11:34.230 --> 00:11:34.240 align:start position:0%
to go through every single position
 

00:11:34.240 --> 00:11:38.069 align:start position:0%
to go through every single position
in<00:11:34.800><c> the</c><00:11:35.920><c> string</c><00:11:36.399><c> s</c><00:11:36.720><c> and</c><00:11:36.880><c> expand</c><00:11:37.519><c> from</c><00:11:37.760><c> it</c><00:11:37.839><c> right</c>

00:11:38.069 --> 00:11:38.079 align:start position:0%
in the string s and expand from it right
 

00:11:38.079 --> 00:11:39.110 align:start position:0%
in the string s and expand from it right
that's<00:11:38.320><c> going</c><00:11:38.399><c> to</c><00:11:38.480><c> give</c><00:11:38.640><c> us</c><00:11:38.800><c> the</c>

00:11:39.110 --> 00:11:39.120 align:start position:0%
that's going to give us the
 

00:11:39.120 --> 00:11:41.590 align:start position:0%
that's going to give us the
odd<00:11:39.680><c> length</c><00:11:40.079><c> palindromes</c><00:11:40.959><c> so</c><00:11:41.200><c> we're</c><00:11:41.360><c> going</c><00:11:41.519><c> to</c>

00:11:41.590 --> 00:11:41.600 align:start position:0%
odd length palindromes so we're going to
 

00:11:41.600 --> 00:11:43.110 align:start position:0%
odd length palindromes so we're going to
initialize<00:11:42.160><c> our</c><00:11:42.399><c> left</c>

00:11:43.110 --> 00:11:43.120 align:start position:0%
initialize our left
 

00:11:43.120 --> 00:11:46.310 align:start position:0%
initialize our left
and<00:11:43.279><c> right</c><00:11:43.680><c> pointers</c><00:11:44.399><c> both</c><00:11:44.720><c> to</c><00:11:44.800><c> be</c><00:11:45.040><c> set</c><00:11:45.279><c> to</c><00:11:45.519><c> i</c>

00:11:46.310 --> 00:11:46.320 align:start position:0%
and right pointers both to be set to i
 

00:11:46.320 --> 00:11:48.550 align:start position:0%
and right pointers both to be set to i
because<00:11:46.560><c> these</c><00:11:46.800><c> are</c><00:11:46.880><c> odd</c><00:11:47.200><c> length</c><00:11:47.440><c> palindromes</c>

00:11:48.550 --> 00:11:48.560 align:start position:0%
because these are odd length palindromes
 

00:11:48.560 --> 00:11:50.310 align:start position:0%
because these are odd length palindromes
and<00:11:49.040><c> while</c>

00:11:50.310 --> 00:11:50.320 align:start position:0%
and while
 

00:11:50.320 --> 00:11:52.870 align:start position:0%
and while
left<00:11:50.720><c> is</c><00:11:50.959><c> inbound</c><00:11:51.519><c> so</c><00:11:51.680><c> while</c><00:11:52.000><c> left</c><00:11:52.399><c> is</c><00:11:52.639><c> greater</c>

00:11:52.870 --> 00:11:52.880 align:start position:0%
left is inbound so while left is greater
 

00:11:52.880 --> 00:11:53.990 align:start position:0%
left is inbound so while left is greater
than<00:11:53.040><c> or</c><00:11:53.200><c> equal</c><00:11:53.360><c> to</c><00:11:53.519><c> zero</c>

00:11:53.990 --> 00:11:54.000 align:start position:0%
than or equal to zero
 

00:11:54.000 --> 00:11:56.150 align:start position:0%
than or equal to zero
and<00:11:54.320><c> right</c><00:11:54.639><c> is</c><00:11:54.800><c> inbound</c><00:11:55.200><c> so</c><00:11:55.440><c> right</c><00:11:55.680><c> is</c><00:11:55.920><c> less</c>

00:11:56.150 --> 00:11:56.160 align:start position:0%
and right is inbound so right is less
 

00:11:56.160 --> 00:11:57.750 align:start position:0%
and right is inbound so right is less
than<00:11:56.320><c> the</c><00:11:56.560><c> length</c><00:11:56.800><c> of</c><00:11:56.880><c> the</c><00:11:57.040><c> string</c>

00:11:57.750 --> 00:11:57.760 align:start position:0%
than the length of the string
 

00:11:57.760 --> 00:12:00.949 align:start position:0%
than the length of the string
and<00:11:58.480><c> this</c><00:11:58.880><c> the</c><00:11:59.040><c> position</c><00:11:59.760><c> at</c><00:12:00.160><c> left</c><00:12:00.639><c> in</c><00:12:00.800><c> our</c>

00:12:00.949 --> 00:12:00.959 align:start position:0%
and this the position at left in our
 

00:12:00.959 --> 00:12:02.710 align:start position:0%
and this the position at left in our
string<00:12:01.360><c> is</c><00:12:01.519><c> equal</c><00:12:01.839><c> to</c><00:12:02.000><c> the</c><00:12:02.160><c> position</c>

00:12:02.710 --> 00:12:02.720 align:start position:0%
string is equal to the position
 

00:12:02.720 --> 00:12:04.870 align:start position:0%
string is equal to the position
at<00:12:03.040><c> right</c><00:12:03.360><c> in</c><00:12:03.519><c> our</c><00:12:03.680><c> string</c><00:12:04.240><c> that</c><00:12:04.399><c> means</c><00:12:04.720><c> we</c>

00:12:04.870 --> 00:12:04.880 align:start position:0%
at right in our string that means we
 

00:12:04.880 --> 00:12:06.550 align:start position:0%
at right in our string that means we
found<00:12:05.200><c> a</c><00:12:05.360><c> palindrome</c><00:12:06.000><c> so</c><00:12:06.160><c> let's</c>

00:12:06.550 --> 00:12:06.560 align:start position:0%
found a palindrome so let's
 

00:12:06.560 --> 00:12:09.030 align:start position:0%
found a palindrome so let's
increment<00:12:07.040><c> our</c><00:12:07.200><c> result</c><00:12:07.600><c> by</c><00:12:07.839><c> one</c><00:12:08.480><c> let's</c><00:12:08.800><c> shift</c>

00:12:09.030 --> 00:12:09.040 align:start position:0%
increment our result by one let's shift
 

00:12:09.040 --> 00:12:11.030 align:start position:0%
increment our result by one let's shift
our<00:12:09.440><c> our</c><00:12:09.600><c> left</c><00:12:09.920><c> pointer</c><00:12:10.240><c> to</c><00:12:10.399><c> the</c><00:12:10.560><c> left</c>

00:12:11.030 --> 00:12:11.040 align:start position:0%
our our left pointer to the left
 

00:12:11.040 --> 00:12:12.790 align:start position:0%
our our left pointer to the left
and<00:12:11.200><c> let's</c><00:12:11.440><c> shift</c><00:12:11.680><c> our</c><00:12:11.839><c> right</c><00:12:12.160><c> pointer</c><00:12:12.480><c> to</c><00:12:12.639><c> the</c>

00:12:12.790 --> 00:12:12.800 align:start position:0%
and let's shift our right pointer to the
 

00:12:12.800 --> 00:12:14.710 align:start position:0%
and let's shift our right pointer to the
right<00:12:13.440><c> and</c><00:12:13.600><c> we're</c><00:12:13.760><c> going</c><00:12:13.839><c> to</c><00:12:14.000><c> continue</c><00:12:14.399><c> to</c><00:12:14.560><c> do</c>

00:12:14.710 --> 00:12:14.720 align:start position:0%
right and we're going to continue to do
 

00:12:14.720 --> 00:12:15.030 align:start position:0%
right and we're going to continue to do
that

00:12:15.030 --> 00:12:15.040 align:start position:0%
that
 

00:12:15.040 --> 00:12:17.750 align:start position:0%
that
while<00:12:15.440><c> the</c><00:12:16.160><c> pointers</c><00:12:16.639><c> are</c><00:12:16.800><c> in</c><00:12:16.959><c> bounds</c><00:12:17.440><c> and</c><00:12:17.600><c> the</c>

00:12:17.750 --> 00:12:17.760 align:start position:0%
while the pointers are in bounds and the
 

00:12:17.760 --> 00:12:19.269 align:start position:0%
while the pointers are in bounds and the
characters<00:12:18.320><c> are</c><00:12:18.480><c> the</c><00:12:18.639><c> same</c><00:12:18.880><c> then</c><00:12:19.040><c> we're</c><00:12:19.200><c> going</c>

00:12:19.269 --> 00:12:19.279 align:start position:0%
characters are the same then we're going
 

00:12:19.279 --> 00:12:20.790 align:start position:0%
characters are the same then we're going
to<00:12:19.440><c> continue</c><00:12:19.760><c> to</c><00:12:19.920><c> increment</c><00:12:20.320><c> the</c><00:12:20.480><c> number</c><00:12:20.720><c> of</c>

00:12:20.790 --> 00:12:20.800 align:start position:0%
to continue to increment the number of
 

00:12:20.800 --> 00:12:22.629 align:start position:0%
to continue to increment the number of
palindromes<00:12:21.519><c> so</c><00:12:21.680><c> that's</c><00:12:21.920><c> going</c><00:12:22.079><c> to</c><00:12:22.160><c> give</c><00:12:22.320><c> us</c>

00:12:22.629 --> 00:12:22.639 align:start position:0%
palindromes so that's going to give us
 

00:12:22.639 --> 00:12:25.350 align:start position:0%
palindromes so that's going to give us
the<00:12:22.800><c> palindromes</c><00:12:23.440><c> of</c><00:12:23.600><c> odd</c><00:12:24.000><c> length</c><00:12:24.480><c> we</c><00:12:24.639><c> can</c><00:12:25.200><c> we</c>

00:12:25.350 --> 00:12:25.360 align:start position:0%
the palindromes of odd length we can we
 

00:12:25.360 --> 00:12:27.110 align:start position:0%
the palindromes of odd length we can we
don't<00:12:25.440><c> have</c><00:12:25.600><c> to</c><00:12:25.680><c> do</c><00:12:25.839><c> a</c><00:12:26.000><c> separate</c><00:12:26.399><c> for</c><00:12:26.720><c> loop</c><00:12:26.959><c> for</c>

00:12:27.110 --> 00:12:27.120 align:start position:0%
don't have to do a separate for loop for
 

00:12:27.120 --> 00:12:28.710 align:start position:0%
don't have to do a separate for loop for
the<00:12:27.279><c> even</c><00:12:27.519><c> length</c><00:12:27.760><c> palindromes</c><00:12:28.399><c> let's</c><00:12:28.560><c> just</c>

00:12:28.710 --> 00:12:28.720 align:start position:0%
the even length palindromes let's just
 

00:12:28.720 --> 00:12:30.310 align:start position:0%
the even length palindromes let's just
do<00:12:28.880><c> the</c><00:12:29.040><c> exact</c><00:12:29.360><c> same</c><00:12:29.519><c> thing</c><00:12:29.760><c> we've</c><00:12:29.920><c> done</c><00:12:30.160><c> up</c>

00:12:30.310 --> 00:12:30.320 align:start position:0%
do the exact same thing we've done up
 

00:12:30.320 --> 00:12:31.269 align:start position:0%
do the exact same thing we've done up
above<00:12:30.720><c> here</c>

00:12:31.269 --> 00:12:31.279 align:start position:0%
above here
 

00:12:31.279 --> 00:12:33.030 align:start position:0%
above here
except<00:12:31.839><c> in</c><00:12:32.000><c> this</c><00:12:32.240><c> case</c><00:12:32.639><c> we're</c><00:12:32.800><c> going</c><00:12:32.880><c> to</c>

00:12:33.030 --> 00:12:33.040 align:start position:0%
except in this case we're going to
 

00:12:33.040 --> 00:12:34.710 align:start position:0%
except in this case we're going to
initialize<00:12:33.680><c> left</c><00:12:34.240><c> to</c><00:12:34.399><c> be</c>

00:12:34.710 --> 00:12:34.720 align:start position:0%
initialize left to be
 

00:12:34.720 --> 00:12:37.269 align:start position:0%
initialize left to be
i<00:12:36.000><c> which</c><00:12:36.240><c> is</c><00:12:36.320><c> what</c><00:12:36.480><c> we</c><00:12:36.560><c> did</c><00:12:36.720><c> before</c><00:12:36.959><c> but</c><00:12:37.120><c> we're</c>

00:12:37.269 --> 00:12:37.279 align:start position:0%
i which is what we did before but we're
 

00:12:37.279 --> 00:12:38.150 align:start position:0%
i which is what we did before but we're
going<00:12:37.360><c> to</c><00:12:37.440><c> initialize</c>

00:12:38.150 --> 00:12:38.160 align:start position:0%
going to initialize
 

00:12:38.160 --> 00:12:41.430 align:start position:0%
going to initialize
right<00:12:38.639><c> to</c><00:12:38.800><c> be</c><00:12:39.120><c> i</c><00:12:39.839><c> plus</c><00:12:40.720><c> 1</c>

00:12:41.430 --> 00:12:41.440 align:start position:0%
right to be i plus 1
 

00:12:41.440 --> 00:12:43.110 align:start position:0%
right to be i plus 1
which<00:12:41.760><c> is</c><00:12:41.839><c> going</c><00:12:41.920><c> to</c><00:12:42.000><c> give</c><00:12:42.240><c> us</c><00:12:42.480><c> the</c><00:12:42.720><c> even</c>

00:12:43.110 --> 00:12:43.120 align:start position:0%
which is going to give us the even
 

00:12:43.120 --> 00:12:44.550 align:start position:0%
which is going to give us the even
length<00:12:43.519><c> palindromes</c>

00:12:44.550 --> 00:12:44.560 align:start position:0%
length palindromes
 

00:12:44.560 --> 00:12:46.069 align:start position:0%
length palindromes
and<00:12:44.720><c> once</c><00:12:44.959><c> we've</c><00:12:45.120><c> done</c><00:12:45.360><c> that</c><00:12:45.680><c> we</c><00:12:45.920><c> can</c>

00:12:46.069 --> 00:12:46.079 align:start position:0%
and once we've done that we can
 

00:12:46.079 --> 00:12:48.069 align:start position:0%
and once we've done that we can
literally<00:12:46.399><c> just</c><00:12:46.639><c> copy</c><00:12:47.040><c> and</c><00:12:47.120><c> paste</c><00:12:47.519><c> this</c><00:12:47.760><c> for</c>

00:12:48.069 --> 00:12:48.079 align:start position:0%
literally just copy and paste this for
 

00:12:48.079 --> 00:12:49.110 align:start position:0%
literally just copy and paste this for
loop<00:12:48.399><c> up</c><00:12:48.560><c> above</c>

00:12:49.110 --> 00:12:49.120 align:start position:0%
loop up above
 

00:12:49.120 --> 00:12:51.110 align:start position:0%
loop up above
down<00:12:49.360><c> here</c><00:12:49.600><c> and</c><00:12:49.680><c> then</c><00:12:49.920><c> that'll</c><00:12:50.320><c> calculate</c><00:12:50.880><c> the</c>

00:12:51.110 --> 00:12:51.120 align:start position:0%
down here and then that'll calculate the
 

00:12:51.120 --> 00:12:52.629 align:start position:0%
down here and then that'll calculate the
even<00:12:51.440><c> length</c><00:12:51.760><c> palindromes</c>

00:12:52.629 --> 00:12:52.639 align:start position:0%
even length palindromes
 

00:12:52.639 --> 00:12:54.629 align:start position:0%
even length palindromes
and<00:12:52.800><c> then</c><00:12:53.200><c> once</c><00:12:53.519><c> that</c><00:12:53.760><c> is</c><00:12:53.839><c> done</c><00:12:54.240><c> we</c><00:12:54.399><c> can</c><00:12:54.480><c> go</c>

00:12:54.629 --> 00:12:54.639 align:start position:0%
and then once that is done we can go
 

00:12:54.639 --> 00:12:56.710 align:start position:0%
and then once that is done we can go
ahead<00:12:54.880><c> and</c><00:12:54.959><c> return</c><00:12:55.600><c> our</c><00:12:55.839><c> result</c>

00:12:56.710 --> 00:12:56.720 align:start position:0%
ahead and return our result
 

00:12:56.720 --> 00:12:58.550 align:start position:0%
ahead and return our result
now<00:12:56.959><c> as</c><00:12:57.120><c> you</c><00:12:57.200><c> can</c><00:12:57.279><c> see</c><00:12:57.600><c> this</c><00:12:57.760><c> solution</c><00:12:58.160><c> works</c>

00:12:58.550 --> 00:12:58.560 align:start position:0%
now as you can see this solution works
 

00:12:58.560 --> 00:12:59.829 align:start position:0%
now as you can see this solution works
that's<00:12:58.880><c> the</c><00:12:58.959><c> entire</c><00:12:59.360><c> thing</c>

00:12:59.829 --> 00:12:59.839 align:start position:0%
that's the entire thing
 

00:12:59.839 --> 00:13:01.910 align:start position:0%
that's the entire thing
it's<00:13:00.079><c> very</c><00:13:00.399><c> efficient</c><00:13:01.040><c> but</c><00:13:01.440><c> maybe</c><00:13:01.760><c> your</c>

00:13:01.910 --> 00:13:01.920 align:start position:0%
it's very efficient but maybe your
 

00:13:01.920 --> 00:13:03.430 align:start position:0%
it's very efficient but maybe your
interviewer<00:13:02.480><c> will</c><00:13:02.639><c> want</c><00:13:02.800><c> you</c><00:13:02.959><c> to</c>

00:13:03.430 --> 00:13:03.440 align:start position:0%
interviewer will want you to
 

00:13:03.440 --> 00:13:04.949 align:start position:0%
interviewer will want you to
you<00:13:03.519><c> know</c><00:13:03.680><c> this</c><00:13:03.839><c> is</c><00:13:04.000><c> copy</c><00:13:04.320><c> and</c><00:13:04.399><c> paste</c><00:13:04.800><c> and</c>

00:13:04.949 --> 00:13:04.959 align:start position:0%
you know this is copy and paste and
 

00:13:04.959 --> 00:13:06.470 align:start position:0%
you know this is copy and paste and
sometimes<00:13:05.360><c> they</c><00:13:05.440><c> don't</c><00:13:05.600><c> like</c><00:13:05.839><c> copy</c><00:13:06.160><c> and</c><00:13:06.240><c> paste</c>

00:13:06.470 --> 00:13:06.480 align:start position:0%
sometimes they don't like copy and paste
 

00:13:06.480 --> 00:13:06.949 align:start position:0%
sometimes they don't like copy and paste
we<00:13:06.639><c> can</c>

00:13:06.949 --> 00:13:06.959 align:start position:0%
we can
 

00:13:06.959 --> 00:13:08.790 align:start position:0%
we can
basically<00:13:07.440><c> take</c><00:13:07.680><c> these</c><00:13:07.920><c> two</c><00:13:08.160><c> and</c><00:13:08.320><c> condense</c>

00:13:08.790 --> 00:13:08.800 align:start position:0%
basically take these two and condense
 

00:13:08.800 --> 00:13:10.470 align:start position:0%
basically take these two and condense
them<00:13:08.959><c> down</c><00:13:09.200><c> into</c><00:13:09.519><c> a</c><00:13:09.600><c> single</c><00:13:09.920><c> function</c>

00:13:10.470 --> 00:13:10.480 align:start position:0%
them down into a single function
 

00:13:10.480 --> 00:13:12.310 align:start position:0%
them down into a single function
so<00:13:10.639><c> i'm</c><00:13:10.720><c> just</c><00:13:10.880><c> going</c><00:13:10.959><c> to</c><00:13:11.040><c> do</c><00:13:11.279><c> that</c><00:13:11.839><c> even</c><00:13:12.079><c> though</c>

00:13:12.310 --> 00:13:12.320 align:start position:0%
so i'm just going to do that even though
 

00:13:12.320 --> 00:13:13.590 align:start position:0%
so i'm just going to do that even though
i'm<00:13:12.399><c> sure</c><00:13:12.639><c> you</c><00:13:12.800><c> could</c><00:13:12.959><c> probably</c><00:13:13.279><c> figure</c><00:13:13.519><c> out</c>

00:13:13.590 --> 00:13:13.600 align:start position:0%
i'm sure you could probably figure out
 

00:13:13.600 --> 00:13:15.110 align:start position:0%
i'm sure you could probably figure out
how<00:13:13.760><c> to</c><00:13:13.839><c> do</c><00:13:14.000><c> it</c><00:13:14.160><c> in</c><00:13:14.240><c> this</c><00:13:14.399><c> case</c><00:13:14.639><c> it's</c><00:13:14.800><c> not</c><00:13:14.959><c> too</c>

00:13:15.110 --> 00:13:15.120 align:start position:0%
how to do it in this case it's not too
 

00:13:15.120 --> 00:13:16.470 align:start position:0%
how to do it in this case it's not too
bad<00:13:15.279><c> so</c><00:13:15.440><c> i'm</c><00:13:15.519><c> going</c><00:13:15.600><c> to</c><00:13:15.680><c> make</c><00:13:15.839><c> a</c><00:13:15.920><c> function</c>

00:13:16.470 --> 00:13:16.480 align:start position:0%
bad so i'm going to make a function
 

00:13:16.480 --> 00:13:19.670 align:start position:0%
bad so i'm going to make a function
called<00:13:16.800><c> count</c><00:13:17.120><c> palindromes</c><00:13:18.320><c> and</c><00:13:19.120><c> we'll</c><00:13:19.360><c> pass</c>

00:13:19.670 --> 00:13:19.680 align:start position:0%
called count palindromes and we'll pass
 

00:13:19.680 --> 00:13:19.990 align:start position:0%
called count palindromes and we'll pass
into

00:13:19.990 --> 00:13:20.000 align:start position:0%
into
 

00:13:20.000 --> 00:13:23.590 align:start position:0%
into
this<00:13:20.480><c> the</c><00:13:20.720><c> string</c><00:13:21.279><c> s</c><00:13:22.480><c> and</c><00:13:22.880><c> the</c><00:13:23.120><c> left</c>

00:13:23.590 --> 00:13:23.600 align:start position:0%
this the string s and the left
 

00:13:23.600 --> 00:13:25.590 align:start position:0%
this the string s and the left
and<00:13:23.839><c> right</c><00:13:24.160><c> pointers</c><00:13:24.800><c> that</c><00:13:25.279><c> we</c><00:13:25.519><c> are</c>

00:13:25.590 --> 00:13:25.600 align:start position:0%
and right pointers that we are
 

00:13:25.600 --> 00:13:26.870 align:start position:0%
and right pointers that we are
initializing

00:13:26.870 --> 00:13:26.880 align:start position:0%
initializing
 

00:13:26.880 --> 00:13:28.230 align:start position:0%
initializing
and<00:13:27.040><c> so</c><00:13:27.279><c> basically</c><00:13:27.600><c> what</c><00:13:27.760><c> i'm</c><00:13:27.920><c> going</c><00:13:28.000><c> to</c><00:13:28.079><c> do</c>

00:13:28.230 --> 00:13:28.240 align:start position:0%
and so basically what i'm going to do
 

00:13:28.240 --> 00:13:30.230 align:start position:0%
and so basically what i'm going to do
here<00:13:28.480><c> is</c><00:13:28.720><c> take</c><00:13:28.959><c> this</c><00:13:29.360><c> and</c><00:13:29.519><c> just</c><00:13:29.839><c> copy</c><00:13:30.160><c> and</c>

00:13:30.230 --> 00:13:30.240 align:start position:0%
here is take this and just copy and
 

00:13:30.240 --> 00:13:31.509 align:start position:0%
here is take this and just copy and
paste<00:13:30.560><c> it</c><00:13:30.720><c> into</c><00:13:31.040><c> here</c>

00:13:31.509 --> 00:13:31.519 align:start position:0%
paste it into here
 

00:13:31.519 --> 00:13:34.230 align:start position:0%
paste it into here
right<00:13:32.240><c> and</c><00:13:32.480><c> so</c><00:13:32.639><c> you</c><00:13:32.800><c> can</c><00:13:32.959><c> see</c><00:13:33.279><c> that</c><00:13:34.000><c> we're</c>

00:13:34.230 --> 00:13:34.240 align:start position:0%
right and so you can see that we're
 

00:13:34.240 --> 00:13:35.670 align:start position:0%
right and so you can see that we're
giving<00:13:34.480><c> this</c><00:13:34.639><c> function</c><00:13:34.959><c> the</c><00:13:35.120><c> information</c><00:13:35.600><c> it</c>

00:13:35.670 --> 00:13:35.680 align:start position:0%
giving this function the information it
 

00:13:35.680 --> 00:13:37.190 align:start position:0%
giving this function the information it
needs<00:13:35.920><c> we're</c><00:13:36.079><c> giving</c><00:13:36.320><c> it</c><00:13:36.399><c> the</c><00:13:36.560><c> string</c><00:13:36.880><c> s</c><00:13:37.040><c> we're</c>

00:13:37.190 --> 00:13:37.200 align:start position:0%
needs we're giving it the string s we're
 

00:13:37.200 --> 00:13:38.790 align:start position:0%
needs we're giving it the string s we're
giving<00:13:37.440><c> it</c><00:13:37.600><c> pointers</c><00:13:38.000><c> left</c><00:13:38.240><c> and</c><00:13:38.399><c> right</c>

00:13:38.790 --> 00:13:38.800 align:start position:0%
giving it pointers left and right
 

00:13:38.800 --> 00:13:41.590 align:start position:0%
giving it pointers left and right
let's<00:13:38.959><c> just</c><00:13:39.199><c> give</c><00:13:39.440><c> it</c><00:13:39.600><c> a</c><00:13:40.240><c> variable</c><00:13:41.040><c> here</c><00:13:41.360><c> let's</c>

00:13:41.590 --> 00:13:41.600 align:start position:0%
let's just give it a variable here let's
 

00:13:41.600 --> 00:13:42.629 align:start position:0%
let's just give it a variable here let's
declare<00:13:42.000><c> it</c><00:13:42.160><c> result</c>

00:13:42.629 --> 00:13:42.639 align:start position:0%
declare it result
 

00:13:42.639 --> 00:13:44.150 align:start position:0%
declare it result
is<00:13:42.800><c> initially</c><00:13:43.199><c> going</c><00:13:43.279><c> to</c><00:13:43.360><c> be</c><00:13:43.440><c> 0</c><00:13:43.680><c> and</c><00:13:43.760><c> then</c><00:13:43.920><c> this</c>

00:13:44.150 --> 00:13:44.160 align:start position:0%
is initially going to be 0 and then this
 

00:13:44.160 --> 00:13:45.829 align:start position:0%
is initially going to be 0 and then this
function<00:13:44.480><c> is</c><00:13:44.639><c> just</c><00:13:44.800><c> going</c><00:13:44.880><c> to</c><00:13:44.959><c> return</c><00:13:45.440><c> result</c>

00:13:45.829 --> 00:13:45.839 align:start position:0%
function is just going to return result
 

00:13:45.839 --> 00:13:47.350 align:start position:0%
function is just going to return result
which<00:13:46.000><c> is</c><00:13:46.079><c> the</c><00:13:46.240><c> number</c><00:13:46.480><c> of</c><00:13:46.639><c> palindromes</c><00:13:47.199><c> it</c>

00:13:47.350 --> 00:13:47.360 align:start position:0%
which is the number of palindromes it
 

00:13:47.360 --> 00:13:48.069 align:start position:0%
which is the number of palindromes it
can<00:13:47.600><c> count</c>

00:13:48.069 --> 00:13:48.079 align:start position:0%
can count
 

00:13:48.079 --> 00:13:49.509 align:start position:0%
can count
starting<00:13:48.480><c> at</c><00:13:48.639><c> these</c><00:13:48.880><c> left</c><00:13:49.120><c> and</c><00:13:49.279><c> right</c>

00:13:49.509 --> 00:13:49.519 align:start position:0%
starting at these left and right
 

00:13:49.519 --> 00:13:51.189 align:start position:0%
starting at these left and right
pointers<00:13:50.240><c> so</c><00:13:50.399><c> now</c><00:13:50.560><c> we</c><00:13:50.720><c> can</c>

00:13:51.189 --> 00:13:51.199 align:start position:0%
pointers so now we can
 

00:13:51.199 --> 00:13:53.430 align:start position:0%
pointers so now we can
you<00:13:51.360><c> know</c><00:13:51.600><c> change</c><00:13:52.320><c> this</c><00:13:52.720><c> so</c><00:13:52.959><c> here</c><00:13:53.199><c> we're</c>

00:13:53.430 --> 00:13:53.440 align:start position:0%
you know change this so here we're
 

00:13:53.440 --> 00:13:54.790 align:start position:0%
you know change this so here we're
trying<00:13:53.600><c> to</c><00:13:53.760><c> count</c><00:13:54.000><c> the</c><00:13:54.160><c> odd</c><00:13:54.480><c> length</c>

00:13:54.790 --> 00:13:54.800 align:start position:0%
trying to count the odd length
 

00:13:54.800 --> 00:13:56.069 align:start position:0%
trying to count the odd length
palindrome<00:13:55.440><c> so</c>

00:13:56.069 --> 00:13:56.079 align:start position:0%
palindrome so
 

00:13:56.079 --> 00:13:58.389 align:start position:0%
palindrome so
instead<00:13:56.320><c> of</c><00:13:56.480><c> doing</c><00:13:56.639><c> this</c><00:13:56.880><c> for</c><00:13:57.199><c> loop</c><00:13:57.519><c> we</c><00:13:57.760><c> can</c>

00:13:58.389 --> 00:13:58.399 align:start position:0%
instead of doing this for loop we can
 

00:13:58.399 --> 00:14:00.870 align:start position:0%
instead of doing this for loop we can
just<00:13:58.639><c> say</c><00:13:58.959><c> let's</c><00:13:59.199><c> add</c><00:13:59.519><c> to</c><00:13:59.680><c> the</c><00:13:59.760><c> result</c>

00:14:00.870 --> 00:14:00.880 align:start position:0%
just say let's add to the result
 

00:14:00.880 --> 00:14:03.509 align:start position:0%
just say let's add to the result
the<00:14:02.000><c> whatever</c><00:14:02.320><c> this</c><00:14:02.560><c> function</c><00:14:02.880><c> returns</c><00:14:03.279><c> so</c>

00:14:03.509 --> 00:14:03.519 align:start position:0%
the whatever this function returns so
 

00:14:03.519 --> 00:14:04.790 align:start position:0%
the whatever this function returns so
count<00:14:03.839><c> pally</c>

00:14:04.790 --> 00:14:04.800 align:start position:0%
count pally
 

00:14:04.800 --> 00:14:07.670 align:start position:0%
count pally
passing<00:14:05.279><c> in</c><00:14:05.680><c> the</c><00:14:05.920><c> string</c><00:14:06.320><c> s</c><00:14:06.639><c> passing</c><00:14:07.040><c> in</c><00:14:07.519><c> the</c>

00:14:07.670 --> 00:14:07.680 align:start position:0%
passing in the string s passing in the
 

00:14:07.680 --> 00:14:09.189 align:start position:0%
passing in the string s passing in the
left<00:14:08.000><c> pointer</c>

00:14:09.189 --> 00:14:09.199 align:start position:0%
left pointer
 

00:14:09.199 --> 00:14:10.710 align:start position:0%
left pointer
and<00:14:09.440><c> passing</c><00:14:09.839><c> in</c><00:14:09.920><c> the</c><00:14:10.000><c> right</c><00:14:10.240><c> pointer</c><00:14:10.560><c> which</c>

00:14:10.710 --> 00:14:10.720 align:start position:0%
and passing in the right pointer which
 

00:14:10.720 --> 00:14:12.629 align:start position:0%
and passing in the right pointer which
we<00:14:10.880><c> just</c><00:14:10.959><c> declared</c><00:14:11.519><c> up</c><00:14:11.600><c> above</c><00:14:11.920><c> here</c>

00:14:12.629 --> 00:14:12.639 align:start position:0%
we just declared up above here
 

00:14:12.639 --> 00:14:14.870 align:start position:0%
we just declared up above here
and<00:14:12.880><c> getting</c><00:14:13.199><c> rid</c><00:14:13.360><c> of</c><00:14:13.440><c> this</c><00:14:13.680><c> while</c><00:14:14.000><c> loop</c><00:14:14.720><c> we</c>

00:14:14.870 --> 00:14:14.880 align:start position:0%
and getting rid of this while loop we
 

00:14:14.880 --> 00:14:15.990 align:start position:0%
and getting rid of this while loop we
can<00:14:15.120><c> do</c><00:14:15.279><c> the</c><00:14:15.360><c> same</c><00:14:15.600><c> thing</c><00:14:15.760><c> so</c>

00:14:15.990 --> 00:14:16.000 align:start position:0%
can do the same thing so
 

00:14:16.000 --> 00:14:17.990 align:start position:0%
can do the same thing so
add<00:14:16.240><c> to</c><00:14:16.399><c> result</c><00:14:17.040><c> whatever</c><00:14:17.440><c> this</c><00:14:17.600><c> function</c>

00:14:17.990 --> 00:14:18.000 align:start position:0%
add to result whatever this function
 

00:14:18.000 --> 00:14:19.750 align:start position:0%
add to result whatever this function
returns<00:14:18.480><c> count</c><00:14:18.880><c> pali</c>

00:14:19.750 --> 00:14:19.760 align:start position:0%
returns count pali
 

00:14:19.760 --> 00:14:22.790 align:start position:0%
returns count pali
passing<00:14:20.240><c> in</c><00:14:20.480><c> s</c><00:14:20.959><c> passing</c><00:14:21.440><c> in</c><00:14:22.320><c> left</c>

00:14:22.790 --> 00:14:22.800 align:start position:0%
passing in s passing in left
 

00:14:22.800 --> 00:14:25.110 align:start position:0%
passing in s passing in left
and<00:14:22.959><c> passing</c><00:14:23.440><c> in</c><00:14:23.600><c> right</c><00:14:24.399><c> and</c><00:14:24.639><c> if</c><00:14:24.720><c> we</c><00:14:24.880><c> really</c>

00:14:25.110 --> 00:14:25.120 align:start position:0%
and passing in right and if we really
 

00:14:25.120 --> 00:14:25.990 align:start position:0%
and passing in right and if we really
want<00:14:25.360><c> we</c><00:14:25.519><c> can</c><00:14:25.600><c> take</c>

00:14:25.990 --> 00:14:26.000 align:start position:0%
want we can take
 

00:14:26.000 --> 00:14:28.790 align:start position:0%
want we can take
left<00:14:26.399><c> and</c><00:14:26.560><c> replace</c><00:14:26.959><c> it</c><00:14:27.040><c> with</c><00:14:27.360><c> i</c><00:14:28.000><c> and</c><00:14:28.399><c> right</c><00:14:28.720><c> and</c>

00:14:28.790 --> 00:14:28.800 align:start position:0%
left and replace it with i and right and
 

00:14:28.800 --> 00:14:30.230 align:start position:0%
left and replace it with i and right and
replace<00:14:29.279><c> it</c><00:14:29.360><c> with</c><00:14:29.920><c> i</c>

00:14:30.230 --> 00:14:30.240 align:start position:0%
replace it with i
 

00:14:30.240 --> 00:14:32.310 align:start position:0%
replace it with i
plus<00:14:30.720><c> one</c><00:14:30.959><c> so</c><00:14:31.120><c> then</c><00:14:31.360><c> we</c><00:14:31.440><c> can</c><00:14:31.600><c> get</c><00:14:31.760><c> rid</c><00:14:31.920><c> of</c><00:14:32.000><c> these</c>

00:14:32.310 --> 00:14:32.320 align:start position:0%
plus one so then we can get rid of these
 

00:14:32.320 --> 00:14:33.670 align:start position:0%
plus one so then we can get rid of these
two<00:14:32.560><c> lines</c>

00:14:33.670 --> 00:14:33.680 align:start position:0%
two lines
 

00:14:33.680 --> 00:14:35.269 align:start position:0%
two lines
and<00:14:33.920><c> up</c><00:14:34.079><c> above</c><00:14:34.399><c> do</c><00:14:34.560><c> the</c><00:14:34.639><c> same</c><00:14:34.880><c> thing</c><00:14:35.040><c> so</c>

00:14:35.269 --> 00:14:35.279 align:start position:0%
and up above do the same thing so
 

00:14:35.279 --> 00:14:37.030 align:start position:0%
and up above do the same thing so
replace<00:14:35.760><c> left</c><00:14:36.000><c> and</c><00:14:36.079><c> right</c><00:14:36.320><c> with</c><00:14:36.560><c> both</c>

00:14:37.030 --> 00:14:37.040 align:start position:0%
replace left and right with both
 

00:14:37.040 --> 00:14:39.670 align:start position:0%
replace left and right with both
i<00:14:37.600><c> and</c><00:14:37.680><c> then</c><00:14:37.839><c> get</c><00:14:38.000><c> rid</c><00:14:38.160><c> of</c><00:14:38.320><c> this</c><00:14:38.639><c> line</c><00:14:39.279><c> so</c><00:14:39.519><c> this</c>

00:14:39.670 --> 00:14:39.680 align:start position:0%
i and then get rid of this line so this
 

00:14:39.680 --> 00:14:40.949 align:start position:0%
i and then get rid of this line so this
is<00:14:39.839><c> a</c><00:14:39.920><c> pretty</c><00:14:40.160><c> condensed</c>

00:14:40.949 --> 00:14:40.959 align:start position:0%
is a pretty condensed
 

00:14:40.959 --> 00:14:43.670 align:start position:0%
is a pretty condensed
version<00:14:41.519><c> of</c><00:14:41.760><c> this</c><00:14:42.079><c> function</c><00:14:42.639><c> so</c><00:14:43.279><c> with</c><00:14:43.440><c> this</c>

00:14:43.670 --> 00:14:43.680 align:start position:0%
version of this function so with this
 

00:14:43.680 --> 00:14:45.110 align:start position:0%
version of this function so with this
little<00:14:43.920><c> helper</c><00:14:44.240><c> function</c><00:14:44.560><c> that</c><00:14:44.720><c> we</c><00:14:44.800><c> have</c><00:14:44.959><c> we</c>

00:14:45.110 --> 00:14:45.120 align:start position:0%
little helper function that we have we
 

00:14:45.120 --> 00:14:46.230 align:start position:0%
little helper function that we have we
can<00:14:45.279><c> cut</c><00:14:45.519><c> down</c><00:14:45.839><c> on</c>

00:14:46.230 --> 00:14:46.240 align:start position:0%
can cut down on
 

00:14:46.240 --> 00:14:48.790 align:start position:0%
can cut down on
that<00:14:46.480><c> repeated</c><00:14:47.600><c> code</c><00:14:47.839><c> that</c><00:14:48.000><c> we</c><00:14:48.160><c> were</c><00:14:48.320><c> writing</c>

00:14:48.790 --> 00:14:48.800 align:start position:0%
that repeated code that we were writing
 

00:14:48.800 --> 00:14:50.790 align:start position:0%
that repeated code that we were writing
and<00:14:49.199><c> basically</c><00:14:49.680><c> get</c><00:14:49.839><c> the</c><00:14:50.000><c> same</c><00:14:50.240><c> result</c>

00:14:50.790 --> 00:14:50.800 align:start position:0%
and basically get the same result
 

00:14:50.800 --> 00:14:53.110 align:start position:0%
and basically get the same result
same<00:14:51.040><c> efficiency</c><00:14:51.760><c> same</c><00:14:52.079><c> everything</c><00:14:52.880><c> so</c><00:14:53.040><c> i</c>

00:14:53.110 --> 00:14:53.120 align:start position:0%
same efficiency same everything so i
 

00:14:53.120 --> 00:14:54.389 align:start position:0%
same efficiency same everything so i
hope<00:14:53.360><c> that</c><00:14:53.440><c> this</c><00:14:53.680><c> was</c><00:14:53.839><c> helpful</c>

00:14:54.389 --> 00:14:54.399 align:start position:0%
hope that this was helpful
 

00:14:54.399 --> 00:14:56.629 align:start position:0%
hope that this was helpful
if<00:14:54.639><c> it</c><00:14:54.800><c> was</c><00:14:55.279><c> please</c><00:14:55.680><c> like</c><00:14:55.920><c> and</c><00:14:56.000><c> subscribe</c><00:14:56.560><c> it</c>

00:14:56.629 --> 00:14:56.639 align:start position:0%
if it was please like and subscribe it
 

00:14:56.639 --> 00:14:58.230 align:start position:0%
if it was please like and subscribe it
supports<00:14:57.120><c> the</c><00:14:57.199><c> channel</c><00:14:57.600><c> a</c><00:14:57.839><c> lot</c>

00:14:58.230 --> 00:14:58.240 align:start position:0%
supports the channel a lot
 

00:14:58.240 --> 00:15:00.389 align:start position:0%
supports the channel a lot
and<00:14:58.399><c> i'll</c><00:14:58.639><c> hopefully</c><00:14:59.279><c> see</c><00:14:59.440><c> you</c><00:14:59.600><c> pretty</c><00:14:59.920><c> soon</c>

00:15:00.389 --> 00:15:00.399 align:start position:0%
and i'll hopefully see you pretty soon
 

00:15:00.399 --> 00:15:03.440 align:start position:0%
and i'll hopefully see you pretty soon
thanks<00:15:00.639><c> for</c><00:15:00.800><c> watching</c>

