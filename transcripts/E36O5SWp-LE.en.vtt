WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.670 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.640><c> welcome</c><00:00:01.120><c> back</c><00:00:01.360><c> and</c><00:00:01.439><c> let's</c>

00:00:01.670 --> 00:00:01.680 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.680 --> 00:00:03.669 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.920><c> some</c><00:00:02.080><c> more</c><00:00:02.320><c> neat</c><00:00:02.560><c> code</c><00:00:02.800><c> today</c><00:00:03.120><c> so</c><00:00:03.280><c> today</c>

00:00:03.669 --> 00:00:03.679 align:start position:0%
write some more neat code today so today
 

00:00:03.679 --> 00:00:05.829 align:start position:0%
write some more neat code today so today
let's<00:00:03.919><c> solve</c><00:00:04.240><c> the</c><00:00:04.400><c> problem</c><00:00:04.960><c> subtree</c><00:00:05.680><c> of</c>

00:00:05.829 --> 00:00:05.839 align:start position:0%
let's solve the problem subtree of
 

00:00:05.839 --> 00:00:07.829 align:start position:0%
let's solve the problem subtree of
another<00:00:06.240><c> tree</c><00:00:06.799><c> and</c><00:00:07.040><c> this</c><00:00:07.279><c> problem</c><00:00:07.680><c> is</c>

00:00:07.829 --> 00:00:07.839 align:start position:0%
another tree and this problem is
 

00:00:07.839 --> 00:00:10.790 align:start position:0%
another tree and this problem is
actually<00:00:08.240><c> from</c><00:00:08.480><c> the</c><00:00:08.720><c> blind</c><00:00:09.120><c> 75</c><00:00:09.840><c> list</c><00:00:10.240><c> that</c><00:00:10.400><c> we</c>

00:00:10.790 --> 00:00:10.800 align:start position:0%
actually from the blind 75 list that we
 

00:00:10.800 --> 00:00:12.709 align:start position:0%
actually from the blind 75 list that we
haven't<00:00:11.120><c> really</c><00:00:11.440><c> visited</c><00:00:12.000><c> in</c><00:00:12.160><c> quite</c><00:00:12.400><c> a</c><00:00:12.480><c> while</c>

00:00:12.709 --> 00:00:12.719 align:start position:0%
haven't really visited in quite a while
 

00:00:12.719 --> 00:00:14.150 align:start position:0%
haven't really visited in quite a while
because<00:00:12.960><c> we've</c><00:00:13.200><c> solved</c><00:00:13.599><c> most</c><00:00:13.920><c> of</c><00:00:14.000><c> the</c>

00:00:14.150 --> 00:00:14.160 align:start position:0%
because we've solved most of the
 

00:00:14.160 --> 00:00:15.589 align:start position:0%
because we've solved most of the
problems<00:00:14.559><c> on</c><00:00:14.719><c> this</c><00:00:14.880><c> list</c><00:00:15.120><c> but</c><00:00:15.280><c> you</c><00:00:15.360><c> can</c><00:00:15.440><c> see</c>

00:00:15.589 --> 00:00:15.599 align:start position:0%
problems on this list but you can see
 

00:00:15.599 --> 00:00:17.430 align:start position:0%
problems on this list but you can see
one<00:00:15.759><c> of</c><00:00:15.920><c> the</c><00:00:16.000><c> problems</c><00:00:16.720><c> one</c><00:00:16.880><c> of</c><00:00:17.039><c> the</c><00:00:17.199><c> few</c>

00:00:17.430 --> 00:00:17.440 align:start position:0%
one of the problems one of the few
 

00:00:17.440 --> 00:00:19.510 align:start position:0%
one of the problems one of the few
problems<00:00:17.760><c> that</c><00:00:17.840><c> we</c><00:00:18.000><c> missed</c><00:00:18.480><c> was</c><00:00:18.800><c> subtree</c><00:00:19.439><c> of</c>

00:00:19.510 --> 00:00:19.520 align:start position:0%
problems that we missed was subtree of
 

00:00:19.520 --> 00:00:21.830 align:start position:0%
problems that we missed was subtree of
another<00:00:19.840><c> tree</c><00:00:20.080><c> so</c><00:00:20.240><c> let's</c><00:00:20.480><c> solve</c><00:00:20.800><c> that</c><00:00:21.119><c> today</c>

00:00:21.830 --> 00:00:21.840 align:start position:0%
another tree so let's solve that today
 

00:00:21.840 --> 00:00:23.750 align:start position:0%
another tree so let's solve that today
by<00:00:22.000><c> the</c><00:00:22.080><c> way</c><00:00:22.320><c> this</c><00:00:22.640><c> is</c><00:00:22.880><c> a</c><00:00:22.960><c> spreadsheet</c><00:00:23.519><c> we</c>

00:00:23.750 --> 00:00:23.760 align:start position:0%
by the way this is a spreadsheet we
 

00:00:23.760 --> 00:00:25.990 align:start position:0%
by the way this is a spreadsheet we
created<00:00:24.160><c> a</c><00:00:24.400><c> long</c><00:00:24.640><c> time</c><00:00:24.880><c> ago</c><00:00:25.359><c> basically</c><00:00:25.840><c> just</c>

00:00:25.990 --> 00:00:26.000 align:start position:0%
created a long time ago basically just
 

00:00:26.000 --> 00:00:28.230 align:start position:0%
created a long time ago basically just
tracking<00:00:26.480><c> all</c><00:00:26.640><c> 75</c><00:00:27.279><c> of</c><00:00:27.359><c> the</c><00:00:27.519><c> problems</c><00:00:28.000><c> in</c><00:00:28.160><c> the</c>

00:00:28.230 --> 00:00:28.240 align:start position:0%
tracking all 75 of the problems in the
 

00:00:28.240 --> 00:00:30.310 align:start position:0%
tracking all 75 of the problems in the
blind<00:00:28.560><c> 75</c><00:00:29.119><c> list</c><00:00:29.359><c> you</c><00:00:29.439><c> can</c><00:00:29.519><c> see</c><00:00:29.760><c> i've</c><00:00:30.000><c> taken</c>

00:00:30.310 --> 00:00:30.320 align:start position:0%
blind 75 list you can see i've taken
 

00:00:30.320 --> 00:00:31.830 align:start position:0%
blind 75 list you can see i've taken
some<00:00:30.480><c> of</c><00:00:30.560><c> my</c><00:00:30.800><c> notes</c><00:00:31.119><c> on</c><00:00:31.279><c> each</c><00:00:31.519><c> of</c><00:00:31.599><c> these</c>

00:00:31.830 --> 00:00:31.840 align:start position:0%
some of my notes on each of these
 

00:00:31.840 --> 00:00:34.310 align:start position:0%
some of my notes on each of these
problems<00:00:32.559><c> over</c><00:00:32.880><c> here</c><00:00:33.520><c> and</c><00:00:33.840><c> each</c><00:00:34.079><c> of</c><00:00:34.160><c> the</c>

00:00:34.310 --> 00:00:34.320 align:start position:0%
problems over here and each of the
 

00:00:34.320 --> 00:00:35.590 align:start position:0%
problems over here and each of the
problems<00:00:34.719><c> or</c><00:00:34.880><c> at</c><00:00:34.960><c> least</c><00:00:35.200><c> most</c><00:00:35.440><c> of</c><00:00:35.520><c> the</c>

00:00:35.590 --> 00:00:35.600 align:start position:0%
problems or at least most of the
 

00:00:35.600 --> 00:00:37.590 align:start position:0%
problems or at least most of the
problems<00:00:36.079><c> have</c><00:00:36.320><c> a</c><00:00:36.480><c> video</c><00:00:36.880><c> solution</c><00:00:37.280><c> that</c><00:00:37.440><c> i</c>

00:00:37.590 --> 00:00:37.600 align:start position:0%
problems have a video solution that i
 

00:00:37.600 --> 00:00:38.630 align:start position:0%
problems have a video solution that i
created

00:00:38.630 --> 00:00:38.640 align:start position:0%
created
 

00:00:38.640 --> 00:00:40.470 align:start position:0%
created
and<00:00:38.800><c> you</c><00:00:38.960><c> can</c><00:00:39.040><c> see</c><00:00:39.280><c> about</c><00:00:39.600><c> 16</c><00:00:40.079><c> people</c><00:00:40.320><c> are</c>

00:00:40.470 --> 00:00:40.480 align:start position:0%
and you can see about 16 people are
 

00:00:40.480 --> 00:00:41.430 align:start position:0%
and you can see about 16 people are
actually

00:00:41.430 --> 00:00:41.440 align:start position:0%
actually
 

00:00:41.440 --> 00:00:43.430 align:start position:0%
actually
you<00:00:41.600><c> know</c><00:00:41.760><c> looking</c><00:00:42.000><c> at</c><00:00:42.160><c> this</c><00:00:42.320><c> sheet</c><00:00:42.640><c> right</c><00:00:42.879><c> now</c>

00:00:43.430 --> 00:00:43.440 align:start position:0%
you know looking at this sheet right now
 

00:00:43.440 --> 00:00:45.430 align:start position:0%
you know looking at this sheet right now
i<00:00:43.600><c> assume</c><00:00:43.920><c> most</c><00:00:44.160><c> of</c><00:00:44.320><c> them</c><00:00:44.719><c> are</c><00:00:44.960><c> viewers</c><00:00:45.360><c> of</c>

00:00:45.430 --> 00:00:45.440 align:start position:0%
i assume most of them are viewers of
 

00:00:45.440 --> 00:00:47.110 align:start position:0%
i assume most of them are viewers of
mine<00:00:45.920><c> and</c><00:00:46.079><c> if</c><00:00:46.239><c> you</c><00:00:46.320><c> don't</c><00:00:46.480><c> really</c><00:00:46.640><c> care</c><00:00:46.879><c> for</c>

00:00:47.110 --> 00:00:47.120 align:start position:0%
mine and if you don't really care for
 

00:00:47.120 --> 00:00:49.270 align:start position:0%
mine and if you don't really care for
spreadsheets<00:00:47.680><c> i</c><00:00:47.840><c> actually</c><00:00:48.079><c> did</c><00:00:48.399><c> make</c><00:00:48.640><c> a</c><00:00:48.879><c> video</c>

00:00:49.270 --> 00:00:49.280 align:start position:0%
spreadsheets i actually did make a video
 

00:00:49.280 --> 00:00:51.830 align:start position:0%
spreadsheets i actually did make a video
playlist<00:00:49.920><c> of</c><00:00:50.160><c> each</c><00:00:50.399><c> of</c><00:00:50.559><c> the</c><00:00:50.719><c> solutions</c><00:00:51.440><c> uh</c><00:00:51.680><c> we</c>

00:00:51.830 --> 00:00:51.840 align:start position:0%
playlist of each of the solutions uh we
 

00:00:51.840 --> 00:00:54.229 align:start position:0%
playlist of each of the solutions uh we
have<00:00:51.920><c> about</c><00:00:52.160><c> 68</c><00:00:52.800><c> of</c><00:00:52.879><c> them</c><00:00:53.120><c> done</c><00:00:53.760><c> so</c><00:00:54.079><c> pretty</c>

00:00:54.229 --> 00:00:54.239 align:start position:0%
have about 68 of them done so pretty
 

00:00:54.239 --> 00:00:55.990 align:start position:0%
have about 68 of them done so pretty
much<00:00:54.559><c> every</c><00:00:54.800><c> problem</c><00:00:55.199><c> has</c><00:00:55.440><c> been</c><00:00:55.680><c> solved</c>

00:00:55.990 --> 00:00:56.000 align:start position:0%
much every problem has been solved
 

00:00:56.000 --> 00:00:58.069 align:start position:0%
much every problem has been solved
except<00:00:56.320><c> for</c><00:00:56.800><c> just</c><00:00:57.039><c> a</c><00:00:57.120><c> few</c><00:00:57.280><c> of</c><00:00:57.440><c> them</c><00:00:57.760><c> most</c><00:00:58.000><c> of</c>

00:00:58.069 --> 00:00:58.079 align:start position:0%
except for just a few of them most of
 

00:00:58.079 --> 00:00:59.990 align:start position:0%
except for just a few of them most of
the<00:00:58.160><c> hard</c><00:00:58.480><c> problems</c><00:00:58.960><c> at</c><00:00:59.039><c> least</c><00:00:59.520><c> okay</c><00:00:59.760><c> now</c>

00:00:59.990 --> 00:01:00.000 align:start position:0%
the hard problems at least okay now
 

00:01:00.000 --> 00:01:01.910 align:start position:0%
the hard problems at least okay now
let's<00:01:00.399><c> get</c><00:01:00.559><c> back</c><00:01:00.800><c> to</c><00:01:00.879><c> the</c><00:01:01.039><c> problem</c><00:01:01.760><c> the</c>

00:01:01.910 --> 00:01:01.920 align:start position:0%
let's get back to the problem the
 

00:01:01.920 --> 00:01:03.430 align:start position:0%
let's get back to the problem the
description<00:01:02.399><c> of</c><00:01:02.480><c> the</c><00:01:02.640><c> problem</c><00:01:03.039><c> is</c><00:01:03.120><c> pretty</c>

00:01:03.430 --> 00:01:03.440 align:start position:0%
description of the problem is pretty
 

00:01:03.440 --> 00:01:05.830 align:start position:0%
description of the problem is pretty
simple<00:01:03.840><c> we're</c><00:01:04.000><c> given</c><00:01:04.320><c> two</c><00:01:04.559><c> binary</c><00:01:05.040><c> trees</c><00:01:05.519><c> one</c>

00:01:05.830 --> 00:01:05.840 align:start position:0%
simple we're given two binary trees one
 

00:01:05.840 --> 00:01:08.710 align:start position:0%
simple we're given two binary trees one
is<00:01:06.080><c> called</c><00:01:06.640><c> root</c><00:01:06.960><c> so</c><00:01:07.200><c> this</c><00:01:07.520><c> is</c><00:01:08.000><c> that</c><00:01:08.320><c> entire</c>

00:01:08.710 --> 00:01:08.720 align:start position:0%
is called root so this is that entire
 

00:01:08.720 --> 00:01:11.270 align:start position:0%
is called root so this is that entire
tree<00:01:09.119><c> and</c><00:01:09.280><c> the</c><00:01:09.439><c> second</c><00:01:09.840><c> tree</c><00:01:10.240><c> is</c><00:01:10.400><c> called</c><00:01:10.880><c> sub</c>

00:01:11.270 --> 00:01:11.280 align:start position:0%
tree and the second tree is called sub
 

00:01:11.280 --> 00:01:14.469 align:start position:0%
tree and the second tree is called sub
root<00:01:11.920><c> and</c><00:01:12.400><c> this</c><00:01:12.880><c> is</c><00:01:13.200><c> that</c><00:01:13.439><c> second</c><00:01:13.840><c> tree</c><00:01:14.320><c> and</c>

00:01:14.469 --> 00:01:14.479 align:start position:0%
root and this is that second tree and
 

00:01:14.479 --> 00:01:17.270 align:start position:0%
root and this is that second tree and
the<00:01:14.640><c> only</c><00:01:14.880><c> thing</c><00:01:15.200><c> we</c><00:01:15.439><c> want</c><00:01:15.759><c> to</c><00:01:15.920><c> know</c><00:01:16.479><c> is</c>

00:01:17.270 --> 00:01:17.280 align:start position:0%
the only thing we want to know is
 

00:01:17.280 --> 00:01:20.789 align:start position:0%
the only thing we want to know is
this<00:01:17.920><c> sub</c><00:01:18.240><c> root</c><00:01:18.640><c> this</c><00:01:19.200><c> tree</c><00:01:19.680><c> this</c><00:01:19.920><c> entire</c><00:01:20.400><c> tree</c>

00:01:20.789 --> 00:01:20.799 align:start position:0%
this sub root this tree this entire tree
 

00:01:20.799 --> 00:01:23.749 align:start position:0%
this sub root this tree this entire tree
is<00:01:21.040><c> it</c><00:01:21.439><c> a</c><00:01:21.920><c> sub</c><00:01:22.240><c> tree</c><00:01:22.960><c> of</c>

00:01:23.749 --> 00:01:23.759 align:start position:0%
is it a sub tree of
 

00:01:23.759 --> 00:01:27.270 align:start position:0%
is it a sub tree of
this<00:01:24.240><c> tree</c><00:01:24.720><c> on</c><00:01:24.880><c> the</c><00:01:25.200><c> left</c><00:01:25.759><c> is</c><00:01:26.080><c> this</c><00:01:26.320><c> one</c><00:01:26.640><c> a</c><00:01:26.960><c> sub</c>

00:01:27.270 --> 00:01:27.280 align:start position:0%
this tree on the left is this one a sub
 

00:01:27.280 --> 00:01:30.069 align:start position:0%
this tree on the left is this one a sub
tree<00:01:27.600><c> of</c><00:01:27.759><c> this</c><00:01:28.080><c> one</c><00:01:28.479><c> now</c><00:01:28.799><c> first</c><00:01:29.119><c> question</c><00:01:29.759><c> what</c>

00:01:30.069 --> 00:01:30.079 align:start position:0%
tree of this one now first question what
 

00:01:30.079 --> 00:01:33.510 align:start position:0%
tree of this one now first question what
is<00:01:30.400><c> a</c><00:01:30.640><c> subtree</c><00:01:31.200><c> so</c><00:01:31.520><c> for</c><00:01:31.759><c> for</c><00:01:32.000><c> this</c><00:01:32.479><c> a</c><00:01:32.720><c> root</c><00:01:33.040><c> tree</c>

00:01:33.510 --> 00:01:33.520 align:start position:0%
is a subtree so for for this a root tree
 

00:01:33.520 --> 00:01:35.429 align:start position:0%
is a subtree so for for this a root tree
what's<00:01:33.840><c> a</c><00:01:34.000><c> sub</c><00:01:34.240><c> tree</c><00:01:34.560><c> basically</c><00:01:35.040><c> you</c><00:01:35.200><c> can</c>

00:01:35.429 --> 00:01:35.439 align:start position:0%
what's a sub tree basically you can
 

00:01:35.439 --> 00:01:37.830 align:start position:0%
what's a sub tree basically you can
start<00:01:35.840><c> at</c><00:01:36.159><c> any</c><00:01:36.560><c> node</c><00:01:36.960><c> in</c><00:01:37.040><c> the</c><00:01:37.200><c> tree</c><00:01:37.520><c> and</c><00:01:37.600><c> then</c>

00:01:37.830 --> 00:01:37.840 align:start position:0%
start at any node in the tree and then
 

00:01:37.840 --> 00:01:41.749 align:start position:0%
start at any node in the tree and then
take<00:01:38.240><c> all</c><00:01:38.960><c> of</c><00:01:39.520><c> the</c><00:01:39.920><c> nodes</c><00:01:40.400><c> in</c><00:01:40.560><c> that</c><00:01:41.280><c> subtree</c>

00:01:41.749 --> 00:01:41.759 align:start position:0%
take all of the nodes in that subtree
 

00:01:41.759 --> 00:01:44.149 align:start position:0%
take all of the nodes in that subtree
right<00:01:41.920><c> so</c><00:01:42.079><c> for</c><00:01:42.560><c> starting</c><00:01:42.880><c> at</c><00:01:43.040><c> four</c><00:01:43.600><c> this</c><00:01:43.840><c> is</c><00:01:44.000><c> a</c>

00:01:44.149 --> 00:01:44.159 align:start position:0%
right so for starting at four this is a
 

00:01:44.159 --> 00:01:47.030 align:start position:0%
right so for starting at four this is a
subtree<00:01:44.880><c> of</c><00:01:44.960><c> the</c><00:01:45.200><c> tree</c><00:01:45.759><c> uh</c><00:01:46.079><c> starting</c><00:01:46.399><c> at</c><00:01:46.560><c> one</c>

00:01:47.030 --> 00:01:47.040 align:start position:0%
subtree of the tree uh starting at one
 

00:01:47.040 --> 00:01:49.030 align:start position:0%
subtree of the tree uh starting at one
the<00:01:47.200><c> node</c><00:01:47.520><c> itself</c><00:01:48.000><c> is</c><00:01:48.159><c> a</c><00:01:48.240><c> sub</c><00:01:48.479><c> tree</c><00:01:48.799><c> this</c>

00:01:49.030 --> 00:01:49.040 align:start position:0%
the node itself is a sub tree this
 

00:01:49.040 --> 00:01:51.190 align:start position:0%
the node itself is a sub tree this
itself<00:01:49.439><c> is</c><00:01:49.600><c> a</c><00:01:49.680><c> subtree</c><00:01:50.159><c> this</c><00:01:50.479><c> itself</c><00:01:50.799><c> is</c><00:01:50.880><c> a</c><00:01:51.040><c> sub</c>

00:01:51.190 --> 00:01:51.200 align:start position:0%
itself is a subtree this itself is a sub
 

00:01:51.200 --> 00:01:53.910 align:start position:0%
itself is a subtree this itself is a sub
tree<00:01:51.439><c> even</c><00:01:51.759><c> starting</c><00:01:52.240><c> at</c><00:01:52.399><c> the</c><00:01:52.560><c> root</c><00:01:52.880><c> node</c><00:01:53.600><c> this</c>

00:01:53.910 --> 00:01:53.920 align:start position:0%
tree even starting at the root node this
 

00:01:53.920 --> 00:01:57.990 align:start position:0%
tree even starting at the root node this
entire<00:01:54.640><c> tree</c><00:01:55.439><c> is</c><00:01:55.840><c> a</c><00:01:56.000><c> sub</c><00:01:56.240><c> tree</c><00:01:56.640><c> of</c><00:01:56.960><c> itself</c><00:01:57.840><c> so</c>

00:01:57.990 --> 00:01:58.000 align:start position:0%
entire tree is a sub tree of itself so
 

00:01:58.000 --> 00:01:59.910 align:start position:0%
entire tree is a sub tree of itself so
now<00:01:58.479><c> the</c><00:01:58.799><c> first</c><00:01:59.119><c> thought</c><00:01:59.360><c> that</c><00:01:59.439><c> you</c><00:01:59.600><c> probably</c>

00:01:59.910 --> 00:01:59.920 align:start position:0%
now the first thought that you probably
 

00:01:59.920 --> 00:02:02.630 align:start position:0%
now the first thought that you probably
have<00:02:00.399><c> is</c><00:02:00.880><c> to</c><00:02:01.119><c> check</c><00:02:01.360><c> if</c><00:02:01.520><c> this</c><00:02:01.759><c> is</c><00:02:01.840><c> a</c><00:02:01.920><c> subtree</c><00:02:02.479><c> of</c>

00:02:02.630 --> 00:02:02.640 align:start position:0%
have is to check if this is a subtree of
 

00:02:02.640 --> 00:02:05.190 align:start position:0%
have is to check if this is a subtree of
this<00:02:02.880><c> tree</c><00:02:03.680><c> let's</c><00:02:04.000><c> just</c><00:02:04.240><c> brute</c><00:02:04.640><c> force</c><00:02:04.960><c> it</c>

00:02:05.190 --> 00:02:05.200 align:start position:0%
this tree let's just brute force it
 

00:02:05.200 --> 00:02:06.950 align:start position:0%
this tree let's just brute force it
right<00:02:05.680><c> and</c><00:02:05.840><c> how</c><00:02:06.000><c> would</c><00:02:06.159><c> that</c><00:02:06.399><c> work</c><00:02:06.719><c> well</c>

00:02:06.950 --> 00:02:06.960 align:start position:0%
right and how would that work well
 

00:02:06.960 --> 00:02:09.270 align:start position:0%
right and how would that work well
basically<00:02:07.439><c> we</c><00:02:07.600><c> would</c><00:02:07.920><c> check</c><00:02:08.399><c> visit</c><00:02:08.959><c> every</c>

00:02:09.270 --> 00:02:09.280 align:start position:0%
basically we would check visit every
 

00:02:09.280 --> 00:02:11.670 align:start position:0%
basically we would check visit every
single<00:02:09.679><c> node</c><00:02:10.160><c> in</c><00:02:10.560><c> the</c><00:02:10.800><c> root</c><00:02:11.039><c> tree</c><00:02:11.360><c> and</c><00:02:11.440><c> then</c>

00:02:11.670 --> 00:02:11.680 align:start position:0%
single node in the root tree and then
 

00:02:11.680 --> 00:02:14.710 align:start position:0%
single node in the root tree and then
check<00:02:12.239><c> starting</c><00:02:12.720><c> from</c><00:02:12.879><c> here</c><00:02:13.520><c> does</c><00:02:13.760><c> the</c><00:02:14.000><c> tree</c>

00:02:14.710 --> 00:02:14.720 align:start position:0%
check starting from here does the tree
 

00:02:14.720 --> 00:02:17.430 align:start position:0%
check starting from here does the tree
match<00:02:15.280><c> the</c><00:02:15.520><c> sub</c><00:02:15.840><c> root</c><00:02:16.160><c> tree</c><00:02:16.640><c> so</c><00:02:16.959><c> let's</c><00:02:17.200><c> start</c>

00:02:17.430 --> 00:02:17.440 align:start position:0%
match the sub root tree so let's start
 

00:02:17.440 --> 00:02:19.270 align:start position:0%
match the sub root tree so let's start
at<00:02:17.520><c> the</c><00:02:17.680><c> root</c><00:02:18.160><c> right</c><00:02:18.319><c> the</c><00:02:18.480><c> root</c><00:02:18.800><c> of</c><00:02:18.879><c> both</c><00:02:19.120><c> of</c>

00:02:19.270 --> 00:02:19.280 align:start position:0%
at the root right the root of both of
 

00:02:19.280 --> 00:02:21.670 align:start position:0%
at the root right the root of both of
the<00:02:19.360><c> trees</c><00:02:19.760><c> three</c><00:02:20.480><c> and</c><00:02:20.720><c> four</c><00:02:21.120><c> are</c><00:02:21.200><c> are</c><00:02:21.520><c> the</c>

00:02:21.670 --> 00:02:21.680 align:start position:0%
the trees three and four are are the
 

00:02:21.680 --> 00:02:23.350 align:start position:0%
the trees three and four are are the
root<00:02:21.920><c> values</c><00:02:22.400><c> the</c><00:02:22.480><c> same</c><00:02:22.640><c> well</c><00:02:22.879><c> they're</c><00:02:23.040><c> not</c>

00:02:23.350 --> 00:02:23.360 align:start position:0%
root values the same well they're not
 

00:02:23.360 --> 00:02:25.030 align:start position:0%
root values the same well they're not
right<00:02:23.599><c> so</c><00:02:23.760><c> that</c><00:02:24.080><c> kind</c><00:02:24.239><c> of</c><00:02:24.400><c> automatically</c>

00:02:25.030 --> 00:02:25.040 align:start position:0%
right so that kind of automatically
 

00:02:25.040 --> 00:02:27.910 align:start position:0%
right so that kind of automatically
means<00:02:25.280><c> that</c><00:02:25.440><c> this</c><00:02:25.680><c> entire</c><00:02:26.160><c> tree</c><00:02:26.959><c> is</c><00:02:27.200><c> not</c><00:02:27.520><c> equal</c>

00:02:27.910 --> 00:02:27.920 align:start position:0%
means that this entire tree is not equal
 

00:02:27.920 --> 00:02:30.949 align:start position:0%
means that this entire tree is not equal
to<00:02:28.080><c> this</c><00:02:28.400><c> tree</c><00:02:28.879><c> so</c><00:02:29.120><c> then</c><00:02:29.680><c> we</c><00:02:30.080><c> continue</c><00:02:30.800><c> right</c>

00:02:30.949 --> 00:02:30.959 align:start position:0%
to this tree so then we continue right
 

00:02:30.959 --> 00:02:32.869 align:start position:0%
to this tree so then we continue right
we<00:02:31.200><c> check</c><00:02:31.440><c> okay</c><00:02:32.080><c> starting</c><00:02:32.319><c> from</c><00:02:32.560><c> here</c>

00:02:32.869 --> 00:02:32.879 align:start position:0%
we check okay starting from here
 

00:02:32.879 --> 00:02:34.710 align:start position:0%
we check okay starting from here
starting<00:02:33.120><c> from</c><00:02:33.280><c> the</c><00:02:33.519><c> four</c><00:02:34.080><c> are</c><00:02:34.239><c> these</c><00:02:34.480><c> two</c>

00:02:34.710 --> 00:02:34.720 align:start position:0%
starting from the four are these two
 

00:02:34.720 --> 00:02:36.710 align:start position:0%
starting from the four are these two
trees<00:02:35.120><c> the</c><00:02:35.360><c> same</c><00:02:35.760><c> well</c><00:02:36.000><c> we</c><00:02:36.080><c> check</c><00:02:36.319><c> the</c><00:02:36.480><c> root</c>

00:02:36.710 --> 00:02:36.720 align:start position:0%
trees the same well we check the root
 

00:02:36.720 --> 00:02:38.550 align:start position:0%
trees the same well we check the root
value<00:02:37.360><c> you</c><00:02:37.440><c> know</c><00:02:37.840><c> they're</c><00:02:38.000><c> both</c><00:02:38.239><c> the</c><00:02:38.400><c> same</c>

00:02:38.550 --> 00:02:38.560 align:start position:0%
value you know they're both the same
 

00:02:38.560 --> 00:02:40.229 align:start position:0%
value you know they're both the same
they're<00:02:38.720><c> both</c><00:02:39.040><c> four</c><00:02:39.360><c> so</c><00:02:39.599><c> at</c><00:02:39.680><c> this</c><00:02:39.920><c> point</c><00:02:40.080><c> we're</c>

00:02:40.229 --> 00:02:40.239 align:start position:0%
they're both four so at this point we're
 

00:02:40.239 --> 00:02:42.869 align:start position:0%
they're both four so at this point we're
basically<00:02:40.720><c> just</c><00:02:40.879><c> comparing</c><00:02:41.599><c> these</c><00:02:41.920><c> trees</c><00:02:42.640><c> to</c>

00:02:42.869 --> 00:02:42.879 align:start position:0%
basically just comparing these trees to
 

00:02:42.879 --> 00:02:45.030 align:start position:0%
basically just comparing these trees to
check<00:02:43.120><c> if</c><00:02:43.280><c> they</c><00:02:43.519><c> are</c><00:02:43.760><c> equal</c><00:02:44.319><c> and</c><00:02:44.560><c> we</c><00:02:44.720><c> can</c><00:02:44.879><c> do</c>

00:02:45.030 --> 00:02:45.040 align:start position:0%
check if they are equal and we can do
 

00:02:45.040 --> 00:02:46.390 align:start position:0%
check if they are equal and we can do
that<00:02:45.200><c> recursively</c><00:02:45.840><c> there's</c><00:02:46.080><c> actually</c>

00:02:46.390 --> 00:02:46.400 align:start position:0%
that recursively there's actually
 

00:02:46.400 --> 00:02:48.550 align:start position:0%
that recursively there's actually
another<00:02:46.800><c> leak</c><00:02:46.959><c> code</c><00:02:47.280><c> problem</c><00:02:47.680><c> called</c><00:02:48.080><c> same</c>

00:02:48.550 --> 00:02:48.560 align:start position:0%
another leak code problem called same
 

00:02:48.560 --> 00:02:50.869 align:start position:0%
another leak code problem called same
tree<00:02:49.360><c> that</c><00:02:49.760><c> i</c><00:02:49.920><c> would</c><00:02:50.080><c> recommend</c><00:02:50.560><c> solving</c>

00:02:50.869 --> 00:02:50.879 align:start position:0%
tree that i would recommend solving
 

00:02:50.879 --> 00:02:52.790 align:start position:0%
tree that i would recommend solving
before<00:02:51.280><c> this</c><00:02:51.599><c> problem</c><00:02:52.000><c> if</c><00:02:52.080><c> you</c><00:02:52.319><c> struggle</c><00:02:52.640><c> with</c>

00:02:52.790 --> 00:02:52.800 align:start position:0%
before this problem if you struggle with
 

00:02:52.800 --> 00:02:55.430 align:start position:0%
before this problem if you struggle with
this<00:02:53.040><c> problem</c><00:02:53.680><c> this</c><00:02:53.920><c> one</c><00:02:54.160><c> is</c><00:02:54.319><c> also</c><00:02:54.720><c> an</c><00:02:54.959><c> easy</c>

00:02:55.430 --> 00:02:55.440 align:start position:0%
this problem this one is also an easy
 

00:02:55.440 --> 00:02:57.190 align:start position:0%
this problem this one is also an easy
problem<00:02:55.840><c> if</c><00:02:56.000><c> you</c><00:02:56.080><c> want</c><00:02:56.239><c> to</c><00:02:56.319><c> check</c><00:02:56.560><c> it</c><00:02:56.720><c> out</c><00:02:57.040><c> but</c>

00:02:57.190 --> 00:02:57.200 align:start position:0%
problem if you want to check it out but
 

00:02:57.200 --> 00:02:59.430 align:start position:0%
problem if you want to check it out but
yeah<00:02:57.440><c> we</c><00:02:57.519><c> can</c><00:02:57.760><c> recursively</c><00:02:58.319><c> compare</c><00:02:59.200><c> these</c>

00:02:59.430 --> 00:02:59.440 align:start position:0%
yeah we can recursively compare these
 

00:02:59.440 --> 00:03:01.670 align:start position:0%
yeah we can recursively compare these
two<00:02:59.599><c> subtrees</c><00:03:00.400><c> four</c><00:03:00.640><c> and</c><00:03:00.720><c> four</c><00:03:01.120><c> are</c><00:03:01.280><c> exactly</c>

00:03:01.670 --> 00:03:01.680 align:start position:0%
two subtrees four and four are exactly
 

00:03:01.680 --> 00:03:03.430 align:start position:0%
two subtrees four and four are exactly
the<00:03:01.760><c> same</c><00:03:02.000><c> so</c><00:03:02.159><c> now</c><00:03:02.319><c> let's</c><00:03:02.560><c> check</c><00:03:02.800><c> the</c><00:03:02.959><c> left</c>

00:03:03.430 --> 00:03:03.440 align:start position:0%
the same so now let's check the left
 

00:03:03.440 --> 00:03:06.390 align:start position:0%
the same so now let's check the left
child<00:03:03.760><c> of</c><00:03:03.920><c> both</c><00:03:04.239><c> trees</c><00:03:04.959><c> one</c><00:03:05.360><c> and</c><00:03:05.599><c> one</c><00:03:05.920><c> are</c><00:03:06.080><c> both</c>

00:03:06.390 --> 00:03:06.400 align:start position:0%
child of both trees one and one are both
 

00:03:06.400 --> 00:03:08.949 align:start position:0%
child of both trees one and one are both
the<00:03:06.560><c> same</c><00:03:06.800><c> now</c><00:03:06.959><c> let's</c><00:03:07.280><c> check</c><00:03:07.680><c> the</c><00:03:07.920><c> right</c><00:03:08.159><c> child</c>

00:03:08.949 --> 00:03:08.959 align:start position:0%
the same now let's check the right child
 

00:03:08.959 --> 00:03:10.630 align:start position:0%
the same now let's check the right child
two<00:03:09.200><c> and</c><00:03:09.280><c> two</c><00:03:09.519><c> are</c><00:03:09.599><c> both</c><00:03:09.840><c> the</c><00:03:09.920><c> same</c><00:03:10.159><c> so</c><00:03:10.319><c> yeah</c>

00:03:10.630 --> 00:03:10.640 align:start position:0%
two and two are both the same so yeah
 

00:03:10.640 --> 00:03:12.470 align:start position:0%
two and two are both the same so yeah
these<00:03:11.200><c> sub</c><00:03:11.440><c> trees</c>

00:03:12.470 --> 00:03:12.480 align:start position:0%
these sub trees
 

00:03:12.480 --> 00:03:16.070 align:start position:0%
these sub trees
you<00:03:12.560><c> know</c><00:03:12.720><c> this</c><00:03:13.200><c> this</c><00:03:13.680><c> tree</c><00:03:14.239><c> is</c><00:03:14.560><c> a</c><00:03:14.800><c> sub</c><00:03:15.040><c> tree</c><00:03:15.599><c> of</c>

00:03:16.070 --> 00:03:16.080 align:start position:0%
you know this this tree is a sub tree of
 

00:03:16.080 --> 00:03:18.390 align:start position:0%
you know this this tree is a sub tree of
this<00:03:16.400><c> tree</c><00:03:16.959><c> because</c><00:03:17.280><c> we</c><00:03:17.440><c> did</c><00:03:17.599><c> find</c><00:03:17.920><c> a</c><00:03:18.000><c> sub</c><00:03:18.239><c> tree</c>

00:03:18.390 --> 00:03:18.400 align:start position:0%
this tree because we did find a sub tree
 

00:03:18.400 --> 00:03:20.949 align:start position:0%
this tree because we did find a sub tree
that<00:03:18.640><c> matches</c><00:03:19.519><c> uh</c><00:03:19.760><c> this</c><00:03:20.000><c> tree</c><00:03:20.480><c> so</c><00:03:20.640><c> i</c><00:03:20.720><c> think</c>

00:03:20.949 --> 00:03:20.959 align:start position:0%
that matches uh this tree so i think
 

00:03:20.959 --> 00:03:22.630 align:start position:0%
that matches uh this tree so i think
this<00:03:21.120><c> is</c><00:03:21.200><c> one</c><00:03:21.360><c> of</c><00:03:21.440><c> the</c><00:03:21.599><c> problems</c><00:03:22.239><c> where</c><00:03:22.400><c> the</c>

00:03:22.630 --> 00:03:22.640 align:start position:0%
this is one of the problems where the
 

00:03:22.640 --> 00:03:25.190 align:start position:0%
this is one of the problems where the
solution<00:03:23.200><c> is</c><00:03:23.360><c> actually</c><00:03:23.920><c> really</c><00:03:24.319><c> simple</c><00:03:24.720><c> right</c>

00:03:25.190 --> 00:03:25.200 align:start position:0%
solution is actually really simple right
 

00:03:25.200 --> 00:03:27.910 align:start position:0%
solution is actually really simple right
for<00:03:25.440><c> every</c><00:03:25.680><c> single</c><00:03:26.159><c> node</c><00:03:26.799><c> in</c><00:03:27.200><c> this</c><00:03:27.440><c> tree</c><00:03:27.680><c> let's</c>

00:03:27.910 --> 00:03:27.920 align:start position:0%
for every single node in this tree let's
 

00:03:27.920 --> 00:03:30.390 align:start position:0%
for every single node in this tree let's
call<00:03:28.159><c> it</c><00:03:28.480><c> s</c><00:03:28.959><c> for</c><00:03:29.120><c> every</c><00:03:29.280><c> single</c><00:03:29.680><c> node</c><00:03:30.080><c> in</c><00:03:30.159><c> this</c>

00:03:30.390 --> 00:03:30.400 align:start position:0%
call it s for every single node in this
 

00:03:30.400 --> 00:03:34.309 align:start position:0%
call it s for every single node in this
tree<00:03:30.959><c> we</c><00:03:31.440><c> compared</c><00:03:32.239><c> that</c><00:03:32.480><c> sub</c><00:03:32.799><c> tree</c><00:03:33.280><c> to</c><00:03:33.920><c> this</c>

00:03:34.309 --> 00:03:34.319 align:start position:0%
tree we compared that sub tree to this
 

00:03:34.319 --> 00:03:37.430 align:start position:0%
tree we compared that sub tree to this
entire<00:03:35.120><c> tree</c><00:03:35.440><c> let's</c><00:03:35.680><c> call</c><00:03:35.920><c> this</c><00:03:36.159><c> tree</c><00:03:36.720><c> t</c><00:03:37.280><c> so</c>

00:03:37.430 --> 00:03:37.440 align:start position:0%
entire tree let's call this tree t so
 

00:03:37.440 --> 00:03:39.270 align:start position:0%
entire tree let's call this tree t so
the<00:03:37.599><c> way</c><00:03:37.760><c> the</c><00:03:37.920><c> worst</c><00:03:38.319><c> case</c><00:03:38.640><c> is</c><00:03:38.799><c> going</c><00:03:38.879><c> to</c><00:03:38.959><c> work</c>

00:03:39.270 --> 00:03:39.280 align:start position:0%
the way the worst case is going to work
 

00:03:39.280 --> 00:03:41.589 align:start position:0%
the way the worst case is going to work
out<00:03:39.519><c> basically</c><00:03:39.920><c> for</c><00:03:40.159><c> every</c><00:03:40.400><c> position</c><00:03:41.040><c> in</c><00:03:41.360><c> the</c>

00:03:41.589 --> 00:03:41.599 align:start position:0%
out basically for every position in the
 

00:03:41.599 --> 00:03:45.750 align:start position:0%
out basically for every position in the
s<00:03:41.920><c> tree</c><00:03:42.480><c> we'd</c><00:03:42.799><c> have</c><00:03:43.040><c> to</c><00:03:43.519><c> end</c><00:03:43.840><c> up</c><00:03:44.400><c> going</c><00:03:44.879><c> through</c>

00:03:45.750 --> 00:03:45.760 align:start position:0%
s tree we'd have to end up going through
 

00:03:45.760 --> 00:03:47.110 align:start position:0%
s tree we'd have to end up going through
every<00:03:46.159><c> single</c>

00:03:47.110 --> 00:03:47.120 align:start position:0%
every single
 

00:03:47.120 --> 00:03:49.830 align:start position:0%
every single
node<00:03:47.599><c> in</c><00:03:47.920><c> the</c><00:03:48.159><c> t</c><00:03:48.400><c> tree</c><00:03:48.720><c> right</c><00:03:48.959><c> so</c><00:03:49.120><c> from</c><00:03:49.280><c> here</c>

00:03:49.830 --> 00:03:49.840 align:start position:0%
node in the t tree right so from here
 

00:03:49.840 --> 00:03:51.509 align:start position:0%
node in the t tree right so from here
you<00:03:50.000><c> know</c><00:03:50.080><c> let's</c><00:03:50.239><c> say</c><00:03:50.400><c> this</c><00:03:50.640><c> was</c><00:03:50.879><c> a</c><00:03:51.040><c> four</c><00:03:51.360><c> the</c>

00:03:51.509 --> 00:03:51.519 align:start position:0%
you know let's say this was a four the
 

00:03:51.519 --> 00:03:52.949 align:start position:0%
you know let's say this was a four the
worst<00:03:51.760><c> case</c><00:03:52.000><c> would</c><00:03:52.159><c> be</c><00:03:52.239><c> that</c><00:03:52.400><c> we'd</c><00:03:52.560><c> compare</c>

00:03:52.949 --> 00:03:52.959 align:start position:0%
worst case would be that we'd compare
 

00:03:52.959 --> 00:03:54.710 align:start position:0%
worst case would be that we'd compare
all<00:03:53.120><c> three</c><00:03:53.439><c> nodes</c><00:03:53.760><c> with</c><00:03:54.000><c> all</c><00:03:54.159><c> three</c><00:03:54.400><c> nodes</c>

00:03:54.710 --> 00:03:54.720 align:start position:0%
all three nodes with all three nodes
 

00:03:54.720 --> 00:03:56.229 align:start position:0%
all three nodes with all three nodes
here<00:03:55.120><c> but</c><00:03:55.280><c> of</c><00:03:55.360><c> course</c><00:03:55.519><c> we</c><00:03:55.680><c> didn't</c><00:03:55.920><c> have</c><00:03:56.080><c> to</c><00:03:56.159><c> do</c>

00:03:56.229 --> 00:03:56.239 align:start position:0%
here but of course we didn't have to do
 

00:03:56.239 --> 00:03:57.750 align:start position:0%
here but of course we didn't have to do
that<00:03:56.400><c> because</c><00:03:56.640><c> the</c><00:03:56.799><c> root</c><00:03:57.040><c> nodes</c><00:03:57.280><c> weren't</c><00:03:57.599><c> the</c>

00:03:57.750 --> 00:03:57.760 align:start position:0%
that because the root nodes weren't the
 

00:03:57.760 --> 00:03:59.270 align:start position:0%
that because the root nodes weren't the
same<00:03:58.000><c> but</c><00:03:58.319><c> what</c><00:03:58.480><c> i'm</c><00:03:58.640><c> getting</c><00:03:58.879><c> at</c><00:03:59.120><c> is</c>

00:03:59.270 --> 00:03:59.280 align:start position:0%
same but what i'm getting at is
 

00:03:59.280 --> 00:04:01.429 align:start position:0%
same but what i'm getting at is
basically<00:03:59.760><c> the</c><00:04:00.000><c> overall</c><00:04:00.319><c> time</c><00:04:00.560><c> complexity</c>

00:04:01.429 --> 00:04:01.439 align:start position:0%
basically the overall time complexity
 

00:04:01.439 --> 00:04:03.429 align:start position:0%
basically the overall time complexity
for<00:04:01.680><c> this</c><00:04:01.920><c> solution</c><00:04:02.319><c> the</c><00:04:02.480><c> brute</c><00:04:02.720><c> force</c><00:04:03.200><c> is</c>

00:04:03.429 --> 00:04:03.439 align:start position:0%
for this solution the brute force is
 

00:04:03.439 --> 00:04:05.750 align:start position:0%
for this solution the brute force is
going<00:04:03.519><c> to</c><00:04:03.680><c> be</c><00:04:04.239><c> s</c><00:04:04.640><c> times</c><00:04:05.120><c> t</c>

00:04:05.750 --> 00:04:05.760 align:start position:0%
going to be s times t
 

00:04:05.760 --> 00:04:07.910 align:start position:0%
going to be s times t
and<00:04:06.239><c> yeah</c><00:04:06.560><c> this</c><00:04:06.799><c> works</c><00:04:07.120><c> so</c><00:04:07.280><c> basically</c><00:04:07.680><c> the</c>

00:04:07.910 --> 00:04:07.920 align:start position:0%
and yeah this works so basically the
 

00:04:07.920 --> 00:04:10.550 align:start position:0%
and yeah this works so basically the
size<00:04:08.239><c> of</c><00:04:08.400><c> both</c><00:04:08.720><c> trees</c><00:04:09.040><c> multiplied</c><00:04:09.680><c> together</c>

00:04:10.550 --> 00:04:10.560 align:start position:0%
size of both trees multiplied together
 

00:04:10.560 --> 00:04:12.710 align:start position:0%
size of both trees multiplied together
so<00:04:10.720><c> this</c><00:04:10.959><c> will</c><00:04:11.280><c> get</c><00:04:11.439><c> us</c><00:04:11.680><c> accepted</c><00:04:12.239><c> on</c><00:04:12.400><c> leak</c>

00:04:12.710 --> 00:04:12.720 align:start position:0%
so this will get us accepted on leak
 

00:04:12.720 --> 00:04:15.110 align:start position:0%
so this will get us accepted on leak
code<00:04:13.280><c> but</c><00:04:13.439><c> just</c><00:04:13.760><c> because</c><00:04:14.319><c> understanding</c><00:04:14.959><c> the</c>

00:04:15.110 --> 00:04:15.120 align:start position:0%
code but just because understanding the
 

00:04:15.120 --> 00:04:17.349 align:start position:0%
code but just because understanding the
solution<00:04:15.840><c> is</c><00:04:16.079><c> simple</c><00:04:16.639><c> it</c><00:04:16.720><c> doesn't</c><00:04:17.040><c> mean</c>

00:04:17.349 --> 00:04:17.359 align:start position:0%
solution is simple it doesn't mean
 

00:04:17.359 --> 00:04:19.110 align:start position:0%
solution is simple it doesn't mean
implementing<00:04:18.000><c> it</c><00:04:18.160><c> is</c><00:04:18.239><c> simple</c><00:04:18.639><c> it's</c><00:04:18.799><c> actually</c>

00:04:19.110 --> 00:04:19.120 align:start position:0%
implementing it is simple it's actually
 

00:04:19.120 --> 00:04:21.430 align:start position:0%
implementing it is simple it's actually
kind<00:04:19.359><c> of</c><00:04:19.519><c> tricky</c><00:04:20.239><c> and</c><00:04:20.400><c> my</c><00:04:20.560><c> suggestion</c><00:04:21.199><c> to</c><00:04:21.280><c> you</c>

00:04:21.430 --> 00:04:21.440 align:start position:0%
kind of tricky and my suggestion to you
 

00:04:21.440 --> 00:04:23.670 align:start position:0%
kind of tricky and my suggestion to you
would<00:04:21.600><c> be</c><00:04:22.000><c> since</c><00:04:22.240><c> this</c><00:04:22.479><c> is</c><00:04:22.639><c> a</c><00:04:22.720><c> tree</c><00:04:23.040><c> problem</c>

00:04:23.670 --> 00:04:23.680 align:start position:0%
would be since this is a tree problem
 

00:04:23.680 --> 00:04:25.749 align:start position:0%
would be since this is a tree problem
most<00:04:24.080><c> tree</c><00:04:24.400><c> problems</c><00:04:24.880><c> are</c><00:04:25.120><c> easiest</c><00:04:25.600><c> to</c>

00:04:25.749 --> 00:04:25.759 align:start position:0%
most tree problems are easiest to
 

00:04:25.759 --> 00:04:27.110 align:start position:0%
most tree problems are easiest to
understand<00:04:26.240><c> when</c><00:04:26.400><c> you</c><00:04:26.560><c> think</c><00:04:26.800><c> of</c><00:04:26.880><c> them</c>

00:04:27.110 --> 00:04:27.120 align:start position:0%
understand when you think of them
 

00:04:27.120 --> 00:04:29.670 align:start position:0%
understand when you think of them
recursively<00:04:28.160><c> so</c><00:04:28.320><c> let's</c><00:04:28.560><c> try</c><00:04:28.800><c> to</c><00:04:28.960><c> do</c><00:04:29.199><c> that</c>

00:04:29.670 --> 00:04:29.680 align:start position:0%
recursively so let's try to do that
 

00:04:29.680 --> 00:04:32.310 align:start position:0%
recursively so let's try to do that
initially<00:04:30.320><c> the</c><00:04:30.560><c> problem</c><00:04:30.960><c> is</c><00:04:31.199><c> we</c><00:04:31.360><c> want</c><00:04:31.600><c> to</c><00:04:31.759><c> know</c>

00:04:32.310 --> 00:04:32.320 align:start position:0%
initially the problem is we want to know
 

00:04:32.320 --> 00:04:36.870 align:start position:0%
initially the problem is we want to know
is<00:04:32.800><c> t</c><00:04:33.360><c> this</c><00:04:33.759><c> subtree</c><00:04:34.639><c> is</c><00:04:34.800><c> it</c><00:04:35.120><c> a</c><00:04:35.360><c> sub</c><00:04:35.680><c> tree</c><00:04:36.320><c> of</c>

00:04:36.870 --> 00:04:36.880 align:start position:0%
is t this subtree is it a sub tree of
 

00:04:36.880 --> 00:04:39.830 align:start position:0%
is t this subtree is it a sub tree of
the<00:04:37.199><c> entire</c><00:04:38.000><c> tree</c><00:04:38.800><c> here</c><00:04:39.120><c> right</c><00:04:39.440><c> is</c><00:04:39.520><c> it</c><00:04:39.680><c> a</c>

00:04:39.830 --> 00:04:39.840 align:start position:0%
the entire tree here right is it a
 

00:04:39.840 --> 00:04:42.629 align:start position:0%
the entire tree here right is it a
subtree<00:04:40.479><c> of</c><00:04:40.880><c> this</c><00:04:41.360><c> tree</c><00:04:41.840><c> to</c><00:04:42.000><c> determine</c><00:04:42.479><c> that</c>

00:04:42.629 --> 00:04:42.639 align:start position:0%
subtree of this tree to determine that
 

00:04:42.639 --> 00:04:44.790 align:start position:0%
subtree of this tree to determine that
the<00:04:42.800><c> first</c><00:04:43.040><c> thing</c><00:04:43.199><c> we</c><00:04:43.360><c> did</c><00:04:43.840><c> was</c><00:04:44.080><c> checked</c><00:04:44.560><c> the</c>

00:04:44.790 --> 00:04:44.800 align:start position:0%
the first thing we did was checked the
 

00:04:44.800 --> 00:04:46.950 align:start position:0%
the first thing we did was checked the
first<00:04:45.520><c> subtree</c><00:04:45.919><c> right</c><00:04:46.080><c> the</c><00:04:46.240><c> root</c><00:04:46.479><c> sub</c><00:04:46.720><c> tree</c>

00:04:46.950 --> 00:04:46.960 align:start position:0%
first subtree right the root sub tree
 

00:04:46.960 --> 00:04:49.590 align:start position:0%
first subtree right the root sub tree
that<00:04:47.120><c> matches</c><00:04:47.919><c> this</c><00:04:48.400><c> tree</c><00:04:49.040><c> right</c><00:04:49.199><c> so</c><00:04:49.360><c> just</c>

00:04:49.590 --> 00:04:49.600 align:start position:0%
that matches this tree right so just
 

00:04:49.600 --> 00:04:52.469 align:start position:0%
that matches this tree right so just
three<00:04:49.919><c> nodes</c><00:04:50.320><c> in</c><00:04:50.960><c> this</c><00:04:51.120><c> case</c><00:04:51.520><c> right</c><00:04:52.080><c> and</c><00:04:52.240><c> we</c>

00:04:52.469 --> 00:04:52.479 align:start position:0%
three nodes in this case right and we
 

00:04:52.479 --> 00:04:55.510 align:start position:0%
three nodes in this case right and we
found<00:04:52.720><c> that</c><00:04:53.040><c> no</c><00:04:53.680><c> this</c><00:04:54.160><c> subtree</c><00:04:55.040><c> is</c><00:04:55.199><c> not</c><00:04:55.440><c> the</c>

00:04:55.510 --> 00:04:55.520 align:start position:0%
found that no this subtree is not the
 

00:04:55.520 --> 00:04:57.749 align:start position:0%
found that no this subtree is not the
same<00:04:55.840><c> as</c><00:04:56.000><c> this</c><00:04:56.240><c> one</c><00:04:56.639><c> right</c><00:04:56.960><c> and</c><00:04:57.120><c> by</c><00:04:57.280><c> the</c><00:04:57.360><c> way</c><00:04:57.600><c> to</c>

00:04:57.749 --> 00:04:57.759 align:start position:0%
same as this one right and by the way to
 

00:04:57.759 --> 00:04:59.990 align:start position:0%
same as this one right and by the way to
check<00:04:58.000><c> that</c><00:04:58.320><c> comparison</c><00:04:59.120><c> we</c><00:04:59.280><c> could</c><00:04:59.520><c> create</c><00:04:59.840><c> a</c>

00:04:59.990 --> 00:05:00.000 align:start position:0%
check that comparison we could create a
 

00:05:00.000 --> 00:05:02.070 align:start position:0%
check that comparison we could create a
helper<00:05:00.479><c> function</c><00:05:00.800><c> to</c><00:05:00.960><c> do</c><00:05:01.199><c> that</c><00:05:01.360><c> for</c><00:05:01.600><c> us</c><00:05:01.840><c> we'll</c>

00:05:02.070 --> 00:05:02.080 align:start position:0%
helper function to do that for us we'll
 

00:05:02.080 --> 00:05:04.230 align:start position:0%
helper function to do that for us we'll
call<00:05:02.320><c> it</c><00:05:02.560><c> same</c><00:05:02.960><c> tree</c><00:05:03.520><c> right</c><00:05:03.759><c> that'll</c><00:05:04.000><c> be</c><00:05:04.160><c> a</c>

00:05:04.230 --> 00:05:04.240 align:start position:0%
call it same tree right that'll be a
 

00:05:04.240 --> 00:05:06.469 align:start position:0%
call it same tree right that'll be a
helper<00:05:04.639><c> function</c><00:05:05.199><c> just</c><00:05:05.360><c> to</c><00:05:05.520><c> compare</c><00:05:06.240><c> two</c>

00:05:06.469 --> 00:05:06.479 align:start position:0%
helper function just to compare two
 

00:05:06.479 --> 00:05:08.870 align:start position:0%
helper function just to compare two
trees<00:05:07.039><c> to</c><00:05:07.199><c> let</c><00:05:07.360><c> us</c><00:05:07.520><c> know</c><00:05:07.759><c> if</c><00:05:07.919><c> they're</c><00:05:08.160><c> equal</c>

00:05:08.870 --> 00:05:08.880 align:start position:0%
trees to let us know if they're equal
 

00:05:08.880 --> 00:05:11.430 align:start position:0%
trees to let us know if they're equal
but<00:05:09.199><c> in</c><00:05:09.280><c> this</c><00:05:09.520><c> case</c><00:05:10.080><c> it</c><00:05:10.240><c> didn't</c><00:05:10.560><c> work</c><00:05:11.120><c> right</c><00:05:11.280><c> so</c>

00:05:11.430 --> 00:05:11.440 align:start position:0%
but in this case it didn't work right so
 

00:05:11.440 --> 00:05:13.350 align:start position:0%
but in this case it didn't work right so
now<00:05:11.680><c> we</c><00:05:11.759><c> have</c><00:05:11.919><c> to</c><00:05:12.080><c> continue</c><00:05:12.639><c> the</c><00:05:12.800><c> problem</c><00:05:13.199><c> and</c>

00:05:13.350 --> 00:05:13.360 align:start position:0%
now we have to continue the problem and
 

00:05:13.360 --> 00:05:14.710 align:start position:0%
now we have to continue the problem and
like<00:05:13.600><c> i</c><00:05:13.680><c> said</c><00:05:13.840><c> let's</c><00:05:14.080><c> think</c><00:05:14.320><c> of</c><00:05:14.479><c> this</c>

00:05:14.710 --> 00:05:14.720 align:start position:0%
like i said let's think of this
 

00:05:14.720 --> 00:05:17.430 align:start position:0%
like i said let's think of this
recursively<00:05:15.680><c> initially</c><00:05:16.320><c> we</c><00:05:16.479><c> wanted</c><00:05:16.800><c> to</c><00:05:16.960><c> know</c>

00:05:17.430 --> 00:05:17.440 align:start position:0%
recursively initially we wanted to know
 

00:05:17.440 --> 00:05:21.830 align:start position:0%
recursively initially we wanted to know
is<00:05:17.840><c> t</c><00:05:18.479><c> a</c><00:05:18.800><c> subtree</c><00:05:19.680><c> of</c><00:05:19.919><c> this</c><00:05:20.320><c> entire</c><00:05:21.039><c> tree</c><00:05:21.600><c> we</c>

00:05:21.830 --> 00:05:21.840 align:start position:0%
is t a subtree of this entire tree we
 

00:05:21.840 --> 00:05:23.670 align:start position:0%
is t a subtree of this entire tree we
found<00:05:22.000><c> that</c><00:05:22.160><c> it's</c><00:05:22.400><c> definitely</c><00:05:23.120><c> not</c><00:05:23.360><c> if</c><00:05:23.520><c> we</c>

00:05:23.670 --> 00:05:23.680 align:start position:0%
found that it's definitely not if we
 

00:05:23.680 --> 00:05:26.230 align:start position:0%
found that it's definitely not if we
start<00:05:24.080><c> at</c><00:05:24.240><c> the</c><00:05:24.400><c> root</c><00:05:24.800><c> so</c><00:05:25.039><c> now</c><00:05:25.280><c> let's</c><00:05:25.600><c> ask</c><00:05:26.000><c> the</c>

00:05:26.230 --> 00:05:26.240 align:start position:0%
start at the root so now let's ask the
 

00:05:26.240 --> 00:05:28.469 align:start position:0%
start at the root so now let's ask the
sub<00:05:26.560><c> problem</c><00:05:27.199><c> is</c><00:05:27.680><c> t</c>

00:05:28.469 --> 00:05:28.479 align:start position:0%
sub problem is t
 

00:05:28.479 --> 00:05:33.189 align:start position:0%
sub problem is t
a<00:05:28.880><c> subtree</c><00:05:29.919><c> of</c><00:05:30.320><c> the</c><00:05:30.880><c> left</c><00:05:31.520><c> sub</c><00:05:31.840><c> tree</c><00:05:32.560><c> of</c><00:05:33.039><c> the</c>

00:05:33.189 --> 00:05:33.199 align:start position:0%
a subtree of the left sub tree of the
 

00:05:33.199 --> 00:05:36.310 align:start position:0%
a subtree of the left sub tree of the
root<00:05:33.600><c> node</c><00:05:34.240><c> and</c><00:05:34.400><c> when</c><00:05:34.560><c> i</c><00:05:34.720><c> say</c><00:05:35.280><c> is</c><00:05:35.520><c> it</c><00:05:35.759><c> a</c><00:05:36.000><c> sub</c>

00:05:36.310 --> 00:05:36.320 align:start position:0%
root node and when i say is it a sub
 

00:05:36.320 --> 00:05:39.029 align:start position:0%
root node and when i say is it a sub
tree<00:05:36.880><c> of</c><00:05:37.199><c> the</c><00:05:37.440><c> left</c><00:05:37.759><c> sub-tree</c><00:05:38.400><c> over</c><00:05:38.639><c> here</c><00:05:38.880><c> i'm</c>

00:05:39.029 --> 00:05:39.039 align:start position:0%
tree of the left sub-tree over here i'm
 

00:05:39.039 --> 00:05:41.590 align:start position:0%
tree of the left sub-tree over here i'm
not<00:05:39.360><c> asking</c><00:05:39.840><c> is</c><00:05:40.000><c> it</c><00:05:40.160><c> the</c><00:05:40.400><c> same</c><00:05:40.880><c> tree</c><00:05:41.360><c> i'm</c>

00:05:41.590 --> 00:05:41.600 align:start position:0%
not asking is it the same tree i'm
 

00:05:41.600 --> 00:05:43.830 align:start position:0%
not asking is it the same tree i'm
asking<00:05:42.000><c> is</c><00:05:42.160><c> it</c><00:05:42.320><c> a</c><00:05:42.560><c> sub-tree</c><00:05:43.280><c> so</c><00:05:43.600><c> we're</c><00:05:43.759><c> going</c>

00:05:43.830 --> 00:05:43.840 align:start position:0%
asking is it a sub-tree so we're going
 

00:05:43.840 --> 00:05:46.070 align:start position:0%
asking is it a sub-tree so we're going
to<00:05:43.919><c> have</c><00:05:44.240><c> two</c><00:05:44.639><c> functions</c><00:05:45.120><c> in</c><00:05:45.280><c> this</c><00:05:45.440><c> case</c><00:05:45.840><c> one</c>

00:05:46.070 --> 00:05:46.080 align:start position:0%
to have two functions in this case one
 

00:05:46.080 --> 00:05:48.230 align:start position:0%
to have two functions in this case one
is<00:05:46.240><c> the</c><00:05:46.400><c> helper</c><00:05:46.800><c> function</c><00:05:47.280><c> same</c><00:05:47.600><c> tree</c><00:05:48.080><c> and</c>

00:05:48.230 --> 00:05:48.240 align:start position:0%
is the helper function same tree and
 

00:05:48.240 --> 00:05:50.150 align:start position:0%
is the helper function same tree and
another<00:05:48.639><c> is</c><00:05:48.800><c> going</c><00:05:48.960><c> to</c><00:05:49.039><c> be</c>

00:05:50.150 --> 00:05:50.160 align:start position:0%
another is going to be
 

00:05:50.160 --> 00:05:51.749 align:start position:0%
another is going to be
another<00:05:50.479><c> function</c><00:05:51.199><c> i</c><00:05:51.280><c> don't</c><00:05:51.440><c> know</c><00:05:51.520><c> what</c><00:05:51.680><c> it's</c>

00:05:51.749 --> 00:05:51.759 align:start position:0%
another function i don't know what it's
 

00:05:51.759 --> 00:05:53.749 align:start position:0%
another function i don't know what it's
going<00:05:51.840><c> to</c><00:05:51.919><c> be</c><00:05:52.080><c> called</c><00:05:52.479><c> i</c><00:05:52.560><c> think</c><00:05:52.720><c> it's</c><00:05:52.960><c> just</c><00:05:53.199><c> the</c>

00:05:53.749 --> 00:05:53.759 align:start position:0%
going to be called i think it's just the
 

00:05:53.759 --> 00:05:55.830 align:start position:0%
going to be called i think it's just the
the<00:05:54.320><c> generic</c><00:05:54.800><c> function</c><00:05:55.120><c> that</c><00:05:55.199><c> they</c><00:05:55.360><c> give</c><00:05:55.600><c> us</c><00:05:55.759><c> i</c>

00:05:55.830 --> 00:05:55.840 align:start position:0%
the generic function that they give us i
 

00:05:55.840 --> 00:05:57.670 align:start position:0%
the generic function that they give us i
think<00:05:55.919><c> it's</c><00:05:56.080><c> called</c><00:05:56.400><c> is</c><00:05:56.720><c> subtree</c><00:05:57.440><c> so</c>

00:05:57.670 --> 00:05:57.680 align:start position:0%
think it's called is subtree so
 

00:05:57.680 --> 00:05:59.110 align:start position:0%
think it's called is subtree so
basically<00:05:58.080><c> that's</c><00:05:58.319><c> how</c><00:05:58.479><c> it's</c><00:05:58.560><c> going</c><00:05:58.720><c> to</c><00:05:58.800><c> work</c>

00:05:59.110 --> 00:05:59.120 align:start position:0%
basically that's how it's going to work
 

00:05:59.120 --> 00:06:00.870 align:start position:0%
basically that's how it's going to work
is<00:05:59.440><c> subtree</c><00:06:00.000><c> is</c><00:06:00.160><c> initially</c><00:06:00.560><c> going</c><00:06:00.639><c> to</c><00:06:00.720><c> be</c>

00:06:00.870 --> 00:06:00.880 align:start position:0%
is subtree is initially going to be
 

00:06:00.880 --> 00:06:05.510 align:start position:0%
is subtree is initially going to be
called<00:06:01.360><c> with</c><00:06:01.680><c> s</c><00:06:02.080><c> and</c><00:06:02.319><c> t</c><00:06:02.800><c> is</c><00:06:03.360><c> t</c><00:06:03.840><c> a</c><00:06:04.000><c> subtree</c><00:06:04.800><c> of</c><00:06:05.039><c> s</c>

00:06:05.510 --> 00:06:05.520 align:start position:0%
called with s and t is t a subtree of s
 

00:06:05.520 --> 00:06:07.510 align:start position:0%
called with s and t is t a subtree of s
well<00:06:05.919><c> we'll</c><00:06:06.160><c> check</c><00:06:06.479><c> is</c><00:06:06.639><c> it</c><00:06:06.720><c> the</c><00:06:06.880><c> same</c><00:06:07.199><c> tree</c>

00:06:07.510 --> 00:06:07.520 align:start position:0%
well we'll check is it the same tree
 

00:06:07.520 --> 00:06:09.909 align:start position:0%
well we'll check is it the same tree
first<00:06:07.919><c> right</c><00:06:08.160><c> okay</c><00:06:08.479><c> it's</c><00:06:08.720><c> not</c><00:06:08.960><c> the</c><00:06:09.199><c> same</c><00:06:09.520><c> tree</c>

00:06:09.909 --> 00:06:09.919 align:start position:0%
first right okay it's not the same tree
 

00:06:09.919 --> 00:06:13.029 align:start position:0%
first right okay it's not the same tree
as<00:06:10.479><c> s</c><00:06:11.039><c> so</c><00:06:11.280><c> then</c><00:06:11.520><c> we</c><00:06:11.680><c> want</c><00:06:11.840><c> to</c><00:06:12.000><c> know</c><00:06:12.479><c> is</c><00:06:12.720><c> it</c><00:06:12.880><c> a</c>

00:06:13.029 --> 00:06:13.039 align:start position:0%
as s so then we want to know is it a
 

00:06:13.039 --> 00:06:16.070 align:start position:0%
as s so then we want to know is it a
subtree<00:06:13.759><c> of</c><00:06:14.160><c> the</c><00:06:14.479><c> left</c><00:06:15.120><c> subtree</c><00:06:15.680><c> so</c><00:06:15.840><c> what</c><00:06:16.000><c> are</c>

00:06:16.070 --> 00:06:16.080 align:start position:0%
subtree of the left subtree so what are
 

00:06:16.080 --> 00:06:17.590 align:start position:0%
subtree of the left subtree so what are
we<00:06:16.240><c> going</c><00:06:16.319><c> to</c><00:06:16.400><c> do</c><00:06:16.560><c> in</c><00:06:16.720><c> that</c><00:06:16.880><c> case</c><00:06:17.199><c> well</c><00:06:17.440><c> we're</c>

00:06:17.590 --> 00:06:17.600 align:start position:0%
we going to do in that case well we're
 

00:06:17.600 --> 00:06:19.350 align:start position:0%
we going to do in that case well we're
going<00:06:17.680><c> to</c><00:06:17.840><c> call</c>

00:06:19.350 --> 00:06:19.360 align:start position:0%
going to call
 

00:06:19.360 --> 00:06:21.189 align:start position:0%
going to call
the<00:06:19.600><c> same</c><00:06:19.840><c> tree</c><00:06:20.080><c> function</c><00:06:20.400><c> is</c><00:06:20.560><c> it</c><00:06:20.639><c> the</c><00:06:20.880><c> same</c>

00:06:21.189 --> 00:06:21.199 align:start position:0%
the same tree function is it the same
 

00:06:21.199 --> 00:06:24.150 align:start position:0%
the same tree function is it the same
tree<00:06:21.600><c> as</c><00:06:21.919><c> the</c><00:06:22.080><c> left</c><00:06:22.720><c> sub</c><00:06:22.960><c> tree</c><00:06:23.520><c> so</c><00:06:23.680><c> that's</c><00:06:24.000><c> the</c>

00:06:24.150 --> 00:06:24.160 align:start position:0%
tree as the left sub tree so that's the
 

00:06:24.160 --> 00:06:26.230 align:start position:0%
tree as the left sub tree so that's the
main<00:06:24.479><c> idea</c><00:06:24.880><c> but</c><00:06:25.039><c> i</c><00:06:25.199><c> think</c><00:06:25.440><c> it</c><00:06:25.600><c> won't</c><00:06:26.000><c> make</c><00:06:26.160><c> a</c>

00:06:26.230 --> 00:06:26.240 align:start position:0%
main idea but i think it won't make a
 

00:06:26.240 --> 00:06:28.309 align:start position:0%
main idea but i think it won't make a
hundred<00:06:26.560><c> percent</c><00:06:27.120><c> sense</c><00:06:27.520><c> until</c><00:06:27.759><c> we</c><00:06:28.000><c> actually</c>

00:06:28.309 --> 00:06:28.319 align:start position:0%
hundred percent sense until we actually
 

00:06:28.319 --> 00:06:30.070 align:start position:0%
hundred percent sense until we actually
jump<00:06:28.560><c> into</c><00:06:28.800><c> the</c><00:06:28.880><c> code</c><00:06:29.120><c> so</c><00:06:29.280><c> let's</c><00:06:29.520><c> do</c><00:06:29.680><c> that</c><00:06:29.840><c> in</c><00:06:30.000><c> a</c>

00:06:30.070 --> 00:06:30.080 align:start position:0%
jump into the code so let's do that in a
 

00:06:30.080 --> 00:06:31.990 align:start position:0%
jump into the code so let's do that in a
moment<00:06:30.479><c> but</c><00:06:30.720><c> as</c><00:06:30.960><c> with</c><00:06:31.120><c> most</c><00:06:31.440><c> recursive</c>

00:06:31.990 --> 00:06:32.000 align:start position:0%
moment but as with most recursive
 

00:06:32.000 --> 00:06:33.430 align:start position:0%
moment but as with most recursive
problems<00:06:32.400><c> we</c><00:06:32.560><c> definitely</c><00:06:33.039><c> don't</c><00:06:33.199><c> want</c><00:06:33.360><c> to</c>

00:06:33.430 --> 00:06:33.440 align:start position:0%
problems we definitely don't want to
 

00:06:33.440 --> 00:06:36.070 align:start position:0%
problems we definitely don't want to
forget<00:06:33.919><c> about</c><00:06:34.240><c> the</c><00:06:34.479><c> important</c><00:06:35.039><c> edge</c><00:06:35.360><c> cases</c>

00:06:36.070 --> 00:06:36.080 align:start position:0%
forget about the important edge cases
 

00:06:36.080 --> 00:06:39.189 align:start position:0%
forget about the important edge cases
when<00:06:36.319><c> we</c><00:06:36.560><c> are</c><00:06:36.880><c> comparing</c><00:06:37.520><c> the</c><00:06:37.759><c> trees</c><00:06:38.319><c> so</c><00:06:38.880><c> first</c>

00:06:39.189 --> 00:06:39.199 align:start position:0%
when we are comparing the trees so first
 

00:06:39.199 --> 00:06:40.629 align:start position:0%
when we are comparing the trees so first
thing<00:06:39.680><c> let's</c><00:06:39.840><c> start</c><00:06:40.080><c> with</c><00:06:40.160><c> the</c><00:06:40.240><c> helper</c>

00:06:40.629 --> 00:06:40.639 align:start position:0%
thing let's start with the helper
 

00:06:40.639 --> 00:06:43.909 align:start position:0%
thing let's start with the helper
function<00:06:41.360><c> what</c><00:06:41.520><c> would</c><00:06:41.759><c> happen</c><00:06:42.319><c> if</c><00:06:42.800><c> both</c><00:06:43.280><c> trees</c>

00:06:43.909 --> 00:06:43.919 align:start position:0%
function what would happen if both trees
 

00:06:43.919 --> 00:06:46.230 align:start position:0%
function what would happen if both trees
were<00:06:44.319><c> null</c><00:06:44.800><c> in</c><00:06:44.960><c> that</c><00:06:45.199><c> case</c><00:06:45.520><c> are</c><00:06:45.680><c> they</c><00:06:45.840><c> the</c><00:06:46.000><c> same</c>

00:06:46.230 --> 00:06:46.240 align:start position:0%
were null in that case are they the same
 

00:06:46.240 --> 00:06:48.309 align:start position:0%
were null in that case are they the same
tree<00:06:46.479><c> if</c><00:06:46.560><c> they're</c><00:06:46.720><c> both</c><00:06:47.120><c> null</c><00:06:47.600><c> and</c><00:06:47.840><c> yeah</c><00:06:48.080><c> if</c>

00:06:48.309 --> 00:06:48.319 align:start position:0%
tree if they're both null and yeah if
 

00:06:48.319 --> 00:06:50.629 align:start position:0%
tree if they're both null and yeah if
both<00:06:48.639><c> trees</c><00:06:48.960><c> are</c><00:06:49.120><c> null</c><00:06:49.599><c> yes</c><00:06:49.919><c> they</c><00:06:50.240><c> are</c><00:06:50.400><c> the</c>

00:06:50.629 --> 00:06:50.639 align:start position:0%
both trees are null yes they are the
 

00:06:50.639 --> 00:06:53.430 align:start position:0%
both trees are null yes they are the
same<00:06:51.280><c> what</c><00:06:51.520><c> about</c><00:06:51.840><c> if</c><00:06:52.240><c> two</c><00:06:52.560><c> trees</c><00:06:53.039><c> like</c><00:06:53.280><c> this</c>

00:06:53.430 --> 00:06:53.440 align:start position:0%
same what about if two trees like this
 

00:06:53.440 --> 00:06:56.070 align:start position:0%
same what about if two trees like this
one<00:06:53.759><c> and</c><00:06:54.000><c> this</c><00:06:54.319><c> one</c><00:06:54.720><c> had</c><00:06:54.960><c> the</c><00:06:55.199><c> same</c><00:06:55.599><c> initial</c>

00:06:56.070 --> 00:06:56.080 align:start position:0%
one and this one had the same initial
 

00:06:56.080 --> 00:06:57.909 align:start position:0%
one and this one had the same initial
values<00:06:56.479><c> right</c><00:06:56.639><c> like</c><00:06:56.800><c> the</c><00:06:56.960><c> first</c><00:06:57.199><c> three</c><00:06:57.520><c> values</c>

00:06:57.909 --> 00:06:57.919 align:start position:0%
values right like the first three values
 

00:06:57.919 --> 00:06:59.510 align:start position:0%
values right like the first three values
we<00:06:58.000><c> can</c><00:06:58.160><c> see</c><00:06:58.400><c> are</c><00:06:58.479><c> the</c><00:06:58.639><c> same</c><00:06:58.800><c> but</c><00:06:58.960><c> what</c><00:06:59.120><c> if</c><00:06:59.280><c> one</c>

00:06:59.510 --> 00:06:59.520 align:start position:0%
we can see are the same but what if one
 

00:06:59.520 --> 00:07:02.629 align:start position:0%
we can see are the same but what if one
of<00:06:59.599><c> the</c><00:06:59.759><c> trees</c><00:07:00.080><c> had</c><00:07:00.319><c> an</c><00:07:00.560><c> extra</c><00:07:01.039><c> node</c><00:07:01.680><c> uh</c><00:07:02.080><c> here</c>

00:07:02.629 --> 00:07:02.639 align:start position:0%
of the trees had an extra node uh here
 

00:07:02.639 --> 00:07:04.950 align:start position:0%
of the trees had an extra node uh here
right<00:07:03.199><c> then</c><00:07:03.599><c> is</c><00:07:03.759><c> this</c><00:07:04.000><c> tree</c><00:07:04.240><c> the</c><00:07:04.319><c> same</c><00:07:04.639><c> as</c><00:07:04.800><c> this</c>

00:07:04.950 --> 00:07:04.960 align:start position:0%
right then is this tree the same as this
 

00:07:04.960 --> 00:07:06.950 align:start position:0%
right then is this tree the same as this
one<00:07:05.199><c> of</c><00:07:05.280><c> course</c><00:07:05.599><c> not</c><00:07:05.840><c> right</c><00:07:06.000><c> so</c><00:07:06.160><c> we'll</c><00:07:06.400><c> have</c><00:07:06.560><c> to</c>

00:07:06.950 --> 00:07:06.960 align:start position:0%
one of course not right so we'll have to
 

00:07:06.960 --> 00:07:08.950 align:start position:0%
one of course not right so we'll have to
keep<00:07:07.199><c> track</c><00:07:07.440><c> of</c><00:07:07.520><c> that</c><00:07:07.680><c> when</c><00:07:07.840><c> we</c><00:07:08.000><c> do</c><00:07:08.240><c> our</c><00:07:08.560><c> is</c>

00:07:08.950 --> 00:07:08.960 align:start position:0%
keep track of that when we do our is
 

00:07:08.960 --> 00:07:11.589 align:start position:0%
keep track of that when we do our is
same<00:07:09.280><c> tree</c><00:07:09.599><c> function</c><00:07:10.319><c> now</c><00:07:10.560><c> what</c><00:07:10.800><c> about</c><00:07:11.039><c> the</c><00:07:11.360><c> is</c>

00:07:11.589 --> 00:07:11.599 align:start position:0%
same tree function now what about the is
 

00:07:11.599 --> 00:07:13.909 align:start position:0%
same tree function now what about the is
subtree<00:07:12.160><c> recursive</c><00:07:12.720><c> function</c><00:07:13.280><c> if</c><00:07:13.520><c> both</c><00:07:13.759><c> of</c>

00:07:13.909 --> 00:07:13.919 align:start position:0%
subtree recursive function if both of
 

00:07:13.919 --> 00:07:16.550 align:start position:0%
subtree recursive function if both of
these<00:07:14.240><c> trees</c><00:07:14.639><c> are</c><00:07:14.960><c> null</c><00:07:15.440><c> is</c><00:07:15.599><c> our</c><00:07:15.840><c> is</c><00:07:16.080><c> subtree</c>

00:07:16.550 --> 00:07:16.560 align:start position:0%
these trees are null is our is subtree
 

00:07:16.560 --> 00:07:18.950 align:start position:0%
these trees are null is our is subtree
going<00:07:16.639><c> to</c><00:07:16.800><c> return</c><00:07:17.199><c> true</c><00:07:17.680><c> is</c><00:07:17.919><c> t</c><00:07:18.400><c> a</c><00:07:18.560><c> nulled</c>

00:07:18.950 --> 00:07:18.960 align:start position:0%
going to return true is t a nulled
 

00:07:18.960 --> 00:07:21.589 align:start position:0%
going to return true is t a nulled
subtree<00:07:19.440><c> a</c><00:07:19.520><c> subtree</c><00:07:20.080><c> of</c><00:07:20.240><c> another</c><00:07:20.800><c> null</c><00:07:21.039><c> tree</c>

00:07:21.589 --> 00:07:21.599 align:start position:0%
subtree a subtree of another null tree
 

00:07:21.599 --> 00:07:23.350 align:start position:0%
subtree a subtree of another null tree
well<00:07:21.840><c> that's</c><00:07:22.080><c> going</c><00:07:22.160><c> to</c><00:07:22.319><c> depend</c><00:07:22.720><c> on</c><00:07:22.880><c> our</c><00:07:23.039><c> same</c>

00:07:23.350 --> 00:07:23.360 align:start position:0%
well that's going to depend on our same
 

00:07:23.360 --> 00:07:25.029 align:start position:0%
well that's going to depend on our same
tree<00:07:23.599><c> helper</c><00:07:24.000><c> function</c><00:07:24.400><c> and</c><00:07:24.639><c> it's</c><00:07:24.880><c> going</c><00:07:24.960><c> to</c>

00:07:25.029 --> 00:07:25.039 align:start position:0%
tree helper function and it's going to
 

00:07:25.039 --> 00:07:27.749 align:start position:0%
tree helper function and it's going to
return<00:07:25.440><c> true</c><00:07:25.759><c> so</c><00:07:26.000><c> yes</c><00:07:26.479><c> a</c><00:07:26.639><c> null</c><00:07:26.960><c> sub</c><00:07:27.199><c> tree</c><00:07:27.520><c> is</c><00:07:27.680><c> a</c>

00:07:27.749 --> 00:07:27.759 align:start position:0%
return true so yes a null sub tree is a
 

00:07:27.759 --> 00:07:29.749 align:start position:0%
return true so yes a null sub tree is a
sub<00:07:28.000><c> tree</c><00:07:28.240><c> of</c><00:07:28.400><c> another</c><00:07:28.720><c> null</c><00:07:28.960><c> sub</c><00:07:29.199><c> tree</c><00:07:29.599><c> but</c>

00:07:29.749 --> 00:07:29.759 align:start position:0%
sub tree of another null sub tree but
 

00:07:29.759 --> 00:07:32.629 align:start position:0%
sub tree of another null sub tree but
the<00:07:29.919><c> more</c><00:07:30.240><c> interesting</c><00:07:31.199><c> edge</c><00:07:31.520><c> case</c><00:07:31.919><c> is</c><00:07:32.400><c> what</c>

00:07:32.629 --> 00:07:32.639 align:start position:0%
the more interesting edge case is what
 

00:07:32.639 --> 00:07:37.430 align:start position:0%
the more interesting edge case is what
if<00:07:33.039><c> s</c><00:07:33.599><c> was</c><00:07:34.080><c> null</c><00:07:34.560><c> right</c><00:07:34.960><c> s</c><00:07:35.280><c> is</c><00:07:35.520><c> empty</c><00:07:36.240><c> but</c><00:07:36.720><c> t</c><00:07:37.120><c> is</c>

00:07:37.430 --> 00:07:37.440 align:start position:0%
if s was null right s is empty but t is
 

00:07:37.440 --> 00:07:40.870 align:start position:0%
if s was null right s is empty but t is
non-empty<00:07:38.560><c> in</c><00:07:38.800><c> that</c><00:07:39.039><c> case</c><00:07:39.440><c> is</c><00:07:39.840><c> t</c><00:07:40.160><c> a</c><00:07:40.400><c> sub</c><00:07:40.639><c> tree</c>

00:07:40.870 --> 00:07:40.880 align:start position:0%
non-empty in that case is t a sub tree
 

00:07:40.880 --> 00:07:43.189 align:start position:0%
non-empty in that case is t a sub tree
of<00:07:40.960><c> this</c><00:07:41.199><c> one</c><00:07:41.599><c> nope</c><00:07:42.080><c> it's</c><00:07:42.319><c> not</c><00:07:42.800><c> right</c><00:07:42.960><c> because</c>

00:07:43.189 --> 00:07:43.199 align:start position:0%
of this one nope it's not right because
 

00:07:43.199 --> 00:07:45.270 align:start position:0%
of this one nope it's not right because
this<00:07:43.440><c> tree</c><00:07:43.680><c> cannot</c><00:07:44.000><c> be</c><00:07:44.160><c> found</c><00:07:44.560><c> anywhere</c><00:07:45.120><c> in</c>

00:07:45.270 --> 00:07:45.280 align:start position:0%
this tree cannot be found anywhere in
 

00:07:45.280 --> 00:07:47.909 align:start position:0%
this tree cannot be found anywhere in
the<00:07:45.520><c> s</c><00:07:45.840><c> tree</c><00:07:46.240><c> but</c><00:07:46.720><c> what</c><00:07:46.879><c> if</c><00:07:47.039><c> the</c><00:07:47.280><c> opposite</c><00:07:47.680><c> was</c>

00:07:47.909 --> 00:07:47.919 align:start position:0%
the s tree but what if the opposite was
 

00:07:47.919 --> 00:07:51.350 align:start position:0%
the s tree but what if the opposite was
true<00:07:48.080><c> what</c><00:07:48.240><c> if</c><00:07:48.479><c> t</c><00:07:49.120><c> was</c><00:07:49.280><c> an</c><00:07:49.599><c> empty</c><00:07:50.319><c> tree</c><00:07:50.879><c> then</c><00:07:51.199><c> is</c>

00:07:51.350 --> 00:07:51.360 align:start position:0%
true what if t was an empty tree then is
 

00:07:51.360 --> 00:07:53.430 align:start position:0%
true what if t was an empty tree then is
an<00:07:51.520><c> empty</c><00:07:51.840><c> tree</c><00:07:52.160><c> a</c><00:07:52.319><c> null</c><00:07:52.560><c> tree</c><00:07:52.960><c> is</c><00:07:53.199><c> it</c><00:07:53.360><c> a</c>

00:07:53.430 --> 00:07:53.440 align:start position:0%
an empty tree a null tree is it a
 

00:07:53.440 --> 00:07:56.790 align:start position:0%
an empty tree a null tree is it a
sub-tree<00:07:54.000><c> of</c><00:07:54.160><c> a</c><00:07:54.479><c> non-empty</c><00:07:55.280><c> tree</c><00:07:55.919><c> and</c><00:07:56.479><c> in</c><00:07:56.639><c> this</c>

00:07:56.790 --> 00:07:56.800 align:start position:0%
sub-tree of a non-empty tree and in this
 

00:07:56.800 --> 00:07:59.589 align:start position:0%
sub-tree of a non-empty tree and in this
case<00:07:57.039><c> the</c><00:07:57.280><c> answer</c><00:07:57.599><c> is</c><00:07:57.840><c> yes</c><00:07:58.639><c> and</c><00:07:59.120><c> the</c><00:07:59.280><c> main</c>

00:07:59.589 --> 00:07:59.599 align:start position:0%
case the answer is yes and the main
 

00:07:59.599 --> 00:08:01.510 align:start position:0%
case the answer is yes and the main
intuition<00:08:00.080><c> i</c><00:08:00.240><c> use</c><00:08:00.479><c> is</c><00:08:00.639><c> basically</c><00:08:01.120><c> you</c><00:08:01.280><c> know</c><00:08:01.360><c> if</c>

00:08:01.510 --> 00:08:01.520 align:start position:0%
intuition i use is basically you know if
 

00:08:01.520 --> 00:08:03.510 align:start position:0%
intuition i use is basically you know if
we<00:08:01.599><c> had</c><00:08:01.840><c> a</c><00:08:01.919><c> null</c><00:08:02.160><c> tree</c><00:08:02.400><c> here</c><00:08:02.800><c> we</c><00:08:02.960><c> could</c><00:08:03.120><c> just</c><00:08:03.280><c> go</c>

00:08:03.510 --> 00:08:03.520 align:start position:0%
we had a null tree here we could just go
 

00:08:03.520 --> 00:08:05.510 align:start position:0%
we had a null tree here we could just go
to<00:08:03.680><c> one</c><00:08:03.840><c> of</c><00:08:03.919><c> the</c><00:08:04.080><c> children</c><00:08:04.639><c> of</c><00:08:05.120><c> you</c><00:08:05.280><c> know</c><00:08:05.360><c> one</c>

00:08:05.510 --> 00:08:05.520 align:start position:0%
to one of the children of you know one
 

00:08:05.520 --> 00:08:07.270 align:start position:0%
to one of the children of you know one
of<00:08:05.599><c> the</c><00:08:05.759><c> leaf</c><00:08:06.080><c> children</c><00:08:06.479><c> of</c><00:08:06.560><c> the</c><00:08:06.720><c> other</c><00:08:06.960><c> tree</c>

00:08:07.270 --> 00:08:07.280 align:start position:0%
of the leaf children of the other tree
 

00:08:07.280 --> 00:08:09.990 align:start position:0%
of the leaf children of the other tree
and<00:08:07.520><c> technically</c><00:08:08.080><c> these</c><00:08:08.400><c> have</c><00:08:08.800><c> a</c><00:08:09.440><c> null</c><00:08:09.759><c> sub</c>

00:08:09.990 --> 00:08:10.000 align:start position:0%
and technically these have a null sub
 

00:08:10.000 --> 00:08:12.150 align:start position:0%
and technically these have a null sub
tree<00:08:10.319><c> because</c><00:08:10.960><c> they</c><00:08:11.120><c> do</c><00:08:11.280><c> have</c><00:08:11.440><c> a</c><00:08:11.520><c> null</c><00:08:11.840><c> child</c>

00:08:12.150 --> 00:08:12.160 align:start position:0%
tree because they do have a null child
 

00:08:12.160 --> 00:08:13.990 align:start position:0%
tree because they do have a null child
so<00:08:12.319><c> that's</c><00:08:12.479><c> kind</c><00:08:12.560><c> of</c><00:08:12.639><c> the</c><00:08:12.800><c> intuition</c><00:08:13.280><c> i</c><00:08:13.520><c> use</c>

00:08:13.990 --> 00:08:14.000 align:start position:0%
so that's kind of the intuition i use
 

00:08:14.000 --> 00:08:16.230 align:start position:0%
so that's kind of the intuition i use
but<00:08:14.240><c> that</c><00:08:14.479><c> might</c><00:08:14.720><c> be</c><00:08:14.879><c> a</c><00:08:14.960><c> good</c><00:08:15.199><c> clarification</c>

00:08:16.230 --> 00:08:16.240 align:start position:0%
but that might be a good clarification
 

00:08:16.240 --> 00:08:18.790 align:start position:0%
but that might be a good clarification
question<00:08:16.879><c> to</c><00:08:17.120><c> ask</c><00:08:17.440><c> in</c><00:08:17.599><c> a</c><00:08:17.680><c> real</c><00:08:18.000><c> interview</c><00:08:18.479><c> but</c>

00:08:18.790 --> 00:08:18.800 align:start position:0%
question to ask in a real interview but
 

00:08:18.800 --> 00:08:21.589 align:start position:0%
question to ask in a real interview but
in<00:08:19.120><c> leak</c><00:08:19.360><c> code's</c><00:08:19.759><c> case</c><00:08:20.240><c> i</c><00:08:20.319><c> think</c><00:08:20.479><c> they</c><00:08:20.720><c> do</c><00:08:21.039><c> want</c>

00:08:21.589 --> 00:08:21.599 align:start position:0%
in leak code's case i think they do want
 

00:08:21.599 --> 00:08:23.029 align:start position:0%
in leak code's case i think they do want
that<00:08:21.919><c> to</c><00:08:22.080><c> be</c>

00:08:23.029 --> 00:08:23.039 align:start position:0%
that to be
 

00:08:23.039 --> 00:08:25.749 align:start position:0%
that to be
true<00:08:23.759><c> so</c><00:08:23.919><c> those</c><00:08:24.160><c> are</c><00:08:24.240><c> the</c><00:08:24.400><c> main</c><00:08:25.120><c> topics</c><00:08:25.520><c> that</c><00:08:25.680><c> i</c>

00:08:25.749 --> 00:08:25.759 align:start position:0%
true so those are the main topics that i
 

00:08:25.759 --> 00:08:27.830 align:start position:0%
true so those are the main topics that i
wanted<00:08:26.000><c> to</c><00:08:26.080><c> go</c><00:08:26.319><c> over</c><00:08:26.720><c> so</c><00:08:26.879><c> now</c><00:08:27.120><c> let's</c><00:08:27.360><c> actually</c>

00:08:27.830 --> 00:08:27.840 align:start position:0%
wanted to go over so now let's actually
 

00:08:27.840 --> 00:08:29.510 align:start position:0%
wanted to go over so now let's actually
jump<00:08:28.080><c> into</c><00:08:28.240><c> the</c><00:08:28.400><c> code</c><00:08:28.720><c> and</c><00:08:28.879><c> see</c><00:08:29.039><c> how</c><00:08:29.199><c> we</c><00:08:29.360><c> can</c>

00:08:29.510 --> 00:08:29.520 align:start position:0%
jump into the code and see how we can
 

00:08:29.520 --> 00:08:31.670 align:start position:0%
jump into the code and see how we can
implement<00:08:29.919><c> the</c><00:08:30.080><c> solution</c><00:08:30.879><c> okay</c><00:08:31.120><c> so</c><00:08:31.280><c> now</c><00:08:31.440><c> let's</c>

00:08:31.670 --> 00:08:31.680 align:start position:0%
implement the solution okay so now let's
 

00:08:31.680 --> 00:08:33.589 align:start position:0%
implement the solution okay so now let's
get<00:08:31.840><c> into</c><00:08:32.080><c> the</c><00:08:32.240><c> code</c><00:08:32.560><c> and</c><00:08:32.719><c> like</c><00:08:32.880><c> i</c><00:08:33.039><c> said</c><00:08:33.279><c> we</c><00:08:33.519><c> are</c>

00:08:33.589 --> 00:08:33.599 align:start position:0%
get into the code and like i said we are
 

00:08:33.599 --> 00:08:35.430 align:start position:0%
get into the code and like i said we are
going<00:08:33.760><c> to</c><00:08:33.839><c> define</c><00:08:34.240><c> one</c><00:08:34.399><c> more</c><00:08:34.719><c> function</c><00:08:35.360><c> a</c>

00:08:35.430 --> 00:08:35.440 align:start position:0%
going to define one more function a
 

00:08:35.440 --> 00:08:38.149 align:start position:0%
going to define one more function a
helper<00:08:35.839><c> function</c><00:08:36.240><c> same</c><00:08:36.719><c> tree</c><00:08:37.360><c> which</c><00:08:37.760><c> is</c><00:08:37.919><c> just</c>

00:08:38.149 --> 00:08:38.159 align:start position:0%
helper function same tree which is just
 

00:08:38.159 --> 00:08:39.509 align:start position:0%
helper function same tree which is just
going<00:08:38.320><c> to</c><00:08:38.479><c> pass</c>

00:08:39.509 --> 00:08:39.519 align:start position:0%
going to pass
 

00:08:39.519 --> 00:08:42.310 align:start position:0%
going to pass
in<00:08:39.919><c> the</c><00:08:40.080><c> same</c><00:08:40.399><c> parameters</c><00:08:41.120><c> right</c><00:08:41.360><c> two</c><00:08:41.599><c> trees</c><00:08:42.000><c> s</c>

00:08:42.310 --> 00:08:42.320 align:start position:0%
in the same parameters right two trees s
 

00:08:42.320 --> 00:08:45.350 align:start position:0%
in the same parameters right two trees s
and<00:08:42.560><c> t</c><00:08:43.120><c> and</c><00:08:43.279><c> then</c><00:08:43.519><c> let</c><00:08:43.760><c> us</c><00:08:44.000><c> know</c><00:08:44.720><c> if</c><00:08:45.040><c> they</c><00:08:45.200><c> are</c>

00:08:45.350 --> 00:08:45.360 align:start position:0%
and t and then let us know if they are
 

00:08:45.360 --> 00:08:47.190 align:start position:0%
and t and then let us know if they are
the<00:08:45.519><c> same</c><00:08:45.760><c> tree</c><00:08:46.080><c> so</c><00:08:46.240><c> well</c>

00:08:47.190 --> 00:08:47.200 align:start position:0%
the same tree so well
 

00:08:47.200 --> 00:08:49.190 align:start position:0%
the same tree so well
let's<00:08:47.440><c> actually</c><00:08:47.760><c> start</c><00:08:48.000><c> with</c><00:08:48.160><c> this</c><00:08:48.320><c> function</c>

00:08:49.190 --> 00:08:49.200 align:start position:0%
let's actually start with this function
 

00:08:49.200 --> 00:08:50.870 align:start position:0%
let's actually start with this function
because<00:08:49.360><c> i</c><00:08:49.440><c> think</c><00:08:49.600><c> it</c><00:08:49.760><c> will</c><00:08:49.839><c> help</c><00:08:50.080><c> us</c><00:08:50.560><c> finish</c>

00:08:50.870 --> 00:08:50.880 align:start position:0%
because i think it will help us finish
 

00:08:50.880 --> 00:08:53.190 align:start position:0%
because i think it will help us finish
the<00:08:51.040><c> rest</c><00:08:51.279><c> of</c><00:08:51.440><c> it</c><00:08:51.760><c> so</c><00:08:51.920><c> the</c><00:08:52.080><c> first</c><00:08:52.320><c> base</c><00:08:52.640><c> cases</c>

00:08:53.190 --> 00:08:53.200 align:start position:0%
the rest of it so the first base cases
 

00:08:53.200 --> 00:08:56.150 align:start position:0%
the rest of it so the first base cases
if<00:08:53.519><c> we</c><00:08:53.760><c> are</c><00:08:54.000><c> given</c><00:08:54.480><c> empty</c><00:08:54.800><c> trees</c><00:08:55.120><c> right</c><00:08:55.360><c> if</c><00:08:55.760><c> s</c>

00:08:56.150 --> 00:08:56.160 align:start position:0%
if we are given empty trees right if s
 

00:08:56.160 --> 00:08:57.750 align:start position:0%
if we are given empty trees right if s
is<00:08:56.320><c> empty</c><00:08:56.800><c> and</c>

00:08:57.750 --> 00:08:57.760 align:start position:0%
is empty and
 

00:08:57.760 --> 00:08:59.910 align:start position:0%
is empty and
t<00:08:58.080><c> is</c><00:08:58.240><c> empty</c><00:08:58.560><c> they're</c><00:08:58.720><c> both</c><00:08:59.120><c> null</c><00:08:59.680><c> in</c><00:08:59.760><c> that</c>

00:08:59.910 --> 00:08:59.920 align:start position:0%
t is empty they're both null in that
 

00:08:59.920 --> 00:09:01.350 align:start position:0%
t is empty they're both null in that
case<00:09:00.080><c> what</c><00:09:00.240><c> do</c><00:09:00.320><c> we</c><00:09:00.399><c> want</c><00:09:00.560><c> to</c><00:09:00.640><c> return</c><00:09:01.040><c> well</c><00:09:01.279><c> if</c>

00:09:01.350 --> 00:09:01.360 align:start position:0%
case what do we want to return well if
 

00:09:01.360 --> 00:09:03.110 align:start position:0%
case what do we want to return well if
they're<00:09:01.519><c> both</c><00:09:01.839><c> empty</c><00:09:02.240><c> then</c><00:09:02.480><c> they</c><00:09:02.720><c> are</c><00:09:02.959><c> the</c>

00:09:03.110 --> 00:09:03.120 align:start position:0%
they're both empty then they are the
 

00:09:03.120 --> 00:09:05.190 align:start position:0%
they're both empty then they are the
same<00:09:03.360><c> tree</c><00:09:03.680><c> technically</c><00:09:04.240><c> so</c><00:09:04.399><c> we</c><00:09:04.560><c> can</c><00:09:04.640><c> go</c><00:09:04.800><c> ahead</c>

00:09:05.190 --> 00:09:05.200 align:start position:0%
same tree technically so we can go ahead
 

00:09:05.200 --> 00:09:08.150 align:start position:0%
same tree technically so we can go ahead
and<00:09:05.680><c> return</c><00:09:06.160><c> true</c><00:09:06.800><c> now</c><00:09:06.959><c> if</c><00:09:07.120><c> they're</c><00:09:07.519><c> not</c><00:09:07.839><c> both</c>

00:09:08.150 --> 00:09:08.160 align:start position:0%
and return true now if they're not both
 

00:09:08.160 --> 00:09:10.949 align:start position:0%
and return true now if they're not both
empty<00:09:08.880><c> then</c><00:09:09.279><c> we</c><00:09:09.600><c> have</c><00:09:09.839><c> to</c><00:09:10.080><c> actually</c><00:09:10.480><c> compare</c>

00:09:10.949 --> 00:09:10.959 align:start position:0%
empty then we have to actually compare
 

00:09:10.959 --> 00:09:12.710 align:start position:0%
empty then we have to actually compare
them<00:09:11.519><c> so</c><00:09:11.680><c> we</c><00:09:11.839><c> have</c><00:09:11.920><c> to</c><00:09:12.000><c> compare</c><00:09:12.399><c> them</c><00:09:12.560><c> but</c>

00:09:12.710 --> 00:09:12.720 align:start position:0%
them so we have to compare them but
 

00:09:12.720 --> 00:09:14.790 align:start position:0%
them so we have to compare them but
technically<00:09:13.279><c> one</c><00:09:13.440><c> of</c><00:09:13.600><c> them</c><00:09:14.000><c> could</c><00:09:14.240><c> still</c><00:09:14.560><c> be</c>

00:09:14.790 --> 00:09:14.800 align:start position:0%
technically one of them could still be
 

00:09:14.800 --> 00:09:16.550 align:start position:0%
technically one of them could still be
empty<00:09:15.120><c> so</c><00:09:15.279><c> let's</c><00:09:15.440><c> make</c><00:09:15.680><c> sure</c><00:09:16.000><c> both</c><00:09:16.240><c> of</c><00:09:16.320><c> them</c>

00:09:16.550 --> 00:09:16.560 align:start position:0%
empty so let's make sure both of them
 

00:09:16.560 --> 00:09:20.070 align:start position:0%
empty so let's make sure both of them
are<00:09:16.800><c> not</c><00:09:17.120><c> empty</c><00:09:17.519><c> first</c><00:09:17.839><c> right</c><00:09:18.000><c> so</c><00:09:18.240><c> if</c><00:09:18.560><c> s</c><00:09:19.200><c> and</c><00:09:19.760><c> t</c>

00:09:20.070 --> 00:09:20.080 align:start position:0%
are not empty first right so if s and t
 

00:09:20.080 --> 00:09:22.389 align:start position:0%
are not empty first right so if s and t
are<00:09:20.240><c> both</c><00:09:20.560><c> non-empty</c><00:09:21.680><c> and</c>

00:09:22.389 --> 00:09:22.399 align:start position:0%
are both non-empty and
 

00:09:22.399 --> 00:09:24.389 align:start position:0%
are both non-empty and
the<00:09:22.640><c> values</c><00:09:23.120><c> of</c><00:09:23.200><c> both</c><00:09:23.440><c> of</c><00:09:23.519><c> these</c><00:09:23.760><c> are</c><00:09:24.000><c> the</c><00:09:24.160><c> same</c>

00:09:24.389 --> 00:09:24.399 align:start position:0%
the values of both of these are the same
 

00:09:24.399 --> 00:09:25.829 align:start position:0%
the values of both of these are the same
right<00:09:24.560><c> because</c><00:09:24.720><c> that's</c><00:09:24.959><c> of</c><00:09:25.120><c> course</c><00:09:25.519><c> how</c><00:09:25.680><c> we</c>

00:09:25.829 --> 00:09:25.839 align:start position:0%
right because that's of course how we
 

00:09:25.839 --> 00:09:27.430 align:start position:0%
right because that's of course how we
determine<00:09:26.320><c> if</c><00:09:26.399><c> two</c><00:09:26.640><c> trees</c><00:09:26.880><c> are</c><00:09:27.040><c> the</c><00:09:27.120><c> same</c><00:09:27.360><c> if</c>

00:09:27.430 --> 00:09:27.440 align:start position:0%
determine if two trees are the same if
 

00:09:27.440 --> 00:09:29.990 align:start position:0%
determine if two trees are the same if
the<00:09:27.519><c> values</c><00:09:28.000><c> are</c><00:09:28.080><c> the</c><00:09:28.160><c> same</c><00:09:28.320><c> so</c><00:09:28.480><c> if</c><00:09:28.720><c> s</c><00:09:29.279><c> eval</c><00:09:29.839><c> is</c>

00:09:29.990 --> 00:09:30.000 align:start position:0%
the values are the same so if s eval is
 

00:09:30.000 --> 00:09:32.710 align:start position:0%
the values are the same so if s eval is
the<00:09:30.160><c> same</c><00:09:30.480><c> as</c><00:09:31.040><c> t</c><00:09:31.279><c> val</c><00:09:32.000><c> then</c><00:09:32.240><c> what</c><00:09:32.399><c> are</c><00:09:32.480><c> we</c><00:09:32.640><c> going</c>

00:09:32.710 --> 00:09:32.720 align:start position:0%
the same as t val then what are we going
 

00:09:32.720 --> 00:09:34.550 align:start position:0%
the same as t val then what are we going
to<00:09:32.800><c> do</c><00:09:33.040><c> are</c><00:09:33.120><c> we</c><00:09:33.200><c> going</c><00:09:33.279><c> to</c><00:09:33.360><c> return</c><00:09:33.839><c> something</c>

00:09:34.550 --> 00:09:34.560 align:start position:0%
to do are we going to return something
 

00:09:34.560 --> 00:09:36.070 align:start position:0%
to do are we going to return something
well<00:09:34.800><c> we</c><00:09:34.959><c> know</c><00:09:35.120><c> that</c><00:09:35.279><c> these</c><00:09:35.519><c> two</c><00:09:35.760><c> nodes</c><00:09:36.000><c> are</c>

00:09:36.070 --> 00:09:36.080 align:start position:0%
well we know that these two nodes are
 

00:09:36.080 --> 00:09:37.670 align:start position:0%
well we know that these two nodes are
the<00:09:36.240><c> same</c><00:09:36.399><c> but</c><00:09:36.560><c> we</c><00:09:36.720><c> still</c><00:09:36.880><c> have</c><00:09:37.040><c> to</c><00:09:37.200><c> compare</c>

00:09:37.670 --> 00:09:37.680 align:start position:0%
the same but we still have to compare
 

00:09:37.680 --> 00:09:40.310 align:start position:0%
the same but we still have to compare
the<00:09:37.920><c> rest</c><00:09:38.320><c> of</c><00:09:38.560><c> the</c><00:09:38.800><c> sub</c><00:09:39.120><c> trees</c><00:09:39.839><c> right</c><00:09:40.000><c> so</c><00:09:40.160><c> we</c>

00:09:40.310 --> 00:09:40.320 align:start position:0%
the rest of the sub trees right so we
 

00:09:40.320 --> 00:09:42.550 align:start position:0%
the rest of the sub trees right so we
have<00:09:40.399><c> to</c><00:09:40.480><c> compare</c><00:09:40.880><c> the</c><00:09:41.120><c> s</c><00:09:41.600><c> the</c><00:09:41.839><c> left</c><00:09:42.080><c> subtree</c>

00:09:42.550 --> 00:09:42.560 align:start position:0%
have to compare the s the left subtree
 

00:09:42.560 --> 00:09:44.710 align:start position:0%
have to compare the s the left subtree
of<00:09:42.720><c> s</c><00:09:42.959><c> and</c><00:09:43.200><c> t</c><00:09:43.600><c> and</c><00:09:43.760><c> we</c><00:09:43.920><c> have</c><00:09:44.000><c> to</c><00:09:44.160><c> compare</c><00:09:44.560><c> the</c>

00:09:44.710 --> 00:09:44.720 align:start position:0%
of s and t and we have to compare the
 

00:09:44.720 --> 00:09:47.030 align:start position:0%
of s and t and we have to compare the
right<00:09:44.959><c> subtree</c><00:09:45.519><c> of</c><00:09:45.680><c> s</c><00:09:45.920><c> and</c><00:09:46.080><c> t</c>

00:09:47.030 --> 00:09:47.040 align:start position:0%
right subtree of s and t
 

00:09:47.040 --> 00:09:48.949 align:start position:0%
right subtree of s and t
right<00:09:47.279><c> so</c><00:09:47.440><c> this</c><00:09:47.680><c> is</c><00:09:47.760><c> a</c><00:09:47.839><c> recursive</c><00:09:48.399><c> definition</c>

00:09:48.949 --> 00:09:48.959 align:start position:0%
right so this is a recursive definition
 

00:09:48.959 --> 00:09:51.990 align:start position:0%
right so this is a recursive definition
so<00:09:49.920><c> what</c><00:09:50.080><c> we're</c><00:09:50.240><c> going</c><00:09:50.320><c> to</c><00:09:50.399><c> do</c><00:09:50.640><c> is</c><00:09:50.959><c> call</c><00:09:51.600><c> same</c>

00:09:51.990 --> 00:09:52.000 align:start position:0%
so what we're going to do is call same
 

00:09:52.000 --> 00:09:54.790 align:start position:0%
so what we're going to do is call same
tree<00:09:52.720><c> passing</c><00:09:53.200><c> in</c><00:09:53.519><c> the</c><00:09:53.680><c> sub</c><00:09:53.920><c> trees</c><00:09:54.240><c> right</c><00:09:54.399><c> so</c><00:09:54.560><c> s</c>

00:09:54.790 --> 00:09:54.800 align:start position:0%
tree passing in the sub trees right so s
 

00:09:54.800 --> 00:09:58.389 align:start position:0%
tree passing in the sub trees right so s
dot<00:09:55.120><c> left</c><00:09:55.519><c> and</c><00:09:56.240><c> t</c><00:09:56.480><c> dot</c><00:09:56.720><c> left</c><00:09:57.279><c> we</c><00:09:57.440><c> want</c><00:09:57.680><c> to</c><00:09:57.760><c> know</c>

00:09:58.389 --> 00:09:58.399 align:start position:0%
dot left and t dot left we want to know
 

00:09:58.399 --> 00:10:00.230 align:start position:0%
dot left and t dot left we want to know
the<00:09:58.560><c> left</c><00:09:58.800><c> sub</c><00:09:59.040><c> trees</c><00:09:59.279><c> are</c><00:09:59.360><c> the</c><00:09:59.519><c> same</c><00:09:59.839><c> but</c><00:10:00.000><c> we</c>

00:10:00.230 --> 00:10:00.240 align:start position:0%
the left sub trees are the same but we
 

00:10:00.240 --> 00:10:02.710 align:start position:0%
the left sub trees are the same but we
also<00:10:00.480><c> want</c><00:10:00.640><c> to</c><00:10:00.720><c> know</c><00:10:01.040><c> if</c><00:10:01.279><c> the</c><00:10:01.519><c> right</c><00:10:01.760><c> subtrees</c>

00:10:02.710 --> 00:10:02.720 align:start position:0%
also want to know if the right subtrees
 

00:10:02.720 --> 00:10:05.509 align:start position:0%
also want to know if the right subtrees
are<00:10:03.120><c> the</c><00:10:03.360><c> same</c><00:10:04.079><c> so</c><00:10:04.320><c> we'll</c><00:10:04.640><c> do</c><00:10:04.800><c> the</c><00:10:04.959><c> same</c>

00:10:05.509 --> 00:10:05.519 align:start position:0%
are the same so we'll do the same
 

00:10:05.519 --> 00:10:08.550 align:start position:0%
are the same so we'll do the same
calculation<00:10:06.480><c> with</c><00:10:06.959><c> both</c><00:10:07.360><c> of</c><00:10:07.600><c> these</c><00:10:08.240><c> and</c>

00:10:08.550 --> 00:10:08.560 align:start position:0%
calculation with both of these and
 

00:10:08.560 --> 00:10:10.150 align:start position:0%
calculation with both of these and
what's<00:10:08.800><c> the</c><00:10:08.959><c> return</c><00:10:09.279><c> value</c><00:10:09.680><c> going</c><00:10:09.760><c> to</c><00:10:09.839><c> be</c>

00:10:10.150 --> 00:10:10.160 align:start position:0%
what's the return value going to be
 

00:10:10.160 --> 00:10:13.750 align:start position:0%
what's the return value going to be
basically<00:10:10.640><c> if</c><00:10:10.959><c> both</c><00:10:11.360><c> of</c><00:10:11.519><c> these</c><00:10:12.240><c> are</c><00:10:12.959><c> uh</c><00:10:13.360><c> true</c>

00:10:13.750 --> 00:10:13.760 align:start position:0%
basically if both of these are uh true
 

00:10:13.760 --> 00:10:15.350 align:start position:0%
basically if both of these are uh true
if<00:10:13.839><c> both</c><00:10:14.079><c> of</c><00:10:14.160><c> these</c><00:10:14.320><c> return</c><00:10:14.720><c> true</c><00:10:14.959><c> meaning</c><00:10:15.200><c> the</c>

00:10:15.350 --> 00:10:15.360 align:start position:0%
if both of these return true meaning the
 

00:10:15.360 --> 00:10:18.870 align:start position:0%
if both of these return true meaning the
left<00:10:15.600><c> subtree</c><00:10:16.399><c> and</c><00:10:16.800><c> the</c><00:10:16.959><c> right</c><00:10:17.200><c> subtree</c><00:10:18.079><c> were</c>

00:10:18.870 --> 00:10:18.880 align:start position:0%
left subtree and the right subtree were
 

00:10:18.880 --> 00:10:20.870 align:start position:0%
left subtree and the right subtree were
the<00:10:19.040><c> same</c><00:10:19.519><c> then</c><00:10:19.680><c> we</c><00:10:19.839><c> can</c><00:10:20.000><c> return</c><00:10:20.320><c> that</c><00:10:20.480><c> value</c>

00:10:20.870 --> 00:10:20.880 align:start position:0%
the same then we can return that value
 

00:10:20.880 --> 00:10:22.230 align:start position:0%
the same then we can return that value
so<00:10:21.040><c> what</c><00:10:21.200><c> i'm</c><00:10:21.279><c> just</c><00:10:21.360><c> going</c><00:10:21.440><c> to</c><00:10:21.519><c> do</c><00:10:21.680><c> is</c><00:10:21.839><c> take</c><00:10:22.000><c> the</c>

00:10:22.230 --> 00:10:22.240 align:start position:0%
so what i'm just going to do is take the
 

00:10:22.240 --> 00:10:25.030 align:start position:0%
so what i'm just going to do is take the
and<00:10:22.720><c> the</c><00:10:22.880><c> conditional</c><00:10:23.519><c> and</c><00:10:23.920><c> of</c><00:10:24.160><c> both</c><00:10:24.399><c> of</c><00:10:24.560><c> these</c>

00:10:25.030 --> 00:10:25.040 align:start position:0%
and the conditional and of both of these
 

00:10:25.040 --> 00:10:27.430 align:start position:0%
and the conditional and of both of these
and<00:10:25.120><c> then</c><00:10:25.360><c> return</c><00:10:25.920><c> that</c><00:10:26.240><c> itself</c><00:10:27.040><c> so</c><00:10:27.200><c> we</c><00:10:27.360><c> have</c>

00:10:27.430 --> 00:10:27.440 align:start position:0%
and then return that itself so we have
 

00:10:27.440 --> 00:10:29.269 align:start position:0%
and then return that itself so we have
two<00:10:27.600><c> cases</c><00:10:28.000><c> so</c><00:10:28.160><c> far</c><00:10:28.399><c> if</c><00:10:28.560><c> both</c><00:10:28.800><c> of</c><00:10:28.880><c> the</c><00:10:28.959><c> trees</c>

00:10:29.269 --> 00:10:29.279 align:start position:0%
two cases so far if both of the trees
 

00:10:29.279 --> 00:10:30.949 align:start position:0%
two cases so far if both of the trees
are<00:10:29.360><c> empty</c><00:10:29.680><c> we</c><00:10:29.760><c> return</c><00:10:30.160><c> true</c><00:10:30.399><c> if</c><00:10:30.480><c> they're</c><00:10:30.640><c> both</c>

00:10:30.949 --> 00:10:30.959 align:start position:0%
are empty we return true if they're both
 

00:10:30.959 --> 00:10:32.870 align:start position:0%
are empty we return true if they're both
non-empty<00:10:31.680><c> then</c><00:10:31.920><c> we</c><00:10:32.079><c> actually</c><00:10:32.320><c> compare</c><00:10:32.720><c> the</c>

00:10:32.870 --> 00:10:32.880 align:start position:0%
non-empty then we actually compare the
 

00:10:32.880 --> 00:10:35.990 align:start position:0%
non-empty then we actually compare the
trees<00:10:33.360><c> and</c><00:10:33.519><c> the</c><00:10:33.600><c> third</c><00:10:33.920><c> case</c><00:10:34.560><c> uh</c><00:10:34.880><c> is</c><00:10:35.040><c> basically</c>

00:10:35.990 --> 00:10:36.000 align:start position:0%
trees and the third case uh is basically
 

00:10:36.000 --> 00:10:37.829 align:start position:0%
trees and the third case uh is basically
if<00:10:36.480><c> one</c><00:10:36.720><c> of</c><00:10:36.800><c> the</c><00:10:37.040><c> you</c><00:10:37.120><c> know</c><00:10:37.200><c> if</c><00:10:37.360><c> both</c><00:10:37.519><c> of</c><00:10:37.600><c> these</c>

00:10:37.829 --> 00:10:37.839 align:start position:0%
if one of the you know if both of these
 

00:10:37.839 --> 00:10:39.750 align:start position:0%
if one of the you know if both of these
conditions<00:10:38.320><c> don't</c><00:10:38.640><c> execute</c><00:10:39.279><c> and</c><00:10:39.360><c> they</c><00:10:39.519><c> both</c>

00:10:39.750 --> 00:10:39.760 align:start position:0%
conditions don't execute and they both
 

00:10:39.760 --> 00:10:41.750 align:start position:0%
conditions don't execute and they both
return<00:10:40.240><c> something</c><00:10:40.640><c> so</c><00:10:40.800><c> the</c><00:10:41.200><c> if</c><00:10:41.440><c> statements</c>

00:10:41.750 --> 00:10:41.760 align:start position:0%
return something so the if statements
 

00:10:41.760 --> 00:10:43.750 align:start position:0%
return something so the if statements
will<00:10:41.920><c> never</c><00:10:42.240><c> exit</c><00:10:42.800><c> but</c><00:10:43.040><c> if</c><00:10:43.120><c> neither</c><00:10:43.440><c> of</c><00:10:43.519><c> them</c>

00:10:43.750 --> 00:10:43.760 align:start position:0%
will never exit but if neither of them
 

00:10:43.760 --> 00:10:46.150 align:start position:0%
will never exit but if neither of them
executes<00:10:44.240><c> that</c><00:10:44.399><c> means</c><00:10:44.720><c> at</c><00:10:44.880><c> least</c><00:10:45.279><c> one</c><00:10:45.600><c> of</c><00:10:45.920><c> the</c>

00:10:46.150 --> 00:10:46.160 align:start position:0%
executes that means at least one of the
 

00:10:46.160 --> 00:10:48.710 align:start position:0%
executes that means at least one of the
trees<00:10:46.560><c> is</c><00:10:46.800><c> empty</c><00:10:47.360><c> and</c><00:10:47.600><c> one</c><00:10:47.760><c> of</c><00:10:47.839><c> the</c><00:10:48.000><c> trees</c><00:10:48.399><c> is</c>

00:10:48.710 --> 00:10:48.720 align:start position:0%
trees is empty and one of the trees is
 

00:10:48.720 --> 00:10:50.470 align:start position:0%
trees is empty and one of the trees is
non-empty<00:10:49.360><c> in</c><00:10:49.440><c> that</c><00:10:49.600><c> case</c><00:10:49.839><c> of</c><00:10:49.920><c> course</c><00:10:50.240><c> we</c><00:10:50.399><c> want</c>

00:10:50.470 --> 00:10:50.480 align:start position:0%
non-empty in that case of course we want
 

00:10:50.480 --> 00:10:52.630 align:start position:0%
non-empty in that case of course we want
to<00:10:50.640><c> return</c><00:10:51.040><c> false</c><00:10:51.360><c> they</c><00:10:51.519><c> can't</c><00:10:51.920><c> possibly</c><00:10:52.399><c> be</c>

00:10:52.630 --> 00:10:52.640 align:start position:0%
to return false they can't possibly be
 

00:10:52.640 --> 00:10:55.030 align:start position:0%
to return false they can't possibly be
the<00:10:52.800><c> same</c><00:10:53.120><c> tree</c><00:10:53.600><c> if</c><00:10:53.839><c> one</c><00:10:54.000><c> of</c><00:10:54.079><c> them</c><00:10:54.320><c> is</c><00:10:54.480><c> empty</c>

00:10:55.030 --> 00:10:55.040 align:start position:0%
the same tree if one of them is empty
 

00:10:55.040 --> 00:10:57.269 align:start position:0%
the same tree if one of them is empty
and<00:10:55.120><c> the</c><00:10:55.360><c> other</c><00:10:55.680><c> is</c><00:10:55.920><c> non-empty</c><00:10:56.720><c> so</c><00:10:56.880><c> basically</c>

00:10:57.269 --> 00:10:57.279 align:start position:0%
and the other is non-empty so basically
 

00:10:57.279 --> 00:10:59.509 align:start position:0%
and the other is non-empty so basically
we<00:10:57.440><c> just</c><00:10:57.680><c> solved</c><00:10:58.240><c> one</c><00:10:58.720><c> leak</c><00:10:58.959><c> code</c><00:10:59.200><c> easy</c>

00:10:59.509 --> 00:10:59.519 align:start position:0%
we just solved one leak code easy
 

00:10:59.519 --> 00:11:01.910 align:start position:0%
we just solved one leak code easy
problem<00:10:59.920><c> this</c><00:11:00.160><c> is</c><00:11:00.320><c> its</c><00:11:00.560><c> own</c><00:11:00.880><c> problem</c><00:11:01.519><c> but</c><00:11:01.760><c> now</c>

00:11:01.910 --> 00:11:01.920 align:start position:0%
problem this is its own problem but now
 

00:11:01.920 --> 00:11:03.670 align:start position:0%
problem this is its own problem but now
we<00:11:02.079><c> can</c><00:11:02.240><c> use</c><00:11:02.720><c> this</c>

00:11:03.670 --> 00:11:03.680 align:start position:0%
we can use this
 

00:11:03.680 --> 00:11:06.470 align:start position:0%
we can use this
function<00:11:04.160><c> and</c><00:11:04.640><c> use</c><00:11:04.880><c> it</c><00:11:05.120><c> in</c><00:11:05.360><c> our</c><00:11:05.680><c> real</c><00:11:06.240><c> is</c>

00:11:06.470 --> 00:11:06.480 align:start position:0%
function and use it in our real is
 

00:11:06.480 --> 00:11:08.710 align:start position:0%
function and use it in our real is
subtree<00:11:07.040><c> function</c><00:11:07.680><c> but</c><00:11:07.920><c> remember</c><00:11:08.320><c> this</c><00:11:08.560><c> is</c>

00:11:08.710 --> 00:11:08.720 align:start position:0%
subtree function but remember this is
 

00:11:08.720 --> 00:11:10.870 align:start position:0%
subtree function but remember this is
also<00:11:08.959><c> going</c><00:11:09.120><c> to</c><00:11:09.200><c> be</c><00:11:09.360><c> a</c><00:11:09.519><c> recursive</c><00:11:10.079><c> function</c><00:11:10.640><c> so</c>

00:11:10.870 --> 00:11:10.880 align:start position:0%
also going to be a recursive function so
 

00:11:10.880 --> 00:11:13.110 align:start position:0%
also going to be a recursive function so
let's<00:11:11.200><c> start</c><00:11:11.440><c> with</c><00:11:11.600><c> the</c><00:11:11.760><c> base</c><00:11:12.079><c> cases</c><00:11:12.800><c> remember</c>

00:11:13.110 --> 00:11:13.120 align:start position:0%
let's start with the base cases remember
 

00:11:13.120 --> 00:11:15.190 align:start position:0%
let's start with the base cases remember
one<00:11:13.279><c> of</c><00:11:13.360><c> the</c><00:11:13.519><c> things</c><00:11:13.680><c> we</c><00:11:13.920><c> determined</c><00:11:14.480><c> is</c><00:11:14.880><c> that</c>

00:11:15.190 --> 00:11:15.200 align:start position:0%
one of the things we determined is that
 

00:11:15.200 --> 00:11:17.829 align:start position:0%
one of the things we determined is that
the<00:11:15.440><c> tea</c><00:11:15.680><c> tree</c><00:11:16.079><c> the</c><00:11:16.240><c> one</c><00:11:16.399><c> that's</c><00:11:16.640><c> the</c><00:11:16.800><c> actual</c><00:11:17.600><c> a</c>

00:11:17.829 --> 00:11:17.839 align:start position:0%
the tea tree the one that's the actual a
 

00:11:17.839 --> 00:11:21.110 align:start position:0%
the tea tree the one that's the actual a
sub<00:11:18.079><c> tree</c><00:11:18.640><c> if</c><00:11:18.800><c> it's</c><00:11:19.120><c> empty</c><00:11:19.920><c> then</c><00:11:20.160><c> of</c><00:11:20.399><c> course</c><00:11:20.959><c> it</c>

00:11:21.110 --> 00:11:21.120 align:start position:0%
sub tree if it's empty then of course it
 

00:11:21.120 --> 00:11:23.110 align:start position:0%
sub tree if it's empty then of course it
will<00:11:21.360><c> be</c><00:11:21.680><c> a</c><00:11:21.839><c> sub</c><00:11:22.079><c> tree</c><00:11:22.320><c> of</c><00:11:22.399><c> the</c><00:11:22.560><c> other</c><00:11:22.800><c> tree</c>

00:11:23.110 --> 00:11:23.120 align:start position:0%
will be a sub tree of the other tree
 

00:11:23.120 --> 00:11:24.949 align:start position:0%
will be a sub tree of the other tree
regardless<00:11:23.680><c> of</c><00:11:23.760><c> whether</c><00:11:24.079><c> the</c><00:11:24.240><c> other</c><00:11:24.560><c> tree</c><00:11:24.800><c> is</c>

00:11:24.949 --> 00:11:24.959 align:start position:0%
regardless of whether the other tree is
 

00:11:24.959 --> 00:11:27.350 align:start position:0%
regardless of whether the other tree is
empty<00:11:25.360><c> or</c><00:11:25.519><c> not</c><00:11:25.680><c> so</c><00:11:25.839><c> what</c><00:11:26.000><c> we</c><00:11:26.079><c> can</c><00:11:26.240><c> say</c><00:11:26.560><c> is</c><00:11:26.720><c> if</c>

00:11:27.350 --> 00:11:27.360 align:start position:0%
empty or not so what we can say is if
 

00:11:27.360 --> 00:11:30.870 align:start position:0%
empty or not so what we can say is if
not<00:11:27.680><c> t</c><00:11:28.079><c> if</c><00:11:28.240><c> t</c><00:11:28.480><c> is</c><00:11:28.720><c> null</c><00:11:29.279><c> then</c><00:11:29.920><c> we</c><00:11:30.240><c> can</c><00:11:30.480><c> return</c>

00:11:30.870 --> 00:11:30.880 align:start position:0%
not t if t is null then we can return
 

00:11:30.880 --> 00:11:33.110 align:start position:0%
not t if t is null then we can return
true<00:11:31.440><c> no</c><00:11:31.680><c> matter</c><00:11:32.000><c> what</c><00:11:32.480><c> right</c><00:11:32.640><c> so</c><00:11:32.800><c> that's</c>

00:11:33.110 --> 00:11:33.120 align:start position:0%
true no matter what right so that's
 

00:11:33.120 --> 00:11:35.430 align:start position:0%
true no matter what right so that's
really<00:11:33.440><c> simple</c><00:11:34.160><c> now</c><00:11:34.320><c> what</c><00:11:34.480><c> if</c><00:11:34.640><c> the</c><00:11:34.880><c> opposite</c>

00:11:35.430 --> 00:11:35.440 align:start position:0%
really simple now what if the opposite
 

00:11:35.440 --> 00:11:37.350 align:start position:0%
really simple now what if the opposite
was<00:11:35.600><c> true</c><00:11:35.920><c> do</c><00:11:36.000><c> you</c><00:11:36.160><c> remember</c><00:11:36.480><c> what</c><00:11:36.640><c> we</c><00:11:36.800><c> said</c><00:11:37.040><c> if</c>

00:11:37.350 --> 00:11:37.360 align:start position:0%
was true do you remember what we said if
 

00:11:37.360 --> 00:11:41.269 align:start position:0%
was true do you remember what we said if
s<00:11:37.920><c> is</c><00:11:38.240><c> empty</c><00:11:38.800><c> but</c><00:11:39.120><c> t</c><00:11:39.519><c> is</c><00:11:39.839><c> non-empty</c><00:11:40.959><c> in</c><00:11:41.040><c> that</c>

00:11:41.269 --> 00:11:41.279 align:start position:0%
s is empty but t is non-empty in that
 

00:11:41.279 --> 00:11:44.470 align:start position:0%
s is empty but t is non-empty in that
case<00:11:41.519><c> we</c><00:11:41.680><c> have</c><00:11:41.920><c> to</c><00:11:42.079><c> return</c><00:11:42.560><c> false</c><00:11:43.120><c> t</c><00:11:43.519><c> cannot</c><00:11:44.160><c> be</c>

00:11:44.470 --> 00:11:44.480 align:start position:0%
case we have to return false t cannot be
 

00:11:44.480 --> 00:11:48.710 align:start position:0%
case we have to return false t cannot be
a<00:11:44.640><c> subtree</c><00:11:45.600><c> of</c><00:11:46.160><c> s</c><00:11:46.880><c> so</c><00:11:47.120><c> in</c><00:11:47.200><c> that</c><00:11:47.360><c> case</c><00:11:47.680><c> we</c><00:11:47.920><c> return</c>

00:11:48.710 --> 00:11:48.720 align:start position:0%
a subtree of s so in that case we return
 

00:11:48.720 --> 00:11:50.870 align:start position:0%
a subtree of s so in that case we return
false<00:11:49.200><c> and</c><00:11:49.519><c> just</c><00:11:49.680><c> so</c><00:11:49.839><c> you</c><00:11:50.000><c> know</c><00:11:50.160><c> the</c><00:11:50.320><c> order</c><00:11:50.720><c> of</c>

00:11:50.870 --> 00:11:50.880 align:start position:0%
false and just so you know the order of
 

00:11:50.880 --> 00:11:53.430 align:start position:0%
false and just so you know the order of
these<00:11:51.120><c> conditions</c><00:11:51.760><c> is</c><00:11:52.079><c> very</c><00:11:52.560><c> important</c>

00:11:53.430 --> 00:11:53.440 align:start position:0%
these conditions is very important
 

00:11:53.440 --> 00:11:55.990 align:start position:0%
these conditions is very important
because<00:11:54.160><c> if</c><00:11:54.320><c> we</c><00:11:54.639><c> did</c><00:11:54.880><c> not</c><00:11:55.120><c> return</c><00:11:55.600><c> with</c><00:11:55.839><c> the</c>

00:11:55.990 --> 00:11:56.000 align:start position:0%
because if we did not return with the
 

00:11:56.000 --> 00:11:58.150 align:start position:0%
because if we did not return with the
first<00:11:56.320><c> if</c><00:11:56.480><c> statement</c><00:11:57.279><c> then</c><00:11:57.519><c> we</c><00:11:57.680><c> pretty</c><00:11:57.920><c> much</c>

00:11:58.150 --> 00:11:58.160 align:start position:0%
first if statement then we pretty much
 

00:11:58.160 --> 00:12:01.350 align:start position:0%
first if statement then we pretty much
know<00:11:58.320><c> that</c><00:11:58.639><c> t</c><00:11:58.959><c> is</c><00:11:59.200><c> non-empty</c><00:12:00.079><c> so</c><00:12:00.320><c> then</c><00:12:00.800><c> here</c><00:12:01.200><c> in</c>

00:12:01.350 --> 00:12:01.360 align:start position:0%
know that t is non-empty so then here in
 

00:12:01.360 --> 00:12:04.470 align:start position:0%
know that t is non-empty so then here in
this<00:12:01.519><c> condition</c><00:12:01.920><c> i</c><00:12:02.160><c> could</c><00:12:02.480><c> hear</c><00:12:02.880><c> right</c><00:12:03.360><c> and</c><00:12:03.920><c> t</c>

00:12:04.470 --> 00:12:04.480 align:start position:0%
this condition i could hear right and t
 

00:12:04.480 --> 00:12:06.790 align:start position:0%
this condition i could hear right and t
to<00:12:04.720><c> indicate</c><00:12:05.120><c> that</c><00:12:05.360><c> t</c><00:12:05.600><c> is</c><00:12:05.760><c> non-empty</c><00:12:06.399><c> but</c><00:12:06.560><c> it's</c>

00:12:06.790 --> 00:12:06.800 align:start position:0%
to indicate that t is non-empty but it's
 

00:12:06.800 --> 00:12:09.269 align:start position:0%
to indicate that t is non-empty but it's
not<00:12:07.120><c> necessary</c><00:12:08.000><c> i</c><00:12:08.160><c> hope</c><00:12:08.399><c> you</c><00:12:08.480><c> can</c><00:12:08.639><c> see</c><00:12:08.959><c> why</c>

00:12:09.269 --> 00:12:09.279 align:start position:0%
not necessary i hope you can see why
 

00:12:09.279 --> 00:12:11.269 align:start position:0%
not necessary i hope you can see why
because<00:12:09.920><c> we</c><00:12:10.079><c> pretty</c><00:12:10.320><c> much</c><00:12:10.639><c> checked</c><00:12:10.959><c> that</c><00:12:11.120><c> with</c>

00:12:11.269 --> 00:12:11.279 align:start position:0%
because we pretty much checked that with
 

00:12:11.279 --> 00:12:13.509 align:start position:0%
because we pretty much checked that with
the<00:12:11.440><c> first</c><00:12:11.680><c> condition</c><00:12:12.160><c> if</c><00:12:12.320><c> t</c><00:12:12.800><c> was</c><00:12:13.040><c> empty</c><00:12:13.360><c> we</c>

00:12:13.509 --> 00:12:13.519 align:start position:0%
the first condition if t was empty we
 

00:12:13.519 --> 00:12:15.509 align:start position:0%
the first condition if t was empty we
would<00:12:13.760><c> have</c><00:12:13.920><c> returned</c><00:12:14.399><c> so</c><00:12:14.560><c> here</c><00:12:14.959><c> we</c><00:12:15.120><c> know</c><00:12:15.279><c> for</c>

00:12:15.509 --> 00:12:15.519 align:start position:0%
would have returned so here we know for
 

00:12:15.519 --> 00:12:17.190 align:start position:0%
would have returned so here we know for
sure<00:12:15.760><c> it's</c><00:12:16.000><c> not</c><00:12:16.240><c> empty</c><00:12:16.560><c> we</c><00:12:16.639><c> don't</c><00:12:16.880><c> have</c><00:12:16.959><c> to</c>

00:12:17.190 --> 00:12:17.200 align:start position:0%
sure it's not empty we don't have to
 

00:12:17.200 --> 00:12:19.670 align:start position:0%
sure it's not empty we don't have to
include<00:12:17.600><c> this</c><00:12:17.839><c> second</c><00:12:18.240><c> condition</c><00:12:19.120><c> so</c><00:12:19.360><c> now</c><00:12:19.519><c> at</c>

00:12:19.670 --> 00:12:19.680 align:start position:0%
include this second condition so now at
 

00:12:19.680 --> 00:12:21.269 align:start position:0%
include this second condition so now at
this<00:12:19.839><c> point</c><00:12:20.000><c> we</c><00:12:20.160><c> basically</c><00:12:20.560><c> know</c><00:12:20.800><c> both</c><00:12:21.040><c> of</c><00:12:21.120><c> the</c>

00:12:21.269 --> 00:12:21.279 align:start position:0%
this point we basically know both of the
 

00:12:21.279 --> 00:12:23.750 align:start position:0%
this point we basically know both of the
trees<00:12:21.680><c> are</c><00:12:21.920><c> not</c><00:12:22.240><c> empty</c><00:12:23.040><c> so</c><00:12:23.279><c> what</c><00:12:23.440><c> are</c><00:12:23.519><c> we</c><00:12:23.680><c> going</c>

00:12:23.750 --> 00:12:23.760 align:start position:0%
trees are not empty so what are we going
 

00:12:23.760 --> 00:12:25.910 align:start position:0%
trees are not empty so what are we going
to<00:12:23.839><c> do</c><00:12:24.079><c> well</c><00:12:24.320><c> we</c><00:12:24.560><c> of</c><00:12:24.639><c> course</c><00:12:24.959><c> want</c><00:12:25.120><c> to</c><00:12:25.279><c> compare</c>

00:12:25.910 --> 00:12:25.920 align:start position:0%
to do well we of course want to compare
 

00:12:25.920 --> 00:12:27.590 align:start position:0%
to do well we of course want to compare
both<00:12:26.160><c> of</c><00:12:26.240><c> the</c><00:12:26.399><c> trees</c><00:12:26.720><c> right</c><00:12:26.880><c> so</c><00:12:27.040><c> let's</c><00:12:27.279><c> call</c>

00:12:27.590 --> 00:12:27.600 align:start position:0%
both of the trees right so let's call
 

00:12:27.600 --> 00:12:30.550 align:start position:0%
both of the trees right so let's call
same<00:12:28.000><c> tree</c><00:12:28.399><c> on</c><00:12:28.959><c> both</c><00:12:29.200><c> of</c><00:12:29.279><c> them</c><00:12:29.839><c> if</c><00:12:30.000><c> they</c><00:12:30.320><c> are</c>

00:12:30.550 --> 00:12:30.560 align:start position:0%
same tree on both of them if they are
 

00:12:30.560 --> 00:12:32.629 align:start position:0%
same tree on both of them if they are
equal<00:12:30.880><c> if</c><00:12:31.040><c> both</c><00:12:31.279><c> of</c><00:12:31.360><c> the</c><00:12:31.440><c> trees</c><00:12:31.839><c> are</c><00:12:32.000><c> the</c><00:12:32.079><c> same</c>

00:12:32.629 --> 00:12:32.639 align:start position:0%
equal if both of the trees are the same
 

00:12:32.639 --> 00:12:35.350 align:start position:0%
equal if both of the trees are the same
then<00:12:32.880><c> we</c><00:12:33.120><c> can</c><00:12:33.279><c> return</c><00:12:34.000><c> true</c><00:12:34.720><c> so</c><00:12:34.959><c> let's</c><00:12:35.200><c> check</c>

00:12:35.350 --> 00:12:35.360 align:start position:0%
then we can return true so let's check
 

00:12:35.360 --> 00:12:37.829 align:start position:0%
then we can return true so let's check
that<00:12:35.600><c> so</c><00:12:35.760><c> is</c><00:12:35.839><c> the</c><00:12:36.000><c> return</c><00:12:36.320><c> value</c><00:12:36.720><c> true</c><00:12:37.360><c> if</c><00:12:37.519><c> it</c>

00:12:37.829 --> 00:12:37.839 align:start position:0%
that so is the return value true if it
 

00:12:37.839 --> 00:12:41.110 align:start position:0%
that so is the return value true if it
is<00:12:38.480><c> then</c><00:12:38.959><c> we</c><00:12:39.200><c> can</c><00:12:39.440><c> go</c><00:12:39.600><c> ahead</c><00:12:39.920><c> and</c><00:12:40.000><c> return</c><00:12:40.480><c> true</c>

00:12:41.110 --> 00:12:41.120 align:start position:0%
is then we can go ahead and return true
 

00:12:41.120 --> 00:12:43.509 align:start position:0%
is then we can go ahead and return true
so<00:12:41.360><c> pretty</c><00:12:41.600><c> straightforward</c><00:12:42.639><c> but</c><00:12:43.200><c> what</c><00:12:43.360><c> if</c>

00:12:43.509 --> 00:12:43.519 align:start position:0%
so pretty straightforward but what if
 

00:12:43.519 --> 00:12:45.910 align:start position:0%
so pretty straightforward but what if
they<00:12:43.839><c> are</c><00:12:44.079><c> not</c><00:12:44.399><c> the</c><00:12:44.639><c> same</c><00:12:45.040><c> sub</c><00:12:45.279><c> tree</c><00:12:45.600><c> and</c><00:12:45.680><c> this</c>

00:12:45.910 --> 00:12:45.920 align:start position:0%
they are not the same sub tree and this
 

00:12:45.920 --> 00:12:47.990 align:start position:0%
they are not the same sub tree and this
is<00:12:46.079><c> kind</c><00:12:46.320><c> of</c><00:12:46.399><c> the</c><00:12:46.639><c> tricky</c><00:12:47.120><c> part</c><00:12:47.600><c> but</c><00:12:47.760><c> it's</c>

00:12:47.990 --> 00:12:48.000 align:start position:0%
is kind of the tricky part but it's
 

00:12:48.000 --> 00:12:50.710 align:start position:0%
is kind of the tricky part but it's
simple<00:12:48.480><c> once</c><00:12:48.720><c> you</c><00:12:48.959><c> actually</c><00:12:49.440><c> see</c><00:12:49.760><c> it</c><00:12:50.240><c> okay</c>

00:12:50.710 --> 00:12:50.720 align:start position:0%
simple once you actually see it okay
 

00:12:50.720 --> 00:12:52.949 align:start position:0%
simple once you actually see it okay
they're<00:12:50.959><c> not</c><00:12:51.200><c> the</c><00:12:51.360><c> same</c><00:12:51.760><c> tree</c><00:12:52.320><c> but</c><00:12:52.560><c> remember</c>

00:12:52.949 --> 00:12:52.959 align:start position:0%
they're not the same tree but remember
 

00:12:52.959 --> 00:12:56.230 align:start position:0%
they're not the same tree but remember
the<00:12:53.279><c> is</c><00:12:53.600><c> sub</c><00:12:53.839><c> tree</c><00:12:54.079><c> function</c><00:12:54.560><c> is</c><00:12:54.720><c> recursive</c><00:12:55.600><c> so</c>

00:12:56.230 --> 00:12:56.240 align:start position:0%
the is sub tree function is recursive so
 

00:12:56.240 --> 00:12:59.670 align:start position:0%
the is sub tree function is recursive so
we<00:12:56.399><c> can</c><00:12:56.720><c> instead</c><00:12:57.279><c> compare</c><00:12:57.839><c> t</c><00:12:58.399><c> to</c><00:12:58.560><c> the</c><00:12:58.880><c> subtree</c>

00:12:59.670 --> 00:12:59.680 align:start position:0%
we can instead compare t to the subtree
 

00:12:59.680 --> 00:13:02.230 align:start position:0%
we can instead compare t to the subtree
of<00:13:00.240><c> of</c><00:13:00.480><c> s</c><00:13:00.720><c> right</c><00:13:00.880><c> we</c><00:13:01.040><c> can</c><00:13:01.120><c> compare</c><00:13:01.519><c> t</c><00:13:01.760><c> to</c><00:13:01.920><c> the</c>

00:13:02.230 --> 00:13:02.240 align:start position:0%
of of s right we can compare t to the
 

00:13:02.240 --> 00:13:04.790 align:start position:0%
of of s right we can compare t to the
left<00:13:02.560><c> subtree</c><00:13:03.120><c> of</c><00:13:03.360><c> s</c><00:13:03.680><c> and</c><00:13:03.839><c> we</c><00:13:04.000><c> can</c><00:13:04.160><c> also</c><00:13:04.480><c> do</c><00:13:04.639><c> the</c>

00:13:04.790 --> 00:13:04.800 align:start position:0%
left subtree of s and we can also do the
 

00:13:04.800 --> 00:13:07.110 align:start position:0%
left subtree of s and we can also do the
same<00:13:05.519><c> we</c><00:13:05.600><c> can</c><00:13:05.760><c> compare</c><00:13:06.160><c> t</c><00:13:06.399><c> with</c><00:13:06.560><c> the</c><00:13:06.800><c> right</c>

00:13:07.110 --> 00:13:07.120 align:start position:0%
same we can compare t with the right
 

00:13:07.120 --> 00:13:09.430 align:start position:0%
same we can compare t with the right
subtree<00:13:07.600><c> of</c><00:13:07.839><c> s</c><00:13:08.160><c> and</c><00:13:08.320><c> i</c><00:13:08.480><c> don't</c><00:13:08.720><c> mean</c><00:13:09.120><c> calling</c>

00:13:09.430 --> 00:13:09.440 align:start position:0%
subtree of s and i don't mean calling
 

00:13:09.440 --> 00:13:12.470 align:start position:0%
subtree of s and i don't mean calling
the<00:13:09.680><c> same</c><00:13:10.079><c> tree</c><00:13:10.399><c> function</c><00:13:10.880><c> i</c><00:13:11.120><c> mean</c>

00:13:12.470 --> 00:13:12.480 align:start position:0%
the same tree function i mean
 

00:13:12.480 --> 00:13:16.230 align:start position:0%
the same tree function i mean
calling<00:13:13.120><c> the</c><00:13:13.440><c> is</c><00:13:14.079><c> subtree</c><00:13:14.639><c> function</c><00:13:15.040><c> so</c><00:13:15.440><c> is</c>

00:13:16.230 --> 00:13:16.240 align:start position:0%
calling the is subtree function so is
 

00:13:16.240 --> 00:13:17.430 align:start position:0%
calling the is subtree function so is
subtree

00:13:17.430 --> 00:13:17.440 align:start position:0%
subtree
 

00:13:17.440 --> 00:13:21.269 align:start position:0%
subtree
is<00:13:17.920><c> t</c><00:13:18.560><c> a</c><00:13:18.720><c> subtree</c><00:13:19.360><c> of</c><00:13:19.440><c> the</c><00:13:19.680><c> left</c><00:13:20.000><c> subtree</c><00:13:20.639><c> of</c><00:13:20.880><c> s</c>

00:13:21.269 --> 00:13:21.279 align:start position:0%
is t a subtree of the left subtree of s
 

00:13:21.279 --> 00:13:24.629 align:start position:0%
is t a subtree of the left subtree of s
or<00:13:21.440><c> we</c><00:13:21.600><c> could</c><00:13:21.920><c> check</c><00:13:22.399><c> the</c><00:13:22.720><c> opposite</c><00:13:23.200><c> case</c><00:13:23.680><c> is</c><00:13:24.240><c> t</c>

00:13:24.629 --> 00:13:24.639 align:start position:0%
or we could check the opposite case is t
 

00:13:24.639 --> 00:13:28.790 align:start position:0%
or we could check the opposite case is t
a<00:13:24.800><c> subtree</c><00:13:25.519><c> of</c><00:13:26.000><c> the</c><00:13:26.320><c> right</c><00:13:26.639><c> subtree</c><00:13:27.360><c> of</c><00:13:28.000><c> s</c>

00:13:28.790 --> 00:13:28.800 align:start position:0%
a subtree of the right subtree of s
 

00:13:28.800 --> 00:13:31.110 align:start position:0%
a subtree of the right subtree of s
right<00:13:28.959><c> so</c><00:13:29.120><c> if</c><00:13:29.360><c> either</c><00:13:29.760><c> of</c><00:13:29.920><c> these</c><00:13:30.240><c> returns</c><00:13:30.720><c> true</c>

00:13:31.110 --> 00:13:31.120 align:start position:0%
right so if either of these returns true
 

00:13:31.120 --> 00:13:32.790 align:start position:0%
right so if either of these returns true
then<00:13:31.279><c> we</c><00:13:31.440><c> can</c><00:13:31.600><c> return</c><00:13:32.000><c> true</c><00:13:32.240><c> right</c><00:13:32.399><c> because</c><00:13:32.639><c> we</c>

00:13:32.790 --> 00:13:32.800 align:start position:0%
then we can return true right because we
 

00:13:32.800 --> 00:13:34.870 align:start position:0%
then we can return true right because we
only<00:13:32.959><c> want</c><00:13:33.120><c> to</c><00:13:33.200><c> know</c><00:13:33.360><c> if</c><00:13:33.519><c> t</c><00:13:33.760><c> is</c><00:13:33.920><c> a</c><00:13:34.079><c> subtree</c><00:13:34.639><c> of</c>

00:13:34.870 --> 00:13:34.880 align:start position:0%
only want to know if t is a subtree of
 

00:13:34.880 --> 00:13:38.870 align:start position:0%
only want to know if t is a subtree of
at<00:13:34.959><c> least</c><00:13:35.360><c> one</c><00:13:35.760><c> of</c><00:13:35.839><c> the</c><00:13:36.079><c> trees</c><00:13:36.800><c> in</c><00:13:37.200><c> s</c><00:13:37.680><c> so</c><00:13:38.240><c> we</c><00:13:38.399><c> can</c>

00:13:38.870 --> 00:13:38.880 align:start position:0%
at least one of the trees in s so we can
 

00:13:38.880 --> 00:13:41.189 align:start position:0%
at least one of the trees in s so we can
instead<00:13:39.199><c> of</c><00:13:39.279><c> taking</c><00:13:39.600><c> the</c><00:13:39.839><c> logic</c><00:13:40.480><c> and</c><00:13:40.800><c> of</c><00:13:40.959><c> both</c>

00:13:41.189 --> 00:13:41.199 align:start position:0%
instead of taking the logic and of both
 

00:13:41.199 --> 00:13:43.829 align:start position:0%
instead of taking the logic and of both
of<00:13:41.279><c> these</c><00:13:41.600><c> we</c><00:13:41.680><c> can</c><00:13:41.839><c> take</c><00:13:42.160><c> the</c><00:13:42.399><c> logic</c><00:13:43.199><c> or</c><00:13:43.680><c> of</c>

00:13:43.829 --> 00:13:43.839 align:start position:0%
of these we can take the logic or of
 

00:13:43.839 --> 00:13:46.550 align:start position:0%
of these we can take the logic or of
both<00:13:44.160><c> of</c><00:13:44.240><c> these</c><00:13:44.480><c> so</c><00:13:44.720><c> logic</c><00:13:45.199><c> or</c><00:13:45.680><c> uh</c><00:13:46.079><c> you</c><00:13:46.160><c> know</c>

00:13:46.550 --> 00:13:46.560 align:start position:0%
both of these so logic or uh you know
 

00:13:46.560 --> 00:13:48.310 align:start position:0%
both of these so logic or uh you know
take<00:13:46.800><c> that</c><00:13:46.959><c> condition</c><00:13:47.440><c> and</c><00:13:47.519><c> then</c><00:13:47.760><c> return</c>

00:13:48.310 --> 00:13:48.320 align:start position:0%
take that condition and then return
 

00:13:48.320 --> 00:13:51.269 align:start position:0%
take that condition and then return
whatever<00:13:48.720><c> it</c><00:13:48.880><c> evaluates</c><00:13:49.600><c> to</c><00:13:50.079><c> so</c><00:13:50.399><c> that</c><00:13:50.800><c> is</c><00:13:51.040><c> the</c>

00:13:51.269 --> 00:13:51.279 align:start position:0%
whatever it evaluates to so that is the
 

00:13:51.279 --> 00:13:53.030 align:start position:0%
whatever it evaluates to so that is the
entire<00:13:51.680><c> code</c><00:13:52.000><c> let's</c><00:13:52.160><c> just</c><00:13:52.399><c> run</c><00:13:52.639><c> it</c><00:13:52.720><c> to</c><00:13:52.880><c> make</c>

00:13:53.030 --> 00:13:53.040 align:start position:0%
entire code let's just run it to make
 

00:13:53.040 --> 00:13:55.350 align:start position:0%
entire code let's just run it to make
sure<00:13:53.199><c> that</c><00:13:53.360><c> it</c><00:13:53.519><c> works</c><00:13:54.079><c> so</c><00:13:54.320><c> as</c><00:13:54.480><c> you</c><00:13:54.560><c> can</c><00:13:54.720><c> see</c><00:13:55.040><c> yes</c>

00:13:55.350 --> 00:13:55.360 align:start position:0%
sure that it works so as you can see yes
 

00:13:55.360 --> 00:13:57.350 align:start position:0%
sure that it works so as you can see yes
it<00:13:55.440><c> does</c><00:13:55.760><c> work</c><00:13:56.079><c> and</c><00:13:56.240><c> it</c><00:13:56.399><c> is</c><00:13:56.720><c> relatively</c>

00:13:57.350 --> 00:13:57.360 align:start position:0%
it does work and it is relatively
 

00:13:57.360 --> 00:13:58.949 align:start position:0%
it does work and it is relatively
efficient<00:13:58.160><c> even</c><00:13:58.480><c> though</c><00:13:58.639><c> the</c><00:13:58.800><c> time</c>

00:13:58.949 --> 00:13:58.959 align:start position:0%
efficient even though the time
 

00:13:58.959 --> 00:14:01.110 align:start position:0%
efficient even though the time
complexity<00:13:59.600><c> is</c><00:13:59.680><c> the</c><00:13:59.920><c> size</c><00:14:00.240><c> of</c><00:14:00.399><c> both</c><00:14:00.720><c> trees</c>

00:14:01.110 --> 00:14:01.120 align:start position:0%
complexity is the size of both trees
 

00:14:01.120 --> 00:14:02.949 align:start position:0%
complexity is the size of both trees
multiplied<00:14:01.760><c> together</c><00:14:02.320><c> so</c><00:14:02.399><c> i</c><00:14:02.560><c> really</c><00:14:02.800><c> hope</c>

00:14:02.949 --> 00:14:02.959 align:start position:0%
multiplied together so i really hope
 

00:14:02.959 --> 00:14:05.189 align:start position:0%
multiplied together so i really hope
this<00:14:03.120><c> was</c><00:14:03.279><c> helpful</c><00:14:03.920><c> if</c><00:14:04.079><c> it</c><00:14:04.240><c> was</c><00:14:04.639><c> please</c><00:14:04.959><c> like</c>

00:14:05.189 --> 00:14:05.199 align:start position:0%
this was helpful if it was please like
 

00:14:05.199 --> 00:14:06.949 align:start position:0%
this was helpful if it was please like
and<00:14:05.360><c> subscribe</c><00:14:05.920><c> it</c><00:14:06.160><c> really</c><00:14:06.399><c> supports</c><00:14:06.800><c> the</c>

00:14:06.949 --> 00:14:06.959 align:start position:0%
and subscribe it really supports the
 

00:14:06.959 --> 00:14:08.790 align:start position:0%
and subscribe it really supports the
channel<00:14:07.360><c> a</c><00:14:07.519><c> lot</c><00:14:07.760><c> consider</c><00:14:08.240><c> checking</c><00:14:08.560><c> out</c><00:14:08.639><c> my</c>

00:14:08.790 --> 00:14:08.800 align:start position:0%
channel a lot consider checking out my
 

00:14:08.800 --> 00:14:10.389 align:start position:0%
channel a lot consider checking out my
patreon<00:14:09.279><c> where</c><00:14:09.440><c> you</c><00:14:09.519><c> can</c><00:14:09.680><c> further</c><00:14:10.000><c> support</c>

00:14:10.389 --> 00:14:10.399 align:start position:0%
patreon where you can further support
 

00:14:10.399 --> 00:14:11.829 align:start position:0%
patreon where you can further support
the<00:14:10.560><c> channel</c><00:14:10.800><c> if</c><00:14:10.959><c> you</c><00:14:11.040><c> would</c><00:14:11.279><c> like</c><00:14:11.680><c> and</c>

00:14:11.829 --> 00:14:11.839 align:start position:0%
the channel if you would like and
 

00:14:11.839 --> 00:14:13.269 align:start position:0%
the channel if you would like and
hopefully<00:14:12.240><c> i'll</c><00:14:12.399><c> see</c><00:14:12.560><c> you</c><00:14:12.720><c> pretty</c><00:14:12.959><c> soon</c>

00:14:13.269 --> 00:14:13.279 align:start position:0%
hopefully i'll see you pretty soon
 

00:14:13.279 --> 00:14:16.079 align:start position:0%
hopefully i'll see you pretty soon
thanks<00:14:13.519><c> for</c><00:14:13.680><c> watching</c>

