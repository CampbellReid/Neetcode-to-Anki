WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.350 align:start position:0%
 
hey<00:00:00.160><c> everyone</c><00:00:00.560><c> welcome</c><00:00:00.880><c> back</c><00:00:01.120><c> and</c><00:00:01.199><c> let's</c>

00:00:01.350 --> 00:00:01.360 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.360 --> 00:00:03.110 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.599><c> some</c><00:00:01.760><c> more</c><00:00:01.920><c> neat</c><00:00:02.159><c> code</c><00:00:02.399><c> today</c><00:00:02.639><c> so</c><00:00:02.800><c> today</c>

00:00:03.110 --> 00:00:03.120 align:start position:0%
write some more neat code today so today
 

00:00:03.120 --> 00:00:05.670 align:start position:0%
write some more neat code today so today
let's<00:00:03.280><c> solve</c><00:00:03.600><c> the</c><00:00:03.760><c> problem</c><00:00:04.240><c> design</c><00:00:04.960><c> twitter</c>

00:00:05.670 --> 00:00:05.680 align:start position:0%
let's solve the problem design twitter
 

00:00:05.680 --> 00:00:07.349 align:start position:0%
let's solve the problem design twitter
this<00:00:05.839><c> is</c><00:00:06.000><c> a</c><00:00:06.080><c> somewhat</c><00:00:06.480><c> challenging</c><00:00:07.040><c> problem</c>

00:00:07.349 --> 00:00:07.359 align:start position:0%
this is a somewhat challenging problem
 

00:00:07.359 --> 00:00:09.509 align:start position:0%
this is a somewhat challenging problem
for<00:00:07.520><c> a</c><00:00:07.680><c> medium</c><00:00:08.160><c> and</c><00:00:08.320><c> spoiler</c><00:00:08.800><c> alert</c><00:00:09.200><c> this</c><00:00:09.360><c> is</c>

00:00:09.509 --> 00:00:09.519 align:start position:0%
for a medium and spoiler alert this is
 

00:00:09.519 --> 00:00:11.669 align:start position:0%
for a medium and spoiler alert this is
actually<00:00:09.920><c> really</c><00:00:10.320><c> similar</c><00:00:10.719><c> to</c><00:00:11.040><c> another</c><00:00:11.519><c> leak</c>

00:00:11.669 --> 00:00:11.679 align:start position:0%
actually really similar to another leak
 

00:00:11.679 --> 00:00:14.549 align:start position:0%
actually really similar to another leak
code<00:00:12.000><c> problem</c><00:00:12.400><c> which</c><00:00:12.639><c> is</c><00:00:12.799><c> called</c><00:00:13.679><c> merge</c><00:00:14.160><c> k</c>

00:00:14.549 --> 00:00:14.559 align:start position:0%
code problem which is called merge k
 

00:00:14.559 --> 00:00:16.630 align:start position:0%
code problem which is called merge k
sorted<00:00:15.040><c> lists</c><00:00:15.679><c> and</c><00:00:15.839><c> that</c><00:00:16.080><c> problem</c><00:00:16.480><c> is</c>

00:00:16.630 --> 00:00:16.640 align:start position:0%
sorted lists and that problem is
 

00:00:16.640 --> 00:00:18.470 align:start position:0%
sorted lists and that problem is
actually<00:00:16.960><c> a</c><00:00:17.039><c> hard</c><00:00:17.440><c> problem</c><00:00:17.760><c> so</c><00:00:17.920><c> it's</c><00:00:18.080><c> kind</c><00:00:18.320><c> of</c>

00:00:18.470 --> 00:00:18.480 align:start position:0%
actually a hard problem so it's kind of
 

00:00:18.480 --> 00:00:20.150 align:start position:0%
actually a hard problem so it's kind of
weird<00:00:18.720><c> that</c><00:00:18.880><c> they</c><00:00:19.039><c> make</c><00:00:19.279><c> this</c><00:00:19.600><c> a</c><00:00:19.760><c> medium</c>

00:00:20.150 --> 00:00:20.160 align:start position:0%
weird that they make this a medium
 

00:00:20.160 --> 00:00:21.750 align:start position:0%
weird that they make this a medium
problem<00:00:20.480><c> because</c><00:00:20.720><c> this</c><00:00:20.880><c> problem</c><00:00:21.199><c> is</c><00:00:21.359><c> actually</c>

00:00:21.750 --> 00:00:21.760 align:start position:0%
problem because this problem is actually
 

00:00:21.760 --> 00:00:24.550 align:start position:0%
problem because this problem is actually
even<00:00:22.080><c> harder</c><00:00:22.720><c> than</c><00:00:23.439><c> the</c><00:00:23.680><c> merge</c><00:00:23.920><c> case</c><00:00:24.160><c> sorted</c>

00:00:24.550 --> 00:00:24.560 align:start position:0%
even harder than the merge case sorted
 

00:00:24.560 --> 00:00:27.349 align:start position:0%
even harder than the merge case sorted
list<00:00:24.880><c> problem</c><00:00:25.279><c> but</c><00:00:25.519><c> that's</c><00:00:25.840><c> okay</c><00:00:26.320><c> so</c><00:00:26.560><c> we</c><00:00:26.880><c> are</c>

00:00:27.349 --> 00:00:27.359 align:start position:0%
list problem but that's okay so we are
 

00:00:27.359 --> 00:00:29.910 align:start position:0%
list problem but that's okay so we are
told<00:00:27.680><c> to</c><00:00:27.840><c> design</c><00:00:28.320><c> a</c><00:00:28.480><c> simplified</c><00:00:29.039><c> version</c><00:00:29.519><c> of</c>

00:00:29.910 --> 00:00:29.920 align:start position:0%
told to design a simplified version of
 

00:00:29.920 --> 00:00:31.910 align:start position:0%
told to design a simplified version of
twitter<00:00:30.560><c> and</c><00:00:30.720><c> this</c><00:00:30.960><c> problem</c><00:00:31.199><c> is</c><00:00:31.359><c> really</c><00:00:31.599><c> about</c>

00:00:31.910 --> 00:00:31.920 align:start position:0%
twitter and this problem is really about
 

00:00:31.920 --> 00:00:33.750 align:start position:0%
twitter and this problem is really about
which<00:00:32.239><c> data</c><00:00:32.640><c> structures</c><00:00:33.200><c> are</c><00:00:33.280><c> we</c><00:00:33.440><c> going</c><00:00:33.600><c> to</c>

00:00:33.750 --> 00:00:33.760 align:start position:0%
which data structures are we going to
 

00:00:33.760 --> 00:00:36.150 align:start position:0%
which data structures are we going to
use<00:00:34.079><c> for</c><00:00:34.320><c> each</c><00:00:34.719><c> of</c><00:00:34.960><c> these</c><00:00:35.280><c> functions</c><00:00:35.840><c> so</c><00:00:36.000><c> you</c>

00:00:36.150 --> 00:00:36.160 align:start position:0%
use for each of these functions so you
 

00:00:36.160 --> 00:00:37.830 align:start position:0%
use for each of these functions so you
really<00:00:36.399><c> need</c><00:00:36.559><c> to</c><00:00:36.640><c> have</c><00:00:36.800><c> an</c><00:00:36.960><c> understanding</c><00:00:37.600><c> of</c>

00:00:37.830 --> 00:00:37.840 align:start position:0%
really need to have an understanding of
 

00:00:37.840 --> 00:00:39.590 align:start position:0%
really need to have an understanding of
trade-offs<00:00:38.719><c> to</c><00:00:38.960><c> make</c><00:00:39.120><c> sure</c><00:00:39.280><c> that</c><00:00:39.440><c> we</c>

00:00:39.590 --> 00:00:39.600 align:start position:0%
trade-offs to make sure that we
 

00:00:39.600 --> 00:00:41.350 align:start position:0%
trade-offs to make sure that we
implement<00:00:40.000><c> each</c><00:00:40.239><c> of</c><00:00:40.320><c> these</c><00:00:40.559><c> functions</c><00:00:41.040><c> in</c><00:00:41.200><c> the</c>

00:00:41.350 --> 00:00:41.360 align:start position:0%
implement each of these functions in the
 

00:00:41.360 --> 00:00:43.990 align:start position:0%
implement each of these functions in the
most<00:00:41.760><c> efficient</c><00:00:42.320><c> way</c><00:00:42.800><c> so</c><00:00:42.960><c> there's</c><00:00:43.360><c> in</c><00:00:43.440><c> total</c>

00:00:43.990 --> 00:00:44.000 align:start position:0%
most efficient way so there's in total
 

00:00:44.000 --> 00:00:45.830 align:start position:0%
most efficient way so there's in total
five<00:00:44.399><c> functions</c><00:00:44.800><c> we</c><00:00:44.960><c> wanna</c><00:00:45.200><c> do</c><00:00:45.360><c> one</c><00:00:45.680><c> is</c><00:00:45.760><c> the</c>

00:00:45.830 --> 00:00:45.840 align:start position:0%
five functions we wanna do one is the
 

00:00:45.840 --> 00:00:47.590 align:start position:0%
five functions we wanna do one is the
constructor<00:00:46.480><c> so</c><00:00:46.719><c> that's</c><00:00:46.960><c> where</c><00:00:47.120><c> we're</c><00:00:47.360><c> really</c>

00:00:47.590 --> 00:00:47.600 align:start position:0%
constructor so that's where we're really
 

00:00:47.600 --> 00:00:49.190 align:start position:0%
constructor so that's where we're really
just<00:00:47.760><c> gonna</c><00:00:47.920><c> handle</c><00:00:48.239><c> what</c><00:00:48.399><c> data</c><00:00:48.719><c> structures</c>

00:00:49.190 --> 00:00:49.200 align:start position:0%
just gonna handle what data structures
 

00:00:49.200 --> 00:00:50.869 align:start position:0%
just gonna handle what data structures
we<00:00:49.280><c> wanna</c><00:00:49.600><c> use</c><00:00:49.840><c> like</c><00:00:50.000><c> initializing</c><00:00:50.559><c> them</c><00:00:50.800><c> and</c>

00:00:50.869 --> 00:00:50.879 align:start position:0%
we wanna use like initializing them and
 

00:00:50.879 --> 00:00:52.630 align:start position:0%
we wanna use like initializing them and
all<00:00:51.039><c> that</c><00:00:51.520><c> and</c><00:00:51.680><c> i'm</c><00:00:51.840><c> actually</c><00:00:52.160><c> gonna</c><00:00:52.320><c> start</c>

00:00:52.630 --> 00:00:52.640 align:start position:0%
all that and i'm actually gonna start
 

00:00:52.640 --> 00:00:54.790 align:start position:0%
all that and i'm actually gonna start
with<00:00:52.800><c> the</c><00:00:52.960><c> implementation</c><00:00:53.680><c> for</c><00:00:53.920><c> these</c><00:00:54.239><c> two</c>

00:00:54.790 --> 00:00:54.800 align:start position:0%
with the implementation for these two
 

00:00:54.800 --> 00:00:56.950 align:start position:0%
with the implementation for these two
functions<00:00:55.280><c> the</c><00:00:55.520><c> follow</c><00:00:56.079><c> function</c><00:00:56.559><c> and</c><00:00:56.640><c> the</c>

00:00:56.950 --> 00:00:56.960 align:start position:0%
functions the follow function and the
 

00:00:56.960 --> 00:00:58.470 align:start position:0%
functions the follow function and the
unfollow<00:00:57.600><c> function</c>

00:00:58.470 --> 00:00:58.480 align:start position:0%
unfollow function
 

00:00:58.480 --> 00:01:01.590 align:start position:0%
unfollow function
so<00:00:58.800><c> any</c><00:00:59.199><c> user</c><00:01:00.079><c> in</c><00:01:00.160><c> this</c><00:01:00.320><c> case</c><00:01:00.559><c> the</c><00:01:00.719><c> follower</c><00:01:01.199><c> id</c>

00:01:01.590 --> 00:01:01.600 align:start position:0%
so any user in this case the follower id
 

00:01:01.600 --> 00:01:04.710 align:start position:0%
so any user in this case the follower id
is<00:01:01.760><c> the</c><00:01:02.000><c> user</c><00:01:02.399><c> can</c><00:01:02.800><c> follow</c><00:01:03.359><c> another</c><00:01:04.159><c> user</c><00:01:04.640><c> and</c>

00:01:04.710 --> 00:01:04.720 align:start position:0%
is the user can follow another user and
 

00:01:04.720 --> 00:01:07.670 align:start position:0%
is the user can follow another user and
that's<00:01:05.040><c> called</c><00:01:05.280><c> the</c><00:01:05.519><c> follow</c><00:01:06.080><c> e</c><00:01:06.400><c> id</c><00:01:06.880><c> followee</c><00:01:07.600><c> a</c>

00:01:07.670 --> 00:01:07.680 align:start position:0%
that's called the follow e id followee a
 

00:01:07.680 --> 00:01:10.070 align:start position:0%
that's called the follow e id followee a
little<00:01:07.840><c> bit</c><00:01:08.000><c> confusing</c><00:01:08.560><c> for</c><00:01:08.720><c> me</c><00:01:09.360><c> but</c><00:01:09.600><c> so</c>

00:01:10.070 --> 00:01:10.080 align:start position:0%
little bit confusing for me but so
 

00:01:10.080 --> 00:01:11.510 align:start position:0%
little bit confusing for me but so
clearly<00:01:10.400><c> with</c><00:01:10.560><c> this</c><00:01:10.720><c> function</c><00:01:11.119><c> we</c><00:01:11.200><c> need</c><00:01:11.360><c> to</c>

00:01:11.510 --> 00:01:11.520 align:start position:0%
clearly with this function we need to
 

00:01:11.520 --> 00:01:15.190 align:start position:0%
clearly with this function we need to
keep<00:01:11.840><c> track</c><00:01:12.479><c> that</c><00:01:12.880><c> this</c><00:01:13.200><c> user</c><00:01:13.920><c> is</c><00:01:14.240><c> following</c>

00:01:15.190 --> 00:01:15.200 align:start position:0%
keep track that this user is following
 

00:01:15.200 --> 00:01:17.190 align:start position:0%
keep track that this user is following
this<00:01:15.520><c> user</c><00:01:15.920><c> right</c><00:01:16.080><c> we</c><00:01:16.240><c> need</c><00:01:16.400><c> a</c><00:01:16.479><c> data</c><00:01:16.799><c> structure</c>

00:01:17.190 --> 00:01:17.200 align:start position:0%
this user right we need a data structure
 

00:01:17.200 --> 00:01:18.870 align:start position:0%
this user right we need a data structure
to<00:01:17.360><c> do</c><00:01:17.520><c> that</c><00:01:17.680><c> now</c><00:01:17.840><c> there's</c><00:01:18.000><c> a</c><00:01:18.159><c> bunch</c><00:01:18.560><c> that</c><00:01:18.720><c> we</c>

00:01:18.870 --> 00:01:18.880 align:start position:0%
to do that now there's a bunch that we
 

00:01:18.880 --> 00:01:21.030 align:start position:0%
to do that now there's a bunch that we
could<00:01:19.040><c> do</c><00:01:19.680><c> the</c><00:01:19.920><c> easiest</c><00:01:20.479><c> one</c><00:01:20.640><c> that</c><00:01:20.799><c> you</c><00:01:20.880><c> might</c>

00:01:21.030 --> 00:01:21.040 align:start position:0%
could do the easiest one that you might
 

00:01:21.040 --> 00:01:23.350 align:start position:0%
could do the easiest one that you might
consider<00:01:21.439><c> is</c><00:01:21.520><c> a</c><00:01:21.680><c> map</c><00:01:22.000><c> right</c><00:01:22.159><c> we</c><00:01:22.320><c> want</c><00:01:22.479><c> to</c><00:01:22.720><c> map</c>

00:01:23.350 --> 00:01:23.360 align:start position:0%
consider is a map right we want to map
 

00:01:23.360 --> 00:01:26.390 align:start position:0%
consider is a map right we want to map
this<00:01:23.680><c> user</c><00:01:24.320><c> to</c><00:01:24.720><c> another</c><00:01:25.360><c> user</c>

00:01:26.390 --> 00:01:26.400 align:start position:0%
this user to another user
 

00:01:26.400 --> 00:01:28.230 align:start position:0%
this user to another user
but<00:01:26.560><c> of</c><00:01:26.720><c> course</c><00:01:27.119><c> a</c><00:01:27.280><c> user</c>

00:01:28.230 --> 00:01:28.240 align:start position:0%
but of course a user
 

00:01:28.240 --> 00:01:30.310 align:start position:0%
but of course a user
can<00:01:28.479><c> actually</c><00:01:28.799><c> not</c><00:01:29.040><c> just</c><00:01:29.280><c> follow</c><00:01:29.759><c> one</c><00:01:30.000><c> person</c>

00:01:30.310 --> 00:01:30.320 align:start position:0%
can actually not just follow one person
 

00:01:30.320 --> 00:01:33.109 align:start position:0%
can actually not just follow one person
but<00:01:30.479><c> they</c><00:01:30.640><c> could</c><00:01:30.799><c> follow</c><00:01:31.280><c> multiple</c><00:01:31.840><c> people</c><00:01:32.479><c> so</c>

00:01:33.109 --> 00:01:33.119 align:start position:0%
but they could follow multiple people so
 

00:01:33.119 --> 00:01:34.950 align:start position:0%
but they could follow multiple people so
the<00:01:33.439><c> simplest</c><00:01:34.000><c> idea</c><00:01:34.320><c> that</c><00:01:34.479><c> you</c><00:01:34.640><c> might</c><00:01:34.799><c> think</c>

00:01:34.950 --> 00:01:34.960 align:start position:0%
the simplest idea that you might think
 

00:01:34.960 --> 00:01:37.510 align:start position:0%
the simplest idea that you might think
of<00:01:35.119><c> is</c><00:01:35.280><c> first</c><00:01:35.520><c> okay</c><00:01:35.759><c> create</c><00:01:36.159><c> a</c><00:01:36.320><c> hash</c><00:01:36.640><c> map</c><00:01:37.040><c> right</c>

00:01:37.510 --> 00:01:37.520 align:start position:0%
of is first okay create a hash map right
 

00:01:37.520 --> 00:01:40.069 align:start position:0%
of is first okay create a hash map right
uh<00:01:37.680><c> where</c><00:01:37.920><c> we're</c><00:01:38.079><c> gonna</c><00:01:38.400><c> map</c><00:01:38.880><c> the</c><00:01:39.200><c> user</c><00:01:39.600><c> id</c>

00:01:40.069 --> 00:01:40.079 align:start position:0%
uh where we're gonna map the user id
 

00:01:40.079 --> 00:01:42.710 align:start position:0%
uh where we're gonna map the user id
right<00:01:40.240><c> just</c><00:01:40.400><c> some</c><00:01:40.640><c> generic</c><00:01:41.200><c> user</c><00:01:41.920><c> to</c><00:01:42.240><c> whoever</c>

00:01:42.710 --> 00:01:42.720 align:start position:0%
right just some generic user to whoever
 

00:01:42.720 --> 00:01:44.310 align:start position:0%
right just some generic user to whoever
they're<00:01:43.040><c> following</c><00:01:43.600><c> right</c><00:01:43.759><c> we'll</c><00:01:43.920><c> call</c><00:01:44.159><c> that</c>

00:01:44.310 --> 00:01:44.320 align:start position:0%
they're following right we'll call that
 

00:01:44.320 --> 00:01:46.550 align:start position:0%
they're following right we'll call that
the<00:01:44.560><c> follow</c><00:01:45.040><c> eid</c><00:01:45.840><c> but</c><00:01:46.000><c> it's</c><00:01:46.159><c> not</c><00:01:46.320><c> just</c><00:01:46.479><c> going</c>

00:01:46.550 --> 00:01:46.560 align:start position:0%
the follow eid but it's not just going
 

00:01:46.560 --> 00:01:49.109 align:start position:0%
the follow eid but it's not just going
to<00:01:46.640><c> be</c><00:01:46.880><c> one</c><00:01:47.119><c> so</c><00:01:47.360><c> let's</c><00:01:47.600><c> actually</c><00:01:47.920><c> call</c><00:01:48.159><c> it</c><00:01:48.399><c> list</c>

00:01:49.109 --> 00:01:49.119 align:start position:0%
to be one so let's actually call it list
 

00:01:49.119 --> 00:01:51.670 align:start position:0%
to be one so let's actually call it list
of<00:01:49.840><c> followee</c><00:01:50.399><c> ids</c><00:01:50.880><c> right</c><00:01:51.119><c> that's</c><00:01:51.280><c> just</c><00:01:51.520><c> our</c>

00:01:51.670 --> 00:01:51.680 align:start position:0%
of followee ids right that's just our
 

00:01:51.680 --> 00:01:53.270 align:start position:0%
of followee ids right that's just our
naive<00:01:52.159><c> approach</c><00:01:52.560><c> that's</c><00:01:52.720><c> just</c><00:01:52.880><c> the</c><00:01:53.040><c> first</c>

00:01:53.270 --> 00:01:53.280 align:start position:0%
naive approach that's just the first
 

00:01:53.280 --> 00:01:55.350 align:start position:0%
naive approach that's just the first
thing<00:01:53.439><c> that</c><00:01:53.520><c> came</c><00:01:53.759><c> to</c><00:01:53.920><c> our</c><00:01:54.079><c> mind</c><00:01:54.720><c> so</c><00:01:54.880><c> if</c><00:01:55.119><c> each</c>

00:01:55.350 --> 00:01:55.360 align:start position:0%
thing that came to our mind so if each
 

00:01:55.360 --> 00:01:57.350 align:start position:0%
thing that came to our mind so if each
time<00:01:55.600><c> we</c><00:01:55.840><c> get</c><00:01:56.000><c> a</c><00:01:56.159><c> user</c><00:01:56.560><c> and</c><00:01:56.719><c> we</c><00:01:56.880><c> are</c><00:01:57.040><c> told</c><00:01:57.280><c> that</c>

00:01:57.350 --> 00:01:57.360 align:start position:0%
time we get a user and we are told that
 

00:01:57.360 --> 00:01:59.109 align:start position:0%
time we get a user and we are told that
they<00:01:57.520><c> follow</c><00:01:57.840><c> somebody</c><00:01:58.240><c> else</c><00:01:58.640><c> we</c><00:01:58.719><c> can</c><00:01:58.880><c> just</c>

00:01:59.109 --> 00:01:59.119 align:start position:0%
they follow somebody else we can just
 

00:01:59.119 --> 00:02:01.510 align:start position:0%
they follow somebody else we can just
keep<00:01:59.439><c> adding</c><00:01:59.920><c> that</c><00:02:00.320><c> you</c><00:02:00.479><c> know</c><00:02:00.880><c> user</c><00:02:01.200><c> that</c><00:02:01.360><c> they</c>

00:02:01.510 --> 00:02:01.520 align:start position:0%
keep adding that you know user that they
 

00:02:01.520 --> 00:02:04.069 align:start position:0%
keep adding that you know user that they
follow<00:02:01.920><c> to</c><00:02:02.079><c> the</c><00:02:02.320><c> end</c><00:02:02.719><c> of</c><00:02:02.960><c> that</c><00:02:03.360><c> list</c><00:02:03.680><c> that</c><00:02:03.920><c> we</c>

00:02:04.069 --> 00:02:04.079 align:start position:0%
follow to the end of that list that we
 

00:02:04.079 --> 00:02:05.910 align:start position:0%
follow to the end of that list that we
have<00:02:04.560><c> right</c><00:02:04.799><c> in</c><00:02:04.960><c> our</c><00:02:05.040><c> hash</c><00:02:05.280><c> map</c><00:02:05.600><c> this</c><00:02:05.759><c> is</c><00:02:05.840><c> going</c>

00:02:05.910 --> 00:02:05.920 align:start position:0%
have right in our hash map this is going
 

00:02:05.920 --> 00:02:08.309 align:start position:0%
have right in our hash map this is going
to<00:02:06.000><c> be</c><00:02:06.159><c> the</c><00:02:06.320><c> key</c><00:02:06.560><c> this</c><00:02:06.719><c> is</c><00:02:06.799><c> going</c><00:02:06.960><c> to</c><00:02:07.040><c> be</c>

00:02:08.309 --> 00:02:08.319 align:start position:0%
to be the key this is going to be
 

00:02:08.319 --> 00:02:10.550 align:start position:0%
to be the key this is going to be
the<00:02:08.560><c> key</c><00:02:08.800><c> is</c><00:02:08.879><c> going</c><00:02:08.959><c> to</c><00:02:09.039><c> map</c><00:02:09.360><c> to</c><00:02:09.599><c> a</c><00:02:09.759><c> list</c><00:02:10.160><c> and</c><00:02:10.399><c> we</c>

00:02:10.550 --> 00:02:10.560 align:start position:0%
the key is going to map to a list and we
 

00:02:10.560 --> 00:02:13.190 align:start position:0%
the key is going to map to a list and we
can<00:02:10.800><c> add</c><00:02:11.440><c> a</c><00:02:11.599><c> new</c><00:02:11.840><c> value</c><00:02:12.160><c> to</c><00:02:12.319><c> that</c><00:02:12.480><c> list</c><00:02:12.800><c> and</c><00:02:12.879><c> of</c>

00:02:13.190 --> 00:02:13.200 align:start position:0%
can add a new value to that list and of
 

00:02:13.200 --> 00:02:14.790 align:start position:0%
can add a new value to that list and of
one<00:02:13.360><c> time</c><00:02:13.520><c> so</c><00:02:13.680><c> that's</c><00:02:13.920><c> easy</c><00:02:14.239><c> but</c><00:02:14.400><c> now</c><00:02:14.560><c> we're</c>

00:02:14.790 --> 00:02:14.800 align:start position:0%
one time so that's easy but now we're
 

00:02:14.800 --> 00:02:16.949 align:start position:0%
one time so that's easy but now we're
introducing<00:02:15.360><c> a</c><00:02:15.520><c> second</c><00:02:15.920><c> operation</c><00:02:16.480><c> called</c>

00:02:16.949 --> 00:02:16.959 align:start position:0%
introducing a second operation called
 

00:02:16.959 --> 00:02:19.830 align:start position:0%
introducing a second operation called
unfollow<00:02:17.920><c> so</c><00:02:18.160><c> if</c><00:02:18.560><c> a</c><00:02:18.720><c> user</c><00:02:19.120><c> now</c><00:02:19.360><c> wants</c><00:02:19.599><c> to</c>

00:02:19.830 --> 00:02:19.840 align:start position:0%
unfollow so if a user now wants to
 

00:02:19.840 --> 00:02:22.470 align:start position:0%
unfollow so if a user now wants to
unfollow<00:02:20.720><c> another</c><00:02:21.040><c> user</c><00:02:21.680><c> how</c><00:02:22.000><c> can</c><00:02:22.239><c> we</c>

00:02:22.470 --> 00:02:22.480 align:start position:0%
unfollow another user how can we
 

00:02:22.480 --> 00:02:23.990 align:start position:0%
unfollow another user how can we
implement<00:02:22.800><c> it</c><00:02:22.959><c> with</c><00:02:23.120><c> our</c><00:02:23.360><c> current</c><00:02:23.680><c> data</c>

00:02:23.990 --> 00:02:24.000 align:start position:0%
implement it with our current data
 

00:02:24.000 --> 00:02:26.070 align:start position:0%
implement it with our current data
structure<00:02:24.319><c> well</c><00:02:24.560><c> removing</c><00:02:25.280><c> from</c><00:02:25.520><c> a</c><00:02:25.599><c> list</c><00:02:26.000><c> is</c>

00:02:26.070 --> 00:02:26.080 align:start position:0%
structure well removing from a list is
 

00:02:26.080 --> 00:02:28.710 align:start position:0%
structure well removing from a list is
not<00:02:26.319><c> as</c><00:02:26.560><c> easy</c><00:02:26.879><c> as</c><00:02:27.120><c> adding</c><00:02:27.520><c> to</c><00:02:27.680><c> the</c><00:02:27.920><c> end</c><00:02:28.239><c> of</c><00:02:28.400><c> that</c>

00:02:28.710 --> 00:02:28.720 align:start position:0%
not as easy as adding to the end of that
 

00:02:28.720 --> 00:02:30.630 align:start position:0%
not as easy as adding to the end of that
list<00:02:29.280><c> because</c><00:02:29.520><c> we</c><00:02:29.760><c> might</c><00:02:29.920><c> actually</c><00:02:30.239><c> have</c><00:02:30.400><c> to</c>

00:02:30.630 --> 00:02:30.640 align:start position:0%
list because we might actually have to
 

00:02:30.640 --> 00:02:32.390 align:start position:0%
list because we might actually have to
search<00:02:31.040><c> through</c><00:02:31.200><c> the</c><00:02:31.360><c> entire</c><00:02:31.680><c> list</c><00:02:31.920><c> to</c><00:02:32.000><c> even</c>

00:02:32.390 --> 00:02:32.400 align:start position:0%
search through the entire list to even
 

00:02:32.400 --> 00:02:34.470 align:start position:0%
search through the entire list to even
find<00:02:33.040><c> that</c><00:02:33.360><c> a</c><00:02:33.519><c> follower</c><00:02:34.000><c> id</c><00:02:34.239><c> that</c><00:02:34.400><c> we're</c>

00:02:34.470 --> 00:02:34.480 align:start position:0%
find that a follower id that we're
 

00:02:34.480 --> 00:02:36.229 align:start position:0%
find that a follower id that we're
trying<00:02:34.720><c> to</c><00:02:34.800><c> remove</c><00:02:35.200><c> and</c><00:02:35.280><c> then</c><00:02:35.440><c> removing</c><00:02:35.920><c> it</c><00:02:36.080><c> is</c>

00:02:36.229 --> 00:02:36.239 align:start position:0%
trying to remove and then removing it is
 

00:02:36.239 --> 00:02:37.830 align:start position:0%
trying to remove and then removing it is
going<00:02:36.319><c> to</c><00:02:36.400><c> be</c><00:02:36.560><c> a</c><00:02:36.720><c> big-o</c><00:02:37.040><c> of</c><00:02:37.280><c> end</c><00:02:37.519><c> time</c>

00:02:37.830 --> 00:02:37.840 align:start position:0%
going to be a big-o of end time
 

00:02:37.840 --> 00:02:39.830 align:start position:0%
going to be a big-o of end time
operation<00:02:38.400><c> is</c><00:02:38.560><c> there</c><00:02:38.800><c> a</c><00:02:38.879><c> more</c><00:02:39.040><c> efficient</c><00:02:39.440><c> way</c>

00:02:39.830 --> 00:02:39.840 align:start position:0%
operation is there a more efficient way
 

00:02:39.840 --> 00:02:42.309 align:start position:0%
operation is there a more efficient way
that<00:02:40.080><c> we</c><00:02:40.319><c> can</c><00:02:40.560><c> do</c><00:02:40.720><c> this</c><00:02:41.120><c> well</c><00:02:41.440><c> there</c><00:02:41.760><c> is</c><00:02:41.920><c> a</c><00:02:42.080><c> data</c>

00:02:42.309 --> 00:02:42.319 align:start position:0%
that we can do this well there is a data
 

00:02:42.319 --> 00:02:44.390 align:start position:0%
that we can do this well there is a data
structure<00:02:42.640><c> we</c><00:02:42.800><c> know</c><00:02:42.959><c> that</c><00:02:43.200><c> can</c><00:02:43.519><c> add</c><00:02:44.080><c> and</c>

00:02:44.390 --> 00:02:44.400 align:start position:0%
structure we know that can add and
 

00:02:44.400 --> 00:02:47.270 align:start position:0%
structure we know that can add and
remove<00:02:45.280><c> in</c><00:02:45.519><c> o</c><00:02:45.760><c> of</c><00:02:45.920><c> one</c><00:02:46.160><c> time</c><00:02:46.720><c> do</c><00:02:46.800><c> you</c><00:02:46.959><c> know</c><00:02:47.120><c> what</c>

00:02:47.270 --> 00:02:47.280 align:start position:0%
remove in o of one time do you know what
 

00:02:47.280 --> 00:02:49.750 align:start position:0%
remove in o of one time do you know what
it<00:02:47.440><c> is</c><00:02:47.680><c> well</c><00:02:48.000><c> hashmap</c><00:02:48.640><c> is</c><00:02:48.879><c> one</c><00:02:49.040><c> of</c><00:02:49.120><c> them</c><00:02:49.440><c> but</c><00:02:49.680><c> in</c>

00:02:49.750 --> 00:02:49.760 align:start position:0%
it is well hashmap is one of them but in
 

00:02:49.760 --> 00:02:52.309 align:start position:0%
it is well hashmap is one of them but in
this<00:02:50.000><c> case</c><00:02:50.319><c> we</c><00:02:50.480><c> don't</c><00:02:50.640><c> really</c><00:02:50.959><c> need</c><00:02:51.360><c> a</c><00:02:51.680><c> map</c><00:02:52.160><c> we</c>

00:02:52.309 --> 00:02:52.319 align:start position:0%
this case we don't really need a map we
 

00:02:52.319 --> 00:02:55.350 align:start position:0%
this case we don't really need a map we
just<00:02:52.480><c> need</c><00:02:52.720><c> a</c><00:02:53.040><c> set</c><00:02:53.440><c> of</c><00:02:53.680><c> values</c><00:02:54.480><c> right</c><00:02:54.800><c> a</c><00:02:55.040><c> list</c>

00:02:55.350 --> 00:02:55.360 align:start position:0%
just need a set of values right a list
 

00:02:55.360 --> 00:02:57.830 align:start position:0%
just need a set of values right a list
or<00:02:55.519><c> a</c><00:02:55.680><c> set</c><00:02:56.000><c> but</c><00:02:56.400><c> in</c><00:02:56.480><c> this</c><00:02:56.640><c> case</c><00:02:56.959><c> we</c><00:02:57.120><c> can</c><00:02:57.200><c> use</c><00:02:57.519><c> a</c>

00:02:57.830 --> 00:02:57.840 align:start position:0%
or a set but in this case we can use a
 

00:02:57.840 --> 00:03:01.509 align:start position:0%
or a set but in this case we can use a
hash<00:02:58.480><c> set</c><00:02:59.200><c> and</c><00:02:59.360><c> that</c><00:02:59.599><c> can</c><00:03:00.159><c> insert</c><00:03:00.800><c> and</c><00:03:01.040><c> remove</c>

00:03:01.509 --> 00:03:01.519 align:start position:0%
hash set and that can insert and remove
 

00:03:01.519 --> 00:03:03.270 align:start position:0%
hash set and that can insert and remove
in<00:03:01.680><c> big</c><00:03:01.920><c> o</c><00:03:02.000><c> of</c><00:03:02.159><c> one</c><00:03:02.319><c> time</c><00:03:02.480><c> so</c><00:03:02.720><c> instead</c><00:03:02.959><c> of</c><00:03:03.040><c> using</c>

00:03:03.270 --> 00:03:03.280 align:start position:0%
in big o of one time so instead of using
 

00:03:03.280 --> 00:03:05.270 align:start position:0%
in big o of one time so instead of using
a<00:03:03.440><c> list</c><00:03:03.840><c> which</c><00:03:04.000><c> was</c><00:03:04.239><c> our</c><00:03:04.400><c> naive</c><00:03:04.879><c> approach</c>

00:03:05.270 --> 00:03:05.280 align:start position:0%
a list which was our naive approach
 

00:03:05.280 --> 00:03:07.670 align:start position:0%
a list which was our naive approach
we're<00:03:05.519><c> actually</c><00:03:05.840><c> going</c><00:03:06.000><c> to</c><00:03:06.159><c> map</c><00:03:06.480><c> each</c><00:03:06.720><c> user</c><00:03:07.120><c> id</c>

00:03:07.670 --> 00:03:07.680 align:start position:0%
we're actually going to map each user id
 

00:03:07.680 --> 00:03:11.270 align:start position:0%
we're actually going to map each user id
to<00:03:07.840><c> a</c><00:03:08.000><c> hash</c><00:03:08.480><c> set</c><00:03:09.040><c> of</c><00:03:09.519><c> follow</c><00:03:09.920><c> eids</c><00:03:10.879><c> okay</c><00:03:11.120><c> so</c>

00:03:11.270 --> 00:03:11.280 align:start position:0%
to a hash set of follow eids okay so
 

00:03:11.280 --> 00:03:12.869 align:start position:0%
to a hash set of follow eids okay so
that's<00:03:11.519><c> actually</c><00:03:12.000><c> pretty</c><00:03:12.239><c> easy</c><00:03:12.560><c> right</c><00:03:12.720><c> so</c>

00:03:12.869 --> 00:03:12.879 align:start position:0%
that's actually pretty easy right so
 

00:03:12.879 --> 00:03:14.869 align:start position:0%
that's actually pretty easy right so
we've<00:03:13.120><c> already</c><00:03:13.360><c> figured</c><00:03:13.760><c> out</c><00:03:14.159><c> a</c><00:03:14.400><c> follow</c><00:03:14.800><c> and</c>

00:03:14.869 --> 00:03:14.879 align:start position:0%
we've already figured out a follow and
 

00:03:14.879 --> 00:03:17.030 align:start position:0%
we've already figured out a follow and
we've<00:03:15.120><c> already</c><00:03:15.360><c> figured</c><00:03:15.680><c> out</c><00:03:15.920><c> unfollow</c><00:03:16.720><c> and</c>

00:03:17.030 --> 00:03:17.040 align:start position:0%
we've already figured out unfollow and
 

00:03:17.040 --> 00:03:18.470 align:start position:0%
we've already figured out unfollow and
of<00:03:17.200><c> course</c><00:03:17.360><c> we're</c><00:03:17.519><c> going</c><00:03:17.599><c> to</c><00:03:17.680><c> be</c><00:03:17.920><c> initializing</c>

00:03:18.470 --> 00:03:18.480 align:start position:0%
of course we're going to be initializing
 

00:03:18.480 --> 00:03:19.830 align:start position:0%
of course we're going to be initializing
this<00:03:18.640><c> data</c><00:03:18.959><c> structure</c><00:03:19.360><c> inside</c><00:03:19.599><c> of</c><00:03:19.760><c> our</c>

00:03:19.830 --> 00:03:19.840 align:start position:0%
this data structure inside of our
 

00:03:19.840 --> 00:03:21.589 align:start position:0%
this data structure inside of our
constructor<00:03:20.319><c> but</c><00:03:20.480><c> now</c><00:03:20.720><c> for</c><00:03:20.959><c> the</c><00:03:21.200><c> somewhat</c>

00:03:21.589 --> 00:03:21.599 align:start position:0%
constructor but now for the somewhat
 

00:03:21.599 --> 00:03:24.550 align:start position:0%
constructor but now for the somewhat
difficult<00:03:22.000><c> part</c><00:03:22.319><c> the</c><00:03:22.560><c> post</c><00:03:23.120><c> tweet</c><00:03:23.840><c> and</c><00:03:24.239><c> the</c>

00:03:24.550 --> 00:03:24.560 align:start position:0%
difficult part the post tweet and the
 

00:03:24.560 --> 00:03:27.190 align:start position:0%
difficult part the post tweet and the
get<00:03:24.959><c> news</c><00:03:25.440><c> feed</c><00:03:26.080><c> function</c><00:03:26.560><c> so</c><00:03:26.799><c> let's</c><00:03:27.040><c> start</c>

00:03:27.190 --> 00:03:27.200 align:start position:0%
get news feed function so let's start
 

00:03:27.200 --> 00:03:30.470 align:start position:0%
get news feed function so let's start
with<00:03:27.440><c> post</c><00:03:27.920><c> tweet</c><00:03:28.400><c> each</c><00:03:28.799><c> user</c><00:03:29.519><c> can</c><00:03:29.920><c> post</c><00:03:30.319><c> a</c>

00:03:30.470 --> 00:03:30.480 align:start position:0%
with post tweet each user can post a
 

00:03:30.480 --> 00:03:32.390 align:start position:0%
with post tweet each user can post a
tweet<00:03:30.959><c> and</c><00:03:31.120><c> obviously</c><00:03:31.519><c> they</c><00:03:31.599><c> can</c><00:03:31.840><c> post</c><00:03:32.159><c> more</c>

00:03:32.390 --> 00:03:32.400 align:start position:0%
tweet and obviously they can post more
 

00:03:32.400 --> 00:03:34.630 align:start position:0%
tweet and obviously they can post more
than<00:03:32.640><c> one</c><00:03:32.879><c> tweet</c><00:03:33.200><c> so</c><00:03:33.360><c> we</c><00:03:33.599><c> need</c><00:03:33.920><c> to</c><00:03:34.080><c> be</c><00:03:34.239><c> able</c><00:03:34.400><c> to</c>

00:03:34.630 --> 00:03:34.640 align:start position:0%
than one tweet so we need to be able to
 

00:03:34.640 --> 00:03:38.470 align:start position:0%
than one tweet so we need to be able to
map<00:03:35.200><c> a</c><00:03:35.440><c> user</c><00:03:36.080><c> to</c><00:03:36.400><c> their</c><00:03:37.120><c> list</c><00:03:37.599><c> of</c><00:03:37.760><c> tweets</c><00:03:38.159><c> right</c>

00:03:38.470 --> 00:03:38.480 align:start position:0%
map a user to their list of tweets right
 

00:03:38.480 --> 00:03:40.070 align:start position:0%
map a user to their list of tweets right
let's<00:03:38.640><c> just</c><00:03:38.799><c> start</c><00:03:38.959><c> with</c><00:03:39.120><c> a</c><00:03:39.280><c> list</c><00:03:39.599><c> again</c><00:03:40.000><c> and</c>

00:03:40.070 --> 00:03:40.080 align:start position:0%
let's just start with a list again and
 

00:03:40.080 --> 00:03:41.589 align:start position:0%
let's just start with a list again and
see<00:03:40.239><c> if</c><00:03:40.400><c> it</c><00:03:40.560><c> works</c><00:03:40.879><c> out</c><00:03:40.959><c> for</c><00:03:41.120><c> us</c><00:03:41.280><c> so</c><00:03:41.440><c> again</c>

00:03:41.589 --> 00:03:41.599 align:start position:0%
see if it works out for us so again
 

00:03:41.599 --> 00:03:43.190 align:start position:0%
see if it works out for us so again
we're<00:03:41.760><c> gonna</c><00:03:41.920><c> have</c><00:03:42.000><c> a</c><00:03:42.080><c> hash</c><00:03:42.400><c> map</c><00:03:42.799><c> okay</c><00:03:43.040><c> so</c>

00:03:43.190 --> 00:03:43.200 align:start position:0%
we're gonna have a hash map okay so
 

00:03:43.200 --> 00:03:44.789 align:start position:0%
we're gonna have a hash map okay so
we're<00:03:43.440><c> gonna</c><00:03:43.599><c> have</c><00:03:43.840><c> another</c><00:03:44.239><c> hash</c><00:03:44.560><c> map</c>

00:03:44.789 --> 00:03:44.799 align:start position:0%
we're gonna have another hash map
 

00:03:44.799 --> 00:03:46.949 align:start position:0%
we're gonna have another hash map
mapping<00:03:45.200><c> each</c><00:03:45.360><c> user</c><00:03:45.680><c> id</c><00:03:46.000><c> to</c><00:03:46.159><c> the</c><00:03:46.400><c> list</c><00:03:46.799><c> of</c>

00:03:46.949 --> 00:03:46.959 align:start position:0%
mapping each user id to the list of
 

00:03:46.959 --> 00:03:49.350 align:start position:0%
mapping each user id to the list of
their<00:03:47.280><c> tweets</c><00:03:47.760><c> and</c><00:03:47.840><c> each</c><00:03:48.080><c> time</c><00:03:48.400><c> we</c><00:03:48.879><c> post</c><00:03:49.200><c> a</c>

00:03:49.350 --> 00:03:49.360 align:start position:0%
their tweets and each time we post a
 

00:03:49.360 --> 00:03:51.030 align:start position:0%
their tweets and each time we post a
tweet<00:03:49.680><c> for</c><00:03:49.840><c> a</c><00:03:50.000><c> given</c><00:03:50.239><c> user</c><00:03:50.640><c> we're</c><00:03:50.799><c> just</c><00:03:50.959><c> going</c>

00:03:51.030 --> 00:03:51.040 align:start position:0%
tweet for a given user we're just going
 

00:03:51.040 --> 00:03:53.190 align:start position:0%
tweet for a given user we're just going
to<00:03:51.200><c> take</c><00:03:51.360><c> that</c><00:03:51.519><c> tweet</c><00:03:51.840><c> and</c><00:03:52.000><c> add</c><00:03:52.239><c> it</c><00:03:52.319><c> to</c><00:03:52.480><c> the</c><00:03:52.799><c> end</c>

00:03:53.190 --> 00:03:53.200 align:start position:0%
to take that tweet and add it to the end
 

00:03:53.200 --> 00:03:55.589 align:start position:0%
to take that tweet and add it to the end
of<00:03:53.439><c> that</c><00:03:53.760><c> list</c><00:03:54.400><c> so</c><00:03:54.640><c> let's</c><00:03:54.799><c> just</c><00:03:55.040><c> see</c><00:03:55.280><c> if</c><00:03:55.360><c> that</c>

00:03:55.589 --> 00:03:55.599 align:start position:0%
of that list so let's just see if that
 

00:03:55.599 --> 00:03:57.750 align:start position:0%
of that list so let's just see if that
works<00:03:56.000><c> for</c><00:03:56.159><c> now</c><00:03:56.400><c> that's</c><00:03:56.799><c> like</c><00:03:56.959><c> the</c><00:03:57.120><c> most</c><00:03:57.360><c> naive</c>

00:03:57.750 --> 00:03:57.760 align:start position:0%
works for now that's like the most naive
 

00:03:57.760 --> 00:03:59.270 align:start position:0%
works for now that's like the most naive
approach<00:03:58.159><c> and</c><00:03:58.319><c> in</c><00:03:58.400><c> this</c><00:03:58.560><c> case</c><00:03:58.799><c> i'll</c><00:03:58.959><c> just</c><00:03:59.120><c> tell</c>

00:03:59.270 --> 00:03:59.280 align:start position:0%
approach and in this case i'll just tell
 

00:03:59.280 --> 00:04:01.030 align:start position:0%
approach and in this case i'll just tell
you<00:03:59.519><c> it</c><00:03:59.760><c> is</c><00:03:59.920><c> going</c><00:04:00.080><c> to</c><00:04:00.239><c> work</c><00:04:00.480><c> for</c><00:04:00.640><c> us</c><00:04:00.959><c> and</c>

00:04:01.030 --> 00:04:01.040 align:start position:0%
you it is going to work for us and
 

00:04:01.040 --> 00:04:03.030 align:start position:0%
you it is going to work for us and
you're<00:04:01.200><c> going</c><00:04:01.280><c> to</c><00:04:01.439><c> see</c><00:04:01.680><c> why</c><00:04:02.159><c> so</c><00:04:02.560><c> by</c><00:04:02.720><c> the</c><00:04:02.799><c> way</c>

00:04:03.030 --> 00:04:03.040 align:start position:0%
you're going to see why so by the way
 

00:04:03.040 --> 00:04:04.710 align:start position:0%
you're going to see why so by the way
this<00:04:03.280><c> post</c><00:04:03.519><c> tweet</c><00:04:03.920><c> if</c><00:04:04.000><c> we're</c><00:04:04.159><c> just</c><00:04:04.319><c> adding</c><00:04:04.560><c> to</c>

00:04:04.710 --> 00:04:04.720 align:start position:0%
this post tweet if we're just adding to
 

00:04:04.720 --> 00:04:06.710 align:start position:0%
this post tweet if we're just adding to
the<00:04:04.879><c> end</c><00:04:05.040><c> of</c><00:04:05.120><c> the</c><00:04:05.280><c> list</c><00:04:05.599><c> each</c><00:04:05.920><c> time</c><00:04:06.239><c> we</c><00:04:06.400><c> can</c><00:04:06.560><c> do</c>

00:04:06.710 --> 00:04:06.720 align:start position:0%
the end of the list each time we can do
 

00:04:06.720 --> 00:04:09.190 align:start position:0%
the end of the list each time we can do
that<00:04:06.959><c> in</c><00:04:07.280><c> big</c><00:04:07.519><c> o</c><00:04:07.680><c> of</c><00:04:07.840><c> one</c><00:04:08.080><c> time</c><00:04:08.319><c> so</c><00:04:08.799><c> we've</c>

00:04:09.190 --> 00:04:09.200 align:start position:0%
that in big o of one time so we've
 

00:04:09.200 --> 00:04:10.869 align:start position:0%
that in big o of one time so we've
basically<00:04:09.599><c> got</c><00:04:09.840><c> all</c><00:04:10.080><c> three</c><00:04:10.480><c> of</c><00:04:10.640><c> these</c>

00:04:10.869 --> 00:04:10.879 align:start position:0%
basically got all three of these
 

00:04:10.879 --> 00:04:12.869 align:start position:0%
basically got all three of these
functions<00:04:11.439><c> running</c><00:04:11.760><c> in</c><00:04:11.840><c> big</c><00:04:12.080><c> o</c><00:04:12.159><c> of</c><00:04:12.239><c> one</c><00:04:12.480><c> time</c>

00:04:12.869 --> 00:04:12.879 align:start position:0%
functions running in big o of one time
 

00:04:12.879 --> 00:04:15.030 align:start position:0%
functions running in big o of one time
but<00:04:13.040><c> this</c><00:04:13.280><c> get</c><00:04:13.519><c> news</c><00:04:13.920><c> feed</c><00:04:14.159><c> is</c><00:04:14.319><c> going</c><00:04:14.480><c> to</c><00:04:14.560><c> be</c><00:04:14.799><c> by</c>

00:04:15.030 --> 00:04:15.040 align:start position:0%
but this get news feed is going to be by
 

00:04:15.040 --> 00:04:17.509 align:start position:0%
but this get news feed is going to be by
far<00:04:15.280><c> the</c><00:04:15.439><c> most</c><00:04:15.680><c> complex</c><00:04:16.239><c> function</c><00:04:16.959><c> so</c>

00:04:17.509 --> 00:04:17.519 align:start position:0%
far the most complex function so
 

00:04:17.519 --> 00:04:20.550 align:start position:0%
far the most complex function so
basically<00:04:18.160><c> for</c><00:04:18.479><c> any</c><00:04:18.799><c> given</c><00:04:19.120><c> user</c><00:04:19.840><c> we</c><00:04:20.079><c> want</c><00:04:20.320><c> to</c>

00:04:20.550 --> 00:04:20.560 align:start position:0%
basically for any given user we want to
 

00:04:20.560 --> 00:04:22.310 align:start position:0%
basically for any given user we want to
retrieve<00:04:21.120><c> the</c><00:04:21.440><c> 10</c>

00:04:22.310 --> 00:04:22.320 align:start position:0%
retrieve the 10
 

00:04:22.320 --> 00:04:26.950 align:start position:0%
retrieve the 10
most<00:04:23.120><c> recent</c><00:04:23.680><c> tweet</c><00:04:24.160><c> ids</c><00:04:24.880><c> for</c><00:04:25.280><c> that</c><00:04:25.759><c> user</c><00:04:26.479><c> and</c>

00:04:26.950 --> 00:04:26.960 align:start position:0%
most recent tweet ids for that user and
 

00:04:26.960 --> 00:04:28.629 align:start position:0%
most recent tweet ids for that user and
the<00:04:27.120><c> way</c><00:04:27.280><c> we're</c><00:04:27.520><c> going</c><00:04:27.600><c> to</c><00:04:27.680><c> get</c><00:04:27.840><c> the</c><00:04:27.919><c> 10</c><00:04:28.160><c> most</c>

00:04:28.629 --> 00:04:28.639 align:start position:0%
the way we're going to get the 10 most
 

00:04:28.639 --> 00:04:32.070 align:start position:0%
the way we're going to get the 10 most
recent<00:04:28.960><c> tweets</c><00:04:29.360><c> is</c><00:04:29.520><c> from</c><00:04:30.160><c> the</c><00:04:30.560><c> list</c><00:04:31.360><c> of</c><00:04:31.759><c> uh</c>

00:04:32.070 --> 00:04:32.080 align:start position:0%
recent tweets is from the list of uh
 

00:04:32.080 --> 00:04:34.550 align:start position:0%
recent tweets is from the list of uh
followees<00:04:33.120><c> of</c><00:04:33.520><c> the</c><00:04:33.680><c> list</c><00:04:33.919><c> of</c><00:04:34.080><c> people</c><00:04:34.400><c> that</c>

00:04:34.550 --> 00:04:34.560 align:start position:0%
followees of the list of people that
 

00:04:34.560 --> 00:04:37.030 align:start position:0%
followees of the list of people that
that<00:04:34.880><c> user</c><00:04:35.360><c> follows</c><00:04:35.919><c> right</c><00:04:36.320><c> and</c><00:04:36.560><c> from</c><00:04:36.800><c> that</c>

00:04:37.030 --> 00:04:37.040 align:start position:0%
that user follows right and from that
 

00:04:37.040 --> 00:04:39.590 align:start position:0%
that user follows right and from that
list<00:04:37.360><c> of</c><00:04:37.759><c> people</c><00:04:38.479><c> that</c><00:04:38.639><c> they</c><00:04:38.880><c> follow</c><00:04:39.199><c> we</c><00:04:39.360><c> want</c>

00:04:39.590 --> 00:04:39.600 align:start position:0%
list of people that they follow we want
 

00:04:39.600 --> 00:04:42.629 align:start position:0%
list of people that they follow we want
the<00:04:39.759><c> 10</c><00:04:40.160><c> most</c><00:04:40.720><c> recent</c><00:04:41.280><c> tweets</c><00:04:41.840><c> now</c><00:04:42.080><c> how</c><00:04:42.240><c> do</c><00:04:42.479><c> we</c>

00:04:42.629 --> 00:04:42.639 align:start position:0%
the 10 most recent tweets now how do we
 

00:04:42.639 --> 00:04:46.469 align:start position:0%
the 10 most recent tweets now how do we
even<00:04:43.040><c> get</c><00:04:43.360><c> most</c><00:04:43.840><c> recent</c><00:04:44.560><c> well</c><00:04:45.199><c> one</c><00:04:45.759><c> anytime</c><00:04:46.320><c> a</c>

00:04:46.469 --> 00:04:46.479 align:start position:0%
even get most recent well one anytime a
 

00:04:46.479 --> 00:04:49.270 align:start position:0%
even get most recent well one anytime a
user<00:04:47.199><c> posts</c><00:04:47.600><c> a</c><00:04:47.759><c> tweet</c><00:04:48.160><c> we're</c><00:04:48.400><c> already</c><00:04:48.960><c> adding</c>

00:04:49.270 --> 00:04:49.280 align:start position:0%
user posts a tweet we're already adding
 

00:04:49.280 --> 00:04:51.590 align:start position:0%
user posts a tweet we're already adding
it<00:04:49.360><c> to</c><00:04:49.520><c> the</c><00:04:49.919><c> end</c><00:04:50.320><c> of</c><00:04:50.479><c> the</c><00:04:50.720><c> list</c><00:04:50.960><c> right</c><00:04:51.120><c> so</c><00:04:51.280><c> if</c><00:04:51.440><c> we</c>

00:04:51.590 --> 00:04:51.600 align:start position:0%
it to the end of the list right so if we
 

00:04:51.600 --> 00:04:54.310 align:start position:0%
it to the end of the list right so if we
create<00:04:52.080><c> a</c><00:04:52.320><c> list</c><00:04:52.880><c> of</c><00:04:53.280><c> tweets</c><00:04:53.759><c> right</c><00:04:54.000><c> let's</c><00:04:54.160><c> say</c>

00:04:54.310 --> 00:04:54.320 align:start position:0%
create a list of tweets right let's say
 

00:04:54.320 --> 00:04:55.909 align:start position:0%
create a list of tweets right let's say
this<00:04:54.479><c> is</c><00:04:54.560><c> the</c><00:04:54.639><c> first</c><00:04:54.960><c> tweet</c><00:04:55.360><c> then</c><00:04:55.520><c> we</c><00:04:55.680><c> have</c><00:04:55.759><c> the</c>

00:04:55.909 --> 00:04:55.919 align:start position:0%
this is the first tweet then we have the
 

00:04:55.919 --> 00:04:57.350 align:start position:0%
this is the first tweet then we have the
second<00:04:56.240><c> tweet</c><00:04:56.560><c> then</c><00:04:56.720><c> we</c><00:04:56.880><c> have</c><00:04:56.960><c> the</c><00:04:57.040><c> third</c>

00:04:57.350 --> 00:04:57.360 align:start position:0%
second tweet then we have the third
 

00:04:57.360 --> 00:04:59.670 align:start position:0%
second tweet then we have the third
tweet<00:04:57.680><c> of</c><00:04:57.759><c> course</c><00:04:58.000><c> the</c><00:04:58.160><c> most</c><00:04:58.720><c> recent</c><00:04:59.120><c> tweet</c><00:04:59.520><c> is</c>

00:04:59.670 --> 00:04:59.680 align:start position:0%
tweet of course the most recent tweet is
 

00:04:59.680 --> 00:05:02.469 align:start position:0%
tweet of course the most recent tweet is
going<00:04:59.840><c> to</c><00:05:00.000><c> be</c><00:05:00.240><c> at</c><00:05:00.479><c> the</c><00:05:00.800><c> end</c><00:05:01.199><c> of</c><00:05:01.440><c> the</c><00:05:01.680><c> list</c><00:05:02.000><c> right</c>

00:05:02.469 --> 00:05:02.479 align:start position:0%
going to be at the end of the list right
 

00:05:02.479 --> 00:05:05.590 align:start position:0%
going to be at the end of the list right
for<00:05:02.960><c> any</c><00:05:03.280><c> given</c><00:05:03.759><c> user</c><00:05:04.479><c> but</c><00:05:04.960><c> we</c><00:05:05.120><c> don't</c><00:05:05.360><c> just</c>

00:05:05.590 --> 00:05:05.600 align:start position:0%
for any given user but we don't just
 

00:05:05.600 --> 00:05:07.670 align:start position:0%
for any given user but we don't just
have<00:05:05.919><c> one</c><00:05:06.160><c> user</c><00:05:06.479><c> right</c><00:05:06.800><c> it's</c><00:05:07.120><c> possible</c><00:05:07.520><c> that</c>

00:05:07.670 --> 00:05:07.680 align:start position:0%
have one user right it's possible that
 

00:05:07.680 --> 00:05:09.909 align:start position:0%
have one user right it's possible that
we<00:05:07.840><c> were</c><00:05:08.000><c> told</c><00:05:08.320><c> okay</c><00:05:08.560><c> this</c><00:05:08.800><c> user</c><00:05:09.440><c> uh</c><00:05:09.680><c> you</c><00:05:09.840><c> know</c>

00:05:09.909 --> 00:05:09.919 align:start position:0%
we were told okay this user uh you know
 

00:05:09.919 --> 00:05:11.670 align:start position:0%
we were told okay this user uh you know
we're<00:05:10.080><c> given</c><00:05:10.400><c> some</c><00:05:10.560><c> user</c><00:05:10.960><c> but</c><00:05:11.120><c> they</c><00:05:11.360><c> maybe</c>

00:05:11.670 --> 00:05:11.680 align:start position:0%
we're given some user but they maybe
 

00:05:11.680 --> 00:05:14.629 align:start position:0%
we're given some user but they maybe
follow<00:05:12.240><c> two</c><00:05:12.639><c> people</c><00:05:13.199><c> right</c><00:05:13.600><c> maybe</c><00:05:14.160><c> the</c><00:05:14.320><c> second</c>

00:05:14.629 --> 00:05:14.639 align:start position:0%
follow two people right maybe the second
 

00:05:14.639 --> 00:05:16.950 align:start position:0%
follow two people right maybe the second
person<00:05:14.960><c> that</c><00:05:15.039><c> they</c><00:05:15.199><c> follow</c><00:05:15.520><c> has</c><00:05:16.240><c> these</c><00:05:16.479><c> tweets</c>

00:05:16.950 --> 00:05:16.960 align:start position:0%
person that they follow has these tweets
 

00:05:16.960 --> 00:05:20.310 align:start position:0%
person that they follow has these tweets
four<00:05:17.680><c> five</c><00:05:18.479><c> six</c><00:05:19.120><c> and</c><00:05:19.520><c> let's</c><00:05:19.759><c> say</c><00:05:20.000><c> these</c><00:05:20.240><c> are</c>

00:05:20.310 --> 00:05:20.320 align:start position:0%
four five six and let's say these are
 

00:05:20.320 --> 00:05:22.790 align:start position:0%
four five six and let's say these are
the<00:05:20.400><c> actual</c><00:05:20.800><c> tweet</c><00:05:21.360><c> ids</c><00:05:22.080><c> right</c><00:05:22.320><c> so</c><00:05:22.479><c> we</c><00:05:22.639><c> know</c>

00:05:22.790 --> 00:05:22.800 align:start position:0%
the actual tweet ids right so we know
 

00:05:22.800 --> 00:05:24.710 align:start position:0%
the actual tweet ids right so we know
that<00:05:22.960><c> this</c><00:05:23.120><c> is</c><00:05:23.199><c> the</c><00:05:23.360><c> most</c><00:05:23.600><c> recent</c><00:05:24.000><c> tweet</c><00:05:24.320><c> from</c>

00:05:24.710 --> 00:05:24.720 align:start position:0%
that this is the most recent tweet from
 

00:05:24.720 --> 00:05:26.070 align:start position:0%
that this is the most recent tweet from
the<00:05:24.880><c> first</c><00:05:25.199><c> person</c><00:05:25.520><c> that</c><00:05:25.600><c> they</c><00:05:25.759><c> follow</c><00:05:26.000><c> and</c>

00:05:26.070 --> 00:05:26.080 align:start position:0%
the first person that they follow and
 

00:05:26.080 --> 00:05:27.430 align:start position:0%
the first person that they follow and
this<00:05:26.240><c> is</c><00:05:26.320><c> the</c><00:05:26.400><c> most</c><00:05:26.639><c> recent</c><00:05:26.960><c> tweet</c><00:05:27.199><c> from</c><00:05:27.360><c> the</c>

00:05:27.430 --> 00:05:27.440 align:start position:0%
this is the most recent tweet from the
 

00:05:27.440 --> 00:05:29.270 align:start position:0%
this is the most recent tweet from the
second<00:05:27.759><c> person</c><00:05:28.080><c> that</c><00:05:28.240><c> they</c><00:05:28.400><c> follow</c><00:05:28.800><c> but</c><00:05:28.960><c> these</c>

00:05:29.270 --> 00:05:29.280 align:start position:0%
second person that they follow but these
 

00:05:29.280 --> 00:05:31.909 align:start position:0%
second person that they follow but these
values<00:05:30.000><c> we</c><00:05:30.160><c> can't</c><00:05:30.560><c> just</c><00:05:30.800><c> compare</c><00:05:31.280><c> the</c><00:05:31.440><c> tweet</c>

00:05:31.909 --> 00:05:31.919 align:start position:0%
values we can't just compare the tweet
 

00:05:31.919 --> 00:05:34.710 align:start position:0%
values we can't just compare the tweet
ids<00:05:33.120><c> right</c><00:05:33.600><c> because</c><00:05:33.840><c> that's</c><00:05:34.000><c> what</c><00:05:34.320><c> we</c><00:05:34.479><c> have</c>

00:05:34.710 --> 00:05:34.720 align:start position:0%
ids right because that's what we have
 

00:05:34.720 --> 00:05:37.270 align:start position:0%
ids right because that's what we have
right<00:05:34.880><c> now</c><00:05:35.120><c> a</c><00:05:35.199><c> list</c><00:05:35.520><c> of</c><00:05:35.600><c> tweet</c><00:05:36.000><c> ids</c><00:05:36.639><c> so</c><00:05:36.960><c> instead</c>

00:05:37.270 --> 00:05:37.280 align:start position:0%
right now a list of tweet ids so instead
 

00:05:37.280 --> 00:05:39.430 align:start position:0%
right now a list of tweet ids so instead
of<00:05:37.520><c> just</c><00:05:37.759><c> having</c><00:05:38.080><c> a</c><00:05:38.160><c> list</c><00:05:38.400><c> of</c><00:05:38.560><c> tweet</c><00:05:38.880><c> ids</c><00:05:39.280><c> how</c>

00:05:39.430 --> 00:05:39.440 align:start position:0%
of just having a list of tweet ids how
 

00:05:39.440 --> 00:05:41.990 align:start position:0%
of just having a list of tweet ids how
about<00:05:39.600><c> we</c><00:05:39.840><c> also</c><00:05:40.240><c> keep</c><00:05:40.479><c> track</c><00:05:40.800><c> of</c><00:05:40.960><c> the</c><00:05:41.280><c> time</c>

00:05:41.990 --> 00:05:42.000 align:start position:0%
about we also keep track of the time
 

00:05:42.000 --> 00:05:44.870 align:start position:0%
about we also keep track of the time
that<00:05:42.160><c> that</c><00:05:42.479><c> tweet</c><00:05:42.880><c> was</c><00:05:43.199><c> posted</c><00:05:44.000><c> so</c><00:05:44.479><c> in</c><00:05:44.639><c> that</c>

00:05:44.870 --> 00:05:44.880 align:start position:0%
that that tweet was posted so in that
 

00:05:44.880 --> 00:05:47.189 align:start position:0%
that that tweet was posted so in that
case<00:05:45.600><c> we</c><00:05:45.759><c> won't</c><00:05:45.919><c> just</c><00:05:46.080><c> have</c><00:05:46.240><c> a</c><00:05:46.400><c> list</c><00:05:46.720><c> of</c><00:05:46.880><c> tweet</c>

00:05:47.189 --> 00:05:47.199 align:start position:0%
case we won't just have a list of tweet
 

00:05:47.199 --> 00:05:50.150 align:start position:0%
case we won't just have a list of tweet
ids<00:05:47.520><c> we'll</c><00:05:47.600><c> have</c><00:05:47.759><c> a</c><00:05:47.840><c> list</c><00:05:48.080><c> of</c><00:05:48.400><c> pairs</c><00:05:49.039><c> a</c><00:05:49.199><c> list</c><00:05:49.680><c> of</c>

00:05:50.150 --> 00:05:50.160 align:start position:0%
ids we'll have a list of pairs a list of
 

00:05:50.160 --> 00:05:51.749 align:start position:0%
ids we'll have a list of pairs a list of
i'm<00:05:50.320><c> going</c><00:05:50.400><c> to</c><00:05:50.479><c> call</c><00:05:50.720><c> it</c><00:05:51.039><c> count</c><00:05:51.440><c> because</c>

00:05:51.749 --> 00:05:51.759 align:start position:0%
i'm going to call it count because
 

00:05:51.759 --> 00:05:52.950 align:start position:0%
i'm going to call it count because
that's<00:05:52.000><c> what</c><00:05:52.080><c> we're</c><00:05:52.240><c> going</c><00:05:52.320><c> to</c><00:05:52.400><c> be</c><00:05:52.560><c> keeping</c>

00:05:52.950 --> 00:05:52.960 align:start position:0%
that's what we're going to be keeping
 

00:05:52.960 --> 00:05:54.310 align:start position:0%
that's what we're going to be keeping
track<00:05:53.199><c> of</c><00:05:53.360><c> for</c><00:05:53.600><c> time</c><00:05:53.919><c> right</c><00:05:54.080><c> we</c><00:05:54.160><c> don't</c>

00:05:54.310 --> 00:05:54.320 align:start position:0%
track of for time right we don't
 

00:05:54.320 --> 00:05:56.390 align:start position:0%
track of for time right we don't
actually<00:05:54.560><c> have</c><00:05:54.720><c> a</c><00:05:54.880><c> time</c><00:05:55.120><c> we</c><00:05:55.280><c> have</c><00:05:55.360><c> a</c><00:05:55.600><c> count</c><00:05:56.160><c> of</c>

00:05:56.390 --> 00:05:56.400 align:start position:0%
actually have a time we have a count of
 

00:05:56.400 --> 00:05:58.870 align:start position:0%
actually have a time we have a count of
how<00:05:56.560><c> many</c><00:05:56.880><c> total</c><00:05:57.199><c> tweets</c><00:05:57.840><c> we</c><00:05:58.080><c> have</c><00:05:58.560><c> and</c><00:05:58.720><c> we're</c>

00:05:58.870 --> 00:05:58.880 align:start position:0%
how many total tweets we have and we're
 

00:05:58.880 --> 00:06:01.590 align:start position:0%
how many total tweets we have and we're
actually<00:05:59.120><c> going</c><00:05:59.280><c> to</c><00:05:59.360><c> start</c><00:05:59.919><c> our</c><00:06:00.240><c> count</c><00:06:00.800><c> at</c><00:06:01.199><c> 0</c>

00:06:01.590 --> 00:06:01.600 align:start position:0%
actually going to start our count at 0
 

00:06:01.600 --> 00:06:03.029 align:start position:0%
actually going to start our count at 0
and<00:06:01.680><c> then</c><00:06:01.840><c> we're</c><00:06:02.000><c> going</c><00:06:02.080><c> to</c><00:06:02.240><c> decrement</c><00:06:02.800><c> it</c><00:06:02.880><c> to</c>

00:06:03.029 --> 00:06:03.039 align:start position:0%
and then we're going to decrement it to
 

00:06:03.039 --> 00:06:05.510 align:start position:0%
and then we're going to decrement it to
negative<00:06:03.440><c> 1</c><00:06:04.080><c> then</c><00:06:04.240><c> to</c><00:06:04.400><c> negative</c><00:06:04.720><c> 2</c><00:06:05.199><c> then</c><00:06:05.440><c> a</c>

00:06:05.510 --> 00:06:05.520 align:start position:0%
negative 1 then to negative 2 then a
 

00:06:05.520 --> 00:06:07.189 align:start position:0%
negative 1 then to negative 2 then a
negative<00:06:05.919><c> three</c><00:06:06.160><c> and</c><00:06:06.240><c> you're</c><00:06:06.400><c> gonna</c><00:06:06.560><c> see</c><00:06:06.880><c> why</c>

00:06:07.189 --> 00:06:07.199 align:start position:0%
negative three and you're gonna see why
 

00:06:07.199 --> 00:06:09.430 align:start position:0%
negative three and you're gonna see why
it<00:06:07.280><c> basically</c><00:06:07.759><c> has</c><00:06:07.919><c> to</c><00:06:08.000><c> do</c><00:06:08.240><c> with</c><00:06:08.479><c> us</c><00:06:08.720><c> using</c><00:06:09.120><c> a</c>

00:06:09.430 --> 00:06:09.440 align:start position:0%
it basically has to do with us using a
 

00:06:09.440 --> 00:06:12.309 align:start position:0%
it basically has to do with us using a
heap<00:06:10.080><c> uh</c><00:06:10.400><c> and</c><00:06:10.639><c> in</c><00:06:10.880><c> python</c><00:06:11.360><c> at</c><00:06:11.520><c> least</c><00:06:12.080><c> there's</c>

00:06:12.309 --> 00:06:12.319 align:start position:0%
heap uh and in python at least there's
 

00:06:12.319 --> 00:06:14.870 align:start position:0%
heap uh and in python at least there's
not<00:06:12.639><c> really</c><00:06:13.360><c> a</c><00:06:13.600><c> max</c><00:06:14.000><c> heap</c><00:06:14.319><c> so</c><00:06:14.479><c> we're</c><00:06:14.639><c> gonna</c><00:06:14.800><c> be</c>

00:06:14.870 --> 00:06:14.880 align:start position:0%
not really a max heap so we're gonna be
 

00:06:14.880 --> 00:06:16.309 align:start position:0%
not really a max heap so we're gonna be
using<00:06:15.120><c> a</c><00:06:15.199><c> min</c><00:06:15.440><c> heap</c><00:06:15.680><c> if</c><00:06:15.840><c> you're</c><00:06:16.080><c> if</c><00:06:16.240><c> you're</c>

00:06:16.309 --> 00:06:16.319 align:start position:0%
using a min heap if you're if you're
 

00:06:16.319 --> 00:06:17.749 align:start position:0%
using a min heap if you're if you're
doing<00:06:16.479><c> this</c><00:06:16.639><c> in</c><00:06:16.800><c> java</c><00:06:17.039><c> by</c><00:06:17.199><c> the</c><00:06:17.280><c> way</c><00:06:17.440><c> you</c><00:06:17.600><c> can</c>

00:06:17.749 --> 00:06:17.759 align:start position:0%
doing this in java by the way you can
 

00:06:17.759 --> 00:06:19.670 align:start position:0%
doing this in java by the way you can
just<00:06:18.000><c> take</c><00:06:18.160><c> the</c><00:06:18.319><c> count</c><00:06:18.639><c> and</c><00:06:18.880><c> start</c><00:06:19.120><c> at</c><00:06:19.280><c> zero</c>

00:06:19.670 --> 00:06:19.680 align:start position:0%
just take the count and start at zero
 

00:06:19.680 --> 00:06:21.270 align:start position:0%
just take the count and start at zero
and<00:06:19.759><c> then</c><00:06:19.919><c> increment</c><00:06:20.319><c> it</c><00:06:20.400><c> to</c><00:06:20.560><c> one</c><00:06:20.800><c> then</c><00:06:20.960><c> to</c><00:06:21.120><c> two</c>

00:06:21.270 --> 00:06:21.280 align:start position:0%
and then increment it to one then to two
 

00:06:21.280 --> 00:06:22.550 align:start position:0%
and then increment it to one then to two
then<00:06:21.440><c> the</c><00:06:21.600><c> three</c><00:06:21.840><c> but</c><00:06:22.000><c> in</c><00:06:22.080><c> this</c><00:06:22.240><c> case</c><00:06:22.479><c> i'm</c>

00:06:22.550 --> 00:06:22.560 align:start position:0%
then the three but in this case i'm
 

00:06:22.560 --> 00:06:24.150 align:start position:0%
then the three but in this case i'm
going<00:06:22.639><c> to</c><00:06:22.720><c> be</c><00:06:22.880><c> decrementing</c><00:06:23.440><c> it</c><00:06:23.600><c> from</c><00:06:23.759><c> one</c><00:06:24.000><c> to</c>

00:06:24.150 --> 00:06:24.160 align:start position:0%
going to be decrementing it from one to
 

00:06:24.160 --> 00:06:26.150 align:start position:0%
going to be decrementing it from one to
negative<00:06:24.479><c> one</c><00:06:24.639><c> to</c><00:06:24.800><c> negative</c><00:06:25.120><c> two</c><00:06:25.600><c> and</c><00:06:25.919><c> it'll</c>

00:06:26.150 --> 00:06:26.160 align:start position:0%
negative one to negative two and it'll
 

00:06:26.160 --> 00:06:28.230 align:start position:0%
negative one to negative two and it'll
work<00:06:26.479><c> out</c><00:06:26.639><c> for</c><00:06:26.880><c> us</c><00:06:27.280><c> this</c><00:06:27.520><c> count</c><00:06:27.840><c> isn't</c><00:06:28.080><c> the</c>

00:06:28.230 --> 00:06:28.240 align:start position:0%
work out for us this count isn't the
 

00:06:28.240 --> 00:06:30.150 align:start position:0%
work out for us this count isn't the
most<00:06:28.560><c> important</c><00:06:28.960><c> part</c><00:06:29.199><c> of</c><00:06:29.360><c> this</c><00:06:29.520><c> function</c>

00:06:30.150 --> 00:06:30.160 align:start position:0%
most important part of this function
 

00:06:30.160 --> 00:06:31.670 align:start position:0%
most important part of this function
okay<00:06:30.400><c> so</c><00:06:30.560><c> once</c><00:06:30.800><c> again</c><00:06:31.039><c> let's</c><00:06:31.280><c> say</c><00:06:31.440><c> we're</c>

00:06:31.670 --> 00:06:31.680 align:start position:0%
okay so once again let's say we're
 

00:06:31.680 --> 00:06:33.990 align:start position:0%
okay so once again let's say we're
trying<00:06:31.919><c> to</c><00:06:32.080><c> run</c><00:06:32.319><c> get</c><00:06:32.639><c> newsfeed</c><00:06:33.199><c> for</c><00:06:33.440><c> some</c>

00:06:33.990 --> 00:06:34.000 align:start position:0%
trying to run get newsfeed for some
 

00:06:34.000 --> 00:06:36.550 align:start position:0%
trying to run get newsfeed for some
particular<00:06:34.639><c> user</c><00:06:35.120><c> now</c><00:06:35.440><c> first</c><00:06:35.680><c> thing</c><00:06:35.840><c> we</c><00:06:36.000><c> want</c>

00:06:36.550 --> 00:06:36.560 align:start position:0%
particular user now first thing we want
 

00:06:36.560 --> 00:06:39.029 align:start position:0%
particular user now first thing we want
for<00:06:36.800><c> that</c><00:06:36.960><c> user</c><00:06:37.360><c> is</c><00:06:37.600><c> who</c><00:06:37.840><c> do</c><00:06:38.000><c> they</c><00:06:38.319><c> follow</c><00:06:38.880><c> how</c>

00:06:39.029 --> 00:06:39.039 align:start position:0%
for that user is who do they follow how
 

00:06:39.039 --> 00:06:41.830 align:start position:0%
for that user is who do they follow how
can<00:06:39.199><c> we</c><00:06:39.440><c> get</c><00:06:39.759><c> that</c><00:06:40.240><c> well</c><00:06:40.720><c> remember</c><00:06:41.360><c> we</c><00:06:41.600><c> have</c><00:06:41.759><c> a</c>

00:06:41.830 --> 00:06:41.840 align:start position:0%
can we get that well remember we have a
 

00:06:41.840 --> 00:06:43.749 align:start position:0%
can we get that well remember we have a
hash<00:06:42.160><c> map</c><00:06:42.400><c> for</c><00:06:42.560><c> that</c><00:06:42.720><c> we</c><00:06:42.880><c> can</c><00:06:43.039><c> take</c><00:06:43.199><c> this</c><00:06:43.440><c> user</c>

00:06:43.749 --> 00:06:43.759 align:start position:0%
hash map for that we can take this user
 

00:06:43.759 --> 00:06:47.189 align:start position:0%
hash map for that we can take this user
id<00:06:44.319><c> and</c><00:06:44.880><c> get</c><00:06:45.199><c> a</c><00:06:45.360><c> hash</c><00:06:45.840><c> set</c><00:06:46.160><c> of</c><00:06:46.479><c> all</c><00:06:46.639><c> the</c><00:06:46.880><c> people</c>

00:06:47.189 --> 00:06:47.199 align:start position:0%
id and get a hash set of all the people
 

00:06:47.199 --> 00:06:49.110 align:start position:0%
id and get a hash set of all the people
that<00:06:47.360><c> they</c><00:06:47.600><c> follow</c><00:06:48.000><c> and</c><00:06:48.160><c> a</c><00:06:48.240><c> hash</c><00:06:48.560><c> set</c><00:06:48.880><c> in</c><00:06:48.960><c> this</c>

00:06:49.110 --> 00:06:49.120 align:start position:0%
that they follow and a hash set in this
 

00:06:49.120 --> 00:06:51.029 align:start position:0%
that they follow and a hash set in this
case<00:06:49.360><c> is</c><00:06:49.520><c> basically</c><00:06:50.000><c> equivalent</c><00:06:50.479><c> to</c><00:06:50.639><c> a</c><00:06:50.800><c> list</c>

00:06:51.029 --> 00:06:51.039 align:start position:0%
case is basically equivalent to a list
 

00:06:51.039 --> 00:06:51.990 align:start position:0%
case is basically equivalent to a list
for<00:06:51.199><c> us</c><00:06:51.360><c> because</c><00:06:51.520><c> we're</c><00:06:51.680><c> just</c><00:06:51.759><c> going</c><00:06:51.840><c> to</c>

00:06:51.990 --> 00:06:52.000 align:start position:0%
for us because we're just going to
 

00:06:52.000 --> 00:06:53.670 align:start position:0%
for us because we're just going to
iterate<00:06:52.319><c> through</c><00:06:52.639><c> all</c><00:06:52.800><c> the</c><00:06:52.960><c> people</c><00:06:53.280><c> that</c><00:06:53.440><c> they</c>

00:06:53.670 --> 00:06:53.680 align:start position:0%
iterate through all the people that they
 

00:06:53.680 --> 00:06:56.710 align:start position:0%
iterate through all the people that they
follow<00:06:54.240><c> and</c><00:06:54.400><c> then</c><00:06:55.039><c> get</c><00:06:55.280><c> the</c><00:06:55.520><c> tweets</c><00:06:56.240><c> of</c><00:06:56.479><c> those</c>

00:06:56.710 --> 00:06:56.720 align:start position:0%
follow and then get the tweets of those
 

00:06:56.720 --> 00:06:59.029 align:start position:0%
follow and then get the tweets of those
people<00:06:57.039><c> right</c><00:06:57.199><c> so</c><00:06:57.360><c> for</c><00:06:57.520><c> each</c><00:06:57.840><c> followee</c><00:06:58.400><c> id</c>

00:06:59.029 --> 00:06:59.039 align:start position:0%
people right so for each followee id
 

00:06:59.039 --> 00:07:01.110 align:start position:0%
people right so for each followee id
that's<00:06:59.280><c> a</c><00:06:59.440><c> person</c><00:06:59.919><c> right</c><00:07:00.080><c> that's</c><00:07:00.319><c> a</c><00:07:00.479><c> user</c><00:07:00.960><c> how</c>

00:07:01.110 --> 00:07:01.120 align:start position:0%
that's a person right that's a user how
 

00:07:01.120 --> 00:07:03.189 align:start position:0%
that's a person right that's a user how
do<00:07:01.199><c> we</c><00:07:01.360><c> get</c><00:07:01.520><c> their</c><00:07:01.680><c> list</c><00:07:02.080><c> of</c><00:07:02.160><c> tweets</c><00:07:02.720><c> well</c>

00:07:03.189 --> 00:07:03.199 align:start position:0%
do we get their list of tweets well
 

00:07:03.199 --> 00:07:05.189 align:start position:0%
do we get their list of tweets well
conveniently<00:07:03.919><c> we</c><00:07:04.000><c> have</c><00:07:04.240><c> a</c><00:07:04.400><c> second</c><00:07:04.720><c> hash</c><00:07:04.960><c> map</c>

00:07:05.189 --> 00:07:05.199 align:start position:0%
conveniently we have a second hash map
 

00:07:05.199 --> 00:07:07.990 align:start position:0%
conveniently we have a second hash map
for<00:07:05.360><c> that</c><00:07:05.520><c> we</c><00:07:05.599><c> can</c><00:07:05.759><c> take</c><00:07:06.000><c> that</c><00:07:06.479><c> uh</c><00:07:06.720><c> followee</c><00:07:07.280><c> id</c>

00:07:07.990 --> 00:07:08.000 align:start position:0%
for that we can take that uh followee id
 

00:07:08.000 --> 00:07:11.189 align:start position:0%
for that we can take that uh followee id
and<00:07:08.080><c> then</c><00:07:08.319><c> convert</c><00:07:08.800><c> it</c><00:07:09.120><c> into</c><00:07:09.520><c> a</c><00:07:09.680><c> list</c><00:07:10.160><c> of</c><00:07:10.880><c> their</c>

00:07:11.189 --> 00:07:11.199 align:start position:0%
and then convert it into a list of their
 

00:07:11.199 --> 00:07:13.029 align:start position:0%
and then convert it into a list of their
account<00:07:11.759><c> and</c><00:07:12.000><c> tweets</c><00:07:12.319><c> right</c><00:07:12.560><c> and</c><00:07:12.639><c> that</c><00:07:12.720><c> count</c>

00:07:13.029 --> 00:07:13.039 align:start position:0%
account and tweets right and that count
 

00:07:13.039 --> 00:07:14.150 align:start position:0%
account and tweets right and that count
is<00:07:13.120><c> really</c><00:07:13.280><c> just</c><00:07:13.440><c> going</c><00:07:13.520><c> to</c><00:07:13.599><c> be</c><00:07:13.759><c> used</c><00:07:14.000><c> to</c>

00:07:14.150 --> 00:07:14.160 align:start position:0%
is really just going to be used to
 

00:07:14.160 --> 00:07:15.749 align:start position:0%
is really just going to be used to
figure<00:07:14.400><c> out</c><00:07:14.560><c> what</c><00:07:14.800><c> tweet</c>

00:07:15.749 --> 00:07:15.759 align:start position:0%
figure out what tweet
 

00:07:15.759 --> 00:07:18.790 align:start position:0%
figure out what tweet
occurred<00:07:16.240><c> most</c><00:07:16.639><c> recently</c><00:07:17.280><c> so</c><00:07:17.520><c> suppose</c><00:07:18.240><c> we</c><00:07:18.479><c> did</c>

00:07:18.790 --> 00:07:18.800 align:start position:0%
occurred most recently so suppose we did
 

00:07:18.800 --> 00:07:20.629 align:start position:0%
occurred most recently so suppose we did
all<00:07:18.960><c> that</c><00:07:19.120><c> work</c><00:07:19.360><c> right</c><00:07:19.599><c> we</c><00:07:19.759><c> took</c><00:07:20.000><c> some</c><00:07:20.319><c> user</c>

00:07:20.629 --> 00:07:20.639 align:start position:0%
all that work right we took some user
 

00:07:20.639 --> 00:07:22.469 align:start position:0%
all that work right we took some user
and<00:07:20.720><c> then</c><00:07:20.960><c> got</c><00:07:21.280><c> a</c><00:07:21.440><c> list</c><00:07:21.759><c> of</c><00:07:21.919><c> all</c><00:07:22.080><c> the</c><00:07:22.240><c> people</c>

00:07:22.469 --> 00:07:22.479 align:start position:0%
and then got a list of all the people
 

00:07:22.479 --> 00:07:24.629 align:start position:0%
and then got a list of all the people
that<00:07:22.639><c> they</c><00:07:22.800><c> follow</c><00:07:23.360><c> and</c><00:07:23.840><c> their</c><00:07:24.080><c> particular</c>

00:07:24.629 --> 00:07:24.639 align:start position:0%
that they follow and their particular
 

00:07:24.639 --> 00:07:26.550 align:start position:0%
that they follow and their particular
tweets<00:07:24.960><c> let</c><00:07:25.120><c> me</c><00:07:25.199><c> just</c><00:07:25.360><c> draw</c><00:07:25.759><c> some</c><00:07:26.000><c> example</c><00:07:26.400><c> for</c>

00:07:26.550 --> 00:07:26.560 align:start position:0%
tweets let me just draw some example for
 

00:07:26.560 --> 00:07:29.589 align:start position:0%
tweets let me just draw some example for
that<00:07:26.639><c> let's</c><00:07:26.800><c> say</c><00:07:26.960><c> we</c><00:07:27.120><c> have</c><00:07:27.360><c> one</c><00:07:28.000><c> three</c><00:07:28.639><c> five</c><00:07:29.360><c> uh</c>

00:07:29.589 --> 00:07:29.599 align:start position:0%
that let's say we have one three five uh
 

00:07:29.599 --> 00:07:31.110 align:start position:0%
that let's say we have one three five uh
and<00:07:29.680><c> let's</c><00:07:29.840><c> say</c><00:07:30.000><c> these</c><00:07:30.240><c> are</c><00:07:30.319><c> the</c><00:07:30.560><c> counts</c><00:07:30.960><c> right</c>

00:07:31.110 --> 00:07:31.120 align:start position:0%
and let's say these are the counts right
 

00:07:31.120 --> 00:07:32.550 align:start position:0%
and let's say these are the counts right
because<00:07:31.360><c> we</c><00:07:31.440><c> know</c><00:07:31.599><c> that</c><00:07:31.840><c> that</c><00:07:32.080><c> list</c><00:07:32.400><c> is</c>

00:07:32.550 --> 00:07:32.560 align:start position:0%
because we know that that list is
 

00:07:32.560 --> 00:07:34.390 align:start position:0%
because we know that that list is
actually<00:07:32.800><c> going</c><00:07:32.880><c> to</c><00:07:32.960><c> have</c><00:07:33.120><c> a</c><00:07:33.280><c> pair</c><00:07:33.520><c> of</c><00:07:33.680><c> values</c>

00:07:34.390 --> 00:07:34.400 align:start position:0%
actually going to have a pair of values
 

00:07:34.400 --> 00:07:36.870 align:start position:0%
actually going to have a pair of values
count<00:07:34.880><c> and</c><00:07:35.039><c> tweet</c><00:07:35.440><c> id</c><00:07:35.919><c> uh</c><00:07:36.160><c> we</c><00:07:36.319><c> do</c><00:07:36.479><c> care</c><00:07:36.720><c> about</c>

00:07:36.870 --> 00:07:36.880 align:start position:0%
count and tweet id uh we do care about
 

00:07:36.880 --> 00:07:38.870 align:start position:0%
count and tweet id uh we do care about
the<00:07:36.960><c> tweet</c><00:07:37.360><c> id</c><00:07:37.680><c> as</c><00:07:37.840><c> well</c><00:07:38.240><c> because</c><00:07:38.479><c> that's</c><00:07:38.720><c> what</c>

00:07:38.870 --> 00:07:38.880 align:start position:0%
the tweet id as well because that's what
 

00:07:38.880 --> 00:07:40.629 align:start position:0%
the tweet id as well because that's what
we're<00:07:39.039><c> gonna</c><00:07:39.199><c> be</c><00:07:39.360><c> returning</c><00:07:40.080><c> remember</c><00:07:40.479><c> we're</c>

00:07:40.629 --> 00:07:40.639 align:start position:0%
we're gonna be returning remember we're
 

00:07:40.639 --> 00:07:43.589 align:start position:0%
we're gonna be returning remember we're
returning<00:07:41.440><c> a</c><00:07:41.759><c> list</c><00:07:42.160><c> of</c><00:07:42.319><c> the</c><00:07:42.479><c> tweet</c><00:07:42.880><c> ids</c><00:07:43.360><c> that</c>

00:07:43.589 --> 00:07:43.599 align:start position:0%
returning a list of the tweet ids that
 

00:07:43.599 --> 00:07:46.230 align:start position:0%
returning a list of the tweet ids that
occurred<00:07:44.160><c> most</c><00:07:44.479><c> recently</c><00:07:44.960><c> the</c><00:07:45.199><c> 10</c><00:07:45.919><c> tweets</c>

00:07:46.230 --> 00:07:46.240 align:start position:0%
occurred most recently the 10 tweets
 

00:07:46.240 --> 00:07:48.390 align:start position:0%
occurred most recently the 10 tweets
that<00:07:46.400><c> occurred</c><00:07:46.800><c> most</c><00:07:47.120><c> recently</c><00:07:47.840><c> and</c><00:07:48.000><c> if</c><00:07:48.080><c> there</c>

00:07:48.390 --> 00:07:48.400 align:start position:0%
that occurred most recently and if there
 

00:07:48.400 --> 00:07:50.309 align:start position:0%
that occurred most recently and if there
aren't<00:07:48.720><c> 10</c><00:07:49.199><c> let's</c><00:07:49.360><c> say</c><00:07:49.520><c> there's</c><00:07:49.759><c> only</c><00:07:50.080><c> eight</c>

00:07:50.309 --> 00:07:50.319 align:start position:0%
aren't 10 let's say there's only eight
 

00:07:50.319 --> 00:07:52.150 align:start position:0%
aren't 10 let's say there's only eight
tweets<00:07:50.879><c> from</c><00:07:51.199><c> all</c><00:07:51.360><c> the</c><00:07:51.520><c> people</c><00:07:51.840><c> that</c><00:07:52.000><c> they</c>

00:07:52.150 --> 00:07:52.160 align:start position:0%
tweets from all the people that they
 

00:07:52.160 --> 00:07:54.629 align:start position:0%
tweets from all the people that they
follow<00:07:52.879><c> then</c><00:07:53.120><c> we</c><00:07:53.360><c> occur</c><00:07:53.759><c> however</c><00:07:54.160><c> many</c><00:07:54.479><c> we</c>

00:07:54.629 --> 00:07:54.639 align:start position:0%
follow then we occur however many we
 

00:07:54.639 --> 00:07:56.710 align:start position:0%
follow then we occur however many we
have<00:07:54.879><c> right</c><00:07:55.039><c> we</c><00:07:55.199><c> don't</c><00:07:55.360><c> go</c><00:07:55.680><c> over</c><00:07:56.080><c> 10</c><00:07:56.479><c> but</c><00:07:56.639><c> if</c>

00:07:56.710 --> 00:07:56.720 align:start position:0%
have right we don't go over 10 but if
 

00:07:56.720 --> 00:07:58.629 align:start position:0%
have right we don't go over 10 but if
there's<00:07:56.960><c> less</c><00:07:57.199><c> than</c><00:07:57.360><c> 10</c><00:07:57.599><c> then</c><00:07:57.840><c> we'll</c><00:07:58.000><c> return</c>

00:07:58.629 --> 00:07:58.639 align:start position:0%
there's less than 10 then we'll return
 

00:07:58.639 --> 00:08:01.110 align:start position:0%
there's less than 10 then we'll return
however<00:07:59.039><c> many</c><00:07:59.280><c> we</c><00:07:59.440><c> have</c><00:07:59.919><c> but</c><00:08:00.160><c> in</c><00:08:00.240><c> this</c><00:08:00.479><c> case</c><00:08:00.960><c> uh</c>

00:08:01.110 --> 00:08:01.120 align:start position:0%
however many we have but in this case uh
 

00:08:01.120 --> 00:08:02.869 align:start position:0%
however many we have but in this case uh
let's<00:08:01.280><c> say</c><00:08:01.520><c> there</c><00:08:01.759><c> are</c><00:08:01.919><c> less</c><00:08:02.160><c> than</c><00:08:02.319><c> 10</c><00:08:02.720><c> let's</c>

00:08:02.869 --> 00:08:02.879 align:start position:0%
let's say there are less than 10 let's
 

00:08:02.879 --> 00:08:05.029 align:start position:0%
let's say there are less than 10 let's
say<00:08:03.039><c> we</c><00:08:03.120><c> have</c><00:08:03.280><c> two</c><00:08:04.000><c> four</c><00:08:04.400><c> and</c><00:08:04.479><c> then</c><00:08:04.639><c> for</c><00:08:04.800><c> the</c>

00:08:05.029 --> 00:08:05.039 align:start position:0%
say we have two four and then for the
 

00:08:05.039 --> 00:08:07.670 align:start position:0%
say we have two four and then for the
other<00:08:05.199><c> one</c><00:08:05.440><c> let's</c><00:08:05.599><c> say</c><00:08:05.759><c> we</c><00:08:05.919><c> have</c><00:08:06.400><c> a</c><00:08:06.720><c> six</c>

00:08:07.670 --> 00:08:07.680 align:start position:0%
other one let's say we have a six
 

00:08:07.680 --> 00:08:10.230 align:start position:0%
other one let's say we have a six
seven<00:08:08.400><c> so</c><00:08:08.560><c> not</c><00:08:08.800><c> only</c><00:08:08.960><c> do</c><00:08:09.120><c> we</c><00:08:09.280><c> want</c><00:08:09.599><c> at</c><00:08:09.759><c> most</c><00:08:10.000><c> ten</c>

00:08:10.230 --> 00:08:10.240 align:start position:0%
seven so not only do we want at most ten
 

00:08:10.240 --> 00:08:11.749 align:start position:0%
seven so not only do we want at most ten
tweets<00:08:10.479><c> but</c><00:08:10.720><c> they</c><00:08:10.800><c> need</c><00:08:11.039><c> to</c><00:08:11.120><c> actually</c><00:08:11.440><c> be</c>

00:08:11.749 --> 00:08:11.759 align:start position:0%
tweets but they need to actually be
 

00:08:11.759 --> 00:08:14.390 align:start position:0%
tweets but they need to actually be
ordered<00:08:12.400><c> from</c><00:08:12.639><c> most</c><00:08:13.039><c> recent</c><00:08:13.520><c> to</c><00:08:13.759><c> least</c><00:08:14.080><c> recent</c>

00:08:14.390 --> 00:08:14.400 align:start position:0%
ordered from most recent to least recent
 

00:08:14.400 --> 00:08:16.550 align:start position:0%
ordered from most recent to least recent
so<00:08:14.560><c> how</c><00:08:14.720><c> do</c><00:08:14.879><c> we</c><00:08:15.039><c> do</c><00:08:15.280><c> that</c><00:08:15.520><c> that's</c><00:08:15.840><c> really</c><00:08:16.319><c> the</c>

00:08:16.550 --> 00:08:16.560 align:start position:0%
so how do we do that that's really the
 

00:08:16.560 --> 00:08:18.710 align:start position:0%
so how do we do that that's really the
main<00:08:16.879><c> portion</c><00:08:17.280><c> of</c><00:08:17.360><c> this</c><00:08:17.599><c> algorithm</c><00:08:18.400><c> and</c><00:08:18.560><c> it's</c>

00:08:18.710 --> 00:08:18.720 align:start position:0%
main portion of this algorithm and it's
 

00:08:18.720 --> 00:08:21.350 align:start position:0%
main portion of this algorithm and it's
basically<00:08:19.360><c> exactly</c><00:08:19.919><c> like</c><00:08:20.160><c> merge</c><00:08:20.560><c> k</c><00:08:20.879><c> sorted</c>

00:08:21.350 --> 00:08:21.360 align:start position:0%
basically exactly like merge k sorted
 

00:08:21.360 --> 00:08:25.110 align:start position:0%
basically exactly like merge k sorted
lists<00:08:22.000><c> the</c><00:08:22.160><c> naive</c><00:08:22.800><c> way</c><00:08:23.120><c> to</c><00:08:23.280><c> do</c><00:08:23.520><c> this</c><00:08:24.160><c> would</c><00:08:24.560><c> run</c>

00:08:25.110 --> 00:08:25.120 align:start position:0%
lists the naive way to do this would run
 

00:08:25.120 --> 00:08:27.830 align:start position:0%
lists the naive way to do this would run
in<00:08:25.440><c> big</c><00:08:25.919><c> o</c><00:08:26.560><c> of</c><00:08:27.039><c> 10</c>

00:08:27.830 --> 00:08:27.840 align:start position:0%
in big o of 10
 

00:08:27.840 --> 00:08:32.630 align:start position:0%
in big o of 10
times<00:08:28.800><c> k</c><00:08:29.520><c> where</c><00:08:30.160><c> k</c><00:08:30.800><c> is</c><00:08:31.120><c> basically</c><00:08:31.680><c> the</c><00:08:32.080><c> number</c>

00:08:32.630 --> 00:08:32.640 align:start position:0%
times k where k is basically the number
 

00:08:32.640 --> 00:08:36.310 align:start position:0%
times k where k is basically the number
of<00:08:33.039><c> people</c><00:08:33.839><c> that</c><00:08:34.080><c> that</c><00:08:34.560><c> user</c><00:08:35.200><c> follows</c><00:08:36.000><c> and</c><00:08:36.159><c> let</c>

00:08:36.310 --> 00:08:36.320 align:start position:0%
of people that that user follows and let
 

00:08:36.320 --> 00:08:38.469 align:start position:0%
of people that that user follows and let
me<00:08:36.479><c> tell</c><00:08:36.640><c> you</c><00:08:36.800><c> why</c><00:08:37.039><c> because</c><00:08:37.519><c> of</c><00:08:37.760><c> course</c><00:08:38.240><c> for</c>

00:08:38.469 --> 00:08:38.479 align:start position:0%
me tell you why because of course for
 

00:08:38.479 --> 00:08:40.310 align:start position:0%
me tell you why because of course for
each<00:08:38.880><c> in</c><00:08:38.959><c> this</c><00:08:39.120><c> case</c><00:08:39.360><c> we</c><00:08:39.519><c> have</c><00:08:39.680><c> three</c><00:08:40.000><c> right</c>

00:08:40.310 --> 00:08:40.320 align:start position:0%
each in this case we have three right
 

00:08:40.320 --> 00:08:42.389 align:start position:0%
each in this case we have three right
basically<00:08:40.719><c> i'm</c><00:08:40.880><c> saying</c><00:08:41.200><c> k</c><00:08:41.519><c> is</c><00:08:41.680><c> equal</c><00:08:41.919><c> to</c><00:08:42.159><c> three</c>

00:08:42.389 --> 00:08:42.399 align:start position:0%
basically i'm saying k is equal to three
 

00:08:42.399 --> 00:08:44.630 align:start position:0%
basically i'm saying k is equal to three
because<00:08:42.640><c> we</c><00:08:42.800><c> have</c><00:08:42.880><c> three</c><00:08:43.120><c> different</c><00:08:43.519><c> lists</c><00:08:44.159><c> uh</c>

00:08:44.630 --> 00:08:44.640 align:start position:0%
because we have three different lists uh
 

00:08:44.640 --> 00:08:46.550 align:start position:0%
because we have three different lists uh
if<00:08:44.800><c> we're</c><00:08:44.959><c> trying</c><00:08:45.279><c> to</c><00:08:45.519><c> get</c><00:08:45.760><c> the</c><00:08:45.920><c> most</c><00:08:46.240><c> recent</c>

00:08:46.550 --> 00:08:46.560 align:start position:0%
if we're trying to get the most recent
 

00:08:46.560 --> 00:08:48.630 align:start position:0%
if we're trying to get the most recent
tweets<00:08:47.040><c> and</c><00:08:47.200><c> order</c><00:08:47.600><c> them</c><00:08:47.839><c> in</c><00:08:47.920><c> that</c><00:08:48.080><c> way</c><00:08:48.480><c> of</c>

00:08:48.630 --> 00:08:48.640 align:start position:0%
tweets and order them in that way of
 

00:08:48.640 --> 00:08:50.389 align:start position:0%
tweets and order them in that way of
course<00:08:48.880><c> we're</c><00:08:49.040><c> gonna</c><00:08:49.200><c> start</c><00:08:49.519><c> at</c><00:08:49.600><c> the</c><00:08:49.920><c> end</c><00:08:50.240><c> of</c>

00:08:50.389 --> 00:08:50.399 align:start position:0%
course we're gonna start at the end of
 

00:08:50.399 --> 00:08:51.990 align:start position:0%
course we're gonna start at the end of
each<00:08:50.800><c> list</c><00:08:51.120><c> right</c><00:08:51.360><c> so</c><00:08:51.519><c> we're</c><00:08:51.600><c> gonna</c><00:08:51.760><c> have</c><00:08:51.920><c> a</c>

00:08:51.990 --> 00:08:52.000 align:start position:0%
each list right so we're gonna have a
 

00:08:52.000 --> 00:08:54.310 align:start position:0%
each list right so we're gonna have a
pointer<00:08:52.480><c> for</c><00:08:52.720><c> each</c><00:08:53.279><c> list</c><00:08:53.600><c> you</c><00:08:53.680><c> can</c><00:08:53.839><c> call</c><00:08:54.000><c> it</c><00:08:54.160><c> an</c>

00:08:54.310 --> 00:08:54.320 align:start position:0%
pointer for each list you can call it an
 

00:08:54.320 --> 00:08:56.070 align:start position:0%
pointer for each list you can call it an
index<00:08:54.800><c> or</c><00:08:54.880><c> whatever</c><00:08:55.200><c> you</c><00:08:55.360><c> want</c><00:08:55.760><c> and</c><00:08:55.920><c> we're</c>

00:08:56.070 --> 00:08:56.080 align:start position:0%
index or whatever you want and we're
 

00:08:56.080 --> 00:08:57.670 align:start position:0%
index or whatever you want and we're
going<00:08:56.240><c> to</c><00:08:56.320><c> compare</c><00:08:56.800><c> all</c><00:08:56.959><c> of</c><00:08:57.040><c> these</c><00:08:57.279><c> right</c>

00:08:57.670 --> 00:08:57.680 align:start position:0%
going to compare all of these right
 

00:08:57.680 --> 00:08:59.990 align:start position:0%
going to compare all of these right
which<00:08:58.000><c> one</c><00:08:58.320><c> occurred</c><00:08:58.959><c> most</c><00:08:59.279><c> recently</c><00:08:59.760><c> which</c>

00:08:59.990 --> 00:09:00.000 align:start position:0%
which one occurred most recently which
 

00:09:00.000 --> 00:09:02.550 align:start position:0%
which one occurred most recently which
one<00:09:00.160><c> has</c><00:09:00.320><c> the</c><00:09:00.560><c> smallest</c><00:09:01.200><c> value</c><00:09:01.600><c> in</c><00:09:01.760><c> this</c><00:09:01.920><c> case</c>

00:09:02.550 --> 00:09:02.560 align:start position:0%
one has the smallest value in this case
 

00:09:02.560 --> 00:09:04.710 align:start position:0%
one has the smallest value in this case
four<00:09:02.880><c> is</c><00:09:03.040><c> the</c><00:09:03.200><c> smallest</c><00:09:03.680><c> value</c><00:09:04.080><c> so</c><00:09:04.320><c> what</c><00:09:04.560><c> are</c>

00:09:04.710 --> 00:09:04.720 align:start position:0%
four is the smallest value so what are
 

00:09:04.720 --> 00:09:07.430 align:start position:0%
four is the smallest value so what are
we<00:09:04.880><c> going</c><00:09:05.120><c> to</c><00:09:05.360><c> do</c><00:09:05.760><c> well</c><00:09:06.080><c> we're</c><00:09:06.240><c> gonna</c><00:09:06.959><c> take</c><00:09:07.200><c> 4</c>

00:09:07.430 --> 00:09:07.440 align:start position:0%
we going to do well we're gonna take 4
 

00:09:07.440 --> 00:09:08.949 align:start position:0%
we going to do well we're gonna take 4
and<00:09:07.600><c> add</c><00:09:07.760><c> it</c><00:09:07.920><c> to</c><00:09:08.080><c> our</c><00:09:08.320><c> list</c><00:09:08.640><c> i'm</c><00:09:08.720><c> kind</c><00:09:08.880><c> of</c>

00:09:08.949 --> 00:09:08.959 align:start position:0%
and add it to our list i'm kind of
 

00:09:08.959 --> 00:09:10.230 align:start position:0%
and add it to our list i'm kind of
running<00:09:09.200><c> out</c><00:09:09.360><c> of</c><00:09:09.440><c> space</c><00:09:09.680><c> so</c><00:09:09.839><c> let</c><00:09:10.000><c> me</c><00:09:10.080><c> just</c>

00:09:10.230 --> 00:09:10.240 align:start position:0%
running out of space so let me just
 

00:09:10.240 --> 00:09:11.829 align:start position:0%
running out of space so let me just
create<00:09:10.480><c> a</c><00:09:10.560><c> variable</c><00:09:10.959><c> up</c><00:09:11.120><c> here</c><00:09:11.360><c> sorry</c><00:09:11.600><c> if</c><00:09:11.680><c> it's</c>

00:09:11.829 --> 00:09:11.839 align:start position:0%
create a variable up here sorry if it's
 

00:09:11.839 --> 00:09:14.389 align:start position:0%
create a variable up here sorry if it's
messy<00:09:12.160><c> so</c><00:09:12.399><c> result</c><00:09:12.880><c> is</c><00:09:12.959><c> going</c><00:09:13.040><c> to</c><00:09:13.120><c> be</c><00:09:13.279><c> our</c><00:09:13.519><c> list</c>

00:09:14.389 --> 00:09:14.399 align:start position:0%
messy so result is going to be our list
 

00:09:14.399 --> 00:09:16.790 align:start position:0%
messy so result is going to be our list
so<00:09:14.800><c> we</c><00:09:15.040><c> found</c><00:09:15.279><c> the</c><00:09:15.360><c> first</c><00:09:15.680><c> value</c><00:09:16.160><c> it's</c><00:09:16.399><c> 4</c><00:09:16.640><c> so</c>

00:09:16.790 --> 00:09:16.800 align:start position:0%
so we found the first value it's 4 so
 

00:09:16.800 --> 00:09:18.790 align:start position:0%
so we found the first value it's 4 so
we're<00:09:16.880><c> going</c><00:09:16.959><c> to</c><00:09:17.040><c> add</c><00:09:17.279><c> 4</c><00:09:17.519><c> to</c><00:09:17.760><c> that</c><00:09:18.000><c> list</c><00:09:18.720><c> and</c>

00:09:18.790 --> 00:09:18.800 align:start position:0%
we're going to add 4 to that list and
 

00:09:18.800 --> 00:09:19.990 align:start position:0%
we're going to add 4 to that list and
then<00:09:18.959><c> we're</c><00:09:19.120><c> going</c><00:09:19.120><c> to</c><00:09:19.200><c> take</c><00:09:19.440><c> that</c><00:09:19.680><c> pointer</c>

00:09:19.990 --> 00:09:20.000 align:start position:0%
then we're going to take that pointer
 

00:09:20.000 --> 00:09:21.509 align:start position:0%
then we're going to take that pointer
which<00:09:20.160><c> was</c><00:09:20.320><c> here</c><00:09:20.560><c> and</c><00:09:20.640><c> then</c><00:09:20.880><c> decrement</c><00:09:21.440><c> it</c>

00:09:21.509 --> 00:09:21.519 align:start position:0%
which was here and then decrement it
 

00:09:21.519 --> 00:09:23.430 align:start position:0%
which was here and then decrement it
we're<00:09:21.680><c> going</c><00:09:21.760><c> to</c><00:09:21.920><c> shift</c><00:09:22.160><c> it</c><00:09:22.320><c> to</c><00:09:22.480><c> the</c><00:09:22.720><c> left</c><00:09:23.200><c> so</c>

00:09:23.430 --> 00:09:23.440 align:start position:0%
we're going to shift it to the left so
 

00:09:23.440 --> 00:09:25.750 align:start position:0%
we're going to shift it to the left so
now<00:09:23.920><c> it's</c><00:09:24.080><c> going</c><00:09:24.160><c> to</c><00:09:24.240><c> be</c><00:09:24.480><c> over</c><00:09:24.800><c> here</c><00:09:25.200><c> and</c><00:09:25.360><c> then</c>

00:09:25.750 --> 00:09:25.760 align:start position:0%
now it's going to be over here and then
 

00:09:25.760 --> 00:09:27.509 align:start position:0%
now it's going to be over here and then
we're<00:09:26.000><c> basically</c><00:09:26.399><c> going</c><00:09:26.480><c> to</c><00:09:26.640><c> keep</c><00:09:26.880><c> repeating</c>

00:09:27.509 --> 00:09:27.519 align:start position:0%
we're basically going to keep repeating
 

00:09:27.519 --> 00:09:28.630 align:start position:0%
we're basically going to keep repeating
this<00:09:27.839><c> right</c><00:09:28.000><c> we're</c><00:09:28.160><c> going</c><00:09:28.240><c> to</c><00:09:28.320><c> take</c><00:09:28.480><c> the</c>

00:09:28.630 --> 00:09:28.640 align:start position:0%
this right we're going to take the
 

00:09:28.640 --> 00:09:31.350 align:start position:0%
this right we're going to take the
minimum<00:09:29.120><c> of</c><00:09:29.440><c> all</c><00:09:29.600><c> of</c><00:09:29.760><c> these</c><00:09:30.240><c> and</c><00:09:30.720><c> the</c><00:09:30.880><c> reason</c>

00:09:31.350 --> 00:09:31.360 align:start position:0%
minimum of all of these and the reason
 

00:09:31.360 --> 00:09:33.350 align:start position:0%
minimum of all of these and the reason
the<00:09:31.600><c> time</c><00:09:31.760><c> complexity</c><00:09:32.240><c> is</c><00:09:32.399><c> 10</c><00:09:32.560><c> times</c><00:09:32.880><c> k</c><00:09:33.200><c> is</c>

00:09:33.350 --> 00:09:33.360 align:start position:0%
the time complexity is 10 times k is
 

00:09:33.360 --> 00:09:35.350 align:start position:0%
the time complexity is 10 times k is
obviously<00:09:33.760><c> we</c><00:09:33.920><c> have</c><00:09:34.080><c> k</c><00:09:34.399><c> lists</c><00:09:34.880><c> to</c><00:09:35.040><c> find</c><00:09:35.200><c> the</c>

00:09:35.350 --> 00:09:35.360 align:start position:0%
obviously we have k lists to find the
 

00:09:35.360 --> 00:09:37.829 align:start position:0%
obviously we have k lists to find the
minimum<00:09:35.760><c> between</c><00:09:36.160><c> k</c><00:09:36.399><c> values</c><00:09:36.880><c> it's</c><00:09:37.120><c> a</c><00:09:37.200><c> big</c><00:09:37.440><c> o</c><00:09:37.600><c> of</c>

00:09:37.829 --> 00:09:37.839 align:start position:0%
minimum between k values it's a big o of
 

00:09:37.839 --> 00:09:40.550 align:start position:0%
minimum between k values it's a big o of
k<00:09:38.240><c> operation</c><00:09:39.040><c> so</c><00:09:39.200><c> that's</c><00:09:39.519><c> the</c><00:09:39.680><c> naive</c><00:09:40.160><c> way</c><00:09:40.399><c> to</c>

00:09:40.550 --> 00:09:40.560 align:start position:0%
k operation so that's the naive way to
 

00:09:40.560 --> 00:09:42.630 align:start position:0%
k operation so that's the naive way to
do<00:09:40.720><c> it</c><00:09:40.959><c> but</c><00:09:41.200><c> if</c><00:09:41.279><c> you've</c><00:09:41.600><c> solved</c><00:09:42.000><c> merge</c><00:09:42.399><c> k</c>

00:09:42.630 --> 00:09:42.640 align:start position:0%
do it but if you've solved merge k
 

00:09:42.640 --> 00:09:44.150 align:start position:0%
do it but if you've solved merge k
sorted<00:09:42.959><c> lists</c><00:09:43.279><c> before</c><00:09:43.600><c> you</c><00:09:43.760><c> know</c><00:09:43.920><c> that</c><00:09:44.080><c> we</c>

00:09:44.150 --> 00:09:44.160 align:start position:0%
sorted lists before you know that we
 

00:09:44.160 --> 00:09:46.150 align:start position:0%
sorted lists before you know that we
don't<00:09:44.320><c> have</c><00:09:44.480><c> to</c><00:09:44.560><c> do</c><00:09:44.720><c> it</c><00:09:44.880><c> in</c><00:09:44.959><c> the</c><00:09:45.040><c> naive</c><00:09:45.519><c> way</c><00:09:45.920><c> the</c>

00:09:46.150 --> 00:09:46.160 align:start position:0%
don't have to do it in the naive way the
 

00:09:46.160 --> 00:09:48.230 align:start position:0%
don't have to do it in the naive way the
slightly<00:09:46.560><c> more</c><00:09:46.880><c> optimal</c><00:09:47.360><c> way</c><00:09:47.519><c> to</c><00:09:47.600><c> do</c><00:09:47.760><c> this</c><00:09:48.000><c> is</c>

00:09:48.230 --> 00:09:48.240 align:start position:0%
slightly more optimal way to do this is
 

00:09:48.240 --> 00:09:50.710 align:start position:0%
slightly more optimal way to do this is
actually<00:09:48.720><c> to</c><00:09:48.880><c> take</c><00:09:49.200><c> our</c><00:09:49.440><c> frontier</c><00:09:50.320><c> of</c><00:09:50.560><c> all</c>

00:09:50.710 --> 00:09:50.720 align:start position:0%
actually to take our frontier of all
 

00:09:50.720 --> 00:09:52.949 align:start position:0%
actually to take our frontier of all
these<00:09:50.959><c> lists</c><00:09:51.279><c> basically</c><00:09:51.680><c> frontiers</c><00:09:52.399><c> all</c><00:09:52.720><c> of</c>

00:09:52.949 --> 00:09:52.959 align:start position:0%
these lists basically frontiers all of
 

00:09:52.959 --> 00:09:54.710 align:start position:0%
these lists basically frontiers all of
the<00:09:53.120><c> pointers</c><00:09:53.680><c> right</c><00:09:53.839><c> wherever</c><00:09:54.160><c> the</c><00:09:54.320><c> pointers</c>

00:09:54.710 --> 00:09:54.720 align:start position:0%
the pointers right wherever the pointers
 

00:09:54.720 --> 00:09:58.310 align:start position:0%
the pointers right wherever the pointers
are<00:09:55.120><c> take</c><00:09:55.440><c> this</c><00:09:56.160><c> this</c><00:09:56.640><c> and</c><00:09:56.959><c> this</c><00:09:57.360><c> and</c><00:09:57.680><c> add</c><00:09:58.000><c> it</c>

00:09:58.310 --> 00:09:58.320 align:start position:0%
are take this this and this and add it
 

00:09:58.320 --> 00:10:00.870 align:start position:0%
are take this this and this and add it
to<00:09:58.640><c> a</c><00:09:58.800><c> data</c><00:09:59.120><c> structure</c><00:09:59.680><c> called</c><00:09:59.920><c> the</c><00:10:00.160><c> heap</c><00:10:00.720><c> in</c>

00:10:00.870 --> 00:10:00.880 align:start position:0%
to a data structure called the heap in
 

00:10:00.880 --> 00:10:03.110 align:start position:0%
to a data structure called the heap in
our<00:10:01.040><c> case</c><00:10:01.279><c> we</c><00:10:01.440><c> want</c><00:10:01.680><c> the</c><00:10:01.920><c> min</c><00:10:02.240><c> heap</c><00:10:02.720><c> because</c><00:10:02.959><c> we</c>

00:10:03.110 --> 00:10:03.120 align:start position:0%
our case we want the min heap because we
 

00:10:03.120 --> 00:10:05.750 align:start position:0%
our case we want the min heap because we
want<00:10:03.360><c> the</c><00:10:03.600><c> minimum</c><00:10:04.320><c> value</c><00:10:05.200><c> right</c><00:10:05.360><c> we</c><00:10:05.519><c> want</c><00:10:05.680><c> to</c>

00:10:05.750 --> 00:10:05.760 align:start position:0%
want the minimum value right we want to
 

00:10:05.760 --> 00:10:07.910 align:start position:0%
want the minimum value right we want to
know<00:10:05.920><c> which</c><00:10:06.079><c> one</c><00:10:06.240><c> of</c><00:10:06.320><c> these</c><00:10:06.560><c> occurred</c><00:10:07.040><c> most</c><00:10:07.680><c> uh</c>

00:10:07.910 --> 00:10:07.920 align:start position:0%
know which one of these occurred most uh
 

00:10:07.920 --> 00:10:10.389 align:start position:0%
know which one of these occurred most uh
recently<00:10:08.720><c> uh</c><00:10:08.880><c> and</c><00:10:09.040><c> actually</c><00:10:09.279><c> that</c><00:10:09.440><c> reminds</c><00:10:09.920><c> me</c>

00:10:10.389 --> 00:10:10.399 align:start position:0%
recently uh and actually that reminds me
 

00:10:10.399 --> 00:10:11.670 align:start position:0%
recently uh and actually that reminds me
we<00:10:10.640><c> remember</c><00:10:11.040><c> we</c><00:10:11.120><c> were</c><00:10:11.279><c> actually</c><00:10:11.519><c> going</c><00:10:11.600><c> to</c>

00:10:11.670 --> 00:10:11.680 align:start position:0%
we remember we were actually going to
 

00:10:11.680 --> 00:10:13.910 align:start position:0%
we remember we were actually going to
make<00:10:11.839><c> these</c><00:10:12.079><c> values</c><00:10:12.560><c> negative</c><00:10:13.040><c> so</c><00:10:13.519><c> sorry</c><00:10:13.839><c> if</c>

00:10:13.910 --> 00:10:13.920 align:start position:0%
make these values negative so sorry if
 

00:10:13.920 --> 00:10:16.069 align:start position:0%
make these values negative so sorry if
this<00:10:14.079><c> was</c><00:10:14.240><c> confusing</c><00:10:15.040><c> or</c><00:10:15.440><c> remember</c><00:10:15.760><c> we</c><00:10:15.920><c> were</c>

00:10:16.069 --> 00:10:16.079 align:start position:0%
this was confusing or remember we were
 

00:10:16.079 --> 00:10:17.990 align:start position:0%
this was confusing or remember we were
going<00:10:16.160><c> to</c><00:10:16.320><c> start</c><00:10:16.480><c> at</c><00:10:16.640><c> 0</c><00:10:17.040><c> and</c><00:10:17.200><c> then</c><00:10:17.680><c> make</c><00:10:17.920><c> all</c>

00:10:17.990 --> 00:10:18.000 align:start position:0%
going to start at 0 and then make all
 

00:10:18.000 --> 00:10:19.750 align:start position:0%
going to start at 0 and then make all
these<00:10:18.240><c> negatives</c><00:10:18.880><c> so</c>

00:10:19.750 --> 00:10:19.760 align:start position:0%
these negatives so
 

00:10:19.760 --> 00:10:21.269 align:start position:0%
these negatives so
that<00:10:19.920><c> doesn't</c><00:10:20.160><c> really</c><00:10:20.399><c> change</c><00:10:20.640><c> the</c><00:10:20.880><c> problem</c>

00:10:21.269 --> 00:10:21.279 align:start position:0%
that doesn't really change the problem
 

00:10:21.279 --> 00:10:23.030 align:start position:0%
that doesn't really change the problem
at<00:10:21.440><c> all</c><00:10:21.600><c> but</c><00:10:22.079><c> it's</c><00:10:22.240><c> just</c><00:10:22.399><c> how</c><00:10:22.560><c> we're</c><00:10:22.800><c> going</c><00:10:22.880><c> to</c>

00:10:23.030 --> 00:10:23.040 align:start position:0%
at all but it's just how we're going to
 

00:10:23.040 --> 00:10:24.389 align:start position:0%
at all but it's just how we're going to
implement<00:10:23.360><c> it</c><00:10:23.519><c> in</c><00:10:23.600><c> the</c><00:10:23.680><c> code</c><00:10:23.920><c> if</c><00:10:24.000><c> you're</c><00:10:24.160><c> using</c>

00:10:24.389 --> 00:10:24.399 align:start position:0%
implement it in the code if you're using
 

00:10:24.399 --> 00:10:25.750 align:start position:0%
implement it in the code if you're using
java<00:10:24.720><c> by</c><00:10:24.880><c> the</c><00:10:24.959><c> way</c><00:10:25.120><c> you</c><00:10:25.200><c> don't</c><00:10:25.360><c> need</c><00:10:25.519><c> to</c><00:10:25.600><c> make</c>

00:10:25.750 --> 00:10:25.760 align:start position:0%
java by the way you don't need to make
 

00:10:25.760 --> 00:10:28.069 align:start position:0%
java by the way you don't need to make
them<00:10:26.000><c> negative</c><00:10:26.480><c> because</c><00:10:26.800><c> java</c><00:10:27.200><c> has</c><00:10:27.600><c> a</c><00:10:27.760><c> max</c>

00:10:28.069 --> 00:10:28.079 align:start position:0%
them negative because java has a max
 

00:10:28.079 --> 00:10:29.670 align:start position:0%
them negative because java has a max
heap<00:10:28.399><c> which</c><00:10:28.560><c> you</c><00:10:28.640><c> can</c><00:10:28.800><c> use</c><00:10:29.040><c> but</c><00:10:29.200><c> we</c><00:10:29.360><c> will</c><00:10:29.519><c> be</c>

00:10:29.670 --> 00:10:29.680 align:start position:0%
heap which you can use but we will be
 

00:10:29.680 --> 00:10:31.990 align:start position:0%
heap which you can use but we will be
using<00:10:29.920><c> a</c><00:10:30.000><c> min</c><00:10:30.240><c> heap</c><00:10:30.480><c> and</c><00:10:30.640><c> python</c><00:10:31.279><c> but</c><00:10:31.440><c> the</c><00:10:31.600><c> idea</c>

00:10:31.990 --> 00:10:32.000 align:start position:0%
using a min heap and python but the idea
 

00:10:32.000 --> 00:10:33.030 align:start position:0%
using a min heap and python but the idea
is<00:10:32.079><c> the</c><00:10:32.160><c> same</c><00:10:32.399><c> right</c><00:10:32.560><c> we're</c><00:10:32.720><c> going</c><00:10:32.800><c> to</c><00:10:32.880><c> take</c>

00:10:33.030 --> 00:10:33.040 align:start position:0%
is the same right we're going to take
 

00:10:33.040 --> 00:10:35.670 align:start position:0%
is the same right we're going to take
these<00:10:33.279><c> values</c><00:10:33.920><c> add</c><00:10:34.160><c> them</c><00:10:34.560><c> to</c><00:10:34.720><c> a</c><00:10:34.880><c> heap</c><00:10:35.279><c> in</c><00:10:35.440><c> our</c>

00:10:35.670 --> 00:10:35.680 align:start position:0%
these values add them to a heap in our
 

00:10:35.680 --> 00:10:37.269 align:start position:0%
these values add them to a heap in our
case<00:10:35.839><c> we're</c><00:10:36.000><c> going</c><00:10:36.079><c> to</c><00:10:36.160><c> be</c><00:10:36.240><c> using</c><00:10:36.480><c> a</c><00:10:36.560><c> min</c><00:10:36.880><c> heap</c>

00:10:37.269 --> 00:10:37.279 align:start position:0%
case we're going to be using a min heap
 

00:10:37.279 --> 00:10:39.590 align:start position:0%
case we're going to be using a min heap
and<00:10:37.360><c> then</c><00:10:37.600><c> from</c><00:10:38.079><c> this</c><00:10:38.320><c> value</c><00:10:38.800><c> this</c><00:10:39.040><c> value</c><00:10:39.519><c> and</c>

00:10:39.590 --> 00:10:39.600 align:start position:0%
and then from this value this value and
 

00:10:39.600 --> 00:10:41.269 align:start position:0%
and then from this value this value and
this<00:10:39.839><c> value</c><00:10:40.560><c> we're</c><00:10:40.720><c> going</c><00:10:40.880><c> to</c><00:10:40.959><c> find</c><00:10:41.120><c> the</c>

00:10:41.269 --> 00:10:41.279 align:start position:0%
this value we're going to find the
 

00:10:41.279 --> 00:10:44.310 align:start position:0%
this value we're going to find the
minimum<00:10:41.680><c> we're</c><00:10:41.920><c> going</c><00:10:42.000><c> to</c><00:10:42.079><c> do</c><00:10:42.240><c> that</c><00:10:42.480><c> in</c><00:10:42.720><c> log</c><00:10:43.519><c> k</c>

00:10:44.310 --> 00:10:44.320 align:start position:0%
minimum we're going to do that in log k
 

00:10:44.320 --> 00:10:45.269 align:start position:0%
minimum we're going to do that in log k
time

00:10:45.269 --> 00:10:45.279 align:start position:0%
time
 

00:10:45.279 --> 00:10:46.790 align:start position:0%
time
and<00:10:45.600><c> how</c><00:10:45.839><c> many</c><00:10:46.000><c> times</c><00:10:46.320><c> are</c><00:10:46.399><c> we</c><00:10:46.480><c> going</c><00:10:46.560><c> to</c><00:10:46.640><c> do</c>

00:10:46.790 --> 00:10:46.800 align:start position:0%
and how many times are we going to do
 

00:10:46.800 --> 00:10:50.470 align:start position:0%
and how many times are we going to do
that<00:10:47.040><c> log</c><00:10:47.360><c> k</c><00:10:47.600><c> operation</c><00:10:48.480><c> well</c><00:10:48.959><c> of</c><00:10:49.120><c> course</c><00:10:49.760><c> only</c>

00:10:50.470 --> 00:10:50.480 align:start position:0%
that log k operation well of course only
 

00:10:50.480 --> 00:10:52.150 align:start position:0%
that log k operation well of course only
at<00:10:50.720><c> most</c><00:10:51.040><c> 10</c><00:10:51.279><c> times</c><00:10:51.600><c> right</c><00:10:51.760><c> so</c><00:10:51.920><c> the</c><00:10:52.000><c> time</c>

00:10:52.150 --> 00:10:52.160 align:start position:0%
at most 10 times right so the time
 

00:10:52.160 --> 00:10:55.269 align:start position:0%
at most 10 times right so the time
complexity<00:10:52.720><c> is</c><00:10:52.959><c> 10</c><00:10:53.519><c> times</c><00:10:53.920><c> log</c><00:10:54.320><c> k</c><00:10:54.720><c> so</c><00:10:54.880><c> that's</c>

00:10:55.269 --> 00:10:55.279 align:start position:0%
complexity is 10 times log k so that's
 

00:10:55.279 --> 00:10:57.829 align:start position:0%
complexity is 10 times log k so that's
better<00:10:55.839><c> than</c><00:10:56.480><c> 10</c><00:10:56.800><c> times</c><00:10:57.200><c> k</c><00:10:57.440><c> which</c><00:10:57.600><c> we</c>

00:10:57.829 --> 00:10:57.839 align:start position:0%
better than 10 times k which we
 

00:10:57.839 --> 00:11:00.550 align:start position:0%
better than 10 times k which we
previously<00:10:58.399><c> had</c><00:10:58.720><c> right</c><00:10:59.440><c> well</c><00:10:59.680><c> not</c><00:11:00.079><c> quite</c>

00:11:00.550 --> 00:11:00.560 align:start position:0%
previously had right well not quite
 

00:11:00.560 --> 00:11:01.670 align:start position:0%
previously had right well not quite
actually

00:11:01.670 --> 00:11:01.680 align:start position:0%
actually
 

00:11:01.680 --> 00:11:03.509 align:start position:0%
actually
and<00:11:01.760><c> that's</c><00:11:02.000><c> kind</c><00:11:02.160><c> of</c><00:11:02.320><c> the</c><00:11:02.560><c> dumb</c><00:11:02.880><c> part</c><00:11:03.200><c> about</c>

00:11:03.509 --> 00:11:03.519 align:start position:0%
and that's kind of the dumb part about
 

00:11:03.519 --> 00:11:04.389 align:start position:0%
and that's kind of the dumb part about
this

00:11:04.389 --> 00:11:04.399 align:start position:0%
this
 

00:11:04.399 --> 00:11:05.910 align:start position:0%
this
even<00:11:04.640><c> if</c><00:11:04.720><c> you</c><00:11:04.880><c> do</c><00:11:05.040><c> use</c><00:11:05.279><c> them</c><00:11:05.440><c> in</c><00:11:05.519><c> heap</c><00:11:05.760><c> it</c>

00:11:05.910 --> 00:11:05.920 align:start position:0%
even if you do use them in heap it
 

00:11:05.920 --> 00:11:07.750 align:start position:0%
even if you do use them in heap it
doesn't<00:11:06.160><c> really</c><00:11:06.480><c> change</c><00:11:06.720><c> the</c><00:11:07.040><c> overall</c><00:11:07.519><c> time</c>

00:11:07.750 --> 00:11:07.760 align:start position:0%
doesn't really change the overall time
 

00:11:07.760 --> 00:11:10.470 align:start position:0%
doesn't really change the overall time
complexity<00:11:08.399><c> let</c><00:11:08.560><c> me</c><00:11:08.720><c> tell</c><00:11:08.880><c> you</c><00:11:09.120><c> why</c><00:11:09.519><c> because</c>

00:11:10.470 --> 00:11:10.480 align:start position:0%
complexity let me tell you why because
 

00:11:10.480 --> 00:11:12.949 align:start position:0%
complexity let me tell you why because
let's<00:11:10.640><c> say</c><00:11:10.800><c> we</c><00:11:10.959><c> take</c><00:11:11.200><c> each</c><00:11:11.440><c> of</c><00:11:11.519><c> these</c><00:11:11.839><c> k</c><00:11:12.160><c> values</c>

00:11:12.949 --> 00:11:12.959 align:start position:0%
let's say we take each of these k values
 

00:11:12.959 --> 00:11:14.949 align:start position:0%
let's say we take each of these k values
and<00:11:13.200><c> we</c><00:11:13.360><c> add</c><00:11:13.600><c> them</c><00:11:13.680><c> to</c><00:11:13.839><c> the</c><00:11:14.000><c> heap</c><00:11:14.399><c> we</c><00:11:14.560><c> can</c><00:11:14.720><c> add</c>

00:11:14.949 --> 00:11:14.959 align:start position:0%
and we add them to the heap we can add
 

00:11:14.959 --> 00:11:16.630 align:start position:0%
and we add them to the heap we can add
these<00:11:15.200><c> values</c><00:11:15.600><c> in</c><00:11:15.760><c> two</c><00:11:16.000><c> different</c><00:11:16.240><c> ways</c><00:11:16.480><c> we</c>

00:11:16.630 --> 00:11:16.640 align:start position:0%
these values in two different ways we
 

00:11:16.640 --> 00:11:18.630 align:start position:0%
these values in two different ways we
can<00:11:16.880><c> push</c><00:11:17.279><c> each</c><00:11:17.519><c> of</c><00:11:17.600><c> these</c><00:11:17.839><c> values</c><00:11:18.399><c> which</c>

00:11:18.630 --> 00:11:18.640 align:start position:0%
can push each of these values which
 

00:11:18.640 --> 00:11:21.350 align:start position:0%
can push each of these values which
would<00:11:18.800><c> result</c><00:11:19.200><c> in</c><00:11:19.440><c> k</c><00:11:19.839><c> times</c><00:11:20.320><c> log</c><00:11:20.640><c> k</c><00:11:20.880><c> just</c><00:11:21.120><c> to</c>

00:11:21.350 --> 00:11:21.360 align:start position:0%
would result in k times log k just to
 

00:11:21.360 --> 00:11:24.230 align:start position:0%
would result in k times log k just to
push<00:11:22.000><c> these</c><00:11:22.560><c> values</c><00:11:23.040><c> these</c><00:11:23.279><c> k</c><00:11:23.519><c> values</c><00:11:23.920><c> to</c><00:11:24.079><c> the</c>

00:11:24.230 --> 00:11:24.240 align:start position:0%
push these values these k values to the
 

00:11:24.240 --> 00:11:26.550 align:start position:0%
push these values these k values to the
min<00:11:24.480><c> heap</c><00:11:24.800><c> or</c><00:11:24.959><c> we</c><00:11:25.120><c> could</c><00:11:25.279><c> run</c><00:11:25.519><c> heapify</c><00:11:26.320><c> which</c>

00:11:26.550 --> 00:11:26.560 align:start position:0%
min heap or we could run heapify which
 

00:11:26.560 --> 00:11:31.190 align:start position:0%
min heap or we could run heapify which
would<00:11:26.720><c> be</c><00:11:26.959><c> a</c><00:11:27.200><c> big</c><00:11:27.519><c> o</c><00:11:28.000><c> of</c><00:11:28.560><c> k</c><00:11:29.200><c> time</c><00:11:29.680><c> operation</c><00:11:30.560><c> so</c>

00:11:31.190 --> 00:11:31.200 align:start position:0%
would be a big o of k time operation so
 

00:11:31.200 --> 00:11:35.829 align:start position:0%
would be a big o of k time operation so
that<00:11:31.680><c> in</c><00:11:32.000><c> addition</c><00:11:32.720><c> to</c><00:11:33.040><c> our</c><00:11:33.440><c> 10</c><00:11:34.160><c> times</c><00:11:34.800><c> log</c><00:11:35.279><c> k</c>

00:11:35.829 --> 00:11:35.839 align:start position:0%
that in addition to our 10 times log k
 

00:11:35.839 --> 00:11:37.750 align:start position:0%
that in addition to our 10 times log k
it<00:11:36.160><c> makes</c><00:11:36.399><c> the</c><00:11:36.560><c> overall</c><00:11:36.880><c> time</c><00:11:37.120><c> complexity</c>

00:11:37.750 --> 00:11:37.760 align:start position:0%
it makes the overall time complexity
 

00:11:37.760 --> 00:11:39.590 align:start position:0%
it makes the overall time complexity
still<00:11:38.079><c> big</c><00:11:38.320><c> o</c><00:11:38.480><c> of</c><00:11:38.640><c> k</c><00:11:38.959><c> which</c><00:11:39.120><c> is</c><00:11:39.200><c> what</c><00:11:39.360><c> we</c>

00:11:39.590 --> 00:11:39.600 align:start position:0%
still big o of k which is what we
 

00:11:39.600 --> 00:11:41.509 align:start position:0%
still big o of k which is what we
already<00:11:40.000><c> originally</c><00:11:40.560><c> had</c><00:11:40.720><c> so</c><00:11:40.959><c> it</c><00:11:41.120><c> actually</c>

00:11:41.509 --> 00:11:41.519 align:start position:0%
already originally had so it actually
 

00:11:41.519 --> 00:11:43.269 align:start position:0%
already originally had so it actually
doesn't<00:11:41.920><c> change</c><00:11:42.320><c> the</c><00:11:42.560><c> overall</c><00:11:43.040><c> time</c>

00:11:43.269 --> 00:11:43.279 align:start position:0%
doesn't change the overall time
 

00:11:43.279 --> 00:11:45.829 align:start position:0%
doesn't change the overall time
complexity<00:11:44.079><c> uh</c><00:11:44.240><c> but</c><00:11:44.399><c> the</c><00:11:44.560><c> benefit</c><00:11:45.040><c> is</c><00:11:45.279><c> if</c><00:11:45.680><c> you</c>

00:11:45.829 --> 00:11:45.839 align:start position:0%
complexity uh but the benefit is if you
 

00:11:45.839 --> 00:11:47.350 align:start position:0%
complexity uh but the benefit is if you
know<00:11:46.079><c> if</c><00:11:46.160><c> we</c><00:11:46.320><c> were</c><00:11:46.399><c> running</c><00:11:46.720><c> this</c><00:11:46.959><c> algorithm</c>

00:11:47.350 --> 00:11:47.360 align:start position:0%
know if we were running this algorithm
 

00:11:47.360 --> 00:11:49.030 align:start position:0%
know if we were running this algorithm
in<00:11:47.519><c> a</c><00:11:47.600><c> generic</c><00:11:48.000><c> case</c><00:11:48.240><c> where</c><00:11:48.399><c> we</c><00:11:48.640><c> didn't</c><00:11:48.880><c> have</c>

00:11:49.030 --> 00:11:49.040 align:start position:0%
in a generic case where we didn't have
 

00:11:49.040 --> 00:11:52.069 align:start position:0%
in a generic case where we didn't have
to<00:11:49.279><c> actually</c><00:11:49.519><c> receive</c><00:11:50.240><c> uh</c><00:11:50.639><c> 10</c><00:11:51.360><c> uh</c><00:11:51.519><c> different</c>

00:11:52.069 --> 00:11:52.079 align:start position:0%
to actually receive uh 10 uh different
 

00:11:52.079 --> 00:11:54.069 align:start position:0%
to actually receive uh 10 uh different
tweets<00:11:52.480><c> maybe</c><00:11:52.720><c> we</c><00:11:52.880><c> had</c><00:11:52.959><c> to</c><00:11:53.120><c> receive</c>

00:11:54.069 --> 00:11:54.079 align:start position:0%
tweets maybe we had to receive
 

00:11:54.079 --> 00:11:56.870 align:start position:0%
tweets maybe we had to receive
up<00:11:54.240><c> to</c><00:11:54.480><c> n</c><00:11:55.040><c> tweets</c><00:11:55.680><c> our</c><00:11:56.000><c> algorithm</c><00:11:56.480><c> using</c><00:11:56.800><c> a</c>

00:11:56.870 --> 00:11:56.880 align:start position:0%
up to n tweets our algorithm using a
 

00:11:56.880 --> 00:11:58.790 align:start position:0%
up to n tweets our algorithm using a
heap<00:11:57.360><c> would</c><00:11:57.519><c> be</c><00:11:57.760><c> more</c><00:11:58.000><c> efficient</c><00:11:58.399><c> so</c><00:11:58.560><c> i</c><00:11:58.639><c> think</c>

00:11:58.790 --> 00:11:58.800 align:start position:0%
heap would be more efficient so i think
 

00:11:58.800 --> 00:12:00.870 align:start position:0%
heap would be more efficient so i think
i've<00:11:58.959><c> talked</c><00:11:59.279><c> enough</c><00:11:59.760><c> about</c><00:11:59.920><c> the</c><00:12:00.240><c> complexity</c>

00:12:00.870 --> 00:12:00.880 align:start position:0%
i've talked enough about the complexity
 

00:12:00.880 --> 00:12:02.629 align:start position:0%
i've talked enough about the complexity
and<00:12:01.040><c> how</c><00:12:01.200><c> we're</c><00:12:01.440><c> actually</c><00:12:01.680><c> gonna</c><00:12:01.839><c> design</c><00:12:02.240><c> this</c>

00:12:02.629 --> 00:12:02.639 align:start position:0%
and how we're actually gonna design this
 

00:12:02.639 --> 00:12:04.389 align:start position:0%
and how we're actually gonna design this
now<00:12:02.880><c> it's</c><00:12:03.040><c> actually</c><00:12:03.360><c> time</c><00:12:03.600><c> to</c><00:12:03.839><c> implement</c><00:12:04.240><c> the</c>

00:12:04.389 --> 00:12:04.399 align:start position:0%
now it's actually time to implement the
 

00:12:04.399 --> 00:12:06.470 align:start position:0%
now it's actually time to implement the
solution<00:12:05.120><c> and</c><00:12:05.440><c> code</c><00:12:05.680><c> it</c><00:12:05.760><c> up</c><00:12:05.920><c> just</c><00:12:06.079><c> to</c><00:12:06.160><c> save</c><00:12:06.399><c> a</c>

00:12:06.470 --> 00:12:06.480 align:start position:0%
solution and code it up just to save a
 

00:12:06.480 --> 00:12:07.750 align:start position:0%
solution and code it up just to save a
bit<00:12:06.639><c> of</c><00:12:06.720><c> time</c><00:12:06.959><c> i'm</c><00:12:07.040><c> just</c><00:12:07.200><c> gonna</c><00:12:07.360><c> copy</c><00:12:07.680><c> and</c>

00:12:07.750 --> 00:12:07.760 align:start position:0%
bit of time i'm just gonna copy and
 

00:12:07.760 --> 00:12:09.430 align:start position:0%
bit of time i'm just gonna copy and
paste<00:12:08.079><c> a</c><00:12:08.160><c> few</c><00:12:08.399><c> lines</c><00:12:08.639><c> of</c><00:12:08.720><c> code</c><00:12:08.959><c> so</c><00:12:09.120><c> remember</c>

00:12:09.430 --> 00:12:09.440 align:start position:0%
paste a few lines of code so remember
 

00:12:09.440 --> 00:12:11.590 align:start position:0%
paste a few lines of code so remember
we're<00:12:09.600><c> gonna</c><00:12:09.760><c> have</c><00:12:10.000><c> three</c><00:12:10.480><c> main</c><00:12:10.800><c> variables</c><00:12:11.440><c> in</c>

00:12:11.590 --> 00:12:11.600 align:start position:0%
we're gonna have three main variables in
 

00:12:11.600 --> 00:12:13.110 align:start position:0%
we're gonna have three main variables in
our<00:12:11.680><c> constructor</c><00:12:12.399><c> we're</c><00:12:12.560><c> gonna</c><00:12:12.720><c> keep</c><00:12:12.959><c> track</c>

00:12:13.110 --> 00:12:13.120 align:start position:0%
our constructor we're gonna keep track
 

00:12:13.120 --> 00:12:14.470 align:start position:0%
our constructor we're gonna keep track
of<00:12:13.200><c> the</c><00:12:13.360><c> count</c><00:12:13.680><c> initially</c><00:12:14.000><c> it's</c><00:12:14.160><c> gonna</c><00:12:14.320><c> be</c>

00:12:14.470 --> 00:12:14.480 align:start position:0%
of the count initially it's gonna be
 

00:12:14.480 --> 00:12:16.470 align:start position:0%
of the count initially it's gonna be
zero<00:12:15.200><c> uh</c><00:12:15.360><c> we're</c><00:12:15.519><c> gonna</c><00:12:15.680><c> use</c><00:12:15.920><c> the</c><00:12:16.079><c> count</c><00:12:16.320><c> to</c>

00:12:16.470 --> 00:12:16.480 align:start position:0%
zero uh we're gonna use the count to
 

00:12:16.480 --> 00:12:18.629 align:start position:0%
zero uh we're gonna use the count to
basically<00:12:17.440><c> uh</c><00:12:17.760><c> it</c><00:12:17.839><c> would</c><00:12:18.000><c> be</c><00:12:18.079><c> better</c><00:12:18.320><c> to</c><00:12:18.399><c> call</c>

00:12:18.629 --> 00:12:18.639 align:start position:0%
basically uh it would be better to call
 

00:12:18.639 --> 00:12:20.790 align:start position:0%
basically uh it would be better to call
this<00:12:18.959><c> time</c><00:12:19.600><c> but</c><00:12:19.839><c> it</c><00:12:19.920><c> really</c><00:12:20.160><c> is</c><00:12:20.240><c> just</c><00:12:20.480><c> counting</c>

00:12:20.790 --> 00:12:20.800 align:start position:0%
this time but it really is just counting
 

00:12:20.800 --> 00:12:22.389 align:start position:0%
this time but it really is just counting
our<00:12:20.959><c> number</c><00:12:21.200><c> of</c><00:12:21.279><c> tweets</c><00:12:21.600><c> so</c><00:12:21.760><c> basically</c><00:12:22.160><c> we</c><00:12:22.240><c> can</c>

00:12:22.389 --> 00:12:22.399 align:start position:0%
our number of tweets so basically we can
 

00:12:22.399 --> 00:12:24.790 align:start position:0%
our number of tweets so basically we can
maintain<00:12:22.880><c> which</c><00:12:23.200><c> tweet</c><00:12:23.440><c> was</c><00:12:23.760><c> created</c><00:12:24.240><c> earlier</c>

00:12:24.790 --> 00:12:24.800 align:start position:0%
maintain which tweet was created earlier
 

00:12:24.800 --> 00:12:26.710 align:start position:0%
maintain which tweet was created earlier
than<00:12:25.040><c> another</c><00:12:25.440><c> tweet</c><00:12:26.000><c> we're</c><00:12:26.240><c> also</c><00:12:26.399><c> gonna</c><00:12:26.560><c> have</c>

00:12:26.710 --> 00:12:26.720 align:start position:0%
than another tweet we're also gonna have
 

00:12:26.720 --> 00:12:29.269 align:start position:0%
than another tweet we're also gonna have
a<00:12:26.800><c> tweet</c><00:12:27.120><c> map</c><00:12:27.519><c> where</c><00:12:27.760><c> we</c><00:12:27.920><c> map</c><00:12:28.240><c> each</c><00:12:28.480><c> user</c><00:12:28.880><c> to</c><00:12:29.040><c> a</c>

00:12:29.269 --> 00:12:29.279 align:start position:0%
a tweet map where we map each user to a
 

00:12:29.279 --> 00:12:32.310 align:start position:0%
a tweet map where we map each user to a
list<00:12:29.760><c> of</c><00:12:30.320><c> uh</c><00:12:30.480><c> that</c><00:12:30.720><c> user's</c><00:12:31.200><c> tweets</c><00:12:31.760><c> as</c><00:12:31.920><c> well</c><00:12:32.160><c> as</c>

00:12:32.310 --> 00:12:32.320 align:start position:0%
list of uh that user's tweets as well as
 

00:12:32.320 --> 00:12:34.710 align:start position:0%
list of uh that user's tweets as well as
the<00:12:32.480><c> count</c><00:12:32.800><c> which</c><00:12:33.120><c> is</c><00:12:33.680><c> uh</c><00:12:33.839><c> gonna</c><00:12:34.079><c> be</c><00:12:34.240><c> used</c><00:12:34.560><c> to</c>

00:12:34.710 --> 00:12:34.720 align:start position:0%
the count which is uh gonna be used to
 

00:12:34.720 --> 00:12:36.629 align:start position:0%
the count which is uh gonna be used to
figure<00:12:34.959><c> out</c><00:12:35.120><c> which</c><00:12:35.360><c> tweet</c><00:12:35.600><c> was</c><00:12:35.839><c> created</c><00:12:36.320><c> uh</c>

00:12:36.629 --> 00:12:36.639 align:start position:0%
figure out which tweet was created uh
 

00:12:36.639 --> 00:12:39.030 align:start position:0%
figure out which tweet was created uh
earlier<00:12:37.600><c> and</c><00:12:37.680><c> of</c><00:12:37.920><c> course</c><00:12:38.480><c> we</c><00:12:38.560><c> want</c><00:12:38.720><c> to</c><00:12:38.800><c> be</c><00:12:38.959><c> able</c>

00:12:39.030 --> 00:12:39.040 align:start position:0%
earlier and of course we want to be able
 

00:12:39.040 --> 00:12:41.269 align:start position:0%
earlier and of course we want to be able
to<00:12:39.440><c> have</c><00:12:39.680><c> a</c><00:12:39.760><c> follow</c><00:12:40.160><c> map</c><00:12:40.480><c> to</c>

00:12:41.269 --> 00:12:41.279 align:start position:0%
to have a follow map to
 

00:12:41.279 --> 00:12:44.389 align:start position:0%
to have a follow map to
maintain<00:12:42.079><c> a</c><00:12:42.240><c> user</c><00:12:42.639><c> and</c><00:12:43.120><c> a</c><00:12:43.360><c> set</c><00:12:43.600><c> of</c><00:12:43.839><c> all</c><00:12:44.079><c> the</c>

00:12:44.389 --> 00:12:44.399 align:start position:0%
maintain a user and a set of all the
 

00:12:44.399 --> 00:12:46.389 align:start position:0%
maintain a user and a set of all the
people<00:12:44.720><c> that</c><00:12:44.880><c> they</c><00:12:45.040><c> follow</c><00:12:45.839><c> so</c><00:12:46.079><c> i'm</c><00:12:46.240><c> actually</c>

00:12:46.389 --> 00:12:46.399 align:start position:0%
people that they follow so i'm actually
 

00:12:46.399 --> 00:12:47.670 align:start position:0%
people that they follow so i'm actually
going<00:12:46.480><c> to</c><00:12:46.560><c> implement</c><00:12:46.959><c> the</c><00:12:47.120><c> follow</c><00:12:47.519><c> and</c>

00:12:47.670 --> 00:12:47.680 align:start position:0%
going to implement the follow and
 

00:12:47.680 --> 00:12:49.350 align:start position:0%
going to implement the follow and
unfollow<00:12:48.320><c> first</c><00:12:48.639><c> because</c><00:12:48.880><c> they're</c><00:12:49.040><c> a</c><00:12:49.120><c> lot</c>

00:12:49.350 --> 00:12:49.360 align:start position:0%
unfollow first because they're a lot
 

00:12:49.360 --> 00:12:53.269 align:start position:0%
unfollow first because they're a lot
easier<00:12:50.079><c> so</c><00:12:50.720><c> for</c><00:12:50.959><c> follow</c><00:12:51.360><c> we</c><00:12:51.519><c> take</c><00:12:52.160><c> our</c><00:12:52.480><c> follow</c>

00:12:53.269 --> 00:12:53.279 align:start position:0%
easier so for follow we take our follow
 

00:12:53.279 --> 00:12:55.030 align:start position:0%
easier so for follow we take our follow
map<00:12:54.079><c> and</c>

00:12:55.030 --> 00:12:55.040 align:start position:0%
map and
 

00:12:55.040 --> 00:12:57.750 align:start position:0%
map and
for<00:12:55.279><c> a</c><00:12:55.440><c> follower</c><00:12:56.000><c> id</c><00:12:56.720><c> we</c><00:12:56.880><c> want</c><00:12:57.040><c> to</c><00:12:57.200><c> say</c><00:12:57.440><c> okay</c>

00:12:57.750 --> 00:12:57.760 align:start position:0%
for a follower id we want to say okay
 

00:12:57.760 --> 00:13:00.710 align:start position:0%
for a follower id we want to say okay
this<00:12:58.240><c> uh</c><00:12:58.560><c> person</c><00:12:59.040><c> is</c><00:12:59.279><c> now</c><00:12:59.680><c> following</c><00:13:00.240><c> another</c>

00:13:00.710 --> 00:13:00.720 align:start position:0%
this uh person is now following another
 

00:13:00.720 --> 00:13:04.150 align:start position:0%
this uh person is now following another
person<00:13:01.440><c> uh</c><00:13:01.680><c> with</c><00:13:01.920><c> the</c><00:13:02.480><c> uh</c><00:13:02.800><c> followee</c><00:13:03.360><c> id</c><00:13:03.839><c> so</c>

00:13:04.150 --> 00:13:04.160 align:start position:0%
person uh with the uh followee id so
 

00:13:04.160 --> 00:13:06.629 align:start position:0%
person uh with the uh followee id so
with<00:13:04.399><c> the</c><00:13:04.560><c> hash</c><00:13:04.959><c> set</c><00:13:05.360><c> we're</c><00:13:05.519><c> gonna</c><00:13:05.920><c> add</c><00:13:06.480><c> to</c>

00:13:06.629 --> 00:13:06.639 align:start position:0%
with the hash set we're gonna add to
 

00:13:06.639 --> 00:13:10.389 align:start position:0%
with the hash set we're gonna add to
that<00:13:06.880><c> hash</c><00:13:07.120><c> set</c><00:13:07.440><c> this</c><00:13:08.000><c> followee</c><00:13:08.720><c> id</c><00:13:09.279><c> so</c><00:13:09.920><c> that's</c>

00:13:10.389 --> 00:13:10.399 align:start position:0%
that hash set this followee id so that's
 

00:13:10.399 --> 00:13:13.430 align:start position:0%
that hash set this followee id so that's
pretty<00:13:10.720><c> easy</c><00:13:11.360><c> now</c><00:13:11.839><c> in</c><00:13:12.160><c> the</c><00:13:12.399><c> unfollow</c><00:13:13.200><c> it's</c>

00:13:13.430 --> 00:13:13.440 align:start position:0%
pretty easy now in the unfollow it's
 

00:13:13.440 --> 00:13:15.590 align:start position:0%
pretty easy now in the unfollow it's
basically<00:13:13.839><c> the</c><00:13:14.000><c> reverse</c><00:13:14.560><c> of</c><00:13:14.639><c> this</c><00:13:14.880><c> right</c><00:13:15.360><c> a</c>

00:13:15.590 --> 00:13:15.600 align:start position:0%
basically the reverse of this right a
 

00:13:15.600 --> 00:13:17.590 align:start position:0%
basically the reverse of this right a
user<00:13:16.000><c> is</c><00:13:16.160><c> now</c><00:13:16.480><c> unfollowing</c><00:13:17.120><c> someone</c><00:13:17.440><c> so</c>

00:13:17.590 --> 00:13:17.600 align:start position:0%
user is now unfollowing someone so
 

00:13:17.600 --> 00:13:20.629 align:start position:0%
user is now unfollowing someone so
instead<00:13:17.839><c> of</c><00:13:18.079><c> adding</c><00:13:18.639><c> we're</c><00:13:18.880><c> gonna</c><00:13:19.279><c> remove</c><00:13:20.320><c> but</c>

00:13:20.629 --> 00:13:20.639 align:start position:0%
instead of adding we're gonna remove but
 

00:13:20.639 --> 00:13:23.590 align:start position:0%
instead of adding we're gonna remove but
what<00:13:20.880><c> if</c><00:13:21.519><c> this</c><00:13:21.760><c> person</c><00:13:22.240><c> is</c><00:13:22.399><c> actually</c><00:13:22.880><c> not</c><00:13:23.200><c> even</c>

00:13:23.590 --> 00:13:23.600 align:start position:0%
what if this person is actually not even
 

00:13:23.600 --> 00:13:25.990 align:start position:0%
what if this person is actually not even
following<00:13:24.240><c> a</c><00:13:24.320><c> different</c><00:13:24.720><c> person</c><00:13:25.360><c> well</c><00:13:25.760><c> let's</c>

00:13:25.990 --> 00:13:26.000 align:start position:0%
following a different person well let's
 

00:13:26.000 --> 00:13:28.069 align:start position:0%
following a different person well let's
just<00:13:26.320><c> add</c><00:13:26.560><c> a</c><00:13:26.720><c> conditional</c><00:13:27.279><c> to</c><00:13:27.360><c> make</c><00:13:27.600><c> sure</c><00:13:27.839><c> that</c>

00:13:28.069 --> 00:13:28.079 align:start position:0%
just add a conditional to make sure that
 

00:13:28.079 --> 00:13:29.990 align:start position:0%
just add a conditional to make sure that
they<00:13:28.480><c> are</c><00:13:28.800><c> following</c><00:13:29.200><c> before</c><00:13:29.519><c> we</c><00:13:29.680><c> actually</c>

00:13:29.990 --> 00:13:30.000 align:start position:0%
they are following before we actually
 

00:13:30.000 --> 00:13:31.430 align:start position:0%
they are following before we actually
call<00:13:30.160><c> the</c><00:13:30.320><c> remove</c><00:13:30.800><c> function</c><00:13:31.120><c> because</c><00:13:31.360><c> at</c>

00:13:31.430 --> 00:13:31.440 align:start position:0%
call the remove function because at
 

00:13:31.440 --> 00:13:33.110 align:start position:0%
call the remove function because at
least<00:13:31.760><c> in</c><00:13:31.839><c> python</c><00:13:32.320><c> i</c><00:13:32.399><c> think</c><00:13:32.639><c> it</c><00:13:32.720><c> will</c><00:13:32.880><c> throw</c>

00:13:33.110 --> 00:13:33.120 align:start position:0%
least in python i think it will throw
 

00:13:33.120 --> 00:13:35.430 align:start position:0%
least in python i think it will throw
like<00:13:33.360><c> an</c><00:13:33.519><c> exception</c><00:13:34.000><c> or</c><00:13:34.160><c> something</c><00:13:34.880><c> so</c><00:13:35.200><c> let's</c>

00:13:35.430 --> 00:13:35.440 align:start position:0%
like an exception or something so let's
 

00:13:35.440 --> 00:13:36.230 align:start position:0%
like an exception or something so let's
just

00:13:36.230 --> 00:13:36.240 align:start position:0%
just
 

00:13:36.240 --> 00:13:40.389 align:start position:0%
just
make<00:13:36.399><c> sure</c><00:13:36.639><c> if</c><00:13:37.040><c> follow</c><00:13:38.000><c> e</c><00:13:38.639><c> id</c><00:13:39.279><c> is</c><00:13:39.600><c> in</c>

00:13:40.389 --> 00:13:40.399 align:start position:0%
make sure if follow e id is in
 

00:13:40.399 --> 00:13:44.310 align:start position:0%
make sure if follow e id is in
the<00:13:40.800><c> set</c><00:13:41.519><c> for</c><00:13:41.839><c> that</c><00:13:42.320><c> follower</c><00:13:43.120><c> id</c><00:13:43.760><c> so</c><00:13:43.920><c> if</c><00:13:44.000><c> that</c>

00:13:44.310 --> 00:13:44.320 align:start position:0%
the set for that follower id so if that
 

00:13:44.320 --> 00:13:46.629 align:start position:0%
the set for that follower id so if that
is<00:13:44.560><c> the</c><00:13:44.720><c> case</c><00:13:45.279><c> only</c><00:13:45.760><c> then</c><00:13:46.079><c> are</c><00:13:46.160><c> we</c><00:13:46.320><c> actually</c>

00:13:46.629 --> 00:13:46.639 align:start position:0%
is the case only then are we actually
 

00:13:46.639 --> 00:13:48.470 align:start position:0%
is the case only then are we actually
going<00:13:46.720><c> to</c><00:13:46.800><c> remove</c><00:13:47.199><c> it</c><00:13:47.519><c> okay</c><00:13:47.760><c> so</c><00:13:47.920><c> that</c><00:13:48.079><c> was</c><00:13:48.320><c> the</c>

00:13:48.470 --> 00:13:48.480 align:start position:0%
going to remove it okay so that was the
 

00:13:48.480 --> 00:13:51.030 align:start position:0%
going to remove it okay so that was the
easy<00:13:48.800><c> part</c><00:13:49.199><c> now</c><00:13:49.360><c> let's</c><00:13:49.600><c> do</c><00:13:49.839><c> post</c><00:13:50.160><c> tweet</c><00:13:50.800><c> it's</c>

00:13:51.030 --> 00:13:51.040 align:start position:0%
easy part now let's do post tweet it's
 

00:13:51.040 --> 00:13:53.750 align:start position:0%
easy part now let's do post tweet it's
the<00:13:51.199><c> second</c><00:13:51.519><c> easiest</c><00:13:52.240><c> so</c><00:13:52.399><c> for</c><00:13:52.639><c> any</c><00:13:52.880><c> user</c><00:13:53.519><c> uh</c>

00:13:53.750 --> 00:13:53.760 align:start position:0%
the second easiest so for any user uh
 

00:13:53.760 --> 00:13:55.350 align:start position:0%
the second easiest so for any user uh
they<00:13:54.000><c> just</c><00:13:54.160><c> created</c><00:13:54.480><c> a</c><00:13:54.560><c> tweet</c><00:13:54.880><c> so</c><00:13:55.040><c> we</c><00:13:55.120><c> want</c><00:13:55.279><c> to</c>

00:13:55.350 --> 00:13:55.360 align:start position:0%
they just created a tweet so we want to
 

00:13:55.360 --> 00:13:57.350 align:start position:0%
they just created a tweet so we want to
be<00:13:55.440><c> able</c><00:13:55.600><c> to</c><00:13:55.680><c> record</c><00:13:56.160><c> that</c><00:13:56.399><c> so</c><00:13:56.639><c> in</c><00:13:56.800><c> our</c><00:13:56.959><c> tweet</c>

00:13:57.350 --> 00:13:57.360 align:start position:0%
be able to record that so in our tweet
 

00:13:57.360 --> 00:13:59.829 align:start position:0%
be able to record that so in our tweet
map<00:13:57.920><c> we're</c><00:13:58.160><c> gonna</c><00:13:58.480><c> say</c><00:13:58.959><c> oh</c><00:13:59.199><c> and</c><00:13:59.279><c> by</c><00:13:59.519><c> the</c><00:13:59.600><c> way</c><00:13:59.760><c> i</c>

00:13:59.829 --> 00:13:59.839 align:start position:0%
map we're gonna say oh and by the way i
 

00:13:59.839 --> 00:14:01.829 align:start position:0%
map we're gonna say oh and by the way i
didn't<00:14:00.000><c> mention</c><00:14:00.480><c> we're</c><00:14:00.720><c> using</c><00:14:00.959><c> default</c><00:14:01.519><c> dicks</c>

00:14:01.829 --> 00:14:01.839 align:start position:0%
didn't mention we're using default dicks
 

00:14:01.839 --> 00:14:03.829 align:start position:0%
didn't mention we're using default dicks
in<00:14:01.920><c> this</c><00:14:02.160><c> case</c><00:14:02.639><c> default</c><00:14:03.040><c> dictionaries</c><00:14:03.680><c> or</c>

00:14:03.829 --> 00:14:03.839 align:start position:0%
in this case default dictionaries or
 

00:14:03.839 --> 00:14:05.829 align:start position:0%
in this case default dictionaries or
hash<00:14:04.160><c> maps</c><00:14:04.720><c> in</c><00:14:04.800><c> this</c><00:14:04.959><c> case</c><00:14:05.279><c> of</c><00:14:05.360><c> course</c><00:14:05.600><c> we</c><00:14:05.760><c> have</c>

00:14:05.829 --> 00:14:05.839 align:start position:0%
hash maps in this case of course we have
 

00:14:05.839 --> 00:14:07.269 align:start position:0%
hash maps in this case of course we have
a<00:14:06.000><c> list</c><00:14:06.240><c> right</c><00:14:06.480><c> that's</c><00:14:06.720><c> going</c><00:14:06.800><c> to</c><00:14:06.880><c> be</c><00:14:07.040><c> what</c>

00:14:07.269 --> 00:14:07.279 align:start position:0%
a list right that's going to be what
 

00:14:07.279 --> 00:14:09.189 align:start position:0%
a list right that's going to be what
we're<00:14:07.760><c> recording</c><00:14:08.240><c> and</c><00:14:08.399><c> in</c><00:14:08.480><c> this</c><00:14:08.639><c> one</c><00:14:08.800><c> we</c><00:14:08.959><c> have</c>

00:14:09.189 --> 00:14:09.199 align:start position:0%
we're recording and in this one we have
 

00:14:09.199 --> 00:14:11.670 align:start position:0%
we're recording and in this one we have
a<00:14:09.519><c> set</c><00:14:10.079><c> main</c><00:14:10.320><c> reason</c><00:14:10.560><c> i'm</c><00:14:10.639><c> doing</c><00:14:10.880><c> it</c><00:14:11.040><c> like</c><00:14:11.199><c> this</c>

00:14:11.670 --> 00:14:11.680 align:start position:0%
a set main reason i'm doing it like this
 

00:14:11.680 --> 00:14:13.350 align:start position:0%
a set main reason i'm doing it like this
is<00:14:11.839><c> just</c><00:14:12.000><c> to</c><00:14:12.160><c> save</c><00:14:12.399><c> a</c><00:14:12.480><c> couple</c><00:14:12.720><c> lines</c><00:14:13.040><c> of</c><00:14:13.120><c> code</c>

00:14:13.350 --> 00:14:13.360 align:start position:0%
is just to save a couple lines of code
 

00:14:13.360 --> 00:14:14.949 align:start position:0%
is just to save a couple lines of code
if<00:14:13.519><c> we</c><00:14:13.600><c> didn't</c><00:14:13.839><c> have</c><00:14:14.000><c> default</c><00:14:14.399><c> dicks</c><00:14:14.720><c> we</c><00:14:14.800><c> could</c>

00:14:14.949 --> 00:14:14.959 align:start position:0%
if we didn't have default dicks we could
 

00:14:14.959 --> 00:14:17.110 align:start position:0%
if we didn't have default dicks we could
have<00:14:15.040><c> just</c><00:14:15.519><c> initialized</c><00:14:16.160><c> it</c><00:14:16.240><c> to</c><00:14:16.480><c> a</c><00:14:16.639><c> regular</c>

00:14:17.110 --> 00:14:17.120 align:start position:0%
have just initialized it to a regular
 

00:14:17.120 --> 00:14:20.150 align:start position:0%
have just initialized it to a regular
hashmap<00:14:18.240><c> but</c><00:14:18.480><c> in</c><00:14:18.560><c> that</c><00:14:18.800><c> case</c><00:14:19.519><c> each</c><00:14:19.760><c> time</c><00:14:20.000><c> i'm</c>

00:14:20.150 --> 00:14:20.160 align:start position:0%
hashmap but in that case each time i'm
 

00:14:20.160 --> 00:14:22.150 align:start position:0%
hashmap but in that case each time i'm
adding<00:14:20.480><c> values</c><00:14:20.880><c> like</c><00:14:21.279><c> see</c><00:14:21.519><c> here</c><00:14:21.760><c> i'm</c><00:14:21.920><c> adding</c>

00:14:22.150 --> 00:14:22.160 align:start position:0%
adding values like see here i'm adding
 

00:14:22.160 --> 00:14:23.750 align:start position:0%
adding values like see here i'm adding
values<00:14:22.480><c> i</c><00:14:22.639><c> would</c><00:14:22.720><c> have</c><00:14:22.880><c> to</c><00:14:23.040><c> initialize</c><00:14:23.600><c> it</c>

00:14:23.750 --> 00:14:23.760 align:start position:0%
values i would have to initialize it
 

00:14:23.760 --> 00:14:25.750 align:start position:0%
values i would have to initialize it
before<00:14:24.240><c> so</c><00:14:24.399><c> i'd</c><00:14:24.639><c> have</c><00:14:24.720><c> to</c><00:14:24.880><c> say</c>

00:14:25.750 --> 00:14:25.760 align:start position:0%
before so i'd have to say
 

00:14:25.760 --> 00:14:27.910 align:start position:0%
before so i'd have to say
follower<00:14:26.560><c> id</c>

00:14:27.910 --> 00:14:27.920 align:start position:0%
follower id
 

00:14:27.920 --> 00:14:31.590 align:start position:0%
follower id
is<00:14:28.079><c> going</c><00:14:28.240><c> to</c><00:14:28.399><c> equal</c><00:14:29.279><c> a</c><00:14:29.920><c> list</c><00:14:30.480><c> and</c><00:14:30.959><c> or</c><00:14:31.360><c> in</c><00:14:31.440><c> this</c>

00:14:31.590 --> 00:14:31.600 align:start position:0%
is going to equal a list and or in this
 

00:14:31.600 --> 00:14:34.310 align:start position:0%
is going to equal a list and or in this
case<00:14:31.839><c> a</c><00:14:32.079><c> set</c><00:14:32.639><c> and</c><00:14:32.800><c> then</c><00:14:33.120><c> i</c><00:14:33.199><c> can</c><00:14:33.440><c> add</c><00:14:33.680><c> it</c><00:14:34.079><c> right</c>

00:14:34.310 --> 00:14:34.320 align:start position:0%
case a set and then i can add it right
 

00:14:34.320 --> 00:14:35.829 align:start position:0%
case a set and then i can add it right
first<00:14:34.560><c> we'd</c><00:14:34.720><c> have</c><00:14:34.800><c> to</c><00:14:34.880><c> create</c><00:14:35.120><c> an</c><00:14:35.279><c> empty</c><00:14:35.600><c> set</c>

00:14:35.829 --> 00:14:35.839 align:start position:0%
first we'd have to create an empty set
 

00:14:35.839 --> 00:14:37.269 align:start position:0%
first we'd have to create an empty set
and<00:14:35.920><c> then</c><00:14:36.160><c> add</c><00:14:36.480><c> the</c>

00:14:37.269 --> 00:14:37.279 align:start position:0%
and then add the
 

00:14:37.279 --> 00:14:39.509 align:start position:0%
and then add the
values<00:14:37.839><c> to</c><00:14:38.000><c> that</c><00:14:38.320><c> set</c><00:14:38.720><c> doing</c><00:14:39.040><c> it</c><00:14:39.120><c> this</c><00:14:39.279><c> way</c>

00:14:39.509 --> 00:14:39.519 align:start position:0%
values to that set doing it this way
 

00:14:39.519 --> 00:14:41.030 align:start position:0%
values to that set doing it this way
just<00:14:39.680><c> saves</c><00:14:40.000><c> a</c><00:14:40.079><c> few</c><00:14:40.240><c> lines</c><00:14:40.480><c> of</c><00:14:40.560><c> code</c><00:14:40.800><c> i</c><00:14:40.880><c> think</c>

00:14:41.030 --> 00:14:41.040 align:start position:0%
just saves a few lines of code i think
 

00:14:41.040 --> 00:14:42.790 align:start position:0%
just saves a few lines of code i think
in<00:14:41.120><c> most</c><00:14:41.360><c> cases</c><00:14:41.680><c> your</c><00:14:41.920><c> interviewer</c><00:14:42.480><c> would</c>

00:14:42.790 --> 00:14:42.800 align:start position:0%
in most cases your interviewer would
 

00:14:42.800 --> 00:14:44.389 align:start position:0%
in most cases your interviewer would
probably<00:14:43.360><c> be</c><00:14:43.519><c> fine</c><00:14:43.760><c> with</c><00:14:43.920><c> it</c><00:14:44.000><c> but</c><00:14:44.079><c> if</c><00:14:44.240><c> they're</c>

00:14:44.389 --> 00:14:44.399 align:start position:0%
probably be fine with it but if they're
 

00:14:44.399 --> 00:14:45.829 align:start position:0%
probably be fine with it but if they're
not<00:14:44.639><c> you</c><00:14:44.720><c> can</c><00:14:44.880><c> always</c><00:14:45.120><c> just</c><00:14:45.279><c> write</c><00:14:45.519><c> it</c><00:14:45.680><c> out</c>

00:14:45.829 --> 00:14:45.839 align:start position:0%
not you can always just write it out
 

00:14:45.839 --> 00:14:47.509 align:start position:0%
not you can always just write it out
it's<00:14:46.079><c> pretty</c><00:14:46.240><c> easy</c><00:14:46.560><c> to</c><00:14:46.639><c> do</c><00:14:46.800><c> it</c><00:14:46.959><c> just</c><00:14:47.120><c> saves</c><00:14:47.440><c> us</c>

00:14:47.509 --> 00:14:47.519 align:start position:0%
it's pretty easy to do it just saves us
 

00:14:47.519 --> 00:14:49.590 align:start position:0%
it's pretty easy to do it just saves us
a<00:14:47.600><c> few</c><00:14:47.839><c> lines</c><00:14:48.079><c> of</c><00:14:48.240><c> code</c><00:14:48.480><c> in</c><00:14:48.639><c> this</c><00:14:48.800><c> case</c><00:14:49.279><c> so</c><00:14:49.519><c> in</c>

00:14:49.590 --> 00:14:49.600 align:start position:0%
a few lines of code in this case so in
 

00:14:49.600 --> 00:14:52.230 align:start position:0%
a few lines of code in this case so in
the<00:14:49.760><c> tweet</c><00:14:50.079><c> map</c><00:14:50.399><c> for</c><00:14:50.639><c> this</c><00:14:50.880><c> user</c><00:14:51.279><c> id</c><00:14:51.839><c> we</c><00:14:52.079><c> want</c>

00:14:52.230 --> 00:14:52.240 align:start position:0%
the tweet map for this user id we want
 

00:14:52.240 --> 00:14:54.870 align:start position:0%
the tweet map for this user id we want
to<00:14:52.480><c> append</c><00:14:53.040><c> to</c><00:14:53.199><c> the</c><00:14:53.360><c> end</c><00:14:53.519><c> of</c><00:14:53.600><c> the</c><00:14:53.760><c> list</c><00:14:54.320><c> the</c>

00:14:54.870 --> 00:14:54.880 align:start position:0%
to append to the end of the list the
 

00:14:54.880 --> 00:14:57.750 align:start position:0%
to append to the end of the list the
tweet<00:14:55.440><c> id</c><00:14:56.320><c> but</c><00:14:56.560><c> actually</c><00:14:56.959><c> not</c><00:14:57.120><c> just</c><00:14:57.360><c> the</c><00:14:57.519><c> tweet</c>

00:14:57.750 --> 00:14:57.760 align:start position:0%
tweet id but actually not just the tweet
 

00:14:57.760 --> 00:14:59.509 align:start position:0%
tweet id but actually not just the tweet
id<00:14:58.079><c> remember</c><00:14:58.399><c> because</c><00:14:58.639><c> we</c><00:14:58.880><c> determined</c><00:14:59.440><c> that</c>

00:14:59.509 --> 00:14:59.519 align:start position:0%
id remember because we determined that
 

00:14:59.519 --> 00:15:01.910 align:start position:0%
id remember because we determined that
we<00:14:59.680><c> need</c><00:14:59.839><c> to</c><00:15:00.079><c> record</c><00:15:00.560><c> a</c><00:15:00.720><c> pair</c><00:15:01.040><c> of</c><00:15:01.199><c> values</c><00:15:01.760><c> we</c>

00:15:01.910 --> 00:15:01.920 align:start position:0%
we need to record a pair of values we
 

00:15:01.920 --> 00:15:04.389 align:start position:0%
we need to record a pair of values we
need<00:15:02.079><c> to</c><00:15:02.240><c> record</c><00:15:02.720><c> the</c><00:15:02.959><c> count</c><00:15:03.600><c> uh</c><00:15:04.000><c> that</c><00:15:04.240><c> this</c>

00:15:04.389 --> 00:15:04.399 align:start position:0%
need to record the count uh that this
 

00:15:04.399 --> 00:15:06.710 align:start position:0%
need to record the count uh that this
tweet<00:15:04.720><c> was</c><00:15:04.959><c> created</c><00:15:05.519><c> at</c><00:15:05.839><c> so</c><00:15:06.079><c> that</c><00:15:06.320><c> we</c><00:15:06.560><c> know</c>

00:15:06.710 --> 00:15:06.720 align:start position:0%
tweet was created at so that we know
 

00:15:06.720 --> 00:15:08.710 align:start position:0%
tweet was created at so that we know
which<00:15:06.959><c> tweet</c><00:15:07.279><c> was</c><00:15:07.519><c> created</c><00:15:08.000><c> before</c><00:15:08.320><c> another</c>

00:15:08.710 --> 00:15:08.720 align:start position:0%
which tweet was created before another
 

00:15:08.720 --> 00:15:09.590 align:start position:0%
which tweet was created before another
tweet

00:15:09.590 --> 00:15:09.600 align:start position:0%
tweet
 

00:15:09.600 --> 00:15:11.110 align:start position:0%
tweet
actually<00:15:09.920><c> i</c><00:15:10.000><c> think</c><00:15:10.160><c> we're</c><00:15:10.639><c> trying</c><00:15:10.800><c> to</c><00:15:10.880><c> figure</c>

00:15:11.110 --> 00:15:11.120 align:start position:0%
actually i think we're trying to figure
 

00:15:11.120 --> 00:15:12.550 align:start position:0%
actually i think we're trying to figure
out<00:15:11.199><c> which</c><00:15:11.360><c> tweet</c><00:15:11.600><c> was</c><00:15:11.839><c> created</c><00:15:12.240><c> most</c>

00:15:12.550 --> 00:15:12.560 align:start position:0%
out which tweet was created most
 

00:15:12.560 --> 00:15:14.550 align:start position:0%
out which tweet was created most
recently<00:15:13.360><c> uh</c><00:15:13.519><c> but</c><00:15:13.680><c> either</c><00:15:13.920><c> way</c><00:15:14.079><c> our</c><00:15:14.160><c> account</c>

00:15:14.550 --> 00:15:14.560 align:start position:0%
recently uh but either way our account
 

00:15:14.560 --> 00:15:16.470 align:start position:0%
recently uh but either way our account
will<00:15:14.720><c> help</c><00:15:14.959><c> us</c><00:15:15.120><c> for</c><00:15:15.279><c> that</c><00:15:15.519><c> and</c><00:15:15.680><c> then</c><00:15:16.160><c> after</c>

00:15:16.470 --> 00:15:16.480 align:start position:0%
will help us for that and then after
 

00:15:16.480 --> 00:15:18.470 align:start position:0%
will help us for that and then after
we've<00:15:16.720><c> done</c><00:15:16.959><c> that</c><00:15:17.199><c> we</c><00:15:17.360><c> want</c><00:15:17.600><c> the</c><00:15:17.839><c> next</c><00:15:18.160><c> tweet</c>

00:15:18.470 --> 00:15:18.480 align:start position:0%
we've done that we want the next tweet
 

00:15:18.480 --> 00:15:21.430 align:start position:0%
we've done that we want the next tweet
to<00:15:18.639><c> be</c><00:15:19.199><c> uh</c><00:15:19.839><c> created</c><00:15:20.320><c> at</c><00:15:20.560><c> a</c><00:15:20.720><c> different</c><00:15:21.040><c> count</c><00:15:21.279><c> so</c>

00:15:21.430 --> 00:15:21.440 align:start position:0%
to be uh created at a different count so
 

00:15:21.440 --> 00:15:23.430 align:start position:0%
to be uh created at a different count so
we're<00:15:21.600><c> gonna</c><00:15:21.760><c> actually</c><00:15:22.079><c> decrement</c><00:15:22.720><c> this</c><00:15:23.279><c> so</c>

00:15:23.430 --> 00:15:23.440 align:start position:0%
we're gonna actually decrement this so
 

00:15:23.440 --> 00:15:26.550 align:start position:0%
we're gonna actually decrement this so
that<00:15:23.680><c> we</c><00:15:23.839><c> can</c><00:15:24.320><c> use</c><00:15:24.639><c> this</c><00:15:25.040><c> in</c><00:15:25.279><c> our</c><00:15:25.519><c> min</c><00:15:25.760><c> heap</c><00:15:26.240><c> in</c>

00:15:26.550 --> 00:15:26.560 align:start position:0%
that we can use this in our min heap in
 

00:15:26.560 --> 00:15:28.790 align:start position:0%
that we can use this in our min heap in
our<00:15:27.040><c> this</c><00:15:27.279><c> function</c><00:15:27.920><c> that's</c><00:15:28.240><c> i</c><00:15:28.399><c> think</c><00:15:28.560><c> pretty</c>

00:15:28.790 --> 00:15:28.800 align:start position:0%
our this function that's i think pretty
 

00:15:28.800 --> 00:15:31.189 align:start position:0%
our this function that's i think pretty
much<00:15:29.040><c> it</c><00:15:29.199><c> for</c><00:15:29.360><c> post</c><00:15:29.680><c> tweet</c><00:15:30.160><c> so</c><00:15:30.320><c> now</c><00:15:30.560><c> basically</c>

00:15:31.189 --> 00:15:31.199 align:start position:0%
much it for post tweet so now basically
 

00:15:31.199 --> 00:15:33.030 align:start position:0%
much it for post tweet so now basically
to<00:15:31.440><c> the</c><00:15:31.600><c> main</c><00:15:31.920><c> part</c><00:15:32.160><c> of</c><00:15:32.240><c> this</c><00:15:32.480><c> algorithm</c><00:15:32.880><c> to</c>

00:15:33.030 --> 00:15:33.040 align:start position:0%
to the main part of this algorithm to
 

00:15:33.040 --> 00:15:35.590 align:start position:0%
to the main part of this algorithm to
get<00:15:33.279><c> news</c><00:15:33.600><c> feed</c><00:15:34.000><c> so</c><00:15:34.160><c> like</c><00:15:34.399><c> i</c><00:15:34.560><c> said</c><00:15:35.199><c> we're</c><00:15:35.360><c> gonna</c>

00:15:35.590 --> 00:15:35.600 align:start position:0%
get news feed so like i said we're gonna
 

00:15:35.600 --> 00:15:37.350 align:start position:0%
get news feed so like i said we're gonna
have<00:15:35.680><c> a</c><00:15:35.759><c> result</c><00:15:36.160><c> right</c><00:15:36.480><c> that's</c><00:15:36.720><c> gonna</c><00:15:36.880><c> be</c><00:15:37.120><c> the</c>

00:15:37.350 --> 00:15:37.360 align:start position:0%
have a result right that's gonna be the
 

00:15:37.360 --> 00:15:39.430 align:start position:0%
have a result right that's gonna be the
list<00:15:37.759><c> of</c><00:15:37.920><c> tweets</c><00:15:38.399><c> so</c><00:15:38.560><c> it's</c><00:15:38.720><c> gonna</c><00:15:38.880><c> be</c><00:15:38.959><c> ordered</c>

00:15:39.430 --> 00:15:39.440 align:start position:0%
list of tweets so it's gonna be ordered
 

00:15:39.440 --> 00:15:41.990 align:start position:0%
list of tweets so it's gonna be ordered
starting<00:15:39.759><c> from</c><00:15:39.920><c> the</c><00:15:40.000><c> most</c><00:15:40.320><c> recent</c><00:15:40.720><c> tweets</c><00:15:41.440><c> uh</c>

00:15:41.990 --> 00:15:42.000 align:start position:0%
starting from the most recent tweets uh
 

00:15:42.000 --> 00:15:44.470 align:start position:0%
starting from the most recent tweets uh
for<00:15:42.560><c> all</c><00:15:42.800><c> the</c><00:15:42.959><c> people</c><00:15:43.360><c> that</c><00:15:43.600><c> this</c><00:15:43.920><c> person</c>

00:15:44.470 --> 00:15:44.480 align:start position:0%
for all the people that this person
 

00:15:44.480 --> 00:15:46.069 align:start position:0%
for all the people that this person
follows<00:15:45.279><c> and</c><00:15:45.360><c> we're</c><00:15:45.519><c> also</c><00:15:45.759><c> going</c><00:15:45.839><c> to</c><00:15:45.920><c> be</c>

00:15:46.069 --> 00:15:46.079 align:start position:0%
follows and we're also going to be
 

00:15:46.079 --> 00:15:49.269 align:start position:0%
follows and we're also going to be
needing<00:15:46.480><c> a</c><00:15:46.800><c> min</c><00:15:47.199><c> heap</c><00:15:47.759><c> to</c><00:15:48.079><c> figure</c><00:15:48.560><c> out</c><00:15:49.120><c> what</c>

00:15:49.269 --> 00:15:49.279 align:start position:0%
needing a min heap to figure out what
 

00:15:49.279 --> 00:15:51.749 align:start position:0%
needing a min heap to figure out what
the<00:15:49.360><c> most</c><00:15:49.680><c> recent</c><00:15:50.079><c> were</c><00:15:50.639><c> so</c><00:15:50.800><c> initially</c><00:15:51.600><c> the</c>

00:15:51.749 --> 00:15:51.759 align:start position:0%
the most recent were so initially the
 

00:15:51.759 --> 00:15:54.470 align:start position:0%
the most recent were so initially the
min<00:15:52.000><c> heap</c><00:15:52.320><c> is</c><00:15:52.480><c> going</c><00:15:52.560><c> to</c><00:15:52.639><c> be</c><00:15:52.800><c> empty</c><00:15:53.519><c> we</c><00:15:53.920><c> are</c><00:15:54.079><c> now</c>

00:15:54.470 --> 00:15:54.480 align:start position:0%
min heap is going to be empty we are now
 

00:15:54.480 --> 00:15:56.230 align:start position:0%
min heap is going to be empty we are now
going<00:15:54.720><c> to</c><00:15:55.040><c> go</c><00:15:55.440><c> through</c>

00:15:56.230 --> 00:15:56.240 align:start position:0%
going to go through
 

00:15:56.240 --> 00:15:58.949 align:start position:0%
going to go through
every<00:15:56.639><c> person</c><00:15:57.120><c> that</c><00:15:57.279><c> this</c><00:15:57.600><c> user</c><00:15:58.160><c> follows</c><00:15:58.800><c> how</c>

00:15:58.949 --> 00:15:58.959 align:start position:0%
every person that this user follows how
 

00:15:58.959 --> 00:16:00.389 align:start position:0%
every person that this user follows how
can<00:15:59.120><c> we</c><00:15:59.279><c> get</c><00:15:59.440><c> that</c><00:15:59.680><c> how</c><00:15:59.839><c> can</c><00:16:00.000><c> we</c><00:16:00.079><c> get</c><00:16:00.240><c> the</c>

00:16:00.389 --> 00:16:00.399 align:start position:0%
can we get that how can we get the
 

00:16:00.399 --> 00:16:02.790 align:start position:0%
can we get that how can we get the
followee<00:16:01.360><c> id</c><00:16:01.839><c> of</c><00:16:02.000><c> each</c><00:16:02.240><c> person</c><00:16:02.480><c> that</c><00:16:02.639><c> this</c>

00:16:02.790 --> 00:16:02.800 align:start position:0%
followee id of each person that this
 

00:16:02.800 --> 00:16:04.710 align:start position:0%
followee id of each person that this
user<00:16:03.040><c> follows</c><00:16:03.440><c> well</c><00:16:03.680><c> remember</c><00:16:04.079><c> we</c><00:16:04.240><c> have</c><00:16:04.560><c> a</c>

00:16:04.710 --> 00:16:04.720 align:start position:0%
user follows well remember we have a
 

00:16:04.720 --> 00:16:07.590 align:start position:0%
user follows well remember we have a
follower<00:16:05.199><c> map</c><00:16:05.440><c> for</c><00:16:05.600><c> that</c><00:16:05.759><c> so</c><00:16:06.079><c> follower</c><00:16:07.120><c> map</c>

00:16:07.590 --> 00:16:07.600 align:start position:0%
follower map for that so follower map
 

00:16:07.600 --> 00:16:10.389 align:start position:0%
follower map for that so follower map
don't<00:16:07.839><c> forget</c><00:16:08.079><c> to</c><00:16:08.160><c> use</c><00:16:08.480><c> self</c><00:16:09.040><c> in</c><00:16:09.199><c> python</c>

00:16:10.389 --> 00:16:10.399 align:start position:0%
don't forget to use self in python
 

00:16:10.399 --> 00:16:12.629 align:start position:0%
don't forget to use self in python
for<00:16:10.800><c> this</c><00:16:11.120><c> user</c><00:16:11.680><c> id</c><00:16:12.000><c> so</c><00:16:12.160><c> we</c><00:16:12.320><c> want</c><00:16:12.399><c> to</c><00:16:12.480><c> go</c>

00:16:12.629 --> 00:16:12.639 align:start position:0%
for this user id so we want to go
 

00:16:12.639 --> 00:16:14.310 align:start position:0%
for this user id so we want to go
through<00:16:12.800><c> each</c><00:16:13.040><c> followee</c><00:16:13.519><c> id</c><00:16:13.839><c> and</c><00:16:14.000><c> what</c><00:16:14.160><c> do</c><00:16:14.240><c> we</c>

00:16:14.310 --> 00:16:14.320 align:start position:0%
through each followee id and what do we
 

00:16:14.320 --> 00:16:16.629 align:start position:0%
through each followee id and what do we
want<00:16:14.480><c> to</c><00:16:14.639><c> do</c><00:16:14.800><c> with</c><00:16:14.959><c> that</c><00:16:15.199><c> followee</c><00:16:15.680><c> id</c><00:16:16.160><c> we</c><00:16:16.399><c> want</c>

00:16:16.629 --> 00:16:16.639 align:start position:0%
want to do with that followee id we want
 

00:16:16.639 --> 00:16:18.470 align:start position:0%
want to do with that followee id we want
the<00:16:16.720><c> most</c><00:16:17.040><c> recent</c><00:16:17.360><c> tweet</c><00:16:17.680><c> that</c><00:16:17.839><c> this</c><00:16:18.079><c> person</c>

00:16:18.470 --> 00:16:18.480 align:start position:0%
the most recent tweet that this person
 

00:16:18.480 --> 00:16:20.870 align:start position:0%
the most recent tweet that this person
created<00:16:18.880><c> right</c><00:16:19.120><c> our</c><00:16:19.360><c> frontier</c><00:16:20.000><c> basically</c>

00:16:20.870 --> 00:16:20.880 align:start position:0%
created right our frontier basically
 

00:16:20.880 --> 00:16:23.670 align:start position:0%
created right our frontier basically
first<00:16:21.279><c> we're</c><00:16:21.440><c> going</c><00:16:21.519><c> to</c><00:16:21.600><c> get</c><00:16:22.320><c> the</c><00:16:22.720><c> index</c><00:16:23.519><c> and</c>

00:16:23.670 --> 00:16:23.680 align:start position:0%
first we're going to get the index and
 

00:16:23.680 --> 00:16:25.189 align:start position:0%
first we're going to get the index and
that<00:16:23.920><c> index</c><00:16:24.240><c> is</c><00:16:24.320><c> basically</c><00:16:24.720><c> just</c><00:16:24.880><c> going</c><00:16:24.959><c> to</c><00:16:25.040><c> be</c>

00:16:25.189 --> 00:16:25.199 align:start position:0%
that index is basically just going to be
 

00:16:25.199 --> 00:16:27.990 align:start position:0%
that index is basically just going to be
the<00:16:25.360><c> last</c><00:16:25.759><c> value</c><00:16:26.639><c> of</c><00:16:26.880><c> the</c><00:16:27.040><c> list</c><00:16:27.360><c> so</c><00:16:27.519><c> first</c><00:16:27.759><c> to</c>

00:16:27.990 --> 00:16:28.000 align:start position:0%
the last value of the list so first to
 

00:16:28.000 --> 00:16:30.550 align:start position:0%
the last value of the list so first to
even<00:16:28.160><c> get</c><00:16:28.399><c> the</c><00:16:28.560><c> list</c><00:16:28.880><c> we</c><00:16:28.959><c> need</c><00:16:29.199><c> the</c><00:16:29.440><c> tweet</c><00:16:29.839><c> map</c>

00:16:30.550 --> 00:16:30.560 align:start position:0%
even get the list we need the tweet map
 

00:16:30.560 --> 00:16:34.389 align:start position:0%
even get the list we need the tweet map
of<00:16:31.279><c> this</c><00:16:32.079><c> followe</c><00:16:32.800><c> id</c><00:16:33.360><c> so</c><00:16:33.600><c> this</c><00:16:33.759><c> will</c><00:16:34.000><c> give</c><00:16:34.160><c> us</c>

00:16:34.389 --> 00:16:34.399 align:start position:0%
of this followe id so this will give us
 

00:16:34.399 --> 00:16:37.590 align:start position:0%
of this followe id so this will give us
a<00:16:34.639><c> list</c><00:16:35.279><c> we</c><00:16:35.440><c> want</c><00:16:35.680><c> the</c><00:16:36.000><c> length</c><00:16:36.480><c> of</c><00:16:36.639><c> this</c><00:16:36.959><c> list</c>

00:16:37.590 --> 00:16:37.600 align:start position:0%
a list we want the length of this list
 

00:16:37.600 --> 00:16:39.590 align:start position:0%
a list we want the length of this list
minus<00:16:38.160><c> 1</c><00:16:38.399><c> because</c><00:16:38.639><c> that</c><00:16:38.800><c> will</c><00:16:39.040><c> give</c><00:16:39.199><c> us</c><00:16:39.360><c> the</c>

00:16:39.590 --> 00:16:39.600 align:start position:0%
minus 1 because that will give us the
 

00:16:39.600 --> 00:16:42.710 align:start position:0%
minus 1 because that will give us the
last<00:16:40.079><c> index</c><00:16:40.880><c> and</c><00:16:41.120><c> using</c><00:16:41.440><c> that</c><00:16:41.759><c> last</c><00:16:42.079><c> index</c><00:16:42.560><c> we</c>

00:16:42.710 --> 00:16:42.720 align:start position:0%
last index and using that last index we
 

00:16:42.720 --> 00:16:45.590 align:start position:0%
last index and using that last index we
can<00:16:43.279><c> take</c><00:16:43.600><c> that</c><00:16:44.320><c> list</c>

00:16:45.590 --> 00:16:45.600 align:start position:0%
can take that list
 

00:16:45.600 --> 00:16:47.350 align:start position:0%
can take that list
so<00:16:45.759><c> this</c><00:16:46.000><c> is</c><00:16:46.079><c> the</c><00:16:46.240><c> list</c><00:16:46.560><c> we're</c><00:16:46.720><c> going</c><00:16:46.800><c> to</c><00:16:46.959><c> index</c>

00:16:47.350 --> 00:16:47.360 align:start position:0%
so this is the list we're going to index
 

00:16:47.360 --> 00:16:49.990 align:start position:0%
so this is the list we're going to index
it<00:16:47.680><c> so</c><00:16:47.839><c> basically</c><00:16:48.160><c> look</c><00:16:48.399><c> at</c><00:16:48.480><c> this</c><00:16:48.720><c> position</c><00:16:49.440><c> of</c>

00:16:49.990 --> 00:16:50.000 align:start position:0%
it so basically look at this position of
 

00:16:50.000 --> 00:16:51.590 align:start position:0%
it so basically look at this position of
the<00:16:50.160><c> list</c><00:16:50.560><c> which</c><00:16:50.720><c> will</c><00:16:50.880><c> give</c><00:16:51.040><c> us</c><00:16:51.199><c> the</c><00:16:51.279><c> last</c>

00:16:51.590 --> 00:16:51.600 align:start position:0%
the list which will give us the last
 

00:16:51.600 --> 00:16:53.910 align:start position:0%
the list which will give us the last
value<00:16:52.000><c> and</c><00:16:52.240><c> remember</c><00:16:52.560><c> this</c><00:16:52.880><c> itself</c><00:16:53.360><c> is</c><00:16:53.519><c> a</c><00:16:53.600><c> pair</c>

00:16:53.910 --> 00:16:53.920 align:start position:0%
value and remember this itself is a pair
 

00:16:53.920 --> 00:16:57.590 align:start position:0%
value and remember this itself is a pair
of<00:16:54.079><c> values</c><00:16:54.800><c> the</c><00:16:55.040><c> count</c><00:16:55.680><c> and</c><00:16:56.079><c> the</c><00:16:56.240><c> tweet</c><00:16:56.639><c> id</c><00:16:57.199><c> so</c>

00:16:57.590 --> 00:16:57.600 align:start position:0%
of values the count and the tweet id so
 

00:16:57.600 --> 00:17:01.269 align:start position:0%
of values the count and the tweet id so
count<00:16:58.240><c> tweet</c><00:16:58.959><c> id</c><00:16:59.680><c> and</c><00:17:00.240><c> this</c><00:17:00.639><c> is</c><00:17:00.800><c> what's</c><00:17:01.120><c> going</c>

00:17:01.269 --> 00:17:01.279 align:start position:0%
count tweet id and this is what's going
 

00:17:01.279 --> 00:17:04.069 align:start position:0%
count tweet id and this is what's going
to<00:17:01.519><c> be</c><00:17:01.839><c> added</c><00:17:02.240><c> to</c><00:17:02.560><c> our</c><00:17:02.880><c> min</c><00:17:03.199><c> heap</c><00:17:03.680><c> so</c><00:17:03.920><c> i'm</c>

00:17:04.069 --> 00:17:04.079 align:start position:0%
to be added to our min heap so i'm
 

00:17:04.079 --> 00:17:06.069 align:start position:0%
to be added to our min heap so i'm
initially<00:17:04.480><c> just</c><00:17:04.640><c> going</c><00:17:04.799><c> to</c><00:17:04.959><c> append</c><00:17:05.600><c> this</c><00:17:05.919><c> to</c>

00:17:06.069 --> 00:17:06.079 align:start position:0%
initially just going to append this to
 

00:17:06.079 --> 00:17:08.150 align:start position:0%
initially just going to append this to
the<00:17:06.240><c> min</c><00:17:06.480><c> heap</c><00:17:06.880><c> we</c><00:17:06.959><c> don't</c><00:17:07.120><c> need</c><00:17:07.280><c> to</c><00:17:07.439><c> heap</c><00:17:07.919><c> push</c>

00:17:08.150 --> 00:17:08.160 align:start position:0%
the min heap we don't need to heap push
 

00:17:08.160 --> 00:17:10.390 align:start position:0%
the min heap we don't need to heap push
it<00:17:08.400><c> or</c><00:17:08.559><c> anything</c><00:17:09.360><c> and</c><00:17:09.439><c> then</c><00:17:09.600><c> we</c><00:17:09.679><c> can</c><00:17:09.839><c> heapify</c>

00:17:10.390 --> 00:17:10.400 align:start position:0%
it or anything and then we can heapify
 

00:17:10.400 --> 00:17:12.630 align:start position:0%
it or anything and then we can heapify
this<00:17:10.720><c> after</c><00:17:11.120><c> we've</c><00:17:11.360><c> added</c><00:17:11.760><c> every</c><00:17:12.079><c> value</c><00:17:12.480><c> that</c>

00:17:12.630 --> 00:17:12.640 align:start position:0%
this after we've added every value that
 

00:17:12.640 --> 00:17:15.029 align:start position:0%
this after we've added every value that
we<00:17:12.799><c> want</c><00:17:13.120><c> to</c><00:17:13.360><c> it</c><00:17:13.919><c> so</c><00:17:14.160><c> i'm</c><00:17:14.319><c> appending</c><00:17:14.799><c> to</c><00:17:14.880><c> the</c>

00:17:15.029 --> 00:17:15.039 align:start position:0%
we want to it so i'm appending to the
 

00:17:15.039 --> 00:17:17.350 align:start position:0%
we want to it so i'm appending to the
min<00:17:15.280><c> heap</c><00:17:15.839><c> the</c><00:17:16.079><c> first</c><00:17:16.559><c> value</c><00:17:17.039><c> so</c><00:17:17.199><c> it's</c><00:17:17.280><c> going</c>

00:17:17.350 --> 00:17:17.360 align:start position:0%
min heap the first value so it's going
 

00:17:17.360 --> 00:17:19.110 align:start position:0%
min heap the first value so it's going
to<00:17:17.439><c> be</c><00:17:17.679><c> not</c><00:17:17.919><c> just</c><00:17:18.079><c> a</c><00:17:18.160><c> pair</c><00:17:18.400><c> of</c><00:17:18.480><c> values</c><00:17:18.799><c> but</c><00:17:18.959><c> it's</c>

00:17:19.110 --> 00:17:19.120 align:start position:0%
to be not just a pair of values but it's
 

00:17:19.120 --> 00:17:20.549 align:start position:0%
to be not just a pair of values but it's
actually<00:17:19.280><c> going</c><00:17:19.360><c> to</c><00:17:19.439><c> be</c><00:17:19.679><c> 4</c><00:17:19.919><c> values</c><00:17:20.319><c> and</c><00:17:20.480><c> you're</c>

00:17:20.549 --> 00:17:20.559 align:start position:0%
actually going to be 4 values and you're
 

00:17:20.559 --> 00:17:22.789 align:start position:0%
actually going to be 4 values and you're
going<00:17:20.640><c> to</c><00:17:20.720><c> see</c><00:17:20.959><c> why</c><00:17:21.280><c> but</c><00:17:21.439><c> the</c><00:17:21.600><c> first</c><00:17:22.000><c> value</c><00:17:22.559><c> is</c>

00:17:22.789 --> 00:17:22.799 align:start position:0%
going to see why but the first value is
 

00:17:22.799 --> 00:17:25.110 align:start position:0%
going to see why but the first value is
what's<00:17:23.120><c> used</c><00:17:23.520><c> as</c><00:17:23.760><c> the</c><00:17:24.000><c> key</c><00:17:24.640><c> as</c><00:17:24.799><c> long</c><00:17:24.959><c> as</c>

00:17:25.110 --> 00:17:25.120 align:start position:0%
what's used as the key as long as
 

00:17:25.120 --> 00:17:26.630 align:start position:0%
what's used as the key as long as
there's<00:17:25.280><c> not</c><00:17:25.439><c> a</c><00:17:25.600><c> tie</c><00:17:25.919><c> and</c><00:17:26.000><c> there</c><00:17:26.160><c> won't</c><00:17:26.319><c> be</c><00:17:26.480><c> a</c>

00:17:26.630 --> 00:17:26.640 align:start position:0%
there's not a tie and there won't be a
 

00:17:26.640 --> 00:17:28.470 align:start position:0%
there's not a tie and there won't be a
tie<00:17:26.880><c> in</c><00:17:26.959><c> this</c><00:17:27.120><c> case</c><00:17:27.360><c> because</c><00:17:27.679><c> count</c><00:17:28.000><c> is</c><00:17:28.160><c> always</c>

00:17:28.470 --> 00:17:28.480 align:start position:0%
tie in this case because count is always
 

00:17:28.480 --> 00:17:30.710 align:start position:0%
tie in this case because count is always
going<00:17:28.559><c> to</c><00:17:28.640><c> be</c><00:17:28.799><c> unique</c><00:17:29.280><c> for</c><00:17:29.520><c> every</c><00:17:29.840><c> single</c>

00:17:30.710 --> 00:17:30.720 align:start position:0%
going to be unique for every single
 

00:17:30.720 --> 00:17:32.950 align:start position:0%
going to be unique for every single
tweet<00:17:31.039><c> in</c><00:17:31.200><c> this</c><00:17:31.360><c> case</c><00:17:31.919><c> i'm</c><00:17:32.080><c> gonna</c><00:17:32.320><c> add</c><00:17:32.640><c> that</c>

00:17:32.950 --> 00:17:32.960 align:start position:0%
tweet in this case i'm gonna add that
 

00:17:32.960 --> 00:17:34.470 align:start position:0%
tweet in this case i'm gonna add that
count<00:17:33.280><c> as</c><00:17:33.440><c> the</c><00:17:33.520><c> first</c><00:17:33.760><c> value</c><00:17:34.080><c> because</c><00:17:34.320><c> that's</c>

00:17:34.470 --> 00:17:34.480 align:start position:0%
count as the first value because that's
 

00:17:34.480 --> 00:17:36.070 align:start position:0%
count as the first value because that's
what<00:17:34.640><c> we</c><00:17:34.799><c> want</c><00:17:34.960><c> to</c><00:17:35.039><c> use</c><00:17:35.280><c> as</c><00:17:35.440><c> the</c><00:17:35.600><c> key</c><00:17:35.919><c> that's</c>

00:17:36.070 --> 00:17:36.080 align:start position:0%
what we want to use as the key that's
 

00:17:36.080 --> 00:17:38.710 align:start position:0%
what we want to use as the key that's
what<00:17:36.240><c> we</c><00:17:36.400><c> want</c><00:17:36.559><c> to</c><00:17:36.799><c> order</c><00:17:37.280><c> our</c><00:17:38.000><c> min</c><00:17:38.240><c> heap</c><00:17:38.640><c> and</c>

00:17:38.710 --> 00:17:38.720 align:start position:0%
what we want to order our min heap and
 

00:17:38.720 --> 00:17:40.549 align:start position:0%
what we want to order our min heap and
then<00:17:38.880><c> the</c><00:17:39.039><c> remaining</c><00:17:39.600><c> i'm</c><00:17:39.760><c> gonna</c><00:17:40.080><c> of</c><00:17:40.160><c> course</c>

00:17:40.549 --> 00:17:40.559 align:start position:0%
then the remaining i'm gonna of course
 

00:17:40.559 --> 00:17:42.310 align:start position:0%
then the remaining i'm gonna of course
need<00:17:40.799><c> to</c><00:17:40.960><c> add</c><00:17:41.200><c> the</c><00:17:41.360><c> tweet</c><00:17:41.679><c> id</c><00:17:42.000><c> because</c><00:17:42.160><c> that's</c>

00:17:42.310 --> 00:17:42.320 align:start position:0%
need to add the tweet id because that's
 

00:17:42.320 --> 00:17:44.150 align:start position:0%
need to add the tweet id because that's
we're<00:17:42.480><c> gonna</c><00:17:43.120><c> we're</c><00:17:43.280><c> gonna</c><00:17:43.520><c> end</c><00:17:43.679><c> up</c><00:17:43.760><c> adding</c><00:17:44.000><c> to</c>

00:17:44.150 --> 00:17:44.160 align:start position:0%
we're gonna we're gonna end up adding to
 

00:17:44.160 --> 00:17:46.070 align:start position:0%
we're gonna we're gonna end up adding to
the<00:17:44.240><c> result</c><00:17:44.880><c> and</c><00:17:45.120><c> i'm</c><00:17:45.360><c> also</c><00:17:45.679><c> going</c><00:17:45.840><c> to</c><00:17:45.919><c> be</c>

00:17:46.070 --> 00:17:46.080 align:start position:0%
the result and i'm also going to be
 

00:17:46.080 --> 00:17:48.870 align:start position:0%
the result and i'm also going to be
adding<00:17:46.320><c> the</c><00:17:46.640><c> followee</c><00:17:47.280><c> id</c><00:17:47.679><c> of</c><00:17:47.840><c> this</c><00:17:48.160><c> person</c>

00:17:48.870 --> 00:17:48.880 align:start position:0%
adding the followee id of this person
 

00:17:48.880 --> 00:17:52.310 align:start position:0%
adding the followee id of this person
because<00:17:49.520><c> after</c><00:17:49.919><c> we</c><00:17:50.160><c> pop</c><00:17:50.720><c> this</c><00:17:51.280><c> tweet</c><00:17:51.760><c> we</c><00:17:52.000><c> also</c>

00:17:52.310 --> 00:17:52.320 align:start position:0%
because after we pop this tweet we also
 

00:17:52.320 --> 00:17:55.430 align:start position:0%
because after we pop this tweet we also
want<00:17:52.480><c> to</c><00:17:52.640><c> get</c><00:17:52.799><c> the</c><00:17:53.039><c> next</c><00:17:53.600><c> tweet</c><00:17:54.240><c> from</c><00:17:54.880><c> this</c>

00:17:55.430 --> 00:17:55.440 align:start position:0%
want to get the next tweet from this
 

00:17:55.440 --> 00:17:57.750 align:start position:0%
want to get the next tweet from this
followee<00:17:56.000><c> id</c><00:17:56.320><c> right</c><00:17:56.640><c> so</c><00:17:56.880><c> we</c><00:17:57.280><c> using</c><00:17:57.520><c> this</c>

00:17:57.750 --> 00:17:57.760 align:start position:0%
followee id right so we using this
 

00:17:57.760 --> 00:17:59.350 align:start position:0%
followee id right so we using this
followee<00:17:58.160><c> id</c><00:17:58.400><c> we're</c><00:17:58.559><c> going</c><00:17:58.640><c> to</c><00:17:58.720><c> go</c><00:17:58.960><c> back</c><00:17:59.200><c> to</c>

00:17:59.350 --> 00:17:59.360 align:start position:0%
followee id we're going to go back to
 

00:17:59.360 --> 00:18:02.070 align:start position:0%
followee id we're going to go back to
the<00:17:59.600><c> list</c><00:18:00.240><c> and</c><00:18:00.400><c> then</c><00:18:00.720><c> get</c><00:18:00.880><c> the</c><00:18:01.200><c> next</c><00:18:01.600><c> position</c>

00:18:02.070 --> 00:18:02.080 align:start position:0%
the list and then get the next position
 

00:18:02.080 --> 00:18:04.789 align:start position:0%
the list and then get the next position
at<00:18:02.240><c> the</c><00:18:02.480><c> next</c><00:18:03.039><c> index</c><00:18:03.679><c> not</c><00:18:03.919><c> really</c><00:18:04.240><c> the</c><00:18:04.400><c> next</c>

00:18:04.789 --> 00:18:04.799 align:start position:0%
at the next index not really the next
 

00:18:04.799 --> 00:18:06.870 align:start position:0%
at the next index not really the next
index<00:18:05.120><c> but</c><00:18:05.360><c> the</c><00:18:05.679><c> previous</c><00:18:06.080><c> index</c><00:18:06.480><c> so</c><00:18:06.640><c> really</c>

00:18:06.870 --> 00:18:06.880 align:start position:0%
index but the previous index so really
 

00:18:06.880 --> 00:18:09.190 align:start position:0%
index but the previous index so really
i'm<00:18:07.039><c> going</c><00:18:07.120><c> to</c><00:18:07.280><c> decrement</c><00:18:07.840><c> this</c><00:18:08.080><c> index</c><00:18:08.480><c> by</c><00:18:08.720><c> one</c>

00:18:09.190 --> 00:18:09.200 align:start position:0%
i'm going to decrement this index by one
 

00:18:09.200 --> 00:18:11.590 align:start position:0%
i'm going to decrement this index by one
so<00:18:09.600><c> let's</c><00:18:09.840><c> make</c><00:18:10.000><c> sure</c><00:18:10.160><c> to</c><00:18:10.400><c> store</c><00:18:10.799><c> that</c><00:18:11.039><c> index</c>

00:18:11.590 --> 00:18:11.600 align:start position:0%
so let's make sure to store that index
 

00:18:11.600 --> 00:18:14.310 align:start position:0%
so let's make sure to store that index
also<00:18:12.080><c> in</c><00:18:12.240><c> our</c><00:18:12.400><c> min</c><00:18:12.720><c> heap</c><00:18:13.200><c> just</c><00:18:13.440><c> so</c><00:18:13.600><c> we</c><00:18:13.919><c> have</c><00:18:14.160><c> it</c>

00:18:14.310 --> 00:18:14.320 align:start position:0%
also in our min heap just so we have it
 

00:18:14.320 --> 00:18:16.390 align:start position:0%
also in our min heap just so we have it
so<00:18:14.480><c> we</c><00:18:14.559><c> can</c><00:18:14.720><c> take</c><00:18:14.880><c> that</c><00:18:15.120><c> index</c><00:18:15.760><c> decrement</c><00:18:16.320><c> it</c>

00:18:16.390 --> 00:18:16.400 align:start position:0%
so we can take that index decrement it
 

00:18:16.400 --> 00:18:18.230 align:start position:0%
so we can take that index decrement it
by<00:18:16.640><c> one</c><00:18:17.039><c> but</c><00:18:17.360><c> we're</c><00:18:17.520><c> basically</c><00:18:17.919><c> saying</c><00:18:18.160><c> that</c>

00:18:18.230 --> 00:18:18.240 align:start position:0%
by one but we're basically saying that
 

00:18:18.240 --> 00:18:20.390 align:start position:0%
by one but we're basically saying that
this<00:18:18.480><c> is</c><00:18:18.559><c> the</c><00:18:18.799><c> next</c><00:18:19.120><c> position</c><00:18:19.679><c> we're</c><00:18:19.919><c> going</c><00:18:20.160><c> to</c>

00:18:20.390 --> 00:18:20.400 align:start position:0%
this is the next position we're going to
 

00:18:20.400 --> 00:18:23.590 align:start position:0%
this is the next position we're going to
look<00:18:20.640><c> at</c><00:18:20.960><c> in</c><00:18:21.120><c> our</c><00:18:21.440><c> list</c><00:18:22.160><c> over</c><00:18:22.400><c> here</c><00:18:22.880><c> as</c><00:18:23.120><c> long</c><00:18:23.360><c> as</c>

00:18:23.590 --> 00:18:23.600 align:start position:0%
look at in our list over here as long as
 

00:18:23.600 --> 00:18:25.430 align:start position:0%
look at in our list over here as long as
it's<00:18:23.840><c> greater</c><00:18:24.160><c> than</c><00:18:24.400><c> or</c><00:18:24.559><c> equal</c><00:18:24.799><c> to</c><00:18:25.039><c> zero</c>

00:18:25.430 --> 00:18:25.440 align:start position:0%
it's greater than or equal to zero
 

00:18:25.440 --> 00:18:27.190 align:start position:0%
it's greater than or equal to zero
basically<00:18:25.919><c> as</c><00:18:26.000><c> long</c><00:18:26.160><c> as</c><00:18:26.320><c> there</c><00:18:26.559><c> are</c><00:18:26.799><c> still</c>

00:18:27.190 --> 00:18:27.200 align:start position:0%
basically as long as there are still
 

00:18:27.200 --> 00:18:30.230 align:start position:0%
basically as long as there are still
elements<00:18:27.760><c> in</c><00:18:28.080><c> that</c><00:18:28.400><c> list</c><00:18:28.960><c> for</c><00:18:29.280><c> that</c><00:18:29.600><c> followee</c>

00:18:30.230 --> 00:18:30.240 align:start position:0%
elements in that list for that followee
 

00:18:30.240 --> 00:18:32.789 align:start position:0%
elements in that list for that followee
id<00:18:30.799><c> okay</c><00:18:31.120><c> that's</c><00:18:31.280><c> definitely</c><00:18:31.760><c> a</c><00:18:31.919><c> lot</c><00:18:32.240><c> going</c><00:18:32.559><c> on</c>

00:18:32.789 --> 00:18:32.799 align:start position:0%
id okay that's definitely a lot going on
 

00:18:32.799 --> 00:18:34.310 align:start position:0%
id okay that's definitely a lot going on
here<00:18:32.960><c> which</c><00:18:33.120><c> is</c><00:18:33.280><c> why</c><00:18:33.440><c> this</c><00:18:33.679><c> problem</c><00:18:33.919><c> is</c><00:18:34.080><c> pretty</c>

00:18:34.310 --> 00:18:34.320 align:start position:0%
here which is why this problem is pretty
 

00:18:34.320 --> 00:18:36.310 align:start position:0%
here which is why this problem is pretty
difficult<00:18:34.720><c> for</c><00:18:34.880><c> a</c><00:18:34.960><c> medium</c><00:18:35.600><c> and</c><00:18:35.840><c> actually</c><00:18:36.080><c> one</c>

00:18:36.310 --> 00:18:36.320 align:start position:0%
difficult for a medium and actually one
 

00:18:36.320 --> 00:18:37.909 align:start position:0%
difficult for a medium and actually one
thing<00:18:36.480><c> i</c><00:18:36.559><c> forgot</c><00:18:36.880><c> to</c><00:18:36.960><c> do</c><00:18:37.200><c> is</c>

00:18:37.909 --> 00:18:37.919 align:start position:0%
thing i forgot to do is
 

00:18:37.919 --> 00:18:40.390 align:start position:0%
thing i forgot to do is
we're<00:18:38.160><c> not</c><00:18:38.400><c> 100</c><00:18:39.120><c> sure</c><00:18:39.280><c> that</c><00:18:39.440><c> this</c><00:18:39.600><c> followee</c><00:18:40.160><c> id</c>

00:18:40.390 --> 00:18:40.400 align:start position:0%
we're not 100 sure that this followee id
 

00:18:40.400 --> 00:18:42.470 align:start position:0%
we're not 100 sure that this followee id
this<00:18:40.640><c> person</c><00:18:41.039><c> even</c><00:18:41.360><c> has</c><00:18:41.679><c> any</c><00:18:42.000><c> tweets</c><00:18:42.320><c> that</c>

00:18:42.470 --> 00:18:42.480 align:start position:0%
this person even has any tweets that
 

00:18:42.480 --> 00:18:45.430 align:start position:0%
this person even has any tweets that
they<00:18:42.720><c> created</c><00:18:43.360><c> so</c><00:18:43.600><c> before</c><00:18:43.919><c> we</c><00:18:44.160><c> even</c><00:18:44.400><c> try</c><00:18:44.720><c> to</c><00:18:45.200><c> uh</c>

00:18:45.430 --> 00:18:45.440 align:start position:0%
they created so before we even try to uh
 

00:18:45.440 --> 00:18:48.070 align:start position:0%
they created so before we even try to uh
you<00:18:45.600><c> know</c><00:18:45.919><c> look</c><00:18:46.160><c> at</c><00:18:46.480><c> it</c><00:18:46.799><c> inside</c><00:18:47.200><c> of</c><00:18:47.360><c> the</c><00:18:47.840><c> tree</c>

00:18:48.070 --> 00:18:48.080 align:start position:0%
you know look at it inside of the tree
 

00:18:48.080 --> 00:18:50.070 align:start position:0%
you know look at it inside of the tree
map<00:18:48.320><c> before</c><00:18:48.720><c> we</c><00:18:48.799><c> try</c><00:18:48.960><c> to</c><00:18:49.039><c> look</c><00:18:49.200><c> at</c><00:18:49.280><c> some</c><00:18:49.520><c> index</c>

00:18:50.070 --> 00:18:50.080 align:start position:0%
map before we try to look at some index
 

00:18:50.080 --> 00:18:52.150 align:start position:0%
map before we try to look at some index
let's<00:18:50.240><c> make</c><00:18:50.400><c> sure</c><00:18:50.559><c> that</c><00:18:50.799><c> at</c><00:18:51.039><c> least</c><00:18:51.440><c> has</c><00:18:51.840><c> one</c>

00:18:52.150 --> 00:18:52.160 align:start position:0%
let's make sure that at least has one
 

00:18:52.160 --> 00:18:55.990 align:start position:0%
let's make sure that at least has one
tweet<00:18:52.480><c> so</c><00:18:52.640><c> basically</c><00:18:53.039><c> if</c><00:18:53.600><c> followee</c><00:18:54.400><c> id</c><00:18:55.039><c> is</c><00:18:55.440><c> in</c>

00:18:55.990 --> 00:18:56.000 align:start position:0%
tweet so basically if followee id is in
 

00:18:56.000 --> 00:18:59.750 align:start position:0%
tweet so basically if followee id is in
self.tweet<00:18:57.039><c> map</c><00:18:57.600><c> if</c><00:18:57.760><c> that</c><00:18:58.080><c> is</c><00:18:58.240><c> the</c><00:18:58.400><c> case</c><00:18:59.120><c> then</c>

00:18:59.750 --> 00:18:59.760 align:start position:0%
self.tweet map if that is the case then
 

00:18:59.760 --> 00:19:01.750 align:start position:0%
self.tweet map if that is the case then
they<00:18:59.919><c> have</c><00:19:00.160><c> at</c><00:19:00.240><c> least</c><00:19:00.559><c> one</c><00:19:00.799><c> tweet</c><00:19:01.280><c> so</c><00:19:01.520><c> that's</c>

00:19:01.750 --> 00:19:01.760 align:start position:0%
they have at least one tweet so that's
 

00:19:01.760 --> 00:19:03.110 align:start position:0%
they have at least one tweet so that's
when<00:19:01.919><c> we're</c><00:19:02.080><c> gonna</c><00:19:02.240><c> be</c><00:19:02.400><c> actually</c><00:19:02.799><c> running</c>

00:19:03.110 --> 00:19:03.120 align:start position:0%
when we're gonna be actually running
 

00:19:03.120 --> 00:19:05.510 align:start position:0%
when we're gonna be actually running
this<00:19:03.520><c> portion</c><00:19:04.160><c> okay</c><00:19:04.320><c> so</c><00:19:04.480><c> we</c><00:19:04.640><c> go</c><00:19:04.799><c> through</c><00:19:04.960><c> every</c>

00:19:05.510 --> 00:19:05.520 align:start position:0%
this portion okay so we go through every
 

00:19:05.520 --> 00:19:07.430 align:start position:0%
this portion okay so we go through every
uh<00:19:05.760><c> person</c><00:19:06.080><c> that</c><00:19:06.160><c> they</c><00:19:06.320><c> follow</c><00:19:06.880><c> after</c><00:19:07.120><c> we</c><00:19:07.280><c> do</c>

00:19:07.430 --> 00:19:07.440 align:start position:0%
uh person that they follow after we do
 

00:19:07.440 --> 00:19:09.110 align:start position:0%
uh person that they follow after we do
that<00:19:07.600><c> let's</c><00:19:07.760><c> make</c><00:19:07.919><c> sure</c><00:19:08.080><c> to</c><00:19:08.240><c> actually</c><00:19:08.559><c> turn</c>

00:19:09.110 --> 00:19:09.120 align:start position:0%
that let's make sure to actually turn
 

00:19:09.120 --> 00:19:10.870 align:start position:0%
that let's make sure to actually turn
this<00:19:09.440><c> list</c><00:19:09.840><c> because</c><00:19:10.000><c> right</c><00:19:10.160><c> now</c><00:19:10.320><c> it's</c><00:19:10.480><c> just</c><00:19:10.720><c> a</c>

00:19:10.870 --> 00:19:10.880 align:start position:0%
this list because right now it's just a
 

00:19:10.880 --> 00:19:12.870 align:start position:0%
this list because right now it's just a
list<00:19:11.360><c> we</c><00:19:11.520><c> want</c><00:19:11.679><c> to</c><00:19:11.760><c> turn</c><00:19:12.000><c> it</c><00:19:12.080><c> into</c><00:19:12.320><c> a</c><00:19:12.400><c> heap</c><00:19:12.720><c> a</c>

00:19:12.870 --> 00:19:12.880 align:start position:0%
list we want to turn it into a heap a
 

00:19:12.880 --> 00:19:14.470 align:start position:0%
list we want to turn it into a heap a
min<00:19:13.039><c> heap</c><00:19:13.280><c> so</c><00:19:13.520><c> in</c><00:19:13.600><c> python</c><00:19:14.000><c> we</c><00:19:14.080><c> can</c><00:19:14.160><c> do</c><00:19:14.320><c> that</c>

00:19:14.470 --> 00:19:14.480 align:start position:0%
min heap so in python we can do that
 

00:19:14.480 --> 00:19:16.870 align:start position:0%
min heap so in python we can do that
like<00:19:14.640><c> this</c><00:19:14.880><c> heapq.heapify</c>

00:19:16.870 --> 00:19:16.880 align:start position:0%
like this heapq.heapify
 

00:19:16.880 --> 00:19:19.510 align:start position:0%
like this heapq.heapify
to<00:19:17.200><c> that</c><00:19:17.760><c> key</c><00:19:18.320><c> okay</c><00:19:18.559><c> now</c><00:19:18.880><c> we</c><00:19:19.039><c> actually</c><00:19:19.280><c> get</c>

00:19:19.510 --> 00:19:19.520 align:start position:0%
to that key okay now we actually get
 

00:19:19.520 --> 00:19:21.350 align:start position:0%
to that key okay now we actually get
into<00:19:19.760><c> the</c><00:19:19.840><c> main</c><00:19:20.080><c> portion</c><00:19:20.400><c> of</c><00:19:20.480><c> the</c><00:19:20.640><c> algorithm</c>

00:19:21.350 --> 00:19:21.360 align:start position:0%
into the main portion of the algorithm
 

00:19:21.360 --> 00:19:24.310 align:start position:0%
into the main portion of the algorithm
remember<00:19:22.000><c> we</c><00:19:22.240><c> want</c><00:19:22.480><c> to</c><00:19:22.720><c> pop</c>

00:19:24.310 --> 00:19:24.320 align:start position:0%
remember we want to pop
 

00:19:24.320 --> 00:19:26.710 align:start position:0%
remember we want to pop
at<00:19:24.480><c> most</c><00:19:24.799><c> 10</c><00:19:25.120><c> values</c><00:19:25.840><c> we</c><00:19:26.000><c> can</c><00:19:26.080><c> run</c><00:19:26.320><c> a</c><00:19:26.400><c> while</c>

00:19:26.710 --> 00:19:26.720 align:start position:0%
at most 10 values we can run a while
 

00:19:26.720 --> 00:19:29.190 align:start position:0%
at most 10 values we can run a while
loop<00:19:27.120><c> basically</c><00:19:27.600><c> saying</c><00:19:27.919><c> while</c><00:19:28.400><c> the</c><00:19:28.640><c> min</c><00:19:28.880><c> heap</c>

00:19:29.190 --> 00:19:29.200 align:start position:0%
loop basically saying while the min heap
 

00:19:29.200 --> 00:19:32.470 align:start position:0%
loop basically saying while the min heap
is<00:19:29.360><c> non-empty</c><00:19:30.240><c> and</c><00:19:30.799><c> the</c><00:19:30.960><c> result</c><00:19:31.760><c> or</c><00:19:32.080><c> or</c><00:19:32.240><c> the</c>

00:19:32.470 --> 00:19:32.480 align:start position:0%
is non-empty and the result or or the
 

00:19:32.480 --> 00:19:36.070 align:start position:0%
is non-empty and the result or or the
length<00:19:32.799><c> of</c><00:19:32.880><c> the</c><00:19:33.039><c> result</c><00:19:33.840><c> is</c><00:19:34.480><c> less</c><00:19:34.799><c> than</c><00:19:35.360><c> 10.</c><00:19:35.840><c> so</c>

00:19:36.070 --> 00:19:36.080 align:start position:0%
length of the result is less than 10. so
 

00:19:36.080 --> 00:19:37.990 align:start position:0%
length of the result is less than 10. so
basically<00:19:36.400><c> if</c><00:19:36.559><c> we</c><00:19:36.720><c> run</c><00:19:36.960><c> out</c><00:19:37.120><c> of</c><00:19:37.200><c> values</c><00:19:37.760><c> this</c>

00:19:37.990 --> 00:19:38.000 align:start position:0%
basically if we run out of values this
 

00:19:38.000 --> 00:19:40.230 align:start position:0%
basically if we run out of values this
is<00:19:38.080><c> going</c><00:19:38.320><c> to</c><00:19:38.559><c> stop</c><00:19:39.120><c> even</c><00:19:39.440><c> if</c><00:19:39.520><c> we</c><00:19:39.679><c> don't</c><00:19:39.919><c> have</c>

00:19:40.230 --> 00:19:40.240 align:start position:0%
is going to stop even if we don't have
 

00:19:40.240 --> 00:19:42.230 align:start position:0%
is going to stop even if we don't have
10<00:19:40.799><c> but</c><00:19:40.960><c> right</c><00:19:41.200><c> if</c><00:19:41.360><c> our</c><00:19:41.440><c> min</c><00:19:41.600><c> heap</c><00:19:41.840><c> is</c><00:19:42.000><c> empty</c>

00:19:42.230 --> 00:19:42.240 align:start position:0%
10 but right if our min heap is empty
 

00:19:42.240 --> 00:19:44.789 align:start position:0%
10 but right if our min heap is empty
it'll<00:19:42.480><c> stop</c><00:19:43.120><c> if</c><00:19:43.280><c> we</c><00:19:43.440><c> reach</c><00:19:43.760><c> 10</c><00:19:44.000><c> values</c><00:19:44.480><c> it'll</c>

00:19:44.789 --> 00:19:44.799 align:start position:0%
it'll stop if we reach 10 values it'll
 

00:19:44.799 --> 00:19:46.710 align:start position:0%
it'll stop if we reach 10 values it'll
also<00:19:45.200><c> stop</c><00:19:45.840><c> each</c><00:19:46.080><c> time</c><00:19:46.320><c> though</c><00:19:46.480><c> we're</c><00:19:46.640><c> going</c>

00:19:46.710 --> 00:19:46.720 align:start position:0%
also stop each time though we're going
 

00:19:46.720 --> 00:19:48.310 align:start position:0%
also stop each time though we're going
to<00:19:46.880><c> pop</c><00:19:47.120><c> from</c><00:19:47.280><c> the</c><00:19:47.360><c> min</c><00:19:47.600><c> heap</c><00:19:47.840><c> we</c><00:19:48.000><c> want</c><00:19:48.160><c> the</c>

00:19:48.310 --> 00:19:48.320 align:start position:0%
to pop from the min heap we want the
 

00:19:48.320 --> 00:19:50.150 align:start position:0%
to pop from the min heap we want the
most<00:19:48.720><c> recent</c><00:19:49.120><c> tweet</c><00:19:49.360><c> that</c><00:19:49.600><c> occurred</c><00:19:49.919><c> we</c><00:19:50.080><c> can</c>

00:19:50.150 --> 00:19:50.160 align:start position:0%
most recent tweet that occurred we can
 

00:19:50.160 --> 00:19:52.070 align:start position:0%
most recent tweet that occurred we can
do<00:19:50.320><c> that</c><00:19:50.480><c> in</c><00:19:50.559><c> python</c><00:19:50.960><c> like</c><00:19:51.120><c> this</c><00:19:51.360><c> heap</c><00:19:51.600><c> q</c><00:19:51.840><c> dot</c>

00:19:52.070 --> 00:19:52.080 align:start position:0%
do that in python like this heap q dot
 

00:19:52.080 --> 00:19:55.110 align:start position:0%
do that in python like this heap q dot
heap<00:19:52.480><c> pop</c><00:19:53.039><c> from</c><00:19:53.600><c> the</c><00:19:53.760><c> min</c><00:19:54.320><c> heap</c><00:19:54.720><c> it's</c><00:19:54.880><c> going</c><00:19:54.960><c> to</c>

00:19:55.110 --> 00:19:55.120 align:start position:0%
heap pop from the min heap it's going to
 

00:19:55.120 --> 00:19:57.830 align:start position:0%
heap pop from the min heap it's going to
pop<00:19:55.440><c> four</c><00:19:55.760><c> values</c><00:19:56.720><c> that</c><00:19:56.880><c> we</c><00:19:56.960><c> defined</c><00:19:57.440><c> up</c><00:19:57.600><c> here</c>

00:19:57.830 --> 00:19:57.840 align:start position:0%
pop four values that we defined up here
 

00:19:57.840 --> 00:19:59.350 align:start position:0%
pop four values that we defined up here
right<00:19:58.000><c> so</c><00:19:58.160><c> i'm</c><00:19:58.240><c> just</c><00:19:58.400><c> gonna</c><00:19:58.559><c> copy</c><00:19:58.880><c> and</c><00:19:59.039><c> paste</c>

00:19:59.350 --> 00:19:59.360 align:start position:0%
right so i'm just gonna copy and paste
 

00:19:59.360 --> 00:20:00.230 align:start position:0%
right so i'm just gonna copy and paste
that

00:20:00.230 --> 00:20:00.240 align:start position:0%
that
 

00:20:00.240 --> 00:20:02.310 align:start position:0%
that
four<00:20:00.559><c> values</c><00:20:00.960><c> we</c><00:20:01.120><c> don't</c><00:20:01.200><c> need</c><00:20:01.360><c> the</c><00:20:01.520><c> minus</c><00:20:02.000><c> one</c>

00:20:02.310 --> 00:20:02.320 align:start position:0%
four values we don't need the minus one
 

00:20:02.320 --> 00:20:03.430 align:start position:0%
four values we don't need the minus one
so

00:20:03.430 --> 00:20:03.440 align:start position:0%
so
 

00:20:03.440 --> 00:20:05.669 align:start position:0%
so
these<00:20:03.679><c> are</c><00:20:03.760><c> the</c><00:20:03.840><c> values</c><00:20:04.240><c> it's</c><00:20:04.320><c> gonna</c><00:20:05.039><c> give</c><00:20:05.360><c> us</c>

00:20:05.669 --> 00:20:05.679 align:start position:0%
these are the values it's gonna give us
 

00:20:05.679 --> 00:20:07.350 align:start position:0%
these are the values it's gonna give us
and<00:20:05.919><c> of</c><00:20:06.000><c> course</c><00:20:06.159><c> we</c><00:20:06.320><c> want</c><00:20:06.559><c> the</c><00:20:06.720><c> tweet</c><00:20:07.039><c> id</c>

00:20:07.350 --> 00:20:07.360 align:start position:0%
and of course we want the tweet id
 

00:20:07.360 --> 00:20:08.789 align:start position:0%
and of course we want the tweet id
that's<00:20:07.520><c> the</c><00:20:07.679><c> most</c><00:20:08.000><c> important</c><00:20:08.400><c> because</c><00:20:08.559><c> that's</c>

00:20:08.789 --> 00:20:08.799 align:start position:0%
that's the most important because that's
 

00:20:08.799 --> 00:20:09.990 align:start position:0%
that's the most important because that's
what<00:20:08.880><c> we're</c><00:20:09.039><c> going</c><00:20:09.120><c> to</c><00:20:09.200><c> end</c><00:20:09.360><c> up</c><00:20:09.520><c> adding</c><00:20:09.760><c> to</c><00:20:09.840><c> the</c>

00:20:09.990 --> 00:20:10.000 align:start position:0%
what we're going to end up adding to the
 

00:20:10.000 --> 00:20:11.909 align:start position:0%
what we're going to end up adding to the
result<00:20:10.480><c> this</c><00:20:10.640><c> is</c><00:20:10.799><c> the</c><00:20:10.880><c> most</c><00:20:11.200><c> recent</c><00:20:11.520><c> tweet</c>

00:20:11.909 --> 00:20:11.919 align:start position:0%
result this is the most recent tweet
 

00:20:11.919 --> 00:20:13.750 align:start position:0%
result this is the most recent tweet
that<00:20:12.159><c> happened</c><00:20:12.720><c> so</c><00:20:12.880><c> we</c><00:20:13.039><c> can</c><00:20:13.120><c> go</c><00:20:13.280><c> ahead</c><00:20:13.440><c> and</c><00:20:13.600><c> add</c>

00:20:13.750 --> 00:20:13.760 align:start position:0%
that happened so we can go ahead and add
 

00:20:13.760 --> 00:20:16.870 align:start position:0%
that happened so we can go ahead and add
it<00:20:13.919><c> to</c><00:20:14.159><c> the</c><00:20:14.240><c> result</c><00:20:14.799><c> now</c><00:20:15.120><c> if</c><00:20:15.440><c> this</c><00:20:15.760><c> followee</c><00:20:16.320><c> id</c>

00:20:16.870 --> 00:20:16.880 align:start position:0%
it to the result now if this followee id
 

00:20:16.880 --> 00:20:19.270 align:start position:0%
it to the result now if this followee id
this<00:20:17.120><c> person</c><00:20:17.520><c> had</c><00:20:17.840><c> any</c><00:20:18.159><c> more</c><00:20:18.480><c> tweets</c><00:20:18.960><c> we</c><00:20:19.120><c> want</c>

00:20:19.270 --> 00:20:19.280 align:start position:0%
this person had any more tweets we want
 

00:20:19.280 --> 00:20:21.110 align:start position:0%
this person had any more tweets we want
to<00:20:19.520><c> get</c><00:20:19.679><c> that</c><00:20:19.840><c> tweet</c><00:20:20.159><c> and</c><00:20:20.240><c> we</c><00:20:20.400><c> can</c><00:20:20.480><c> get</c><00:20:20.720><c> it</c><00:20:20.880><c> at</c>

00:20:21.110 --> 00:20:21.120 align:start position:0%
to get that tweet and we can get it at
 

00:20:21.120 --> 00:20:23.270 align:start position:0%
to get that tweet and we can get it at
this<00:20:21.520><c> index</c><00:20:22.159><c> let</c><00:20:22.320><c> me</c><00:20:22.400><c> just</c><00:20:22.640><c> actually</c><00:20:22.880><c> copy</c><00:20:23.200><c> and</c>

00:20:23.270 --> 00:20:23.280 align:start position:0%
this index let me just actually copy and
 

00:20:23.280 --> 00:20:24.710 align:start position:0%
this index let me just actually copy and
paste<00:20:23.520><c> this</c><00:20:23.760><c> because</c><00:20:23.919><c> we're</c><00:20:24.080><c> using</c><00:20:24.320><c> the</c><00:20:24.480><c> same</c>

00:20:24.710 --> 00:20:24.720 align:start position:0%
paste this because we're using the same
 

00:20:24.720 --> 00:20:26.710 align:start position:0%
paste this because we're using the same
variable<00:20:25.200><c> names</c><00:20:25.679><c> which</c><00:20:25.919><c> makes</c><00:20:26.159><c> it</c><00:20:26.240><c> convenient</c>

00:20:26.710 --> 00:20:26.720 align:start position:0%
variable names which makes it convenient
 

00:20:26.720 --> 00:20:29.029 align:start position:0%
variable names which makes it convenient
for<00:20:26.880><c> us</c><00:20:26.960><c> so</c><00:20:27.039><c> let</c><00:20:27.200><c> me</c><00:20:27.760><c> uh</c><00:20:28.159><c> so</c><00:20:28.400><c> from</c><00:20:28.559><c> the</c><00:20:28.720><c> tweet</c>

00:20:29.029 --> 00:20:29.039 align:start position:0%
for us so let me uh so from the tweet
 

00:20:29.039 --> 00:20:31.990 align:start position:0%
for us so let me uh so from the tweet
map<00:20:29.520><c> we're</c><00:20:29.679><c> going</c><00:20:29.760><c> to</c><00:20:29.840><c> get</c><00:20:30.159><c> that</c><00:20:30.799><c> person</c><00:20:31.600><c> and</c>

00:20:31.990 --> 00:20:32.000 align:start position:0%
map we're going to get that person and
 

00:20:32.000 --> 00:20:34.630 align:start position:0%
map we're going to get that person and
this<00:20:32.320><c> index</c><00:20:33.039><c> which</c><00:20:33.200><c> will</c><00:20:33.440><c> tell</c><00:20:33.679><c> us</c><00:20:33.840><c> the</c><00:20:34.159><c> next</c>

00:20:34.630 --> 00:20:34.640 align:start position:0%
this index which will tell us the next
 

00:20:34.640 --> 00:20:37.510 align:start position:0%
this index which will tell us the next
tweet<00:20:34.960><c> that</c><00:20:35.120><c> we</c><00:20:35.280><c> can</c><00:20:35.520><c> add</c><00:20:35.840><c> to</c><00:20:36.159><c> our</c><00:20:36.400><c> min</c><00:20:36.720><c> heap</c>

00:20:37.510 --> 00:20:37.520 align:start position:0%
tweet that we can add to our min heap
 

00:20:37.520 --> 00:20:39.270 align:start position:0%
tweet that we can add to our min heap
this<00:20:37.760><c> remember</c><00:20:38.080><c> returns</c><00:20:38.480><c> a</c><00:20:38.559><c> pair</c><00:20:38.799><c> of</c><00:20:38.880><c> values</c>

00:20:39.270 --> 00:20:39.280 align:start position:0%
this remember returns a pair of values
 

00:20:39.280 --> 00:20:41.270 align:start position:0%
this remember returns a pair of values
which<00:20:39.440><c> we</c><00:20:39.600><c> defined</c><00:20:40.000><c> up</c><00:20:40.080><c> here</c><00:20:40.400><c> count</c><00:20:40.799><c> and</c><00:20:40.880><c> tweet</c>

00:20:41.270 --> 00:20:41.280 align:start position:0%
which we defined up here count and tweet
 

00:20:41.280 --> 00:20:45.270 align:start position:0%
which we defined up here count and tweet
id<00:20:41.760><c> so</c><00:20:42.000><c> let's</c><00:20:42.640><c> re-define</c><00:20:43.919><c> count</c><00:20:44.320><c> and</c><00:20:44.640><c> redefine</c>

00:20:45.270 --> 00:20:45.280 align:start position:0%
id so let's re-define count and redefine
 

00:20:45.280 --> 00:20:47.510 align:start position:0%
id so let's re-define count and redefine
tweet<00:20:45.679><c> id</c><00:20:46.000><c> which</c><00:20:46.240><c> we</c><00:20:46.559><c> you</c><00:20:46.720><c> know</c><00:20:46.880><c> used</c><00:20:47.200><c> up</c><00:20:47.360><c> here</c>

00:20:47.510 --> 00:20:47.520 align:start position:0%
tweet id which we you know used up here
 

00:20:47.520 --> 00:20:49.669 align:start position:0%
tweet id which we you know used up here
that's<00:20:47.840><c> okay</c><00:20:48.159><c> we'll</c><00:20:48.320><c> redefine</c><00:20:48.880><c> them</c><00:20:49.360><c> because</c>

00:20:49.669 --> 00:20:49.679 align:start position:0%
that's okay we'll redefine them because
 

00:20:49.679 --> 00:20:51.430 align:start position:0%
that's okay we'll redefine them because
this<00:20:49.919><c> is</c><00:20:50.240><c> these</c><00:20:50.480><c> two</c><00:20:50.640><c> values</c><00:20:51.039><c> are</c><00:20:51.120><c> what</c><00:20:51.200><c> we're</c>

00:20:51.430 --> 00:20:51.440 align:start position:0%
this is these two values are what we're
 

00:20:51.440 --> 00:20:54.149 align:start position:0%
this is these two values are what we're
now<00:20:51.600><c> going</c><00:20:51.840><c> to</c><00:20:52.000><c> be</c><00:20:52.480><c> uh</c><00:20:52.720><c> pushing</c><00:20:53.440><c> to</c><00:20:53.600><c> the</c><00:20:53.760><c> heap</c>

00:20:54.149 --> 00:20:54.159 align:start position:0%
now going to be uh pushing to the heap
 

00:20:54.159 --> 00:20:56.630 align:start position:0%
now going to be uh pushing to the heap
we<00:20:54.320><c> can</c><00:20:54.480><c> do</c><00:20:54.640><c> that</c><00:20:54.799><c> like</c><00:20:55.039><c> this</c><00:20:55.280><c> heap</c><00:20:55.600><c> q</c><00:20:55.840><c> dot</c><00:20:56.080><c> heap</c>

00:20:56.630 --> 00:20:56.640 align:start position:0%
we can do that like this heap q dot heap
 

00:20:56.640 --> 00:20:59.270 align:start position:0%
we can do that like this heap q dot heap
push<00:20:57.200><c> to</c><00:20:57.440><c> the</c><00:20:57.600><c> min</c><00:20:57.840><c> heap</c><00:20:58.480><c> and</c><00:20:58.799><c> we're</c><00:20:59.039><c> always</c>

00:20:59.270 --> 00:20:59.280 align:start position:0%
push to the min heap and we're always
 

00:20:59.280 --> 00:21:01.430 align:start position:0%
push to the min heap and we're always
adding<00:20:59.600><c> four</c><00:20:59.919><c> values</c><00:21:00.400><c> to</c><00:21:00.640><c> it</c><00:21:00.880><c> the</c><00:21:01.039><c> first</c><00:21:01.280><c> one</c>

00:21:01.430 --> 00:21:01.440 align:start position:0%
adding four values to it the first one
 

00:21:01.440 --> 00:21:03.909 align:start position:0%
adding four values to it the first one
is<00:21:01.600><c> going</c><00:21:01.760><c> to</c><00:21:01.919><c> be</c><00:21:02.480><c> the</c><00:21:02.799><c> count</c><00:21:03.360><c> next</c><00:21:03.679><c> is</c><00:21:03.840><c> going</c>

00:21:03.909 --> 00:21:03.919 align:start position:0%
is going to be the count next is going
 

00:21:03.919 --> 00:21:05.990 align:start position:0%
is going to be the count next is going
to<00:21:04.000><c> be</c><00:21:04.080><c> the</c><00:21:04.240><c> tweet</c><00:21:04.559><c> id</c><00:21:05.280><c> next</c><00:21:05.600><c> is</c><00:21:05.679><c> going</c><00:21:05.760><c> to</c><00:21:05.840><c> be</c>

00:21:05.990 --> 00:21:06.000 align:start position:0%
to be the tweet id next is going to be
 

00:21:06.000 --> 00:21:09.029 align:start position:0%
to be the tweet id next is going to be
the<00:21:06.159><c> followee</c><00:21:06.640><c> id</c><00:21:06.960><c> which</c><00:21:07.200><c> we</c><00:21:07.360><c> have</c><00:21:08.080><c> up</c><00:21:08.320><c> above</c>

00:21:09.029 --> 00:21:09.039 align:start position:0%
the followee id which we have up above
 

00:21:09.039 --> 00:21:10.870 align:start position:0%
the followee id which we have up above
and<00:21:09.440><c> last</c><00:21:09.760><c> is</c><00:21:09.919><c> going</c><00:21:10.000><c> to</c><00:21:10.080><c> be</c><00:21:10.159><c> the</c><00:21:10.320><c> index</c><00:21:10.640><c> but</c>

00:21:10.870 --> 00:21:10.880 align:start position:0%
and last is going to be the index but
 

00:21:10.880 --> 00:21:13.350 align:start position:0%
and last is going to be the index but
remember<00:21:11.280><c> we</c><00:21:11.520><c> always</c><00:21:11.840><c> add</c><00:21:12.080><c> the</c><00:21:12.240><c> index</c><00:21:12.720><c> minus</c><00:21:13.120><c> 1</c>

00:21:13.350 --> 00:21:13.360 align:start position:0%
remember we always add the index minus 1
 

00:21:13.360 --> 00:21:15.430 align:start position:0%
remember we always add the index minus 1
because<00:21:13.600><c> we're</c><00:21:13.760><c> adding</c><00:21:14.000><c> the</c><00:21:14.240><c> next</c><00:21:14.640><c> index</c><00:21:15.280><c> uh</c>

00:21:15.430 --> 00:21:15.440 align:start position:0%
because we're adding the next index uh
 

00:21:15.440 --> 00:21:17.990 align:start position:0%
because we're adding the next index uh
but<00:21:15.679><c> don't</c><00:21:15.840><c> forget</c><00:21:16.480><c> we</c><00:21:16.720><c> just</c><00:21:17.280><c> ran</c><00:21:17.600><c> these</c><00:21:17.840><c> two</c>

00:21:17.990 --> 00:21:18.000 align:start position:0%
but don't forget we just ran these two
 

00:21:18.000 --> 00:21:20.390 align:start position:0%
but don't forget we just ran these two
lines<00:21:18.240><c> of</c><00:21:18.320><c> code</c><00:21:18.559><c> right</c><00:21:18.880><c> but</c><00:21:19.440><c> we're</c><00:21:19.840><c> assuming</c>

00:21:20.390 --> 00:21:20.400 align:start position:0%
lines of code right but we're assuming
 

00:21:20.400 --> 00:21:22.230 align:start position:0%
lines of code right but we're assuming
that<00:21:20.559><c> the</c><00:21:20.799><c> index</c><00:21:21.200><c> is</c><00:21:21.280><c> going</c><00:21:21.440><c> to</c><00:21:21.600><c> be</c><00:21:21.840><c> valid</c>

00:21:22.230 --> 00:21:22.240 align:start position:0%
that the index is going to be valid
 

00:21:22.240 --> 00:21:24.470 align:start position:0%
that the index is going to be valid
we're<00:21:22.480><c> assuming</c><00:21:22.880><c> that</c><00:21:23.039><c> the</c><00:21:23.200><c> index</c><00:21:23.840><c> is</c><00:21:24.320><c> going</c>

00:21:24.470 --> 00:21:24.480 align:start position:0%
we're assuming that the index is going
 

00:21:24.480 --> 00:21:26.710 align:start position:0%
we're assuming that the index is going
to<00:21:24.640><c> be</c><00:21:25.120><c> greater</c><00:21:25.440><c> than</c><00:21:25.679><c> or</c><00:21:25.840><c> equal</c><00:21:26.000><c> to</c><00:21:26.159><c> zero</c><00:21:26.559><c> that</c>

00:21:26.710 --> 00:21:26.720 align:start position:0%
to be greater than or equal to zero that
 

00:21:26.720 --> 00:21:28.870 align:start position:0%
to be greater than or equal to zero that
that<00:21:26.960><c> person</c><00:21:27.360><c> has</c><00:21:27.679><c> some</c><00:21:27.840><c> more</c><00:21:28.080><c> tweets</c><00:21:28.559><c> left</c>

00:21:28.870 --> 00:21:28.880 align:start position:0%
that person has some more tweets left
 

00:21:28.880 --> 00:21:31.190 align:start position:0%
that person has some more tweets left
that<00:21:28.960><c> we</c><00:21:29.120><c> haven't</c><00:21:29.520><c> already</c><00:21:30.080><c> added</c><00:21:30.480><c> to</c><00:21:30.720><c> the</c><00:21:30.960><c> min</c>

00:21:31.190 --> 00:21:31.200 align:start position:0%
that we haven't already added to the min
 

00:21:31.200 --> 00:21:33.590 align:start position:0%
that we haven't already added to the min
heap<00:21:31.600><c> so</c><00:21:31.760><c> let's</c><00:21:32.000><c> make</c><00:21:32.159><c> sure</c><00:21:32.400><c> to</c><00:21:33.200><c> have</c><00:21:33.440><c> that</c>

00:21:33.590 --> 00:21:33.600 align:start position:0%
heap so let's make sure to have that
 

00:21:33.600 --> 00:21:35.909 align:start position:0%
heap so let's make sure to have that
conditional<00:21:34.159><c> up</c><00:21:34.400><c> above</c><00:21:35.039><c> okay</c><00:21:35.360><c> and</c><00:21:35.600><c> quite</c><00:21:35.840><c> a</c>

00:21:35.909 --> 00:21:35.919 align:start position:0%
conditional up above okay and quite a
 

00:21:35.919 --> 00:21:38.470 align:start position:0%
conditional up above okay and quite a
bit<00:21:36.000><c> of</c><00:21:36.159><c> code</c><00:21:36.480><c> but</c><00:21:37.039><c> luckily</c><00:21:37.520><c> that</c><00:21:37.760><c> is</c><00:21:38.080><c> all</c><00:21:38.320><c> of</c>

00:21:38.470 --> 00:21:38.480 align:start position:0%
bit of code but luckily that is all of
 

00:21:38.480 --> 00:21:40.950 align:start position:0%
bit of code but luckily that is all of
it<00:21:38.640><c> so</c><00:21:38.880><c> after</c><00:21:39.200><c> all</c><00:21:39.440><c> that</c><00:21:39.679><c> is</c><00:21:39.840><c> done</c><00:21:40.240><c> we</c><00:21:40.400><c> have</c><00:21:40.720><c> 10</c>

00:21:40.950 --> 00:21:40.960 align:start position:0%
it so after all that is done we have 10
 

00:21:40.960 --> 00:21:43.510 align:start position:0%
it so after all that is done we have 10
tweets<00:21:41.440><c> we</c><00:21:41.679><c> can</c><00:21:41.919><c> go</c><00:21:42.080><c> ahead</c><00:21:42.480><c> and</c><00:21:42.640><c> return</c><00:21:43.360><c> the</c>

00:21:43.510 --> 00:21:43.520 align:start position:0%
tweets we can go ahead and return the
 

00:21:43.520 --> 00:21:45.830 align:start position:0%
tweets we can go ahead and return the
result<00:21:44.159><c> and</c><00:21:44.320><c> of</c><00:21:44.400><c> course</c><00:21:44.640><c> i</c><00:21:44.799><c> do</c><00:21:45.039><c> i</c><00:21:45.440><c> miss</c><00:21:45.679><c> the</c>

00:21:45.830 --> 00:21:45.840 align:start position:0%
result and of course i do i miss the
 

00:21:45.840 --> 00:21:47.830 align:start position:0%
result and of course i do i miss the
name<00:21:46.159><c> so</c><00:21:46.320><c> this</c><00:21:46.559><c> is</c><00:21:46.720><c> follower</c><00:21:47.120><c> map</c><00:21:47.440><c> but</c><00:21:47.679><c> we</c>

00:21:47.830 --> 00:21:47.840 align:start position:0%
name so this is follower map but we
 

00:21:47.840 --> 00:21:50.549 align:start position:0%
name so this is follower map but we
don't<00:21:48.080><c> need</c><00:21:48.720><c> the</c><00:21:48.960><c> er</c><00:21:49.760><c> okay</c><00:21:50.000><c> and</c><00:21:50.080><c> i</c><00:21:50.159><c> had</c><00:21:50.320><c> one</c>

00:21:50.549 --> 00:21:50.559 align:start position:0%
don't need the er okay and i had one
 

00:21:50.559 --> 00:21:52.549 align:start position:0%
don't need the er okay and i had one
last<00:21:50.880><c> bug</c><00:21:51.120><c> and</c><00:21:51.280><c> actually</c><00:21:51.520><c> had</c><00:21:51.760><c> to</c><00:21:51.840><c> do</c><00:21:52.080><c> with</c><00:21:52.400><c> how</c>

00:21:52.549 --> 00:21:52.559 align:start position:0%
last bug and actually had to do with how
 

00:21:52.559 --> 00:21:54.870 align:start position:0%
last bug and actually had to do with how
we<00:21:52.799><c> read</c><00:21:53.039><c> the</c><00:21:53.280><c> problem</c><00:21:53.840><c> they</c><00:21:54.080><c> actually</c><00:21:54.480><c> define</c>

00:21:54.870 --> 00:21:54.880 align:start position:0%
we read the problem they actually define
 

00:21:54.880 --> 00:21:57.590 align:start position:0%
we read the problem they actually define
the<00:21:55.120><c> news</c><00:21:55.440><c> feed</c><00:21:55.760><c> like</c><00:21:56.080><c> a</c><00:21:56.320><c> user</c><00:21:56.960><c> is</c><00:21:57.200><c> actually</c>

00:21:57.590 --> 00:21:57.600 align:start position:0%
the news feed like a user is actually
 

00:21:57.600 --> 00:22:00.789 align:start position:0%
the news feed like a user is actually
technically<00:21:58.240><c> following</c><00:21:58.720><c> themself</c><00:21:59.600><c> basically</c>

00:22:00.789 --> 00:22:00.799 align:start position:0%
technically following themself basically
 

00:22:00.799 --> 00:22:02.870 align:start position:0%
technically following themself basically
we<00:22:00.960><c> want</c><00:22:01.120><c> the</c><00:22:01.280><c> 10</c><00:22:01.520><c> most</c><00:22:01.760><c> recent</c><00:22:02.159><c> posts</c><00:22:02.640><c> from</c>

00:22:02.870 --> 00:22:02.880 align:start position:0%
we want the 10 most recent posts from
 

00:22:02.880 --> 00:22:04.789 align:start position:0%
we want the 10 most recent posts from
the<00:22:03.039><c> people</c><00:22:03.280><c> that</c><00:22:03.440><c> they</c><00:22:03.679><c> follow</c><00:22:04.159><c> including</c>

00:22:04.789 --> 00:22:04.799 align:start position:0%
the people that they follow including
 

00:22:04.799 --> 00:22:07.350 align:start position:0%
the people that they follow including
themself<00:22:05.760><c> so</c><00:22:06.080><c> before</c><00:22:06.400><c> we</c><00:22:06.640><c> even</c><00:22:06.880><c> run</c><00:22:07.120><c> this</c>

00:22:07.350 --> 00:22:07.360 align:start position:0%
themself so before we even run this
 

00:22:07.360 --> 00:22:09.190 align:start position:0%
themself so before we even run this
function<00:22:07.679><c> what</c><00:22:07.840><c> we're</c><00:22:08.080><c> actually</c><00:22:08.400><c> going</c><00:22:08.480><c> to</c><00:22:08.640><c> do</c>

00:22:09.190 --> 00:22:09.200 align:start position:0%
function what we're actually going to do
 

00:22:09.200 --> 00:22:11.590 align:start position:0%
function what we're actually going to do
is<00:22:09.679><c> to</c><00:22:09.919><c> the</c><00:22:10.080><c> follow</c><00:22:10.480><c> map</c><00:22:10.880><c> of</c><00:22:11.039><c> that</c><00:22:11.280><c> person</c>

00:22:11.590 --> 00:22:11.600 align:start position:0%
is to the follow map of that person
 

00:22:11.600 --> 00:22:13.990 align:start position:0%
is to the follow map of that person
we're<00:22:11.840><c> just</c><00:22:12.000><c> going</c><00:22:12.080><c> to</c><00:22:12.240><c> add</c><00:22:12.559><c> themselves</c><00:22:13.600><c> to</c><00:22:13.840><c> it</c>

00:22:13.990 --> 00:22:14.000 align:start position:0%
we're just going to add themselves to it
 

00:22:14.000 --> 00:22:15.430 align:start position:0%
we're just going to add themselves to it
i<00:22:14.080><c> think</c><00:22:14.240><c> that's</c><00:22:14.480><c> one</c><00:22:14.640><c> of</c><00:22:14.720><c> the</c><00:22:14.880><c> easiest</c><00:22:15.200><c> ways</c>

00:22:15.430 --> 00:22:15.440 align:start position:0%
i think that's one of the easiest ways
 

00:22:15.440 --> 00:22:17.909 align:start position:0%
i think that's one of the easiest ways
to<00:22:15.520><c> do</c><00:22:15.679><c> this</c><00:22:15.760><c> so</c><00:22:16.000><c> for</c><00:22:16.240><c> that</c><00:22:16.480><c> user</c><00:22:17.039><c> user</c><00:22:17.440><c> id</c>

00:22:17.909 --> 00:22:17.919 align:start position:0%
to do this so for that user user id
 

00:22:17.919 --> 00:22:20.710 align:start position:0%
to do this so for that user user id
we're<00:22:18.080><c> going</c><00:22:18.159><c> to</c><00:22:18.320><c> add</c><00:22:19.039><c> themselves</c><00:22:20.159><c> to</c><00:22:20.400><c> it</c><00:22:20.480><c> so</c><00:22:20.640><c> i</c>

00:22:20.710 --> 00:22:20.720 align:start position:0%
we're going to add themselves to it so i
 

00:22:20.720 --> 00:22:22.470 align:start position:0%
we're going to add themselves to it so i
think<00:22:20.880><c> that's</c><00:22:21.039><c> kind</c><00:22:21.200><c> of</c><00:22:21.360><c> dumb</c><00:22:21.919><c> if</c><00:22:22.080><c> i</c><00:22:22.159><c> was</c><00:22:22.320><c> doing</c>

00:22:22.470 --> 00:22:22.480 align:start position:0%
think that's kind of dumb if i was doing
 

00:22:22.480 --> 00:22:23.830 align:start position:0%
think that's kind of dumb if i was doing
this<00:22:22.640><c> in</c><00:22:22.799><c> a</c><00:22:22.880><c> real</c><00:22:23.120><c> interview</c><00:22:23.440><c> i</c><00:22:23.520><c> think</c><00:22:23.679><c> i'd</c>

00:22:23.830 --> 00:22:23.840 align:start position:0%
this in a real interview i think i'd
 

00:22:23.840 --> 00:22:26.149 align:start position:0%
this in a real interview i think i'd
probably<00:22:24.159><c> miss</c><00:22:24.400><c> this</c><00:22:24.559><c> detail</c><00:22:25.280><c> but</c><00:22:25.679><c> it's</c><00:22:26.000><c> just</c>

00:22:26.149 --> 00:22:26.159 align:start position:0%
probably miss this detail but it's just
 

00:22:26.159 --> 00:22:27.990 align:start position:0%
probably miss this detail but it's just
one<00:22:26.320><c> thing</c><00:22:26.480><c> you</c><00:22:26.640><c> need</c><00:22:26.799><c> to</c><00:22:26.880><c> do</c><00:22:27.120><c> to</c><00:22:27.440><c> pass</c><00:22:27.760><c> this</c>

00:22:27.990 --> 00:22:28.000 align:start position:0%
one thing you need to do to pass this
 

00:22:28.000 --> 00:22:29.909 align:start position:0%
one thing you need to do to pass this
problem<00:22:28.320><c> so</c><00:22:28.640><c> now</c><00:22:29.039><c> let's</c><00:22:29.280><c> run</c><00:22:29.440><c> it</c><00:22:29.600><c> i</c><00:22:29.760><c> really</c>

00:22:29.909 --> 00:22:29.919 align:start position:0%
problem so now let's run it i really
 

00:22:29.919 --> 00:22:31.830 align:start position:0%
problem so now let's run it i really
hope<00:22:30.159><c> i</c><00:22:30.240><c> don't</c><00:22:30.400><c> have</c><00:22:30.559><c> any</c><00:22:30.720><c> more</c><00:22:30.960><c> bugs</c><00:22:31.600><c> and</c>

00:22:31.830 --> 00:22:31.840 align:start position:0%
hope i don't have any more bugs and
 

00:22:31.840 --> 00:22:33.430 align:start position:0%
hope i don't have any more bugs and
luckily<00:22:32.240><c> it</c><00:22:32.400><c> actually</c><00:22:32.640><c> does</c><00:22:32.880><c> work</c><00:22:33.120><c> so</c><00:22:33.280><c> you</c><00:22:33.360><c> can</c>

00:22:33.430 --> 00:22:33.440 align:start position:0%
luckily it actually does work so you can
 

00:22:33.440 --> 00:22:34.950 align:start position:0%
luckily it actually does work so you can
see<00:22:33.600><c> on</c><00:22:33.679><c> the</c><00:22:33.760><c> left</c><00:22:34.080><c> yes</c><00:22:34.320><c> it</c><00:22:34.400><c> works</c><00:22:34.720><c> and</c><00:22:34.799><c> it's</c>

00:22:34.950 --> 00:22:34.960 align:start position:0%
see on the left yes it works and it's
 

00:22:34.960 --> 00:22:36.630 align:start position:0%
see on the left yes it works and it's
pretty<00:22:35.200><c> efficient</c><00:22:35.760><c> so</c><00:22:35.919><c> i</c><00:22:36.080><c> really</c><00:22:36.320><c> hope</c><00:22:36.480><c> that</c>

00:22:36.630 --> 00:22:36.640 align:start position:0%
pretty efficient so i really hope that
 

00:22:36.640 --> 00:22:38.789 align:start position:0%
pretty efficient so i really hope that
this<00:22:36.799><c> was</c><00:22:36.960><c> helpful</c><00:22:37.440><c> if</c><00:22:37.600><c> it</c><00:22:37.760><c> was</c><00:22:38.240><c> please</c><00:22:38.559><c> like</c>

00:22:38.789 --> 00:22:38.799 align:start position:0%
this was helpful if it was please like
 

00:22:38.799 --> 00:22:40.230 align:start position:0%
this was helpful if it was please like
and<00:22:38.880><c> subscribe</c><00:22:39.360><c> it</c><00:22:39.520><c> really</c><00:22:39.760><c> supports</c><00:22:40.159><c> the</c>

00:22:40.230 --> 00:22:40.240 align:start position:0%
and subscribe it really supports the
 

00:22:40.240 --> 00:22:41.750 align:start position:0%
and subscribe it really supports the
channel<00:22:40.559><c> a</c><00:22:40.640><c> lot</c><00:22:40.880><c> consider</c><00:22:41.280><c> checking</c><00:22:41.520><c> out</c><00:22:41.600><c> my</c>

00:22:41.750 --> 00:22:41.760 align:start position:0%
channel a lot consider checking out my
 

00:22:41.760 --> 00:22:43.029 align:start position:0%
channel a lot consider checking out my
patreon<00:22:42.240><c> where</c><00:22:42.320><c> you</c><00:22:42.400><c> can</c><00:22:42.480><c> further</c><00:22:42.720><c> support</c>

00:22:43.029 --> 00:22:43.039 align:start position:0%
patreon where you can further support
 

00:22:43.039 --> 00:22:44.549 align:start position:0%
patreon where you can further support
the<00:22:43.200><c> channel</c><00:22:43.520><c> and</c><00:22:43.600><c> hopefully</c><00:22:44.080><c> i'll</c><00:22:44.240><c> see</c><00:22:44.400><c> you</c>

00:22:44.549 --> 00:22:44.559 align:start position:0%
the channel and hopefully i'll see you
 

00:22:44.559 --> 00:22:48.480 align:start position:0%
the channel and hopefully i'll see you
pretty<00:22:44.880><c> soon</c><00:22:45.280><c> thanks</c><00:22:45.520><c> for</c><00:22:45.679><c> watching</c>

