WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.670 align:start position:0%
 
hey<00:00:00.160><c> everyone</c><00:00:00.640><c> welcome</c><00:00:01.040><c> back</c><00:00:01.280><c> and</c><00:00:01.360><c> let's</c>

00:00:01.670 --> 00:00:01.680 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.680 --> 00:00:03.510 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.920><c> some</c><00:00:02.080><c> more</c><00:00:02.320><c> new</c><00:00:02.560><c> code</c><00:00:02.800><c> today</c><00:00:03.040><c> so</c><00:00:03.199><c> today</c>

00:00:03.510 --> 00:00:03.520 align:start position:0%
write some more new code today so today
 

00:00:03.520 --> 00:00:05.910 align:start position:0%
write some more new code today so today
let's<00:00:03.760><c> solve</c><00:00:04.000><c> the</c><00:00:04.160><c> problem</c><00:00:04.799><c> valid</c><00:00:05.279><c> palindrome</c>

00:00:05.910 --> 00:00:05.920 align:start position:0%
let's solve the problem valid palindrome
 

00:00:05.920 --> 00:00:07.190 align:start position:0%
let's solve the problem valid palindrome
i'm<00:00:06.080><c> actually</c><00:00:06.319><c> going</c><00:00:06.399><c> to</c><00:00:06.480><c> be</c><00:00:06.560><c> solving</c><00:00:06.960><c> this</c>

00:00:07.190 --> 00:00:07.200 align:start position:0%
i'm actually going to be solving this
 

00:00:07.200 --> 00:00:08.950 align:start position:0%
i'm actually going to be solving this
two<00:00:07.359><c> different</c><00:00:07.680><c> ways</c><00:00:08.000><c> and</c><00:00:08.080><c> i</c><00:00:08.240><c> think</c><00:00:08.400><c> both</c><00:00:08.720><c> ways</c>

00:00:08.950 --> 00:00:08.960 align:start position:0%
two different ways and i think both ways
 

00:00:08.960 --> 00:00:10.629 align:start position:0%
two different ways and i think both ways
are<00:00:09.120><c> definitely</c><00:00:09.599><c> going</c><00:00:09.679><c> to</c><00:00:09.760><c> be</c><00:00:09.920><c> helpful</c><00:00:10.400><c> to</c>

00:00:10.629 --> 00:00:10.639 align:start position:0%
are definitely going to be helpful to
 

00:00:10.639 --> 00:00:13.190 align:start position:0%
are definitely going to be helpful to
know<00:00:10.960><c> in</c><00:00:11.120><c> an</c><00:00:11.280><c> interview</c><00:00:11.840><c> setting</c><00:00:12.639><c> before</c><00:00:12.960><c> we</c>

00:00:13.190 --> 00:00:13.200 align:start position:0%
know in an interview setting before we
 

00:00:13.200 --> 00:00:15.030 align:start position:0%
know in an interview setting before we
start<00:00:13.519><c> i</c><00:00:13.599><c> just</c><00:00:13.759><c> want</c><00:00:13.920><c> to</c><00:00:14.000><c> quickly</c><00:00:14.400><c> mention</c>

00:00:15.030 --> 00:00:15.040 align:start position:0%
start i just want to quickly mention
 

00:00:15.040 --> 00:00:17.189 align:start position:0%
start i just want to quickly mention
that<00:00:15.200><c> this</c><00:00:15.440><c> problem</c><00:00:15.839><c> is</c><00:00:16.000><c> actually</c><00:00:16.480><c> a</c><00:00:16.640><c> part</c><00:00:16.960><c> of</c>

00:00:17.189 --> 00:00:17.199 align:start position:0%
that this problem is actually a part of
 

00:00:17.199 --> 00:00:20.630 align:start position:0%
that this problem is actually a part of
the<00:00:17.440><c> blind</c><00:00:17.840><c> 75</c><00:00:18.560><c> list</c><00:00:19.039><c> of</c><00:00:19.359><c> questions</c><00:00:20.400><c> and</c>

00:00:20.630 --> 00:00:20.640 align:start position:0%
the blind 75 list of questions and
 

00:00:20.640 --> 00:00:23.029 align:start position:0%
the blind 75 list of questions and
luckily<00:00:21.199><c> we</c><00:00:21.439><c> have</c><00:00:21.680><c> actually</c><00:00:22.080><c> solved</c><00:00:22.480><c> the</c><00:00:22.720><c> vast</c>

00:00:23.029 --> 00:00:23.039 align:start position:0%
luckily we have actually solved the vast
 

00:00:23.039 --> 00:00:25.269 align:start position:0%
luckily we have actually solved the vast
majority<00:00:23.600><c> of</c><00:00:23.680><c> the</c><00:00:23.760><c> blind</c><00:00:24.080><c> 75</c><00:00:24.640><c> questions</c><00:00:25.119><c> i</c>

00:00:25.269 --> 00:00:25.279 align:start position:0%
majority of the blind 75 questions i
 

00:00:25.279 --> 00:00:27.109 align:start position:0%
majority of the blind 75 questions i
even<00:00:25.519><c> have</c><00:00:25.680><c> a</c><00:00:25.840><c> playlist</c><00:00:26.480><c> of</c><00:00:26.640><c> all</c><00:00:26.720><c> of</c><00:00:26.880><c> these</c>

00:00:27.109 --> 00:00:27.119 align:start position:0%
even have a playlist of all of these
 

00:00:27.119 --> 00:00:28.950 align:start position:0%
even have a playlist of all of these
questions<00:00:27.599><c> in</c><00:00:27.680><c> the</c><00:00:27.840><c> description</c><00:00:28.480><c> if</c><00:00:28.640><c> you</c><00:00:28.800><c> want</c>

00:00:28.950 --> 00:00:28.960 align:start position:0%
questions in the description if you want
 

00:00:28.960 --> 00:00:30.950 align:start position:0%
questions in the description if you want
to<00:00:29.039><c> take</c><00:00:29.279><c> a</c><00:00:29.359><c> look</c><00:00:29.840><c> and</c><00:00:30.080><c> of</c><00:00:30.160><c> course</c><00:00:30.400><c> we</c><00:00:30.560><c> will</c><00:00:30.800><c> be</c>

00:00:30.950 --> 00:00:30.960 align:start position:0%
to take a look and of course we will be
 

00:00:30.960 --> 00:00:33.110 align:start position:0%
to take a look and of course we will be
finishing<00:00:31.439><c> one</c><00:00:31.679><c> more</c><00:00:31.920><c> today</c><00:00:32.320><c> getting</c><00:00:32.880><c> one</c>

00:00:33.110 --> 00:00:33.120 align:start position:0%
finishing one more today getting one
 

00:00:33.120 --> 00:00:35.910 align:start position:0%
finishing one more today getting one
step<00:00:33.360><c> closer</c><00:00:33.840><c> to</c><00:00:34.079><c> 100</c><00:00:34.800><c> completion</c><00:00:35.360><c> of</c><00:00:35.600><c> blind</c>

00:00:35.910 --> 00:00:35.920 align:start position:0%
step closer to 100 completion of blind
 

00:00:35.920 --> 00:00:39.270 align:start position:0%
step closer to 100 completion of blind
75<00:00:36.880><c> so</c><00:00:37.120><c> we</c><00:00:37.280><c> are</c><00:00:37.440><c> given</c><00:00:37.840><c> a</c><00:00:38.079><c> string</c><00:00:38.559><c> s</c><00:00:38.960><c> all</c><00:00:39.120><c> we</c>

00:00:39.270 --> 00:00:39.280 align:start position:0%
75 so we are given a string s all we
 

00:00:39.280 --> 00:00:41.030 align:start position:0%
75 so we are given a string s all we
want<00:00:39.440><c> to</c><00:00:39.600><c> do</c><00:00:39.840><c> is</c><00:00:40.079><c> determine</c><00:00:40.559><c> if</c><00:00:40.719><c> it's</c><00:00:40.960><c> a</c>

00:00:41.030 --> 00:00:41.040 align:start position:0%
want to do is determine if it's a
 

00:00:41.040 --> 00:00:43.350 align:start position:0%
want to do is determine if it's a
palindrome<00:00:41.920><c> uh</c><00:00:42.160><c> if</c><00:00:42.320><c> it</c><00:00:42.480><c> is</c><00:00:42.640><c> we</c><00:00:42.800><c> can</c><00:00:42.960><c> return</c>

00:00:43.350 --> 00:00:43.360 align:start position:0%
palindrome uh if it is we can return
 

00:00:43.360 --> 00:00:46.150 align:start position:0%
palindrome uh if it is we can return
true<00:00:43.680><c> if</c><00:00:43.920><c> it's</c><00:00:44.079><c> not</c><00:00:44.399><c> we</c><00:00:44.559><c> return</c><00:00:45.039><c> false</c><00:00:45.600><c> uh</c><00:00:45.840><c> only</c>

00:00:46.150 --> 00:00:46.160 align:start position:0%
true if it's not we return false uh only
 

00:00:46.160 --> 00:00:48.549 align:start position:0%
true if it's not we return false uh only
one<00:00:46.559><c> catch</c><00:00:47.039><c> is</c><00:00:47.280><c> that</c><00:00:47.600><c> we</c><00:00:47.840><c> are</c><00:00:48.079><c> only</c>

00:00:48.549 --> 00:00:48.559 align:start position:0%
one catch is that we are only
 

00:00:48.559 --> 00:00:52.470 align:start position:0%
one catch is that we are only
considering<00:00:49.800><c> alphanumeric</c><00:00:51.039><c> characters</c><00:00:52.000><c> in</c>

00:00:52.470 --> 00:00:52.480 align:start position:0%
considering alphanumeric characters in
 

00:00:52.480 --> 00:00:56.869 align:start position:0%
considering alphanumeric characters in
the<00:00:52.800><c> list</c><00:00:53.520><c> and</c><00:00:54.079><c> we</c><00:00:54.320><c> are</c><00:00:54.559><c> ignoring</c><00:00:55.760><c> cases</c><00:00:56.719><c> by</c>

00:00:56.869 --> 00:00:56.879 align:start position:0%
the list and we are ignoring cases by
 

00:00:56.879 --> 00:00:58.950 align:start position:0%
the list and we are ignoring cases by
ignoring<00:00:57.360><c> cases</c><00:00:57.680><c> they</c><00:00:57.920><c> mean</c><00:00:58.160><c> upper</c><00:00:58.480><c> and</c><00:00:58.640><c> lower</c>

00:00:58.950 --> 00:00:58.960 align:start position:0%
ignoring cases they mean upper and lower
 

00:00:58.960 --> 00:01:01.590 align:start position:0%
ignoring cases they mean upper and lower
case<00:00:59.440><c> so</c><00:01:00.079><c> in</c><00:01:00.480><c> the</c><00:01:00.719><c> input</c><00:01:00.960><c> string</c><00:01:01.280><c> you</c><00:01:01.359><c> can</c><00:01:01.440><c> see</c>

00:01:01.590 --> 00:01:01.600 align:start position:0%
case so in the input string you can see
 

00:01:01.600 --> 00:01:03.990 align:start position:0%
case so in the input string you can see
the<00:01:01.680><c> leftmost</c><00:01:02.160><c> character</c><00:01:02.559><c> is</c><00:01:02.800><c> capital</c><00:01:03.359><c> a</c><00:01:03.840><c> the</c>

00:01:03.990 --> 00:01:04.000 align:start position:0%
the leftmost character is capital a the
 

00:01:04.000 --> 00:01:06.310 align:start position:0%
the leftmost character is capital a the
rightmost<00:01:04.479><c> character</c><00:01:04.879><c> is</c><00:01:05.040><c> lowercase</c><00:01:05.600><c> a</c><00:01:06.080><c> both</c>

00:01:06.310 --> 00:01:06.320 align:start position:0%
rightmost character is lowercase a both
 

00:01:06.320 --> 00:01:08.310 align:start position:0%
rightmost character is lowercase a both
of<00:01:06.400><c> these</c><00:01:06.640><c> characters</c><00:01:07.200><c> are</c><00:01:07.360><c> considered</c><00:01:08.080><c> the</c>

00:01:08.310 --> 00:01:08.320 align:start position:0%
of these characters are considered the
 

00:01:08.320 --> 00:01:10.870 align:start position:0%
of these characters are considered the
same<00:01:09.040><c> so</c><00:01:09.439><c> if</c><00:01:09.600><c> we</c><00:01:09.760><c> had</c><00:01:10.000><c> a</c><00:01:10.080><c> string</c><00:01:10.400><c> an</c><00:01:10.640><c> input</c>

00:01:10.870 --> 00:01:10.880 align:start position:0%
same so if we had a string an input
 

00:01:10.880 --> 00:01:13.350 align:start position:0%
same so if we had a string an input
string<00:01:11.280><c> like</c><00:01:11.600><c> big</c><00:01:11.840><c> a</c><00:01:12.080><c> lower</c><00:01:12.400><c> a</c><00:01:12.720><c> this</c><00:01:12.960><c> string</c>

00:01:13.350 --> 00:01:13.360 align:start position:0%
string like big a lower a this string
 

00:01:13.360 --> 00:01:16.070 align:start position:0%
string like big a lower a this string
itself<00:01:14.080><c> is</c><00:01:14.400><c> a</c><00:01:14.560><c> palindrome</c><00:01:15.119><c> so</c><00:01:15.280><c> we</c><00:01:15.439><c> do</c><00:01:15.680><c> return</c>

00:01:16.070 --> 00:01:16.080 align:start position:0%
itself is a palindrome so we do return
 

00:01:16.080 --> 00:01:17.749 align:start position:0%
itself is a palindrome so we do return
true<00:01:16.400><c> even</c><00:01:16.560><c> though</c><00:01:16.799><c> one</c><00:01:17.040><c> is</c><00:01:17.200><c> uppercase</c><00:01:17.600><c> and</c>

00:01:17.749 --> 00:01:17.759 align:start position:0%
true even though one is uppercase and
 

00:01:17.759 --> 00:01:20.149 align:start position:0%
true even though one is uppercase and
one<00:01:17.920><c> is</c><00:01:18.000><c> lowercase</c><00:01:18.720><c> we</c><00:01:18.880><c> are</c><00:01:19.040><c> ignoring</c><00:01:20.000><c> the</c>

00:01:20.149 --> 00:01:20.159 align:start position:0%
one is lowercase we are ignoring the
 

00:01:20.159 --> 00:01:22.630 align:start position:0%
one is lowercase we are ignoring the
cases<00:01:20.640><c> of</c><00:01:20.720><c> the</c><00:01:20.799><c> characters</c><00:01:21.520><c> uh</c><00:01:21.920><c> and</c><00:01:22.080><c> also</c><00:01:22.479><c> when</c>

00:01:22.630 --> 00:01:22.640 align:start position:0%
cases of the characters uh and also when
 

00:01:22.640 --> 00:01:24.230 align:start position:0%
cases of the characters uh and also when
they<00:01:22.799><c> say</c><00:01:22.960><c> we're</c><00:01:23.280><c> only</c><00:01:23.600><c> considering</c>

00:01:24.230 --> 00:01:24.240 align:start position:0%
they say we're only considering
 

00:01:24.240 --> 00:01:26.469 align:start position:0%
they say we're only considering
alphanumeric<00:01:25.040><c> characters</c><00:01:25.920><c> basically</c><00:01:26.400><c> it</c>

00:01:26.469 --> 00:01:26.479 align:start position:0%
alphanumeric characters basically it
 

00:01:26.479 --> 00:01:28.630 align:start position:0%
alphanumeric characters basically it
means<00:01:26.799><c> we</c><00:01:26.960><c> can</c><00:01:27.280><c> ignore</c><00:01:28.000><c> everything</c><00:01:28.320><c> that's</c>

00:01:28.630 --> 00:01:28.640 align:start position:0%
means we can ignore everything that's
 

00:01:28.640 --> 00:01:30.789 align:start position:0%
means we can ignore everything that's
not<00:01:28.880><c> an</c><00:01:29.040><c> alphanumeric</c><00:01:29.759><c> character</c><00:01:30.159><c> what</c><00:01:30.479><c> is</c>

00:01:30.789 --> 00:01:30.799 align:start position:0%
not an alphanumeric character what is
 

00:01:30.799 --> 00:01:32.870 align:start position:0%
not an alphanumeric character what is
alphanumeric<00:01:31.600><c> basically</c><00:01:32.320><c> everything</c><00:01:32.640><c> from</c>

00:01:32.870 --> 00:01:32.880 align:start position:0%
alphanumeric basically everything from
 

00:01:32.880 --> 00:01:35.590 align:start position:0%
alphanumeric basically everything from
uppercase<00:01:33.439><c> a</c><00:01:33.840><c> to</c><00:01:34.159><c> uppercase</c><00:01:34.720><c> z</c><00:01:35.119><c> everything</c>

00:01:35.590 --> 00:01:35.600 align:start position:0%
uppercase a to uppercase z everything
 

00:01:35.600 --> 00:01:37.749 align:start position:0%
uppercase a to uppercase z everything
from<00:01:35.759><c> lowercase</c><00:01:36.320><c> a</c><00:01:36.560><c> to</c><00:01:36.720><c> lowercase</c><00:01:37.280><c> c</c><00:01:37.520><c> and</c>

00:01:37.749 --> 00:01:37.759 align:start position:0%
from lowercase a to lowercase c and
 

00:01:37.759 --> 00:01:41.429 align:start position:0%
from lowercase a to lowercase c and
everything<00:01:38.159><c> from</c><00:01:38.640><c> zero</c><00:01:39.439><c> all</c><00:01:39.600><c> the</c><00:01:39.680><c> way</c><00:01:40.320><c> to</c><00:01:40.799><c> nine</c>

00:01:41.429 --> 00:01:41.439 align:start position:0%
everything from zero all the way to nine
 

00:01:41.439 --> 00:01:44.789 align:start position:0%
everything from zero all the way to nine
right<00:01:41.759><c> every</c><00:01:42.240><c> character</c><00:01:42.720><c> and</c><00:01:42.960><c> every</c><00:01:43.600><c> digit</c><00:01:44.399><c> so</c>

00:01:44.789 --> 00:01:44.799 align:start position:0%
right every character and every digit so
 

00:01:44.799 --> 00:01:47.270 align:start position:0%
right every character and every digit so
basically<00:01:45.360><c> in</c><00:01:45.759><c> this</c><00:01:46.159><c> input</c><00:01:46.560><c> string</c><00:01:46.880><c> it</c><00:01:47.040><c> might</c>

00:01:47.270 --> 00:01:47.280 align:start position:0%
basically in this input string it might
 

00:01:47.280 --> 00:01:49.749 align:start position:0%
basically in this input string it might
not<00:01:47.520><c> look</c><00:01:47.759><c> like</c><00:01:48.000><c> a</c><00:01:48.079><c> palindrome</c><00:01:48.799><c> initially</c><00:01:49.520><c> but</c>

00:01:49.749 --> 00:01:49.759 align:start position:0%
not look like a palindrome initially but
 

00:01:49.759 --> 00:01:51.749 align:start position:0%
not look like a palindrome initially but
the<00:01:49.920><c> answer</c><00:01:50.320><c> is</c><00:01:50.479><c> yes</c><00:01:50.960><c> true</c><00:01:51.280><c> it</c><00:01:51.520><c> is</c><00:01:51.680><c> a</c>

00:01:51.749 --> 00:01:51.759 align:start position:0%
the answer is yes true it is a
 

00:01:51.759 --> 00:01:53.749 align:start position:0%
the answer is yes true it is a
palindrome<00:01:52.399><c> because</c><00:01:53.040><c> and</c><00:01:53.200><c> actually</c><00:01:53.520><c> before</c>

00:01:53.749 --> 00:01:53.759 align:start position:0%
palindrome because and actually before
 

00:01:53.759 --> 00:01:55.350 align:start position:0%
palindrome because and actually before
we<00:01:53.920><c> even</c><00:01:54.079><c> get</c><00:01:54.240><c> into</c><00:01:54.479><c> that</c><00:01:54.720><c> what</c><00:01:55.040><c> is</c><00:01:55.280><c> a</c>

00:01:55.350 --> 00:01:55.360 align:start position:0%
we even get into that what is a
 

00:01:55.360 --> 00:01:57.270 align:start position:0%
we even get into that what is a
palindrome<00:01:56.000><c> if</c><00:01:56.079><c> you</c><00:01:56.159><c> don't</c><00:01:56.399><c> remember</c><00:01:57.040><c> well</c>

00:01:57.270 --> 00:01:57.280 align:start position:0%
palindrome if you don't remember well
 

00:01:57.280 --> 00:01:59.109 align:start position:0%
palindrome if you don't remember well
basically<00:01:57.759><c> the</c><00:01:57.920><c> easiest</c><00:01:58.240><c> way</c><00:01:58.399><c> to</c><00:01:58.560><c> check</c><00:01:58.799><c> if</c><00:01:59.040><c> a</c>

00:01:59.109 --> 00:01:59.119 align:start position:0%
basically the easiest way to check if a
 

00:01:59.119 --> 00:02:01.910 align:start position:0%
basically the easiest way to check if a
string<00:01:59.680><c> is</c><00:01:59.840><c> a</c><00:02:00.000><c> palindrome</c><00:02:00.719><c> is</c><00:02:00.880><c> basically</c><00:02:01.680><c> if</c>

00:02:01.910 --> 00:02:01.920 align:start position:0%
string is a palindrome is basically if
 

00:02:01.920 --> 00:02:05.270 align:start position:0%
string is a palindrome is basically if
it<00:02:02.159><c> reads</c><00:02:02.880><c> uh</c><00:02:03.119><c> the</c><00:02:03.280><c> same</c><00:02:03.600><c> way</c><00:02:04.240><c> as</c><00:02:04.479><c> it</c><00:02:04.640><c> does</c><00:02:05.040><c> when</c>

00:02:05.270 --> 00:02:05.280 align:start position:0%
it reads uh the same way as it does when
 

00:02:05.280 --> 00:02:07.830 align:start position:0%
it reads uh the same way as it does when
it<00:02:05.439><c> is</c><00:02:05.759><c> reversed</c><00:02:06.640><c> meaning</c><00:02:07.040><c> if</c><00:02:07.200><c> the</c><00:02:07.360><c> string</c><00:02:07.680><c> is</c>

00:02:07.830 --> 00:02:07.840 align:start position:0%
it is reversed meaning if the string is
 

00:02:07.840 --> 00:02:09.749 align:start position:0%
it is reversed meaning if the string is
the<00:02:08.000><c> exact</c><00:02:08.319><c> same</c><00:02:08.640><c> even</c><00:02:09.039><c> after</c><00:02:09.280><c> it's</c><00:02:09.520><c> been</c>

00:02:09.749 --> 00:02:09.759 align:start position:0%
the exact same even after it's been
 

00:02:09.759 --> 00:02:13.190 align:start position:0%
the exact same even after it's been
reversed<00:02:10.399><c> so</c><00:02:10.640><c> for</c><00:02:10.800><c> example</c><00:02:11.280><c> a</c><00:02:11.920><c> b</c><00:02:12.400><c> a</c><00:02:12.879><c> if</c><00:02:12.959><c> we</c>

00:02:13.190 --> 00:02:13.200 align:start position:0%
reversed so for example a b a if we
 

00:02:13.200 --> 00:02:16.229 align:start position:0%
reversed so for example a b a if we
reverse<00:02:13.760><c> this</c><00:02:14.000><c> string</c><00:02:14.480><c> it's</c><00:02:14.720><c> still</c><00:02:15.120><c> a</c><00:02:15.360><c> b</c><00:02:15.680><c> a</c><00:02:16.080><c> so</c>

00:02:16.229 --> 00:02:16.239 align:start position:0%
reverse this string it's still a b a so
 

00:02:16.239 --> 00:02:19.110 align:start position:0%
reverse this string it's still a b a so
it<00:02:16.480><c> is</c><00:02:16.640><c> a</c><00:02:16.720><c> palindrome</c><00:02:17.760><c> right</c><00:02:18.080><c> so</c><00:02:18.720><c> and</c><00:02:18.879><c> let's</c>

00:02:19.110 --> 00:02:19.120 align:start position:0%
it is a palindrome right so and let's
 

00:02:19.120 --> 00:02:21.110 align:start position:0%
it is a palindrome right so and let's
take<00:02:19.360><c> this</c><00:02:19.680><c> string</c><00:02:20.000><c> if</c><00:02:20.160><c> we</c><00:02:20.239><c> reverse</c><00:02:20.720><c> it</c><00:02:20.800><c> is</c><00:02:20.959><c> it</c>

00:02:21.110 --> 00:02:21.120 align:start position:0%
take this string if we reverse it is it
 

00:02:21.120 --> 00:02:22.710 align:start position:0%
take this string if we reverse it is it
still<00:02:21.280><c> the</c><00:02:21.440><c> exact</c><00:02:21.680><c> same</c><00:02:22.000><c> basically</c><00:02:22.400><c> if</c><00:02:22.480><c> we</c>

00:02:22.710 --> 00:02:22.720 align:start position:0%
still the exact same basically if we
 

00:02:22.720 --> 00:02:24.790 align:start position:0%
still the exact same basically if we
read<00:02:22.959><c> it</c><00:02:23.120><c> in</c><00:02:23.200><c> reverse</c><00:02:23.680><c> order</c><00:02:24.239><c> and</c><00:02:24.400><c> the</c><00:02:24.560><c> answer</c>

00:02:24.790 --> 00:02:24.800 align:start position:0%
read it in reverse order and the answer
 

00:02:24.800 --> 00:02:26.869 align:start position:0%
read it in reverse order and the answer
is<00:02:25.040><c> yes</c><00:02:25.280><c> let's</c><00:02:25.440><c> just</c><00:02:25.680><c> compare</c><00:02:26.319><c> a</c><00:02:26.640><c> few</c>

00:02:26.869 --> 00:02:26.879 align:start position:0%
is yes let's just compare a few
 

00:02:26.879 --> 00:02:28.070 align:start position:0%
is yes let's just compare a few
characters<00:02:27.200><c> initially</c><00:02:27.599><c> let's</c><00:02:27.680><c> start</c><00:02:27.840><c> at</c><00:02:27.920><c> the</c>

00:02:28.070 --> 00:02:28.080 align:start position:0%
characters initially let's start at the
 

00:02:28.080 --> 00:02:30.790 align:start position:0%
characters initially let's start at the
beginning<00:02:28.400><c> right</c><00:02:28.879><c> a</c><00:02:29.599><c> uh</c><00:02:30.080><c> and</c><00:02:30.239><c> remember</c><00:02:30.560><c> we're</c>

00:02:30.790 --> 00:02:30.800 align:start position:0%
beginning right a uh and remember we're
 

00:02:30.800 --> 00:02:32.710 align:start position:0%
beginning right a uh and remember we're
ignoring<00:02:31.360><c> case</c><00:02:31.599><c> so</c><00:02:31.840><c> when</c><00:02:32.000><c> i</c><00:02:32.160><c> say</c><00:02:32.319><c> ignoring</c>

00:02:32.710 --> 00:02:32.720 align:start position:0%
ignoring case so when i say ignoring
 

00:02:32.720 --> 00:02:34.309 align:start position:0%
ignoring case so when i say ignoring
case<00:02:32.959><c> i'm</c><00:02:33.120><c> just</c><00:02:33.280><c> going</c><00:02:33.360><c> to</c><00:02:33.440><c> basically</c><00:02:33.840><c> convert</c>

00:02:34.309 --> 00:02:34.319 align:start position:0%
case i'm just going to basically convert
 

00:02:34.319 --> 00:02:35.990 align:start position:0%
case i'm just going to basically convert
it<00:02:34.400><c> to</c><00:02:34.560><c> lowercase</c><00:02:35.120><c> so</c><00:02:35.360><c> everything</c><00:02:35.760><c> is</c><00:02:35.840><c> just</c>

00:02:35.990 --> 00:02:36.000 align:start position:0%
it to lowercase so everything is just
 

00:02:36.000 --> 00:02:37.509 align:start position:0%
it to lowercase so everything is just
going<00:02:36.080><c> to</c><00:02:36.160><c> be</c><00:02:36.239><c> lower</c><00:02:36.480><c> okay</c><00:02:36.640><c> so</c><00:02:36.800><c> we</c><00:02:36.879><c> have</c><00:02:37.040><c> an</c><00:02:37.200><c> a</c>

00:02:37.509 --> 00:02:37.519 align:start position:0%
going to be lower okay so we have an a
 

00:02:37.519 --> 00:02:40.070 align:start position:0%
going to be lower okay so we have an a
okay<00:02:37.840><c> next</c><00:02:38.080><c> character</c><00:02:38.720><c> is</c><00:02:38.879><c> a</c><00:02:39.120><c> space</c><00:02:39.519><c> character</c>

00:02:40.070 --> 00:02:40.080 align:start position:0%
okay next character is a space character
 

00:02:40.080 --> 00:02:41.990 align:start position:0%
okay next character is a space character
but<00:02:40.239><c> remember</c><00:02:40.879><c> we're</c><00:02:41.280><c> only</c><00:02:41.519><c> considering</c>

00:02:41.990 --> 00:02:42.000 align:start position:0%
but remember we're only considering
 

00:02:42.000 --> 00:02:43.670 align:start position:0%
but remember we're only considering
alphanumeric<00:02:42.640><c> so</c><00:02:42.800><c> we</c><00:02:42.879><c> don't</c><00:02:43.120><c> even</c><00:02:43.280><c> consider</c>

00:02:43.670 --> 00:02:43.680 align:start position:0%
alphanumeric so we don't even consider
 

00:02:43.680 --> 00:02:45.830 align:start position:0%
alphanumeric so we don't even consider
the<00:02:43.840><c> space</c><00:02:44.160><c> we</c><00:02:44.319><c> want</c><00:02:44.480><c> to</c><00:02:44.560><c> skip</c><00:02:44.959><c> that</c><00:02:45.200><c> space</c><00:02:45.599><c> so</c>

00:02:45.830 --> 00:02:45.840 align:start position:0%
the space we want to skip that space so
 

00:02:45.840 --> 00:02:47.430 align:start position:0%
the space we want to skip that space so
just<00:02:46.000><c> delete</c><00:02:46.400><c> it</c><00:02:46.560><c> right</c>

00:02:47.430 --> 00:02:47.440 align:start position:0%
just delete it right
 

00:02:47.440 --> 00:02:48.949 align:start position:0%
just delete it right
next<00:02:47.599><c> character</c><00:02:48.239><c> m</c>

00:02:48.949 --> 00:02:48.959 align:start position:0%
next character m
 

00:02:48.959 --> 00:02:51.190 align:start position:0%
next character m
and<00:02:49.040><c> then</c><00:02:49.200><c> next</c><00:02:49.440><c> character</c><00:02:49.920><c> a</c><00:02:50.400><c> next</c><00:02:50.720><c> character</c>

00:02:51.190 --> 00:02:51.200 align:start position:0%
and then next character a next character
 

00:02:51.200 --> 00:02:52.470 align:start position:0%
and then next character a next character
n<00:02:51.360><c> so</c><00:02:51.519><c> we</c><00:02:51.680><c> just</c><00:02:51.760><c> took</c><00:02:52.000><c> this</c><00:02:52.160><c> from</c><00:02:52.319><c> the</c>

00:02:52.470 --> 00:02:52.480 align:start position:0%
n so we just took this from the
 

00:02:52.480 --> 00:02:54.390 align:start position:0%
n so we just took this from the
beginning<00:02:52.800><c> of</c><00:02:52.879><c> the</c><00:02:53.040><c> string</c><00:02:53.360><c> a</c><00:02:53.680><c> man</c><00:02:54.000><c> right</c><00:02:54.319><c> so</c>

00:02:54.390 --> 00:02:54.400 align:start position:0%
beginning of the string a man right so
 

00:02:54.400 --> 00:02:56.550 align:start position:0%
beginning of the string a man right so
let's<00:02:54.640><c> start</c><00:02:54.800><c> at</c><00:02:54.959><c> the</c><00:02:55.200><c> end</c><00:02:55.360><c> of</c><00:02:55.440><c> the</c><00:02:55.599><c> string</c><00:02:56.319><c> uh</c>

00:02:56.550 --> 00:02:56.560 align:start position:0%
let's start at the end of the string uh
 

00:02:56.560 --> 00:02:58.949 align:start position:0%
let's start at the end of the string uh
we<00:02:56.720><c> have</c><00:02:56.879><c> a</c><00:02:57.040><c> lowercase</c><00:02:57.680><c> a</c><00:02:58.239><c> right</c><00:02:58.560><c> and</c><00:02:58.720><c> then</c><00:02:58.800><c> we</c>

00:02:58.949 --> 00:02:58.959 align:start position:0%
we have a lowercase a right and then we
 

00:02:58.959 --> 00:03:00.949 align:start position:0%
we have a lowercase a right and then we
have<00:02:59.120><c> a</c><00:02:59.200><c> lowercase</c><00:02:59.840><c> m</c><00:03:00.480><c> then</c><00:03:00.640><c> we</c><00:03:00.800><c> have</c><00:03:00.879><c> a</c>

00:03:00.949 --> 00:03:00.959 align:start position:0%
have a lowercase m then we have a
 

00:03:00.959 --> 00:03:02.869 align:start position:0%
have a lowercase m then we have a
lowercase<00:03:01.440><c> a</c><00:03:01.599><c> then</c><00:03:01.760><c> we</c><00:03:01.840><c> have</c><00:03:01.920><c> lowercase</c><00:03:02.480><c> n</c><00:03:02.640><c> so</c>

00:03:02.869 --> 00:03:02.879 align:start position:0%
lowercase a then we have lowercase n so
 

00:03:02.879 --> 00:03:04.390 align:start position:0%
lowercase a then we have lowercase n so
even<00:03:03.200><c> starting</c><00:03:03.519><c> at</c><00:03:03.599><c> the</c><00:03:03.760><c> end</c><00:03:03.920><c> of</c><00:03:04.000><c> the</c><00:03:04.080><c> string</c>

00:03:04.390 --> 00:03:04.400 align:start position:0%
even starting at the end of the string
 

00:03:04.400 --> 00:03:06.390 align:start position:0%
even starting at the end of the string
it<00:03:04.480><c> looks</c><00:03:04.720><c> like</c><00:03:05.040><c> it's</c><00:03:05.200><c> the</c><00:03:05.440><c> same</c><00:03:06.000><c> as</c><00:03:06.239><c> the</c>

00:03:06.390 --> 00:03:06.400 align:start position:0%
it looks like it's the same as the
 

00:03:06.400 --> 00:03:08.550 align:start position:0%
it looks like it's the same as the
beginning<00:03:07.040><c> when</c><00:03:07.280><c> we</c><00:03:07.440><c> read</c><00:03:07.680><c> it</c><00:03:07.840><c> in</c><00:03:08.000><c> reverse</c><00:03:08.480><c> and</c>

00:03:08.550 --> 00:03:08.560 align:start position:0%
beginning when we read it in reverse and
 

00:03:08.560 --> 00:03:10.710 align:start position:0%
beginning when we read it in reverse and
it<00:03:08.720><c> turns</c><00:03:08.959><c> out</c><00:03:09.200><c> that</c><00:03:09.440><c> if</c><00:03:09.599><c> we</c><00:03:10.159><c> you</c><00:03:10.319><c> know</c><00:03:10.480><c> take</c>

00:03:10.710 --> 00:03:10.720 align:start position:0%
it turns out that if we you know take
 

00:03:10.720 --> 00:03:13.430 align:start position:0%
it turns out that if we you know take
this<00:03:10.959><c> string</c><00:03:11.760><c> and</c><00:03:12.159><c> remove</c>

00:03:13.430 --> 00:03:13.440 align:start position:0%
this string and remove
 

00:03:13.440 --> 00:03:15.350 align:start position:0%
this string and remove
all<00:03:13.599><c> the</c><00:03:13.760><c> spaces</c><00:03:14.640><c> all</c><00:03:14.800><c> the</c><00:03:14.959><c> special</c>

00:03:15.350 --> 00:03:15.360 align:start position:0%
all the spaces all the special
 

00:03:15.360 --> 00:03:17.270 align:start position:0%
all the spaces all the special
characters<00:03:16.080><c> and</c><00:03:16.159><c> then</c><00:03:16.400><c> convert</c><00:03:16.879><c> everything</c>

00:03:17.270 --> 00:03:17.280 align:start position:0%
characters and then convert everything
 

00:03:17.280 --> 00:03:19.430 align:start position:0%
characters and then convert everything
else<00:03:17.440><c> to</c><00:03:17.680><c> lowercase</c><00:03:18.319><c> and</c><00:03:18.400><c> then</c><00:03:18.560><c> we</c><00:03:18.720><c> reverse</c><00:03:19.200><c> it</c>

00:03:19.430 --> 00:03:19.440 align:start position:0%
else to lowercase and then we reverse it
 

00:03:19.440 --> 00:03:21.750 align:start position:0%
else to lowercase and then we reverse it
it<00:03:19.599><c> will</c><00:03:19.840><c> be</c><00:03:20.080><c> the</c><00:03:20.239><c> exact</c><00:03:20.560><c> same</c><00:03:20.959><c> string</c><00:03:21.680><c> and</c>

00:03:21.750 --> 00:03:21.760 align:start position:0%
it will be the exact same string and
 

00:03:21.760 --> 00:03:23.030 align:start position:0%
it will be the exact same string and
that's<00:03:22.080><c> the</c><00:03:22.239><c> approach</c><00:03:22.640><c> i'm</c><00:03:22.800><c> going</c><00:03:22.879><c> to</c><00:03:22.959><c> be</c>

00:03:23.030 --> 00:03:23.040 align:start position:0%
that's the approach i'm going to be
 

00:03:23.040 --> 00:03:24.630 align:start position:0%
that's the approach i'm going to be
taking<00:03:23.360><c> i'm</c><00:03:23.519><c> just</c><00:03:23.599><c> going</c><00:03:23.760><c> to</c><00:03:23.840><c> be</c><00:03:24.000><c> removing</c><00:03:24.560><c> i'm</c>

00:03:24.630 --> 00:03:24.640 align:start position:0%
taking i'm just going to be removing i'm
 

00:03:24.640 --> 00:03:26.309 align:start position:0%
taking i'm just going to be removing i'm
going<00:03:24.720><c> to</c><00:03:24.799><c> be</c><00:03:24.959><c> filtering</c><00:03:25.519><c> all</c><00:03:25.680><c> the</c><00:03:25.920><c> useless</c>

00:03:26.309 --> 00:03:26.319 align:start position:0%
going to be filtering all the useless
 

00:03:26.319 --> 00:03:27.990 align:start position:0%
going to be filtering all the useless
characters<00:03:26.799><c> from</c><00:03:27.040><c> this</c><00:03:27.519><c> keeping</c><00:03:27.920><c> the</c>

00:03:27.990 --> 00:03:28.000 align:start position:0%
characters from this keeping the
 

00:03:28.000 --> 00:03:29.430 align:start position:0%
characters from this keeping the
characters<00:03:28.400><c> that</c><00:03:28.560><c> we</c><00:03:28.720><c> want</c><00:03:29.120><c> and</c><00:03:29.200><c> then</c>

00:03:29.430 --> 00:03:29.440 align:start position:0%
characters that we want and then
 

00:03:29.440 --> 00:03:31.110 align:start position:0%
characters that we want and then
converting<00:03:29.920><c> them</c><00:03:30.000><c> to</c><00:03:30.159><c> lowercase</c><00:03:30.879><c> then</c>

00:03:31.110 --> 00:03:31.120 align:start position:0%
converting them to lowercase then
 

00:03:31.120 --> 00:03:32.789 align:start position:0%
converting them to lowercase then
reversing<00:03:31.599><c> the</c><00:03:31.760><c> string</c><00:03:32.080><c> and</c><00:03:32.239><c> then</c><00:03:32.400><c> checking</c>

00:03:32.789 --> 00:03:32.799 align:start position:0%
reversing the string and then checking
 

00:03:32.799 --> 00:03:35.030 align:start position:0%
reversing the string and then checking
if<00:03:32.959><c> it's</c><00:03:33.120><c> still</c><00:03:33.519><c> equal</c><00:03:34.080><c> so</c><00:03:34.319><c> now</c><00:03:34.480><c> let's</c><00:03:34.720><c> get</c>

00:03:35.030 --> 00:03:35.040 align:start position:0%
if it's still equal so now let's get
 

00:03:35.040 --> 00:03:36.869 align:start position:0%
if it's still equal so now let's get
into<00:03:35.280><c> the</c><00:03:35.360><c> coding</c><00:03:35.840><c> solution</c><00:03:36.319><c> at</c><00:03:36.400><c> least</c><00:03:36.720><c> the</c>

00:03:36.869 --> 00:03:36.879 align:start position:0%
into the coding solution at least the
 

00:03:36.879 --> 00:03:39.110 align:start position:0%
into the coding solution at least the
first<00:03:37.280><c> coding</c><00:03:37.680><c> solution</c><00:03:38.400><c> okay</c><00:03:38.560><c> so</c><00:03:38.720><c> now</c><00:03:38.879><c> let's</c>

00:03:39.110 --> 00:03:39.120 align:start position:0%
first coding solution okay so now let's
 

00:03:39.120 --> 00:03:40.789 align:start position:0%
first coding solution okay so now let's
code<00:03:39.360><c> it</c><00:03:39.519><c> up</c><00:03:39.760><c> and</c><00:03:40.000><c> remember</c><00:03:40.400><c> we're</c><00:03:40.560><c> going</c><00:03:40.720><c> to</c>

00:03:40.789 --> 00:03:40.799 align:start position:0%
code it up and remember we're going to
 

00:03:40.799 --> 00:03:43.270 align:start position:0%
code it up and remember we're going to
be<00:03:40.959><c> building</c><00:03:41.760><c> the</c><00:03:42.000><c> new</c><00:03:42.239><c> string</c><00:03:42.720><c> which</c><00:03:42.959><c> is</c><00:03:43.120><c> just</c>

00:03:43.270 --> 00:03:43.280 align:start position:0%
be building the new string which is just
 

00:03:43.280 --> 00:03:45.229 align:start position:0%
be building the new string which is just
going<00:03:43.440><c> to</c><00:03:43.599><c> be</c><00:03:43.920><c> removing</c><00:03:44.560><c> all</c><00:03:44.720><c> the</c>

00:03:45.229 --> 00:03:45.239 align:start position:0%
going to be removing all the
 

00:03:45.239 --> 00:03:47.830 align:start position:0%
going to be removing all the
non-alphanumeric<00:03:46.239><c> characters</c><00:03:47.120><c> from</c><00:03:47.599><c> the</c>

00:03:47.830 --> 00:03:47.840 align:start position:0%
non-alphanumeric characters from the
 

00:03:47.840 --> 00:03:49.670 align:start position:0%
non-alphanumeric characters from the
input<00:03:48.159><c> string</c><00:03:48.480><c> so</c><00:03:48.640><c> this</c><00:03:48.879><c> solution</c><00:03:49.280><c> is</c><00:03:49.440><c> kind</c><00:03:49.599><c> of</c>

00:03:49.670 --> 00:03:49.680 align:start position:0%
input string so this solution is kind of
 

00:03:49.680 --> 00:03:51.110 align:start position:0%
input string so this solution is kind of
the<00:03:49.840><c> cheating</c><00:03:50.319><c> solution</c><00:03:50.720><c> where</c><00:03:50.879><c> i'm</c><00:03:50.959><c> going</c><00:03:51.040><c> to</c>

00:03:51.110 --> 00:03:51.120 align:start position:0%
the cheating solution where i'm going to
 

00:03:51.120 --> 00:03:53.830 align:start position:0%
the cheating solution where i'm going to
be<00:03:51.280><c> using</c><00:03:51.519><c> a</c><00:03:51.599><c> lot</c><00:03:51.760><c> of</c><00:03:51.920><c> built-in</c><00:03:52.400><c> functions</c><00:03:53.360><c> and</c>

00:03:53.830 --> 00:03:53.840 align:start position:0%
be using a lot of built-in functions and
 

00:03:53.840 --> 00:03:55.429 align:start position:0%
be using a lot of built-in functions and
extra<00:03:54.239><c> memory</c><00:03:54.720><c> as</c><00:03:54.799><c> well</c><00:03:54.959><c> so</c><00:03:55.120><c> we're</c><00:03:55.280><c> going</c><00:03:55.360><c> to</c>

00:03:55.429 --> 00:03:55.439 align:start position:0%
extra memory as well so we're going to
 

00:03:55.439 --> 00:03:56.789 align:start position:0%
extra memory as well so we're going to
just<00:03:55.680><c> iterate</c><00:03:56.000><c> through</c><00:03:56.239><c> every</c><00:03:56.480><c> single</c>

00:03:56.789 --> 00:03:56.799 align:start position:0%
just iterate through every single
 

00:03:56.799 --> 00:03:59.110 align:start position:0%
just iterate through every single
character<00:03:57.360><c> in</c><00:03:57.439><c> the</c><00:03:57.599><c> string</c><00:03:58.000><c> s</c><00:03:58.560><c> if</c><00:03:58.799><c> that</c>

00:03:59.110 --> 00:03:59.120 align:start position:0%
character in the string s if that
 

00:03:59.120 --> 00:04:02.149 align:start position:0%
character in the string s if that
character<00:03:59.920><c> is</c><00:04:00.360><c> alphanumerical</c><00:04:01.519><c> and</c><00:04:01.840><c> the</c><00:04:02.000><c> good</c>

00:04:02.149 --> 00:04:02.159 align:start position:0%
character is alphanumerical and the good
 

00:04:02.159 --> 00:04:03.670 align:start position:0%
character is alphanumerical and the good
thing<00:04:02.400><c> is</c><00:04:02.560><c> python</c><00:04:03.040><c> and</c><00:04:03.120><c> actually</c><00:04:03.439><c> i</c><00:04:03.519><c> think</c>

00:04:03.670 --> 00:04:03.680 align:start position:0%
thing is python and actually i think
 

00:04:03.680 --> 00:04:06.390 align:start position:0%
thing is python and actually i think
most<00:04:04.080><c> uh</c><00:04:04.400><c> libraries</c><00:04:05.360><c> most</c><00:04:05.760><c> languages</c><00:04:06.159><c> like</c>

00:04:06.390 --> 00:04:06.400 align:start position:0%
most uh libraries most languages like
 

00:04:06.400 --> 00:04:08.869 align:start position:0%
most uh libraries most languages like
java<00:04:07.040><c> have</c><00:04:07.360><c> a</c><00:04:07.519><c> built-in</c><00:04:07.920><c> function</c><00:04:08.239><c> to</c><00:04:08.480><c> check</c>

00:04:08.869 --> 00:04:08.879 align:start position:0%
java have a built-in function to check
 

00:04:08.879 --> 00:04:10.869 align:start position:0%
java have a built-in function to check
if<00:04:09.280><c> a</c><00:04:09.439><c> character</c><00:04:10.159><c> or</c><00:04:10.319><c> a</c><00:04:10.480><c> string</c><00:04:10.799><c> is</c>

00:04:10.869 --> 00:04:10.879 align:start position:0%
if a character or a string is
 

00:04:10.879 --> 00:04:13.350 align:start position:0%
if a character or a string is
alphanumerical<00:04:12.000><c> python</c><00:04:12.480><c> at</c><00:04:12.560><c> least</c><00:04:12.879><c> does</c><00:04:13.200><c> so</c>

00:04:13.350 --> 00:04:13.360 align:start position:0%
alphanumerical python at least does so
 

00:04:13.360 --> 00:04:14.630 align:start position:0%
alphanumerical python at least does so
we're<00:04:13.519><c> checking</c><00:04:13.840><c> if</c><00:04:13.920><c> this</c><00:04:14.080><c> character</c><00:04:14.480><c> is</c>

00:04:14.630 --> 00:04:14.640 align:start position:0%
we're checking if this character is
 

00:04:14.640 --> 00:04:17.349 align:start position:0%
we're checking if this character is
alphanumerical<00:04:15.599><c> if</c><00:04:15.840><c> it</c><00:04:16.079><c> is</c><00:04:16.560><c> we</c><00:04:16.880><c> want</c><00:04:17.120><c> to</c>

00:04:17.349 --> 00:04:17.359 align:start position:0%
alphanumerical if it is we want to
 

00:04:17.359 --> 00:04:19.430 align:start position:0%
alphanumerical if it is we want to
include<00:04:17.840><c> it</c><00:04:18.079><c> in</c><00:04:18.239><c> the</c><00:04:18.400><c> new</c><00:04:18.720><c> string</c><00:04:19.120><c> so</c><00:04:19.280><c> we're</c>

00:04:19.430 --> 00:04:19.440 align:start position:0%
include it in the new string so we're
 

00:04:19.440 --> 00:04:20.550 align:start position:0%
include it in the new string so we're
going<00:04:19.519><c> to</c><00:04:19.600><c> go</c><00:04:19.759><c> ahead</c><00:04:20.000><c> and</c><00:04:20.160><c> take</c><00:04:20.400><c> that</c>

00:04:20.550 --> 00:04:20.560 align:start position:0%
going to go ahead and take that
 

00:04:20.560 --> 00:04:23.189 align:start position:0%
going to go ahead and take that
character<00:04:21.280><c> and</c><00:04:21.759><c> add</c><00:04:22.000><c> it</c><00:04:22.160><c> to</c><00:04:22.240><c> the</c><00:04:22.400><c> new</c><00:04:22.639><c> string</c>

00:04:23.189 --> 00:04:23.199 align:start position:0%
character and add it to the new string
 

00:04:23.199 --> 00:04:25.189 align:start position:0%
character and add it to the new string
but<00:04:23.520><c> one</c><00:04:23.759><c> thing</c><00:04:24.160><c> you</c><00:04:24.320><c> don't</c><00:04:24.479><c> want</c><00:04:24.639><c> to</c><00:04:24.720><c> forget</c>

00:04:25.189 --> 00:04:25.199 align:start position:0%
but one thing you don't want to forget
 

00:04:25.199 --> 00:04:26.469 align:start position:0%
but one thing you don't want to forget
is<00:04:25.360><c> we</c><00:04:25.520><c> want</c><00:04:25.680><c> to</c><00:04:25.759><c> make</c><00:04:25.840><c> sure</c><00:04:26.000><c> that</c><00:04:26.240><c> every</c>

00:04:26.469 --> 00:04:26.479 align:start position:0%
is we want to make sure that every
 

00:04:26.479 --> 00:04:28.469 align:start position:0%
is we want to make sure that every
character<00:04:26.880><c> is</c><00:04:27.040><c> lowercase</c><00:04:27.600><c> so</c><00:04:27.759><c> before</c><00:04:28.080><c> we</c><00:04:28.320><c> add</c>

00:04:28.469 --> 00:04:28.479 align:start position:0%
character is lowercase so before we add
 

00:04:28.479 --> 00:04:29.909 align:start position:0%
character is lowercase so before we add
it<00:04:28.560><c> to</c><00:04:28.720><c> the</c><00:04:28.800><c> new</c><00:04:29.040><c> string</c><00:04:29.360><c> we</c><00:04:29.440><c> want</c><00:04:29.600><c> to</c><00:04:29.680><c> make</c>

00:04:29.909 --> 00:04:29.919 align:start position:0%
it to the new string we want to make
 

00:04:29.919 --> 00:04:32.710 align:start position:0%
it to the new string we want to make
sure<00:04:30.479><c> that</c><00:04:31.120><c> it</c><00:04:31.440><c> is</c><00:04:31.759><c> lowercase</c><00:04:32.400><c> so</c><00:04:32.479><c> we'll</c>

00:04:32.710 --> 00:04:32.720 align:start position:0%
sure that it is lowercase so we'll
 

00:04:32.720 --> 00:04:34.550 align:start position:0%
sure that it is lowercase so we'll
convert<00:04:33.120><c> it</c><00:04:33.199><c> to</c><00:04:33.360><c> lowercase</c><00:04:34.160><c> and</c><00:04:34.240><c> then</c><00:04:34.400><c> we're</c>

00:04:34.550 --> 00:04:34.560 align:start position:0%
convert it to lowercase and then we're
 

00:04:34.560 --> 00:04:36.070 align:start position:0%
convert it to lowercase and then we're
done<00:04:34.720><c> with</c><00:04:34.880><c> that</c><00:04:35.040><c> we</c><00:04:35.199><c> have</c><00:04:35.360><c> the</c><00:04:35.520><c> new</c><00:04:35.680><c> string</c><00:04:35.919><c> we</c>

00:04:36.070 --> 00:04:36.080 align:start position:0%
done with that we have the new string we
 

00:04:36.080 --> 00:04:37.749 align:start position:0%
done with that we have the new string we
removed<00:04:36.639><c> all</c><00:04:36.800><c> the</c><00:04:36.960><c> other</c><00:04:37.120><c> characters</c><00:04:37.520><c> from</c><00:04:37.680><c> it</c>

00:04:37.749 --> 00:04:37.759 align:start position:0%
removed all the other characters from it
 

00:04:37.759 --> 00:04:39.350 align:start position:0%
removed all the other characters from it
now<00:04:37.919><c> we</c><00:04:38.080><c> just</c><00:04:38.160><c> want</c><00:04:38.320><c> to</c><00:04:38.479><c> check</c><00:04:38.720><c> if</c><00:04:38.960><c> it</c><00:04:39.120><c> is</c><00:04:39.199><c> the</c>

00:04:39.350 --> 00:04:39.360 align:start position:0%
now we just want to check if it is the
 

00:04:39.360 --> 00:04:42.469 align:start position:0%
now we just want to check if it is the
exact<00:04:39.759><c> same</c><00:04:40.320><c> when</c><00:04:40.560><c> it</c><00:04:40.720><c> has</c><00:04:41.040><c> been</c><00:04:41.520><c> reversed</c>

00:04:42.469 --> 00:04:42.479 align:start position:0%
exact same when it has been reversed
 

00:04:42.479 --> 00:04:43.990 align:start position:0%
exact same when it has been reversed
so<00:04:42.800><c> we're</c><00:04:42.960><c> just</c><00:04:43.199><c> going</c><00:04:43.280><c> to</c><00:04:43.360><c> take</c><00:04:43.600><c> this</c><00:04:43.759><c> new</c>

00:04:43.990 --> 00:04:44.000 align:start position:0%
so we're just going to take this new
 

00:04:44.000 --> 00:04:46.390 align:start position:0%
so we're just going to take this new
string<00:04:44.560><c> compare</c><00:04:44.960><c> it</c><00:04:45.040><c> to</c><00:04:45.199><c> the</c><00:04:45.360><c> reversed</c><00:04:46.080><c> string</c>

00:04:46.390 --> 00:04:46.400 align:start position:0%
string compare it to the reversed string
 

00:04:46.400 --> 00:04:49.189 align:start position:0%
string compare it to the reversed string
which<00:04:46.720><c> in</c><00:04:46.880><c> python</c><00:04:47.280><c> you</c><00:04:47.440><c> can</c><00:04:47.520><c> do</c><00:04:47.759><c> like</c><00:04:48.000><c> this</c>

00:04:49.189 --> 00:04:49.199 align:start position:0%
which in python you can do like this
 

00:04:49.199 --> 00:04:51.030 align:start position:0%
which in python you can do like this
by<00:04:49.840><c> you</c><00:04:49.919><c> know</c><00:04:50.000><c> this</c><00:04:50.160><c> is</c><00:04:50.240><c> the</c><00:04:50.320><c> syntax</c><00:04:50.800><c> for</c>

00:04:51.030 --> 00:04:51.040 align:start position:0%
by you know this is the syntax for
 

00:04:51.040 --> 00:04:53.909 align:start position:0%
by you know this is the syntax for
reversing<00:04:51.520><c> a</c><00:04:51.680><c> string</c><00:04:52.160><c> so</c><00:04:52.400><c> if</c><00:04:52.639><c> they</c><00:04:52.880><c> are</c><00:04:53.199><c> equal</c>

00:04:53.909 --> 00:04:53.919 align:start position:0%
reversing a string so if they are equal
 

00:04:53.919 --> 00:04:55.670 align:start position:0%
reversing a string so if they are equal
then<00:04:54.080><c> we</c><00:04:54.240><c> can</c><00:04:54.320><c> return</c><00:04:54.720><c> true</c><00:04:55.199><c> if</c><00:04:55.280><c> they're</c><00:04:55.440><c> not</c>

00:04:55.670 --> 00:04:55.680 align:start position:0%
then we can return true if they're not
 

00:04:55.680 --> 00:04:58.070 align:start position:0%
then we can return true if they're not
equal<00:04:56.080><c> this</c><00:04:56.400><c> will</c><00:04:56.639><c> return</c><00:04:57.199><c> false</c><00:04:57.840><c> which</c><00:04:58.000><c> is</c>

00:04:58.070 --> 00:04:58.080 align:start position:0%
equal this will return false which is
 

00:04:58.080 --> 00:04:59.670 align:start position:0%
equal this will return false which is
what<00:04:58.240><c> we</c><00:04:58.320><c> want</c><00:04:58.479><c> to</c><00:04:58.560><c> do</c><00:04:58.720><c> to</c><00:04:58.880><c> determine</c><00:04:59.360><c> if</c><00:04:59.520><c> it's</c>

00:04:59.670 --> 00:04:59.680 align:start position:0%
what we want to do to determine if it's
 

00:04:59.680 --> 00:05:01.990 align:start position:0%
what we want to do to determine if it's
a<00:04:59.759><c> palindrome</c><00:05:00.240><c> so</c><00:05:00.479><c> now</c><00:05:00.960><c> let's</c><00:05:01.280><c> run</c><00:05:01.440><c> the</c><00:05:01.600><c> code</c>

00:05:01.990 --> 00:05:02.000 align:start position:0%
a palindrome so now let's run the code
 

00:05:02.000 --> 00:05:03.830 align:start position:0%
a palindrome so now let's run the code
and<00:05:02.080><c> make</c><00:05:02.320><c> sure</c><00:05:02.560><c> that</c><00:05:02.720><c> it</c><00:05:02.880><c> works</c><00:05:03.440><c> as</c><00:05:03.600><c> you</c><00:05:03.759><c> can</c>

00:05:03.830 --> 00:05:03.840 align:start position:0%
and make sure that it works as you can
 

00:05:03.840 --> 00:05:06.550 align:start position:0%
and make sure that it works as you can
see<00:05:04.000><c> on</c><00:05:04.080><c> the</c><00:05:04.160><c> left</c><00:05:04.720><c> yes</c><00:05:05.039><c> it</c><00:05:05.199><c> does</c><00:05:05.600><c> work</c><00:05:06.320><c> but</c>

00:05:06.550 --> 00:05:06.560 align:start position:0%
see on the left yes it does work but
 

00:05:06.560 --> 00:05:08.230 align:start position:0%
see on the left yes it does work but
there<00:05:06.800><c> are</c><00:05:06.960><c> some</c><00:05:07.199><c> deficiencies</c><00:05:08.000><c> with</c><00:05:08.160><c> the</c>

00:05:08.230 --> 00:05:08.240 align:start position:0%
there are some deficiencies with the
 

00:05:08.240 --> 00:05:10.710 align:start position:0%
there are some deficiencies with the
solution<00:05:08.639><c> that</c><00:05:08.880><c> maybe</c><00:05:09.520><c> your</c><00:05:09.759><c> interviewer</c>

00:05:10.710 --> 00:05:10.720 align:start position:0%
solution that maybe your interviewer
 

00:05:10.720 --> 00:05:12.710 align:start position:0%
solution that maybe your interviewer
won't<00:05:11.039><c> want</c><00:05:11.199><c> you</c><00:05:11.360><c> to</c><00:05:11.600><c> use</c><00:05:11.919><c> maybe</c><00:05:12.240><c> they</c><00:05:12.400><c> won't</c>

00:05:12.710 --> 00:05:12.720 align:start position:0%
won't want you to use maybe they won't
 

00:05:12.720 --> 00:05:14.710 align:start position:0%
won't want you to use maybe they won't
want<00:05:12.960><c> you</c><00:05:13.120><c> to</c><00:05:13.280><c> use</c><00:05:13.520><c> this</c><00:05:13.759><c> alphanumerical</c>

00:05:14.710 --> 00:05:14.720 align:start position:0%
want you to use this alphanumerical
 

00:05:14.720 --> 00:05:16.390 align:start position:0%
want you to use this alphanumerical
function<00:05:15.280><c> and</c><00:05:15.360><c> they</c><00:05:15.520><c> want</c><00:05:15.680><c> you</c><00:05:15.759><c> to</c><00:05:15.919><c> implement</c>

00:05:16.390 --> 00:05:16.400 align:start position:0%
function and they want you to implement
 

00:05:16.400 --> 00:05:18.550 align:start position:0%
function and they want you to implement
it<00:05:16.479><c> yourself</c><00:05:17.360><c> and</c><00:05:17.600><c> maybe</c><00:05:18.000><c> they</c><00:05:18.160><c> don't</c><00:05:18.400><c> want</c>

00:05:18.550 --> 00:05:18.560 align:start position:0%
it yourself and maybe they don't want
 

00:05:18.560 --> 00:05:20.950 align:start position:0%
it yourself and maybe they don't want
you<00:05:18.720><c> to</c><00:05:18.960><c> use</c><00:05:19.440><c> extra</c><00:05:19.759><c> memory</c><00:05:20.160><c> clearly</c><00:05:20.560><c> we</c><00:05:20.720><c> use</c>

00:05:20.950 --> 00:05:20.960 align:start position:0%
you to use extra memory clearly we use
 

00:05:20.960 --> 00:05:23.430 align:start position:0%
you to use extra memory clearly we use
extra<00:05:21.280><c> memory</c><00:05:21.759><c> by</c><00:05:22.000><c> building</c><00:05:22.479><c> the</c><00:05:22.639><c> new</c><00:05:22.880><c> string</c>

00:05:23.430 --> 00:05:23.440 align:start position:0%
extra memory by building the new string
 

00:05:23.440 --> 00:05:25.110 align:start position:0%
extra memory by building the new string
and<00:05:23.600><c> we</c><00:05:23.759><c> actually</c><00:05:24.080><c> used</c><00:05:24.320><c> extra</c><00:05:24.560><c> memory</c><00:05:24.960><c> over</c>

00:05:25.110 --> 00:05:25.120 align:start position:0%
and we actually used extra memory over
 

00:05:25.120 --> 00:05:27.189 align:start position:0%
and we actually used extra memory over
here<00:05:25.360><c> when</c><00:05:25.520><c> we</c><00:05:25.759><c> reversed</c><00:05:26.400><c> the</c><00:05:26.560><c> string</c><00:05:27.039><c> we</c>

00:05:27.189 --> 00:05:27.199 align:start position:0%
here when we reversed the string we
 

00:05:27.199 --> 00:05:28.629 align:start position:0%
here when we reversed the string we
created<00:05:27.680><c> a</c><00:05:27.759><c> new</c><00:05:27.919><c> string</c><00:05:28.240><c> that</c><00:05:28.320><c> was</c><00:05:28.560><c> the</c>

00:05:28.629 --> 00:05:28.639 align:start position:0%
created a new string that was the
 

00:05:28.639 --> 00:05:30.950 align:start position:0%
created a new string that was the
reversal<00:05:29.440><c> of</c><00:05:29.600><c> the</c><00:05:29.759><c> original</c><00:05:30.479><c> so</c><00:05:30.639><c> let's</c><00:05:30.800><c> see</c>

00:05:30.950 --> 00:05:30.960 align:start position:0%
reversal of the original so let's see
 

00:05:30.960 --> 00:05:32.390 align:start position:0%
reversal of the original so let's see
how<00:05:31.120><c> we</c><00:05:31.280><c> can</c><00:05:31.440><c> actually</c><00:05:31.759><c> improve</c><00:05:32.240><c> this</c>

00:05:32.390 --> 00:05:32.400 align:start position:0%
how we can actually improve this
 

00:05:32.400 --> 00:05:35.110 align:start position:0%
how we can actually improve this
solution<00:05:33.280><c> okay</c><00:05:33.520><c> so</c><00:05:33.680><c> now</c><00:05:33.840><c> let's</c><00:05:34.160><c> see</c><00:05:34.720><c> how</c><00:05:34.960><c> we</c>

00:05:35.110 --> 00:05:35.120 align:start position:0%
solution okay so now let's see how we
 

00:05:35.120 --> 00:05:36.790 align:start position:0%
solution okay so now let's see how we
can<00:05:35.280><c> actually</c><00:05:35.600><c> solve</c><00:05:35.840><c> this</c><00:05:36.080><c> problem</c><00:05:36.400><c> with</c>

00:05:36.790 --> 00:05:36.800 align:start position:0%
can actually solve this problem with
 

00:05:36.800 --> 00:05:39.510 align:start position:0%
can actually solve this problem with
constant<00:05:37.520><c> extra</c><00:05:38.080><c> memory</c><00:05:38.639><c> without</c><00:05:39.120><c> using</c>

00:05:39.510 --> 00:05:39.520 align:start position:0%
constant extra memory without using
 

00:05:39.520 --> 00:05:41.510 align:start position:0%
constant extra memory without using
extra<00:05:39.840><c> memory</c><00:05:40.160><c> without</c><00:05:40.479><c> creating</c><00:05:41.039><c> a</c><00:05:41.199><c> new</c>

00:05:41.510 --> 00:05:41.520 align:start position:0%
extra memory without creating a new
 

00:05:41.520 --> 00:05:43.830 align:start position:0%
extra memory without creating a new
version<00:05:42.000><c> of</c><00:05:42.160><c> this</c><00:05:42.400><c> string</c><00:05:42.880><c> and</c><00:05:43.199><c> the</c><00:05:43.280><c> main</c><00:05:43.520><c> way</c>

00:05:43.830 --> 00:05:43.840 align:start position:0%
version of this string and the main way
 

00:05:43.840 --> 00:05:45.590 align:start position:0%
version of this string and the main way
is<00:05:43.919><c> going</c><00:05:44.000><c> to</c><00:05:44.080><c> be</c><00:05:44.240><c> by</c><00:05:44.479><c> using</c><00:05:44.880><c> pointers</c><00:05:45.440><c> so</c>

00:05:45.590 --> 00:05:45.600 align:start position:0%
is going to be by using pointers so
 

00:05:45.600 --> 00:05:47.110 align:start position:0%
is going to be by using pointers so
we're<00:05:45.759><c> going</c><00:05:45.840><c> to</c><00:05:45.919><c> have</c><00:05:46.080><c> two</c><00:05:46.240><c> pointers</c><00:05:46.639><c> a</c><00:05:46.800><c> left</c>

00:05:47.110 --> 00:05:47.120 align:start position:0%
we're going to have two pointers a left
 

00:05:47.120 --> 00:05:49.510 align:start position:0%
we're going to have two pointers a left
pointer<00:05:47.759><c> and</c><00:05:48.080><c> a</c><00:05:48.320><c> right</c><00:05:48.720><c> pointer</c><00:05:49.199><c> because</c>

00:05:49.510 --> 00:05:49.520 align:start position:0%
pointer and a right pointer because
 

00:05:49.520 --> 00:05:51.430 align:start position:0%
pointer and a right pointer because
remember<00:05:50.080><c> there</c><00:05:50.320><c> are</c><00:05:50.560><c> multiple</c><00:05:51.039><c> ways</c><00:05:51.280><c> to</c>

00:05:51.430 --> 00:05:51.440 align:start position:0%
remember there are multiple ways to
 

00:05:51.440 --> 00:05:53.110 align:start position:0%
remember there are multiple ways to
check<00:05:51.680><c> if</c><00:05:51.759><c> a</c><00:05:51.919><c> string</c><00:05:52.240><c> is</c><00:05:52.400><c> a</c><00:05:52.479><c> palindrome</c><00:05:52.960><c> we</c>

00:05:53.110 --> 00:05:53.120 align:start position:0%
check if a string is a palindrome we
 

00:05:53.120 --> 00:05:55.430 align:start position:0%
check if a string is a palindrome we
don't<00:05:53.440><c> have</c><00:05:53.680><c> to</c><00:05:53.840><c> reverse</c><00:05:54.320><c> it</c><00:05:54.400><c> we</c><00:05:54.639><c> can</c><00:05:54.960><c> just</c>

00:05:55.430 --> 00:05:55.440 align:start position:0%
don't have to reverse it we can just
 

00:05:55.440 --> 00:05:57.350 align:start position:0%
don't have to reverse it we can just
compare<00:05:55.840><c> the</c><00:05:56.000><c> left</c><00:05:56.240><c> character</c><00:05:56.880><c> and</c><00:05:57.199><c> the</c>

00:05:57.350 --> 00:05:57.360 align:start position:0%
compare the left character and the
 

00:05:57.360 --> 00:05:59.270 align:start position:0%
compare the left character and the
rightmost<00:05:57.840><c> character</c><00:05:58.319><c> if</c><00:05:58.400><c> they're</c><00:05:58.720><c> equal</c>

00:05:59.270 --> 00:05:59.280 align:start position:0%
rightmost character if they're equal
 

00:05:59.280 --> 00:06:01.350 align:start position:0%
rightmost character if they're equal
then<00:05:59.520><c> we</c><00:05:59.759><c> shift</c><00:06:00.080><c> the</c><00:06:00.160><c> pointers</c><00:06:00.720><c> in</c><00:06:01.039><c> the</c><00:06:01.199><c> left</c>

00:06:01.350 --> 00:06:01.360 align:start position:0%
then we shift the pointers in the left
 

00:06:01.360 --> 00:06:02.950 align:start position:0%
then we shift the pointers in the left
pointer<00:06:01.759><c> comes</c><00:06:02.000><c> here</c><00:06:02.240><c> and</c><00:06:02.319><c> the</c><00:06:02.479><c> right</c><00:06:02.639><c> pointer</c>

00:06:02.950 --> 00:06:02.960 align:start position:0%
pointer comes here and the right pointer
 

00:06:02.960 --> 00:06:05.029 align:start position:0%
pointer comes here and the right pointer
goes<00:06:03.360><c> here</c><00:06:03.919><c> and</c><00:06:04.000><c> then</c><00:06:04.160><c> we</c><00:06:04.319><c> can</c><00:06:04.479><c> continue</c><00:06:04.880><c> to</c>

00:06:05.029 --> 00:06:05.039 align:start position:0%
goes here and then we can continue to
 

00:06:05.039 --> 00:06:06.790 align:start position:0%
goes here and then we can continue to
check<00:06:05.440><c> to</c><00:06:05.600><c> make</c><00:06:05.759><c> sure</c><00:06:05.919><c> that</c><00:06:06.080><c> the</c><00:06:06.240><c> characters</c>

00:06:06.790 --> 00:06:06.800 align:start position:0%
check to make sure that the characters
 

00:06:06.800 --> 00:06:09.270 align:start position:0%
check to make sure that the characters
are<00:06:07.120><c> equal</c><00:06:07.680><c> if</c><00:06:07.840><c> they're</c><00:06:08.080><c> not</c><00:06:08.319><c> equal</c><00:06:08.880><c> then</c><00:06:09.120><c> we</c>

00:06:09.270 --> 00:06:09.280 align:start position:0%
are equal if they're not equal then we
 

00:06:09.280 --> 00:06:11.510 align:start position:0%
are equal if they're not equal then we
return<00:06:10.160><c> but</c><00:06:10.319><c> how</c><00:06:10.479><c> do</c><00:06:10.560><c> we</c><00:06:10.639><c> know</c><00:06:10.880><c> when</c><00:06:11.039><c> to</c><00:06:11.199><c> stop</c>

00:06:11.510 --> 00:06:11.520 align:start position:0%
return but how do we know when to stop
 

00:06:11.520 --> 00:06:13.189 align:start position:0%
return but how do we know when to stop
well<00:06:11.680><c> we're</c><00:06:11.840><c> going</c><00:06:11.919><c> to</c><00:06:12.080><c> keep</c><00:06:12.639><c> incrementing</c>

00:06:13.189 --> 00:06:13.199 align:start position:0%
well we're going to keep incrementing
 

00:06:13.199 --> 00:06:14.550 align:start position:0%
well we're going to keep incrementing
the<00:06:13.360><c> left</c><00:06:13.600><c> pointer</c><00:06:13.919><c> and</c><00:06:14.000><c> we're</c><00:06:14.160><c> going</c><00:06:14.240><c> to</c><00:06:14.319><c> keep</c>

00:06:14.550 --> 00:06:14.560 align:start position:0%
the left pointer and we're going to keep
 

00:06:14.560 --> 00:06:16.629 align:start position:0%
the left pointer and we're going to keep
decrementing<00:06:15.360><c> the</c><00:06:15.600><c> right</c><00:06:15.840><c> pointer</c><00:06:16.319><c> until</c>

00:06:16.629 --> 00:06:16.639 align:start position:0%
decrementing the right pointer until
 

00:06:16.639 --> 00:06:19.029 align:start position:0%
decrementing the right pointer until
eventually<00:06:17.199><c> they</c><00:06:17.520><c> meet</c><00:06:17.840><c> in</c><00:06:18.000><c> the</c><00:06:18.160><c> middle</c><00:06:18.560><c> or</c>

00:06:19.029 --> 00:06:19.039 align:start position:0%
eventually they meet in the middle or
 

00:06:19.039 --> 00:06:21.270 align:start position:0%
eventually they meet in the middle or
the<00:06:19.280><c> left</c><00:06:19.520><c> pointer</c><00:06:20.000><c> you</c><00:06:20.080><c> know</c><00:06:20.319><c> passes</c><00:06:21.120><c> the</c>

00:06:21.270 --> 00:06:21.280 align:start position:0%
the left pointer you know passes the
 

00:06:21.280 --> 00:06:22.550 align:start position:0%
the left pointer you know passes the
right<00:06:21.520><c> pointer</c><00:06:21.840><c> right</c><00:06:22.000><c> the</c><00:06:22.080><c> left</c><00:06:22.319><c> pointer</c>

00:06:22.550 --> 00:06:22.560 align:start position:0%
right pointer right the left pointer
 

00:06:22.560 --> 00:06:23.749 align:start position:0%
right pointer right the left pointer
becomes<00:06:22.880><c> here</c><00:06:23.120><c> and</c><00:06:23.199><c> the</c><00:06:23.280><c> right</c><00:06:23.440><c> pointer</c><00:06:23.680><c> is</c>

00:06:23.749 --> 00:06:23.759 align:start position:0%
becomes here and the right pointer is
 

00:06:23.759 --> 00:06:25.430 align:start position:0%
becomes here and the right pointer is
over<00:06:24.000><c> here</c><00:06:24.240><c> that's</c><00:06:24.479><c> how</c><00:06:24.639><c> we</c><00:06:24.800><c> know</c><00:06:24.960><c> when</c><00:06:25.120><c> we</c><00:06:25.280><c> can</c>

00:06:25.430 --> 00:06:25.440 align:start position:0%
over here that's how we know when we can
 

00:06:25.440 --> 00:06:28.390 align:start position:0%
over here that's how we know when we can
stop<00:06:25.840><c> or</c><00:06:26.319><c> maybe</c><00:06:26.880><c> they</c><00:06:27.039><c> will</c><00:06:27.360><c> meet</c>

00:06:28.390 --> 00:06:28.400 align:start position:0%
stop or maybe they will meet
 

00:06:28.400 --> 00:06:30.629 align:start position:0%
stop or maybe they will meet
exactly<00:06:28.960><c> at</c><00:06:29.120><c> the</c><00:06:29.199><c> same</c><00:06:29.440><c> character</c><00:06:29.919><c> if</c><00:06:30.400><c> the</c>

00:06:30.629 --> 00:06:30.639 align:start position:0%
exactly at the same character if the
 

00:06:30.639 --> 00:06:32.550 align:start position:0%
exactly at the same character if the
length<00:06:30.960><c> of</c><00:06:31.039><c> the</c><00:06:31.199><c> string</c><00:06:31.440><c> happens</c><00:06:31.840><c> to</c><00:06:31.919><c> be</c><00:06:32.080><c> odd</c>

00:06:32.550 --> 00:06:32.560 align:start position:0%
length of the string happens to be odd
 

00:06:32.560 --> 00:06:34.790 align:start position:0%
length of the string happens to be odd
okay<00:06:32.800><c> so</c><00:06:32.960><c> that's</c><00:06:33.280><c> actually</c><00:06:33.680><c> pretty</c><00:06:34.080><c> simple</c>

00:06:34.790 --> 00:06:34.800 align:start position:0%
okay so that's actually pretty simple
 

00:06:34.800 --> 00:06:37.350 align:start position:0%
okay so that's actually pretty simple
not<00:06:34.960><c> too</c><00:06:35.199><c> bad</c><00:06:35.840><c> so</c><00:06:36.479><c> what</c><00:06:36.639><c> are</c><00:06:36.800><c> we</c><00:06:36.880><c> gonna</c><00:06:37.039><c> do</c><00:06:37.199><c> okay</c>

00:06:37.350 --> 00:06:37.360 align:start position:0%
not too bad so what are we gonna do okay
 

00:06:37.360 --> 00:06:38.950 align:start position:0%
not too bad so what are we gonna do okay
left<00:06:37.600><c> is</c><00:06:37.680><c> here</c><00:06:37.840><c> right</c><00:06:38.080><c> is</c><00:06:38.160><c> here</c><00:06:38.560><c> this</c><00:06:38.800><c> is</c>

00:06:38.950 --> 00:06:38.960 align:start position:0%
left is here right is here this is
 

00:06:38.960 --> 00:06:40.390 align:start position:0%
left is here right is here this is
capital<00:06:39.360><c> a</c><00:06:39.600><c> but</c><00:06:39.680><c> of</c><00:06:39.759><c> course</c><00:06:40.000><c> we're</c><00:06:40.160><c> gonna</c>

00:06:40.390 --> 00:06:40.400 align:start position:0%
capital a but of course we're gonna
 

00:06:40.400 --> 00:06:41.749 align:start position:0%
capital a but of course we're gonna
convert<00:06:40.720><c> it</c><00:06:40.800><c> to</c><00:06:40.960><c> lowercase</c><00:06:41.520><c> this</c><00:06:41.680><c> is</c>

00:06:41.749 --> 00:06:41.759 align:start position:0%
convert it to lowercase this is
 

00:06:41.759 --> 00:06:44.150 align:start position:0%
convert it to lowercase this is
lowercase<00:06:42.319><c> a</c><00:06:42.560><c> so</c><00:06:42.720><c> they're</c><00:06:42.960><c> equal</c><00:06:43.360><c> right</c><00:06:43.600><c> okay</c>

00:06:44.150 --> 00:06:44.160 align:start position:0%
lowercase a so they're equal right okay
 

00:06:44.160 --> 00:06:46.309 align:start position:0%
lowercase a so they're equal right okay
so<00:06:44.639><c> then</c><00:06:44.960><c> right</c><00:06:45.280><c> pointer</c><00:06:45.840><c> is</c><00:06:46.000><c> gonna</c><00:06:46.160><c> be</c>

00:06:46.309 --> 00:06:46.319 align:start position:0%
so then right pointer is gonna be
 

00:06:46.319 --> 00:06:48.629 align:start position:0%
so then right pointer is gonna be
decremented<00:06:46.880><c> by</c><00:06:47.120><c> one</c><00:06:47.759><c> so</c><00:06:48.000><c> the</c><00:06:48.080><c> right</c><00:06:48.319><c> pointer</c>

00:06:48.629 --> 00:06:48.639 align:start position:0%
decremented by one so the right pointer
 

00:06:48.639 --> 00:06:50.469 align:start position:0%
decremented by one so the right pointer
is<00:06:48.720><c> going</c><00:06:48.800><c> to</c><00:06:48.880><c> be</c><00:06:49.120><c> over</c><00:06:49.520><c> here</c><00:06:49.919><c> at</c><00:06:50.000><c> the</c><00:06:50.240><c> m</c>

00:06:50.469 --> 00:06:50.479 align:start position:0%
is going to be over here at the m
 

00:06:50.479 --> 00:06:51.670 align:start position:0%
is going to be over here at the m
character<00:06:50.880><c> left</c><00:06:51.039><c> corner</c><00:06:51.360><c> is</c><00:06:51.440><c> going</c><00:06:51.440><c> to</c><00:06:51.599><c> be</c>

00:06:51.670 --> 00:06:51.680 align:start position:0%
character left corner is going to be
 

00:06:51.680 --> 00:06:53.110 align:start position:0%
character left corner is going to be
incremented<00:06:52.160><c> by</c><00:06:52.319><c> one</c><00:06:52.560><c> and</c><00:06:52.720><c> it's</c><00:06:52.800><c> going</c><00:06:52.880><c> to</c><00:06:52.960><c> be</c>

00:06:53.110 --> 00:06:53.120 align:start position:0%
incremented by one and it's going to be
 

00:06:53.120 --> 00:06:55.670 align:start position:0%
incremented by one and it's going to be
here<00:06:53.440><c> well</c><00:06:53.840><c> we're</c><00:06:54.080><c> at</c><00:06:54.240><c> the</c><00:06:54.479><c> space</c><00:06:54.960><c> character</c>

00:06:55.670 --> 00:06:55.680 align:start position:0%
here well we're at the space character
 

00:06:55.680 --> 00:06:58.150 align:start position:0%
here well we're at the space character
but<00:06:55.840><c> remember</c><00:06:56.240><c> we</c><00:06:56.400><c> want</c><00:06:56.639><c> to</c><00:06:56.880><c> ignore</c><00:06:57.520><c> spaces</c><00:06:58.000><c> we</c>

00:06:58.150 --> 00:06:58.160 align:start position:0%
but remember we want to ignore spaces we
 

00:06:58.160 --> 00:07:00.070 align:start position:0%
but remember we want to ignore spaces we
want<00:06:58.319><c> to</c><00:06:58.479><c> ignore</c><00:06:59.039><c> everything</c><00:06:59.599><c> except</c><00:06:59.919><c> for</c>

00:07:00.070 --> 00:07:00.080 align:start position:0%
want to ignore everything except for
 

00:07:00.080 --> 00:07:02.469 align:start position:0%
want to ignore everything except for
alphanumerical<00:07:00.960><c> characters</c><00:07:01.599><c> and</c><00:07:02.000><c> can</c><00:07:02.160><c> we</c><00:07:02.319><c> try</c>

00:07:02.469 --> 00:07:02.479 align:start position:0%
alphanumerical characters and can we try
 

00:07:02.479 --> 00:07:04.790 align:start position:0%
alphanumerical characters and can we try
to<00:07:02.639><c> do</c><00:07:02.800><c> this</c><00:07:02.960><c> without</c><00:07:03.440><c> using</c><00:07:03.840><c> a</c><00:07:04.080><c> built-in</c>

00:07:04.790 --> 00:07:04.800 align:start position:0%
to do this without using a built-in
 

00:07:04.800 --> 00:07:07.430 align:start position:0%
to do this without using a built-in
function<00:07:05.599><c> well</c><00:07:05.919><c> let</c><00:07:06.080><c> me</c><00:07:06.240><c> show</c><00:07:06.400><c> you</c><00:07:06.560><c> how</c><00:07:07.120><c> we</c><00:07:07.280><c> can</c>

00:07:07.430 --> 00:07:07.440 align:start position:0%
function well let me show you how we can
 

00:07:07.440 --> 00:07:09.270 align:start position:0%
function well let me show you how we can
kind<00:07:07.680><c> of</c><00:07:07.759><c> do</c><00:07:08.000><c> that</c><00:07:08.400><c> basically</c><00:07:08.800><c> i</c><00:07:08.880><c> did</c><00:07:09.120><c> some</c>

00:07:09.270 --> 00:07:09.280 align:start position:0%
kind of do that basically i did some
 

00:07:09.280 --> 00:07:11.029 align:start position:0%
kind of do that basically i did some
quick<00:07:09.599><c> googling</c><00:07:10.160><c> and</c><00:07:10.400><c> we're</c><00:07:10.720><c> actually</c><00:07:10.960><c> going</c>

00:07:11.029 --> 00:07:11.039 align:start position:0%
quick googling and we're actually going
 

00:07:11.039 --> 00:07:14.550 align:start position:0%
quick googling and we're actually going
to<00:07:11.199><c> use</c><00:07:11.599><c> ascii</c><00:07:12.160><c> values</c><00:07:12.960><c> to</c><00:07:13.120><c> determine</c><00:07:14.000><c> if</c><00:07:14.400><c> a</c>

00:07:14.550 --> 00:07:14.560 align:start position:0%
to use ascii values to determine if a
 

00:07:14.560 --> 00:07:16.870 align:start position:0%
to use ascii values to determine if a
character<00:07:14.880><c> is</c><00:07:15.039><c> alphanumerical</c><00:07:16.160><c> basically</c>

00:07:16.870 --> 00:07:16.880 align:start position:0%
character is alphanumerical basically
 

00:07:16.880 --> 00:07:18.710 align:start position:0%
character is alphanumerical basically
what<00:07:17.039><c> you</c><00:07:17.199><c> need</c><00:07:17.360><c> to</c><00:07:17.520><c> know</c><00:07:17.919><c> is</c><00:07:18.080><c> that</c><00:07:18.319><c> each</c>

00:07:18.710 --> 00:07:18.720 align:start position:0%
what you need to know is that each
 

00:07:18.720 --> 00:07:20.150 align:start position:0%
what you need to know is that each
symbol

00:07:20.150 --> 00:07:20.160 align:start position:0%
symbol
 

00:07:20.160 --> 00:07:22.790 align:start position:0%
symbol
you<00:07:20.319><c> know</c><00:07:20.560><c> ascii</c><00:07:20.960><c> symbols</c><00:07:21.360><c> is</c><00:07:21.440><c> 128</c><00:07:22.319><c> of</c><00:07:22.479><c> them</c>

00:07:22.790 --> 00:07:22.800 align:start position:0%
you know ascii symbols is 128 of them
 

00:07:22.800 --> 00:07:25.029 align:start position:0%
you know ascii symbols is 128 of them
and<00:07:23.360><c> lowercase</c><00:07:23.919><c> and</c><00:07:24.080><c> uppercase</c><00:07:24.639><c> english</c>

00:07:25.029 --> 00:07:25.039 align:start position:0%
and lowercase and uppercase english
 

00:07:25.039 --> 00:07:27.270 align:start position:0%
and lowercase and uppercase english
characters<00:07:25.599><c> happen</c><00:07:25.919><c> to</c><00:07:26.080><c> have</c><00:07:26.319><c> an</c><00:07:26.479><c> ascii</c><00:07:26.880><c> value</c>

00:07:27.270 --> 00:07:27.280 align:start position:0%
characters happen to have an ascii value
 

00:07:27.280 --> 00:07:28.550 align:start position:0%
characters happen to have an ascii value
associated<00:07:27.759><c> with</c><00:07:27.919><c> them</c><00:07:28.080><c> you</c><00:07:28.160><c> can</c><00:07:28.240><c> see</c><00:07:28.400><c> the</c>

00:07:28.550 --> 00:07:28.560 align:start position:0%
associated with them you can see the
 

00:07:28.560 --> 00:07:31.350 align:start position:0%
associated with them you can see the
integer<00:07:29.120><c> 0</c><00:07:29.520><c> has</c><00:07:29.680><c> an</c><00:07:29.840><c> ascii</c><00:07:30.160><c> value</c><00:07:30.400><c> associated</c>

00:07:31.350 --> 00:07:31.360 align:start position:0%
integer 0 has an ascii value associated
 

00:07:31.360 --> 00:07:35.749 align:start position:0%
integer 0 has an ascii value associated
48<00:07:32.319><c> uh</c><00:07:32.560><c> integer</c><00:07:32.960><c> 1</c><00:07:33.280><c> has</c><00:07:33.440><c> 49</c><00:07:34.319><c> integer</c><00:07:34.800><c> 2</c><00:07:35.039><c> has</c><00:07:35.360><c> 50</c>

00:07:35.749 --> 00:07:35.759 align:start position:0%
48 uh integer 1 has 49 integer 2 has 50
 

00:07:35.759 --> 00:07:37.749 align:start position:0%
48 uh integer 1 has 49 integer 2 has 50
so<00:07:35.919><c> they</c><00:07:36.080><c> are</c><00:07:36.319><c> contiguous</c><00:07:37.199><c> all</c><00:07:37.280><c> the</c><00:07:37.360><c> way</c><00:07:37.599><c> down</c>

00:07:37.749 --> 00:07:37.759 align:start position:0%
so they are contiguous all the way down
 

00:07:37.759 --> 00:07:40.790 align:start position:0%
so they are contiguous all the way down
to<00:07:38.000><c> integer</c><00:07:38.479><c> 9</c><00:07:38.960><c> which</c><00:07:39.199><c> is</c><00:07:39.360><c> at</c><00:07:39.599><c> 57.</c><00:07:40.400><c> so</c><00:07:40.479><c> that's</c>

00:07:40.790 --> 00:07:40.800 align:start position:0%
to integer 9 which is at 57. so that's
 

00:07:40.800 --> 00:07:43.670 align:start position:0%
to integer 9 which is at 57. so that's
important<00:07:41.440><c> and</c><00:07:41.599><c> we</c><00:07:41.759><c> also</c><00:07:42.000><c> have</c><00:07:42.160><c> uppercase</c><00:07:42.720><c> a</c>

00:07:43.670 --> 00:07:43.680 align:start position:0%
important and we also have uppercase a
 

00:07:43.680 --> 00:07:46.469 align:start position:0%
important and we also have uppercase a
starting<00:07:44.000><c> at</c><00:07:44.160><c> 65</c><00:07:44.800><c> going</c><00:07:45.039><c> all</c><00:07:45.199><c> the</c><00:07:45.280><c> way</c><00:07:45.440><c> down</c>

00:07:46.469 --> 00:07:46.479 align:start position:0%
starting at 65 going all the way down
 

00:07:46.479 --> 00:07:48.550 align:start position:0%
starting at 65 going all the way down
to<00:07:46.720><c> 90.</c><00:07:47.120><c> they</c><00:07:47.280><c> are</c><00:07:47.440><c> contiguous</c><00:07:48.080><c> as</c><00:07:48.240><c> well</c><00:07:48.479><c> and</c>

00:07:48.550 --> 00:07:48.560 align:start position:0%
to 90. they are contiguous as well and
 

00:07:48.560 --> 00:07:50.710 align:start position:0%
to 90. they are contiguous as well and
then<00:07:48.800><c> eventually</c><00:07:49.280><c> we</c><00:07:49.360><c> can</c><00:07:49.520><c> get</c><00:07:49.680><c> to</c><00:07:49.840><c> lowercase</c>

00:07:50.710 --> 00:07:50.720 align:start position:0%
then eventually we can get to lowercase
 

00:07:50.720 --> 00:07:53.110 align:start position:0%
then eventually we can get to lowercase
starting<00:07:51.039><c> at</c><00:07:51.199><c> 97</c><00:07:52.000><c> going</c><00:07:52.240><c> all</c><00:07:52.319><c> the</c><00:07:52.400><c> way</c><00:07:52.639><c> down</c><00:07:52.960><c> to</c>

00:07:53.110 --> 00:07:53.120 align:start position:0%
starting at 97 going all the way down to
 

00:07:53.120 --> 00:07:55.510 align:start position:0%
starting at 97 going all the way down to
122.<00:07:53.840><c> these</c><00:07:54.080><c> are</c><00:07:54.160><c> contiguous</c><00:07:54.720><c> as</c><00:07:54.800><c> well</c><00:07:55.280><c> using</c>

00:07:55.510 --> 00:07:55.520 align:start position:0%
122. these are contiguous as well using
 

00:07:55.520 --> 00:07:57.589 align:start position:0%
122. these are contiguous as well using
this<00:07:55.759><c> information</c><00:07:56.639><c> in</c><00:07:56.960><c> pretty</c><00:07:57.120><c> much</c><00:07:57.360><c> every</c>

00:07:57.589 --> 00:07:57.599 align:start position:0%
this information in pretty much every
 

00:07:57.599 --> 00:07:59.350 align:start position:0%
this information in pretty much every
language<00:07:58.160><c> you</c><00:07:58.400><c> can</c><00:07:58.720><c> write</c><00:07:58.960><c> your</c><00:07:59.120><c> own</c>

00:07:59.350 --> 00:07:59.360 align:start position:0%
language you can write your own
 

00:07:59.360 --> 00:08:01.990 align:start position:0%
language you can write your own
alphanumerical<00:08:00.720><c> character</c><00:08:01.360><c> detecting</c>

00:08:01.990 --> 00:08:02.000 align:start position:0%
alphanumerical character detecting
 

00:08:02.000 --> 00:08:03.589 align:start position:0%
alphanumerical character detecting
function<00:08:02.639><c> and</c><00:08:02.720><c> i'll</c><00:08:02.879><c> show</c><00:08:03.039><c> you</c><00:08:03.199><c> how</c><00:08:03.360><c> to</c><00:08:03.440><c> do</c>

00:08:03.589 --> 00:08:03.599 align:start position:0%
function and i'll show you how to do
 

00:08:03.599 --> 00:08:05.990 align:start position:0%
function and i'll show you how to do
that<00:08:03.840><c> in</c><00:08:04.000><c> a</c><00:08:04.240><c> few</c><00:08:04.560><c> minutes</c><00:08:05.199><c> but</c><00:08:05.360><c> for</c><00:08:05.520><c> now</c><00:08:05.759><c> just</c>

00:08:05.990 --> 00:08:06.000 align:start position:0%
that in a few minutes but for now just
 

00:08:06.000 --> 00:08:07.670 align:start position:0%
that in a few minutes but for now just
assume<00:08:06.400><c> that</c><00:08:06.560><c> we</c><00:08:06.800><c> do</c><00:08:07.039><c> have</c><00:08:07.280><c> our</c><00:08:07.520><c> own</c>

00:08:07.670 --> 00:08:07.680 align:start position:0%
assume that we do have our own
 

00:08:07.680 --> 00:08:09.749 align:start position:0%
assume that we do have our own
alphanumerical<00:08:08.560><c> function</c><00:08:09.120><c> and</c><00:08:09.360><c> our</c><00:08:09.520><c> left</c>

00:08:09.749 --> 00:08:09.759 align:start position:0%
alphanumerical function and our left
 

00:08:09.759 --> 00:08:11.510 align:start position:0%
alphanumerical function and our left
pointer<00:08:10.080><c> is</c><00:08:10.240><c> over</c><00:08:10.400><c> here</c><00:08:10.720><c> what</c><00:08:10.960><c> do</c><00:08:11.120><c> we</c><00:08:11.199><c> want</c><00:08:11.360><c> to</c>

00:08:11.510 --> 00:08:11.520 align:start position:0%
pointer is over here what do we want to
 

00:08:11.520 --> 00:08:13.749 align:start position:0%
pointer is over here what do we want to
do<00:08:11.919><c> we</c><00:08:12.080><c> don't</c><00:08:12.400><c> really</c><00:08:12.800><c> want</c><00:08:12.960><c> to</c><00:08:13.120><c> compare</c><00:08:13.520><c> this</c>

00:08:13.749 --> 00:08:13.759 align:start position:0%
do we don't really want to compare this
 

00:08:13.759 --> 00:08:16.070 align:start position:0%
do we don't really want to compare this
character<00:08:14.400><c> with</c><00:08:14.720><c> the</c><00:08:14.800><c> character</c><00:08:15.440><c> m</c><00:08:15.759><c> on</c><00:08:15.919><c> the</c>

00:08:16.070 --> 00:08:16.080 align:start position:0%
character with the character m on the
 

00:08:16.080 --> 00:08:18.309 align:start position:0%
character with the character m on the
right<00:08:16.400><c> side</c><00:08:16.800><c> do</c><00:08:16.960><c> we</c><00:08:17.440><c> because</c><00:08:17.680><c> we</c><00:08:17.759><c> want</c><00:08:17.919><c> to</c><00:08:18.000><c> skip</c>

00:08:18.309 --> 00:08:18.319 align:start position:0%
right side do we because we want to skip
 

00:08:18.319 --> 00:08:20.070 align:start position:0%
right side do we because we want to skip
this<00:08:18.479><c> character</c><00:08:18.800><c> so</c><00:08:18.960><c> how</c><00:08:19.120><c> do</c><00:08:19.199><c> we</c><00:08:19.280><c> skip</c><00:08:19.599><c> it</c><00:08:19.759><c> well</c>

00:08:20.070 --> 00:08:20.080 align:start position:0%
this character so how do we skip it well
 

00:08:20.080 --> 00:08:22.629 align:start position:0%
this character so how do we skip it well
we<00:08:20.240><c> can</c><00:08:20.479><c> create</c><00:08:20.960><c> a</c><00:08:21.280><c> while</c><00:08:21.759><c> loop</c>

00:08:22.629 --> 00:08:22.639 align:start position:0%
we can create a while loop
 

00:08:22.639 --> 00:08:25.869 align:start position:0%
we can create a while loop
so<00:08:23.120><c> while</c><00:08:23.520><c> our</c><00:08:23.919><c> left</c><00:08:24.319><c> pointer</c><00:08:24.960><c> is</c><00:08:25.360><c> not</c>

00:08:25.869 --> 00:08:25.879 align:start position:0%
so while our left pointer is not
 

00:08:25.879 --> 00:08:27.909 align:start position:0%
so while our left pointer is not
alphanumerical<00:08:27.120><c> then</c><00:08:27.440><c> we're</c><00:08:27.599><c> gonna</c>

00:08:27.909 --> 00:08:27.919 align:start position:0%
alphanumerical then we're gonna
 

00:08:27.919 --> 00:08:29.830 align:start position:0%
alphanumerical then we're gonna
increment<00:08:28.560><c> left</c><00:08:28.800><c> right</c><00:08:28.960><c> we're</c><00:08:29.120><c> gonna</c><00:08:29.199><c> do</c><00:08:29.440><c> left</c>

00:08:29.830 --> 00:08:29.840 align:start position:0%
increment left right we're gonna do left
 

00:08:29.840 --> 00:08:31.749 align:start position:0%
increment left right we're gonna do left
plus<00:08:30.160><c> plus</c><00:08:30.479><c> we're</c><00:08:30.720><c> gonna</c><00:08:30.960><c> keep</c><00:08:31.280><c> incrementing</c>

00:08:31.749 --> 00:08:31.759 align:start position:0%
plus plus we're gonna keep incrementing
 

00:08:31.759 --> 00:08:34.230 align:start position:0%
plus plus we're gonna keep incrementing
left<00:08:32.159><c> while</c><00:08:32.560><c> it</c><00:08:32.719><c> is</c><00:08:32.959><c> not</c><00:08:33.200><c> a</c><00:08:33.440><c> alphanumerical</c>

00:08:34.230 --> 00:08:34.240 align:start position:0%
left while it is not a alphanumerical
 

00:08:34.240 --> 00:08:36.790 align:start position:0%
left while it is not a alphanumerical
character<00:08:34.640><c> because</c><00:08:34.880><c> we</c><00:08:35.039><c> want</c><00:08:35.200><c> to</c><00:08:35.440><c> ignore</c><00:08:36.320><c> uh</c>

00:08:36.790 --> 00:08:36.800 align:start position:0%
character because we want to ignore uh
 

00:08:36.800 --> 00:08:38.630 align:start position:0%
character because we want to ignore uh
characters<00:08:37.200><c> that</c><00:08:37.360><c> are</c><00:08:37.519><c> not</c><00:08:37.760><c> alphanumeric</c><00:08:38.479><c> so</c>

00:08:38.630 --> 00:08:38.640 align:start position:0%
characters that are not alphanumeric so
 

00:08:38.640 --> 00:08:40.630 align:start position:0%
characters that are not alphanumeric so
we're<00:08:38.719><c> gonna</c><00:08:38.959><c> increment</c><00:08:39.360><c> left</c><00:08:39.599><c> one</c><00:08:39.760><c> more</c><00:08:40.000><c> time</c>

00:08:40.630 --> 00:08:40.640 align:start position:0%
we're gonna increment left one more time
 

00:08:40.640 --> 00:08:43.589 align:start position:0%
we're gonna increment left one more time
now<00:08:41.200><c> luckily</c><00:08:41.839><c> it</c><00:08:42.159><c> is</c><00:08:42.640><c> a</c><00:08:42.880><c> alphanumerical</c>

00:08:43.589 --> 00:08:43.599 align:start position:0%
now luckily it is a alphanumerical
 

00:08:43.599 --> 00:08:45.430 align:start position:0%
now luckily it is a alphanumerical
character<00:08:44.000><c> it's</c><00:08:44.159><c> the</c><00:08:44.320><c> character</c><00:08:44.800><c> m</c><00:08:45.120><c> so</c><00:08:45.279><c> we</c>

00:08:45.430 --> 00:08:45.440 align:start position:0%
character it's the character m so we
 

00:08:45.440 --> 00:08:47.509 align:start position:0%
character it's the character m so we
compare<00:08:46.080><c> left</c><00:08:46.399><c> and</c><00:08:46.560><c> right</c><00:08:46.880><c> they're</c><00:08:47.120><c> exactly</c>

00:08:47.509 --> 00:08:47.519 align:start position:0%
compare left and right they're exactly
 

00:08:47.519 --> 00:08:49.269 align:start position:0%
compare left and right they're exactly
the<00:08:47.600><c> same</c><00:08:48.160><c> so</c><00:08:48.399><c> we</c><00:08:48.560><c> continue</c><00:08:49.040><c> with</c><00:08:49.200><c> our</c>

00:08:49.269 --> 00:08:49.279 align:start position:0%
the same so we continue with our
 

00:08:49.279 --> 00:08:52.310 align:start position:0%
the same so we continue with our
algorithm<00:08:49.760><c> we</c><00:08:50.080><c> uh</c><00:08:50.320><c> decrement</c><00:08:50.959><c> r</c><00:08:51.519><c> over</c><00:08:51.839><c> here</c>

00:08:52.310 --> 00:08:52.320 align:start position:0%
algorithm we uh decrement r over here
 

00:08:52.320 --> 00:08:54.310 align:start position:0%
algorithm we uh decrement r over here
increment<00:08:52.800><c> left</c><00:08:53.200><c> over</c><00:08:53.440><c> here</c><00:08:54.000><c> right</c><00:08:54.160><c> now</c>

00:08:54.310 --> 00:08:54.320 align:start position:0%
increment left over here right now
 

00:08:54.320 --> 00:08:56.230 align:start position:0%
increment left over here right now
they're<00:08:54.480><c> both</c><00:08:54.720><c> at</c><00:08:54.880><c> the</c><00:08:55.040><c> same</c><00:08:55.279><c> character</c><00:08:56.000><c> and</c>

00:08:56.230 --> 00:08:56.240 align:start position:0%
they're both at the same character and
 

00:08:56.240 --> 00:08:57.670 align:start position:0%
they're both at the same character and
we're<00:08:56.399><c> going</c><00:08:56.480><c> to</c><00:08:56.560><c> continue</c><00:08:56.959><c> the</c><00:08:57.120><c> algorithm</c><00:08:57.519><c> so</c>

00:08:57.670 --> 00:08:57.680 align:start position:0%
we're going to continue the algorithm so
 

00:08:57.680 --> 00:08:59.750 align:start position:0%
we're going to continue the algorithm so
that's<00:08:57.920><c> the</c><00:08:58.160><c> main</c><00:08:58.480><c> idea</c><00:08:58.959><c> i</c><00:08:59.120><c> won't</c><00:08:59.360><c> run</c><00:08:59.519><c> through</c>

00:08:59.750 --> 00:08:59.760 align:start position:0%
that's the main idea i won't run through
 

00:08:59.760 --> 00:09:01.430 align:start position:0%
that's the main idea i won't run through
this<00:08:59.920><c> entire</c><00:09:00.320><c> string</c><00:09:00.640><c> because</c><00:09:00.880><c> it's</c><00:09:01.120><c> pretty</c>

00:09:01.430 --> 00:09:01.440 align:start position:0%
this entire string because it's pretty
 

00:09:01.440 --> 00:09:04.310 align:start position:0%
this entire string because it's pretty
long<00:09:01.920><c> but</c><00:09:02.160><c> eventually</c><00:09:02.959><c> the</c><00:09:03.200><c> strings</c><00:09:04.000><c> will</c>

00:09:04.310 --> 00:09:04.320 align:start position:0%
long but eventually the strings will
 

00:09:04.320 --> 00:09:06.550 align:start position:0%
long but eventually the strings will
meet<00:09:04.640><c> in</c><00:09:04.800><c> the</c><00:09:04.959><c> middle</c><00:09:05.600><c> for</c><00:09:05.760><c> example</c><00:09:06.080><c> over</c><00:09:06.320><c> here</c>

00:09:06.550 --> 00:09:06.560 align:start position:0%
meet in the middle for example over here
 

00:09:06.560 --> 00:09:08.470 align:start position:0%
meet in the middle for example over here
somewhere<00:09:06.959><c> maybe</c><00:09:07.519><c> at</c><00:09:07.760><c> that</c><00:09:08.000><c> point</c><00:09:08.160><c> we'll</c><00:09:08.320><c> see</c>

00:09:08.470 --> 00:09:08.480 align:start position:0%
somewhere maybe at that point we'll see
 

00:09:08.480 --> 00:09:10.070 align:start position:0%
somewhere maybe at that point we'll see
okay<00:09:08.720><c> they're</c><00:09:08.880><c> at</c><00:09:08.959><c> the</c><00:09:09.040><c> same</c><00:09:09.200><c> character</c><00:09:09.680><c> and</c>

00:09:10.070 --> 00:09:10.080 align:start position:0%
okay they're at the same character and
 

00:09:10.080 --> 00:09:12.230 align:start position:0%
okay they're at the same character and
then<00:09:10.240><c> we'll</c><00:09:10.480><c> say</c><00:09:10.640><c> we</c><00:09:10.800><c> can</c><00:09:11.040><c> stop</c><00:09:11.440><c> our</c><00:09:11.600><c> algorithm</c>

00:09:12.230 --> 00:09:12.240 align:start position:0%
then we'll say we can stop our algorithm
 

00:09:12.240 --> 00:09:13.990 align:start position:0%
then we'll say we can stop our algorithm
we've<00:09:12.480><c> determined</c><00:09:12.959><c> it</c><00:09:13.120><c> is</c><00:09:13.279><c> a</c><00:09:13.360><c> palindrome</c><00:09:13.920><c> and</c>

00:09:13.990 --> 00:09:14.000 align:start position:0%
we've determined it is a palindrome and
 

00:09:14.000 --> 00:09:15.750 align:start position:0%
we've determined it is a palindrome and
then<00:09:14.160><c> we</c><00:09:14.240><c> can</c><00:09:14.399><c> return</c><00:09:14.800><c> true</c><00:09:15.200><c> so</c><00:09:15.360><c> now</c><00:09:15.519><c> let</c><00:09:15.680><c> me</c>

00:09:15.750 --> 00:09:15.760 align:start position:0%
then we can return true so now let me
 

00:09:15.760 --> 00:09:17.509 align:start position:0%
then we can return true so now let me
show<00:09:15.920><c> you</c><00:09:16.080><c> how</c><00:09:16.240><c> to</c><00:09:16.320><c> code</c><00:09:16.560><c> it</c><00:09:16.720><c> up</c><00:09:16.880><c> the</c><00:09:17.040><c> benefit</c>

00:09:17.509 --> 00:09:17.519 align:start position:0%
show you how to code it up the benefit
 

00:09:17.519 --> 00:09:19.430 align:start position:0%
show you how to code it up the benefit
of<00:09:17.600><c> this</c><00:09:17.760><c> solution</c><00:09:18.320><c> it</c><00:09:18.480><c> is</c><00:09:18.560><c> still</c><00:09:18.800><c> a</c><00:09:18.959><c> linear</c>

00:09:19.430 --> 00:09:19.440 align:start position:0%
of this solution it is still a linear
 

00:09:19.440 --> 00:09:21.350 align:start position:0%
of this solution it is still a linear
time<00:09:19.839><c> algorithm</c><00:09:20.320><c> it's</c><00:09:20.480><c> still</c><00:09:20.640><c> big</c><00:09:20.880><c> o</c><00:09:20.959><c> of</c><00:09:21.120><c> n</c>

00:09:21.350 --> 00:09:21.360 align:start position:0%
time algorithm it's still big o of n
 

00:09:21.360 --> 00:09:22.470 align:start position:0%
time algorithm it's still big o of n
because<00:09:21.519><c> we</c><00:09:21.680><c> have</c><00:09:21.760><c> to</c><00:09:21.839><c> iterate</c><00:09:22.240><c> through</c><00:09:22.399><c> the</c>

00:09:22.470 --> 00:09:22.480 align:start position:0%
because we have to iterate through the
 

00:09:22.480 --> 00:09:24.630 align:start position:0%
because we have to iterate through the
entire<00:09:22.880><c> string</c><00:09:23.279><c> but</c><00:09:23.440><c> the</c><00:09:23.600><c> memory</c><00:09:23.920><c> complexity</c>

00:09:24.630 --> 00:09:24.640 align:start position:0%
entire string but the memory complexity
 

00:09:24.640 --> 00:09:26.870 align:start position:0%
entire string but the memory complexity
is<00:09:24.800><c> big</c><00:09:25.040><c> o</c><00:09:25.200><c> of</c><00:09:25.360><c> one</c><00:09:25.920><c> because</c><00:09:26.240><c> we're</c><00:09:26.399><c> not</c><00:09:26.560><c> using</c>

00:09:26.870 --> 00:09:26.880 align:start position:0%
is big o of one because we're not using
 

00:09:26.880 --> 00:09:29.269 align:start position:0%
is big o of one because we're not using
any<00:09:27.120><c> extra</c><00:09:27.440><c> memory</c><00:09:27.760><c> in</c><00:09:27.920><c> this</c><00:09:28.080><c> case</c><00:09:28.880><c> okay</c><00:09:29.120><c> so</c>

00:09:29.269 --> 00:09:29.279 align:start position:0%
any extra memory in this case okay so
 

00:09:29.279 --> 00:09:30.870 align:start position:0%
any extra memory in this case okay so
now<00:09:29.440><c> let's</c><00:09:29.519><c> get</c><00:09:29.680><c> into</c><00:09:29.920><c> the</c><00:09:30.000><c> code</c><00:09:30.480><c> first</c><00:09:30.720><c> thing</c>

00:09:30.870 --> 00:09:30.880 align:start position:0%
now let's get into the code first thing
 

00:09:30.880 --> 00:09:32.949 align:start position:0%
now let's get into the code first thing
i'm<00:09:30.959><c> going</c><00:09:31.120><c> to</c><00:09:31.200><c> do</c><00:09:31.519><c> is</c><00:09:31.920><c> write</c><00:09:32.240><c> our</c><00:09:32.560><c> alpha</c>

00:09:32.949 --> 00:09:32.959 align:start position:0%
i'm going to do is write our alpha
 

00:09:32.959 --> 00:09:35.110 align:start position:0%
i'm going to do is write our alpha
numerical<00:09:33.600><c> function</c><00:09:34.240><c> so</c>

00:09:35.110 --> 00:09:35.120 align:start position:0%
numerical function so
 

00:09:35.120 --> 00:09:36.949 align:start position:0%
numerical function so
it's<00:09:35.360><c> going</c><00:09:35.440><c> to</c><00:09:35.519><c> take</c><00:09:35.760><c> in</c><00:09:36.000><c> a</c><00:09:36.080><c> single</c><00:09:36.399><c> parameter</c>

00:09:36.949 --> 00:09:36.959 align:start position:0%
it's going to take in a single parameter
 

00:09:36.959 --> 00:09:38.949 align:start position:0%
it's going to take in a single parameter
just<00:09:37.120><c> going</c><00:09:37.279><c> to</c><00:09:37.360><c> take</c><00:09:37.680><c> in</c><00:09:38.000><c> a</c><00:09:38.240><c> character</c><00:09:38.880><c> and</c>

00:09:38.949 --> 00:09:38.959 align:start position:0%
just going to take in a character and
 

00:09:38.959 --> 00:09:40.550 align:start position:0%
just going to take in a character and
then<00:09:39.120><c> we're</c><00:09:39.279><c> going</c><00:09:39.360><c> to</c><00:09:39.519><c> determine</c><00:09:40.080><c> if</c><00:09:40.240><c> that</c>

00:09:40.550 --> 00:09:40.560 align:start position:0%
then we're going to determine if that
 

00:09:40.560 --> 00:09:43.509 align:start position:0%
then we're going to determine if that
character<00:09:41.120><c> is</c><00:09:41.279><c> alphanumeric</c><00:09:42.160><c> or</c><00:09:42.399><c> not</c><00:09:43.040><c> how</c><00:09:43.360><c> can</c>

00:09:43.509 --> 00:09:43.519 align:start position:0%
character is alphanumeric or not how can
 

00:09:43.519 --> 00:09:45.590 align:start position:0%
character is alphanumeric or not how can
we<00:09:43.680><c> determine</c><00:09:44.160><c> that</c><00:09:44.399><c> well</c><00:09:44.800><c> i</c><00:09:44.959><c> was</c><00:09:45.120><c> using</c><00:09:45.440><c> the</c>

00:09:45.590 --> 00:09:45.600 align:start position:0%
we determine that well i was using the
 

00:09:45.600 --> 00:09:48.630 align:start position:0%
we determine that well i was using the
ascii<00:09:46.480><c> values</c><00:09:47.040><c> a</c><00:09:47.120><c> moment</c><00:09:47.440><c> ago</c><00:09:48.160><c> right</c><00:09:48.399><c> i</c><00:09:48.480><c> was</c>

00:09:48.630 --> 00:09:48.640 align:start position:0%
ascii values a moment ago right i was
 

00:09:48.640 --> 00:09:51.030 align:start position:0%
ascii values a moment ago right i was
talking<00:09:48.959><c> about</c><00:09:49.279><c> them</c><00:09:49.920><c> so</c><00:09:50.320><c> in</c><00:09:50.480><c> python</c><00:09:50.880><c> you</c><00:09:50.959><c> can</c>

00:09:51.030 --> 00:09:51.040 align:start position:0%
talking about them so in python you can
 

00:09:51.040 --> 00:09:53.829 align:start position:0%
talking about them so in python you can
get<00:09:51.200><c> the</c><00:09:51.279><c> ascii</c><00:09:51.680><c> value</c><00:09:52.240><c> of</c><00:09:52.480><c> a</c><00:09:52.640><c> character</c><00:09:53.600><c> uh</c>

00:09:53.829 --> 00:09:53.839 align:start position:0%
get the ascii value of a character uh
 

00:09:53.839 --> 00:09:56.310 align:start position:0%
get the ascii value of a character uh
using<00:09:54.160><c> the</c><00:09:54.320><c> ord</c><00:09:54.800><c> function</c><00:09:55.600><c> we</c><00:09:55.760><c> just</c><00:09:55.920><c> want</c><00:09:56.080><c> to</c>

00:09:56.310 --> 00:09:56.320 align:start position:0%
using the ord function we just want to
 

00:09:56.320 --> 00:09:57.910 align:start position:0%
using the ord function we just want to
know<00:09:56.480><c> that</c><00:09:56.720><c> the</c><00:09:56.880><c> ascii</c><00:09:57.360><c> value</c><00:09:57.600><c> of</c><00:09:57.680><c> this</c>

00:09:57.910 --> 00:09:57.920 align:start position:0%
know that the ascii value of this
 

00:09:57.920 --> 00:10:00.230 align:start position:0%
know that the ascii value of this
character<00:09:58.720><c> if</c><00:09:58.959><c> it</c><00:09:59.200><c> is</c><00:09:59.360><c> an</c><00:09:59.600><c> uppercase</c>

00:10:00.230 --> 00:10:00.240 align:start position:0%
character if it is an uppercase
 

00:10:00.240 --> 00:10:02.389 align:start position:0%
character if it is an uppercase
character<00:10:00.640><c> how</c><00:10:00.800><c> can</c><00:10:00.959><c> we</c><00:10:01.200><c> check</c><00:10:01.440><c> that</c><00:10:01.680><c> well</c><00:10:02.240><c> as</c>

00:10:02.389 --> 00:10:02.399 align:start position:0%
character how can we check that well as
 

00:10:02.399 --> 00:10:05.030 align:start position:0%
character how can we check that well as
i<00:10:02.560><c> showed</c><00:10:02.800><c> you</c><00:10:02.959><c> a</c><00:10:03.040><c> moment</c><00:10:03.360><c> ago</c><00:10:03.839><c> ascii</c><00:10:04.320><c> values</c>

00:10:05.030 --> 00:10:05.040 align:start position:0%
i showed you a moment ago ascii values
 

00:10:05.040 --> 00:10:07.430 align:start position:0%
i showed you a moment ago ascii values
are<00:10:05.200><c> contiguous</c><00:10:06.079><c> for</c><00:10:06.320><c> uppercase</c><00:10:06.959><c> characters</c>

00:10:07.430 --> 00:10:07.440 align:start position:0%
are contiguous for uppercase characters
 

00:10:07.440 --> 00:10:11.269 align:start position:0%
are contiguous for uppercase characters
right<00:10:07.600><c> so</c><00:10:07.760><c> from</c><00:10:08.000><c> uppercase</c><00:10:08.800><c> a</c><00:10:09.360><c> to</c><00:10:09.760><c> uppercase</c><00:10:10.640><c> z</c>

00:10:11.269 --> 00:10:11.279 align:start position:0%
right so from uppercase a to uppercase z
 

00:10:11.279 --> 00:10:14.150 align:start position:0%
right so from uppercase a to uppercase z
uh<00:10:11.600><c> they're</c><00:10:11.760><c> contiguous</c><00:10:12.399><c> so</c><00:10:12.800><c> if</c><00:10:13.440><c> the</c><00:10:13.760><c> ascii</c>

00:10:14.150 --> 00:10:14.160 align:start position:0%
uh they're contiguous so if the ascii
 

00:10:14.160 --> 00:10:16.230 align:start position:0%
uh they're contiguous so if the ascii
value<00:10:14.640><c> of</c><00:10:14.800><c> the</c><00:10:15.040><c> c</c><00:10:15.279><c> character</c><00:10:15.760><c> of</c><00:10:15.920><c> whatever</c>

00:10:16.230 --> 00:10:16.240 align:start position:0%
value of the c character of whatever
 

00:10:16.240 --> 00:10:19.110 align:start position:0%
value of the c character of whatever
this<00:10:16.399><c> character</c><00:10:17.040><c> happens</c><00:10:17.360><c> to</c><00:10:17.519><c> be</c><00:10:18.000><c> is</c><00:10:18.240><c> between</c>

00:10:19.110 --> 00:10:19.120 align:start position:0%
this character happens to be is between
 

00:10:19.120 --> 00:10:21.350 align:start position:0%
this character happens to be is between
the<00:10:19.279><c> ascii</c><00:10:19.760><c> value</c><00:10:20.240><c> of</c><00:10:20.480><c> uppercase</c><00:10:21.040><c> a</c><00:10:21.200><c> and</c>

00:10:21.350 --> 00:10:21.360 align:start position:0%
the ascii value of uppercase a and
 

00:10:21.360 --> 00:10:24.150 align:start position:0%
the ascii value of uppercase a and
uppercase<00:10:21.920><c> z</c><00:10:22.399><c> that</c><00:10:22.640><c> means</c><00:10:23.040><c> it's</c><00:10:23.200><c> an</c><00:10:23.440><c> uppercase</c>

00:10:24.150 --> 00:10:24.160 align:start position:0%
uppercase z that means it's an uppercase
 

00:10:24.160 --> 00:10:26.710 align:start position:0%
uppercase z that means it's an uppercase
character<00:10:24.800><c> so</c><00:10:24.959><c> that's</c><00:10:25.680><c> good</c><00:10:26.079><c> good</c><00:10:26.320><c> so</c><00:10:26.480><c> far</c>

00:10:26.710 --> 00:10:26.720 align:start position:0%
character so that's good good so far
 

00:10:26.720 --> 00:10:28.710 align:start position:0%
character so that's good good so far
right<00:10:26.880><c> that's</c><00:10:27.200><c> progress</c><00:10:27.839><c> for</c><00:10:28.079><c> now</c><00:10:28.399><c> we</c><00:10:28.560><c> can</c>

00:10:28.710 --> 00:10:28.720 align:start position:0%
right that's progress for now we can
 

00:10:28.720 --> 00:10:30.389 align:start position:0%
right that's progress for now we can
check<00:10:29.040><c> that</c><00:10:29.279><c> this</c><00:10:29.600><c> is</c><00:10:29.760><c> an</c><00:10:29.920><c> uppercase</c>

00:10:30.389 --> 00:10:30.399 align:start position:0%
check that this is an uppercase
 

00:10:30.399 --> 00:10:31.829 align:start position:0%
check that this is an uppercase
character<00:10:30.720><c> but</c><00:10:30.880><c> we</c><00:10:31.040><c> want</c><00:10:31.200><c> to</c><00:10:31.279><c> check</c><00:10:31.519><c> if</c><00:10:31.600><c> it's</c>

00:10:31.829 --> 00:10:31.839 align:start position:0%
character but we want to check if it's
 

00:10:31.839 --> 00:10:34.389 align:start position:0%
character but we want to check if it's
alphanumeric<00:10:32.560><c> so</c><00:10:32.720><c> we</c><00:10:32.880><c> have</c><00:10:32.959><c> to</c><00:10:33.200><c> extend</c><00:10:33.839><c> this</c>

00:10:34.389 --> 00:10:34.399 align:start position:0%
alphanumeric so we have to extend this
 

00:10:34.399 --> 00:10:37.269 align:start position:0%
alphanumeric so we have to extend this
idea<00:10:34.880><c> so</c><00:10:35.360><c> how</c><00:10:35.519><c> about</c><00:10:35.680><c> we</c><00:10:35.760><c> say</c><00:10:35.920><c> okay</c><00:10:36.240><c> that</c><00:10:36.640><c> or</c>

00:10:37.269 --> 00:10:37.279 align:start position:0%
idea so how about we say okay that or
 

00:10:37.279 --> 00:10:39.190 align:start position:0%
idea so how about we say okay that or
second<00:10:37.600><c> condition</c><00:10:38.480><c> i'm</c><00:10:38.720><c> actually</c><00:10:38.880><c> just</c><00:10:39.040><c> going</c>

00:10:39.190 --> 00:10:39.200 align:start position:0%
second condition i'm actually just going
 

00:10:39.200 --> 00:10:40.470 align:start position:0%
second condition i'm actually just going
to<00:10:39.279><c> copy</c><00:10:39.600><c> and</c><00:10:39.680><c> paste</c><00:10:39.920><c> this</c><00:10:40.160><c> because</c><00:10:40.399><c> it's</c>

00:10:40.470 --> 00:10:40.480 align:start position:0%
to copy and paste this because it's
 

00:10:40.480 --> 00:10:42.230 align:start position:0%
to copy and paste this because it's
going<00:10:40.560><c> to</c><00:10:40.640><c> be</c><00:10:40.720><c> similar</c><00:10:41.200><c> we</c><00:10:41.360><c> want</c><00:10:41.519><c> to</c><00:10:41.680><c> check</c><00:10:42.079><c> if</c>

00:10:42.230 --> 00:10:42.240 align:start position:0%
going to be similar we want to check if
 

00:10:42.240 --> 00:10:43.990 align:start position:0%
going to be similar we want to check if
it's<00:10:42.480><c> a</c><00:10:42.640><c> lowercase</c><00:10:43.279><c> character</c><00:10:43.600><c> right</c><00:10:43.839><c> because</c>

00:10:43.990 --> 00:10:44.000 align:start position:0%
it's a lowercase character right because
 

00:10:44.000 --> 00:10:47.190 align:start position:0%
it's a lowercase character right because
that's<00:10:44.560><c> the</c><00:10:45.040><c> next</c><00:10:45.440><c> thing</c><00:10:46.000><c> is</c><00:10:46.160><c> it</c><00:10:46.320><c> uppercase</c><00:10:46.880><c> or</c>

00:10:47.190 --> 00:10:47.200 align:start position:0%
that's the next thing is it uppercase or
 

00:10:47.200 --> 00:10:49.829 align:start position:0%
that's the next thing is it uppercase or
is<00:10:47.360><c> it</c><00:10:47.519><c> lowercase</c><00:10:48.160><c> we</c><00:10:48.320><c> can</c><00:10:48.480><c> do</c><00:10:48.640><c> that</c><00:10:48.800><c> by</c><00:10:49.040><c> taking</c>

00:10:49.829 --> 00:10:49.839 align:start position:0%
is it lowercase we can do that by taking
 

00:10:49.839 --> 00:10:52.069 align:start position:0%
is it lowercase we can do that by taking
the<00:10:50.079><c> ascii</c><00:10:50.560><c> values</c><00:10:51.040><c> of</c><00:10:51.200><c> the</c><00:10:51.360><c> lowercase</c><00:10:51.839><c> a</c><00:10:52.000><c> and</c>

00:10:52.069 --> 00:10:52.079 align:start position:0%
the ascii values of the lowercase a and
 

00:10:52.079 --> 00:10:55.030 align:start position:0%
the ascii values of the lowercase a and
lowercase<00:10:52.640><c> z</c><00:10:53.120><c> and</c><00:10:53.360><c> last</c><00:10:53.760><c> it</c><00:10:54.000><c> could</c><00:10:54.160><c> be</c><00:10:54.399><c> a</c><00:10:54.560><c> digit</c>

00:10:55.030 --> 00:10:55.040 align:start position:0%
lowercase z and last it could be a digit
 

00:10:55.040 --> 00:10:58.230 align:start position:0%
lowercase z and last it could be a digit
from<00:10:55.519><c> zero</c><00:10:56.079><c> to</c><00:10:56.800><c> one</c><00:10:57.279><c> or</c><00:10:57.519><c> zero</c><00:10:57.760><c> to</c><00:10:57.920><c> nine</c>

00:10:58.230 --> 00:10:58.240 align:start position:0%
from zero to one or zero to nine
 

00:10:58.240 --> 00:11:00.230 align:start position:0%
from zero to one or zero to nine
actually<00:10:58.560><c> so</c><00:10:58.800><c> let's</c><00:10:59.200><c> do</c><00:10:59.519><c> that</c><00:10:59.839><c> same</c><00:11:00.079><c> thing</c>

00:11:00.230 --> 00:11:00.240 align:start position:0%
actually so let's do that same thing
 

00:11:00.240 --> 00:11:02.470 align:start position:0%
actually so let's do that same thing
right<00:11:00.560><c> starting</c><00:11:00.800><c> at</c><00:11:00.959><c> zero</c><00:11:01.279><c> is</c><00:11:01.600><c> in</c><00:11:01.680><c> between</c>

00:11:02.470 --> 00:11:02.480 align:start position:0%
right starting at zero is in between
 

00:11:02.480 --> 00:11:05.670 align:start position:0%
right starting at zero is in between
zero<00:11:03.040><c> or</c><00:11:03.680><c> uh</c><00:11:03.839><c> the</c><00:11:04.079><c> integer</c><00:11:04.480><c> nine</c><00:11:05.040><c> if</c><00:11:05.279><c> any</c><00:11:05.519><c> of</c>

00:11:05.670 --> 00:11:05.680 align:start position:0%
zero or uh the integer nine if any of
 

00:11:05.680 --> 00:11:08.069 align:start position:0%
zero or uh the integer nine if any of
these<00:11:05.920><c> is</c><00:11:06.079><c> true</c><00:11:06.560><c> this</c><00:11:06.800><c> will</c><00:11:07.120><c> be</c><00:11:07.279><c> true</c><00:11:07.839><c> so</c>

00:11:08.069 --> 00:11:08.079 align:start position:0%
these is true this will be true so
 

00:11:08.079 --> 00:11:10.230 align:start position:0%
these is true this will be true so
basically<00:11:08.560><c> we've</c><00:11:08.800><c> determined</c><00:11:09.760><c> if</c><00:11:09.920><c> it's</c><00:11:10.079><c> an</c>

00:11:10.230 --> 00:11:10.240 align:start position:0%
basically we've determined if it's an
 

00:11:10.240 --> 00:11:11.990 align:start position:0%
basically we've determined if it's an
alphanumeric<00:11:10.880><c> or</c><00:11:11.040><c> not</c><00:11:11.279><c> that</c><00:11:11.519><c> will</c><00:11:11.760><c> that's</c>

00:11:11.990 --> 00:11:12.000 align:start position:0%
alphanumeric or not that will that's
 

00:11:12.000 --> 00:11:13.990 align:start position:0%
alphanumeric or not that will that's
what<00:11:12.079><c> this</c><00:11:12.240><c> condition</c><00:11:12.640><c> will</c><00:11:12.720><c> be</c><00:11:12.959><c> so</c><00:11:13.120><c> we</c><00:11:13.279><c> can</c><00:11:13.839><c> go</c>

00:11:13.990 --> 00:11:14.000 align:start position:0%
what this condition will be so we can go
 

00:11:14.000 --> 00:11:16.230 align:start position:0%
what this condition will be so we can go
ahead<00:11:14.399><c> and</c><00:11:14.640><c> return</c><00:11:15.120><c> this</c><00:11:15.600><c> so</c><00:11:15.839><c> if</c><00:11:16.000><c> it</c><00:11:16.079><c> is</c>

00:11:16.230 --> 00:11:16.240 align:start position:0%
ahead and return this so if it is
 

00:11:16.240 --> 00:11:18.389 align:start position:0%
ahead and return this so if it is
alphanumeric<00:11:17.279><c> of</c><00:11:17.360><c> course</c><00:11:17.600><c> this</c><00:11:17.839><c> will</c><00:11:18.000><c> return</c>

00:11:18.389 --> 00:11:18.399 align:start position:0%
alphanumeric of course this will return
 

00:11:18.399 --> 00:11:20.550 align:start position:0%
alphanumeric of course this will return
true<00:11:18.880><c> if</c><00:11:19.040><c> it's</c><00:11:19.200><c> not</c><00:11:19.360><c> alphanumeric</c><00:11:20.160><c> this</c><00:11:20.320><c> will</c>

00:11:20.550 --> 00:11:20.560 align:start position:0%
true if it's not alphanumeric this will
 

00:11:20.560 --> 00:11:22.790 align:start position:0%
true if it's not alphanumeric this will
return<00:11:21.040><c> false</c><00:11:21.680><c> okay</c><00:11:21.920><c> so</c><00:11:22.079><c> we</c><00:11:22.160><c> got</c><00:11:22.320><c> our</c><00:11:22.480><c> helper</c>

00:11:22.790 --> 00:11:22.800 align:start position:0%
return false okay so we got our helper
 

00:11:22.800 --> 00:11:24.310 align:start position:0%
return false okay so we got our helper
function<00:11:23.200><c> out</c><00:11:23.360><c> of</c><00:11:23.440><c> the</c><00:11:23.600><c> way</c><00:11:23.839><c> now</c><00:11:24.079><c> let's</c>

00:11:24.310 --> 00:11:24.320 align:start position:0%
function out of the way now let's
 

00:11:24.320 --> 00:11:26.150 align:start position:0%
function out of the way now let's
actually<00:11:24.640><c> write</c><00:11:24.800><c> the</c><00:11:24.959><c> algorithm</c><00:11:25.600><c> as</c><00:11:25.839><c> i</c><00:11:25.920><c> showed</c>

00:11:26.150 --> 00:11:26.160 align:start position:0%
actually write the algorithm as i showed
 

00:11:26.160 --> 00:11:27.269 align:start position:0%
actually write the algorithm as i showed
in<00:11:26.240><c> the</c><00:11:26.399><c> drawing</c><00:11:26.640><c> we're</c><00:11:26.800><c> going</c><00:11:26.880><c> to</c><00:11:26.959><c> have</c><00:11:27.040><c> two</c>

00:11:27.269 --> 00:11:27.279 align:start position:0%
in the drawing we're going to have two
 

00:11:27.279 --> 00:11:28.710 align:start position:0%
in the drawing we're going to have two
pointers<00:11:27.600><c> left</c><00:11:27.839><c> and</c><00:11:28.000><c> right</c><00:11:28.240><c> left</c><00:11:28.480><c> is</c><00:11:28.560><c> gonna</c>

00:11:28.710 --> 00:11:28.720 align:start position:0%
pointers left and right left is gonna
 

00:11:28.720 --> 00:11:31.030 align:start position:0%
pointers left and right left is gonna
initially<00:11:29.120><c> be</c><00:11:29.360><c> at</c><00:11:29.600><c> zero</c><00:11:30.320><c> right</c><00:11:30.560><c> is</c><00:11:30.720><c> initially</c>

00:11:31.030 --> 00:11:31.040 align:start position:0%
initially be at zero right is initially
 

00:11:31.040 --> 00:11:32.470 align:start position:0%
initially be at zero right is initially
going<00:11:31.120><c> to</c><00:11:31.200><c> be</c><00:11:31.360><c> all</c><00:11:31.519><c> the</c><00:11:31.600><c> way</c><00:11:31.760><c> at</c><00:11:32.000><c> the</c><00:11:32.160><c> right</c>

00:11:32.470 --> 00:11:32.480 align:start position:0%
going to be all the way at the right
 

00:11:32.480 --> 00:11:35.110 align:start position:0%
going to be all the way at the right
side<00:11:32.959><c> so</c><00:11:33.120><c> the</c><00:11:33.360><c> length</c><00:11:33.600><c> of</c><00:11:33.680><c> the</c><00:11:33.839><c> string</c><00:11:34.399><c> minus</c>

00:11:35.110 --> 00:11:35.120 align:start position:0%
side so the length of the string minus
 

00:11:35.120 --> 00:11:38.069 align:start position:0%
side so the length of the string minus
one<00:11:35.600><c> and</c><00:11:35.760><c> remember</c><00:11:36.320><c> we</c><00:11:36.480><c> want</c><00:11:36.720><c> to</c><00:11:36.880><c> continue</c><00:11:37.839><c> the</c>

00:11:38.069 --> 00:11:38.079 align:start position:0%
one and remember we want to continue the
 

00:11:38.079 --> 00:11:39.750 align:start position:0%
one and remember we want to continue the
algorithm<00:11:38.480><c> we</c><00:11:38.640><c> want</c><00:11:38.800><c> to</c><00:11:39.200><c> check</c><00:11:39.360><c> if</c><00:11:39.519><c> it's</c><00:11:39.680><c> a</c>

00:11:39.750 --> 00:11:39.760 align:start position:0%
algorithm we want to check if it's a
 

00:11:39.760 --> 00:11:42.470 align:start position:0%
algorithm we want to check if it's a
paundrome<00:11:40.320><c> while</c><00:11:40.880><c> the</c><00:11:41.040><c> left</c><00:11:41.279><c> pointer</c><00:11:41.680><c> is</c><00:11:42.240><c> less</c>

00:11:42.470 --> 00:11:42.480 align:start position:0%
paundrome while the left pointer is less
 

00:11:42.480 --> 00:11:44.310 align:start position:0%
paundrome while the left pointer is less
than<00:11:42.880><c> the</c><00:11:43.040><c> right</c><00:11:43.279><c> point</c><00:11:43.519><c> the</c><00:11:43.680><c> pointers</c><00:11:44.079><c> have</c>

00:11:44.310 --> 00:11:44.320 align:start position:0%
than the right point the pointers have
 

00:11:44.320 --> 00:11:47.190 align:start position:0%
than the right point the pointers have
not<00:11:44.720><c> met</c><00:11:45.040><c> each</c><00:11:45.279><c> other</c><00:11:45.680><c> yet</c><00:11:46.240><c> or</c><00:11:46.480><c> crossed</c><00:11:47.040><c> each</c>

00:11:47.190 --> 00:11:47.200 align:start position:0%
not met each other yet or crossed each
 

00:11:47.200 --> 00:11:48.790 align:start position:0%
not met each other yet or crossed each
other<00:11:47.680><c> and</c><00:11:47.839><c> so</c><00:11:48.000><c> now</c><00:11:48.160><c> we</c><00:11:48.320><c> get</c><00:11:48.480><c> to</c><00:11:48.560><c> the</c><00:11:48.640><c> point</c>

00:11:48.790 --> 00:11:48.800 align:start position:0%
other and so now we get to the point
 

00:11:48.800 --> 00:11:50.230 align:start position:0%
other and so now we get to the point
where<00:11:48.959><c> we</c><00:11:49.120><c> actually</c><00:11:49.360><c> want</c><00:11:49.519><c> to</c><00:11:49.600><c> compare</c><00:11:50.079><c> the</c>

00:11:50.230 --> 00:11:50.240 align:start position:0%
where we actually want to compare the
 

00:11:50.240 --> 00:11:52.550 align:start position:0%
where we actually want to compare the
characters<00:11:51.040><c> so</c><00:11:51.279><c> we</c><00:11:51.519><c> want</c><00:11:51.680><c> to</c><00:11:51.760><c> take</c><00:11:52.399><c> the</c>

00:11:52.550 --> 00:11:52.560 align:start position:0%
characters so we want to take the
 

00:11:52.560 --> 00:11:54.949 align:start position:0%
characters so we want to take the
character<00:11:53.040><c> at</c><00:11:53.279><c> position</c><00:11:53.760><c> left</c><00:11:54.480><c> and</c><00:11:54.800><c> the</c>

00:11:54.949 --> 00:11:54.959 align:start position:0%
character at position left and the
 

00:11:54.959 --> 00:11:57.590 align:start position:0%
character at position left and the
character<00:11:55.519><c> at</c><00:11:55.760><c> position</c><00:11:56.480><c> right</c><00:11:57.120><c> and</c><00:11:57.440><c> if</c>

00:11:57.590 --> 00:11:57.600 align:start position:0%
character at position right and if
 

00:11:57.600 --> 00:12:00.629 align:start position:0%
character at position right and if
they're<00:11:58.079><c> not</c><00:11:58.399><c> equal</c><00:11:59.120><c> we</c><00:11:59.360><c> want</c><00:11:59.600><c> to</c><00:12:00.079><c> return</c>

00:12:00.629 --> 00:12:00.639 align:start position:0%
they're not equal we want to return
 

00:12:00.639 --> 00:12:02.550 align:start position:0%
they're not equal we want to return
immediately<00:12:01.279><c> right</c><00:12:01.440><c> because</c><00:12:01.760><c> if</c><00:12:01.920><c> we</c><00:12:02.160><c> find</c><00:12:02.480><c> a</c>

00:12:02.550 --> 00:12:02.560 align:start position:0%
immediately right because if we find a
 

00:12:02.560 --> 00:12:04.389 align:start position:0%
immediately right because if we find a
single<00:12:02.880><c> pair</c><00:12:03.120><c> that's</c><00:12:03.360><c> not</c><00:12:03.600><c> equal</c><00:12:03.920><c> then</c><00:12:04.240><c> we</c>

00:12:04.389 --> 00:12:04.399 align:start position:0%
single pair that's not equal then we
 

00:12:04.399 --> 00:12:06.069 align:start position:0%
single pair that's not equal then we
know<00:12:04.560><c> it's</c><00:12:04.800><c> not</c><00:12:05.040><c> a</c><00:12:05.120><c> palindrome</c><00:12:05.680><c> so</c><00:12:05.839><c> we</c><00:12:05.920><c> can</c>

00:12:06.069 --> 00:12:06.079 align:start position:0%
know it's not a palindrome so we can
 

00:12:06.079 --> 00:12:08.550 align:start position:0%
know it's not a palindrome so we can
return<00:12:06.560><c> false</c><00:12:07.279><c> immediately</c>

00:12:08.550 --> 00:12:08.560 align:start position:0%
return false immediately
 

00:12:08.560 --> 00:12:10.150 align:start position:0%
return false immediately
but<00:12:08.720><c> did</c><00:12:08.880><c> we</c><00:12:09.040><c> forget</c><00:12:09.279><c> about</c><00:12:09.519><c> anything</c><00:12:09.920><c> well</c>

00:12:10.150 --> 00:12:10.160 align:start position:0%
but did we forget about anything well
 

00:12:10.160 --> 00:12:11.590 align:start position:0%
but did we forget about anything well
the<00:12:10.240><c> first</c><00:12:10.480><c> thing</c><00:12:10.639><c> we</c><00:12:10.800><c> forgot</c><00:12:11.040><c> about</c><00:12:11.360><c> is</c><00:12:11.440><c> we</c>

00:12:11.590 --> 00:12:11.600 align:start position:0%
the first thing we forgot about is we
 

00:12:11.600 --> 00:12:13.750 align:start position:0%
the first thing we forgot about is we
want<00:12:11.760><c> to</c><00:12:11.839><c> make</c><00:12:12.079><c> sure</c><00:12:12.560><c> to</c><00:12:12.800><c> only</c><00:12:13.120><c> compare</c><00:12:13.600><c> the</c>

00:12:13.750 --> 00:12:13.760 align:start position:0%
want to make sure to only compare the
 

00:12:13.760 --> 00:12:16.470 align:start position:0%
want to make sure to only compare the
lowercase<00:12:14.480><c> versions</c><00:12:14.959><c> of</c><00:12:15.040><c> each</c><00:12:15.279><c> character</c><00:12:15.680><c> so</c>

00:12:16.470 --> 00:12:16.480 align:start position:0%
lowercase versions of each character so
 

00:12:16.480 --> 00:12:18.949 align:start position:0%
lowercase versions of each character so
let's<00:12:16.720><c> convert</c><00:12:17.120><c> this</c><00:12:17.360><c> to</c><00:12:17.519><c> lower</c><00:12:18.160><c> and</c><00:12:18.399><c> convert</c>

00:12:18.949 --> 00:12:18.959 align:start position:0%
let's convert this to lower and convert
 

00:12:18.959 --> 00:12:20.550 align:start position:0%
let's convert this to lower and convert
this<00:12:19.360><c> to</c><00:12:19.600><c> lower</c>

00:12:20.550 --> 00:12:20.560 align:start position:0%
this to lower
 

00:12:20.560 --> 00:12:22.949 align:start position:0%
this to lower
so<00:12:21.040><c> that's</c><00:12:21.279><c> good</c><00:12:21.519><c> we're</c><00:12:22.240><c> so</c><00:12:22.399><c> if</c><00:12:22.560><c> one</c><00:12:22.720><c> of</c><00:12:22.800><c> these</c>

00:12:22.949 --> 00:12:22.959 align:start position:0%
so that's good we're so if one of these
 

00:12:22.959 --> 00:12:24.629 align:start position:0%
so that's good we're so if one of these
is<00:12:23.120><c> upper</c><00:12:23.279><c> case</c><00:12:23.440><c> one</c><00:12:23.600><c> of</c><00:12:23.760><c> them</c><00:12:23.920><c> is</c><00:12:24.000><c> lowercase</c>

00:12:24.629 --> 00:12:24.639 align:start position:0%
is upper case one of them is lowercase
 

00:12:24.639 --> 00:12:26.949 align:start position:0%
is upper case one of them is lowercase
we're<00:12:24.880><c> still</c><00:12:25.200><c> good</c><00:12:25.920><c> but</c><00:12:26.079><c> did</c><00:12:26.320><c> we</c><00:12:26.399><c> forget</c><00:12:26.720><c> about</c>

00:12:26.949 --> 00:12:26.959 align:start position:0%
we're still good but did we forget about
 

00:12:26.959 --> 00:12:29.110 align:start position:0%
we're still good but did we forget about
anything<00:12:27.440><c> else</c><00:12:27.680><c> well</c><00:12:27.920><c> we</c><00:12:28.079><c> never</c><00:12:28.480><c> called</c><00:12:28.880><c> our</c>

00:12:29.110 --> 00:12:29.120 align:start position:0%
anything else well we never called our
 

00:12:29.120 --> 00:12:31.509 align:start position:0%
anything else well we never called our
alphanumeric<00:12:29.920><c> function</c><00:12:30.639><c> right</c><00:12:30.880><c> what</c><00:12:31.040><c> if</c><00:12:31.360><c> one</c>

00:12:31.509 --> 00:12:31.519 align:start position:0%
alphanumeric function right what if one
 

00:12:31.519 --> 00:12:33.829 align:start position:0%
alphanumeric function right what if one
of<00:12:31.600><c> these</c><00:12:32.079><c> is</c><00:12:32.720><c> not</c><00:12:32.959><c> an</c><00:12:33.120><c> alphanumeric</c>

00:12:33.829 --> 00:12:33.839 align:start position:0%
of these is not an alphanumeric
 

00:12:33.839 --> 00:12:36.310 align:start position:0%
of these is not an alphanumeric
character<00:12:34.480><c> well</c><00:12:34.639><c> we</c><00:12:34.880><c> can't</c><00:12:35.120><c> have</c><00:12:35.440><c> that</c><00:12:35.760><c> right</c>

00:12:36.310 --> 00:12:36.320 align:start position:0%
character well we can't have that right
 

00:12:36.320 --> 00:12:38.550 align:start position:0%
character well we can't have that right
we<00:12:36.480><c> shouldn't</c><00:12:36.880><c> allow</c><00:12:37.200><c> that</c><00:12:37.360><c> to</c><00:12:37.519><c> happen</c><00:12:38.160><c> so</c>

00:12:38.550 --> 00:12:38.560 align:start position:0%
we shouldn't allow that to happen so
 

00:12:38.560 --> 00:12:40.790 align:start position:0%
we shouldn't allow that to happen so
before<00:12:38.880><c> we</c><00:12:39.040><c> even</c><00:12:39.360><c> execute</c><00:12:39.760><c> this</c><00:12:40.079><c> if</c><00:12:40.240><c> statement</c>

00:12:40.790 --> 00:12:40.800 align:start position:0%
before we even execute this if statement
 

00:12:40.800 --> 00:12:43.910 align:start position:0%
before we even execute this if statement
let's<00:12:41.120><c> make</c><00:12:41.360><c> sure</c><00:12:42.160><c> both</c><00:12:42.480><c> characters</c><00:12:43.120><c> at</c><00:12:43.440><c> left</c>

00:12:43.910 --> 00:12:43.920 align:start position:0%
let's make sure both characters at left
 

00:12:43.920 --> 00:12:47.430 align:start position:0%
let's make sure both characters at left
and<00:12:44.240><c> right</c><00:12:44.880><c> are</c><00:12:45.200><c> alphanumeric</c><00:12:46.240><c> so</c><00:12:46.480><c> while</c><00:12:46.959><c> it's</c>

00:12:47.430 --> 00:12:47.440 align:start position:0%
and right are alphanumeric so while it's
 

00:12:47.440 --> 00:12:50.230 align:start position:0%
and right are alphanumeric so while it's
not<00:12:47.760><c> alphanumeric</c><00:12:48.720><c> so</c><00:12:48.959><c> for</c><00:12:49.120><c> example</c><00:12:49.519><c> while</c>

00:12:50.230 --> 00:12:50.240 align:start position:0%
not alphanumeric so for example while
 

00:12:50.240 --> 00:12:53.430 align:start position:0%
not alphanumeric so for example while
the<00:12:50.639><c> character</c><00:12:51.040><c> at</c><00:12:51.200><c> position</c><00:12:51.839><c> left</c><00:12:52.399><c> is</c><00:12:53.040><c> not</c>

00:12:53.430 --> 00:12:53.440 align:start position:0%
the character at position left is not
 

00:12:53.440 --> 00:12:55.350 align:start position:0%
the character at position left is not
alphanumeric<00:12:54.320><c> what</c><00:12:54.480><c> do</c><00:12:54.639><c> we</c><00:12:54.720><c> want</c><00:12:54.880><c> to</c><00:12:54.959><c> do</c><00:12:55.200><c> well</c>

00:12:55.350 --> 00:12:55.360 align:start position:0%
alphanumeric what do we want to do well
 

00:12:55.360 --> 00:12:57.190 align:start position:0%
alphanumeric what do we want to do well
we<00:12:55.519><c> want</c><00:12:55.600><c> to</c><00:12:55.760><c> increment</c><00:12:56.240><c> that</c><00:12:56.480><c> left</c><00:12:56.800><c> pointer</c>

00:12:57.190 --> 00:12:57.200 align:start position:0%
we want to increment that left pointer
 

00:12:57.200 --> 00:13:00.310 align:start position:0%
we want to increment that left pointer
right<00:12:57.519><c> so</c><00:12:57.680><c> we</c><00:12:57.839><c> can</c><00:12:58.240><c> uh</c><00:12:58.560><c> plus</c><00:12:58.800><c> 1</c><00:12:59.040><c> to</c><00:12:59.200><c> this</c><00:12:59.920><c> but</c>

00:13:00.310 --> 00:13:00.320 align:start position:0%
right so we can uh plus 1 to this but
 

00:13:00.320 --> 00:13:01.350 align:start position:0%
right so we can uh plus 1 to this but
one<00:13:00.480><c> thing</c><00:13:00.639><c> we</c><00:13:00.720><c> want</c><00:13:00.880><c> to</c><00:13:00.959><c> make</c><00:13:01.040><c> sure</c><00:13:01.200><c> is</c><00:13:01.279><c> that</c>

00:13:01.350 --> 00:13:01.360 align:start position:0%
one thing we want to make sure is that
 

00:13:01.360 --> 00:13:03.110 align:start position:0%
one thing we want to make sure is that
the<00:13:01.519><c> pointer</c><00:13:01.839><c> never</c><00:13:02.079><c> goes</c><00:13:02.320><c> out</c><00:13:02.480><c> of</c><00:13:02.560><c> bounds</c><00:13:02.880><c> so</c>

00:13:03.110 --> 00:13:03.120 align:start position:0%
the pointer never goes out of bounds so
 

00:13:03.120 --> 00:13:05.269 align:start position:0%
the pointer never goes out of bounds so
let's<00:13:03.360><c> just</c><00:13:03.600><c> add</c><00:13:03.920><c> a</c><00:13:04.320><c> checks</c><00:13:04.720><c> to</c><00:13:04.880><c> make</c><00:13:05.040><c> sure</c>

00:13:05.269 --> 00:13:05.279 align:start position:0%
let's just add a checks to make sure
 

00:13:05.279 --> 00:13:07.750 align:start position:0%
let's just add a checks to make sure
left<00:13:05.600><c> is</c><00:13:05.920><c> less</c><00:13:06.160><c> than</c><00:13:06.480><c> right</c><00:13:06.800><c> for</c><00:13:07.040><c> example</c><00:13:07.600><c> this</c>

00:13:07.750 --> 00:13:07.760 align:start position:0%
left is less than right for example this
 

00:13:07.760 --> 00:13:09.750 align:start position:0%
left is less than right for example this
will<00:13:08.000><c> make</c><00:13:08.160><c> sure</c><00:13:08.399><c> that</c><00:13:08.639><c> of</c><00:13:08.720><c> course</c><00:13:09.279><c> it</c><00:13:09.440><c> never</c>

00:13:09.750 --> 00:13:09.760 align:start position:0%
will make sure that of course it never
 

00:13:09.760 --> 00:13:12.470 align:start position:0%
will make sure that of course it never
passes<00:13:10.639><c> the</c><00:13:10.880><c> other</c><00:13:11.200><c> pointer</c><00:13:11.600><c> and</c><00:13:11.920><c> it'll</c><00:13:12.240><c> also</c>

00:13:12.470 --> 00:13:12.480 align:start position:0%
passes the other pointer and it'll also
 

00:13:12.480 --> 00:13:13.829 align:start position:0%
passes the other pointer and it'll also
make<00:13:12.639><c> sure</c><00:13:12.800><c> that</c><00:13:12.880><c> the</c><00:13:13.040><c> pointer</c><00:13:13.360><c> doesn't</c><00:13:13.600><c> go</c>

00:13:13.829 --> 00:13:13.839 align:start position:0%
make sure that the pointer doesn't go
 

00:13:13.839 --> 00:13:15.670 align:start position:0%
make sure that the pointer doesn't go
out<00:13:14.000><c> of</c><00:13:14.160><c> bounds</c><00:13:14.880><c> and</c><00:13:15.040><c> we</c><00:13:15.120><c> want</c><00:13:15.279><c> to</c><00:13:15.360><c> make</c><00:13:15.519><c> sure</c>

00:13:15.670 --> 00:13:15.680 align:start position:0%
out of bounds and we want to make sure
 

00:13:15.680 --> 00:13:17.590 align:start position:0%
out of bounds and we want to make sure
to<00:13:15.760><c> do</c><00:13:15.920><c> the</c><00:13:16.079><c> exact</c><00:13:16.399><c> same</c><00:13:16.639><c> thing</c>

00:13:17.590 --> 00:13:17.600 align:start position:0%
to do the exact same thing
 

00:13:17.600 --> 00:13:19.829 align:start position:0%
to do the exact same thing
for<00:13:17.839><c> the</c><00:13:18.079><c> other</c><00:13:18.320><c> position</c><00:13:18.959><c> as</c><00:13:19.200><c> well</c><00:13:19.519><c> for</c><00:13:19.680><c> the</c>

00:13:19.829 --> 00:13:19.839 align:start position:0%
for the other position as well for the
 

00:13:19.839 --> 00:13:21.269 align:start position:0%
for the other position as well for the
right<00:13:20.079><c> pointer</c><00:13:20.480><c> so</c>

00:13:21.269 --> 00:13:21.279 align:start position:0%
right pointer so
 

00:13:21.279 --> 00:13:23.990 align:start position:0%
right pointer so
make<00:13:21.519><c> sure</c><00:13:21.920><c> that</c><00:13:22.480><c> right</c><00:13:22.959><c> is</c><00:13:23.279><c> greater</c><00:13:23.680><c> than</c>

00:13:23.990 --> 00:13:24.000 align:start position:0%
make sure that right is greater than
 

00:13:24.000 --> 00:13:25.750 align:start position:0%
make sure that right is greater than
left<00:13:24.480><c> and</c>

00:13:25.750 --> 00:13:25.760 align:start position:0%
left and
 

00:13:25.760 --> 00:13:28.389 align:start position:0%
left and
the<00:13:26.079><c> character</c><00:13:26.480><c> at</c><00:13:26.560><c> the</c><00:13:26.639><c> position</c><00:13:27.120><c> right</c><00:13:27.440><c> is</c>

00:13:28.389 --> 00:13:28.399 align:start position:0%
the character at the position right is
 

00:13:28.399 --> 00:13:30.710 align:start position:0%
the character at the position right is
if<00:13:28.560><c> it's</c><00:13:28.800><c> not</c><00:13:29.040><c> alphanumeric</c><00:13:30.079><c> then</c><00:13:30.320><c> what</c><00:13:30.480><c> do</c><00:13:30.639><c> we</c>

00:13:30.710 --> 00:13:30.720 align:start position:0%
if it's not alphanumeric then what do we
 

00:13:30.720 --> 00:13:32.870 align:start position:0%
if it's not alphanumeric then what do we
want<00:13:30.880><c> to</c><00:13:30.959><c> do</c><00:13:31.200><c> we</c><00:13:31.360><c> want</c><00:13:31.600><c> to</c><00:13:32.240><c> decrement</c><00:13:32.720><c> the</c>

00:13:32.870 --> 00:13:32.880 align:start position:0%
want to do we want to decrement the
 

00:13:32.880 --> 00:13:34.629 align:start position:0%
want to do we want to decrement the
right<00:13:33.120><c> pointer</c><00:13:33.440><c> by</c><00:13:33.680><c> one</c><00:13:34.079><c> instead</c><00:13:34.399><c> of</c>

00:13:34.629 --> 00:13:34.639 align:start position:0%
right pointer by one instead of
 

00:13:34.639 --> 00:13:37.190 align:start position:0%
right pointer by one instead of
incrementing<00:13:35.680><c> but</c><00:13:36.079><c> but</c><00:13:36.240><c> both</c><00:13:36.480><c> of</c><00:13:36.560><c> these</c><00:13:36.880><c> while</c>

00:13:37.190 --> 00:13:37.200 align:start position:0%
incrementing but but both of these while
 

00:13:37.200 --> 00:13:38.550 align:start position:0%
incrementing but but both of these while
loops<00:13:37.519><c> will</c><00:13:37.760><c> make</c><00:13:37.920><c> sure</c><00:13:38.160><c> that</c><00:13:38.320><c> both</c>

00:13:38.550 --> 00:13:38.560 align:start position:0%
loops will make sure that both
 

00:13:38.560 --> 00:13:40.470 align:start position:0%
loops will make sure that both
characters<00:13:39.040><c> are</c><00:13:39.199><c> alphanumeric</c><00:13:39.920><c> before</c><00:13:40.240><c> we</c><00:13:40.320><c> do</c>

00:13:40.470 --> 00:13:40.480 align:start position:0%
characters are alphanumeric before we do
 

00:13:40.480 --> 00:13:42.310 align:start position:0%
characters are alphanumeric before we do
the<00:13:40.639><c> comparison</c><00:13:41.279><c> which</c><00:13:41.519><c> is</c><00:13:41.680><c> what</c><00:13:41.839><c> we</c><00:13:42.000><c> wanted</c>

00:13:42.310 --> 00:13:42.320 align:start position:0%
the comparison which is what we wanted
 

00:13:42.320 --> 00:13:44.550 align:start position:0%
the comparison which is what we wanted
to<00:13:42.480><c> achieve</c><00:13:43.279><c> so</c>

00:13:44.550 --> 00:13:44.560 align:start position:0%
to achieve so
 

00:13:44.560 --> 00:13:46.550 align:start position:0%
to achieve so
then<00:13:45.040><c> this</c><00:13:45.199><c> will</c><00:13:45.440><c> return</c><00:13:45.760><c> false</c><00:13:46.079><c> if</c><00:13:46.240><c> it's</c><00:13:46.399><c> not</c>

00:13:46.550 --> 00:13:46.560 align:start position:0%
then this will return false if it's not
 

00:13:46.560 --> 00:13:48.870 align:start position:0%
then this will return false if it's not
a<00:13:46.639><c> palindrome</c><00:13:47.199><c> if</c><00:13:47.279><c> the</c><00:13:47.440><c> entire</c><00:13:47.839><c> loop</c><00:13:48.160><c> finishes</c>

00:13:48.870 --> 00:13:48.880 align:start position:0%
a palindrome if the entire loop finishes
 

00:13:48.880 --> 00:13:51.350 align:start position:0%
a palindrome if the entire loop finishes
that<00:13:49.120><c> must</c><00:13:49.440><c> mean</c><00:13:49.920><c> that</c><00:13:50.160><c> the</c><00:13:50.320><c> string</c><00:13:50.880><c> is</c><00:13:51.199><c> a</c>

00:13:51.350 --> 00:13:51.360 align:start position:0%
that must mean that the string is a
 

00:13:51.360 --> 00:13:53.269 align:start position:0%
that must mean that the string is a
palindrome<00:13:51.920><c> so</c><00:13:52.079><c> then</c><00:13:52.320><c> we</c><00:13:52.399><c> can</c><00:13:52.560><c> just</c><00:13:52.720><c> go</c><00:13:52.880><c> ahead</c>

00:13:53.269 --> 00:13:53.279 align:start position:0%
palindrome so then we can just go ahead
 

00:13:53.279 --> 00:13:54.870 align:start position:0%
palindrome so then we can just go ahead
and<00:13:53.839><c> return</c>

00:13:54.870 --> 00:13:54.880 align:start position:0%
and return
 

00:13:54.880 --> 00:13:56.790 align:start position:0%
and return
true<00:13:55.600><c> oh</c><00:13:55.839><c> and</c><00:13:56.000><c> actually</c><00:13:56.240><c> one</c><00:13:56.399><c> more</c><00:13:56.639><c> thing</c>

00:13:56.790 --> 00:13:56.800 align:start position:0%
true oh and actually one more thing
 

00:13:56.800 --> 00:13:58.150 align:start position:0%
true oh and actually one more thing
before<00:13:57.120><c> i</c><00:13:57.279><c> forget</c>

00:13:58.150 --> 00:13:58.160 align:start position:0%
before i forget
 

00:13:58.160 --> 00:14:00.629 align:start position:0%
before i forget
after<00:13:58.399><c> we</c><00:13:58.560><c> do</c><00:13:58.720><c> do</c><00:13:58.880><c> the</c><00:13:59.040><c> comparison</c><00:13:59.920><c> we</c><00:14:00.160><c> want</c><00:14:00.399><c> to</c>

00:14:00.629 --> 00:14:00.639 align:start position:0%
after we do do the comparison we want to
 

00:14:00.639 --> 00:14:02.389 align:start position:0%
after we do do the comparison we want to
update<00:14:01.120><c> our</c><00:14:01.360><c> left</c><00:14:01.600><c> and</c><00:14:01.680><c> right</c><00:14:01.920><c> pointers</c><00:14:02.240><c> right</c>

00:14:02.389 --> 00:14:02.399 align:start position:0%
update our left and right pointers right
 

00:14:02.399 --> 00:14:05.030 align:start position:0%
update our left and right pointers right
we<00:14:02.560><c> want</c><00:14:02.639><c> to</c><00:14:02.720><c> compare</c><00:14:03.120><c> the</c><00:14:03.360><c> next</c><00:14:03.760><c> position</c><00:14:04.320><c> so</c>

00:14:05.030 --> 00:14:05.040 align:start position:0%
we want to compare the next position so
 

00:14:05.040 --> 00:14:06.310 align:start position:0%
we want to compare the next position so
to<00:14:05.199><c> the</c><00:14:05.360><c> left</c><00:14:05.600><c> pointer</c><00:14:05.920><c> we're</c><00:14:06.079><c> going</c><00:14:06.160><c> to</c>

00:14:06.310 --> 00:14:06.320 align:start position:0%
to the left pointer we're going to
 

00:14:06.320 --> 00:14:08.310 align:start position:0%
to the left pointer we're going to
increment<00:14:06.720><c> it</c><00:14:06.800><c> by</c><00:14:07.040><c> one</c><00:14:07.440><c> to</c><00:14:07.680><c> the</c><00:14:07.760><c> right</c><00:14:08.000><c> pointer</c>

00:14:08.310 --> 00:14:08.320 align:start position:0%
increment it by one to the right pointer
 

00:14:08.320 --> 00:14:10.230 align:start position:0%
increment it by one to the right pointer
we're<00:14:08.480><c> going</c><00:14:08.560><c> to</c><00:14:08.639><c> decrement</c><00:14:09.199><c> it</c><00:14:09.279><c> by</c><00:14:09.519><c> one</c><00:14:10.000><c> so</c>

00:14:10.230 --> 00:14:10.240 align:start position:0%
we're going to decrement it by one so
 

00:14:10.240 --> 00:14:12.069 align:start position:0%
we're going to decrement it by one so
just<00:14:10.399><c> moving</c><00:14:10.720><c> to</c><00:14:10.880><c> the</c><00:14:10.959><c> next</c><00:14:11.199><c> position</c><00:14:11.760><c> to</c><00:14:11.920><c> do</c>

00:14:12.069 --> 00:14:12.079 align:start position:0%
just moving to the next position to do
 

00:14:12.079 --> 00:14:14.470 align:start position:0%
just moving to the next position to do
the<00:14:12.320><c> next</c><00:14:12.720><c> comparison</c><00:14:13.600><c> on</c><00:14:14.000><c> the</c><00:14:14.160><c> next</c>

00:14:14.470 --> 00:14:14.480 align:start position:0%
the next comparison on the next
 

00:14:14.480 --> 00:14:17.110 align:start position:0%
the next comparison on the next
iteration<00:14:14.959><c> of</c><00:14:15.040><c> the</c><00:14:15.199><c> while</c><00:14:15.440><c> loop</c><00:14:15.839><c> so</c><00:14:16.079><c> now</c><00:14:16.720><c> this</c>

00:14:17.110 --> 00:14:17.120 align:start position:0%
iteration of the while loop so now this
 

00:14:17.120 --> 00:14:19.990 align:start position:0%
iteration of the while loop so now this
is<00:14:17.360><c> the</c><00:14:17.519><c> entire</c><00:14:18.000><c> code</c><00:14:18.639><c> so</c><00:14:19.199><c> let's</c><00:14:19.440><c> just</c><00:14:19.680><c> run</c><00:14:19.920><c> it</c>

00:14:19.990 --> 00:14:20.000 align:start position:0%
is the entire code so let's just run it
 

00:14:20.000 --> 00:14:21.750 align:start position:0%
is the entire code so let's just run it
to<00:14:20.079><c> make</c><00:14:20.240><c> sure</c><00:14:20.399><c> that</c><00:14:20.560><c> it</c><00:14:20.720><c> works</c><00:14:21.279><c> okay</c><00:14:21.519><c> i</c><00:14:21.600><c> was</c>

00:14:21.750 --> 00:14:21.760 align:start position:0%
to make sure that it works okay i was
 

00:14:21.760 --> 00:14:23.430 align:start position:0%
to make sure that it works okay i was
dumb<00:14:22.079><c> in</c><00:14:22.240><c> python</c><00:14:22.639><c> if</c><00:14:22.800><c> you</c><00:14:22.880><c> want</c><00:14:23.040><c> to</c><00:14:23.120><c> call</c>

00:14:23.430 --> 00:14:23.440 align:start position:0%
dumb in python if you want to call
 

00:14:23.440 --> 00:14:25.990 align:start position:0%
dumb in python if you want to call
another<00:14:23.839><c> function</c><00:14:24.639><c> inside</c><00:14:25.040><c> of</c><00:14:25.120><c> an</c><00:14:25.360><c> object</c><00:14:25.839><c> you</c>

00:14:25.990 --> 00:14:26.000 align:start position:0%
another function inside of an object you
 

00:14:26.000 --> 00:14:29.189 align:start position:0%
another function inside of an object you
have<00:14:26.240><c> to</c><00:14:26.399><c> use</c><00:14:26.959><c> the</c><00:14:27.360><c> self</c><00:14:27.839><c> keyword</c><00:14:28.720><c> so</c><00:14:28.959><c> let's</c>

00:14:29.189 --> 00:14:29.199 align:start position:0%
have to use the self keyword so let's
 

00:14:29.199 --> 00:14:31.189 align:start position:0%
have to use the self keyword so let's
try<00:14:29.440><c> that</c><00:14:29.600><c> one</c><00:14:29.760><c> more</c><00:14:30.079><c> time</c><00:14:30.639><c> and</c><00:14:30.880><c> as</c><00:14:31.040><c> you</c><00:14:31.120><c> can</c>

00:14:31.189 --> 00:14:31.199 align:start position:0%
try that one more time and as you can
 

00:14:31.199 --> 00:14:32.949 align:start position:0%
try that one more time and as you can
see<00:14:31.360><c> on</c><00:14:31.519><c> the</c><00:14:31.600><c> left</c><00:14:31.920><c> yes</c><00:14:32.160><c> it</c><00:14:32.320><c> does</c><00:14:32.560><c> work</c><00:14:32.800><c> but</c>

00:14:32.949 --> 00:14:32.959 align:start position:0%
see on the left yes it does work but
 

00:14:32.959 --> 00:14:34.710 align:start position:0%
see on the left yes it does work but
it's<00:14:33.120><c> actually</c><00:14:33.440><c> slightly</c><00:14:34.000><c> less</c><00:14:34.240><c> efficient</c>

00:14:34.710 --> 00:14:34.720 align:start position:0%
it's actually slightly less efficient
 

00:14:34.720 --> 00:14:36.389 align:start position:0%
it's actually slightly less efficient
than<00:14:35.040><c> the</c><00:14:35.199><c> other</c><00:14:35.440><c> solution</c><00:14:35.920><c> even</c><00:14:36.079><c> though</c><00:14:36.240><c> the</c>

00:14:36.389 --> 00:14:36.399 align:start position:0%
than the other solution even though the
 

00:14:36.399 --> 00:14:39.750 align:start position:0%
than the other solution even though the
big<00:14:36.959><c> o</c><00:14:37.199><c> time</c><00:14:37.519><c> complexity</c><00:14:38.240><c> is</c><00:14:38.399><c> the</c><00:14:38.560><c> exact</c><00:14:38.880><c> same</c>

00:14:39.750 --> 00:14:39.760 align:start position:0%
big o time complexity is the exact same
 

00:14:39.760 --> 00:14:41.189 align:start position:0%
big o time complexity is the exact same
and<00:14:40.000><c> the</c><00:14:40.160><c> memory</c><00:14:40.480><c> complexity</c><00:14:41.040><c> of</c><00:14:41.120><c> the</c>

00:14:41.189 --> 00:14:41.199 align:start position:0%
and the memory complexity of the
 

00:14:41.199 --> 00:14:42.790 align:start position:0%
and the memory complexity of the
solution<00:14:41.600><c> is</c><00:14:41.760><c> actually</c><00:14:42.160><c> better</c><00:14:42.480><c> than</c><00:14:42.639><c> the</c>

00:14:42.790 --> 00:14:42.800 align:start position:0%
solution is actually better than the
 

00:14:42.800 --> 00:14:45.430 align:start position:0%
solution is actually better than the
other<00:14:43.040><c> one</c><00:14:43.199><c> this</c><00:14:43.440><c> is</c><00:14:43.920><c> no</c><00:14:44.240><c> extra</c><00:14:44.639><c> memory</c><00:14:45.040><c> needed</c>

00:14:45.430 --> 00:14:45.440 align:start position:0%
other one this is no extra memory needed
 

00:14:45.440 --> 00:14:47.189 align:start position:0%
other one this is no extra memory needed
as<00:14:45.600><c> you</c><00:14:45.680><c> can</c><00:14:45.839><c> see</c><00:14:46.399><c> so</c><00:14:46.560><c> i</c><00:14:46.639><c> really</c><00:14:46.880><c> hope</c><00:14:47.120><c> that</c>

00:14:47.189 --> 00:14:47.199 align:start position:0%
as you can see so i really hope that
 

00:14:47.199 --> 00:14:49.269 align:start position:0%
as you can see so i really hope that
this<00:14:47.360><c> was</c><00:14:47.519><c> helpful</c><00:14:48.000><c> if</c><00:14:48.160><c> it</c><00:14:48.320><c> was</c><00:14:48.720><c> please</c><00:14:49.040><c> like</c>

00:14:49.269 --> 00:14:49.279 align:start position:0%
this was helpful if it was please like
 

00:14:49.279 --> 00:14:50.790 align:start position:0%
this was helpful if it was please like
and<00:14:49.360><c> subscribe</c><00:14:49.920><c> it</c><00:14:50.079><c> really</c><00:14:50.320><c> supports</c><00:14:50.720><c> the</c>

00:14:50.790 --> 00:14:50.800 align:start position:0%
and subscribe it really supports the
 

00:14:50.800 --> 00:14:52.629 align:start position:0%
and subscribe it really supports the
channel<00:14:51.199><c> a</c><00:14:51.360><c> lot</c><00:14:51.680><c> consider</c><00:14:52.160><c> checking</c><00:14:52.399><c> out</c><00:14:52.480><c> my</c>

00:14:52.629 --> 00:14:52.639 align:start position:0%
channel a lot consider checking out my
 

00:14:52.639 --> 00:14:54.150 align:start position:0%
channel a lot consider checking out my
patreon<00:14:53.120><c> where</c><00:14:53.279><c> you</c><00:14:53.360><c> can</c><00:14:53.519><c> further</c><00:14:53.839><c> support</c>

00:14:54.150 --> 00:14:54.160 align:start position:0%
patreon where you can further support
 

00:14:54.160 --> 00:14:55.910 align:start position:0%
patreon where you can further support
the<00:14:54.320><c> channel</c><00:14:54.720><c> and</c><00:14:54.880><c> hopefully</c><00:14:55.440><c> i'll</c><00:14:55.600><c> see</c><00:14:55.760><c> you</c>

00:14:55.910 --> 00:14:55.920 align:start position:0%
the channel and hopefully i'll see you
 

00:14:55.920 --> 00:14:59.600 align:start position:0%
the channel and hopefully i'll see you
pretty<00:14:56.160><c> soon</c><00:14:56.639><c> thanks</c><00:14:56.880><c> for</c><00:14:57.040><c> watching</c>

