WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.829 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.640><c> welcome</c><00:00:01.120><c> back</c><00:00:01.439><c> and</c><00:00:01.599><c> let's</c>

00:00:01.829 --> 00:00:01.839 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.839 --> 00:00:03.669 align:start position:0%
hey everyone welcome back and let's
write<00:00:02.000><c> some</c><00:00:02.240><c> more</c><00:00:02.480><c> neat</c><00:00:02.720><c> code</c><00:00:02.960><c> today</c><00:00:03.199><c> so</c><00:00:03.360><c> today</c>

00:00:03.669 --> 00:00:03.679 align:start position:0%
write some more neat code today so today
 

00:00:03.679 --> 00:00:05.349 align:start position:0%
write some more neat code today so today
let's<00:00:03.919><c> solve</c><00:00:04.319><c> binary</c><00:00:04.880><c> tree</c>

00:00:05.349 --> 00:00:05.359 align:start position:0%
let's solve binary tree
 

00:00:05.359 --> 00:00:08.549 align:start position:0%
let's solve binary tree
maximum<00:00:06.080><c> path</c><00:00:06.480><c> sum</c><00:00:07.279><c> and</c><00:00:07.520><c> yes</c><00:00:07.759><c> this</c><00:00:08.000><c> is</c><00:00:08.160><c> another</c>

00:00:08.549 --> 00:00:08.559 align:start position:0%
maximum path sum and yes this is another
 

00:00:08.559 --> 00:00:11.350 align:start position:0%
maximum path sum and yes this is another
problem<00:00:08.880><c> from</c><00:00:09.120><c> the</c><00:00:09.200><c> blind</c><00:00:09.679><c> 75</c><00:00:10.320><c> leak</c><00:00:10.559><c> code</c><00:00:10.880><c> list</c>

00:00:11.350 --> 00:00:11.360 align:start position:0%
problem from the blind 75 leak code list
 

00:00:11.360 --> 00:00:14.230 align:start position:0%
problem from the blind 75 leak code list
so<00:00:11.599><c> this</c><00:00:11.840><c> is</c><00:00:12.000><c> a</c><00:00:12.080><c> list</c><00:00:12.400><c> of</c><00:00:12.480><c> 75</c><00:00:13.360><c> common</c><00:00:13.759><c> leak</c><00:00:14.000><c> code</c>

00:00:14.230 --> 00:00:14.240 align:start position:0%
so this is a list of 75 common leak code
 

00:00:14.240 --> 00:00:15.589 align:start position:0%
so this is a list of 75 common leak code
questions<00:00:14.719><c> and</c><00:00:14.880><c> today</c><00:00:15.120><c> we're</c><00:00:15.360><c> going</c><00:00:15.440><c> to</c><00:00:15.519><c> be</c>

00:00:15.589 --> 00:00:15.599 align:start position:0%
questions and today we're going to be
 

00:00:15.599 --> 00:00:17.109 align:start position:0%
questions and today we're going to be
solving<00:00:16.000><c> this</c><00:00:16.240><c> tree</c><00:00:16.640><c> question</c>

00:00:17.109 --> 00:00:17.119 align:start position:0%
solving this tree question
 

00:00:17.119 --> 00:00:19.510 align:start position:0%
solving this tree question
binary<00:00:17.520><c> tree</c><00:00:17.760><c> maximum</c><00:00:18.320><c> pathsome</c><00:00:18.880><c> the</c><00:00:19.119><c> link</c><00:00:19.359><c> to</c>

00:00:19.510 --> 00:00:19.520 align:start position:0%
binary tree maximum pathsome the link to
 

00:00:19.520 --> 00:00:20.710 align:start position:0%
binary tree maximum pathsome the link to
this<00:00:19.680><c> spreadsheet</c><00:00:20.160><c> will</c><00:00:20.400><c> be</c><00:00:20.480><c> in</c><00:00:20.640><c> the</c>

00:00:20.710 --> 00:00:20.720 align:start position:0%
this spreadsheet will be in the
 

00:00:20.720 --> 00:00:22.150 align:start position:0%
this spreadsheet will be in the
description<00:00:21.279><c> if</c><00:00:21.359><c> you</c><00:00:21.520><c> do</c><00:00:21.680><c> want</c><00:00:21.840><c> to</c><00:00:21.920><c> take</c><00:00:22.080><c> a</c>

00:00:22.150 --> 00:00:22.160 align:start position:0%
description if you do want to take a
 

00:00:22.160 --> 00:00:22.630 align:start position:0%
description if you do want to take a
look

00:00:22.630 --> 00:00:22.640 align:start position:0%
look
 

00:00:22.640 --> 00:00:24.470 align:start position:0%
look
and<00:00:22.800><c> i</c><00:00:22.880><c> think</c><00:00:23.039><c> i've</c><00:00:23.279><c> almost</c><00:00:23.680><c> done</c><00:00:24.080><c> all</c><00:00:24.320><c> the</c>

00:00:24.470 --> 00:00:24.480 align:start position:0%
and i think i've almost done all the
 

00:00:24.480 --> 00:00:26.150 align:start position:0%
and i think i've almost done all the
problems<00:00:24.880><c> that</c><00:00:25.039><c> i</c><00:00:25.119><c> wanted</c><00:00:25.439><c> to</c><00:00:25.519><c> do</c><00:00:25.760><c> from</c><00:00:25.920><c> this</c>

00:00:26.150 --> 00:00:26.160 align:start position:0%
problems that i wanted to do from this
 

00:00:26.160 --> 00:00:28.070 align:start position:0%
problems that i wanted to do from this
list<00:00:26.480><c> nearly</c><00:00:26.880><c> all</c><00:00:27.039><c> of</c><00:00:27.199><c> them</c><00:00:27.439><c> so</c><00:00:27.680><c> far</c>

00:00:28.070 --> 00:00:28.080 align:start position:0%
list nearly all of them so far
 

00:00:28.080 --> 00:00:30.790 align:start position:0%
list nearly all of them so far
so<00:00:28.320><c> a</c><00:00:28.480><c> path</c><00:00:28.880><c> is</c><00:00:29.039><c> defined</c><00:00:29.599><c> in</c><00:00:29.760><c> a</c><00:00:29.840><c> binary</c><00:00:30.320><c> tree</c><00:00:30.640><c> as</c>

00:00:30.790 --> 00:00:30.800 align:start position:0%
so a path is defined in a binary tree as
 

00:00:30.800 --> 00:00:32.709 align:start position:0%
so a path is defined in a binary tree as
being<00:00:31.039><c> a</c><00:00:31.199><c> sequence</c><00:00:31.760><c> of</c><00:00:32.000><c> nodes</c><00:00:32.399><c> where</c>

00:00:32.709 --> 00:00:32.719 align:start position:0%
being a sequence of nodes where
 

00:00:32.719 --> 00:00:34.950 align:start position:0%
being a sequence of nodes where
each<00:00:33.120><c> pair</c><00:00:33.360><c> of</c><00:00:33.520><c> adjacent</c><00:00:34.239><c> nodes</c><00:00:34.640><c> in</c><00:00:34.719><c> the</c>

00:00:34.950 --> 00:00:34.960 align:start position:0%
each pair of adjacent nodes in the
 

00:00:34.960 --> 00:00:35.990 align:start position:0%
each pair of adjacent nodes in the
sequence

00:00:35.990 --> 00:00:36.000 align:start position:0%
sequence
 

00:00:36.000 --> 00:00:39.110 align:start position:0%
sequence
has<00:00:36.239><c> a</c><00:00:36.399><c> can</c><00:00:36.800><c> as</c><00:00:37.040><c> a</c><00:00:37.280><c> edge</c><00:00:37.680><c> connecting</c><00:00:38.399><c> them</c><00:00:38.879><c> and</c>

00:00:39.110 --> 00:00:39.120 align:start position:0%
has a can as a edge connecting them and
 

00:00:39.120 --> 00:00:41.750 align:start position:0%
has a can as a edge connecting them and
a<00:00:39.200><c> node</c><00:00:39.600><c> can</c><00:00:39.920><c> only</c><00:00:40.320><c> appear</c><00:00:40.800><c> in</c><00:00:40.879><c> the</c><00:00:41.120><c> sequence</c>

00:00:41.750 --> 00:00:41.760 align:start position:0%
a node can only appear in the sequence
 

00:00:41.760 --> 00:00:45.029 align:start position:0%
a node can only appear in the sequence
at<00:00:42.079><c> most</c><00:00:42.719><c> once</c><00:00:43.360><c> and</c><00:00:43.520><c> the</c><00:00:43.840><c> path</c><00:00:44.239><c> sum</c><00:00:44.640><c> of</c><00:00:44.800><c> that</c>

00:00:45.029 --> 00:00:45.039 align:start position:0%
at most once and the path sum of that
 

00:00:45.039 --> 00:00:47.430 align:start position:0%
at most once and the path sum of that
path<00:00:45.440><c> is</c><00:00:45.520><c> defined</c><00:00:45.920><c> as</c><00:00:46.079><c> being</c><00:00:46.320><c> the</c><00:00:46.559><c> sum</c><00:00:46.960><c> of</c><00:00:47.200><c> all</c>

00:00:47.430 --> 00:00:47.440 align:start position:0%
path is defined as being the sum of all
 

00:00:47.440 --> 00:00:49.590 align:start position:0%
path is defined as being the sum of all
the<00:00:47.600><c> nodes</c><00:00:48.079><c> values</c><00:00:48.640><c> in</c><00:00:48.800><c> that</c><00:00:49.039><c> path</c>

00:00:49.590 --> 00:00:49.600 align:start position:0%
the nodes values in that path
 

00:00:49.600 --> 00:00:51.830 align:start position:0%
the nodes values in that path
so<00:00:49.760><c> for</c><00:00:50.000><c> example</c><00:00:50.640><c> in</c><00:00:50.960><c> this</c><00:00:51.280><c> example</c><00:00:51.680><c> we're</c>

00:00:51.830 --> 00:00:51.840 align:start position:0%
so for example in this example we're
 

00:00:51.840 --> 00:00:52.869 align:start position:0%
so for example in this example we're
given<00:00:52.079><c> a</c><00:00:52.239><c> tree</c>

00:00:52.869 --> 00:00:52.879 align:start position:0%
given a tree
 

00:00:52.879 --> 00:00:56.470 align:start position:0%
given a tree
and<00:00:53.840><c> the</c><00:00:54.079><c> path</c><00:00:54.559><c> is</c><00:00:54.719><c> basically</c><00:00:55.600><c> going</c><00:00:55.920><c> like</c>

00:00:56.470 --> 00:00:56.480 align:start position:0%
and the path is basically going like
 

00:00:56.480 --> 00:00:59.510 align:start position:0%
and the path is basically going like
this<00:00:57.120><c> right</c><00:00:57.360><c> you</c><00:00:57.600><c> see</c><00:00:57.920><c> how</c><00:00:58.960><c> you</c><00:00:59.039><c> know</c><00:00:59.199><c> we</c><00:00:59.359><c> have</c>

00:00:59.510 --> 00:00:59.520 align:start position:0%
this right you see how you know we have
 

00:00:59.520 --> 00:01:01.110 align:start position:0%
this right you see how you know we have
a<00:00:59.600><c> node</c><00:01:00.079><c> we</c><00:01:00.239><c> go</c><00:01:00.480><c> here</c>

00:01:01.110 --> 00:01:01.120 align:start position:0%
a node we go here
 

00:01:01.120 --> 00:01:02.790 align:start position:0%
a node we go here
and<00:01:01.199><c> then</c><00:01:01.359><c> we</c><00:01:01.520><c> go</c><00:01:01.680><c> here</c><00:01:01.920><c> right</c><00:01:02.160><c> it's</c><00:01:02.399><c> it</c><00:01:02.559><c> this</c>

00:01:02.790 --> 00:01:02.800 align:start position:0%
and then we go here right it's it this
 

00:01:02.800 --> 00:01:04.390 align:start position:0%
and then we go here right it's it this
is<00:01:02.960><c> this</c><00:01:03.199><c> counts</c><00:01:03.600><c> as</c><00:01:03.840><c> a</c><00:01:04.000><c> path</c>

00:01:04.390 --> 00:01:04.400 align:start position:0%
is this counts as a path
 

00:01:04.400 --> 00:01:07.190 align:start position:0%
is this counts as a path
right<00:01:04.960><c> even</c><00:01:05.199><c> though</c><00:01:05.920><c> it's</c><00:01:06.560><c> even</c><00:01:06.720><c> though</c><00:01:06.960><c> from</c>

00:01:07.190 --> 00:01:07.200 align:start position:0%
right even though it's even though from
 

00:01:07.200 --> 00:01:08.310 align:start position:0%
right even though it's even though from
here<00:01:07.520><c> we're</c><00:01:07.680><c> technically</c>

00:01:08.310 --> 00:01:08.320 align:start position:0%
here we're technically
 

00:01:08.320 --> 00:01:10.630 align:start position:0%
here we're technically
splitting<00:01:08.799><c> we're</c><00:01:08.960><c> going</c><00:01:09.280><c> left</c><00:01:09.600><c> and</c><00:01:09.840><c> right</c>

00:01:10.630 --> 00:01:10.640 align:start position:0%
splitting we're going left and right
 

00:01:10.640 --> 00:01:12.870 align:start position:0%
splitting we're going left and right
this<00:01:10.880><c> is</c><00:01:11.040><c> still</c><00:01:11.360><c> a</c><00:01:11.840><c> you</c><00:01:11.920><c> know</c><00:01:12.080><c> a</c><00:01:12.240><c> sequence</c><00:01:12.720><c> of</c>

00:01:12.870 --> 00:01:12.880 align:start position:0%
this is still a you know a sequence of
 

00:01:12.880 --> 00:01:14.710 align:start position:0%
this is still a you know a sequence of
nodes<00:01:13.119><c> right</c><00:01:13.360><c> it</c><00:01:13.439><c> could</c><00:01:13.600><c> be</c><00:01:13.760><c> read</c><00:01:14.080><c> like</c>

00:01:14.710 --> 00:01:14.720 align:start position:0%
nodes right it could be read like
 

00:01:14.720 --> 00:01:16.390 align:start position:0%
nodes right it could be read like
in<00:01:14.880><c> any</c><00:01:15.119><c> direction</c><00:01:15.600><c> but</c><00:01:15.840><c> it's</c><00:01:16.080><c> it's</c><00:01:16.240><c> still</c>

00:01:16.390 --> 00:01:16.400 align:start position:0%
in any direction but it's it's still
 

00:01:16.400 --> 00:01:18.550 align:start position:0%
in any direction but it's it's still
like<00:01:16.640><c> a</c><00:01:16.799><c> sequence</c><00:01:17.520><c> and</c><00:01:17.600><c> then</c><00:01:17.759><c> when</c><00:01:17.920><c> you</c><00:01:18.080><c> take</c>

00:01:18.550 --> 00:01:18.560 align:start position:0%
like a sequence and then when you take
 

00:01:18.560 --> 00:01:20.950 align:start position:0%
like a sequence and then when you take
that<00:01:18.880><c> path</c><00:01:19.360><c> you</c><00:01:19.600><c> basically</c><00:01:20.000><c> get</c><00:01:20.320><c> one</c><00:01:20.479><c> plus</c><00:01:20.720><c> two</c>

00:01:20.950 --> 00:01:20.960 align:start position:0%
that path you basically get one plus two
 

00:01:20.960 --> 00:01:22.390 align:start position:0%
that path you basically get one plus two
plus<00:01:21.119><c> three</c><00:01:21.360><c> so</c><00:01:21.520><c> that's</c><00:01:21.759><c> going</c><00:01:21.840><c> to</c><00:01:21.920><c> be</c><00:01:22.080><c> the</c>

00:01:22.390 --> 00:01:22.400 align:start position:0%
plus three so that's going to be the
 

00:01:22.400 --> 00:01:23.350 align:start position:0%
plus three so that's going to be the
output

00:01:23.350 --> 00:01:23.360 align:start position:0%
output
 

00:01:23.360 --> 00:01:25.270 align:start position:0%
output
now<00:01:23.600><c> of</c><00:01:23.759><c> course</c><00:01:24.159><c> in</c><00:01:24.400><c> this</c><00:01:24.640><c> problem</c><00:01:25.040><c> we</c><00:01:25.119><c> can</c>

00:01:25.270 --> 00:01:25.280 align:start position:0%
now of course in this problem we can
 

00:01:25.280 --> 00:01:27.109 align:start position:0%
now of course in this problem we can
actually<00:01:25.600><c> have</c><00:01:25.920><c> negative</c><00:01:26.400><c> values</c><00:01:26.799><c> so</c><00:01:26.960><c> for</c>

00:01:27.109 --> 00:01:27.119 align:start position:0%
actually have negative values so for
 

00:01:27.119 --> 00:01:27.910 align:start position:0%
actually have negative values so for
example<00:01:27.439><c> this</c>

00:01:27.910 --> 00:01:27.920 align:start position:0%
example this
 

00:01:27.920 --> 00:01:30.310 align:start position:0%
example this
2<00:01:28.240><c> could</c><00:01:28.479><c> be</c><00:01:28.799><c> negative</c><00:01:29.280><c> 2.</c><00:01:29.759><c> so</c><00:01:29.920><c> then</c><00:01:30.159><c> what</c>

00:01:30.310 --> 00:01:30.320 align:start position:0%
2 could be negative 2. so then what
 

00:01:30.320 --> 00:01:32.390 align:start position:0%
2 could be negative 2. so then what
would<00:01:30.479><c> be</c><00:01:30.640><c> the</c><00:01:30.799><c> maximum</c><00:01:31.280><c> path</c><00:01:31.520><c> sum</c><00:01:31.759><c> then</c><00:01:32.000><c> well</c>

00:01:32.390 --> 00:01:32.400 align:start position:0%
would be the maximum path sum then well
 

00:01:32.400 --> 00:01:33.910 align:start position:0%
would be the maximum path sum then well
we<00:01:32.560><c> don't</c><00:01:32.720><c> want</c><00:01:32.799><c> to</c><00:01:32.880><c> add</c><00:01:33.200><c> negative</c><00:01:33.520><c> values</c>

00:01:33.910 --> 00:01:33.920 align:start position:0%
we don't want to add negative values
 

00:01:33.920 --> 00:01:36.069 align:start position:0%
we don't want to add negative values
that<00:01:34.159><c> won't</c><00:01:34.560><c> increase</c><00:01:35.200><c> our</c><00:01:35.360><c> total</c><00:01:35.759><c> so</c>

00:01:36.069 --> 00:01:36.079 align:start position:0%
that won't increase our total so
 

00:01:36.079 --> 00:01:37.670 align:start position:0%
that won't increase our total so
in<00:01:36.159><c> this</c><00:01:36.320><c> case</c><00:01:36.479><c> we're</c><00:01:36.640><c> going</c><00:01:36.799><c> to</c><00:01:36.880><c> go</c><00:01:37.119><c> from</c><00:01:37.360><c> here</c>

00:01:37.670 --> 00:01:37.680 align:start position:0%
in this case we're going to go from here
 

00:01:37.680 --> 00:01:39.109 align:start position:0%
in this case we're going to go from here
to<00:01:37.840><c> here</c><00:01:38.079><c> right</c><00:01:38.240><c> this</c><00:01:38.479><c> is</c><00:01:38.560><c> going</c><00:01:38.640><c> to</c><00:01:38.720><c> be</c><00:01:38.960><c> our</c>

00:01:39.109 --> 00:01:39.119 align:start position:0%
to here right this is going to be our
 

00:01:39.119 --> 00:01:39.990 align:start position:0%
to here right this is going to be our
path<00:01:39.439><c> 1</c><00:01:39.680><c> plus</c>

00:01:39.990 --> 00:01:40.000 align:start position:0%
path 1 plus
 

00:01:40.000 --> 00:01:42.069 align:start position:0%
path 1 plus
3<00:01:40.159><c> and</c><00:01:40.240><c> then</c><00:01:40.400><c> we</c><00:01:40.560><c> would</c><00:01:40.720><c> return</c><00:01:41.280><c> 4.</c><00:01:41.759><c> now</c><00:01:41.920><c> what</c>

00:01:42.069 --> 00:01:42.079 align:start position:0%
3 and then we would return 4. now what
 

00:01:42.079 --> 00:01:43.749 align:start position:0%
3 and then we would return 4. now what
happens<00:01:42.399><c> if</c><00:01:42.799><c> this</c><00:01:43.119><c> negative</c>

00:01:43.749 --> 00:01:43.759 align:start position:0%
happens if this negative
 

00:01:43.759 --> 00:01:46.550 align:start position:0%
happens if this negative
1<00:01:44.960><c> this</c><00:01:45.119><c> value</c><00:01:45.439><c> was</c><00:01:45.520><c> a</c><00:01:45.600><c> negative</c><00:01:45.920><c> 1</c><00:01:46.159><c> instead</c>

00:01:46.550 --> 00:01:46.560 align:start position:0%
1 this value was a negative 1 instead
 

00:01:46.560 --> 00:01:47.109 align:start position:0%
1 this value was a negative 1 instead
right

00:01:47.109 --> 00:01:47.119 align:start position:0%
right
 

00:01:47.119 --> 00:01:49.910 align:start position:0%
right
now<00:01:47.600><c> we</c><00:01:47.759><c> could</c><00:01:47.920><c> just</c><00:01:48.159><c> take</c><00:01:48.560><c> 3</c><00:01:48.960><c> by</c><00:01:49.200><c> itself</c><00:01:49.680><c> that</c>

00:01:49.910 --> 00:01:49.920 align:start position:0%
now we could just take 3 by itself that
 

00:01:49.920 --> 00:01:50.870 align:start position:0%
now we could just take 3 by itself that
counts<00:01:50.240><c> as</c><00:01:50.399><c> a</c><00:01:50.479><c> path</c>

00:01:50.870 --> 00:01:50.880 align:start position:0%
counts as a path
 

00:01:50.880 --> 00:01:53.030 align:start position:0%
counts as a path
or<00:01:51.119><c> we</c><00:01:51.200><c> could</c><00:01:51.360><c> take</c><00:01:51.680><c> 2</c><00:01:52.000><c> by</c><00:01:52.159><c> itself</c><00:01:52.640><c> that</c><00:01:52.799><c> counts</c>

00:01:53.030 --> 00:01:53.040 align:start position:0%
or we could take 2 by itself that counts
 

00:01:53.040 --> 00:01:53.990 align:start position:0%
or we could take 2 by itself that counts
as<00:01:53.119><c> a</c><00:01:53.200><c> path</c><00:01:53.439><c> or</c><00:01:53.600><c> we</c><00:01:53.680><c> could</c>

00:01:53.990 --> 00:01:54.000 align:start position:0%
as a path or we could
 

00:01:54.000 --> 00:01:56.230 align:start position:0%
as a path or we could
still<00:01:54.320><c> take</c><00:01:54.560><c> that</c><00:01:54.880><c> same</c><00:01:55.360><c> path</c><00:01:55.840><c> which</c><00:01:56.079><c> would</c>

00:01:56.230 --> 00:01:56.240 align:start position:0%
still take that same path which would
 

00:01:56.240 --> 00:01:58.870 align:start position:0%
still take that same path which would
give<00:01:56.479><c> us</c><00:01:56.640><c> 2</c><00:01:56.960><c> minus</c><00:01:57.360><c> 1</c><00:01:57.600><c> plus</c><00:01:57.840><c> 3</c><00:01:58.079><c> which</c><00:01:58.320><c> gives</c><00:01:58.560><c> us</c>

00:01:58.870 --> 00:01:58.880 align:start position:0%
give us 2 minus 1 plus 3 which gives us
 

00:01:58.880 --> 00:02:01.350 align:start position:0%
give us 2 minus 1 plus 3 which gives us
4<00:01:59.360><c> and</c><00:01:59.520><c> that</c><00:01:59.840><c> is</c><00:02:00.000><c> actually</c><00:02:00.320><c> the</c><00:02:00.479><c> max</c><00:02:01.040><c> once</c>

00:02:01.350 --> 00:02:01.360 align:start position:0%
4 and that is actually the max once
 

00:02:01.360 --> 00:02:02.069 align:start position:0%
4 and that is actually the max once
again

00:02:02.069 --> 00:02:02.079 align:start position:0%
again
 

00:02:02.079 --> 00:02:04.230 align:start position:0%
again
so<00:02:02.320><c> it's</c><00:02:02.479><c> possible</c><00:02:02.880><c> that</c><00:02:03.119><c> negative</c><00:02:03.520><c> values</c>

00:02:04.230 --> 00:02:04.240 align:start position:0%
so it's possible that negative values
 

00:02:04.240 --> 00:02:05.990 align:start position:0%
so it's possible that negative values
could<00:02:04.640><c> still</c><00:02:05.040><c> be</c><00:02:05.280><c> included</c>

00:02:05.990 --> 00:02:06.000 align:start position:0%
could still be included
 

00:02:06.000 --> 00:02:08.229 align:start position:0%
could still be included
in<00:02:06.240><c> the</c><00:02:06.479><c> output</c><00:02:07.200><c> so</c><00:02:07.439><c> you</c><00:02:07.520><c> might</c><00:02:07.840><c> think</c><00:02:08.080><c> well</c>

00:02:08.229 --> 00:02:08.239 align:start position:0%
in the output so you might think well
 

00:02:08.239 --> 00:02:09.430 align:start position:0%
in the output so you might think well
what<00:02:08.399><c> if</c><00:02:08.479><c> we</c><00:02:08.640><c> have</c><00:02:08.720><c> a</c><00:02:08.879><c> tree</c><00:02:09.200><c> of</c>

00:02:09.430 --> 00:02:09.440 align:start position:0%
what if we have a tree of
 

00:02:09.440 --> 00:02:11.750 align:start position:0%
what if we have a tree of
all<00:02:09.759><c> positive</c><00:02:10.239><c> values</c><00:02:10.720><c> like</c><00:02:10.879><c> this</c><00:02:11.120><c> one</c><00:02:11.280><c> can</c><00:02:11.520><c> we</c>

00:02:11.750 --> 00:02:11.760 align:start position:0%
all positive values like this one can we
 

00:02:11.760 --> 00:02:12.630 align:start position:0%
all positive values like this one can we
just<00:02:12.080><c> take</c>

00:02:12.630 --> 00:02:12.640 align:start position:0%
just take
 

00:02:12.640 --> 00:02:15.350 align:start position:0%
just take
every<00:02:13.280><c> single</c><00:02:13.840><c> node</c><00:02:14.239><c> like</c><00:02:14.480><c> basically</c><00:02:14.959><c> like</c>

00:02:15.350 --> 00:02:15.360 align:start position:0%
every single node like basically like
 

00:02:15.360 --> 00:02:16.150 align:start position:0%
every single node like basically like
this

00:02:16.150 --> 00:02:16.160 align:start position:0%
this
 

00:02:16.160 --> 00:02:19.030 align:start position:0%
this
and<00:02:16.720><c> call</c><00:02:16.959><c> it</c><00:02:17.120><c> a</c><00:02:17.280><c> path</c><00:02:18.160><c> and</c><00:02:18.239><c> just</c><00:02:18.480><c> add</c><00:02:18.800><c> every</c>

00:02:19.030 --> 00:02:19.040 align:start position:0%
and call it a path and just add every
 

00:02:19.040 --> 00:02:20.070 align:start position:0%
and call it a path and just add every
value<00:02:19.360><c> together</c><00:02:19.760><c> well</c>

00:02:20.070 --> 00:02:20.080 align:start position:0%
value together well
 

00:02:20.080 --> 00:02:23.110 align:start position:0%
value together well
no<00:02:20.640><c> and</c><00:02:20.800><c> the</c><00:02:20.959><c> reason</c><00:02:21.520><c> is</c><00:02:22.000><c> because</c><00:02:22.480><c> some</c><00:02:22.720><c> if</c>

00:02:23.110 --> 00:02:23.120 align:start position:0%
no and the reason is because some if
 

00:02:23.120 --> 00:02:25.990 align:start position:0%
no and the reason is because some if
we<00:02:23.280><c> had</c><00:02:23.760><c> this</c><00:02:24.319><c> structure</c><00:02:24.800><c> right</c><00:02:25.120><c> this</c><00:02:25.599><c> isn't</c>

00:02:25.990 --> 00:02:26.000 align:start position:0%
we had this structure right this isn't
 

00:02:26.000 --> 00:02:27.270 align:start position:0%
we had this structure right this isn't
really<00:02:26.319><c> a</c><00:02:26.640><c> path</c>

00:02:27.270 --> 00:02:27.280 align:start position:0%
really a path
 

00:02:27.280 --> 00:02:29.030 align:start position:0%
really a path
because<00:02:27.599><c> how</c><00:02:27.760><c> would</c><00:02:28.000><c> you</c><00:02:28.160><c> traverse</c><00:02:28.720><c> it</c><00:02:28.879><c> right</c>

00:02:29.030 --> 00:02:29.040 align:start position:0%
because how would you traverse it right
 

00:02:29.040 --> 00:02:30.470 align:start position:0%
because how would you traverse it right
we<00:02:29.120><c> could</c><00:02:29.360><c> start</c><00:02:29.680><c> here</c><00:02:30.000><c> then</c>

00:02:30.470 --> 00:02:30.480 align:start position:0%
we could start here then
 

00:02:30.480 --> 00:02:33.509 align:start position:0%
we could start here then
you<00:02:30.640><c> know</c><00:02:30.800><c> go</c><00:02:31.360><c> go</c><00:02:31.599><c> this</c><00:02:31.920><c> way</c><00:02:32.319><c> then</c><00:02:32.560><c> go</c><00:02:32.959><c> down</c>

00:02:33.509 --> 00:02:33.519 align:start position:0%
you know go go this way then go down
 

00:02:33.519 --> 00:02:36.070 align:start position:0%
you know go go this way then go down
but<00:02:33.680><c> then</c><00:02:34.080><c> here</c><00:02:34.560><c> we</c><00:02:34.800><c> have</c><00:02:34.879><c> to</c><00:02:35.040><c> make</c><00:02:35.200><c> a</c><00:02:35.440><c> split</c><00:02:35.920><c> we</c>

00:02:36.070 --> 00:02:36.080 align:start position:0%
but then here we have to make a split we
 

00:02:36.080 --> 00:02:38.550 align:start position:0%
but then here we have to make a split we
can't<00:02:36.319><c> go</c><00:02:36.560><c> in</c><00:02:36.879><c> two</c><00:02:37.200><c> directions</c><00:02:37.840><c> at</c><00:02:38.080><c> once</c><00:02:38.400><c> that</c>

00:02:38.550 --> 00:02:38.560 align:start position:0%
can't go in two directions at once that
 

00:02:38.560 --> 00:02:39.910 align:start position:0%
can't go in two directions at once that
doesn't<00:02:38.879><c> count</c><00:02:39.120><c> as</c><00:02:39.280><c> a</c><00:02:39.440><c> path</c>

00:02:39.910 --> 00:02:39.920 align:start position:0%
doesn't count as a path
 

00:02:39.920 --> 00:02:43.110 align:start position:0%
doesn't count as a path
so<00:02:40.239><c> basically</c><00:02:41.200><c> what</c><00:02:41.440><c> we</c><00:02:41.840><c> realize</c><00:02:42.480><c> is</c><00:02:42.800><c> as</c><00:02:42.959><c> we</c>

00:02:43.110 --> 00:02:43.120 align:start position:0%
so basically what we realize is as we
 

00:02:43.120 --> 00:02:44.630 align:start position:0%
so basically what we realize is as we
look<00:02:43.280><c> at</c><00:02:43.360><c> this</c><00:02:43.599><c> example</c><00:02:44.000><c> is</c><00:02:44.160><c> that</c>

00:02:44.630 --> 00:02:44.640 align:start position:0%
look at this example is that
 

00:02:44.640 --> 00:02:48.229 align:start position:0%
look at this example is that
if<00:02:44.959><c> we're</c><00:02:45.360><c> starting</c><00:02:46.000><c> at</c><00:02:46.319><c> a</c><00:02:46.640><c> node</c><00:02:47.440><c> we</c><00:02:47.599><c> can</c><00:02:47.840><c> only</c>

00:02:48.229 --> 00:02:48.239 align:start position:0%
if we're starting at a node we can only
 

00:02:48.239 --> 00:02:50.550 align:start position:0%
if we're starting at a node we can only
split<00:02:48.720><c> once</c><00:02:49.040><c> right</c><00:02:49.200><c> like</c><00:02:49.360><c> if</c><00:02:49.440><c> we're</c><00:02:49.680><c> here</c><00:02:50.319><c> we</c>

00:02:50.550 --> 00:02:50.560 align:start position:0%
split once right like if we're here we
 

00:02:50.560 --> 00:02:51.509 align:start position:0%
split once right like if we're here we
can<00:02:50.879><c> split</c>

00:02:51.509 --> 00:02:51.519 align:start position:0%
can split
 

00:02:51.519 --> 00:02:53.750 align:start position:0%
can split
in<00:02:51.680><c> two</c><00:02:51.920><c> directions</c><00:02:52.400><c> right</c><00:02:52.560><c> we</c><00:02:52.640><c> can</c><00:02:53.040><c> include</c><00:02:53.599><c> a</c>

00:02:53.750 --> 00:02:53.760 align:start position:0%
in two directions right we can include a
 

00:02:53.760 --> 00:02:55.430 align:start position:0%
in two directions right we can include a
path<00:02:54.000><c> from</c><00:02:54.239><c> here</c><00:02:54.560><c> from</c><00:02:54.800><c> the</c><00:02:54.879><c> left</c><00:02:55.120><c> side</c><00:02:55.360><c> and</c>

00:02:55.430 --> 00:02:55.440 align:start position:0%
path from here from the left side and
 

00:02:55.440 --> 00:02:56.790 align:start position:0%
path from here from the left side and
then<00:02:55.599><c> we</c><00:02:55.680><c> can</c><00:02:55.840><c> also</c><00:02:56.080><c> go</c><00:02:56.239><c> here</c><00:02:56.480><c> right</c>

00:02:56.790 --> 00:02:56.800 align:start position:0%
then we can also go here right
 

00:02:56.800 --> 00:02:59.509 align:start position:0%
then we can also go here right
and<00:02:57.280><c> if</c><00:02:57.440><c> we</c><00:02:57.680><c> get</c><00:02:57.840><c> to</c><00:02:58.000><c> this</c><00:02:58.319><c> portion</c><00:02:58.800><c> right</c><00:02:59.120><c> we</c>

00:02:59.509 --> 00:02:59.519 align:start position:0%
and if we get to this portion right we
 

00:02:59.519 --> 00:03:01.990 align:start position:0%
and if we get to this portion right we
already<00:03:00.000><c> had</c><00:03:00.239><c> a</c><00:03:00.400><c> split</c><00:03:00.959><c> up</c><00:03:01.200><c> above</c>

00:03:01.990 --> 00:03:02.000 align:start position:0%
already had a split up above
 

00:03:02.000 --> 00:03:04.470 align:start position:0%
already had a split up above
so<00:03:02.159><c> we</c><00:03:02.400><c> can't</c><00:03:02.720><c> split</c><00:03:03.360><c> twice</c><00:03:04.000><c> right</c><00:03:04.239><c> because</c>

00:03:04.470 --> 00:03:04.480 align:start position:0%
so we can't split twice right because
 

00:03:04.480 --> 00:03:06.309 align:start position:0%
so we can't split twice right because
then<00:03:04.720><c> it's</c><00:03:04.879><c> no</c><00:03:05.120><c> longer</c><00:03:05.440><c> a</c><00:03:05.599><c> path</c><00:03:05.920><c> so</c>

00:03:06.309 --> 00:03:06.319 align:start position:0%
then it's no longer a path so
 

00:03:06.319 --> 00:03:09.030 align:start position:0%
then it's no longer a path so
we<00:03:06.400><c> can</c><00:03:06.560><c> only</c><00:03:06.800><c> choose</c><00:03:07.360><c> one</c><00:03:07.599><c> of</c><00:03:07.760><c> these</c><00:03:08.480><c> nodes</c><00:03:08.959><c> we</c>

00:03:09.030 --> 00:03:09.040 align:start position:0%
we can only choose one of these nodes we
 

00:03:09.040 --> 00:03:10.630 align:start position:0%
we can only choose one of these nodes we
would<00:03:09.280><c> obviously</c><00:03:09.680><c> choose</c><00:03:09.920><c> the</c><00:03:10.080><c> bigger</c><00:03:10.400><c> one</c>

00:03:10.630 --> 00:03:10.640 align:start position:0%
would obviously choose the bigger one
 

00:03:10.640 --> 00:03:11.830 align:start position:0%
would obviously choose the bigger one
that's<00:03:10.879><c> a</c><00:03:11.040><c> five</c>

00:03:11.830 --> 00:03:11.840 align:start position:0%
that's a five
 

00:03:11.840 --> 00:03:14.149 align:start position:0%
that's a five
right<00:03:12.080><c> so</c><00:03:12.720><c> take</c><00:03:12.959><c> a</c><00:03:13.040><c> look</c><00:03:13.280><c> what</c><00:03:13.440><c> would</c><00:03:13.680><c> the</c><00:03:13.840><c> sum</c>

00:03:14.149 --> 00:03:14.159 align:start position:0%
right so take a look what would the sum
 

00:03:14.159 --> 00:03:16.309 align:start position:0%
right so take a look what would the sum
be<00:03:14.400><c> if</c><00:03:14.560><c> we</c><00:03:14.800><c> ended</c><00:03:15.040><c> up</c><00:03:15.200><c> splitting</c><00:03:15.599><c> from</c><00:03:15.840><c> here</c>

00:03:16.309 --> 00:03:16.319 align:start position:0%
be if we ended up splitting from here
 

00:03:16.319 --> 00:03:17.750 align:start position:0%
be if we ended up splitting from here
this<00:03:16.480><c> is</c><00:03:16.640><c> obviously</c><00:03:17.040><c> the</c><00:03:17.120><c> max</c><00:03:17.440><c> we</c><00:03:17.519><c> could</c>

00:03:17.750 --> 00:03:17.760 align:start position:0%
this is obviously the max we could
 

00:03:17.760 --> 00:03:19.670 align:start position:0%
this is obviously the max we could
create<00:03:18.480><c> what</c><00:03:18.720><c> is</c><00:03:18.879><c> the</c><00:03:19.040><c> total</c><00:03:19.360><c> it's</c>

00:03:19.670 --> 00:03:19.680 align:start position:0%
create what is the total it's
 

00:03:19.680 --> 00:03:22.229 align:start position:0%
create what is the total it's
it's<00:03:19.920><c> 1</c><00:03:20.159><c> plus</c><00:03:20.480><c> 2</c><00:03:20.720><c> plus</c><00:03:20.959><c> 3</c><00:03:21.200><c> plus</c><00:03:21.599><c> 5</c><00:03:21.920><c> which</c><00:03:22.159><c> is</c>

00:03:22.229 --> 00:03:22.239 align:start position:0%
it's 1 plus 2 plus 3 plus 5 which is
 

00:03:22.239 --> 00:03:23.430 align:start position:0%
it's 1 plus 2 plus 3 plus 5 which is
going<00:03:22.319><c> to</c><00:03:22.400><c> be</c><00:03:22.640><c> 11.</c>

00:03:23.430 --> 00:03:23.440 align:start position:0%
going to be 11.
 

00:03:23.440 --> 00:03:25.430 align:start position:0%
going to be 11.
now<00:03:24.000><c> we</c><00:03:24.159><c> can</c><00:03:24.400><c> we're</c><00:03:24.560><c> going</c><00:03:24.720><c> to</c><00:03:24.879><c> try</c><00:03:25.200><c> it</c>

00:03:25.430 --> 00:03:25.440 align:start position:0%
now we can we're going to try it
 

00:03:25.440 --> 00:03:26.710 align:start position:0%
now we can we're going to try it
multiple<00:03:25.920><c> ways</c><00:03:26.319><c> right</c>

00:03:26.710 --> 00:03:26.720 align:start position:0%
multiple ways right
 

00:03:26.720 --> 00:03:28.229 align:start position:0%
multiple ways right
it's<00:03:26.959><c> possible</c><00:03:27.440><c> maybe</c><00:03:27.680><c> there</c><00:03:27.840><c> could</c><00:03:28.000><c> be</c><00:03:28.080><c> a</c>

00:03:28.229 --> 00:03:28.239 align:start position:0%
it's possible maybe there could be a
 

00:03:28.239 --> 00:03:29.670 align:start position:0%
it's possible maybe there could be a
split<00:03:28.560><c> over</c><00:03:28.720><c> here</c><00:03:28.959><c> of</c><00:03:29.040><c> course</c><00:03:29.280><c> this</c><00:03:29.440><c> doesn't</c>

00:03:29.670 --> 00:03:29.680 align:start position:0%
split over here of course this doesn't
 

00:03:29.680 --> 00:03:31.270 align:start position:0%
split over here of course this doesn't
have<00:03:29.840><c> any</c><00:03:30.080><c> children</c><00:03:30.480><c> so</c><00:03:30.640><c> the</c><00:03:30.720><c> most</c><00:03:30.959><c> we</c><00:03:31.120><c> could</c>

00:03:31.270 --> 00:03:31.280 align:start position:0%
have any children so the most we could
 

00:03:31.280 --> 00:03:31.750 align:start position:0%
have any children so the most we could
get

00:03:31.750 --> 00:03:31.760 align:start position:0%
get
 

00:03:31.760 --> 00:03:33.670 align:start position:0%
get
doing<00:03:32.080><c> that</c><00:03:32.239><c> would</c><00:03:32.480><c> just</c><00:03:32.640><c> be</c><00:03:32.799><c> a</c><00:03:32.959><c> two</c><00:03:33.360><c> but</c><00:03:33.519><c> what</c>

00:03:33.670 --> 00:03:33.680 align:start position:0%
doing that would just be a two but what
 

00:03:33.680 --> 00:03:35.509 align:start position:0%
doing that would just be a two but what
about<00:03:34.000><c> over</c><00:03:34.239><c> here</c><00:03:34.480><c> what</c><00:03:34.720><c> if</c><00:03:34.799><c> we</c><00:03:35.040><c> ended</c><00:03:35.280><c> up</c>

00:03:35.509 --> 00:03:35.519 align:start position:0%
about over here what if we ended up
 

00:03:35.519 --> 00:03:37.430 align:start position:0%
about over here what if we ended up
splitting<00:03:36.000><c> from</c><00:03:36.159><c> here</c><00:03:36.480><c> so</c><00:03:36.640><c> we</c>

00:03:37.430 --> 00:03:37.440 align:start position:0%
splitting from here so we
 

00:03:37.440 --> 00:03:39.509 align:start position:0%
splitting from here so we
took<00:03:37.680><c> the</c><00:03:37.840><c> left</c><00:03:38.239><c> and</c><00:03:38.400><c> the</c><00:03:38.560><c> right</c><00:03:38.799><c> from</c><00:03:39.040><c> here</c>

00:03:39.509 --> 00:03:39.519 align:start position:0%
took the left and the right from here
 

00:03:39.519 --> 00:03:40.550 align:start position:0%
took the left and the right from here
we'd<00:03:39.760><c> get</c><00:03:39.920><c> a</c><00:03:40.080><c> four</c>

00:03:40.550 --> 00:03:40.560 align:start position:0%
we'd get a four
 

00:03:40.560 --> 00:03:42.390 align:start position:0%
we'd get a four
and<00:03:40.720><c> we'd</c><00:03:40.879><c> get</c><00:03:41.040><c> a</c><00:03:41.120><c> five</c><00:03:41.360><c> now</c><00:03:41.519><c> if</c><00:03:41.680><c> we</c><00:03:41.920><c> did</c><00:03:42.159><c> do</c>

00:03:42.390 --> 00:03:42.400 align:start position:0%
and we'd get a five now if we did do
 

00:03:42.400 --> 00:03:44.229 align:start position:0%
and we'd get a five now if we did do
that<00:03:42.879><c> notice</c><00:03:43.280><c> how</c><00:03:43.440><c> this</c><00:03:43.680><c> is</c><00:03:43.760><c> going</c><00:03:43.840><c> to</c><00:03:43.920><c> be</c><00:03:44.080><c> the</c>

00:03:44.229 --> 00:03:44.239 align:start position:0%
that notice how this is going to be the
 

00:03:44.239 --> 00:03:45.990 align:start position:0%
that notice how this is going to be the
top<00:03:44.640><c> most</c><00:03:45.040><c> node</c><00:03:45.280><c> so</c><00:03:45.440><c> whenever</c><00:03:45.760><c> we</c>

00:03:45.990 --> 00:03:46.000 align:start position:0%
top most node so whenever we
 

00:03:46.000 --> 00:03:48.149 align:start position:0%
top most node so whenever we
split<00:03:46.400><c> from</c><00:03:46.640><c> a</c><00:03:46.720><c> node</c><00:03:47.120><c> we</c><00:03:47.280><c> can't</c><00:03:47.599><c> really</c><00:03:47.920><c> get</c>

00:03:48.149 --> 00:03:48.159 align:start position:0%
split from a node we can't really get
 

00:03:48.159 --> 00:03:50.470 align:start position:0%
split from a node we can't really get
any<00:03:48.319><c> of</c><00:03:48.480><c> its</c><00:03:48.799><c> parents</c><00:03:49.280><c> or</c><00:03:49.440><c> anything</c><00:03:49.760><c> like</c><00:03:50.000><c> that</c>

00:03:50.470 --> 00:03:50.480 align:start position:0%
any of its parents or anything like that
 

00:03:50.480 --> 00:03:52.949 align:start position:0%
any of its parents or anything like that
so<00:03:50.720><c> in</c><00:03:50.799><c> this</c><00:03:51.040><c> case</c><00:03:51.440><c> what</c><00:03:51.760><c> is</c><00:03:52.000><c> the</c><00:03:52.239><c> sum</c><00:03:52.560><c> of</c><00:03:52.640><c> this</c>

00:03:52.949 --> 00:03:52.959 align:start position:0%
so in this case what is the sum of this
 

00:03:52.959 --> 00:03:53.589 align:start position:0%
so in this case what is the sum of this
path<00:03:53.200><c> well</c>

00:03:53.589 --> 00:03:53.599 align:start position:0%
path well
 

00:03:53.599 --> 00:03:55.670 align:start position:0%
path well
it's<00:03:53.680><c> going</c><00:03:53.760><c> to</c><00:03:53.840><c> be</c><00:03:54.000><c> 4</c><00:03:54.319><c> plus</c><00:03:54.560><c> 3</c><00:03:54.879><c> plus</c><00:03:55.200><c> 5</c><00:03:55.439><c> which</c>

00:03:55.670 --> 00:03:55.680 align:start position:0%
it's going to be 4 plus 3 plus 5 which
 

00:03:55.680 --> 00:03:56.949 align:start position:0%
it's going to be 4 plus 3 plus 5 which
is<00:03:55.840><c> going</c><00:03:55.920><c> to</c><00:03:56.000><c> give</c><00:03:56.159><c> us</c><00:03:56.400><c> 12.</c>

00:03:56.949 --> 00:03:56.959 align:start position:0%
is going to give us 12.
 

00:03:56.959 --> 00:03:59.030 align:start position:0%
is going to give us 12.
12<00:03:57.280><c> is</c><00:03:57.439><c> greater</c><00:03:57.760><c> than</c><00:03:57.920><c> the</c><00:03:58.080><c> 11</c><00:03:58.560><c> that</c><00:03:58.720><c> we</c><00:03:58.799><c> had</c>

00:03:59.030 --> 00:03:59.040 align:start position:0%
12 is greater than the 11 that we had
 

00:03:59.040 --> 00:03:59.990 align:start position:0%
12 is greater than the 11 that we had
previously<00:03:59.519><c> so</c><00:03:59.760><c> this</c>

00:03:59.990 --> 00:04:00.000 align:start position:0%
previously so this
 

00:04:00.000 --> 00:04:02.630 align:start position:0%
previously so this
is<00:04:00.159><c> going</c><00:04:00.319><c> to</c><00:04:00.400><c> be</c><00:04:00.560><c> the</c><00:04:00.720><c> max</c><00:04:01.040><c> path</c><00:04:01.360><c> sum</c><00:04:01.840><c> so</c><00:04:02.480><c> you</c>

00:04:02.630 --> 00:04:02.640 align:start position:0%
is going to be the max path sum so you
 

00:04:02.640 --> 00:04:04.949 align:start position:0%
is going to be the max path sum so you
can<00:04:02.799><c> tell</c><00:04:03.040><c> that</c><00:04:03.200><c> a</c><00:04:03.360><c> brute</c><00:04:03.920><c> force</c><00:04:04.319><c> approach</c>

00:04:04.949 --> 00:04:04.959 align:start position:0%
can tell that a brute force approach
 

00:04:04.959 --> 00:04:08.309 align:start position:0%
can tell that a brute force approach
would<00:04:05.200><c> be</c><00:04:05.760><c> for</c><00:04:06.080><c> every</c><00:04:06.560><c> single</c><00:04:07.840><c> node</c>

00:04:08.309 --> 00:04:08.319 align:start position:0%
would be for every single node
 

00:04:08.319 --> 00:04:10.070 align:start position:0%
would be for every single node
every<00:04:08.560><c> single</c><00:04:08.879><c> node</c><00:04:09.120><c> consider</c><00:04:09.599><c> it</c><00:04:09.680><c> being</c><00:04:09.920><c> the</c>

00:04:10.070 --> 00:04:10.080 align:start position:0%
every single node consider it being the
 

00:04:10.080 --> 00:04:11.910 align:start position:0%
every single node consider it being the
topmost<00:04:10.560><c> node</c><00:04:10.799><c> and</c><00:04:10.879><c> then</c><00:04:11.280><c> from</c><00:04:11.439><c> the</c><00:04:11.680><c> left</c>

00:04:11.910 --> 00:04:11.920 align:start position:0%
topmost node and then from the left
 

00:04:11.920 --> 00:04:13.350 align:start position:0%
topmost node and then from the left
subtree<00:04:12.319><c> basically</c><00:04:12.720><c> find</c><00:04:12.959><c> what's</c><00:04:13.200><c> the</c>

00:04:13.350 --> 00:04:13.360 align:start position:0%
subtree basically find what's the
 

00:04:13.360 --> 00:04:13.990 align:start position:0%
subtree basically find what's the
maximum

00:04:13.990 --> 00:04:14.000 align:start position:0%
maximum
 

00:04:14.000 --> 00:04:15.910 align:start position:0%
maximum
path<00:04:14.239><c> we</c><00:04:14.400><c> could</c><00:04:14.560><c> create</c><00:04:14.959><c> in</c><00:04:15.120><c> the</c><00:04:15.200><c> left</c><00:04:15.439><c> subtree</c>

00:04:15.910 --> 00:04:15.920 align:start position:0%
path we could create in the left subtree
 

00:04:15.920 --> 00:04:18.069 align:start position:0%
path we could create in the left subtree
if<00:04:16.000><c> we</c><00:04:16.320><c> never</c><00:04:16.720><c> split</c><00:04:17.120><c> so</c><00:04:17.359><c> we</c><00:04:17.440><c> can't</c><00:04:17.759><c> include</c>

00:04:18.069 --> 00:04:18.079 align:start position:0%
if we never split so we can't include
 

00:04:18.079 --> 00:04:18.469 align:start position:0%
if we never split so we can't include
both

00:04:18.469 --> 00:04:18.479 align:start position:0%
both
 

00:04:18.479 --> 00:04:20.390 align:start position:0%
both
left<00:04:18.720><c> and</c><00:04:18.880><c> right</c><00:04:19.199><c> and</c><00:04:19.280><c> then</c><00:04:19.440><c> do</c><00:04:19.600><c> the</c><00:04:19.759><c> same</c><00:04:20.239><c> for</c>

00:04:20.390 --> 00:04:20.400 align:start position:0%
left and right and then do the same for
 

00:04:20.400 --> 00:04:22.150 align:start position:0%
left and right and then do the same for
the<00:04:20.720><c> right</c><00:04:20.959><c> side</c><00:04:21.359><c> right</c>

00:04:22.150 --> 00:04:22.160 align:start position:0%
the right side right
 

00:04:22.160 --> 00:04:24.230 align:start position:0%
the right side right
and<00:04:22.320><c> if</c><00:04:22.400><c> we</c><00:04:22.639><c> sort</c><00:04:22.880><c> of</c><00:04:22.960><c> do</c><00:04:23.120><c> it</c><00:04:23.280><c> recursively</c><00:04:24.080><c> we</c>

00:04:24.230 --> 00:04:24.240 align:start position:0%
and if we sort of do it recursively we
 

00:04:24.240 --> 00:04:26.390 align:start position:0%
and if we sort of do it recursively we
can<00:04:24.479><c> eliminate</c><00:04:25.120><c> repeated</c><00:04:25.759><c> work</c>

00:04:26.390 --> 00:04:26.400 align:start position:0%
can eliminate repeated work
 

00:04:26.400 --> 00:04:28.629 align:start position:0%
can eliminate repeated work
so<00:04:26.639><c> suppose</c><00:04:27.120><c> we're</c><00:04:27.360><c> given</c><00:04:27.600><c> that</c><00:04:27.919><c> same</c><00:04:28.240><c> tree</c><00:04:28.479><c> we</c>

00:04:28.629 --> 00:04:28.639 align:start position:0%
so suppose we're given that same tree we
 

00:04:28.639 --> 00:04:30.150 align:start position:0%
so suppose we're given that same tree we
want<00:04:28.880><c> to</c><00:04:28.960><c> we're</c><00:04:29.120><c> going</c><00:04:29.199><c> to</c><00:04:29.360><c> start</c><00:04:29.600><c> at</c><00:04:29.680><c> the</c><00:04:29.840><c> root</c>

00:04:30.150 --> 00:04:30.160 align:start position:0%
want to we're going to start at the root
 

00:04:30.160 --> 00:04:31.990 align:start position:0%
want to we're going to start at the root
not<00:04:30.400><c> like</c><00:04:30.639><c> normal</c><00:04:31.040><c> right</c><00:04:31.280><c> so</c><00:04:31.520><c> from</c><00:04:31.680><c> here</c><00:04:31.840><c> we</c>

00:04:31.990 --> 00:04:32.000 align:start position:0%
not like normal right so from here we
 

00:04:32.000 --> 00:04:33.670 align:start position:0%
not like normal right so from here we
want<00:04:32.160><c> to</c><00:04:32.240><c> know</c><00:04:32.400><c> what's</c><00:04:32.639><c> the</c><00:04:32.720><c> max</c><00:04:33.040><c> path</c><00:04:33.280><c> sum</c><00:04:33.520><c> we</c>

00:04:33.670 --> 00:04:33.680 align:start position:0%
want to know what's the max path sum we
 

00:04:33.680 --> 00:04:35.670 align:start position:0%
want to know what's the max path sum we
could<00:04:33.759><c> do</c><00:04:34.000><c> from</c><00:04:34.320><c> here</c><00:04:34.639><c> if</c><00:04:34.800><c> we</c><00:04:34.960><c> split</c>

00:04:35.670 --> 00:04:35.680 align:start position:0%
could do from here if we split
 

00:04:35.680 --> 00:04:37.270 align:start position:0%
could do from here if we split
from<00:04:35.919><c> this</c><00:04:36.080><c> position</c><00:04:36.479><c> right</c><00:04:36.639><c> going</c><00:04:36.880><c> left</c><00:04:37.120><c> and</c>

00:04:37.270 --> 00:04:37.280 align:start position:0%
from this position right going left and
 

00:04:37.280 --> 00:04:39.909 align:start position:0%
from this position right going left and
right<00:04:37.520><c> now</c><00:04:38.160><c> why</c><00:04:38.560><c> start</c><00:04:38.960><c> at</c><00:04:39.120><c> the</c><00:04:39.360><c> root</c><00:04:39.600><c> when</c><00:04:39.840><c> we</c>

00:04:39.909 --> 00:04:39.919 align:start position:0%
right now why start at the root when we
 

00:04:39.919 --> 00:04:40.790 align:start position:0%
right now why start at the root when we
could<00:04:40.160><c> solve</c><00:04:40.479><c> the</c>

00:04:40.790 --> 00:04:40.800 align:start position:0%
could solve the
 

00:04:40.800 --> 00:04:43.430 align:start position:0%
could solve the
sub<00:04:41.120><c> problem</c><00:04:41.600><c> first</c><00:04:42.080><c> and</c><00:04:42.240><c> possibly</c><00:04:42.880><c> use</c><00:04:43.199><c> that</c>

00:04:43.430 --> 00:04:43.440 align:start position:0%
sub problem first and possibly use that
 

00:04:43.440 --> 00:04:45.590 align:start position:0%
sub problem first and possibly use that
sub<00:04:43.680><c> problem</c><00:04:44.160><c> in</c><00:04:44.400><c> the</c><00:04:44.560><c> result</c><00:04:45.040><c> at</c><00:04:45.199><c> the</c><00:04:45.360><c> root</c>

00:04:45.590 --> 00:04:45.600 align:start position:0%
sub problem in the result at the root
 

00:04:45.600 --> 00:04:46.150 align:start position:0%
sub problem in the result at the root
position

00:04:46.150 --> 00:04:46.160 align:start position:0%
position
 

00:04:46.160 --> 00:04:47.909 align:start position:0%
position
so<00:04:46.320><c> we're</c><00:04:46.479><c> going</c><00:04:46.639><c> to</c><00:04:46.720><c> leverage</c><00:04:47.120><c> that</c><00:04:47.360><c> idea</c><00:04:47.759><c> a</c>

00:04:47.909 --> 00:04:47.919 align:start position:0%
so we're going to leverage that idea a
 

00:04:47.919 --> 00:04:49.430 align:start position:0%
so we're going to leverage that idea a
depth<00:04:48.160><c> first</c><00:04:48.479><c> search</c>

00:04:49.430 --> 00:04:49.440 align:start position:0%
depth first search
 

00:04:49.440 --> 00:04:52.070 align:start position:0%
depth first search
idea<00:04:49.840><c> just</c><00:04:50.080><c> like</c><00:04:50.240><c> usual</c><00:04:50.639><c> with</c><00:04:50.880><c> tree</c><00:04:51.199><c> problems</c>

00:04:52.070 --> 00:04:52.080 align:start position:0%
idea just like usual with tree problems
 

00:04:52.080 --> 00:04:53.350 align:start position:0%
idea just like usual with tree problems
and<00:04:52.240><c> using</c><00:04:52.479><c> that</c><00:04:52.720><c> we're</c><00:04:52.880><c> going</c><00:04:52.960><c> to</c><00:04:53.040><c> end</c><00:04:53.199><c> up</c>

00:04:53.350 --> 00:04:53.360 align:start position:0%
and using that we're going to end up
 

00:04:53.360 --> 00:04:55.350 align:start position:0%
and using that we're going to end up
getting<00:04:53.680><c> a</c><00:04:53.919><c> linear</c><00:04:54.320><c> time</c><00:04:54.560><c> solution</c>

00:04:55.350 --> 00:04:55.360 align:start position:0%
getting a linear time solution
 

00:04:55.360 --> 00:04:57.030 align:start position:0%
getting a linear time solution
and<00:04:55.759><c> it's</c><00:04:55.919><c> just</c><00:04:56.080><c> going</c><00:04:56.240><c> to</c><00:04:56.320><c> depend</c><00:04:56.800><c> on</c><00:04:56.960><c> the</c>

00:04:57.030 --> 00:04:57.040 align:start position:0%
and it's just going to depend on the
 

00:04:57.040 --> 00:04:58.550 align:start position:0%
and it's just going to depend on the
return<00:04:57.680><c> value</c><00:04:58.240><c> of</c>

00:04:58.550 --> 00:04:58.560 align:start position:0%
return value of
 

00:04:58.560 --> 00:05:00.790 align:start position:0%
return value of
our<00:04:58.880><c> recursive</c><00:04:59.520><c> function</c><00:05:00.240><c> so</c><00:05:00.400><c> we're</c><00:05:00.560><c> going</c><00:05:00.639><c> to</c>

00:05:00.790 --> 00:05:00.800 align:start position:0%
our recursive function so we're going to
 

00:05:00.800 --> 00:05:02.150 align:start position:0%
our recursive function so we're going to
start<00:05:01.120><c> at</c><00:05:01.199><c> the</c><00:05:01.440><c> root</c>

00:05:02.150 --> 00:05:02.160 align:start position:0%
start at the root
 

00:05:02.160 --> 00:05:04.070 align:start position:0%
start at the root
and<00:05:02.560><c> now</c><00:05:02.720><c> we're</c><00:05:02.880><c> going</c><00:05:03.039><c> to</c><00:05:03.120><c> go</c><00:05:03.440><c> left</c><00:05:03.680><c> right</c><00:05:03.919><c> we</c>

00:05:04.070 --> 00:05:04.080 align:start position:0%
and now we're going to go left right we
 

00:05:04.080 --> 00:05:06.310 align:start position:0%
and now we're going to go left right we
want<00:05:04.240><c> to</c><00:05:04.320><c> know</c><00:05:04.639><c> what's</c><00:05:04.880><c> the</c><00:05:05.280><c> maximum</c>

00:05:06.310 --> 00:05:06.320 align:start position:0%
want to know what's the maximum
 

00:05:06.320 --> 00:05:08.870 align:start position:0%
want to know what's the maximum
path<00:05:06.720><c> we</c><00:05:06.880><c> can</c><00:05:07.199><c> get</c><00:05:07.520><c> from</c><00:05:07.759><c> the</c><00:05:08.000><c> left</c><00:05:08.240><c> subtree</c><00:05:08.720><c> if</c>

00:05:08.870 --> 00:05:08.880 align:start position:0%
path we can get from the left subtree if
 

00:05:08.880 --> 00:05:09.749 align:start position:0%
path we can get from the left subtree if
we<00:05:09.199><c> never</c>

00:05:09.749 --> 00:05:09.759 align:start position:0%
we never
 

00:05:09.759 --> 00:05:12.710 align:start position:0%
we never
end<00:05:10.000><c> up</c><00:05:10.240><c> splitting</c><00:05:11.280><c> so</c><00:05:11.759><c> in</c><00:05:11.919><c> this</c><00:05:12.240><c> case</c><00:05:12.479><c> it's</c>

00:05:12.710 --> 00:05:12.720 align:start position:0%
end up splitting so in this case it's
 

00:05:12.720 --> 00:05:13.189 align:start position:0%
end up splitting so in this case it's
pretty

00:05:13.189 --> 00:05:13.199 align:start position:0%
pretty
 

00:05:13.199 --> 00:05:14.950 align:start position:0%
pretty
simple<00:05:13.600><c> because</c><00:05:13.919><c> it</c><00:05:14.080><c> doesn't</c><00:05:14.320><c> have</c><00:05:14.560><c> a</c><00:05:14.720><c> left</c>

00:05:14.950 --> 00:05:14.960 align:start position:0%
simple because it doesn't have a left
 

00:05:14.960 --> 00:05:16.629 align:start position:0%
simple because it doesn't have a left
child<00:05:15.280><c> or</c><00:05:15.440><c> a</c><00:05:15.600><c> right</c><00:05:15.759><c> child</c><00:05:16.080><c> right</c><00:05:16.240><c> so</c><00:05:16.320><c> we</c><00:05:16.479><c> don't</c>

00:05:16.629 --> 00:05:16.639 align:start position:0%
child or a right child right so we don't
 

00:05:16.639 --> 00:05:18.550 align:start position:0%
child or a right child right so we don't
even<00:05:16.800><c> end</c><00:05:16.960><c> up</c><00:05:17.120><c> having</c><00:05:17.440><c> to</c><00:05:17.600><c> split</c><00:05:18.000><c> and</c><00:05:18.080><c> we</c><00:05:18.240><c> get</c><00:05:18.400><c> a</c>

00:05:18.550 --> 00:05:18.560 align:start position:0%
even end up having to split and we get a
 

00:05:18.560 --> 00:05:19.189 align:start position:0%
even end up having to split and we get a
sum<00:05:18.880><c> of</c>

00:05:19.189 --> 00:05:19.199 align:start position:0%
sum of
 

00:05:19.199 --> 00:05:22.870 align:start position:0%
sum of
two<00:05:19.759><c> from</c><00:05:20.400><c> this</c><00:05:20.960><c> spot</c><00:05:21.440><c> right</c><00:05:22.160><c> and</c><00:05:22.400><c> even</c>

00:05:22.870 --> 00:05:22.880 align:start position:0%
two from this spot right and even
 

00:05:22.880 --> 00:05:24.790 align:start position:0%
two from this spot right and even
even<00:05:23.120><c> if</c><00:05:23.280><c> we</c><00:05:23.520><c> were</c><00:05:23.840><c> splitting</c><00:05:24.320><c> from</c><00:05:24.479><c> here</c><00:05:24.639><c> we</c>

00:05:24.790 --> 00:05:24.800 align:start position:0%
even if we were splitting from here we
 

00:05:24.800 --> 00:05:26.469 align:start position:0%
even if we were splitting from here we
would<00:05:24.960><c> get</c><00:05:25.120><c> a</c><00:05:25.199><c> total</c><00:05:25.520><c> of</c><00:05:25.600><c> two</c><00:05:25.840><c> so</c><00:05:26.000><c> far</c><00:05:26.160><c> so</c><00:05:26.320><c> what</c>

00:05:26.469 --> 00:05:26.479 align:start position:0%
would get a total of two so far so what
 

00:05:26.479 --> 00:05:27.189 align:start position:0%
would get a total of two so far so what
we'll<00:05:26.880><c> say</c>

00:05:27.189 --> 00:05:27.199 align:start position:0%
we'll say
 

00:05:27.199 --> 00:05:29.749 align:start position:0%
we'll say
is<00:05:27.520><c> so</c><00:05:27.759><c> far</c><00:05:28.000><c> the</c><00:05:28.080><c> max</c><00:05:28.479><c> path</c><00:05:28.880><c> we've</c><00:05:29.120><c> gotten</c><00:05:29.520><c> so</c>

00:05:29.749 --> 00:05:29.759 align:start position:0%
is so far the max path we've gotten so
 

00:05:29.759 --> 00:05:31.110 align:start position:0%
is so far the max path we've gotten so
far<00:05:30.000><c> is</c><00:05:30.160><c> two</c><00:05:30.479><c> right</c>

00:05:31.110 --> 00:05:31.120 align:start position:0%
far is two right
 

00:05:31.120 --> 00:05:32.790 align:start position:0%
far is two right
now<00:05:31.360><c> we</c><00:05:31.600><c> still</c><00:05:31.759><c> want</c><00:05:31.919><c> to</c><00:05:32.080><c> know</c><00:05:32.160><c> what's</c><00:05:32.400><c> the</c><00:05:32.479><c> max</c>

00:05:32.790 --> 00:05:32.800 align:start position:0%
now we still want to know what's the max
 

00:05:32.800 --> 00:05:34.629 align:start position:0%
now we still want to know what's the max
we<00:05:32.960><c> can</c><00:05:33.120><c> get</c><00:05:33.360><c> from</c><00:05:33.680><c> this</c><00:05:33.919><c> position</c><00:05:34.320><c> so</c><00:05:34.479><c> what</c>

00:05:34.629 --> 00:05:34.639 align:start position:0%
we can get from this position so what
 

00:05:34.639 --> 00:05:35.670 align:start position:0%
we can get from this position so what
we're<00:05:34.800><c> gonna</c><00:05:35.120><c> do</c>

00:05:35.670 --> 00:05:35.680 align:start position:0%
we're gonna do
 

00:05:35.680 --> 00:05:37.590 align:start position:0%
we're gonna do
is<00:05:35.840><c> now</c><00:05:36.080><c> go</c><00:05:36.320><c> to</c><00:05:36.479><c> the</c><00:05:36.560><c> right</c><00:05:36.880><c> tree</c><00:05:37.280><c> so</c>

00:05:37.590 --> 00:05:37.600 align:start position:0%
is now go to the right tree so
 

00:05:37.600 --> 00:05:39.350 align:start position:0%
is now go to the right tree so
recursively<00:05:38.320><c> now</c><00:05:38.560><c> we're</c><00:05:38.720><c> gonna</c><00:05:38.960><c> ask</c><00:05:39.199><c> the</c>

00:05:39.350 --> 00:05:39.360 align:start position:0%
recursively now we're gonna ask the
 

00:05:39.360 --> 00:05:41.270 align:start position:0%
recursively now we're gonna ask the
question<00:05:39.840><c> down</c><00:05:40.080><c> here</c><00:05:40.320><c> what's</c><00:05:40.560><c> the</c><00:05:40.720><c> max</c><00:05:41.039><c> path</c>

00:05:41.270 --> 00:05:41.280 align:start position:0%
question down here what's the max path
 

00:05:41.280 --> 00:05:42.710 align:start position:0%
question down here what's the max path
sum<00:05:41.520><c> we</c><00:05:41.680><c> can</c><00:05:41.840><c> get</c><00:05:42.000><c> if</c><00:05:42.160><c> we</c><00:05:42.400><c> ran</c>

00:05:42.710 --> 00:05:42.720 align:start position:0%
sum we can get if we ran
 

00:05:42.720 --> 00:05:44.790 align:start position:0%
sum we can get if we ran
it<00:05:42.880><c> through</c><00:05:43.440><c> this</c><00:05:43.680><c> position</c><00:05:44.160><c> and</c><00:05:44.240><c> we</c><00:05:44.479><c> ended</c><00:05:44.720><c> up</c>

00:05:44.790 --> 00:05:44.800 align:start position:0%
it through this position and we ended up
 

00:05:44.800 --> 00:05:46.310 align:start position:0%
it through this position and we ended up
splitting<00:05:45.360><c> left</c><00:05:45.600><c> and</c><00:05:45.759><c> right</c>

00:05:46.310 --> 00:05:46.320 align:start position:0%
splitting left and right
 

00:05:46.320 --> 00:05:48.310 align:start position:0%
splitting left and right
and<00:05:46.479><c> by</c><00:05:46.639><c> the</c><00:05:46.800><c> way</c><00:05:46.960><c> our</c><00:05:47.120><c> result</c><00:05:47.600><c> so</c><00:05:47.840><c> far</c><00:05:48.160><c> is</c>

00:05:48.310 --> 00:05:48.320 align:start position:0%
and by the way our result so far is
 

00:05:48.320 --> 00:05:50.230 align:start position:0%
and by the way our result so far is
going<00:05:48.479><c> to</c><00:05:48.639><c> be</c><00:05:48.800><c> two</c><00:05:49.039><c> that's</c><00:05:49.280><c> the</c><00:05:49.360><c> maximum</c><00:05:49.919><c> path</c>

00:05:50.230 --> 00:05:50.240 align:start position:0%
going to be two that's the maximum path
 

00:05:50.240 --> 00:05:51.670 align:start position:0%
going to be two that's the maximum path
so<00:05:50.479><c> far</c><00:05:50.720><c> that</c><00:05:50.880><c> we've</c><00:05:51.120><c> gotten</c>

00:05:51.670 --> 00:05:51.680 align:start position:0%
so far that we've gotten
 

00:05:51.680 --> 00:05:54.070 align:start position:0%
so far that we've gotten
so<00:05:52.000><c> from</c><00:05:52.400><c> here</c><00:05:53.039><c> we're</c><00:05:53.199><c> gonna</c><00:05:53.600><c> since</c><00:05:53.840><c> we're</c>

00:05:54.070 --> 00:05:54.080 align:start position:0%
so from here we're gonna since we're
 

00:05:54.080 --> 00:05:55.670 align:start position:0%
so from here we're gonna since we're
trying<00:05:54.240><c> to</c><00:05:54.400><c> again</c><00:05:54.720><c> find</c><00:05:54.960><c> what's</c><00:05:55.120><c> the</c><00:05:55.199><c> max</c><00:05:55.520><c> we</c>

00:05:55.670 --> 00:05:55.680 align:start position:0%
trying to again find what's the max we
 

00:05:55.680 --> 00:05:56.230 align:start position:0%
trying to again find what's the max we
can<00:05:55.759><c> get</c>

00:05:56.230 --> 00:05:56.240 align:start position:0%
can get
 

00:05:56.240 --> 00:05:57.990 align:start position:0%
can get
splitting<00:05:56.639><c> from</c><00:05:56.880><c> here</c><00:05:57.280><c> we're</c><00:05:57.440><c> gonna</c><00:05:57.759><c> go</c>

00:05:57.990 --> 00:05:58.000 align:start position:0%
splitting from here we're gonna go
 

00:05:58.000 --> 00:05:59.350 align:start position:0%
splitting from here we're gonna go
recursive<00:05:58.560><c> and</c><00:05:58.639><c> we're</c><00:05:58.800><c> gonna</c><00:05:58.960><c> do</c><00:05:59.120><c> that</c><00:05:59.280><c> for</c>

00:05:59.350 --> 00:05:59.360 align:start position:0%
recursive and we're gonna do that for
 

00:05:59.360 --> 00:06:01.029 align:start position:0%
recursive and we're gonna do that for
the<00:05:59.520><c> left</c><00:05:59.759><c> sub</c><00:06:00.000><c> tree</c><00:06:00.240><c> and</c><00:06:00.319><c> the</c><00:06:00.400><c> right</c><00:06:00.639><c> subtree</c>

00:06:01.029 --> 00:06:01.039 align:start position:0%
the left sub tree and the right subtree
 

00:06:01.039 --> 00:06:01.350 align:start position:0%
the left sub tree and the right subtree
so

00:06:01.350 --> 00:06:01.360 align:start position:0%
so
 

00:06:01.360 --> 00:06:03.189 align:start position:0%
so
we're<00:06:01.520><c> getting</c><00:06:01.759><c> that</c><00:06:02.000><c> same</c><00:06:02.400><c> base</c><00:06:02.720><c> case</c><00:06:02.960><c> here</c>

00:06:03.189 --> 00:06:03.199 align:start position:0%
we're getting that same base case here
 

00:06:03.199 --> 00:06:04.790 align:start position:0%
we're getting that same base case here
right<00:06:03.520><c> with</c><00:06:03.680><c> this</c><00:06:03.919><c> left</c><00:06:04.160><c> sub</c><00:06:04.319><c> tree</c><00:06:04.560><c> if</c><00:06:04.720><c> we</c>

00:06:04.790 --> 00:06:04.800 align:start position:0%
right with this left sub tree if we
 

00:06:04.800 --> 00:06:05.990 align:start position:0%
right with this left sub tree if we
tried<00:06:05.120><c> to</c><00:06:05.280><c> split</c><00:06:05.680><c> from</c>

00:06:05.990 --> 00:06:06.000 align:start position:0%
tried to split from
 

00:06:06.000 --> 00:06:08.230 align:start position:0%
tried to split from
here<00:06:06.560><c> the</c><00:06:06.800><c> max</c><00:06:07.120><c> path</c><00:06:07.360><c> we'd</c><00:06:07.600><c> get</c><00:06:07.759><c> is</c><00:06:08.000><c> four</c>

00:06:08.230 --> 00:06:08.240 align:start position:0%
here the max path we'd get is four
 

00:06:08.240 --> 00:06:09.590 align:start position:0%
here the max path we'd get is four
because<00:06:08.479><c> it</c><00:06:08.560><c> doesn't</c><00:06:08.720><c> even</c><00:06:08.960><c> have</c><00:06:09.280><c> any</c>

00:06:09.590 --> 00:06:09.600 align:start position:0%
because it doesn't even have any
 

00:06:09.600 --> 00:06:11.350 align:start position:0%
because it doesn't even have any
children<00:06:10.080><c> right</c><00:06:10.400><c> so</c><00:06:10.560><c> let's</c><00:06:10.800><c> keep</c><00:06:11.039><c> track</c><00:06:11.280><c> of</c>

00:06:11.350 --> 00:06:11.360 align:start position:0%
children right so let's keep track of
 

00:06:11.360 --> 00:06:12.550 align:start position:0%
children right so let's keep track of
that<00:06:11.520><c> the</c><00:06:11.680><c> max</c>

00:06:12.550 --> 00:06:12.560 align:start position:0%
that the max
 

00:06:12.560 --> 00:06:14.790 align:start position:0%
that the max
path<00:06:12.880><c> we</c><00:06:12.960><c> could</c><00:06:13.120><c> get</c><00:06:13.360><c> from</c><00:06:13.520><c> here</c><00:06:13.840><c> is</c><00:06:14.080><c> four</c><00:06:14.560><c> now</c>

00:06:14.790 --> 00:06:14.800 align:start position:0%
path we could get from here is four now
 

00:06:14.800 --> 00:06:16.950 align:start position:0%
path we could get from here is four now
if<00:06:14.960><c> we</c><00:06:15.199><c> didn't</c><00:06:15.600><c> split</c><00:06:16.080><c> here</c><00:06:16.319><c> we'd</c><00:06:16.560><c> also</c><00:06:16.800><c> get</c>

00:06:16.950 --> 00:06:16.960 align:start position:0%
if we didn't split here we'd also get
 

00:06:16.960 --> 00:06:18.710 align:start position:0%
if we didn't split here we'd also get
that<00:06:17.199><c> same</c><00:06:17.440><c> value</c><00:06:17.759><c> of</c><00:06:17.919><c> four</c><00:06:18.160><c> and</c><00:06:18.240><c> that's</c><00:06:18.560><c> what</c>

00:06:18.710 --> 00:06:18.720 align:start position:0%
that same value of four and that's what
 

00:06:18.720 --> 00:06:20.550 align:start position:0%
that same value of four and that's what
i'm<00:06:18.880><c> marking</c><00:06:19.280><c> here</c><00:06:19.520><c> next</c><00:06:19.759><c> to</c><00:06:19.919><c> each</c><00:06:20.160><c> note</c><00:06:20.400><c> i'm</c>

00:06:20.550 --> 00:06:20.560 align:start position:0%
i'm marking here next to each note i'm
 

00:06:20.560 --> 00:06:22.309 align:start position:0%
i'm marking here next to each note i'm
marking<00:06:21.039><c> what's</c><00:06:21.280><c> the</c><00:06:21.520><c> max</c><00:06:21.840><c> we</c><00:06:22.000><c> could</c><00:06:22.240><c> have</c>

00:06:22.309 --> 00:06:22.319 align:start position:0%
marking what's the max we could have
 

00:06:22.319 --> 00:06:23.029 align:start position:0%
marking what's the max we could have
gotten

00:06:23.029 --> 00:06:23.039 align:start position:0%
gotten
 

00:06:23.039 --> 00:06:25.670 align:start position:0%
gotten
if<00:06:23.440><c> we</c><00:06:23.600><c> did</c><00:06:23.919><c> not</c><00:06:24.319><c> split</c><00:06:25.039><c> i</c><00:06:25.120><c> know</c><00:06:25.280><c> it's</c><00:06:25.440><c> a</c><00:06:25.520><c> little</c>

00:06:25.670 --> 00:06:25.680 align:start position:0%
if we did not split i know it's a little
 

00:06:25.680 --> 00:06:27.350 align:start position:0%
if we did not split i know it's a little
confusing<00:06:26.160><c> and</c><00:06:26.240><c> it'll</c><00:06:26.400><c> make</c><00:06:26.639><c> more</c><00:06:26.800><c> sense</c><00:06:27.039><c> when</c>

00:06:27.350 --> 00:06:27.360 align:start position:0%
confusing and it'll make more sense when
 

00:06:27.360 --> 00:06:29.029 align:start position:0%
confusing and it'll make more sense when
once<00:06:27.600><c> i</c><00:06:27.759><c> actually</c><00:06:28.080><c> finish</c><00:06:28.400><c> the</c><00:06:28.479><c> rest</c><00:06:28.720><c> of</c><00:06:28.800><c> this</c>

00:06:29.029 --> 00:06:29.039 align:start position:0%
once i actually finish the rest of this
 

00:06:29.039 --> 00:06:30.629 align:start position:0%
once i actually finish the rest of this
example<00:06:29.919><c> and</c><00:06:30.080><c> so</c>

00:06:30.629 --> 00:06:30.639 align:start position:0%
example and so
 

00:06:30.639 --> 00:06:32.390 align:start position:0%
example and so
from<00:06:30.800><c> over</c><00:06:31.039><c> here</c><00:06:31.199><c> now</c><00:06:31.440><c> we</c><00:06:31.600><c> do</c><00:06:31.840><c> have</c><00:06:32.080><c> what's</c><00:06:32.319><c> the</c>

00:06:32.390 --> 00:06:32.400 align:start position:0%
from over here now we do have what's the
 

00:06:32.400 --> 00:06:34.309 align:start position:0%
from over here now we do have what's the
max<00:06:32.720><c> we'd</c><00:06:32.880><c> get</c><00:06:33.039><c> from</c><00:06:33.199><c> the</c><00:06:33.440><c> left</c><00:06:33.759><c> path</c>

00:06:34.309 --> 00:06:34.319 align:start position:0%
max we'd get from the left path
 

00:06:34.319 --> 00:06:35.909 align:start position:0%
max we'd get from the left path
without<00:06:34.720><c> splitting</c><00:06:35.120><c> it's</c><00:06:35.280><c> four</c><00:06:35.520><c> but</c><00:06:35.680><c> now</c><00:06:35.840><c> we</c>

00:06:35.909 --> 00:06:35.919 align:start position:0%
without splitting it's four but now we
 

00:06:35.919 --> 00:06:36.950 align:start position:0%
without splitting it's four but now we
just<00:06:36.000><c> want</c><00:06:36.080><c> to</c><00:06:36.160><c> do</c><00:06:36.319><c> that</c><00:06:36.400><c> for</c><00:06:36.560><c> the</c><00:06:36.639><c> right</c><00:06:36.800><c> side</c>

00:06:36.950 --> 00:06:36.960 align:start position:0%
just want to do that for the right side
 

00:06:36.960 --> 00:06:38.550 align:start position:0%
just want to do that for the right side
once<00:06:37.199><c> again</c><00:06:37.440><c> it's</c><00:06:37.600><c> that</c><00:06:37.759><c> same</c><00:06:38.000><c> base</c><00:06:38.319><c> case</c>

00:06:38.550 --> 00:06:38.560 align:start position:0%
once again it's that same base case
 

00:06:38.560 --> 00:06:39.909 align:start position:0%
once again it's that same base case
right<00:06:38.720><c> so</c><00:06:38.880><c> what's</c><00:06:39.039><c> the</c><00:06:39.120><c> max</c><00:06:39.360><c> we</c><00:06:39.600><c> could</c><00:06:39.759><c> get</c>

00:06:39.909 --> 00:06:39.919 align:start position:0%
right so what's the max we could get
 

00:06:39.919 --> 00:06:41.749 align:start position:0%
right so what's the max we could get
running<00:06:40.240><c> through</c><00:06:40.479><c> here</c><00:06:40.720><c> if</c><00:06:40.800><c> we</c><00:06:40.960><c> never</c><00:06:41.360><c> split</c>

00:06:41.749 --> 00:06:41.759 align:start position:0%
running through here if we never split
 

00:06:41.759 --> 00:06:42.629 align:start position:0%
running through here if we never split
it<00:06:41.840><c> would</c><00:06:42.000><c> be</c><00:06:42.240><c> five</c>

00:06:42.629 --> 00:06:42.639 align:start position:0%
it would be five
 

00:06:42.639 --> 00:06:43.830 align:start position:0%
it would be five
it<00:06:42.720><c> doesn't</c><00:06:42.960><c> have</c><00:06:43.120><c> any</c><00:06:43.280><c> children</c><00:06:43.600><c> so</c><00:06:43.759><c> we</c>

00:06:43.830 --> 00:06:43.840 align:start position:0%
it doesn't have any children so we
 

00:06:43.840 --> 00:06:46.150 align:start position:0%
it doesn't have any children so we
couldn't<00:06:44.160><c> split</c><00:06:44.560><c> even</c><00:06:44.800><c> if</c><00:06:44.960><c> we</c><00:06:45.120><c> wanted</c><00:06:45.520><c> to</c>

00:06:46.150 --> 00:06:46.160 align:start position:0%
couldn't split even if we wanted to
 

00:06:46.160 --> 00:06:49.110 align:start position:0%
couldn't split even if we wanted to
so<00:06:46.479><c> now</c><00:06:46.800><c> we're</c><00:06:47.120><c> at</c><00:06:47.600><c> this</c><00:06:48.000><c> node</c><00:06:48.319><c> once</c><00:06:48.639><c> again</c><00:06:48.960><c> we</c>

00:06:49.110 --> 00:06:49.120 align:start position:0%
so now we're at this node once again we
 

00:06:49.120 --> 00:06:50.469 align:start position:0%
so now we're at this node once again we
have<00:06:49.360><c> computed</c><00:06:49.919><c> the</c><00:06:50.080><c> left</c>

00:06:50.469 --> 00:06:50.479 align:start position:0%
have computed the left
 

00:06:50.479 --> 00:06:53.510 align:start position:0%
have computed the left
and<00:06:50.639><c> right</c><00:06:50.960><c> sub</c><00:06:51.360><c> problems</c><00:06:52.319><c> now</c><00:06:52.639><c> from</c><00:06:53.120><c> this</c>

00:06:53.510 --> 00:06:53.520 align:start position:0%
and right sub problems now from this
 

00:06:53.520 --> 00:06:56.150 align:start position:0%
and right sub problems now from this
node<00:06:54.160><c> we're</c><00:06:54.400><c> going</c><00:06:54.560><c> to</c><00:06:54.639><c> be</c><00:06:54.800><c> computing</c><00:06:55.680><c> two</c>

00:06:56.150 --> 00:06:56.160 align:start position:0%
node we're going to be computing two
 

00:06:56.160 --> 00:06:56.710 align:start position:0%
node we're going to be computing two
different

00:06:56.710 --> 00:06:56.720 align:start position:0%
different
 

00:06:56.720 --> 00:06:58.629 align:start position:0%
different
values<00:06:57.360><c> by</c><00:06:57.520><c> the</c><00:06:57.599><c> way</c><00:06:57.840><c> our</c><00:06:58.000><c> result</c><00:06:58.319><c> right</c><00:06:58.479><c> now</c>

00:06:58.629 --> 00:06:58.639 align:start position:0%
values by the way our result right now
 

00:06:58.639 --> 00:07:00.390 align:start position:0%
values by the way our result right now
would<00:06:58.880><c> actually</c><00:06:59.120><c> be</c><00:06:59.360><c> 5</c><00:06:59.759><c> because</c><00:07:00.000><c> that's</c><00:07:00.240><c> what</c>

00:07:00.390 --> 00:07:00.400 align:start position:0%
would actually be 5 because that's what
 

00:07:00.400 --> 00:07:02.309 align:start position:0%
would actually be 5 because that's what
we've<00:07:00.639><c> gotten</c><00:07:00.960><c> so</c><00:07:01.199><c> far</c><00:07:01.919><c> so</c>

00:07:02.309 --> 00:07:02.319 align:start position:0%
we've gotten so far so
 

00:07:02.319 --> 00:07:04.469 align:start position:0%
we've gotten so far so
from<00:07:02.639><c> this</c><00:07:02.880><c> position</c><00:07:03.440><c> i'm</c><00:07:03.599><c> computing</c><00:07:04.240><c> two</c>

00:07:04.469 --> 00:07:04.479 align:start position:0%
from this position i'm computing two
 

00:07:04.479 --> 00:07:06.070 align:start position:0%
from this position i'm computing two
values<00:07:05.039><c> i</c><00:07:05.280><c> want</c><00:07:05.440><c> to</c><00:07:05.599><c> know</c>

00:07:06.070 --> 00:07:06.080 align:start position:0%
values i want to know
 

00:07:06.080 --> 00:07:08.710 align:start position:0%
values i want to know
what's<00:07:06.400><c> the</c><00:07:06.639><c> maximum</c><00:07:07.599><c> sum</c><00:07:07.919><c> we</c><00:07:08.000><c> could</c><00:07:08.240><c> get</c><00:07:08.479><c> with</c>

00:07:08.710 --> 00:07:08.720 align:start position:0%
what's the maximum sum we could get with
 

00:07:08.720 --> 00:07:09.430 align:start position:0%
what's the maximum sum we could get with
a<00:07:08.880><c> path</c>

00:07:09.430 --> 00:07:09.440 align:start position:0%
a path
 

00:07:09.440 --> 00:07:12.550 align:start position:0%
a path
running<00:07:09.919><c> from</c><00:07:10.240><c> here</c><00:07:10.639><c> if</c><00:07:10.880><c> we</c><00:07:11.440><c> are</c><00:07:11.919><c> allowed</c><00:07:12.319><c> to</c>

00:07:12.550 --> 00:07:12.560 align:start position:0%
running from here if we are allowed to
 

00:07:12.560 --> 00:07:14.309 align:start position:0%
running from here if we are allowed to
split<00:07:12.960><c> so</c><00:07:13.120><c> we</c><00:07:13.360><c> are</c><00:07:13.599><c> allowed</c><00:07:13.919><c> to</c><00:07:14.000><c> go</c>

00:07:14.309 --> 00:07:14.319 align:start position:0%
split so we are allowed to go
 

00:07:14.319 --> 00:07:17.350 align:start position:0%
split so we are allowed to go
right<00:07:14.800><c> and</c><00:07:15.039><c> we</c><00:07:15.280><c> are</c><00:07:15.520><c> allowed</c><00:07:15.919><c> to</c><00:07:16.080><c> go</c><00:07:16.400><c> left</c><00:07:17.120><c> so</c>

00:07:17.350 --> 00:07:17.360 align:start position:0%
right and we are allowed to go left so
 

00:07:17.360 --> 00:07:19.270 align:start position:0%
right and we are allowed to go left so
what<00:07:17.599><c> would</c><00:07:17.759><c> the</c><00:07:17.919><c> total</c><00:07:18.319><c> of</c><00:07:18.479><c> that</c><00:07:18.800><c> be</c><00:07:18.960><c> well</c><00:07:19.199><c> of</c>

00:07:19.270 --> 00:07:19.280 align:start position:0%
what would the total of that be well of
 

00:07:19.280 --> 00:07:20.870 align:start position:0%
what would the total of that be well of
course<00:07:19.520><c> we</c><00:07:19.680><c> would</c><00:07:19.840><c> just</c><00:07:20.080><c> take</c><00:07:20.319><c> okay</c><00:07:20.560><c> what's</c>

00:07:20.870 --> 00:07:20.880 align:start position:0%
course we would just take okay what's
 

00:07:20.880 --> 00:07:21.270 align:start position:0%
course we would just take okay what's
the

00:07:21.270 --> 00:07:21.280 align:start position:0%
the
 

00:07:21.280 --> 00:07:23.029 align:start position:0%
the
max<00:07:21.599><c> we</c><00:07:21.680><c> could</c><00:07:21.840><c> get</c><00:07:22.000><c> from</c><00:07:22.160><c> the</c><00:07:22.319><c> left</c><00:07:22.560><c> subtree</c>

00:07:23.029 --> 00:07:23.039 align:start position:0%
max we could get from the left subtree
 

00:07:23.039 --> 00:07:24.950 align:start position:0%
max we could get from the left subtree
without<00:07:23.759><c> splitting</c><00:07:24.160><c> right</c><00:07:24.319><c> because</c><00:07:24.560><c> we</c><00:07:24.720><c> can't</c>

00:07:24.950 --> 00:07:24.960 align:start position:0%
without splitting right because we can't
 

00:07:24.960 --> 00:07:26.950 align:start position:0%
without splitting right because we can't
split<00:07:25.360><c> again</c><00:07:25.680><c> if</c><00:07:25.840><c> we</c><00:07:26.000><c> already</c><00:07:26.319><c> split</c><00:07:26.639><c> up</c><00:07:26.720><c> here</c>

00:07:26.950 --> 00:07:26.960 align:start position:0%
split again if we already split up here
 

00:07:26.960 --> 00:07:28.070 align:start position:0%
split again if we already split up here
we<00:07:27.039><c> don't</c><00:07:27.199><c> want</c><00:07:27.360><c> to</c><00:07:27.440><c> split</c><00:07:27.680><c> again</c>

00:07:28.070 --> 00:07:28.080 align:start position:0%
we don't want to split again
 

00:07:28.080 --> 00:07:30.629 align:start position:0%
we don't want to split again
here<00:07:28.400><c> so</c><00:07:28.560><c> what's</c><00:07:28.800><c> the</c><00:07:28.880><c> max</c><00:07:29.199><c> we</c><00:07:29.360><c> could</c><00:07:29.520><c> get</c><00:07:30.000><c> from</c>

00:07:30.629 --> 00:07:30.639 align:start position:0%
here so what's the max we could get from
 

00:07:30.639 --> 00:07:32.469 align:start position:0%
here so what's the max we could get from
here<00:07:30.960><c> if</c><00:07:31.120><c> we</c><00:07:31.360><c> never</c><00:07:31.680><c> split</c><00:07:32.000><c> well</c>

00:07:32.469 --> 00:07:32.479 align:start position:0%
here if we never split well
 

00:07:32.479 --> 00:07:34.710 align:start position:0%
here if we never split well
it<00:07:32.639><c> would</c><00:07:32.800><c> be</c><00:07:32.960><c> four</c><00:07:33.280><c> right</c><00:07:34.080><c> and</c><00:07:34.240><c> once</c><00:07:34.479><c> again</c>

00:07:34.710 --> 00:07:34.720 align:start position:0%
it would be four right and once again
 

00:07:34.720 --> 00:07:36.309 align:start position:0%
it would be four right and once again
what's<00:07:34.960><c> the</c><00:07:35.120><c> max</c><00:07:35.360><c> we</c><00:07:35.520><c> would</c><00:07:35.599><c> get</c><00:07:35.759><c> from</c><00:07:35.919><c> here</c><00:07:36.240><c> if</c>

00:07:36.309 --> 00:07:36.319 align:start position:0%
what's the max we would get from here if
 

00:07:36.319 --> 00:07:38.469 align:start position:0%
what's the max we would get from here if
we<00:07:36.639><c> never</c><00:07:37.039><c> split</c><00:07:37.440><c> it</c><00:07:37.520><c> would</c><00:07:37.680><c> be</c><00:07:37.919><c> five</c>

00:07:38.469 --> 00:07:38.479 align:start position:0%
we never split it would be five
 

00:07:38.479 --> 00:07:41.510 align:start position:0%
we never split it would be five
so<00:07:38.800><c> up</c><00:07:39.120><c> here</c><00:07:39.599><c> i'm</c><00:07:39.759><c> going</c><00:07:39.840><c> to</c><00:07:40.000><c> take</c><00:07:40.639><c> three</c>

00:07:41.510 --> 00:07:41.520 align:start position:0%
so up here i'm going to take three
 

00:07:41.520 --> 00:07:45.430 align:start position:0%
so up here i'm going to take three
plus<00:07:42.000><c> four</c><00:07:42.720><c> plus</c><00:07:43.199><c> 5</c><00:07:43.680><c> and</c><00:07:43.919><c> say</c><00:07:44.479><c> this</c><00:07:44.720><c> is</c><00:07:44.879><c> the</c><00:07:45.039><c> max</c>

00:07:45.430 --> 00:07:45.440 align:start position:0%
plus four plus 5 and say this is the max
 

00:07:45.440 --> 00:07:45.909 align:start position:0%
plus four plus 5 and say this is the max
path

00:07:45.909 --> 00:07:45.919 align:start position:0%
path
 

00:07:45.919 --> 00:07:48.230 align:start position:0%
path
running<00:07:46.319><c> through</c><00:07:46.560><c> here</c><00:07:46.960><c> if</c><00:07:47.120><c> we</c><00:07:47.520><c> are</c><00:07:47.919><c> allowed</c>

00:07:48.230 --> 00:07:48.240 align:start position:0%
running through here if we are allowed
 

00:07:48.240 --> 00:07:49.189 align:start position:0%
running through here if we are allowed
to<00:07:48.479><c> split</c>

00:07:49.189 --> 00:07:49.199 align:start position:0%
to split
 

00:07:49.199 --> 00:07:51.510 align:start position:0%
to split
now<00:07:49.759><c> this</c><00:07:50.160><c> isn't</c><00:07:50.560><c> the</c><00:07:50.720><c> value</c><00:07:51.120><c> that</c><00:07:51.280><c> i'm</c><00:07:51.440><c> going</c>

00:07:51.510 --> 00:07:51.520 align:start position:0%
now this isn't the value that i'm going
 

00:07:51.520 --> 00:07:52.950 align:start position:0%
now this isn't the value that i'm going
to<00:07:51.680><c> return</c><00:07:52.080><c> to</c><00:07:52.319><c> the</c><00:07:52.479><c> parent</c>

00:07:52.950 --> 00:07:52.960 align:start position:0%
to return to the parent
 

00:07:52.960 --> 00:07:55.350 align:start position:0%
to return to the parent
the<00:07:53.280><c> reason</c><00:07:53.680><c> i</c><00:07:53.840><c> computed</c><00:07:54.400><c> this</c><00:07:54.639><c> value</c><00:07:55.039><c> is</c><00:07:55.120><c> so</c><00:07:55.280><c> i</c>

00:07:55.350 --> 00:07:55.360 align:start position:0%
the reason i computed this value is so i
 

00:07:55.360 --> 00:07:57.589 align:start position:0%
the reason i computed this value is so i
can<00:07:55.520><c> potentially</c><00:07:56.160><c> update</c><00:07:56.560><c> the</c><00:07:56.720><c> result</c><00:07:57.199><c> right</c>

00:07:57.589 --> 00:07:57.599 align:start position:0%
can potentially update the result right
 

00:07:57.599 --> 00:07:57.990 align:start position:0%
can potentially update the result right
and<00:07:57.759><c> we</c>

00:07:57.990 --> 00:07:58.000 align:start position:0%
and we
 

00:07:58.000 --> 00:07:59.510 align:start position:0%
and we
are<00:07:58.240><c> going</c><00:07:58.319><c> to</c><00:07:58.479><c> update</c><00:07:58.720><c> the</c><00:07:58.879><c> result</c><00:07:59.280><c> because</c>

00:07:59.510 --> 00:07:59.520 align:start position:0%
are going to update the result because
 

00:07:59.520 --> 00:08:02.390 align:start position:0%
are going to update the result because
this<00:07:59.759><c> is</c><00:07:59.919><c> 12</c><00:08:00.560><c> so</c><00:08:00.800><c> far</c><00:08:01.039><c> our</c><00:08:01.199><c> result</c><00:08:01.680><c> is</c><00:08:01.840><c> five</c>

00:08:02.390 --> 00:08:02.400 align:start position:0%
this is 12 so far our result is five
 

00:08:02.400 --> 00:08:04.550 align:start position:0%
this is 12 so far our result is five
so<00:08:02.560><c> we</c><00:08:02.720><c> can</c><00:08:02.879><c> say</c><00:08:03.039><c> that</c><00:08:03.199><c> our</c><00:08:03.440><c> new</c><00:08:03.759><c> result</c><00:08:04.160><c> now</c><00:08:04.400><c> is</c>

00:08:04.550 --> 00:08:04.560 align:start position:0%
so we can say that our new result now is
 

00:08:04.560 --> 00:08:05.749 align:start position:0%
so we can say that our new result now is
going<00:08:04.800><c> to</c><00:08:05.039><c> be</c>

00:08:05.749 --> 00:08:05.759 align:start position:0%
going to be
 

00:08:05.759 --> 00:08:08.629 align:start position:0%
going to be
12.<00:08:06.800><c> now</c><00:08:07.120><c> what's</c><00:08:07.440><c> the</c><00:08:07.680><c> value</c><00:08:08.160><c> i</c><00:08:08.319><c> want</c><00:08:08.479><c> to</c>

00:08:08.629 --> 00:08:08.639 align:start position:0%
12. now what's the value i want to
 

00:08:08.639 --> 00:08:09.189 align:start position:0%
12. now what's the value i want to
return

00:08:09.189 --> 00:08:09.199 align:start position:0%
return
 

00:08:09.199 --> 00:08:11.990 align:start position:0%
return
up<00:08:09.280><c> to</c><00:08:09.520><c> my</c><00:08:09.759><c> parent</c><00:08:10.400><c> remember</c><00:08:11.039><c> what</c><00:08:11.280><c> this</c><00:08:11.599><c> guy</c>

00:08:11.990 --> 00:08:12.000 align:start position:0%
up to my parent remember what this guy
 

00:08:12.000 --> 00:08:14.070 align:start position:0%
up to my parent remember what this guy
wanted<00:08:12.319><c> to</c><00:08:12.479><c> compute</c><00:08:12.960><c> was</c><00:08:13.199><c> what's</c><00:08:13.440><c> the</c><00:08:13.599><c> max</c>

00:08:14.070 --> 00:08:14.080 align:start position:0%
wanted to compute was what's the max
 

00:08:14.080 --> 00:08:16.230 align:start position:0%
wanted to compute was what's the max
it<00:08:14.240><c> could</c><00:08:14.479><c> have</c><00:08:14.960><c> if</c><00:08:15.199><c> it</c><00:08:15.280><c> was</c><00:08:15.520><c> allowed</c><00:08:15.759><c> to</c><00:08:15.919><c> split</c>

00:08:16.230 --> 00:08:16.240 align:start position:0%
it could have if it was allowed to split
 

00:08:16.240 --> 00:08:18.070 align:start position:0%
it could have if it was allowed to split
to<00:08:16.400><c> the</c><00:08:16.560><c> left</c><00:08:16.879><c> and</c><00:08:17.120><c> it</c><00:08:17.199><c> was</c><00:08:17.360><c> allowed</c><00:08:17.599><c> to</c><00:08:17.759><c> split</c>

00:08:18.070 --> 00:08:18.080 align:start position:0%
to the left and it was allowed to split
 

00:08:18.080 --> 00:08:18.710 align:start position:0%
to the left and it was allowed to split
to<00:08:18.240><c> the</c><00:08:18.319><c> right</c>

00:08:18.710 --> 00:08:18.720 align:start position:0%
to the right
 

00:08:18.720 --> 00:08:21.670 align:start position:0%
to the right
so<00:08:18.960><c> from</c><00:08:19.440><c> here</c><00:08:19.840><c> on</c><00:08:20.319><c> we</c><00:08:20.639><c> don't</c><00:08:20.960><c> want</c><00:08:21.120><c> to</c><00:08:21.280><c> split</c>

00:08:21.670 --> 00:08:21.680 align:start position:0%
so from here on we don't want to split
 

00:08:21.680 --> 00:08:22.230 align:start position:0%
so from here on we don't want to split
twice

00:08:22.230 --> 00:08:22.240 align:start position:0%
twice
 

00:08:22.240 --> 00:08:25.029 align:start position:0%
twice
so<00:08:22.479><c> the</c><00:08:22.720><c> question</c><00:08:23.120><c> of</c><00:08:23.440><c> i</c><00:08:23.759><c> have</c><00:08:24.160><c> for</c><00:08:24.479><c> this</c><00:08:24.720><c> node</c>

00:08:25.029 --> 00:08:25.039 align:start position:0%
so the question of i have for this node
 

00:08:25.039 --> 00:08:26.790 align:start position:0%
so the question of i have for this node
when<00:08:25.199><c> we're</c><00:08:25.360><c> returning</c><00:08:25.840><c> up</c><00:08:26.000><c> to</c><00:08:26.160><c> our</c><00:08:26.319><c> parent</c>

00:08:26.790 --> 00:08:26.800 align:start position:0%
when we're returning up to our parent
 

00:08:26.800 --> 00:08:29.029 align:start position:0%
when we're returning up to our parent
is<00:08:27.120><c> what's</c><00:08:27.360><c> the</c><00:08:27.520><c> max</c><00:08:27.840><c> i</c><00:08:27.919><c> could</c><00:08:28.160><c> get</c><00:08:28.639><c> running</c>

00:08:29.029 --> 00:08:29.039 align:start position:0%
is what's the max i could get running
 

00:08:29.039 --> 00:08:30.309 align:start position:0%
is what's the max i could get running
through<00:08:29.360><c> here</c><00:08:29.680><c> if</c><00:08:29.759><c> we</c><00:08:30.000><c> are</c>

00:08:30.309 --> 00:08:30.319 align:start position:0%
through here if we are
 

00:08:30.319 --> 00:08:32.389 align:start position:0%
through here if we are
not<00:08:30.639><c> allowed</c><00:08:30.960><c> to</c><00:08:31.120><c> split</c><00:08:31.599><c> so</c><00:08:31.840><c> how</c><00:08:32.000><c> am</c><00:08:32.159><c> i</c><00:08:32.240><c> going</c>

00:08:32.389 --> 00:08:32.399 align:start position:0%
not allowed to split so how am i going
 

00:08:32.399 --> 00:08:33.509 align:start position:0%
not allowed to split so how am i going
to<00:08:32.479><c> get</c><00:08:32.719><c> that</c><00:08:33.039><c> well</c>

00:08:33.509 --> 00:08:33.519 align:start position:0%
to get that well
 

00:08:33.519 --> 00:08:36.310 align:start position:0%
to get that well
i<00:08:33.599><c> can</c><00:08:33.839><c> take</c><00:08:34.080><c> this</c><00:08:34.399><c> 3</c><00:08:34.959><c> and</c><00:08:35.200><c> add</c><00:08:35.440><c> it</c><00:08:35.599><c> but</c><00:08:35.839><c> then</c><00:08:36.159><c> i</c>

00:08:36.310 --> 00:08:36.320 align:start position:0%
i can take this 3 and add it but then i
 

00:08:36.320 --> 00:08:38.230 align:start position:0%
i can take this 3 and add it but then i
have<00:08:36.399><c> to</c><00:08:36.560><c> look</c><00:08:36.800><c> at</c><00:08:36.959><c> my</c><00:08:37.200><c> left</c><00:08:37.519><c> subtree</c>

00:08:38.230 --> 00:08:38.240 align:start position:0%
have to look at my left subtree
 

00:08:38.240 --> 00:08:41.829 align:start position:0%
have to look at my left subtree
and<00:08:38.399><c> my</c><00:08:38.719><c> right</c><00:08:38.959><c> subtree</c><00:08:39.519><c> and</c><00:08:39.680><c> take</c><00:08:39.919><c> the</c><00:08:40.399><c> max</c><00:08:41.200><c> of</c>

00:08:41.829 --> 00:08:41.839 align:start position:0%
and my right subtree and take the max of
 

00:08:41.839 --> 00:08:43.909 align:start position:0%
and my right subtree and take the max of
both<00:08:42.159><c> of</c><00:08:42.399><c> these</c><00:08:42.800><c> right</c><00:08:43.200><c> i</c><00:08:43.279><c> have</c><00:08:43.360><c> to</c><00:08:43.519><c> take</c><00:08:43.680><c> the</c>

00:08:43.909 --> 00:08:43.919 align:start position:0%
both of these right i have to take the
 

00:08:43.919 --> 00:08:45.509 align:start position:0%
both of these right i have to take the
max<00:08:44.240><c> of</c><00:08:44.399><c> them</c><00:08:44.560><c> i</c><00:08:44.720><c> can't</c><00:08:44.959><c> choose</c>

00:08:45.509 --> 00:08:45.519 align:start position:0%
max of them i can't choose
 

00:08:45.519 --> 00:08:47.750 align:start position:0%
max of them i can't choose
both<00:08:46.000><c> so</c><00:08:46.240><c> i</c><00:08:46.320><c> have</c><00:08:46.560><c> to</c><00:08:46.720><c> choose</c><00:08:47.040><c> one</c><00:08:47.279><c> of</c><00:08:47.360><c> them</c><00:08:47.600><c> i'm</c>

00:08:47.750 --> 00:08:47.760 align:start position:0%
both so i have to choose one of them i'm
 

00:08:47.760 --> 00:08:49.430 align:start position:0%
both so i have to choose one of them i'm
going<00:08:47.839><c> to</c><00:08:47.920><c> take</c><00:08:48.080><c> the</c><00:08:48.320><c> maximum</c><00:08:48.959><c> which</c><00:08:49.200><c> is</c><00:08:49.360><c> going</c>

00:08:49.430 --> 00:08:49.440 align:start position:0%
going to take the maximum which is going
 

00:08:49.440 --> 00:08:49.829 align:start position:0%
going to take the maximum which is going
to<00:08:49.519><c> be</c>

00:08:49.829 --> 00:08:49.839 align:start position:0%
to be
 

00:08:49.839 --> 00:08:52.949 align:start position:0%
to be
5<00:08:50.240><c> so</c><00:08:50.399><c> i'm</c><00:08:50.560><c> going</c><00:08:50.640><c> to</c><00:08:50.720><c> say</c><00:08:51.279><c> 3</c><00:08:51.760><c> plus</c><00:08:52.320><c> 8</c>

00:08:52.949 --> 00:08:52.959 align:start position:0%
5 so i'm going to say 3 plus 8
 

00:08:52.959 --> 00:08:55.190 align:start position:0%
5 so i'm going to say 3 plus 8
that's<00:08:53.360><c> going</c><00:08:53.440><c> to</c><00:08:53.600><c> be</c><00:08:54.320><c> the</c><00:08:54.560><c> value</c><00:08:54.880><c> that</c><00:08:55.040><c> we</c>

00:08:55.190 --> 00:08:55.200 align:start position:0%
that's going to be the value that we
 

00:08:55.200 --> 00:08:57.509 align:start position:0%
that's going to be the value that we
return<00:08:55.839><c> so</c><00:08:56.080><c> notice</c><00:08:56.399><c> how</c><00:08:56.560><c> for</c><00:08:56.720><c> each</c><00:08:56.959><c> node</c><00:08:57.279><c> i'm</c>

00:08:57.509 --> 00:08:57.519 align:start position:0%
return so notice how for each node i'm
 

00:08:57.519 --> 00:08:59.430 align:start position:0%
return so notice how for each node i'm
marking<00:08:57.839><c> what's</c><00:08:58.160><c> the</c><00:08:58.240><c> return</c><00:08:58.800><c> value</c><00:08:59.200><c> from</c>

00:08:59.430 --> 00:08:59.440 align:start position:0%
marking what's the return value from
 

00:08:59.440 --> 00:09:00.710 align:start position:0%
marking what's the return value from
that<00:08:59.680><c> node</c><00:09:00.000><c> going</c><00:09:00.080><c> to</c><00:09:00.240><c> be</c>

00:09:00.710 --> 00:09:00.720 align:start position:0%
that node going to be
 

00:09:00.720 --> 00:09:02.949 align:start position:0%
that node going to be
so<00:09:00.880><c> it's</c><00:09:01.040><c> going</c><00:09:01.200><c> to</c><00:09:01.279><c> be</c><00:09:01.519><c> 8</c><00:09:01.920><c> in</c><00:09:02.000><c> this</c><00:09:02.240><c> case</c><00:09:02.800><c> so</c>

00:09:02.949 --> 00:09:02.959 align:start position:0%
so it's going to be 8 in this case so
 

00:09:02.959 --> 00:09:05.030 align:start position:0%
so it's going to be 8 in this case so
then<00:09:03.200><c> when</c><00:09:03.360><c> i</c><00:09:03.519><c> return</c><00:09:04.000><c> back</c><00:09:04.320><c> up</c><00:09:04.480><c> to</c><00:09:04.640><c> the</c><00:09:04.800><c> root</c>

00:09:05.030 --> 00:09:05.040 align:start position:0%
then when i return back up to the root
 

00:09:05.040 --> 00:09:06.550 align:start position:0%
then when i return back up to the root
i'm<00:09:05.200><c> going</c><00:09:05.279><c> to</c><00:09:05.360><c> say</c><00:09:05.519><c> okay</c><00:09:05.839><c> from</c><00:09:06.080><c> here</c><00:09:06.320><c> what's</c>

00:09:06.550 --> 00:09:06.560 align:start position:0%
i'm going to say okay from here what's
 

00:09:06.560 --> 00:09:07.910 align:start position:0%
i'm going to say okay from here what's
the<00:09:06.640><c> max</c><00:09:06.880><c> path</c><00:09:07.120><c> we</c><00:09:07.279><c> could</c><00:09:07.360><c> get</c><00:09:07.519><c> well</c><00:09:07.680><c> i'm</c><00:09:07.839><c> going</c>

00:09:07.910 --> 00:09:07.920 align:start position:0%
the max path we could get well i'm going
 

00:09:07.920 --> 00:09:09.190 align:start position:0%
the max path we could get well i'm going
to<00:09:08.000><c> take</c><00:09:08.160><c> the</c><00:09:08.320><c> note</c><00:09:08.640><c> itself</c>

00:09:09.190 --> 00:09:09.200 align:start position:0%
to take the note itself
 

00:09:09.200 --> 00:09:12.470 align:start position:0%
to take the note itself
1<00:09:09.680><c> take</c><00:09:09.920><c> the</c><00:09:10.160><c> left</c><00:09:10.560><c> which</c><00:09:10.800><c> is</c><00:09:11.040><c> 2</c><00:09:11.519><c> and</c><00:09:11.760><c> take</c><00:09:12.080><c> the</c>

00:09:12.470 --> 00:09:12.480 align:start position:0%
1 take the left which is 2 and take the
 

00:09:12.480 --> 00:09:14.870 align:start position:0%
1 take the left which is 2 and take the
right<00:09:13.040><c> which</c><00:09:13.279><c> is</c><00:09:13.519><c> this</c><00:09:13.920><c> path</c><00:09:14.320><c> right</c><00:09:14.560><c> notice</c>

00:09:14.870 --> 00:09:14.880 align:start position:0%
right which is this path right notice
 

00:09:14.880 --> 00:09:16.710 align:start position:0%
right which is this path right notice
how<00:09:14.959><c> we</c><00:09:15.120><c> don't</c><00:09:15.440><c> split</c>

00:09:16.710 --> 00:09:16.720 align:start position:0%
how we don't split
 

00:09:16.720 --> 00:09:18.710 align:start position:0%
how we don't split
it's<00:09:17.040><c> going</c><00:09:17.200><c> to</c><00:09:17.279><c> be</c><00:09:17.600><c> an</c><00:09:18.000><c> 8</c><00:09:18.320><c> which</c><00:09:18.480><c> is</c><00:09:18.560><c> going</c><00:09:18.640><c> to</c>

00:09:18.710 --> 00:09:18.720 align:start position:0%
it's going to be an 8 which is going to
 

00:09:18.720 --> 00:09:20.630 align:start position:0%
it's going to be an 8 which is going to
give<00:09:18.880><c> us</c><00:09:19.120><c> 11.</c><00:09:19.600><c> now</c><00:09:19.760><c> that's</c><00:09:20.000><c> not</c><00:09:20.240><c> bigger</c><00:09:20.480><c> than</c>

00:09:20.630 --> 00:09:20.640 align:start position:0%
give us 11. now that's not bigger than
 

00:09:20.640 --> 00:09:22.150 align:start position:0%
give us 11. now that's not bigger than
our<00:09:20.800><c> result</c><00:09:21.200><c> right</c><00:09:21.360><c> so</c><00:09:21.519><c> we</c><00:09:21.680><c> actually</c>

00:09:22.150 --> 00:09:22.160 align:start position:0%
our result right so we actually
 

00:09:22.160 --> 00:09:24.710 align:start position:0%
our result right so we actually
don't<00:09:22.560><c> update</c><00:09:22.959><c> the</c><00:09:23.120><c> result</c><00:09:23.519><c> in</c><00:09:23.680><c> this</c><00:09:23.839><c> case</c><00:09:24.560><c> and</c>

00:09:24.710 --> 00:09:24.720 align:start position:0%
don't update the result in this case and
 

00:09:24.720 --> 00:09:26.470 align:start position:0%
don't update the result in this case and
of<00:09:24.880><c> course</c><00:09:25.200><c> this</c><00:09:25.440><c> is</c><00:09:25.519><c> the</c><00:09:25.680><c> root</c><00:09:25.920><c> node</c><00:09:26.160><c> so</c><00:09:26.320><c> it's</c>

00:09:26.470 --> 00:09:26.480 align:start position:0%
of course this is the root node so it's
 

00:09:26.480 --> 00:09:28.070 align:start position:0%
of course this is the root node so it's
not<00:09:26.720><c> going</c><00:09:26.800><c> to</c><00:09:26.959><c> end</c><00:09:27.120><c> up</c><00:09:27.279><c> returning</c><00:09:27.760><c> to</c><00:09:27.920><c> its</c>

00:09:28.070 --> 00:09:28.080 align:start position:0%
not going to end up returning to its
 

00:09:28.080 --> 00:09:29.829 align:start position:0%
not going to end up returning to its
parent<00:09:28.399><c> but</c><00:09:28.560><c> what</c><00:09:28.720><c> if</c><00:09:28.800><c> it</c><00:09:28.959><c> did</c><00:09:29.200><c> have</c><00:09:29.440><c> a</c><00:09:29.519><c> parent</c>

00:09:29.829 --> 00:09:29.839 align:start position:0%
parent but what if it did have a parent
 

00:09:29.839 --> 00:09:31.670 align:start position:0%
parent but what if it did have a parent
what<00:09:30.080><c> would</c><00:09:30.240><c> it</c><00:09:30.399><c> return</c><00:09:30.800><c> well</c><00:09:30.959><c> we</c><00:09:31.040><c> could</c><00:09:31.200><c> only</c>

00:09:31.670 --> 00:09:31.680 align:start position:0%
what would it return well we could only
 

00:09:31.680 --> 00:09:33.430 align:start position:0%
what would it return well we could only
we<00:09:31.839><c> would</c><00:09:32.000><c> take</c><00:09:32.320><c> one</c><00:09:32.560><c> and</c><00:09:32.720><c> then</c><00:09:32.880><c> add</c><00:09:33.120><c> it</c><00:09:33.200><c> to</c><00:09:33.360><c> the</c>

00:09:33.430 --> 00:09:33.440 align:start position:0%
we would take one and then add it to the
 

00:09:33.440 --> 00:09:35.350 align:start position:0%
we would take one and then add it to the
max<00:09:33.760><c> of</c><00:09:33.839><c> the</c><00:09:34.000><c> left</c><00:09:34.399><c> or</c><00:09:34.560><c> the</c><00:09:34.880><c> right</c>

00:09:35.350 --> 00:09:35.360 align:start position:0%
max of the left or the right
 

00:09:35.360 --> 00:09:37.670 align:start position:0%
max of the left or the right
of<00:09:35.440><c> course</c><00:09:35.760><c> the</c><00:09:36.080><c> right</c><00:09:36.399><c> is</c><00:09:36.560><c> an</c><00:09:36.800><c> eight</c><00:09:37.360><c> this</c><00:09:37.600><c> is</c>

00:09:37.670 --> 00:09:37.680 align:start position:0%
of course the right is an eight this is
 

00:09:37.680 --> 00:09:39.910 align:start position:0%
of course the right is an eight this is
the<00:09:37.920><c> path</c><00:09:38.320><c> so</c><00:09:38.560><c> we'd</c><00:09:38.720><c> say</c><00:09:38.959><c> one</c><00:09:39.279><c> plus</c>

00:09:39.910 --> 00:09:39.920 align:start position:0%
the path so we'd say one plus
 

00:09:39.920 --> 00:09:41.990 align:start position:0%
the path so we'd say one plus
a<00:09:40.160><c> is</c><00:09:40.320><c> going</c><00:09:40.480><c> to</c><00:09:40.560><c> be</c><00:09:40.800><c> nine</c><00:09:41.200><c> nine</c><00:09:41.519><c> is</c><00:09:41.600><c> what</c><00:09:41.760><c> we</c>

00:09:41.990 --> 00:09:42.000 align:start position:0%
a is going to be nine nine is what we
 

00:09:42.000 --> 00:09:43.509 align:start position:0%
a is going to be nine nine is what we
would<00:09:42.240><c> return</c><00:09:42.640><c> to</c><00:09:42.800><c> our</c><00:09:42.880><c> parent</c><00:09:43.200><c> that's</c><00:09:43.360><c> the</c>

00:09:43.509 --> 00:09:43.519 align:start position:0%
would return to our parent that's the
 

00:09:43.519 --> 00:09:45.670 align:start position:0%
would return to our parent that's the
max<00:09:43.839><c> path</c><00:09:44.080><c> we</c><00:09:44.240><c> can</c><00:09:44.320><c> get</c><00:09:44.480><c> from</c><00:09:44.720><c> here</c><00:09:44.959><c> without</c>

00:09:45.670 --> 00:09:45.680 align:start position:0%
max path we can get from here without
 

00:09:45.680 --> 00:09:46.310 align:start position:0%
max path we can get from here without
splitting

00:09:46.310 --> 00:09:46.320 align:start position:0%
splitting
 

00:09:46.320 --> 00:09:47.829 align:start position:0%
splitting
what<00:09:46.480><c> would</c><00:09:46.640><c> that</c><00:09:46.880><c> path</c><00:09:47.200><c> look</c><00:09:47.440><c> like</c><00:09:47.600><c> well</c><00:09:47.760><c> of</c>

00:09:47.829 --> 00:09:47.839 align:start position:0%
what would that path look like well of
 

00:09:47.839 --> 00:09:49.190 align:start position:0%
what would that path look like well of
course<00:09:48.080><c> it</c><00:09:48.160><c> would</c><00:09:48.320><c> just</c><00:09:48.480><c> be</c><00:09:48.720><c> this</c><00:09:48.959><c> right</c>

00:09:49.190 --> 00:09:49.200 align:start position:0%
course it would just be this right
 

00:09:49.200 --> 00:09:50.630 align:start position:0%
course it would just be this right
notice<00:09:49.440><c> how</c><00:09:49.680><c> this</c><00:09:49.839><c> is</c><00:09:50.000><c> a</c><00:09:50.080><c> path</c>

00:09:50.630 --> 00:09:50.640 align:start position:0%
notice how this is a path
 

00:09:50.640 --> 00:09:53.750 align:start position:0%
notice how this is a path
it<00:09:50.880><c> never</c><00:09:51.279><c> splits</c><00:09:52.080><c> so</c><00:09:52.399><c> that</c><00:09:52.800><c> is</c><00:09:52.959><c> the</c><00:09:53.279><c> main</c>

00:09:53.750 --> 00:09:53.760 align:start position:0%
it never splits so that is the main
 

00:09:53.760 --> 00:09:56.550 align:start position:0%
it never splits so that is the main
idea<00:09:54.320><c> for</c><00:09:54.560><c> this</c><00:09:54.959><c> problem</c><00:09:55.519><c> there's</c><00:09:55.920><c> one</c><00:09:56.160><c> last</c>

00:09:56.550 --> 00:09:56.560 align:start position:0%
idea for this problem there's one last
 

00:09:56.560 --> 00:09:58.230 align:start position:0%
idea for this problem there's one last
quick<00:09:56.800><c> thing</c><00:09:57.040><c> i</c><00:09:57.120><c> want</c><00:09:57.279><c> to</c><00:09:57.440><c> go</c><00:09:57.680><c> over</c>

00:09:58.230 --> 00:09:58.240 align:start position:0%
quick thing i want to go over
 

00:09:58.240 --> 00:09:59.829 align:start position:0%
quick thing i want to go over
so<00:09:58.399><c> the</c><00:09:58.560><c> return</c><00:09:58.959><c> value</c><00:09:59.279><c> of</c><00:09:59.360><c> course</c><00:09:59.680><c> is</c><00:09:59.760><c> going</c>

00:09:59.829 --> 00:09:59.839 align:start position:0%
so the return value of course is going
 

00:09:59.839 --> 00:10:01.590 align:start position:0%
so the return value of course is going
to<00:09:59.920><c> be</c><00:10:00.080><c> for</c><00:10:00.240><c> every</c><00:10:00.480><c> node</c><00:10:00.640><c> what's</c><00:10:00.880><c> the</c><00:10:00.959><c> max</c><00:10:01.279><c> path</c>

00:10:01.590 --> 00:10:01.600 align:start position:0%
to be for every node what's the max path
 

00:10:01.600 --> 00:10:02.949 align:start position:0%
to be for every node what's the max path
without<00:10:02.000><c> splitting</c><00:10:02.560><c> and</c>

00:10:02.949 --> 00:10:02.959 align:start position:0%
without splitting and
 

00:10:02.959 --> 00:10:04.389 align:start position:0%
without splitting and
we<00:10:03.120><c> are</c><00:10:03.279><c> going</c><00:10:03.360><c> to</c><00:10:03.519><c> still</c><00:10:03.760><c> calculate</c><00:10:04.160><c> what's</c>

00:10:04.389 --> 00:10:04.399 align:start position:0%
we are going to still calculate what's
 

00:10:04.399 --> 00:10:06.470 align:start position:0%
we are going to still calculate what's
the<00:10:04.480><c> max</c><00:10:04.800><c> path</c><00:10:05.120><c> with</c><00:10:05.440><c> splitting</c><00:10:05.920><c> and</c><00:10:06.079><c> use</c><00:10:06.320><c> that</c>

00:10:06.470 --> 00:10:06.480 align:start position:0%
the max path with splitting and use that
 

00:10:06.480 --> 00:10:07.990 align:start position:0%
the max path with splitting and use that
to<00:10:06.720><c> actually</c><00:10:06.959><c> update</c><00:10:07.360><c> our</c><00:10:07.519><c> result</c><00:10:07.839><c> we're</c>

00:10:07.990 --> 00:10:08.000 align:start position:0%
to actually update our result we're
 

00:10:08.000 --> 00:10:09.910 align:start position:0%
to actually update our result we're
going<00:10:08.079><c> to</c><00:10:08.240><c> keep</c><00:10:08.399><c> this</c><00:10:08.640><c> as</c><00:10:08.800><c> a</c><00:10:08.959><c> global</c><00:10:09.440><c> variable</c>

00:10:09.910 --> 00:10:09.920 align:start position:0%
going to keep this as a global variable
 

00:10:09.920 --> 00:10:11.670 align:start position:0%
going to keep this as a global variable
because<00:10:10.160><c> it</c><00:10:10.240><c> just</c><00:10:10.399><c> makes</c><00:10:10.720><c> the</c><00:10:10.800><c> code</c><00:10:11.200><c> easier</c>

00:10:11.670 --> 00:10:11.680 align:start position:0%
because it just makes the code easier
 

00:10:11.680 --> 00:10:13.269 align:start position:0%
because it just makes the code easier
but<00:10:11.920><c> it's</c><00:10:12.079><c> actually</c><00:10:12.399><c> it</c><00:10:12.560><c> is</c><00:10:12.720><c> possible</c><00:10:13.120><c> to</c>

00:10:13.269 --> 00:10:13.279 align:start position:0%
but it's actually it is possible to
 

00:10:13.279 --> 00:10:15.110 align:start position:0%
but it's actually it is possible to
solve<00:10:13.519><c> this</c><00:10:13.680><c> problem</c><00:10:14.000><c> without</c><00:10:14.560><c> using</c><00:10:14.880><c> this</c>

00:10:15.110 --> 00:10:15.120 align:start position:0%
solve this problem without using this
 

00:10:15.120 --> 00:10:16.870 align:start position:0%
solve this problem without using this
global<00:10:15.519><c> variable</c><00:10:16.000><c> and</c><00:10:16.160><c> by</c><00:10:16.320><c> the</c><00:10:16.399><c> way</c><00:10:16.560><c> if</c><00:10:16.720><c> you've</c>

00:10:16.870 --> 00:10:16.880 align:start position:0%
global variable and by the way if you've
 

00:10:16.880 --> 00:10:18.389 align:start position:0%
global variable and by the way if you've
been<00:10:17.040><c> noticing</c><00:10:17.600><c> we're</c><00:10:17.839><c> only</c><00:10:18.079><c> going</c><00:10:18.160><c> to</c><00:10:18.320><c> be</c>

00:10:18.389 --> 00:10:18.399 align:start position:0%
been noticing we're only going to be
 

00:10:18.399 --> 00:10:19.990 align:start position:0%
been noticing we're only going to be
looking<00:10:18.720><c> at</c><00:10:18.800><c> each</c><00:10:19.120><c> node</c><00:10:19.440><c> once</c><00:10:19.680><c> so</c><00:10:19.839><c> that's</c>

00:10:19.990 --> 00:10:20.000 align:start position:0%
looking at each node once so that's
 

00:10:20.000 --> 00:10:21.590 align:start position:0%
looking at each node once so that's
going<00:10:20.079><c> to</c><00:10:20.160><c> be</c><00:10:20.240><c> a</c><00:10:20.320><c> time</c><00:10:20.560><c> complexity</c><00:10:21.040><c> of</c><00:10:21.120><c> big</c><00:10:21.360><c> o</c>

00:10:21.590 --> 00:10:21.600 align:start position:0%
going to be a time complexity of big o
 

00:10:21.600 --> 00:10:21.910 align:start position:0%
going to be a time complexity of big o
of

00:10:21.910 --> 00:10:21.920 align:start position:0%
of
 

00:10:21.920 --> 00:10:23.670 align:start position:0%
of
n<00:10:22.320><c> the</c><00:10:22.399><c> memory</c><00:10:22.720><c> complexity</c><00:10:23.200><c> of</c><00:10:23.279><c> course</c><00:10:23.600><c> is</c>

00:10:23.670 --> 00:10:23.680 align:start position:0%
n the memory complexity of course is
 

00:10:23.680 --> 00:10:25.030 align:start position:0%
n the memory complexity of course is
going<00:10:23.760><c> to</c><00:10:23.839><c> be</c><00:10:23.920><c> the</c><00:10:24.160><c> height</c><00:10:24.399><c> of</c><00:10:24.560><c> the</c><00:10:24.640><c> tree</c><00:10:24.880><c> which</c>

00:10:25.030 --> 00:10:25.040 align:start position:0%
going to be the height of the tree which
 

00:10:25.040 --> 00:10:25.670 align:start position:0%
going to be the height of the tree which
is<00:10:25.200><c> usually</c>

00:10:25.670 --> 00:10:25.680 align:start position:0%
is usually
 

00:10:25.680 --> 00:10:27.990 align:start position:0%
is usually
log<00:10:26.000><c> n</c><00:10:26.160><c> if</c><00:10:26.320><c> it's</c><00:10:26.480><c> a</c><00:10:26.560><c> balanced</c><00:10:27.040><c> tree</c><00:10:27.600><c> but</c><00:10:27.760><c> one</c>

00:10:27.990 --> 00:10:28.000 align:start position:0%
log n if it's a balanced tree but one
 

00:10:28.000 --> 00:10:28.710 align:start position:0%
log n if it's a balanced tree but one
last<00:10:28.320><c> case</c>

00:10:28.710 --> 00:10:28.720 align:start position:0%
last case
 

00:10:28.720 --> 00:10:30.470 align:start position:0%
last case
remember<00:10:29.200><c> this</c><00:10:29.440><c> tree</c><00:10:29.680><c> could</c><00:10:29.920><c> have</c><00:10:30.160><c> negative</c>

00:10:30.470 --> 00:10:30.480 align:start position:0%
remember this tree could have negative
 

00:10:30.480 --> 00:10:31.829 align:start position:0%
remember this tree could have negative
numbers<00:10:30.720><c> so</c><00:10:30.959><c> for</c><00:10:31.040><c> example</c><00:10:31.360><c> let's</c><00:10:31.440><c> say</c><00:10:31.600><c> this</c>

00:10:31.829 --> 00:10:31.839 align:start position:0%
numbers so for example let's say this
 

00:10:31.839 --> 00:10:33.110 align:start position:0%
numbers so for example let's say this
was<00:10:32.000><c> a</c><00:10:32.079><c> negative</c><00:10:32.560><c> four</c>

00:10:33.110 --> 00:10:33.120 align:start position:0%
was a negative four
 

00:10:33.120 --> 00:10:35.269 align:start position:0%
was a negative four
and<00:10:33.279><c> this</c><00:10:33.680><c> was</c><00:10:33.839><c> a</c><00:10:33.920><c> negative</c><00:10:34.320><c> five</c><00:10:34.959><c> so</c><00:10:35.120><c> then</c>

00:10:35.269 --> 00:10:35.279 align:start position:0%
and this was a negative five so then
 

00:10:35.279 --> 00:10:37.030 align:start position:0%
and this was a negative five so then
from<00:10:35.519><c> this</c><00:10:35.760><c> left</c><00:10:36.000><c> subtree</c><00:10:36.320><c> we</c><00:10:36.480><c> would</c><00:10:36.640><c> return</c><00:10:36.880><c> a</c>

00:10:37.030 --> 00:10:37.040 align:start position:0%
from this left subtree we would return a
 

00:10:37.040 --> 00:10:38.790 align:start position:0%
from this left subtree we would return a
negative<00:10:37.360><c> four</c><00:10:37.600><c> and</c><00:10:37.680><c> from</c><00:10:37.839><c> this</c><00:10:38.079><c> we</c><00:10:38.240><c> return</c><00:10:38.720><c> a</c>

00:10:38.790 --> 00:10:38.800 align:start position:0%
negative four and from this we return a
 

00:10:38.800 --> 00:10:40.230 align:start position:0%
negative four and from this we return a
negative<00:10:39.200><c> five</c><00:10:39.440><c> so</c><00:10:39.680><c> then</c>

00:10:40.230 --> 00:10:40.240 align:start position:0%
negative five so then
 

00:10:40.240 --> 00:10:41.750 align:start position:0%
negative five so then
you<00:10:40.320><c> know</c><00:10:40.399><c> when</c><00:10:40.560><c> we're</c><00:10:40.800><c> actually</c><00:10:41.120><c> computing</c>

00:10:41.750 --> 00:10:41.760 align:start position:0%
you know when we're actually computing
 

00:10:41.760 --> 00:10:43.829 align:start position:0%
you know when we're actually computing
okay<00:10:42.079><c> what's</c><00:10:42.240><c> the</c><00:10:42.399><c> max</c><00:10:42.720><c> path</c><00:10:43.200><c> that</c><00:10:43.360><c> could</c><00:10:43.600><c> run</c>

00:10:43.829 --> 00:10:43.839 align:start position:0%
okay what's the max path that could run
 

00:10:43.839 --> 00:10:44.710 align:start position:0%
okay what's the max path that could run
through<00:10:44.160><c> here</c>

00:10:44.710 --> 00:10:44.720 align:start position:0%
through here
 

00:10:44.720 --> 00:10:46.310 align:start position:0%
through here
and<00:10:44.880><c> let's</c><00:10:45.040><c> say</c><00:10:45.200><c> we're</c><00:10:45.360><c> doing</c><00:10:45.680><c> it</c><00:10:45.760><c> for</c><00:10:45.920><c> the</c><00:10:46.079><c> one</c>

00:10:46.310 --> 00:10:46.320 align:start position:0%
and let's say we're doing it for the one
 

00:10:46.320 --> 00:10:47.750 align:start position:0%
and let's say we're doing it for the one
that<00:10:46.399><c> we</c><00:10:46.720><c> can't</c><00:10:47.279><c> split</c>

00:10:47.750 --> 00:10:47.760 align:start position:0%
that we can't split
 

00:10:47.760 --> 00:10:49.430 align:start position:0%
that we can't split
right<00:10:48.000><c> where</c><00:10:48.160><c> we</c><00:10:48.399><c> don't</c><00:10:48.640><c> split</c><00:10:48.880><c> so</c><00:10:49.040><c> we</c><00:10:49.200><c> either</c>

00:10:49.430 --> 00:10:49.440 align:start position:0%
right where we don't split so we either
 

00:10:49.440 --> 00:10:51.190 align:start position:0%
right where we don't split so we either
choose<00:10:49.760><c> the</c><00:10:50.000><c> left</c><00:10:50.399><c> or</c><00:10:50.560><c> the</c><00:10:50.800><c> right</c>

00:10:51.190 --> 00:10:51.200 align:start position:0%
choose the left or the right
 

00:10:51.200 --> 00:10:53.430 align:start position:0%
choose the left or the right
and<00:10:51.440><c> as</c><00:10:51.680><c> i</c><00:10:51.839><c> mentioned</c><00:10:52.560><c> how</c><00:10:52.720><c> we're</c><00:10:52.959><c> doing</c><00:10:53.200><c> it</c><00:10:53.360><c> is</c>

00:10:53.430 --> 00:10:53.440 align:start position:0%
and as i mentioned how we're doing it is
 

00:10:53.440 --> 00:10:55.350 align:start position:0%
and as i mentioned how we're doing it is
we're<00:10:53.680><c> just</c><00:10:53.839><c> taking</c><00:10:54.160><c> the</c><00:10:54.399><c> max</c><00:10:54.800><c> of</c><00:10:54.959><c> the</c><00:10:55.120><c> two</c>

00:10:55.350 --> 00:10:55.360 align:start position:0%
we're just taking the max of the two
 

00:10:55.360 --> 00:10:56.630 align:start position:0%
we're just taking the max of the two
right<00:10:55.519><c> so</c><00:10:55.680><c> in</c><00:10:55.760><c> this</c><00:10:55.839><c> case</c><00:10:56.079><c> we</c><00:10:56.240><c> would</c><00:10:56.399><c> take</c><00:10:56.560><c> the</c>

00:10:56.630 --> 00:10:56.640 align:start position:0%
right so in this case we would take the
 

00:10:56.640 --> 00:10:57.910 align:start position:0%
right so in this case we would take the
max<00:10:56.959><c> of</c><00:10:57.040><c> negative</c><00:10:57.440><c> four</c>

00:10:57.910 --> 00:10:57.920 align:start position:0%
max of negative four
 

00:10:57.920 --> 00:11:00.069 align:start position:0%
max of negative four
and<00:10:58.000><c> the</c><00:10:58.160><c> max</c><00:10:58.480><c> of</c><00:10:58.560><c> negative</c><00:10:59.040><c> five</c><00:10:59.440><c> right</c><00:10:59.920><c> and</c>

00:11:00.069 --> 00:11:00.079 align:start position:0%
and the max of negative five right and
 

00:11:00.079 --> 00:11:01.829 align:start position:0%
and the max of negative five right and
of<00:11:00.160><c> course</c><00:11:00.399><c> we'd</c><00:11:00.640><c> say</c><00:11:00.800><c> the</c><00:11:00.959><c> max</c><00:11:01.279><c> is</c><00:11:01.440><c> negative</c>

00:11:01.829 --> 00:11:01.839 align:start position:0%
of course we'd say the max is negative
 

00:11:01.839 --> 00:11:02.550 align:start position:0%
of course we'd say the max is negative
four<00:11:02.079><c> so</c><00:11:02.240><c> then</c>

00:11:02.550 --> 00:11:02.560 align:start position:0%
four so then
 

00:11:02.560 --> 00:11:04.150 align:start position:0%
four so then
when<00:11:02.720><c> we're</c><00:11:03.040><c> up</c><00:11:03.200><c> here</c><00:11:03.440><c> what</c><00:11:03.600><c> we</c><00:11:03.680><c> would</c><00:11:03.920><c> end</c><00:11:04.079><c> up</c>

00:11:04.150 --> 00:11:04.160 align:start position:0%
when we're up here what we would end up
 

00:11:04.160 --> 00:11:06.150 align:start position:0%
when we're up here what we would end up
computing<00:11:04.640><c> is</c><00:11:04.800><c> three</c><00:11:05.120><c> plus</c><00:11:05.519><c> negative</c><00:11:05.920><c> four</c>

00:11:06.150 --> 00:11:06.160 align:start position:0%
computing is three plus negative four
 

00:11:06.160 --> 00:11:07.350 align:start position:0%
computing is three plus negative four
which<00:11:06.399><c> is</c><00:11:06.560><c> going</c><00:11:06.640><c> to</c><00:11:06.720><c> give</c><00:11:06.880><c> us</c>

00:11:07.350 --> 00:11:07.360 align:start position:0%
which is going to give us
 

00:11:07.360 --> 00:11:10.230 align:start position:0%
which is going to give us
negative<00:11:08.320><c> one</c><00:11:08.959><c> right</c><00:11:09.360><c> negative</c><00:11:09.680><c> one</c><00:11:09.920><c> so</c><00:11:10.079><c> what</c>

00:11:10.230 --> 00:11:10.240 align:start position:0%
negative one right negative one so what
 

00:11:10.240 --> 00:11:11.750 align:start position:0%
negative one right negative one so what
we<00:11:10.399><c> would</c><00:11:10.560><c> say</c><00:11:10.720><c> is</c><00:11:10.880><c> okay</c><00:11:11.120><c> the</c><00:11:11.200><c> max</c><00:11:11.519><c> we</c><00:11:11.680><c> could</c>

00:11:11.750 --> 00:11:11.760 align:start position:0%
we would say is okay the max we could
 

00:11:11.760 --> 00:11:12.069 align:start position:0%
we would say is okay the max we could
get

00:11:12.069 --> 00:11:12.079 align:start position:0%
get
 

00:11:12.079 --> 00:11:13.430 align:start position:0%
get
here<00:11:12.240><c> without</c><00:11:12.560><c> splitting</c><00:11:13.040><c> is</c><00:11:13.200><c> going</c><00:11:13.279><c> to</c><00:11:13.360><c> be</c>

00:11:13.430 --> 00:11:13.440 align:start position:0%
here without splitting is going to be
 

00:11:13.440 --> 00:11:15.590 align:start position:0%
here without splitting is going to be
negative<00:11:13.760><c> 1</c><00:11:14.000><c> but</c><00:11:14.160><c> that's</c><00:11:14.480><c> not</c><00:11:14.880><c> actually</c><00:11:15.360><c> the</c>

00:11:15.590 --> 00:11:15.600 align:start position:0%
negative 1 but that's not actually the
 

00:11:15.600 --> 00:11:16.470 align:start position:0%
negative 1 but that's not actually the
case<00:11:16.000><c> right</c>

00:11:16.470 --> 00:11:16.480 align:start position:0%
case right
 

00:11:16.480 --> 00:11:19.350 align:start position:0%
case right
because<00:11:17.040><c> th</c><00:11:17.440><c> to</c><00:11:17.600><c> get</c><00:11:17.839><c> the</c><00:11:18.000><c> maximum</c><00:11:18.640><c> pat</c><00:11:18.880><c> some</c>

00:11:19.350 --> 00:11:19.360 align:start position:0%
because th to get the maximum pat some
 

00:11:19.360 --> 00:11:21.269 align:start position:0%
because th to get the maximum pat some
from<00:11:19.680><c> here</c><00:11:19.920><c> where</c><00:11:20.160><c> we're</c><00:11:20.399><c> not</c><00:11:20.720><c> allowed</c><00:11:21.040><c> to</c>

00:11:21.269 --> 00:11:21.279 align:start position:0%
from here where we're not allowed to
 

00:11:21.279 --> 00:11:22.150 align:start position:0%
from here where we're not allowed to
split

00:11:22.150 --> 00:11:22.160 align:start position:0%
split
 

00:11:22.160 --> 00:11:24.790 align:start position:0%
split
it<00:11:22.320><c> doesn't</c><00:11:22.640><c> necessarily</c><00:11:23.600><c> mean</c><00:11:24.000><c> we</c><00:11:24.240><c> have</c><00:11:24.560><c> to</c>

00:11:24.790 --> 00:11:24.800 align:start position:0%
it doesn't necessarily mean we have to
 

00:11:24.800 --> 00:11:26.389 align:start position:0%
it doesn't necessarily mean we have to
include<00:11:25.200><c> the</c><00:11:25.360><c> children</c><00:11:25.760><c> right</c><00:11:26.000><c> they're</c>

00:11:26.389 --> 00:11:26.399 align:start position:0%
include the children right they're
 

00:11:26.399 --> 00:11:28.710 align:start position:0%
include the children right they're
optional<00:11:27.040><c> we</c><00:11:27.200><c> could</c><00:11:27.440><c> actually</c><00:11:27.839><c> choose</c><00:11:28.160><c> to</c><00:11:28.399><c> not</c>

00:11:28.710 --> 00:11:28.720 align:start position:0%
optional we could actually choose to not
 

00:11:28.720 --> 00:11:30.069 align:start position:0%
optional we could actually choose to not
include<00:11:29.200><c> either</c><00:11:29.519><c> of</c><00:11:29.680><c> these</c>

00:11:30.069 --> 00:11:30.079 align:start position:0%
include either of these
 

00:11:30.079 --> 00:11:32.150 align:start position:0%
include either of these
and<00:11:30.240><c> that's</c><00:11:30.560><c> what</c><00:11:30.720><c> we</c><00:11:30.880><c> would</c><00:11:31.120><c> want</c><00:11:31.440><c> to</c><00:11:31.680><c> do</c>

00:11:32.150 --> 00:11:32.160 align:start position:0%
and that's what we would want to do
 

00:11:32.160 --> 00:11:33.590 align:start position:0%
and that's what we would want to do
because<00:11:32.480><c> they're</c><00:11:32.720><c> both</c><00:11:33.040><c> negative</c>

00:11:33.590 --> 00:11:33.600 align:start position:0%
because they're both negative
 

00:11:33.600 --> 00:11:35.509 align:start position:0%
because they're both negative
anyway<00:11:34.000><c> why</c><00:11:34.160><c> would</c><00:11:34.320><c> we</c><00:11:34.480><c> want</c><00:11:34.640><c> to</c><00:11:34.800><c> include</c><00:11:35.279><c> some</c>

00:11:35.509 --> 00:11:35.519 align:start position:0%
anyway why would we want to include some
 

00:11:35.519 --> 00:11:37.350 align:start position:0%
anyway why would we want to include some
negative<00:11:35.920><c> numbers</c><00:11:36.399><c> so</c><00:11:36.560><c> when</c><00:11:36.800><c> we're</c><00:11:37.040><c> actually</c>

00:11:37.350 --> 00:11:37.360 align:start position:0%
negative numbers so when we're actually
 

00:11:37.360 --> 00:11:38.710 align:start position:0%
negative numbers so when we're actually
taking<00:11:37.600><c> the</c><00:11:37.760><c> max</c><00:11:38.079><c> of</c><00:11:38.160><c> the</c><00:11:38.320><c> two</c>

00:11:38.710 --> 00:11:38.720 align:start position:0%
taking the max of the two
 

00:11:38.720 --> 00:11:40.230 align:start position:0%
taking the max of the two
we're<00:11:38.880><c> actually</c><00:11:39.200><c> going</c><00:11:39.279><c> to</c><00:11:39.360><c> take</c><00:11:39.519><c> the</c><00:11:39.680><c> max</c><00:11:40.000><c> of</c>

00:11:40.230 --> 00:11:40.240 align:start position:0%
we're actually going to take the max of
 

00:11:40.240 --> 00:11:41.750 align:start position:0%
we're actually going to take the max of
three<00:11:40.560><c> values</c><00:11:40.880><c> we're</c><00:11:41.040><c> going</c><00:11:41.120><c> to</c><00:11:41.200><c> take</c><00:11:41.360><c> the</c><00:11:41.440><c> max</c>

00:11:41.750 --> 00:11:41.760 align:start position:0%
three values we're going to take the max
 

00:11:41.760 --> 00:11:42.949 align:start position:0%
three values we're going to take the max
of<00:11:41.920><c> the</c><00:11:42.079><c> left</c><00:11:42.480><c> right</c>

00:11:42.949 --> 00:11:42.959 align:start position:0%
of the left right
 

00:11:42.959 --> 00:11:45.670 align:start position:0%
of the left right
and<00:11:43.600><c> potentially</c><00:11:44.320><c> zero</c><00:11:44.880><c> because</c><00:11:45.200><c> if</c><00:11:45.279><c> we</c><00:11:45.440><c> just</c>

00:11:45.670 --> 00:11:45.680 align:start position:0%
and potentially zero because if we just
 

00:11:45.680 --> 00:11:46.790 align:start position:0%
and potentially zero because if we just
add<00:11:45.920><c> zero</c><00:11:46.240><c> to</c><00:11:46.480><c> it</c>

00:11:46.790 --> 00:11:46.800 align:start position:0%
add zero to it
 

00:11:46.800 --> 00:11:48.949 align:start position:0%
add zero to it
this<00:11:47.040><c> will</c><00:11:47.279><c> stay</c><00:11:47.600><c> the</c><00:11:47.839><c> same</c><00:11:48.320><c> so</c><00:11:48.560><c> those</c><00:11:48.800><c> are</c><00:11:48.880><c> the</c>

00:11:48.949 --> 00:11:48.959 align:start position:0%
this will stay the same so those are the
 

00:11:48.959 --> 00:11:51.030 align:start position:0%
this will stay the same so those are the
key<00:11:49.200><c> ideas</c><00:11:49.600><c> i</c><00:11:49.760><c> wanted</c><00:11:50.000><c> to</c><00:11:50.079><c> go</c><00:11:50.320><c> over</c>

00:11:51.030 --> 00:11:51.040 align:start position:0%
key ideas i wanted to go over
 

00:11:51.040 --> 00:11:53.110 align:start position:0%
key ideas i wanted to go over
i<00:11:51.120><c> think</c><00:11:51.279><c> that</c><00:11:51.519><c> is</c><00:11:51.680><c> enough</c><00:11:52.160><c> for</c><00:11:52.399><c> us</c><00:11:52.560><c> to</c><00:11:52.800><c> dive</c>

00:11:53.110 --> 00:11:53.120 align:start position:0%
i think that is enough for us to dive
 

00:11:53.120 --> 00:11:55.750 align:start position:0%
i think that is enough for us to dive
into<00:11:53.360><c> the</c><00:11:53.519><c> code</c><00:11:53.839><c> to</c><00:11:54.000><c> solve</c><00:11:54.320><c> this</c><00:11:54.639><c> optimally</c>

00:11:55.750 --> 00:11:55.760 align:start position:0%
into the code to solve this optimally
 

00:11:55.760 --> 00:11:57.190 align:start position:0%
into the code to solve this optimally
so<00:11:55.920><c> like</c><00:11:56.160><c> i</c><00:11:56.320><c> said</c><00:11:56.560><c> we're</c><00:11:56.720><c> going</c><00:11:56.800><c> to</c><00:11:56.880><c> have</c><00:11:57.040><c> a</c>

00:11:57.190 --> 00:11:57.200 align:start position:0%
so like i said we're going to have a
 

00:11:57.200 --> 00:11:59.350 align:start position:0%
so like i said we're going to have a
global<00:11:57.600><c> variable</c><00:11:58.320><c> for</c><00:11:58.560><c> the</c><00:11:58.800><c> result</c>

00:11:59.350 --> 00:11:59.360 align:start position:0%
global variable for the result
 

00:11:59.360 --> 00:12:01.190 align:start position:0%
global variable for the result
and<00:11:59.519><c> initially</c><00:12:00.399><c> we're</c><00:12:00.560><c> just</c><00:12:00.720><c> going</c><00:12:00.880><c> to</c><00:12:00.959><c> set</c>

00:12:01.190 --> 00:12:01.200 align:start position:0%
and initially we're just going to set
 

00:12:01.200 --> 00:12:02.949 align:start position:0%
and initially we're just going to set
that<00:12:01.360><c> to</c><00:12:01.519><c> the</c><00:12:01.600><c> val</c><00:12:01.920><c> whatever</c><00:12:02.240><c> value</c><00:12:02.639><c> happens</c>

00:12:02.949 --> 00:12:02.959 align:start position:0%
that to the val whatever value happens
 

00:12:02.959 --> 00:12:04.550 align:start position:0%
that to the val whatever value happens
to<00:12:03.040><c> be</c><00:12:03.200><c> at</c><00:12:03.360><c> the</c><00:12:03.600><c> root</c><00:12:03.839><c> so</c><00:12:04.000><c> the</c><00:12:04.160><c> reason</c><00:12:04.399><c> i'm</c>

00:12:04.550 --> 00:12:04.560 align:start position:0%
to be at the root so the reason i'm
 

00:12:04.560 --> 00:12:06.310 align:start position:0%
to be at the root so the reason i'm
making<00:12:04.800><c> it</c><00:12:04.959><c> a</c><00:12:05.040><c> list</c><00:12:05.360><c> is</c><00:12:05.519><c> because</c><00:12:05.760><c> that'll</c><00:12:06.079><c> make</c>

00:12:06.310 --> 00:12:06.320 align:start position:0%
making it a list is because that'll make
 

00:12:06.320 --> 00:12:06.790 align:start position:0%
making it a list is because that'll make
it<00:12:06.480><c> for</c>

00:12:06.790 --> 00:12:06.800 align:start position:0%
it for
 

00:12:06.800 --> 00:12:08.470 align:start position:0%
it for
that'll<00:12:07.040><c> make</c><00:12:07.279><c> it</c><00:12:07.360><c> so</c><00:12:07.519><c> that</c><00:12:07.600><c> we</c><00:12:07.680><c> can</c><00:12:07.839><c> modify</c><00:12:08.320><c> it</c>

00:12:08.470 --> 00:12:08.480 align:start position:0%
that'll make it so that we can modify it
 

00:12:08.480 --> 00:12:10.150 align:start position:0%
that'll make it so that we can modify it
within<00:12:08.720><c> the</c><00:12:08.880><c> recursive</c><00:12:09.440><c> function</c>

00:12:10.150 --> 00:12:10.160 align:start position:0%
within the recursive function
 

00:12:10.160 --> 00:12:11.670 align:start position:0%
within the recursive function
a<00:12:10.240><c> little</c><00:12:10.399><c> bit</c><00:12:10.639><c> easier</c><00:12:11.200><c> so</c><00:12:11.440><c> we're</c><00:12:11.600><c> going</c><00:12:11.600><c> to</c>

00:12:11.670 --> 00:12:11.680 align:start position:0%
a little bit easier so we're going to
 

00:12:11.680 --> 00:12:13.350 align:start position:0%
a little bit easier so we're going to
have<00:12:11.839><c> a</c><00:12:11.920><c> recursive</c><00:12:12.480><c> dfs</c>

00:12:13.350 --> 00:12:13.360 align:start position:0%
have a recursive dfs
 

00:12:13.360 --> 00:12:15.269 align:start position:0%
have a recursive dfs
we're<00:12:13.519><c> going</c><00:12:13.680><c> to</c><00:12:13.760><c> pass</c><00:12:14.079><c> in</c><00:12:14.240><c> whatever</c><00:12:14.959><c> root</c>

00:12:15.269 --> 00:12:15.279 align:start position:0%
we're going to pass in whatever root
 

00:12:15.279 --> 00:12:16.949 align:start position:0%
we're going to pass in whatever root
node<00:12:15.519><c> we're</c><00:12:15.839><c> traversing</c><00:12:16.399><c> and</c><00:12:16.480><c> that's</c><00:12:16.720><c> really</c>

00:12:16.949 --> 00:12:16.959 align:start position:0%
node we're traversing and that's really
 

00:12:16.959 --> 00:12:17.829 align:start position:0%
node we're traversing and that's really
all<00:12:17.120><c> we</c><00:12:17.200><c> have</c><00:12:17.360><c> to</c><00:12:17.440><c> pass</c>

00:12:17.829 --> 00:12:17.839 align:start position:0%
all we have to pass
 

00:12:17.839 --> 00:12:20.710 align:start position:0%
all we have to pass
in<00:12:18.399><c> so</c><00:12:18.560><c> now</c><00:12:19.040><c> the</c><00:12:19.200><c> base</c><00:12:19.519><c> case</c><00:12:19.839><c> is</c><00:12:20.000><c> that</c><00:12:20.160><c> if</c><00:12:20.399><c> we</c>

00:12:20.710 --> 00:12:20.720 align:start position:0%
in so now the base case is that if we
 

00:12:20.720 --> 00:12:21.509 align:start position:0%
in so now the base case is that if we
don't<00:12:21.040><c> have</c>

00:12:21.509 --> 00:12:21.519 align:start position:0%
don't have
 

00:12:21.519 --> 00:12:23.829 align:start position:0%
don't have
a<00:12:21.760><c> root</c><00:12:22.000><c> like</c><00:12:22.240><c> if</c><00:12:22.320><c> the</c><00:12:22.639><c> node</c><00:12:22.959><c> is</c><00:12:23.200><c> null</c><00:12:23.600><c> in</c><00:12:23.680><c> that</c>

00:12:23.829 --> 00:12:23.839 align:start position:0%
a root like if the node is null in that
 

00:12:23.839 --> 00:12:25.430 align:start position:0%
a root like if the node is null in that
case<00:12:24.079><c> what</c><00:12:24.240><c> we're</c><00:12:24.399><c> going</c><00:12:24.480><c> to</c><00:12:24.560><c> return</c><00:12:24.959><c> is</c><00:12:25.040><c> just</c>

00:12:25.430 --> 00:12:25.440 align:start position:0%
case what we're going to return is just
 

00:12:25.440 --> 00:12:27.430 align:start position:0%
case what we're going to return is just
0<00:12:25.839><c> that</c><00:12:26.000><c> means</c><00:12:26.800><c> we're</c><00:12:26.959><c> not</c><00:12:27.120><c> going</c><00:12:27.200><c> to</c><00:12:27.279><c> be</c>

00:12:27.430 --> 00:12:27.440 align:start position:0%
0 that means we're not going to be
 

00:12:27.440 --> 00:12:28.550 align:start position:0%
0 that means we're not going to be
adding<00:12:27.760><c> anything</c>

00:12:28.550 --> 00:12:28.560 align:start position:0%
adding anything
 

00:12:28.560 --> 00:12:29.990 align:start position:0%
adding anything
and<00:12:28.720><c> so</c><00:12:28.880><c> we're</c><00:12:29.040><c> going</c><00:12:29.120><c> to</c><00:12:29.200><c> be</c><00:12:29.279><c> returning</c><00:12:29.920><c> i</c>

00:12:29.990 --> 00:12:30.000 align:start position:0%
and so we're going to be returning i
 

00:12:30.000 --> 00:12:31.110 align:start position:0%
and so we're going to be returning i
just<00:12:30.240><c> added</c><00:12:30.399><c> a</c><00:12:30.480><c> comment</c><00:12:30.800><c> we're</c><00:12:30.959><c> going</c><00:12:31.040><c> to</c>

00:12:31.110 --> 00:12:31.120 align:start position:0%
just added a comment we're going to
 

00:12:31.120 --> 00:12:33.030 align:start position:0%
just added a comment we're going to
return<00:12:31.519><c> from</c><00:12:31.760><c> this</c><00:12:31.920><c> function</c><00:12:32.240><c> the</c><00:12:32.399><c> max</c><00:12:32.720><c> path</c>

00:12:33.030 --> 00:12:33.040 align:start position:0%
return from this function the max path
 

00:12:33.040 --> 00:12:34.870 align:start position:0%
return from this function the max path
sum<00:12:33.360><c> without</c><00:12:33.920><c> splitting</c>

00:12:34.870 --> 00:12:34.880 align:start position:0%
sum without splitting
 

00:12:34.880 --> 00:12:37.509 align:start position:0%
sum without splitting
so<00:12:35.200><c> we</c><00:12:35.440><c> want</c><00:12:35.680><c> to</c><00:12:35.839><c> get</c><00:12:36.000><c> the</c><00:12:36.160><c> max</c><00:12:36.560><c> path</c><00:12:36.800><c> sum</c><00:12:37.120><c> so</c><00:12:37.440><c> of</c>

00:12:37.509 --> 00:12:37.519 align:start position:0%
so we want to get the max path sum so of
 

00:12:37.519 --> 00:12:39.190 align:start position:0%
so we want to get the max path sum so of
course<00:12:37.760><c> we</c><00:12:37.920><c> have</c><00:12:38.000><c> to</c><00:12:38.079><c> do</c><00:12:38.240><c> this</c><00:12:38.399><c> recursively</c><00:12:39.040><c> so</c>

00:12:39.190 --> 00:12:39.200 align:start position:0%
course we have to do this recursively so
 

00:12:39.200 --> 00:12:40.870 align:start position:0%
course we have to do this recursively so
let's<00:12:39.360><c> get</c><00:12:39.519><c> the</c><00:12:39.760><c> left</c><00:12:40.160><c> max</c>

00:12:40.870 --> 00:12:40.880 align:start position:0%
let's get the left max
 

00:12:40.880 --> 00:12:43.110 align:start position:0%
let's get the left max
and<00:12:41.680><c> we</c><00:12:41.760><c> can</c><00:12:41.920><c> do</c><00:12:42.000><c> that</c><00:12:42.160><c> recursively</c><00:12:42.720><c> just</c><00:12:42.880><c> pass</c>

00:12:43.110 --> 00:12:43.120 align:start position:0%
and we can do that recursively just pass
 

00:12:43.120 --> 00:12:44.470 align:start position:0%
and we can do that recursively just pass
in<00:12:43.279><c> root.left</c><00:12:44.079><c> if</c><00:12:44.240><c> it's</c>

00:12:44.470 --> 00:12:44.480 align:start position:0%
in root.left if it's
 

00:12:44.480 --> 00:12:45.750 align:start position:0%
in root.left if it's
null<00:12:44.800><c> of</c><00:12:44.880><c> course</c><00:12:45.120><c> that's</c><00:12:45.360><c> just</c><00:12:45.519><c> going</c><00:12:45.680><c> to</c>

00:12:45.750 --> 00:12:45.760 align:start position:0%
null of course that's just going to
 

00:12:45.760 --> 00:12:47.910 align:start position:0%
null of course that's just going to
return<00:12:46.160><c> zero</c><00:12:46.800><c> we're</c><00:12:47.040><c> also</c><00:12:47.279><c> going</c><00:12:47.440><c> to</c><00:12:47.519><c> get</c><00:12:47.680><c> the</c>

00:12:47.910 --> 00:12:47.920 align:start position:0%
return zero we're also going to get the
 

00:12:47.920 --> 00:12:48.870 align:start position:0%
return zero we're also going to get the
right<00:12:48.160><c> max</c>

00:12:48.870 --> 00:12:48.880 align:start position:0%
right max
 

00:12:48.880 --> 00:12:52.389 align:start position:0%
right max
passing<00:12:49.600><c> in</c><00:12:50.120><c> root.right</c><00:12:51.440><c> so</c><00:12:51.600><c> the</c><00:12:51.839><c> first</c><00:12:52.160><c> thing</c>

00:12:52.389 --> 00:12:52.399 align:start position:0%
passing in root.right so the first thing
 

00:12:52.399 --> 00:12:54.230 align:start position:0%
passing in root.right so the first thing
i'm<00:12:52.480><c> going</c><00:12:52.560><c> to</c><00:12:52.720><c> do</c><00:12:52.959><c> is</c><00:12:53.200><c> compute</c>

00:12:54.230 --> 00:12:54.240 align:start position:0%
i'm going to do is compute
 

00:12:54.240 --> 00:12:57.269 align:start position:0%
i'm going to do is compute
the<00:12:54.399><c> max</c><00:12:54.959><c> path</c><00:12:55.279><c> sum</c><00:12:56.000><c> with</c><00:12:56.480><c> a</c><00:12:56.639><c> split</c>

00:12:57.269 --> 00:12:57.279 align:start position:0%
the max path sum with a split
 

00:12:57.279 --> 00:12:59.110 align:start position:0%
the max path sum with a split
from<00:12:57.600><c> this</c><00:12:57.920><c> root</c><00:12:58.160><c> node</c><00:12:58.399><c> so</c><00:12:58.560><c> basically</c><00:12:58.959><c> what</c>

00:12:59.110 --> 00:12:59.120 align:start position:0%
from this root node so basically what
 

00:12:59.120 --> 00:13:00.790 align:start position:0%
from this root node so basically what
i'm<00:12:59.200><c> going</c><00:12:59.360><c> to</c><00:12:59.440><c> do</c><00:12:59.760><c> is</c><00:12:59.920><c> i'm</c><00:13:00.000><c> going</c><00:13:00.079><c> to</c><00:13:00.240><c> take</c><00:13:00.560><c> the</c>

00:13:00.790 --> 00:13:00.800 align:start position:0%
i'm going to do is i'm going to take the
 

00:13:00.800 --> 00:13:02.790 align:start position:0%
i'm going to do is i'm going to take the
root<00:13:01.120><c> dot</c><00:13:01.440><c> value</c>

00:13:02.790 --> 00:13:02.800 align:start position:0%
root dot value
 

00:13:02.800 --> 00:13:06.069 align:start position:0%
root dot value
and<00:13:03.120><c> add</c><00:13:03.360><c> it</c><00:13:03.839><c> with</c><00:13:04.480><c> the</c><00:13:04.800><c> left</c><00:13:05.200><c> max</c>

00:13:06.069 --> 00:13:06.079 align:start position:0%
and add it with the left max
 

00:13:06.079 --> 00:13:08.550 align:start position:0%
and add it with the left max
and<00:13:06.560><c> the</c><00:13:06.720><c> right</c><00:13:07.040><c> max</c><00:13:07.440><c> right</c><00:13:07.680><c> because</c><00:13:08.000><c> we</c><00:13:08.320><c> are</c>

00:13:08.550 --> 00:13:08.560 align:start position:0%
and the right max right because we are
 

00:13:08.560 --> 00:13:10.470 align:start position:0%
and the right max right because we are
splitting<00:13:09.120><c> from</c><00:13:09.360><c> this</c><00:13:09.680><c> root</c><00:13:09.920><c> node</c><00:13:10.240><c> now</c><00:13:10.399><c> of</c>

00:13:10.470 --> 00:13:10.480 align:start position:0%
splitting from this root node now of
 

00:13:10.480 --> 00:13:12.389 align:start position:0%
splitting from this root node now of
course<00:13:10.800><c> these</c><00:13:11.040><c> left</c><00:13:11.279><c> and</c><00:13:11.360><c> right</c><00:13:11.600><c> maxes</c><00:13:12.079><c> could</c>

00:13:12.389 --> 00:13:12.399 align:start position:0%
course these left and right maxes could
 

00:13:12.399 --> 00:13:12.710 align:start position:0%
course these left and right maxes could
be

00:13:12.710 --> 00:13:12.720 align:start position:0%
be
 

00:13:12.720 --> 00:13:14.069 align:start position:0%
be
negative<00:13:13.200><c> so</c><00:13:13.360><c> what</c><00:13:13.519><c> i'm</c><00:13:13.680><c> actually</c><00:13:13.920><c> going</c><00:13:14.000><c> to</c>

00:13:14.069 --> 00:13:14.079 align:start position:0%
negative so what i'm actually going to
 

00:13:14.079 --> 00:13:16.629 align:start position:0%
negative so what i'm actually going to
do<00:13:14.240><c> before</c><00:13:14.639><c> that</c><00:13:14.959><c> is</c><00:13:15.279><c> update</c><00:13:15.760><c> them</c><00:13:16.079><c> so</c>

00:13:16.629 --> 00:13:16.639 align:start position:0%
do before that is update them so
 

00:13:16.639 --> 00:13:19.509 align:start position:0%
do before that is update them so
we're<00:13:16.880><c> going</c><00:13:16.959><c> to</c><00:13:17.120><c> set</c><00:13:17.440><c> left</c><00:13:17.920><c> max</c><00:13:18.480><c> equal</c><00:13:19.120><c> to</c><00:13:19.360><c> the</c>

00:13:19.509 --> 00:13:19.519 align:start position:0%
we're going to set left max equal to the
 

00:13:19.519 --> 00:13:20.870 align:start position:0%
we're going to set left max equal to the
max<00:13:19.920><c> of</c><00:13:20.079><c> itself</c>

00:13:20.870 --> 00:13:20.880 align:start position:0%
max of itself
 

00:13:20.880 --> 00:13:23.670 align:start position:0%
max of itself
and<00:13:21.360><c> 0</c><00:13:22.320><c> and</c><00:13:22.480><c> do</c><00:13:22.639><c> the</c><00:13:22.800><c> exact</c><00:13:23.120><c> same</c><00:13:23.360><c> thing</c><00:13:23.519><c> with</c>

00:13:23.670 --> 00:13:23.680 align:start position:0%
and 0 and do the exact same thing with
 

00:13:23.680 --> 00:13:25.269 align:start position:0%
and 0 and do the exact same thing with
the<00:13:23.839><c> right</c><00:13:24.079><c> max</c><00:13:24.399><c> so</c><00:13:24.560><c> it's</c><00:13:24.639><c> going</c><00:13:24.720><c> to</c><00:13:24.800><c> be</c><00:13:24.959><c> set</c><00:13:25.120><c> to</c>

00:13:25.269 --> 00:13:25.279 align:start position:0%
the right max so it's going to be set to
 

00:13:25.279 --> 00:13:26.710 align:start position:0%
the right max so it's going to be set to
the<00:13:25.360><c> max</c><00:13:25.680><c> of</c><00:13:25.839><c> itself</c>

00:13:26.710 --> 00:13:26.720 align:start position:0%
the max of itself
 

00:13:26.720 --> 00:13:29.430 align:start position:0%
the max of itself
plus<00:13:27.519><c> 0.</c><00:13:28.320><c> so</c><00:13:28.560><c> here</c><00:13:28.959><c> we're</c><00:13:29.120><c> going</c><00:13:29.279><c> to</c><00:13:29.360><c> be</c>

00:13:29.430 --> 00:13:29.440 align:start position:0%
plus 0. so here we're going to be
 

00:13:29.440 --> 00:13:30.790 align:start position:0%
plus 0. so here we're going to be
computing<00:13:29.920><c> the</c><00:13:30.079><c> max</c><00:13:30.320><c> path</c>

00:13:30.790 --> 00:13:30.800 align:start position:0%
computing the max path
 

00:13:30.800 --> 00:13:31.910 align:start position:0%
computing the max path
running<00:13:31.040><c> through</c><00:13:31.200><c> here</c><00:13:31.360><c> so</c><00:13:31.519><c> we're</c><00:13:31.680><c> going</c><00:13:31.839><c> to</c>

00:13:31.910 --> 00:13:31.920 align:start position:0%
running through here so we're going to
 

00:13:31.920 --> 00:13:34.470 align:start position:0%
running through here so we're going to
take<00:13:32.079><c> the</c><00:13:32.240><c> root</c><00:13:32.480><c> value</c><00:13:33.040><c> the</c><00:13:33.279><c> left</c><00:13:33.600><c> max</c><00:13:34.000><c> and</c>

00:13:34.470 --> 00:13:34.480 align:start position:0%
take the root value the left max and
 

00:13:34.480 --> 00:13:37.269 align:start position:0%
take the root value the left max and
the<00:13:34.720><c> right</c><00:13:35.040><c> max</c><00:13:35.600><c> add</c><00:13:35.920><c> them</c><00:13:36.160><c> together</c><00:13:36.880><c> now</c><00:13:37.120><c> this</c>

00:13:37.269 --> 00:13:37.279 align:start position:0%
the right max add them together now this
 

00:13:37.279 --> 00:13:39.430 align:start position:0%
the right max add them together now this
could<00:13:37.519><c> potentially</c><00:13:38.160><c> be</c><00:13:38.399><c> our</c><00:13:38.560><c> new</c><00:13:38.800><c> result</c><00:13:39.199><c> so</c>

00:13:39.430 --> 00:13:39.440 align:start position:0%
could potentially be our new result so
 

00:13:39.440 --> 00:13:40.710 align:start position:0%
could potentially be our new result so
let's<00:13:39.680><c> see</c><00:13:40.000><c> if</c><00:13:40.160><c> it</c><00:13:40.240><c> actually</c>

00:13:40.710 --> 00:13:40.720 align:start position:0%
let's see if it actually
 

00:13:40.720 --> 00:13:43.269 align:start position:0%
let's see if it actually
is<00:13:40.880><c> so</c><00:13:41.120><c> result</c><00:13:41.760><c> at</c><00:13:41.920><c> position</c><00:13:42.480><c> 0</c><00:13:42.959><c> is</c><00:13:43.120><c> going</c><00:13:43.199><c> to</c>

00:13:43.269 --> 00:13:43.279 align:start position:0%
is so result at position 0 is going to
 

00:13:43.279 --> 00:13:44.550 align:start position:0%
is so result at position 0 is going to
be<00:13:43.440><c> set</c><00:13:43.680><c> to</c><00:13:43.839><c> the</c><00:13:44.079><c> max</c>

00:13:44.550 --> 00:13:44.560 align:start position:0%
be set to the max
 

00:13:44.560 --> 00:13:47.430 align:start position:0%
be set to the max
of<00:13:44.800><c> itself</c><00:13:45.760><c> or</c><00:13:46.079><c> this</c><00:13:46.399><c> value</c><00:13:46.720><c> that</c><00:13:46.880><c> we</c><00:13:47.040><c> just</c>

00:13:47.430 --> 00:13:47.440 align:start position:0%
of itself or this value that we just
 

00:13:47.440 --> 00:13:48.389 align:start position:0%
of itself or this value that we just
computed

00:13:48.389 --> 00:13:48.399 align:start position:0%
computed
 

00:13:48.399 --> 00:13:49.910 align:start position:0%
computed
so<00:13:48.639><c> this</c><00:13:48.880><c> is</c><00:13:48.959><c> the</c><00:13:49.120><c> part</c><00:13:49.360><c> where</c><00:13:49.519><c> we're</c><00:13:49.600><c> actually</c>

00:13:49.910 --> 00:13:49.920 align:start position:0%
so this is the part where we're actually
 

00:13:49.920 --> 00:13:51.750 align:start position:0%
so this is the part where we're actually
computing<00:13:50.639><c> what</c><00:13:50.880><c> could</c><00:13:51.040><c> actually</c><00:13:51.360><c> be</c><00:13:51.600><c> the</c>

00:13:51.750 --> 00:13:51.760 align:start position:0%
computing what could actually be the
 

00:13:51.760 --> 00:13:54.150 align:start position:0%
computing what could actually be the
updated<00:13:52.240><c> result</c><00:13:52.720><c> now</c><00:13:52.880><c> what</c><00:13:53.120><c> the</c><00:13:53.279><c> return</c><00:13:53.680><c> value</c>

00:13:54.150 --> 00:13:54.160 align:start position:0%
updated result now what the return value
 

00:13:54.160 --> 00:13:55.750 align:start position:0%
updated result now what the return value
remember<00:13:54.480><c> of</c><00:13:54.639><c> this</c><00:13:54.800><c> function</c><00:13:55.120><c> is</c><00:13:55.360><c> not</c><00:13:55.600><c> going</c>

00:13:55.750 --> 00:13:55.760 align:start position:0%
remember of this function is not going
 

00:13:55.760 --> 00:13:57.910 align:start position:0%
remember of this function is not going
to<00:13:55.839><c> be</c><00:13:56.000><c> the</c><00:13:56.240><c> same</c><00:13:56.560><c> as</c><00:13:56.880><c> this</c><00:13:57.120><c> the</c><00:13:57.279><c> return</c><00:13:57.600><c> value</c>

00:13:57.910 --> 00:13:57.920 align:start position:0%
to be the same as this the return value
 

00:13:57.920 --> 00:13:58.550 align:start position:0%
to be the same as this the return value
is<00:13:58.000><c> going</c><00:13:58.160><c> to</c><00:13:58.240><c> be</c>

00:13:58.550 --> 00:13:58.560 align:start position:0%
is going to be
 

00:13:58.560 --> 00:14:01.750 align:start position:0%
is going to be
what<00:13:58.800><c> we</c><00:13:59.360><c> compute</c><00:13:59.839><c> without</c><00:14:00.720><c> splitting</c><00:14:01.440><c> so</c><00:14:01.680><c> the</c>

00:14:01.750 --> 00:14:01.760 align:start position:0%
what we compute without splitting so the
 

00:14:01.760 --> 00:14:03.590 align:start position:0%
what we compute without splitting so the
return<00:14:02.160><c> value</c><00:14:02.560><c> is</c><00:14:02.720><c> going</c><00:14:02.959><c> to</c><00:14:03.120><c> be</c>

00:14:03.590 --> 00:14:03.600 align:start position:0%
return value is going to be
 

00:14:03.600 --> 00:14:07.030 align:start position:0%
return value is going to be
return<00:14:04.560><c> root</c><00:14:04.959><c> dot</c><00:14:05.279><c> val</c><00:14:05.920><c> plus</c><00:14:06.480><c> whatever</c><00:14:06.800><c> the</c>

00:14:07.030 --> 00:14:07.040 align:start position:0%
return root dot val plus whatever the
 

00:14:07.040 --> 00:14:07.509 align:start position:0%
return root dot val plus whatever the
max

00:14:07.509 --> 00:14:07.519 align:start position:0%
max
 

00:14:07.519 --> 00:14:10.230 align:start position:0%
max
of<00:14:07.680><c> the</c><00:14:08.079><c> left</c><00:14:08.399><c> max</c><00:14:08.880><c> and</c><00:14:09.360><c> right</c><00:14:09.600><c> max</c><00:14:09.920><c> is</c><00:14:10.079><c> right</c>

00:14:10.230 --> 00:14:10.240 align:start position:0%
of the left max and right max is right
 

00:14:10.240 --> 00:14:11.509 align:start position:0%
of the left max and right max is right
because<00:14:10.480><c> we</c><00:14:10.639><c> can't</c><00:14:11.040><c> choose</c>

00:14:11.509 --> 00:14:11.519 align:start position:0%
because we can't choose
 

00:14:11.519 --> 00:14:13.269 align:start position:0%
because we can't choose
both<00:14:11.839><c> because</c><00:14:12.079><c> if</c><00:14:12.240><c> we</c><00:14:12.399><c> choose</c><00:14:12.720><c> both</c><00:14:13.120><c> that</c>

00:14:13.269 --> 00:14:13.279 align:start position:0%
both because if we choose both that
 

00:14:13.279 --> 00:14:14.790 align:start position:0%
both because if we choose both that
means<00:14:13.600><c> that</c><00:14:13.760><c> we're</c><00:14:14.000><c> splitting</c>

00:14:14.790 --> 00:14:14.800 align:start position:0%
means that we're splitting
 

00:14:14.800 --> 00:14:16.790 align:start position:0%
means that we're splitting
and<00:14:14.959><c> so</c><00:14:15.199><c> that's</c><00:14:15.600><c> actually</c><00:14:16.079><c> the</c><00:14:16.399><c> entire</c>

00:14:16.790 --> 00:14:16.800 align:start position:0%
and so that's actually the entire
 

00:14:16.800 --> 00:14:18.230 align:start position:0%
and so that's actually the entire
function<00:14:17.199><c> right</c><00:14:17.360><c> you</c><00:14:17.519><c> can</c><00:14:17.600><c> see</c>

00:14:18.230 --> 00:14:18.240 align:start position:0%
function right you can see
 

00:14:18.240 --> 00:14:20.470 align:start position:0%
function right you can see
when<00:14:18.399><c> we</c><00:14:18.560><c> handle</c><00:14:18.880><c> the</c><00:14:19.040><c> recursive</c><00:14:19.680><c> case</c><00:14:20.079><c> well</c>

00:14:20.470 --> 00:14:20.480 align:start position:0%
when we handle the recursive case well
 

00:14:20.480 --> 00:14:21.829 align:start position:0%
when we handle the recursive case well
and<00:14:20.639><c> we</c><00:14:20.800><c> take</c><00:14:20.959><c> the</c><00:14:21.120><c> max</c><00:14:21.440><c> of</c><00:14:21.600><c> it</c>

00:14:21.829 --> 00:14:21.839 align:start position:0%
and we take the max of it
 

00:14:21.839 --> 00:14:23.829 align:start position:0%
and we take the max of it
and<00:14:22.000><c> zero</c><00:14:22.560><c> then</c><00:14:22.800><c> we</c><00:14:22.959><c> really</c><00:14:23.199><c> just</c><00:14:23.360><c> have</c><00:14:23.519><c> two</c>

00:14:23.829 --> 00:14:23.839 align:start position:0%
and zero then we really just have two
 

00:14:23.839 --> 00:14:25.509 align:start position:0%
and zero then we really just have two
main<00:14:24.079><c> computations</c><00:14:24.720><c> we're</c><00:14:24.880><c> doing</c><00:14:25.199><c> right</c>

00:14:25.509 --> 00:14:25.519 align:start position:0%
main computations we're doing right
 

00:14:25.519 --> 00:14:27.350 align:start position:0%
main computations we're doing right
the<00:14:25.680><c> max</c><00:14:26.000><c> path</c><00:14:26.240><c> sum</c><00:14:26.480><c> with</c><00:14:26.720><c> a</c><00:14:26.880><c> split</c><00:14:27.120><c> and</c><00:14:27.279><c> the</c>

00:14:27.350 --> 00:14:27.360 align:start position:0%
the max path sum with a split and the
 

00:14:27.360 --> 00:14:29.030 align:start position:0%
the max path sum with a split and the
max<00:14:27.600><c> path</c><00:14:27.839><c> sum</c><00:14:28.079><c> without</c><00:14:28.480><c> a</c><00:14:28.560><c> split</c>

00:14:29.030 --> 00:14:29.040 align:start position:0%
max path sum without a split
 

00:14:29.040 --> 00:14:30.389 align:start position:0%
max path sum without a split
of<00:14:29.199><c> course</c><00:14:29.519><c> this</c><00:14:29.760><c> one</c><00:14:29.920><c> is</c><00:14:30.000><c> going</c><00:14:30.079><c> to</c><00:14:30.160><c> be</c><00:14:30.320><c> the</c>

00:14:30.389 --> 00:14:30.399 align:start position:0%
of course this one is going to be the
 

00:14:30.399 --> 00:14:32.150 align:start position:0%
of course this one is going to be the
return<00:14:30.800><c> value</c><00:14:31.279><c> and</c><00:14:31.440><c> after</c><00:14:31.680><c> we're</c><00:14:31.839><c> done</c><00:14:32.000><c> with</c>

00:14:32.150 --> 00:14:32.160 align:start position:0%
return value and after we're done with
 

00:14:32.160 --> 00:14:33.829 align:start position:0%
return value and after we're done with
that<00:14:32.320><c> all</c><00:14:32.480><c> we</c><00:14:32.560><c> do</c><00:14:32.720><c> is</c><00:14:32.880><c> call</c><00:14:33.120><c> our</c><00:14:33.279><c> dfs</c>

00:14:33.829 --> 00:14:33.839 align:start position:0%
that all we do is call our dfs
 

00:14:33.839 --> 00:14:35.670 align:start position:0%
that all we do is call our dfs
passing<00:14:34.160><c> in</c><00:14:34.240><c> the</c><00:14:34.399><c> root</c><00:14:34.880><c> and</c><00:14:34.959><c> then</c><00:14:35.199><c> that</c><00:14:35.440><c> will</c>

00:14:35.670 --> 00:14:35.680 align:start position:0%
passing in the root and then that will
 

00:14:35.680 --> 00:14:37.509 align:start position:0%
passing in the root and then that will
update<00:14:36.079><c> our</c><00:14:36.160><c> global</c><00:14:36.639><c> variable</c><00:14:37.040><c> up</c><00:14:37.199><c> above</c>

00:14:37.509 --> 00:14:37.519 align:start position:0%
update our global variable up above
 

00:14:37.519 --> 00:14:38.470 align:start position:0%
update our global variable up above
which<00:14:37.680><c> is</c><00:14:37.760><c> the</c>

00:14:38.470 --> 00:14:38.480 align:start position:0%
which is the
 

00:14:38.480 --> 00:14:40.150 align:start position:0%
which is the
which<00:14:38.720><c> is</c><00:14:38.880><c> the</c><00:14:38.959><c> result</c><00:14:39.440><c> then</c><00:14:39.600><c> we</c><00:14:39.760><c> can</c><00:14:39.839><c> go</c><00:14:40.000><c> ahead</c>

00:14:40.150 --> 00:14:40.160 align:start position:0%
which is the result then we can go ahead
 

00:14:40.160 --> 00:14:42.069 align:start position:0%
which is the result then we can go ahead
and<00:14:40.240><c> return</c><00:14:40.639><c> that</c><00:14:40.880><c> result</c><00:14:41.440><c> and</c><00:14:41.600><c> that</c><00:14:41.839><c> is</c><00:14:41.920><c> the</c>

00:14:42.069 --> 00:14:42.079 align:start position:0%
and return that result and that is the
 

00:14:42.079 --> 00:14:42.949 align:start position:0%
and return that result and that is the
entire<00:14:42.480><c> function</c>

00:14:42.949 --> 00:14:42.959 align:start position:0%
entire function
 

00:14:42.959 --> 00:14:44.870 align:start position:0%
entire function
i'll<00:14:43.279><c> run</c><00:14:43.519><c> it</c><00:14:43.760><c> and</c><00:14:43.920><c> you</c><00:14:44.079><c> can</c><00:14:44.160><c> see</c><00:14:44.320><c> that</c><00:14:44.480><c> it</c><00:14:44.560><c> does</c>

00:14:44.870 --> 00:14:44.880 align:start position:0%
i'll run it and you can see that it does
 

00:14:44.880 --> 00:14:46.550 align:start position:0%
i'll run it and you can see that it does
work<00:14:45.120><c> now</c><00:14:45.600><c> you</c><00:14:45.760><c> might</c><00:14:45.920><c> think</c><00:14:46.160><c> it's</c><00:14:46.320><c> a</c><00:14:46.399><c> little</c>

00:14:46.550 --> 00:14:46.560 align:start position:0%
work now you might think it's a little
 

00:14:46.560 --> 00:14:48.310 align:start position:0%
work now you might think it's a little
bit<00:14:46.800><c> cheating</c><00:14:47.279><c> to</c><00:14:47.440><c> even</c><00:14:47.680><c> have</c><00:14:47.920><c> a</c><00:14:48.000><c> global</c>

00:14:48.310 --> 00:14:48.320 align:start position:0%
bit cheating to even have a global
 

00:14:48.320 --> 00:14:50.069 align:start position:0%
bit cheating to even have a global
variable<00:14:48.800><c> like</c><00:14:48.959><c> this</c><00:14:49.199><c> and</c><00:14:49.360><c> it's</c><00:14:49.519><c> actually</c>

00:14:50.069 --> 00:14:50.079 align:start position:0%
variable like this and it's actually
 

00:14:50.079 --> 00:14:51.910 align:start position:0%
variable like this and it's actually
possible<00:14:50.560><c> to</c><00:14:50.720><c> solve</c><00:14:50.959><c> this</c><00:14:51.199><c> problem</c><00:14:51.600><c> pretty</c>

00:14:51.910 --> 00:14:51.920 align:start position:0%
possible to solve this problem pretty
 

00:14:51.920 --> 00:14:53.910 align:start position:0%
possible to solve this problem pretty
easily<00:14:52.320><c> without</c><00:14:52.639><c> a</c><00:14:52.800><c> global</c><00:14:53.120><c> variable</c><00:14:53.600><c> 2.</c><00:14:53.839><c> i</c>

00:14:53.910 --> 00:14:53.920 align:start position:0%
easily without a global variable 2. i
 

00:14:53.920 --> 00:14:55.269 align:start position:0%
easily without a global variable 2. i
just<00:14:54.079><c> didn't</c><00:14:54.480><c> show</c><00:14:54.720><c> it</c>

00:14:55.269 --> 00:14:55.279 align:start position:0%
just didn't show it
 

00:14:55.279 --> 00:14:57.110 align:start position:0%
just didn't show it
the<00:14:55.440><c> main</c><00:14:55.680><c> way</c><00:14:55.839><c> you</c><00:14:56.000><c> would</c><00:14:56.160><c> do</c><00:14:56.320><c> it</c><00:14:56.480><c> is</c><00:14:56.800><c> instead</c>

00:14:57.110 --> 00:14:57.120 align:start position:0%
the main way you would do it is instead
 

00:14:57.120 --> 00:14:59.350 align:start position:0%
the main way you would do it is instead
of<00:14:57.600><c> you</c><00:14:57.760><c> know</c><00:14:57.920><c> computing</c><00:14:58.560><c> this</c><00:14:58.800><c> and</c><00:14:58.959><c> updating</c>

00:14:59.350 --> 00:14:59.360 align:start position:0%
of you know computing this and updating
 

00:14:59.360 --> 00:15:01.189 align:start position:0%
of you know computing this and updating
a<00:14:59.680><c> global</c><00:15:00.000><c> variable</c><00:15:00.399><c> what</c><00:15:00.560><c> we</c><00:15:00.720><c> could</c><00:15:00.880><c> do</c>

00:15:01.189 --> 00:15:01.199 align:start position:0%
a global variable what we could do
 

00:15:01.199 --> 00:15:03.750 align:start position:0%
a global variable what we could do
is<00:15:01.519><c> take</c><00:15:02.000><c> we</c><00:15:02.160><c> could</c><00:15:02.480><c> basically</c><00:15:02.959><c> return</c><00:15:03.440><c> two</c>

00:15:03.750 --> 00:15:03.760 align:start position:0%
is take we could basically return two
 

00:15:03.760 --> 00:15:05.189 align:start position:0%
is take we could basically return two
values<00:15:04.160><c> from</c><00:15:04.320><c> this</c><00:15:04.480><c> function</c><00:15:04.800><c> so</c><00:15:04.959><c> we</c><00:15:05.040><c> would</c>

00:15:05.189 --> 00:15:05.199 align:start position:0%
values from this function so we would
 

00:15:05.199 --> 00:15:07.350 align:start position:0%
values from this function so we would
return<00:15:05.519><c> the</c><00:15:05.680><c> max</c><00:15:06.000><c> path</c><00:15:06.240><c> sum</c><00:15:06.480><c> with</c><00:15:06.720><c> the</c><00:15:06.880><c> split</c>

00:15:07.350 --> 00:15:07.360 align:start position:0%
return the max path sum with the split
 

00:15:07.360 --> 00:15:09.829 align:start position:0%
return the max path sum with the split
and<00:15:07.600><c> the</c><00:15:07.680><c> max</c><00:15:08.000><c> path</c><00:15:08.240><c> sum</c><00:15:08.480><c> without</c><00:15:08.959><c> a</c><00:15:09.120><c> split</c><00:15:09.680><c> so</c>

00:15:09.829 --> 00:15:09.839 align:start position:0%
and the max path sum without a split so
 

00:15:09.839 --> 00:15:11.269 align:start position:0%
and the max path sum without a split so
i<00:15:09.920><c> hope</c><00:15:10.160><c> that</c><00:15:10.320><c> this</c><00:15:10.480><c> was</c><00:15:10.720><c> helpful</c>

00:15:11.269 --> 00:15:11.279 align:start position:0%
i hope that this was helpful
 

00:15:11.279 --> 00:15:13.430 align:start position:0%
i hope that this was helpful
if<00:15:11.440><c> it</c><00:15:11.600><c> was</c><00:15:12.079><c> please</c><00:15:12.399><c> like</c><00:15:12.639><c> and</c><00:15:12.800><c> subscribe</c><00:15:13.360><c> it</c>

00:15:13.430 --> 00:15:13.440 align:start position:0%
if it was please like and subscribe it
 

00:15:13.440 --> 00:15:15.030 align:start position:0%
if it was please like and subscribe it
supports<00:15:13.920><c> the</c><00:15:14.000><c> channel</c><00:15:14.399><c> a</c><00:15:14.639><c> lot</c>

00:15:15.030 --> 00:15:15.040 align:start position:0%
supports the channel a lot
 

00:15:15.040 --> 00:15:17.110 align:start position:0%
supports the channel a lot
and<00:15:15.199><c> i'll</c><00:15:15.360><c> hopefully</c><00:15:16.000><c> see</c><00:15:16.160><c> you</c><00:15:16.320><c> pretty</c><00:15:16.639><c> soon</c>

00:15:17.110 --> 00:15:17.120 align:start position:0%
and i'll hopefully see you pretty soon
 

00:15:17.120 --> 00:15:20.079 align:start position:0%
and i'll hopefully see you pretty soon
thanks<00:15:17.360><c> for</c><00:15:17.519><c> watching</c>

