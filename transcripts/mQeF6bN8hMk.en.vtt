WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.510 align:start position:0%
 
hey<00:00:00.160><c> everyone</c><00:00:00.560><c> welcome</c><00:00:00.960><c> back</c><00:00:01.199><c> and</c><00:00:01.280><c> let's</c>

00:00:01.510 --> 00:00:01.520 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.520 --> 00:00:03.510 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.760><c> some</c><00:00:01.920><c> more</c><00:00:02.159><c> neat</c><00:00:02.399><c> code</c><00:00:02.639><c> today</c><00:00:02.960><c> so</c><00:00:03.120><c> today</c>

00:00:03.510 --> 00:00:03.520 align:start position:0%
write some more neat code today so today
 

00:00:03.520 --> 00:00:04.870 align:start position:0%
write some more neat code today so today
let's<00:00:03.760><c> solve</c><00:00:04.080><c> the</c><00:00:04.319><c> problem</c>

00:00:04.870 --> 00:00:04.880 align:start position:0%
let's solve the problem
 

00:00:04.880 --> 00:00:07.749 align:start position:0%
let's solve the problem
clone<00:00:05.520><c> graph</c><00:00:06.240><c> so</c><00:00:06.480><c> we're</c><00:00:06.640><c> given</c><00:00:06.960><c> a</c><00:00:07.120><c> reference</c>

00:00:07.749 --> 00:00:07.759 align:start position:0%
clone graph so we're given a reference
 

00:00:07.759 --> 00:00:08.230 align:start position:0%
clone graph so we're given a reference
to<00:00:08.000><c> a</c>

00:00:08.230 --> 00:00:08.240 align:start position:0%
to a
 

00:00:08.240 --> 00:00:11.190 align:start position:0%
to a
node<00:00:08.639><c> that</c><00:00:08.960><c> is</c><00:00:09.200><c> in</c><00:00:09.440><c> a</c><00:00:09.599><c> connected</c><00:00:10.559><c> undirected</c>

00:00:11.190 --> 00:00:11.200 align:start position:0%
node that is in a connected undirected
 

00:00:11.200 --> 00:00:12.870 align:start position:0%
node that is in a connected undirected
graph<00:00:11.519><c> so</c><00:00:11.679><c> it's</c><00:00:11.759><c> convenient</c><00:00:12.240><c> for</c><00:00:12.400><c> us</c><00:00:12.559><c> that</c><00:00:12.719><c> the</c>

00:00:12.870 --> 00:00:12.880 align:start position:0%
graph so it's convenient for us that the
 

00:00:12.880 --> 00:00:13.350 align:start position:0%
graph so it's convenient for us that the
graph

00:00:13.350 --> 00:00:13.360 align:start position:0%
graph
 

00:00:13.360 --> 00:00:15.910 align:start position:0%
graph
is<00:00:13.519><c> completely</c><00:00:14.160><c> connected</c><00:00:15.200><c> and</c><00:00:15.440><c> all</c><00:00:15.599><c> we</c><00:00:15.759><c> want</c>

00:00:15.910 --> 00:00:15.920 align:start position:0%
is completely connected and all we want
 

00:00:15.920 --> 00:00:17.189 align:start position:0%
is completely connected and all we want
to<00:00:16.080><c> do</c><00:00:16.320><c> is</c><00:00:16.480><c> return</c><00:00:16.880><c> a</c>

00:00:17.189 --> 00:00:17.199 align:start position:0%
to do is return a
 

00:00:17.199 --> 00:00:20.550 align:start position:0%
to do is return a
deep<00:00:17.840><c> copy</c><00:00:18.400><c> of</c><00:00:18.640><c> that</c><00:00:18.960><c> graph</c><00:00:19.439><c> in</c><00:00:19.600><c> other</c><00:00:19.920><c> words</c><00:00:20.320><c> a</c>

00:00:20.550 --> 00:00:20.560 align:start position:0%
deep copy of that graph in other words a
 

00:00:20.560 --> 00:00:23.830 align:start position:0%
deep copy of that graph in other words a
clone<00:00:21.279><c> of</c><00:00:21.439><c> that</c><00:00:21.680><c> graph</c><00:00:22.560><c> and</c><00:00:22.880><c> for</c><00:00:23.119><c> every</c><00:00:23.359><c> single</c>

00:00:23.830 --> 00:00:23.840 align:start position:0%
clone of that graph and for every single
 

00:00:23.840 --> 00:00:24.310 align:start position:0%
clone of that graph and for every single
node

00:00:24.310 --> 00:00:24.320 align:start position:0%
node
 

00:00:24.320 --> 00:00:27.830 align:start position:0%
node
we<00:00:24.640><c> have</c><00:00:25.119><c> two</c><00:00:25.439><c> things</c><00:00:25.760><c> we</c><00:00:25.920><c> are</c><00:00:26.000><c> given</c><00:00:26.480><c> a</c><00:00:26.880><c> value</c>

00:00:27.830 --> 00:00:27.840 align:start position:0%
we have two things we are given a value
 

00:00:27.840 --> 00:00:30.390 align:start position:0%
we have two things we are given a value
and<00:00:28.080><c> we're</c><00:00:28.240><c> also</c><00:00:28.720><c> given</c><00:00:29.199><c> a</c><00:00:29.439><c> list</c><00:00:29.920><c> of</c><00:00:30.080><c> its</c>

00:00:30.390 --> 00:00:30.400 align:start position:0%
and we're also given a list of its
 

00:00:30.400 --> 00:00:32.310 align:start position:0%
and we're also given a list of its
neighbors<00:00:30.800><c> so</c><00:00:30.960><c> this</c><00:00:31.199><c> is</c><00:00:31.279><c> what's</c><00:00:31.519><c> telling</c><00:00:31.920><c> us</c>

00:00:32.310 --> 00:00:32.320 align:start position:0%
neighbors so this is what's telling us
 

00:00:32.320 --> 00:00:34.069 align:start position:0%
neighbors so this is what's telling us
you<00:00:32.480><c> know</c><00:00:32.640><c> how</c><00:00:32.880><c> the</c><00:00:33.040><c> graph</c><00:00:33.440><c> happens</c><00:00:33.760><c> to</c><00:00:33.920><c> be</c>

00:00:34.069 --> 00:00:34.079 align:start position:0%
you know how the graph happens to be
 

00:00:34.079 --> 00:00:36.389 align:start position:0%
you know how the graph happens to be
connected<00:00:34.880><c> these</c><00:00:35.120><c> are</c><00:00:35.280><c> the</c><00:00:35.520><c> edges</c>

00:00:36.389 --> 00:00:36.399 align:start position:0%
connected these are the edges
 

00:00:36.399 --> 00:00:38.549 align:start position:0%
connected these are the edges
in<00:00:36.719><c> our</c><00:00:36.960><c> graph</c><00:00:37.680><c> now</c><00:00:37.840><c> if</c><00:00:37.920><c> you're</c><00:00:38.079><c> not</c><00:00:38.239><c> super</c>

00:00:38.549 --> 00:00:38.559 align:start position:0%
in our graph now if you're not super
 

00:00:38.559 --> 00:00:40.709 align:start position:0%
in our graph now if you're not super
familiar<00:00:39.120><c> with</c><00:00:39.360><c> what</c><00:00:39.600><c> a</c><00:00:39.760><c> deep</c><00:00:40.000><c> copy</c><00:00:40.399><c> is</c><00:00:40.559><c> so</c>

00:00:40.709 --> 00:00:40.719 align:start position:0%
familiar with what a deep copy is so
 

00:00:40.719 --> 00:00:41.910 align:start position:0%
familiar with what a deep copy is so
let's<00:00:40.960><c> say</c><00:00:41.120><c> that</c><00:00:41.440><c> this</c>

00:00:41.910 --> 00:00:41.920 align:start position:0%
let's say that this
 

00:00:41.920 --> 00:00:44.950 align:start position:0%
let's say that this
is<00:00:42.160><c> our</c><00:00:42.399><c> example</c><00:00:43.040><c> our</c><00:00:43.280><c> input</c><00:00:43.680><c> graph</c><00:00:44.559><c> we're</c><00:00:44.719><c> not</c>

00:00:44.950 --> 00:00:44.960 align:start position:0%
is our example our input graph we're not
 

00:00:44.960 --> 00:00:46.790 align:start position:0%
is our example our input graph we're not
just<00:00:45.200><c> going</c><00:00:45.280><c> to</c><00:00:45.440><c> create</c><00:00:45.760><c> a</c><00:00:46.000><c> shallow</c><00:00:46.399><c> copy</c>

00:00:46.790 --> 00:00:46.800 align:start position:0%
just going to create a shallow copy
 

00:00:46.800 --> 00:00:47.910 align:start position:0%
just going to create a shallow copy
meaning<00:00:47.120><c> like</c><00:00:47.440><c> this</c>

00:00:47.910 --> 00:00:47.920 align:start position:0%
meaning like this
 

00:00:47.920 --> 00:00:50.229 align:start position:0%
meaning like this
is<00:00:48.160><c> the</c><00:00:48.320><c> exact</c><00:00:48.719><c> same</c><00:00:49.039><c> graph</c><00:00:49.360><c> like</c><00:00:49.600><c> the</c><00:00:49.760><c> color</c>

00:00:50.229 --> 00:00:50.239 align:start position:0%
is the exact same graph like the color
 

00:00:50.239 --> 00:00:51.029 align:start position:0%
is the exact same graph like the color
is<00:00:50.480><c> yellow</c>

00:00:51.029 --> 00:00:51.039 align:start position:0%
is yellow
 

00:00:51.039 --> 00:00:52.470 align:start position:0%
is yellow
for<00:00:51.199><c> both</c><00:00:51.440><c> of</c><00:00:51.520><c> these</c><00:00:51.680><c> meaning</c><00:00:52.000><c> like</c><00:00:52.239><c> it's</c><00:00:52.399><c> the</c>

00:00:52.470 --> 00:00:52.480 align:start position:0%
for both of these meaning like it's the
 

00:00:52.480 --> 00:00:53.830 align:start position:0%
for both of these meaning like it's the
exact<00:00:52.800><c> same</c><00:00:53.039><c> graph</c><00:00:53.280><c> we</c><00:00:53.360><c> didn't</c><00:00:53.520><c> actually</c>

00:00:53.830 --> 00:00:53.840 align:start position:0%
exact same graph we didn't actually
 

00:00:53.840 --> 00:00:55.350 align:start position:0%
exact same graph we didn't actually
create<00:00:54.239><c> a</c><00:00:54.480><c> clone</c><00:00:54.879><c> of</c><00:00:55.120><c> it</c>

00:00:55.350 --> 00:00:55.360 align:start position:0%
create a clone of it
 

00:00:55.360 --> 00:00:57.510 align:start position:0%
create a clone of it
so<00:00:55.600><c> this</c><00:00:55.760><c> is</c><00:00:55.920><c> not</c><00:00:56.079><c> what</c><00:00:56.239><c> we're</c><00:00:56.480><c> looking</c><00:00:56.800><c> for</c>

00:00:57.510 --> 00:00:57.520 align:start position:0%
so this is not what we're looking for
 

00:00:57.520 --> 00:00:59.590 align:start position:0%
so this is not what we're looking for
this<00:00:57.760><c> is</c><00:00:58.079><c> also</c><00:00:58.480><c> not</c><00:00:58.719><c> what</c><00:00:58.879><c> we're</c><00:00:59.120><c> looking</c><00:00:59.359><c> for</c>

00:00:59.590 --> 00:00:59.600 align:start position:0%
this is also not what we're looking for
 

00:00:59.600 --> 00:01:00.470 align:start position:0%
this is also not what we're looking for
so<00:00:59.840><c> this</c><00:01:00.079><c> is</c><00:01:00.160><c> a</c>

00:01:00.470 --> 00:01:00.480 align:start position:0%
so this is a
 

00:01:00.480 --> 00:01:02.790 align:start position:0%
so this is a
new<00:01:00.960><c> graph</c><00:01:01.520><c> because</c><00:01:01.760><c> the</c><00:01:01.920><c> color</c><00:01:02.239><c> is</c><00:01:02.399><c> slightly</c>

00:01:02.790 --> 00:01:02.800 align:start position:0%
new graph because the color is slightly
 

00:01:02.800 --> 00:01:03.670 align:start position:0%
new graph because the color is slightly
different

00:01:03.670 --> 00:01:03.680 align:start position:0%
different
 

00:01:03.680 --> 00:01:05.990 align:start position:0%
different
but<00:01:03.920><c> you</c><00:01:04.159><c> see</c><00:01:04.479><c> that</c><00:01:04.879><c> the</c><00:01:05.119><c> values</c><00:01:05.680><c> aren't</c>

00:01:05.990 --> 00:01:06.000 align:start position:0%
but you see that the values aren't
 

00:01:06.000 --> 00:01:07.670 align:start position:0%
but you see that the values aren't
exactly<00:01:06.400><c> how</c><00:01:06.560><c> they're</c><00:01:06.720><c> supposed</c><00:01:07.040><c> to</c><00:01:07.280><c> be</c><00:01:07.520><c> we</c>

00:01:07.670 --> 00:01:07.680 align:start position:0%
exactly how they're supposed to be we
 

00:01:07.680 --> 00:01:08.149 align:start position:0%
exactly how they're supposed to be we
have<00:01:07.840><c> a</c>

00:01:08.149 --> 00:01:08.159 align:start position:0%
have a
 

00:01:08.159 --> 00:01:10.630 align:start position:0%
have a
3<00:01:08.640><c> here</c><00:01:09.200><c> whereas</c><00:01:09.520><c> we</c><00:01:09.680><c> have</c><00:01:09.840><c> a</c><00:01:10.000><c> 2</c><00:01:10.400><c> in</c><00:01:10.560><c> the</c>

00:01:10.630 --> 00:01:10.640 align:start position:0%
3 here whereas we have a 2 in the
 

00:01:10.640 --> 00:01:12.469 align:start position:0%
3 here whereas we have a 2 in the
original<00:01:11.119><c> graph</c><00:01:11.520><c> right</c><00:01:11.680><c> so</c><00:01:11.920><c> basically</c><00:01:12.320><c> we</c>

00:01:12.469 --> 00:01:12.479 align:start position:0%
original graph right so basically we
 

00:01:12.479 --> 00:01:14.070 align:start position:0%
original graph right so basically we
have<00:01:12.640><c> these</c><00:01:12.960><c> two's</c>

00:01:14.070 --> 00:01:14.080 align:start position:0%
have these two's
 

00:01:14.080 --> 00:01:15.990 align:start position:0%
have these two's
values<00:01:14.560><c> mixed</c><00:01:14.960><c> up</c><00:01:15.119><c> so</c><00:01:15.280><c> that's</c><00:01:15.600><c> not</c><00:01:15.759><c> what</c><00:01:15.920><c> we</c>

00:01:15.990 --> 00:01:16.000 align:start position:0%
values mixed up so that's not what we
 

00:01:16.000 --> 00:01:18.789 align:start position:0%
values mixed up so that's not what we
want<00:01:16.240><c> either</c><00:01:16.479><c> we</c><00:01:16.640><c> want</c><00:01:16.880><c> an</c><00:01:17.040><c> exact</c><00:01:17.759><c> clone</c><00:01:18.320><c> so</c>

00:01:18.789 --> 00:01:18.799 align:start position:0%
want either we want an exact clone so
 

00:01:18.799 --> 00:01:21.670 align:start position:0%
want either we want an exact clone so
it<00:01:18.880><c> has</c><00:01:19.119><c> the</c><00:01:19.280><c> exact</c><00:01:19.840><c> same</c><00:01:20.400><c> structure</c><00:01:21.439><c> and</c>

00:01:21.670 --> 00:01:21.680 align:start position:0%
it has the exact same structure and
 

00:01:21.680 --> 00:01:23.749 align:start position:0%
it has the exact same structure and
values<00:01:22.320><c> right</c><00:01:22.560><c> the</c><00:01:22.720><c> values</c><00:01:23.119><c> and</c><00:01:23.280><c> structure</c><00:01:23.680><c> is</c>

00:01:23.749 --> 00:01:23.759 align:start position:0%
values right the values and structure is
 

00:01:23.759 --> 00:01:25.270 align:start position:0%
values right the values and structure is
the<00:01:23.920><c> exact</c><00:01:24.240><c> same</c>

00:01:25.270 --> 00:01:25.280 align:start position:0%
the exact same
 

00:01:25.280 --> 00:01:27.990 align:start position:0%
the exact same
and<00:01:25.520><c> this</c><00:01:25.840><c> happens</c><00:01:26.159><c> to</c><00:01:26.320><c> be</c><00:01:26.560><c> a</c><00:01:26.960><c> new</c><00:01:27.439><c> graph</c><00:01:27.840><c> this</c>

00:01:27.990 --> 00:01:28.000 align:start position:0%
and this happens to be a new graph this
 

00:01:28.000 --> 00:01:29.990 align:start position:0%
and this happens to be a new graph this
is<00:01:28.080><c> not</c><00:01:28.320><c> the</c><00:01:28.479><c> exact</c><00:01:28.799><c> same</c><00:01:29.200><c> graph</c><00:01:29.520><c> as</c><00:01:29.600><c> this</c><00:01:29.759><c> one</c>

00:01:29.990 --> 00:01:30.000 align:start position:0%
is not the exact same graph as this one
 

00:01:30.000 --> 00:01:31.670 align:start position:0%
is not the exact same graph as this one
because<00:01:30.240><c> this</c><00:01:30.400><c> one</c><00:01:30.640><c> is</c><00:01:30.880><c> blue</c>

00:01:31.670 --> 00:01:31.680 align:start position:0%
because this one is blue
 

00:01:31.680 --> 00:01:34.230 align:start position:0%
because this one is blue
whereas<00:01:32.079><c> this</c><00:01:32.240><c> one</c><00:01:32.479><c> is</c><00:01:32.640><c> yellow</c><00:01:33.439><c> so</c><00:01:33.759><c> how</c><00:01:34.000><c> are</c><00:01:34.079><c> we</c>

00:01:34.230 --> 00:01:34.240 align:start position:0%
whereas this one is yellow so how are we
 

00:01:34.240 --> 00:01:35.990 align:start position:0%
whereas this one is yellow so how are we
going<00:01:34.320><c> to</c><00:01:34.479><c> solve</c><00:01:34.799><c> this</c><00:01:35.040><c> problem</c><00:01:35.360><c> well</c><00:01:35.600><c> you</c><00:01:35.759><c> can</c>

00:01:35.990 --> 00:01:36.000 align:start position:0%
going to solve this problem well you can
 

00:01:36.000 --> 00:01:36.310 align:start position:0%
going to solve this problem well you can
see

00:01:36.310 --> 00:01:36.320 align:start position:0%
see
 

00:01:36.320 --> 00:01:38.069 align:start position:0%
see
i'm<00:01:36.479><c> going</c><00:01:36.560><c> to</c><00:01:36.640><c> use</c><00:01:36.880><c> a</c><00:01:36.960><c> hash</c><00:01:37.200><c> map</c><00:01:37.600><c> like</c><00:01:37.840><c> pretty</c>

00:01:38.069 --> 00:01:38.079 align:start position:0%
i'm going to use a hash map like pretty
 

00:01:38.079 --> 00:01:39.910 align:start position:0%
i'm going to use a hash map like pretty
much<00:01:38.400><c> every</c><00:01:38.720><c> graph</c><00:01:39.119><c> problem</c><00:01:39.520><c> and</c><00:01:39.680><c> we're</c><00:01:39.840><c> going</c>

00:01:39.910 --> 00:01:39.920 align:start position:0%
much every graph problem and we're going
 

00:01:39.920 --> 00:01:40.310 align:start position:0%
much every graph problem and we're going
to<00:01:40.000><c> use</c>

00:01:40.310 --> 00:01:40.320 align:start position:0%
to use
 

00:01:40.320 --> 00:01:42.469 align:start position:0%
to use
depth<00:01:40.560><c> for</c><00:01:40.720><c> a</c><00:01:40.880><c> search</c><00:01:41.520><c> where</c><00:01:41.920><c> you</c><00:01:42.000><c> can</c><00:01:42.159><c> also</c>

00:01:42.469 --> 00:01:42.479 align:start position:0%
depth for a search where you can also
 

00:01:42.479 --> 00:01:44.230 align:start position:0%
depth for a search where you can also
use<00:01:42.640><c> breadth</c><00:01:42.960><c> first</c><00:01:43.200><c> search</c><00:01:43.520><c> if</c><00:01:43.680><c> you</c><00:01:43.840><c> want</c><00:01:44.079><c> but</c>

00:01:44.230 --> 00:01:44.240 align:start position:0%
use breadth first search if you want but
 

00:01:44.240 --> 00:01:46.550 align:start position:0%
use breadth first search if you want but
let<00:01:44.399><c> me</c><00:01:44.560><c> show</c><00:01:44.720><c> you</c><00:01:44.880><c> the</c><00:01:45.119><c> general</c><00:01:45.600><c> algorithm</c>

00:01:46.550 --> 00:01:46.560 align:start position:0%
let me show you the general algorithm
 

00:01:46.560 --> 00:01:48.389 align:start position:0%
let me show you the general algorithm
so<00:01:46.720><c> you</c><00:01:46.799><c> can</c><00:01:46.960><c> see</c><00:01:47.200><c> these</c><00:01:47.600><c> edges</c><00:01:48.079><c> are</c>

00:01:48.389 --> 00:01:48.399 align:start position:0%
so you can see these edges are
 

00:01:48.399 --> 00:01:50.069 align:start position:0%
so you can see these edges are
undirected<00:01:49.119><c> meaning</c><00:01:49.520><c> you</c><00:01:49.680><c> know</c><00:01:49.759><c> if</c>

00:01:50.069 --> 00:01:50.079 align:start position:0%
undirected meaning you know if
 

00:01:50.079 --> 00:01:53.350 align:start position:0%
undirected meaning you know if
one<00:01:50.799><c> has</c><00:01:51.040><c> a</c><00:01:51.200><c> neighbor</c><00:01:51.680><c> two</c><00:01:52.240><c> well</c><00:01:52.560><c> two</c><00:01:52.960><c> is</c><00:01:53.119><c> also</c>

00:01:53.350 --> 00:01:53.360 align:start position:0%
one has a neighbor two well two is also
 

00:01:53.360 --> 00:01:55.030 align:start position:0%
one has a neighbor two well two is also
going<00:01:53.520><c> to</c><00:01:53.600><c> have</c><00:01:53.759><c> a</c><00:01:53.840><c> neighbor</c><00:01:54.320><c> 1</c><00:01:54.640><c> in</c><00:01:54.799><c> its</c>

00:01:55.030 --> 00:01:55.040 align:start position:0%
going to have a neighbor 1 in its
 

00:01:55.040 --> 00:01:56.230 align:start position:0%
going to have a neighbor 1 in its
neighbor<00:01:55.520><c> list</c>

00:01:56.230 --> 00:01:56.240 align:start position:0%
neighbor list
 

00:01:56.240 --> 00:01:58.870 align:start position:0%
neighbor list
so<00:01:56.399><c> let's</c><00:01:56.560><c> say</c><00:01:56.799><c> that</c><00:01:57.200><c> 1</c><00:01:57.680><c> is</c><00:01:57.840><c> our</c><00:01:58.079><c> entry</c><00:01:58.560><c> point</c>

00:01:58.870 --> 00:01:58.880 align:start position:0%
so let's say that 1 is our entry point
 

00:01:58.880 --> 00:02:00.550 align:start position:0%
so let's say that 1 is our entry point
in<00:01:58.960><c> the</c><00:01:59.119><c> graph</c><00:01:59.520><c> what</c><00:01:59.680><c> are</c><00:01:59.759><c> we</c><00:01:59.920><c> going</c><00:02:00.000><c> to</c><00:02:00.159><c> do</c><00:02:00.399><c> you</c>

00:02:00.550 --> 00:02:00.560 align:start position:0%
in the graph what are we going to do you
 

00:02:00.560 --> 00:02:02.630 align:start position:0%
in the graph what are we going to do you
can<00:02:00.640><c> see</c><00:02:00.880><c> initially</c><00:02:01.439><c> our</c><00:02:01.600><c> hash</c><00:02:01.840><c> map</c><00:02:02.159><c> is</c><00:02:02.320><c> empty</c>

00:02:02.630 --> 00:02:02.640 align:start position:0%
can see initially our hash map is empty
 

00:02:02.640 --> 00:02:05.030 align:start position:0%
can see initially our hash map is empty
what<00:02:02.799><c> we're</c><00:02:02.960><c> going</c><00:02:03.040><c> to</c><00:02:03.280><c> try</c><00:02:03.600><c> to</c><00:02:03.759><c> do</c><00:02:04.000><c> is</c><00:02:04.320><c> map</c><00:02:04.719><c> the</c>

00:02:05.030 --> 00:02:05.040 align:start position:0%
what we're going to try to do is map the
 

00:02:05.040 --> 00:02:05.990 align:start position:0%
what we're going to try to do is map the
old<00:02:05.439><c> nodes</c>

00:02:05.990 --> 00:02:06.000 align:start position:0%
old nodes
 

00:02:06.000 --> 00:02:09.109 align:start position:0%
old nodes
to<00:02:06.159><c> the</c><00:02:06.399><c> new</c><00:02:06.640><c> nodes</c><00:02:07.040><c> or</c><00:02:07.200><c> the</c><00:02:07.439><c> copy</c><00:02:08.000><c> nodes</c><00:02:08.640><c> so</c><00:02:08.879><c> we</c>

00:02:09.109 --> 00:02:09.119 align:start position:0%
to the new nodes or the copy nodes so we
 

00:02:09.119 --> 00:02:10.869 align:start position:0%
to the new nodes or the copy nodes so we
start<00:02:09.440><c> at</c><00:02:09.599><c> one</c><00:02:09.840><c> so</c><00:02:10.000><c> what's</c><00:02:10.239><c> the</c><00:02:10.399><c> first</c><00:02:10.640><c> thing</c>

00:02:10.869 --> 00:02:10.879 align:start position:0%
start at one so what's the first thing
 

00:02:10.879 --> 00:02:12.470 align:start position:0%
start at one so what's the first thing
we<00:02:11.039><c> should</c><00:02:11.200><c> do</c><00:02:11.360><c> well</c><00:02:11.599><c> obviously</c><00:02:12.080><c> we</c><00:02:12.239><c> should</c>

00:02:12.470 --> 00:02:12.480 align:start position:0%
we should do well obviously we should
 

00:02:12.480 --> 00:02:13.990 align:start position:0%
we should do well obviously we should
create<00:02:12.800><c> a</c><00:02:12.959><c> copy</c><00:02:13.360><c> of</c><00:02:13.520><c> this</c>

00:02:13.990 --> 00:02:14.000 align:start position:0%
create a copy of this
 

00:02:14.000 --> 00:02:15.910 align:start position:0%
create a copy of this
node<00:02:14.400><c> that's</c><00:02:14.640><c> what</c><00:02:14.800><c> i'm</c><00:02:14.879><c> gonna</c><00:02:15.040><c> do</c><00:02:15.360><c> so</c><00:02:15.520><c> create</c>

00:02:15.910 --> 00:02:15.920 align:start position:0%
node that's what i'm gonna do so create
 

00:02:15.920 --> 00:02:17.510 align:start position:0%
node that's what i'm gonna do so create
a<00:02:16.080><c> copy</c><00:02:16.560><c> of</c><00:02:16.879><c> one</c>

00:02:17.510 --> 00:02:17.520 align:start position:0%
a copy of one
 

00:02:17.520 --> 00:02:20.470 align:start position:0%
a copy of one
now<00:02:17.680><c> this</c><00:02:18.000><c> copy</c><00:02:18.480><c> of</c><00:02:18.720><c> one</c><00:02:19.040><c> is</c><00:02:19.200><c> not</c><00:02:19.440><c> complete</c><00:02:20.160><c> yet</c>

00:02:20.470 --> 00:02:20.480 align:start position:0%
now this copy of one is not complete yet
 

00:02:20.480 --> 00:02:21.830 align:start position:0%
now this copy of one is not complete yet
right<00:02:20.800><c> because</c><00:02:21.120><c> take</c><00:02:21.280><c> a</c><00:02:21.360><c> look</c><00:02:21.520><c> at</c><00:02:21.680><c> the</c>

00:02:21.830 --> 00:02:21.840 align:start position:0%
right because take a look at the
 

00:02:21.840 --> 00:02:24.070 align:start position:0%
right because take a look at the
original<00:02:22.319><c> one</c><00:02:22.560><c> it</c><00:02:22.720><c> has</c><00:02:22.959><c> two</c><00:02:23.280><c> neighbors</c>

00:02:24.070 --> 00:02:24.080 align:start position:0%
original one it has two neighbors
 

00:02:24.080 --> 00:02:27.830 align:start position:0%
original one it has two neighbors
three<00:02:24.959><c> and</c><00:02:25.520><c> two</c><00:02:26.160><c> so</c><00:02:26.319><c> what</c><00:02:26.480><c> can</c><00:02:26.720><c> i</c><00:02:26.959><c> do</c>

00:02:27.830 --> 00:02:27.840 align:start position:0%
three and two so what can i do
 

00:02:27.840 --> 00:02:29.910 align:start position:0%
three and two so what can i do
we<00:02:28.000><c> know</c><00:02:28.160><c> we're</c><00:02:28.319><c> gonna</c><00:02:28.480><c> have</c><00:02:28.720><c> two</c><00:02:28.959><c> neighbors</c>

00:02:29.910 --> 00:02:29.920 align:start position:0%
we know we're gonna have two neighbors
 

00:02:29.920 --> 00:02:31.430 align:start position:0%
we know we're gonna have two neighbors
for<00:02:30.400><c> node</c><00:02:30.800><c> one</c><00:02:31.120><c> right</c>

00:02:31.430 --> 00:02:31.440 align:start position:0%
for node one right
 

00:02:31.440 --> 00:02:34.790 align:start position:0%
for node one right
can<00:02:31.599><c> i</c><00:02:31.840><c> just</c><00:02:32.319><c> take</c><00:02:32.800><c> these</c><00:02:33.280><c> two</c><00:02:33.760><c> original</c><00:02:34.400><c> nodes</c>

00:02:34.790 --> 00:02:34.800 align:start position:0%
can i just take these two original nodes
 

00:02:34.800 --> 00:02:36.150 align:start position:0%
can i just take these two original nodes
and<00:02:34.879><c> then</c><00:02:35.120><c> put</c><00:02:35.360><c> them</c><00:02:35.519><c> over</c><00:02:35.680><c> here</c>

00:02:36.150 --> 00:02:36.160 align:start position:0%
and then put them over here
 

00:02:36.160 --> 00:02:40.150 align:start position:0%
and then put them over here
three<00:02:36.720><c> and</c><00:02:36.959><c> two</c><00:02:38.239><c> no</c><00:02:38.640><c> i</c><00:02:38.879><c> can't</c><00:02:39.280><c> do</c><00:02:39.440><c> that</c><00:02:39.680><c> because</c>

00:02:40.150 --> 00:02:40.160 align:start position:0%
three and two no i can't do that because
 

00:02:40.160 --> 00:02:41.830 align:start position:0%
three and two no i can't do that because
for<00:02:40.319><c> these</c><00:02:40.640><c> nodes</c><00:02:41.040><c> three</c><00:02:41.360><c> and</c><00:02:41.519><c> two</c><00:02:41.680><c> we</c>

00:02:41.830 --> 00:02:41.840 align:start position:0%
for these nodes three and two we
 

00:02:41.840 --> 00:02:43.910 align:start position:0%
for these nodes three and two we
actually<00:02:42.160><c> have</c><00:02:42.239><c> to</c><00:02:42.480><c> create</c><00:02:43.040><c> copies</c><00:02:43.599><c> of</c>

00:02:43.910 --> 00:02:43.920 align:start position:0%
actually have to create copies of
 

00:02:43.920 --> 00:02:45.750 align:start position:0%
actually have to create copies of
them<00:02:44.239><c> as</c><00:02:44.480><c> well</c><00:02:44.720><c> so</c><00:02:44.879><c> you</c><00:02:44.959><c> can</c><00:02:45.120><c> see</c><00:02:45.280><c> that</c><00:02:45.440><c> this</c><00:02:45.680><c> is</c>

00:02:45.750 --> 00:02:45.760 align:start position:0%
them as well so you can see that this is
 

00:02:45.760 --> 00:02:47.270 align:start position:0%
them as well so you can see that this is
gonna<00:02:46.000><c> be</c><00:02:46.160><c> recursive</c>

00:02:47.270 --> 00:02:47.280 align:start position:0%
gonna be recursive
 

00:02:47.280 --> 00:02:49.030 align:start position:0%
gonna be recursive
so<00:02:47.599><c> first</c><00:02:47.840><c> thing</c><00:02:48.080><c> i'm</c><00:02:48.160><c> gonna</c><00:02:48.319><c> do</c><00:02:48.560><c> is</c><00:02:48.720><c> i'm</c><00:02:48.879><c> gonna</c>

00:02:49.030 --> 00:02:49.040 align:start position:0%
so first thing i'm gonna do is i'm gonna
 

00:02:49.040 --> 00:02:50.710 align:start position:0%
so first thing i'm gonna do is i'm gonna
go<00:02:49.200><c> to</c><00:02:49.360><c> its</c><00:02:49.599><c> first</c><00:02:49.920><c> neighbor</c><00:02:50.319><c> which</c><00:02:50.560><c> let's</c>

00:02:50.710 --> 00:02:50.720 align:start position:0%
go to its first neighbor which let's
 

00:02:50.720 --> 00:02:52.390 align:start position:0%
go to its first neighbor which let's
just<00:02:50.879><c> say</c><00:02:51.120><c> it</c><00:02:51.200><c> happens</c><00:02:51.519><c> to</c><00:02:51.599><c> be</c><00:02:51.840><c> two</c><00:02:52.080><c> in</c><00:02:52.160><c> this</c>

00:02:52.390 --> 00:02:52.400 align:start position:0%
just say it happens to be two in this
 

00:02:52.400 --> 00:02:53.190 align:start position:0%
just say it happens to be two in this
case<00:02:52.720><c> right</c>

00:02:53.190 --> 00:02:53.200 align:start position:0%
case right
 

00:02:53.200 --> 00:02:55.190 align:start position:0%
case right
so<00:02:53.440><c> i'm</c><00:02:53.680><c> gonna</c><00:02:54.080><c> now</c><00:02:54.239><c> i'm</c><00:02:54.400><c> gonna</c><00:02:54.800><c> i'm</c><00:02:54.959><c> gonna</c>

00:02:55.190 --> 00:02:55.200 align:start position:0%
so i'm gonna now i'm gonna i'm gonna
 

00:02:55.200 --> 00:02:57.750 align:start position:0%
so i'm gonna now i'm gonna i'm gonna
start<00:02:55.519><c> cloning</c><00:02:56.080><c> starting</c><00:02:56.560><c> at</c><00:02:56.800><c> two</c><00:02:57.120><c> so</c>

00:02:57.750 --> 00:02:57.760 align:start position:0%
start cloning starting at two so
 

00:02:57.760 --> 00:02:59.750 align:start position:0%
start cloning starting at two so
we're<00:02:58.000><c> at</c><00:02:58.159><c> two</c><00:02:58.400><c> we're</c><00:02:58.560><c> gonna</c><00:02:58.800><c> create</c><00:02:59.120><c> a</c><00:02:59.280><c> clone</c>

00:02:59.750 --> 00:02:59.760 align:start position:0%
we're at two we're gonna create a clone
 

00:02:59.760 --> 00:03:02.229 align:start position:0%
we're at two we're gonna create a clone
of<00:03:00.000><c> two</c><00:03:00.560><c> oh</c><00:03:00.879><c> and</c><00:03:00.959><c> by</c><00:03:01.120><c> the</c><00:03:01.280><c> way</c><00:03:01.440><c> before</c><00:03:01.760><c> i</c><00:03:01.840><c> forget</c>

00:03:02.229 --> 00:03:02.239 align:start position:0%
of two oh and by the way before i forget
 

00:03:02.239 --> 00:03:04.390 align:start position:0%
of two oh and by the way before i forget
before<00:03:02.560><c> we</c><00:03:02.720><c> make</c><00:03:02.879><c> a</c><00:03:02.959><c> clone</c><00:03:03.280><c> of</c><00:03:03.440><c> two</c><00:03:03.920><c> we</c><00:03:04.080><c> know</c><00:03:04.239><c> we</c>

00:03:04.390 --> 00:03:04.400 align:start position:0%
before we make a clone of two we know we
 

00:03:04.400 --> 00:03:06.149 align:start position:0%
before we make a clone of two we know we
just<00:03:04.560><c> created</c><00:03:04.959><c> a</c><00:03:05.040><c> clone</c><00:03:05.360><c> for</c><00:03:05.599><c> one</c><00:03:05.760><c> so</c><00:03:05.920><c> what</c><00:03:06.080><c> are</c>

00:03:06.149 --> 00:03:06.159 align:start position:0%
just created a clone for one so what are
 

00:03:06.159 --> 00:03:07.110 align:start position:0%
just created a clone for one so what are
we<00:03:06.319><c> gonna</c><00:03:06.560><c> do</c>

00:03:07.110 --> 00:03:07.120 align:start position:0%
we gonna do
 

00:03:07.120 --> 00:03:10.630 align:start position:0%
we gonna do
we're<00:03:07.360><c> gonna</c><00:03:07.840><c> map</c><00:03:08.319><c> the</c><00:03:08.560><c> original</c><00:03:09.280><c> node</c><00:03:09.840><c> one</c>

00:03:10.630 --> 00:03:10.640 align:start position:0%
we're gonna map the original node one
 

00:03:10.640 --> 00:03:14.470 align:start position:0%
we're gonna map the original node one
to<00:03:11.120><c> its</c><00:03:11.680><c> now</c><00:03:12.159><c> clone</c><00:03:12.959><c> node</c><00:03:13.440><c> once</c><00:03:13.760><c> we're</c><00:03:14.080><c> mapping</c>

00:03:14.470 --> 00:03:14.480 align:start position:0%
to its now clone node once we're mapping
 

00:03:14.480 --> 00:03:15.750 align:start position:0%
to its now clone node once we're mapping
the<00:03:14.800><c> old</c><00:03:15.120><c> node</c>

00:03:15.750 --> 00:03:15.760 align:start position:0%
the old node
 

00:03:15.760 --> 00:03:18.229 align:start position:0%
the old node
to<00:03:16.159><c> the</c><00:03:16.400><c> new</c><00:03:16.720><c> node</c><00:03:17.680><c> and</c><00:03:17.840><c> i'm</c><00:03:17.920><c> going</c><00:03:18.000><c> to</c><00:03:18.080><c> show</c>

00:03:18.229 --> 00:03:18.239 align:start position:0%
to the new node and i'm going to show
 

00:03:18.239 --> 00:03:20.309 align:start position:0%
to the new node and i'm going to show
you<00:03:18.480><c> why</c><00:03:18.720><c> we're</c><00:03:18.959><c> doing</c><00:03:19.120><c> that</c><00:03:19.360><c> in</c><00:03:19.519><c> a</c><00:03:19.599><c> second</c>

00:03:20.309 --> 00:03:20.319 align:start position:0%
you why we're doing that in a second
 

00:03:20.319 --> 00:03:23.509 align:start position:0%
you why we're doing that in a second
so<00:03:20.480><c> now</c><00:03:20.640><c> we're</c><00:03:20.800><c> going</c><00:03:20.959><c> to</c><00:03:21.200><c> go</c><00:03:21.760><c> to</c><00:03:22.000><c> node</c><00:03:22.560><c> 2</c><00:03:23.040><c> right</c>

00:03:23.509 --> 00:03:23.519 align:start position:0%
so now we're going to go to node 2 right
 

00:03:23.519 --> 00:03:25.190 align:start position:0%
so now we're going to go to node 2 right
and<00:03:23.680><c> we're</c><00:03:23.840><c> going</c><00:03:23.920><c> to</c><00:03:24.000><c> create</c><00:03:24.319><c> a</c><00:03:24.480><c> clone</c><00:03:24.959><c> of</c>

00:03:25.190 --> 00:03:25.200 align:start position:0%
and we're going to create a clone of
 

00:03:25.200 --> 00:03:27.670 align:start position:0%
and we're going to create a clone of
node<00:03:25.519><c> 2.</c><00:03:25.760><c> so</c><00:03:25.920><c> let's</c><00:03:26.159><c> create</c><00:03:26.480><c> that</c><00:03:26.720><c> clone</c>

00:03:27.670 --> 00:03:27.680 align:start position:0%
node 2. so let's create that clone
 

00:03:27.680 --> 00:03:30.229 align:start position:0%
node 2. so let's create that clone
node<00:03:28.080><c> 2.</c><00:03:28.879><c> we're</c><00:03:29.040><c> also</c><00:03:29.360><c> going</c><00:03:29.519><c> to</c><00:03:29.680><c> add</c><00:03:29.920><c> it</c><00:03:30.080><c> to</c>

00:03:30.229 --> 00:03:30.239 align:start position:0%
node 2. we're also going to add it to
 

00:03:30.239 --> 00:03:31.990 align:start position:0%
node 2. we're also going to add it to
our<00:03:30.400><c> hashmap</c><00:03:30.959><c> right</c><00:03:31.120><c> we're</c><00:03:31.360><c> mapping</c><00:03:31.680><c> the</c>

00:03:31.990 --> 00:03:32.000 align:start position:0%
our hashmap right we're mapping the
 

00:03:32.000 --> 00:03:35.589 align:start position:0%
our hashmap right we're mapping the
old<00:03:32.319><c> node</c><00:03:32.720><c> 2</c><00:03:33.200><c> to</c><00:03:33.440><c> its</c><00:03:33.680><c> clone</c><00:03:34.560><c> so</c><00:03:34.720><c> the</c><00:03:34.879><c> clone</c>

00:03:35.589 --> 00:03:35.599 align:start position:0%
old node 2 to its clone so the clone
 

00:03:35.599 --> 00:03:38.630 align:start position:0%
old node 2 to its clone so the clone
in<00:03:35.920><c> blue</c><00:03:37.200><c> is</c><00:03:37.519><c> the</c><00:03:37.680><c> new</c><00:03:38.000><c> node</c>

00:03:38.630 --> 00:03:38.640 align:start position:0%
in blue is the new node
 

00:03:38.640 --> 00:03:40.949 align:start position:0%
in blue is the new node
so<00:03:38.799><c> now</c><00:03:38.959><c> we've</c><00:03:39.280><c> cloned</c><00:03:39.760><c> one</c><00:03:40.080><c> and</c><00:03:40.239><c> we've</c><00:03:40.400><c> cloned</c>

00:03:40.949 --> 00:03:40.959 align:start position:0%
so now we've cloned one and we've cloned
 

00:03:40.959 --> 00:03:41.670 align:start position:0%
so now we've cloned one and we've cloned
two

00:03:41.670 --> 00:03:41.680 align:start position:0%
two
 

00:03:41.680 --> 00:03:44.149 align:start position:0%
two
and<00:03:42.239><c> for</c><00:03:42.480><c> two</c><00:03:42.799><c> now</c><00:03:43.120><c> let's</c><00:03:43.360><c> look</c><00:03:43.519><c> at</c><00:03:43.680><c> two's</c>

00:03:44.149 --> 00:03:44.159 align:start position:0%
and for two now let's look at two's
 

00:03:44.159 --> 00:03:45.190 align:start position:0%
and for two now let's look at two's
neighbors<00:03:44.560><c> well</c>

00:03:45.190 --> 00:03:45.200 align:start position:0%
neighbors well
 

00:03:45.200 --> 00:03:47.270 align:start position:0%
neighbors well
look<00:03:45.440><c> you</c><00:03:45.599><c> can</c><00:03:45.760><c> see</c><00:03:46.000><c> that</c><00:03:46.239><c> it</c><00:03:46.400><c> has</c><00:03:46.640><c> a</c><00:03:46.799><c> neighbor</c>

00:03:47.270 --> 00:03:47.280 align:start position:0%
look you can see that it has a neighbor
 

00:03:47.280 --> 00:03:48.390 align:start position:0%
look you can see that it has a neighbor
of<00:03:47.840><c> one</c>

00:03:48.390 --> 00:03:48.400 align:start position:0%
of one
 

00:03:48.400 --> 00:03:51.509 align:start position:0%
of one
right<00:03:48.720><c> and</c><00:03:48.879><c> it</c><00:03:48.959><c> has</c><00:03:49.120><c> a</c><00:03:49.200><c> neighbor</c><00:03:49.760><c> of</c><00:03:50.400><c> four</c><00:03:51.040><c> so</c>

00:03:51.509 --> 00:03:51.519 align:start position:0%
right and it has a neighbor of four so
 

00:03:51.519 --> 00:03:54.309 align:start position:0%
right and it has a neighbor of four so
first<00:03:51.920><c> we're</c><00:03:52.159><c> gonna</c><00:03:52.400><c> end</c><00:03:52.640><c> up</c><00:03:52.879><c> trying</c><00:03:53.280><c> to</c><00:03:53.439><c> do</c><00:03:53.760><c> is</c>

00:03:54.309 --> 00:03:54.319 align:start position:0%
first we're gonna end up trying to do is
 

00:03:54.319 --> 00:03:55.750 align:start position:0%
first we're gonna end up trying to do is
create<00:03:54.720><c> a</c><00:03:54.799><c> clone</c><00:03:55.280><c> for</c>

00:03:55.750 --> 00:03:55.760 align:start position:0%
create a clone for
 

00:03:55.760 --> 00:03:58.309 align:start position:0%
create a clone for
two<00:03:56.000><c> because</c><00:03:56.319><c> we</c><00:03:56.480><c> know</c><00:03:56.799><c> that</c><00:03:57.200><c> we</c><00:03:57.439><c> have</c><00:03:57.599><c> to</c><00:03:58.159><c> in</c>

00:03:58.309 --> 00:03:58.319 align:start position:0%
two because we know that we have to in
 

00:03:58.319 --> 00:04:00.710 align:start position:0%
two because we know that we have to in
the<00:03:58.640><c> list</c><00:03:58.959><c> of</c><00:03:59.120><c> neighbors</c><00:03:59.519><c> for</c><00:03:59.920><c> two</c><00:04:00.239><c> we</c><00:04:00.400><c> have</c><00:04:00.480><c> to</c>

00:04:00.710 --> 00:04:00.720 align:start position:0%
the list of neighbors for two we have to
 

00:04:00.720 --> 00:04:01.990 align:start position:0%
the list of neighbors for two we have to
add<00:04:01.040><c> the</c><00:04:01.280><c> clone</c>

00:04:01.990 --> 00:04:02.000 align:start position:0%
add the clone
 

00:04:02.000 --> 00:04:04.070 align:start position:0%
add the clone
one<00:04:02.239><c> which</c><00:04:02.400><c> we</c><00:04:02.560><c> haven't</c><00:04:03.040><c> done</c><00:04:03.360><c> yet</c><00:04:03.680><c> so</c><00:04:03.920><c> what</c>

00:04:04.070 --> 00:04:04.080 align:start position:0%
one which we haven't done yet so what
 

00:04:04.080 --> 00:04:05.589 align:start position:0%
one which we haven't done yet so what
we're<00:04:04.239><c> gonna</c><00:04:04.400><c> end</c><00:04:04.560><c> up</c><00:04:04.720><c> doing</c><00:04:04.959><c> is</c><00:04:05.040><c> we're</c><00:04:05.200><c> gonna</c>

00:04:05.589 --> 00:04:05.599 align:start position:0%
we're gonna end up doing is we're gonna
 

00:04:05.599 --> 00:04:09.110 align:start position:0%
we're gonna end up doing is we're gonna
try<00:04:06.159><c> to</c><00:04:06.319><c> clone</c><00:04:07.040><c> one</c><00:04:07.680><c> but</c><00:04:07.840><c> we're</c><00:04:08.080><c> gonna</c><00:04:08.400><c> see</c>

00:04:09.110 --> 00:04:09.120 align:start position:0%
try to clone one but we're gonna see
 

00:04:09.120 --> 00:04:12.550 align:start position:0%
try to clone one but we're gonna see
in<00:04:09.439><c> our</c><00:04:09.920><c> hash</c><00:04:10.319><c> map</c><00:04:10.879><c> look</c><00:04:11.120><c> we</c><00:04:11.439><c> already</c><00:04:12.080><c> ended</c><00:04:12.400><c> up</c>

00:04:12.550 --> 00:04:12.560 align:start position:0%
in our hash map look we already ended up
 

00:04:12.560 --> 00:04:13.270 align:start position:0%
in our hash map look we already ended up
cloning

00:04:13.270 --> 00:04:13.280 align:start position:0%
cloning
 

00:04:13.280 --> 00:04:15.990 align:start position:0%
cloning
one<00:04:13.760><c> so</c><00:04:14.720><c> basically</c><00:04:15.200><c> what</c><00:04:15.280><c> i'm</c><00:04:15.439><c> saying</c><00:04:15.680><c> is</c><00:04:15.760><c> now</c>

00:04:15.990 --> 00:04:16.000 align:start position:0%
one so basically what i'm saying is now
 

00:04:16.000 --> 00:04:17.430 align:start position:0%
one so basically what i'm saying is now
we<00:04:16.079><c> can</c><00:04:16.239><c> say</c><00:04:16.479><c> okay</c><00:04:16.720><c> we</c><00:04:16.880><c> can</c><00:04:17.040><c> add</c>

00:04:17.430 --> 00:04:17.440 align:start position:0%
we can say okay we can add
 

00:04:17.440 --> 00:04:20.069 align:start position:0%
we can say okay we can add
this<00:04:17.840><c> edge</c><00:04:18.400><c> that</c><00:04:18.720><c> two</c><00:04:19.120><c> is</c><00:04:19.199><c> connected</c><00:04:19.680><c> to</c><00:04:19.840><c> one</c>

00:04:20.069 --> 00:04:20.079 align:start position:0%
this edge that two is connected to one
 

00:04:20.079 --> 00:04:21.670 align:start position:0%
this edge that two is connected to one
that<00:04:20.320><c> two</c><00:04:20.560><c> has</c><00:04:20.799><c> a</c><00:04:20.959><c> neighbor</c>

00:04:21.670 --> 00:04:21.680 align:start position:0%
that two has a neighbor
 

00:04:21.680 --> 00:04:24.870 align:start position:0%
that two has a neighbor
that<00:04:21.919><c> happens</c><00:04:22.320><c> to</c><00:04:22.479><c> be</c><00:04:22.800><c> one</c><00:04:23.440><c> and</c><00:04:23.919><c> basically</c>

00:04:24.870 --> 00:04:24.880 align:start position:0%
that happens to be one and basically
 

00:04:24.880 --> 00:04:26.230 align:start position:0%
that happens to be one and basically
the<00:04:24.960><c> reason</c><00:04:25.280><c> i'm</c><00:04:25.360><c> doing</c><00:04:25.600><c> that</c><00:04:25.759><c> is</c><00:04:25.840><c> because</c><00:04:26.080><c> we</c>

00:04:26.230 --> 00:04:26.240 align:start position:0%
the reason i'm doing that is because we
 

00:04:26.240 --> 00:04:28.550 align:start position:0%
the reason i'm doing that is because we
know<00:04:26.560><c> this</c><00:04:26.960><c> edge</c><00:04:27.280><c> is</c><00:04:27.440><c> going</c><00:04:27.520><c> to</c><00:04:27.600><c> be</c><00:04:27.840><c> undirected</c>

00:04:28.550 --> 00:04:28.560 align:start position:0%
know this edge is going to be undirected
 

00:04:28.560 --> 00:04:29.510 align:start position:0%
know this edge is going to be undirected
it<00:04:28.720><c> goes</c><00:04:29.120><c> both</c>

00:04:29.510 --> 00:04:29.520 align:start position:0%
it goes both
 

00:04:29.520 --> 00:04:31.350 align:start position:0%
it goes both
ways<00:04:30.080><c> so</c><00:04:30.240><c> that's</c><00:04:30.400><c> what</c><00:04:30.560><c> i'm</c><00:04:30.720><c> trying</c><00:04:30.960><c> to</c><00:04:31.120><c> do</c>

00:04:31.350 --> 00:04:31.360 align:start position:0%
ways so that's what i'm trying to do
 

00:04:31.360 --> 00:04:33.670 align:start position:0%
ways so that's what i'm trying to do
here<00:04:31.840><c> so</c><00:04:32.080><c> now</c><00:04:32.240><c> we</c><00:04:32.479><c> know</c><00:04:32.639><c> that</c><00:04:32.880><c> 2</c><00:04:33.120><c> is</c><00:04:33.199><c> connected</c>

00:04:33.670 --> 00:04:33.680 align:start position:0%
here so now we know that 2 is connected
 

00:04:33.680 --> 00:04:34.390 align:start position:0%
here so now we know that 2 is connected
to<00:04:33.919><c> 1</c>

00:04:34.390 --> 00:04:34.400 align:start position:0%
to 1
 

00:04:34.400 --> 00:04:37.430 align:start position:0%
to 1
we<00:04:34.639><c> also</c><00:04:35.040><c> know</c><00:04:35.280><c> we</c><00:04:35.360><c> have</c><00:04:35.520><c> to</c><00:04:35.680><c> clone</c><00:04:36.400><c> node</c><00:04:36.880><c> 4.</c>

00:04:37.430 --> 00:04:37.440 align:start position:0%
we also know we have to clone node 4.
 

00:04:37.440 --> 00:04:39.189 align:start position:0%
we also know we have to clone node 4.
so<00:04:37.600><c> now</c><00:04:37.759><c> we're</c><00:04:37.919><c> going</c><00:04:38.000><c> to</c><00:04:38.160><c> visit</c><00:04:38.479><c> position</c><00:04:38.960><c> 4.</c>

00:04:39.189 --> 00:04:39.199 align:start position:0%
so now we're going to visit position 4.
 

00:04:39.199 --> 00:04:41.030 align:start position:0%
so now we're going to visit position 4.
let's<00:04:39.440><c> create</c><00:04:39.759><c> a</c><00:04:39.919><c> clone</c><00:04:40.400><c> for</c><00:04:40.639><c> 4</c>

00:04:41.030 --> 00:04:41.040 align:start position:0%
let's create a clone for 4
 

00:04:41.040 --> 00:04:43.830 align:start position:0%
let's create a clone for 4
so<00:04:41.199><c> let's</c><00:04:41.520><c> add</c><00:04:41.680><c> it</c><00:04:41.840><c> to</c><00:04:42.160><c> our</c><00:04:42.320><c> hash</c><00:04:42.639><c> map</c><00:04:42.960><c> as</c><00:04:43.199><c> well</c>

00:04:43.830 --> 00:04:43.840 align:start position:0%
so let's add it to our hash map as well
 

00:04:43.840 --> 00:04:45.830 align:start position:0%
so let's add it to our hash map as well
we're<00:04:44.160><c> mapping</c><00:04:44.639><c> the</c><00:04:44.800><c> original</c><00:04:45.360><c> node</c>

00:04:45.830 --> 00:04:45.840 align:start position:0%
we're mapping the original node
 

00:04:45.840 --> 00:04:49.510 align:start position:0%
we're mapping the original node
4<00:04:46.240><c> to</c><00:04:46.720><c> its</c><00:04:47.040><c> clone</c><00:04:48.080><c> so</c><00:04:48.320><c> now</c><00:04:48.479><c> we're</c><00:04:48.800><c> at</c><00:04:48.960><c> the</c><00:04:49.120><c> node</c>

00:04:49.510 --> 00:04:49.520 align:start position:0%
4 to its clone so now we're at the node
 

00:04:49.520 --> 00:04:51.030 align:start position:0%
4 to its clone so now we're at the node
4.<00:04:49.759><c> we</c><00:04:49.919><c> want</c><00:04:50.080><c> to</c><00:04:50.240><c> clone</c>

00:04:51.030 --> 00:04:51.040 align:start position:0%
4. we want to clone
 

00:04:51.040 --> 00:04:53.830 align:start position:0%
4. we want to clone
4's<00:04:51.600><c> neighbors</c><00:04:52.320><c> first</c><00:04:52.639><c> you</c><00:04:52.800><c> see</c><00:04:53.040><c> that</c><00:04:53.360><c> 4</c><00:04:53.600><c> has</c><00:04:53.759><c> a</c>

00:04:53.830 --> 00:04:53.840 align:start position:0%
4's neighbors first you see that 4 has a
 

00:04:53.840 --> 00:04:54.390 align:start position:0%
4's neighbors first you see that 4 has a
neighbor

00:04:54.390 --> 00:04:54.400 align:start position:0%
neighbor
 

00:04:54.400 --> 00:04:56.629 align:start position:0%
neighbor
2<00:04:54.639><c> which</c><00:04:54.880><c> we</c><00:04:55.120><c> already</c><00:04:55.600><c> cloned</c><00:04:56.160><c> so</c><00:04:56.400><c> we're</c><00:04:56.560><c> going</c>

00:04:56.629 --> 00:04:56.639 align:start position:0%
2 which we already cloned so we're going
 

00:04:56.639 --> 00:04:58.790 align:start position:0%
2 which we already cloned so we're going
to<00:04:56.800><c> take</c><00:04:57.040><c> this</c><00:04:57.280><c> original</c><00:04:57.840><c> node</c><00:04:58.240><c> 4</c><00:04:58.560><c> right</c><00:04:58.720><c> we</c>

00:04:58.790 --> 00:04:58.800 align:start position:0%
to take this original node 4 right we
 

00:04:58.800 --> 00:05:00.150 align:start position:0%
to take this original node 4 right we
know<00:04:58.960><c> the</c><00:04:59.120><c> original</c><00:04:59.520><c> node</c>

00:05:00.150 --> 00:05:00.160 align:start position:0%
know the original node
 

00:05:00.160 --> 00:05:02.550 align:start position:0%
know the original node
we<00:05:00.320><c> know</c><00:05:00.479><c> the</c><00:05:00.639><c> original</c><00:05:00.960><c> node</c><00:05:01.280><c> 4</c><00:05:01.520><c> has</c><00:05:01.759><c> a</c><00:05:02.160><c> as</c><00:05:02.320><c> an</c>

00:05:02.550 --> 00:05:02.560 align:start position:0%
we know the original node 4 has a as an
 

00:05:02.560 --> 00:05:04.310 align:start position:0%
we know the original node 4 has a as an
original<00:05:03.120><c> neighbor</c><00:05:03.600><c> of</c><00:05:03.840><c> 2</c>

00:05:04.310 --> 00:05:04.320 align:start position:0%
original neighbor of 2
 

00:05:04.320 --> 00:05:06.710 align:start position:0%
original neighbor of 2
so<00:05:04.560><c> then</c><00:05:04.720><c> we're</c><00:05:04.880><c> going</c><00:05:04.960><c> to</c><00:05:05.120><c> take</c><00:05:05.360><c> that</c><00:05:05.680><c> 2</c><00:05:06.479><c> look</c>

00:05:06.710 --> 00:05:06.720 align:start position:0%
so then we're going to take that 2 look
 

00:05:06.720 --> 00:05:08.870 align:start position:0%
so then we're going to take that 2 look
it<00:05:07.039><c> up</c><00:05:07.199><c> in</c><00:05:07.360><c> our</c><00:05:07.520><c> hash</c><00:05:07.840><c> map</c><00:05:08.160><c> see</c><00:05:08.400><c> okay</c><00:05:08.639><c> we</c>

00:05:08.870 --> 00:05:08.880 align:start position:0%
it up in our hash map see okay we
 

00:05:08.880 --> 00:05:09.990 align:start position:0%
it up in our hash map see okay we
already<00:05:09.280><c> created</c><00:05:09.759><c> a</c>

00:05:09.990 --> 00:05:10.000 align:start position:0%
already created a
 

00:05:10.000 --> 00:05:12.150 align:start position:0%
already created a
clone<00:05:10.320><c> of</c><00:05:10.479><c> it</c><00:05:10.880><c> and</c><00:05:11.039><c> this</c><00:05:11.280><c> is</c><00:05:11.360><c> the</c><00:05:11.520><c> clone</c><00:05:12.080><c> and</c>

00:05:12.150 --> 00:05:12.160 align:start position:0%
clone of it and this is the clone and
 

00:05:12.160 --> 00:05:13.990 align:start position:0%
clone of it and this is the clone and
then<00:05:12.320><c> we're</c><00:05:12.479><c> gonna</c><00:05:12.720><c> end</c><00:05:12.880><c> up</c><00:05:13.039><c> taking</c><00:05:13.440><c> four</c><00:05:13.759><c> and</c>

00:05:13.990 --> 00:05:14.000 align:start position:0%
then we're gonna end up taking four and
 

00:05:14.000 --> 00:05:15.270 align:start position:0%
then we're gonna end up taking four and
connecting<00:05:14.800><c> it</c><00:05:14.960><c> to</c>

00:05:15.270 --> 00:05:15.280 align:start position:0%
connecting it to
 

00:05:15.280 --> 00:05:17.430 align:start position:0%
connecting it to
two<00:05:16.000><c> and</c><00:05:16.240><c> let's</c><00:05:16.479><c> just</c><00:05:16.720><c> say</c><00:05:16.880><c> that</c><00:05:17.039><c> you</c><00:05:17.199><c> know</c>

00:05:17.430 --> 00:05:17.440 align:start position:0%
two and let's just say that you know
 

00:05:17.440 --> 00:05:19.430 align:start position:0%
two and let's just say that you know
when<00:05:17.680><c> we</c><00:05:17.840><c> created</c><00:05:18.240><c> the</c><00:05:18.400><c> node</c><00:05:18.720><c> four</c><00:05:18.960><c> we</c><00:05:19.120><c> ended</c>

00:05:19.430 --> 00:05:19.440 align:start position:0%
when we created the node four we ended
 

00:05:19.440 --> 00:05:20.950 align:start position:0%
when we created the node four we ended
up<00:05:19.520><c> connecting</c><00:05:20.080><c> two</c>

00:05:20.950 --> 00:05:20.960 align:start position:0%
up connecting two
 

00:05:20.960 --> 00:05:23.670 align:start position:0%
up connecting two
to<00:05:21.360><c> four</c><00:05:21.680><c> so</c><00:05:21.919><c> let's</c><00:05:22.160><c> just</c><00:05:22.320><c> make</c><00:05:22.560><c> this</c><00:05:22.960><c> edge</c><00:05:23.440><c> go</c>

00:05:23.670 --> 00:05:23.680 align:start position:0%
to four so let's just make this edge go
 

00:05:23.680 --> 00:05:23.990 align:start position:0%
to four so let's just make this edge go
both

00:05:23.990 --> 00:05:24.000 align:start position:0%
both
 

00:05:24.000 --> 00:05:25.990 align:start position:0%
both
ways<00:05:24.320><c> because</c><00:05:24.560><c> we</c><00:05:24.720><c> know</c><00:05:24.880><c> that</c><00:05:25.199><c> originally</c><00:05:25.759><c> the</c>

00:05:25.990 --> 00:05:26.000 align:start position:0%
ways because we know that originally the
 

00:05:26.000 --> 00:05:27.590 align:start position:0%
ways because we know that originally the
edges<00:05:26.479><c> are</c><00:05:26.720><c> undirected</c>

00:05:27.590 --> 00:05:27.600 align:start position:0%
edges are undirected
 

00:05:27.600 --> 00:05:30.469 align:start position:0%
edges are undirected
so<00:05:27.840><c> now</c><00:05:28.000><c> that</c><00:05:28.160><c> we've</c><00:05:28.720><c> for</c><00:05:29.039><c> four</c><00:05:29.680><c> we</c><00:05:30.080><c> wanted</c><00:05:30.400><c> to</c>

00:05:30.469 --> 00:05:30.479 align:start position:0%
so now that we've for four we wanted to
 

00:05:30.479 --> 00:05:32.150 align:start position:0%
so now that we've for four we wanted to
create<00:05:30.880><c> a</c><00:05:30.960><c> clone</c><00:05:31.440><c> of</c><00:05:31.680><c> two</c>

00:05:32.150 --> 00:05:32.160 align:start position:0%
create a clone of two
 

00:05:32.160 --> 00:05:33.990 align:start position:0%
create a clone of two
we<00:05:32.320><c> also</c><00:05:32.639><c> want</c><00:05:32.800><c> to</c><00:05:32.960><c> create</c><00:05:33.280><c> a</c><00:05:33.360><c> clone</c><00:05:33.680><c> of</c><00:05:33.840><c> its</c>

00:05:33.990 --> 00:05:34.000 align:start position:0%
we also want to create a clone of its
 

00:05:34.000 --> 00:05:35.350 align:start position:0%
we also want to create a clone of its
second<00:05:34.320><c> neighbor</c><00:05:34.880><c> three</c>

00:05:35.350 --> 00:05:35.360 align:start position:0%
second neighbor three
 

00:05:35.360 --> 00:05:37.909 align:start position:0%
second neighbor three
so<00:05:35.600><c> now</c><00:05:35.759><c> let's</c><00:05:36.000><c> create</c><00:05:36.240><c> a</c><00:05:36.320><c> clone</c><00:05:36.800><c> of</c><00:05:37.039><c> three</c><00:05:37.440><c> so</c>

00:05:37.909 --> 00:05:37.919 align:start position:0%
so now let's create a clone of three so
 

00:05:37.919 --> 00:05:39.510 align:start position:0%
so now let's create a clone of three so
we<00:05:38.080><c> know</c><00:05:38.240><c> that</c><00:05:38.479><c> four</c><00:05:38.720><c> is</c><00:05:38.800><c> going</c><00:05:38.880><c> to</c><00:05:38.960><c> be</c><00:05:39.120><c> able</c><00:05:39.280><c> to</c>

00:05:39.510 --> 00:05:39.520 align:start position:0%
we know that four is going to be able to
 

00:05:39.520 --> 00:05:40.070 align:start position:0%
we know that four is going to be able to
connect

00:05:40.070 --> 00:05:40.080 align:start position:0%
connect
 

00:05:40.080 --> 00:05:42.469 align:start position:0%
connect
to<00:05:40.320><c> this</c><00:05:40.639><c> neighbor</c><00:05:41.360><c> of</c><00:05:41.840><c> three</c><00:05:42.160><c> so</c><00:05:42.320><c> we're</c>

00:05:42.469 --> 00:05:42.479 align:start position:0%
to this neighbor of three so we're
 

00:05:42.479 --> 00:05:44.070 align:start position:0%
to this neighbor of three so we're
creating<00:05:42.880><c> a</c><00:05:42.960><c> clone</c><00:05:43.440><c> for</c><00:05:43.680><c> it</c>

00:05:44.070 --> 00:05:44.080 align:start position:0%
creating a clone for it
 

00:05:44.080 --> 00:05:45.909 align:start position:0%
creating a clone for it
and<00:05:44.320><c> we're</c><00:05:44.479><c> gonna</c><00:05:44.639><c> take</c><00:05:44.800><c> the</c><00:05:44.960><c> original</c><00:05:45.520><c> three</c>

00:05:45.909 --> 00:05:45.919 align:start position:0%
and we're gonna take the original three
 

00:05:45.919 --> 00:05:48.070 align:start position:0%
and we're gonna take the original three
node<00:05:46.479><c> and</c><00:05:46.800><c> map</c><00:05:47.120><c> it</c><00:05:47.280><c> to</c><00:05:47.520><c> its</c>

00:05:48.070 --> 00:05:48.080 align:start position:0%
node and map it to its
 

00:05:48.080 --> 00:05:51.670 align:start position:0%
node and map it to its
new<00:05:48.800><c> copy</c><00:05:49.199><c> node</c><00:05:49.680><c> of</c><00:05:50.240><c> three</c><00:05:50.880><c> so</c><00:05:51.120><c> now</c><00:05:51.360><c> we're</c>

00:05:51.670 --> 00:05:51.680 align:start position:0%
new copy node of three so now we're
 

00:05:51.680 --> 00:05:52.710 align:start position:0%
new copy node of three so now we're
almost<00:05:52.320><c> done</c>

00:05:52.710 --> 00:05:52.720 align:start position:0%
almost done
 

00:05:52.720 --> 00:05:54.950 align:start position:0%
almost done
right<00:05:52.960><c> you</c><00:05:53.120><c> can</c><00:05:53.280><c> see</c><00:05:53.440><c> that</c><00:05:53.759><c> all</c><00:05:54.240><c> four</c><00:05:54.639><c> of</c><00:05:54.720><c> the</c>

00:05:54.950 --> 00:05:54.960 align:start position:0%
right you can see that all four of the
 

00:05:54.960 --> 00:05:56.629 align:start position:0%
right you can see that all four of the
nodes<00:05:55.440><c> have</c><00:05:55.680><c> been</c><00:05:56.000><c> copied</c>

00:05:56.629 --> 00:05:56.639 align:start position:0%
nodes have been copied
 

00:05:56.639 --> 00:05:59.670 align:start position:0%
nodes have been copied
but<00:05:57.039><c> for</c><00:05:57.440><c> three</c><00:05:57.919><c> we</c><00:05:58.160><c> haven't</c><00:05:58.639><c> added</c><00:05:59.199><c> threes</c>

00:05:59.670 --> 00:05:59.680 align:start position:0%
but for three we haven't added threes
 

00:05:59.680 --> 00:06:00.629 align:start position:0%
but for three we haven't added threes
and<00:05:59.759><c> neighbors</c><00:06:00.240><c> right</c>

00:06:00.629 --> 00:06:00.639 align:start position:0%
and neighbors right
 

00:06:00.639 --> 00:06:03.029 align:start position:0%
and neighbors right
three<00:06:01.039><c> isn't</c><00:06:01.360><c> ended</c><00:06:01.600><c> up</c><00:06:01.759><c> connecting</c><00:06:02.319><c> to</c><00:06:02.479><c> any</c>

00:06:03.029 --> 00:06:03.039 align:start position:0%
three isn't ended up connecting to any
 

00:06:03.039 --> 00:06:04.550 align:start position:0%
three isn't ended up connecting to any
other<00:06:03.280><c> nodes</c><00:06:03.680><c> yet</c><00:06:03.840><c> but</c><00:06:04.000><c> we</c><00:06:04.160><c> know</c><00:06:04.319><c> in</c><00:06:04.400><c> the</c>

00:06:04.550 --> 00:06:04.560 align:start position:0%
other nodes yet but we know in the
 

00:06:04.560 --> 00:06:06.469 align:start position:0%
other nodes yet but we know in the
original<00:06:05.039><c> three</c><00:06:05.360><c> has</c><00:06:05.600><c> two</c><00:06:05.919><c> neighbors</c>

00:06:06.469 --> 00:06:06.479 align:start position:0%
original three has two neighbors
 

00:06:06.479 --> 00:06:08.309 align:start position:0%
original three has two neighbors
the<00:06:06.639><c> first</c><00:06:06.880><c> neighbor</c><00:06:07.199><c> is</c><00:06:07.440><c> four</c><00:06:08.000><c> so</c><00:06:08.160><c> we're</c>

00:06:08.309 --> 00:06:08.319 align:start position:0%
the first neighbor is four so we're
 

00:06:08.319 --> 00:06:10.390 align:start position:0%
the first neighbor is four so we're
going<00:06:08.400><c> to</c><00:06:08.560><c> say</c><00:06:08.800><c> okay</c><00:06:09.360><c> we</c><00:06:09.520><c> know</c><00:06:09.680><c> that</c>

00:06:10.390 --> 00:06:10.400 align:start position:0%
going to say okay we know that
 

00:06:10.400 --> 00:06:13.189 align:start position:0%
going to say okay we know that
this<00:06:10.800><c> 4</c><00:06:11.680><c> needs</c><00:06:11.919><c> to</c><00:06:12.080><c> have</c><00:06:12.240><c> a</c><00:06:12.400><c> clone</c><00:06:12.880><c> but</c><00:06:13.039><c> the</c>

00:06:13.189 --> 00:06:13.199 align:start position:0%
this 4 needs to have a clone but the
 

00:06:13.199 --> 00:06:15.590 align:start position:0%
this 4 needs to have a clone but the
good<00:06:13.360><c> thing</c><00:06:13.520><c> is</c><00:06:13.680><c> we</c><00:06:13.919><c> already</c><00:06:14.479><c> created</c><00:06:15.039><c> a</c><00:06:15.199><c> clone</c>

00:06:15.590 --> 00:06:15.600 align:start position:0%
good thing is we already created a clone
 

00:06:15.600 --> 00:06:16.790 align:start position:0%
good thing is we already created a clone
for<00:06:15.840><c> that</c><00:06:16.080><c> node</c>

00:06:16.790 --> 00:06:16.800 align:start position:0%
for that node
 

00:06:16.800 --> 00:06:19.110 align:start position:0%
for that node
and<00:06:17.199><c> this</c><00:06:17.440><c> is</c><00:06:17.520><c> the</c><00:06:17.680><c> clone</c><00:06:18.000><c> so</c><00:06:18.160><c> now</c><00:06:18.319><c> we</c><00:06:18.479><c> have</c><00:06:18.800><c> it</c>

00:06:19.110 --> 00:06:19.120 align:start position:0%
and this is the clone so now we have it
 

00:06:19.120 --> 00:06:20.070 align:start position:0%
and this is the clone so now we have it
so<00:06:19.360><c> we're</c><00:06:19.520><c> gonna</c><00:06:19.680><c> take</c>

00:06:20.070 --> 00:06:20.080 align:start position:0%
so we're gonna take
 

00:06:20.080 --> 00:06:23.110 align:start position:0%
so we're gonna take
three<00:06:20.800><c> and</c><00:06:21.360><c> ah</c><00:06:21.680><c> and</c><00:06:21.840><c> connect</c><00:06:22.319><c> it</c><00:06:22.639><c> to</c>

00:06:23.110 --> 00:06:23.120 align:start position:0%
three and ah and connect it to
 

00:06:23.120 --> 00:06:24.550 align:start position:0%
three and ah and connect it to
four<00:06:23.440><c> so</c><00:06:23.600><c> we're</c><00:06:23.759><c> gonna</c><00:06:23.919><c> make</c><00:06:24.080><c> this</c><00:06:24.319><c> edge</c>

00:06:24.550 --> 00:06:24.560 align:start position:0%
four so we're gonna make this edge
 

00:06:24.560 --> 00:06:26.390 align:start position:0%
four so we're gonna make this edge
basically<00:06:25.120><c> double</c><00:06:25.440><c> directed</c>

00:06:26.390 --> 00:06:26.400 align:start position:0%
basically double directed
 

00:06:26.400 --> 00:06:29.510 align:start position:0%
basically double directed
and<00:06:26.880><c> three</c><00:06:27.280><c> also</c><00:06:27.680><c> has</c><00:06:28.000><c> another</c><00:06:28.400><c> neighbor</c><00:06:28.880><c> of</c>

00:06:29.510 --> 00:06:29.520 align:start position:0%
and three also has another neighbor of
 

00:06:29.520 --> 00:06:32.230 align:start position:0%
and three also has another neighbor of
one<00:06:30.639><c> and</c><00:06:30.880><c> so</c><00:06:31.120><c> basically</c><00:06:31.520><c> what</c><00:06:31.680><c> we</c><00:06:31.759><c> need</c><00:06:31.919><c> to</c><00:06:32.000><c> do</c>

00:06:32.230 --> 00:06:32.240 align:start position:0%
one and so basically what we need to do
 

00:06:32.240 --> 00:06:34.469 align:start position:0%
one and so basically what we need to do
is<00:06:32.400><c> make</c><00:06:32.639><c> a</c><00:06:32.720><c> clone</c><00:06:33.120><c> of</c><00:06:33.199><c> that</c><00:06:33.440><c> one</c><00:06:33.840><c> but</c><00:06:34.160><c> we</c>

00:06:34.469 --> 00:06:34.479 align:start position:0%
is make a clone of that one but we
 

00:06:34.479 --> 00:06:36.710 align:start position:0%
is make a clone of that one but we
look<00:06:34.720><c> in</c><00:06:34.800><c> our</c><00:06:34.960><c> hash</c><00:06:35.280><c> map</c><00:06:35.600><c> first</c><00:06:35.919><c> and</c><00:06:36.080><c> we</c><00:06:36.240><c> see</c><00:06:36.400><c> we</c>

00:06:36.710 --> 00:06:36.720 align:start position:0%
look in our hash map first and we see we
 

00:06:36.720 --> 00:06:38.469 align:start position:0%
look in our hash map first and we see we
already<00:06:37.280><c> cloned</c><00:06:37.919><c> one</c>

00:06:38.469 --> 00:06:38.479 align:start position:0%
already cloned one
 

00:06:38.479 --> 00:06:40.469 align:start position:0%
already cloned one
this<00:06:38.720><c> is</c><00:06:38.880><c> the</c><00:06:39.039><c> clone</c><00:06:39.680><c> so</c><00:06:39.840><c> we're</c><00:06:40.000><c> gonna</c><00:06:40.160><c> take</c>

00:06:40.469 --> 00:06:40.479 align:start position:0%
this is the clone so we're gonna take
 

00:06:40.479 --> 00:06:41.749 align:start position:0%
this is the clone so we're gonna take
three<00:06:41.280><c> and</c>

00:06:41.749 --> 00:06:41.759 align:start position:0%
three and
 

00:06:41.759 --> 00:06:45.029 align:start position:0%
three and
connect<00:06:42.400><c> it</c><00:06:42.720><c> to</c><00:06:42.960><c> one</c><00:06:43.280><c> right</c><00:06:44.080><c> but</c><00:06:44.479><c> wait</c><00:06:44.720><c> we</c><00:06:44.880><c> have</c>

00:06:45.029 --> 00:06:45.039 align:start position:0%
connect it to one right but wait we have
 

00:06:45.039 --> 00:06:46.469 align:start position:0%
connect it to one right but wait we have
one<00:06:45.280><c> last</c><00:06:45.520><c> problem</c><00:06:45.840><c> right</c><00:06:46.080><c> this</c>

00:06:46.469 --> 00:06:46.479 align:start position:0%
one last problem right this
 

00:06:46.479 --> 00:06:48.550 align:start position:0%
one last problem right this
one<00:06:46.960><c> should</c><00:06:47.280><c> also</c><00:06:47.520><c> be</c><00:06:47.759><c> connected</c><00:06:48.240><c> to</c><00:06:48.319><c> the</c>

00:06:48.550 --> 00:06:48.560 align:start position:0%
one should also be connected to the
 

00:06:48.560 --> 00:06:50.790 align:start position:0%
one should also be connected to the
three<00:06:48.960><c> right</c><00:06:49.440><c> you're</c><00:06:49.759><c> right</c><00:06:50.080><c> and</c><00:06:50.240><c> that's</c><00:06:50.560><c> what</c>

00:06:50.790 --> 00:06:50.800 align:start position:0%
three right you're right and that's what
 

00:06:50.800 --> 00:06:52.629 align:start position:0%
three right you're right and that's what
we're<00:06:50.960><c> doing</c><00:06:51.199><c> recursively</c><00:06:52.000><c> now</c>

00:06:52.629 --> 00:06:52.639 align:start position:0%
we're doing recursively now
 

00:06:52.639 --> 00:06:55.189 align:start position:0%
we're doing recursively now
so<00:06:52.880><c> we</c><00:06:53.039><c> originally</c><00:06:53.680><c> started</c><00:06:54.160><c> at</c><00:06:54.400><c> one</c><00:06:54.800><c> then</c><00:06:55.039><c> we</c>

00:06:55.189 --> 00:06:55.199 align:start position:0%
so we originally started at one then we
 

00:06:55.199 --> 00:06:56.309 align:start position:0%
so we originally started at one then we
went<00:06:55.440><c> to</c><00:06:55.680><c> two</c>

00:06:56.309 --> 00:06:56.319 align:start position:0%
went to two
 

00:06:56.319 --> 00:06:58.469 align:start position:0%
went to two
then<00:06:56.479><c> we</c><00:06:56.639><c> went</c><00:06:56.800><c> to</c><00:06:57.120><c> four</c><00:06:57.680><c> then</c><00:06:57.919><c> we</c><00:06:58.080><c> went</c><00:06:58.240><c> to</c>

00:06:58.469 --> 00:06:58.479 align:start position:0%
then we went to four then we went to
 

00:06:58.479 --> 00:06:59.749 align:start position:0%
then we went to four then we went to
three<00:06:58.800><c> now</c><00:06:58.960><c> what</c><00:06:59.120><c> we're</c><00:06:59.280><c> going</c><00:06:59.360><c> to</c><00:06:59.440><c> end</c><00:06:59.599><c> up</c>

00:06:59.749 --> 00:06:59.759 align:start position:0%
three now what we're going to end up
 

00:06:59.759 --> 00:07:00.469 align:start position:0%
three now what we're going to end up
doing<00:07:00.080><c> is</c>

00:07:00.469 --> 00:07:00.479 align:start position:0%
doing is
 

00:07:00.479 --> 00:07:02.150 align:start position:0%
doing is
reversing<00:07:01.039><c> that</c><00:07:01.199><c> because</c><00:07:01.440><c> we</c><00:07:01.599><c> remember</c><00:07:02.000><c> we're</c>

00:07:02.150 --> 00:07:02.160 align:start position:0%
reversing that because we remember we're
 

00:07:02.160 --> 00:07:03.589 align:start position:0%
reversing that because we remember we're
doing<00:07:02.319><c> this</c><00:07:02.479><c> recursively</c><00:07:03.120><c> so</c><00:07:03.280><c> we're</c><00:07:03.360><c> gonna</c>

00:07:03.589 --> 00:07:03.599 align:start position:0%
doing this recursively so we're gonna
 

00:07:03.599 --> 00:07:05.029 align:start position:0%
doing this recursively so we're gonna
pop<00:07:03.919><c> back</c><00:07:04.160><c> up</c><00:07:04.319><c> to</c><00:07:04.560><c> four</c>

00:07:05.029 --> 00:07:05.039 align:start position:0%
pop back up to four
 

00:07:05.039 --> 00:07:07.430 align:start position:0%
pop back up to four
we're<00:07:05.199><c> gonna</c><00:07:05.360><c> see</c><00:07:05.680><c> four</c><00:07:06.000><c> has</c><00:07:06.319><c> already</c><00:07:06.960><c> cloned</c>

00:07:07.430 --> 00:07:07.440 align:start position:0%
we're gonna see four has already cloned
 

00:07:07.440 --> 00:07:09.189 align:start position:0%
we're gonna see four has already cloned
its<00:07:07.599><c> neighbors</c><00:07:08.080><c> three</c><00:07:08.400><c> already</c><00:07:08.720><c> cloned</c><00:07:09.039><c> its</c>

00:07:09.189 --> 00:07:09.199 align:start position:0%
its neighbors three already cloned its
 

00:07:09.199 --> 00:07:09.749 align:start position:0%
its neighbors three already cloned its
neighbors

00:07:09.749 --> 00:07:09.759 align:start position:0%
neighbors
 

00:07:09.759 --> 00:07:12.150 align:start position:0%
neighbors
we're<00:07:09.919><c> gonna</c><00:07:10.160><c> pop</c><00:07:10.400><c> back</c><00:07:10.639><c> to</c><00:07:10.880><c> two</c><00:07:11.440><c> two</c><00:07:11.840><c> already</c>

00:07:12.150 --> 00:07:12.160 align:start position:0%
we're gonna pop back to two two already
 

00:07:12.160 --> 00:07:13.270 align:start position:0%
we're gonna pop back to two two already
cloned<00:07:12.560><c> its</c><00:07:12.720><c> neighbors</c>

00:07:13.270 --> 00:07:13.280 align:start position:0%
cloned its neighbors
 

00:07:13.280 --> 00:07:15.909 align:start position:0%
cloned its neighbors
we're<00:07:13.440><c> gonna</c><00:07:13.680><c> pop</c><00:07:13.919><c> back</c><00:07:14.160><c> to</c><00:07:14.400><c> one</c><00:07:15.039><c> one</c><00:07:15.360><c> we</c><00:07:15.599><c> ended</c>

00:07:15.909 --> 00:07:15.919 align:start position:0%
we're gonna pop back to one one we ended
 

00:07:15.919 --> 00:07:17.029 align:start position:0%
we're gonna pop back to one one we ended
up<00:07:16.080><c> cloning</c>

00:07:17.029 --> 00:07:17.039 align:start position:0%
up cloning
 

00:07:17.039 --> 00:07:20.230 align:start position:0%
up cloning
the<00:07:17.680><c> neighbor</c><00:07:18.400><c> two</c><00:07:18.960><c> right</c><00:07:19.120><c> but</c><00:07:19.280><c> we</c><00:07:19.599><c> didn't</c><00:07:20.000><c> end</c>

00:07:20.230 --> 00:07:20.240 align:start position:0%
the neighbor two right but we didn't end
 

00:07:20.240 --> 00:07:20.629 align:start position:0%
the neighbor two right but we didn't end
up

00:07:20.629 --> 00:07:20.639 align:start position:0%
up
 

00:07:20.639 --> 00:07:23.189 align:start position:0%
up
going<00:07:20.960><c> this</c><00:07:21.199><c> way</c><00:07:21.440><c> so</c><00:07:22.160><c> from</c><00:07:22.479><c> three</c><00:07:22.800><c> now</c><00:07:23.039><c> we're</c>

00:07:23.189 --> 00:07:23.199 align:start position:0%
going this way so from three now we're
 

00:07:23.199 --> 00:07:24.230 align:start position:0%
going this way so from three now we're
gonna<00:07:23.520><c> end</c><00:07:23.759><c> up</c>

00:07:24.230 --> 00:07:24.240 align:start position:0%
gonna end up
 

00:07:24.240 --> 00:07:25.749 align:start position:0%
gonna end up
we're<00:07:24.400><c> gonna</c><00:07:24.560><c> end</c><00:07:24.720><c> up</c><00:07:24.800><c> checking</c><00:07:25.199><c> okay</c><00:07:25.440><c> did</c><00:07:25.599><c> we</c>

00:07:25.749 --> 00:07:25.759 align:start position:0%
we're gonna end up checking okay did we
 

00:07:25.759 --> 00:07:27.350 align:start position:0%
we're gonna end up checking okay did we
already<00:07:26.080><c> clone</c><00:07:26.479><c> three</c><00:07:26.720><c> let's</c><00:07:26.960><c> look</c><00:07:27.120><c> in</c><00:07:27.199><c> our</c>

00:07:27.350 --> 00:07:27.360 align:start position:0%
already clone three let's look in our
 

00:07:27.360 --> 00:07:29.510 align:start position:0%
already clone three let's look in our
hash<00:07:27.599><c> map</c><00:07:27.919><c> yep</c><00:07:28.240><c> we</c><00:07:28.479><c> already</c><00:07:28.960><c> did</c>

00:07:29.510 --> 00:07:29.520 align:start position:0%
hash map yep we already did
 

00:07:29.520 --> 00:07:32.790 align:start position:0%
hash map yep we already did
so<00:07:29.840><c> this</c><00:07:30.240><c> is</c><00:07:30.639><c> the</c><00:07:30.880><c> clone</c><00:07:31.199><c> that</c><00:07:31.360><c> we</c><00:07:31.520><c> created</c><00:07:32.479><c> so</c>

00:07:32.790 --> 00:07:32.800 align:start position:0%
so this is the clone that we created so
 

00:07:32.800 --> 00:07:34.950 align:start position:0%
so this is the clone that we created so
all<00:07:32.960><c> we</c><00:07:33.199><c> really</c><00:07:33.440><c> need</c><00:07:33.680><c> to</c><00:07:33.759><c> do</c><00:07:34.080><c> is</c><00:07:34.240><c> make</c><00:07:34.639><c> one</c>

00:07:34.950 --> 00:07:34.960 align:start position:0%
all we really need to do is make one
 

00:07:34.960 --> 00:07:36.790 align:start position:0%
all we really need to do is make one
connected<00:07:35.440><c> to</c><00:07:35.599><c> three</c><00:07:35.840><c> so</c><00:07:36.080><c> basically</c><00:07:36.560><c> make</c>

00:07:36.790 --> 00:07:36.800 align:start position:0%
connected to three so basically make
 

00:07:36.800 --> 00:07:38.469 align:start position:0%
connected to three so basically make
this<00:07:37.039><c> edge</c><00:07:37.440><c> double</c><00:07:37.759><c> directed</c>

00:07:38.469 --> 00:07:38.479 align:start position:0%
this edge double directed
 

00:07:38.479 --> 00:07:40.629 align:start position:0%
this edge double directed
so<00:07:38.880><c> now</c><00:07:39.120><c> you</c><00:07:39.199><c> can</c><00:07:39.440><c> see</c><00:07:39.680><c> that</c><00:07:39.840><c> we</c><00:07:40.160><c> finally</c>

00:07:40.629 --> 00:07:40.639 align:start position:0%
so now you can see that we finally
 

00:07:40.639 --> 00:07:42.469 align:start position:0%
so now you can see that we finally
created<00:07:41.120><c> a</c><00:07:41.280><c> complete</c><00:07:41.919><c> clone</c>

00:07:42.469 --> 00:07:42.479 align:start position:0%
created a complete clone
 

00:07:42.479 --> 00:07:45.589 align:start position:0%
created a complete clone
of<00:07:42.639><c> the</c><00:07:42.880><c> graph</c><00:07:43.280><c> we</c><00:07:43.440><c> did</c><00:07:43.680><c> this</c><00:07:44.240><c> in</c><00:07:44.720><c> o</c><00:07:44.960><c> of</c><00:07:45.360><c> n</c>

00:07:45.589 --> 00:07:45.599 align:start position:0%
of the graph we did this in o of n
 

00:07:45.599 --> 00:07:49.430 align:start position:0%
of the graph we did this in o of n
time<00:07:45.919><c> where</c><00:07:46.240><c> n</c><00:07:46.560><c> is</c><00:07:46.800><c> basically</c><00:07:48.160><c> the</c><00:07:48.479><c> number</c><00:07:48.960><c> of</c>

00:07:49.430 --> 00:07:49.440 align:start position:0%
time where n is basically the number of
 

00:07:49.440 --> 00:07:51.749 align:start position:0%
time where n is basically the number of
edges<00:07:50.000><c> plus</c><00:07:50.319><c> the</c><00:07:50.479><c> number</c><00:07:50.800><c> of</c><00:07:50.960><c> vertices</c><00:07:51.520><c> right</c>

00:07:51.749 --> 00:07:51.759 align:start position:0%
edges plus the number of vertices right
 

00:07:51.759 --> 00:07:54.070 align:start position:0%
edges plus the number of vertices right
the<00:07:51.919><c> number</c><00:07:52.160><c> of</c><00:07:52.400><c> nodes</c><00:07:52.879><c> plus</c><00:07:53.120><c> the</c><00:07:53.280><c> number</c><00:07:53.599><c> of</c>

00:07:54.070 --> 00:07:54.080 align:start position:0%
the number of nodes plus the number of
 

00:07:54.080 --> 00:07:56.469 align:start position:0%
the number of nodes plus the number of
edges<00:07:54.800><c> connecting</c><00:07:55.360><c> them</c><00:07:55.599><c> because</c><00:07:55.840><c> we</c><00:07:56.000><c> have</c><00:07:56.160><c> to</c>

00:07:56.469 --> 00:07:56.479 align:start position:0%
edges connecting them because we have to
 

00:07:56.479 --> 00:07:58.869 align:start position:0%
edges connecting them because we have to
basically<00:07:56.960><c> make</c><00:07:57.199><c> a</c><00:07:57.360><c> clone</c><00:07:57.680><c> of</c><00:07:57.919><c> each</c><00:07:58.080><c> of</c><00:07:58.240><c> these</c>

00:07:58.869 --> 00:07:58.879 align:start position:0%
basically make a clone of each of these
 

00:07:58.879 --> 00:08:01.189 align:start position:0%
basically make a clone of each of these
and<00:07:59.120><c> with</c><00:07:59.280><c> that</c><00:07:59.520><c> being</c><00:07:59.759><c> said</c><00:08:00.160><c> now</c><00:08:00.479><c> let's</c><00:08:00.800><c> jump</c>

00:08:01.189 --> 00:08:01.199 align:start position:0%
and with that being said now let's jump
 

00:08:01.199 --> 00:08:02.550 align:start position:0%
and with that being said now let's jump
into<00:08:01.520><c> the</c><00:08:01.840><c> code</c>

00:08:02.550 --> 00:08:02.560 align:start position:0%
into the code
 

00:08:02.560 --> 00:08:04.469 align:start position:0%
into the code
so<00:08:02.800><c> we</c><00:08:03.039><c> remember</c><00:08:03.360><c> that</c><00:08:03.520><c> we</c><00:08:03.680><c> only</c><00:08:04.000><c> need</c><00:08:04.240><c> a</c>

00:08:04.469 --> 00:08:04.479 align:start position:0%
so we remember that we only need a
 

00:08:04.479 --> 00:08:05.670 align:start position:0%
so we remember that we only need a
single<00:08:04.800><c> data</c><00:08:05.120><c> structure</c>

00:08:05.670 --> 00:08:05.680 align:start position:0%
single data structure
 

00:08:05.680 --> 00:08:08.150 align:start position:0%
single data structure
old<00:08:06.000><c> to</c><00:08:06.240><c> new</c><00:08:06.560><c> which</c><00:08:06.879><c> is</c><00:08:07.039><c> a</c><00:08:07.199><c> hash</c><00:08:07.520><c> map</c><00:08:07.759><c> mapping</c>

00:08:08.150 --> 00:08:08.160 align:start position:0%
old to new which is a hash map mapping
 

00:08:08.160 --> 00:08:10.150 align:start position:0%
old to new which is a hash map mapping
the<00:08:08.319><c> old</c><00:08:08.639><c> nodes</c><00:08:08.960><c> to</c><00:08:09.120><c> the</c><00:08:09.199><c> new</c><00:08:09.440><c> nodes</c><00:08:09.840><c> and</c><00:08:10.000><c> i'm</c>

00:08:10.150 --> 00:08:10.160 align:start position:0%
the old nodes to the new nodes and i'm
 

00:08:10.160 --> 00:08:11.749 align:start position:0%
the old nodes to the new nodes and i'm
going<00:08:10.240><c> to</c><00:08:10.400><c> implement</c><00:08:10.800><c> this</c><00:08:11.039><c> in</c><00:08:11.199><c> depth</c><00:08:11.440><c> first</c>

00:08:11.749 --> 00:08:11.759 align:start position:0%
going to implement this in depth first
 

00:08:11.759 --> 00:08:12.469 align:start position:0%
going to implement this in depth first
search

00:08:12.469 --> 00:08:12.479 align:start position:0%
search
 

00:08:12.479 --> 00:08:14.309 align:start position:0%
search
and<00:08:12.879><c> you</c><00:08:13.039><c> can</c><00:08:13.120><c> see</c><00:08:13.280><c> that</c><00:08:13.440><c> this</c><00:08:13.680><c> function</c><00:08:14.080><c> is</c>

00:08:14.309 --> 00:08:14.319 align:start position:0%
and you can see that this function is
 

00:08:14.319 --> 00:08:16.230 align:start position:0%
and you can see that this function is
nested<00:08:14.879><c> in</c><00:08:15.039><c> the</c><00:08:15.280><c> outer</c><00:08:15.520><c> function</c><00:08:15.919><c> which</c><00:08:16.080><c> just</c>

00:08:16.230 --> 00:08:16.240 align:start position:0%
nested in the outer function which just
 

00:08:16.240 --> 00:08:18.070 align:start position:0%
nested in the outer function which just
makes<00:08:16.560><c> things</c><00:08:16.879><c> easier</c><00:08:17.280><c> meaning</c><00:08:17.520><c> that</c><00:08:17.759><c> this</c>

00:08:18.070 --> 00:08:18.080 align:start position:0%
makes things easier meaning that this
 

00:08:18.080 --> 00:08:19.589 align:start position:0%
makes things easier meaning that this
data<00:08:18.319><c> structure</c><00:08:18.639><c> doesn't</c><00:08:18.879><c> need</c><00:08:19.039><c> to</c><00:08:19.120><c> be</c><00:08:19.280><c> passed</c>

00:08:19.589 --> 00:08:19.599 align:start position:0%
data structure doesn't need to be passed
 

00:08:19.599 --> 00:08:21.430 align:start position:0%
data structure doesn't need to be passed
into<00:08:20.000><c> every</c><00:08:20.160><c> single</c><00:08:20.479><c> function</c><00:08:20.879><c> call</c>

00:08:21.430 --> 00:08:21.440 align:start position:0%
into every single function call
 

00:08:21.440 --> 00:08:23.430 align:start position:0%
into every single function call
but<00:08:21.599><c> we</c><00:08:21.759><c> do</c><00:08:22.000><c> need</c><00:08:22.160><c> to</c><00:08:22.319><c> pass</c><00:08:22.639><c> in</c><00:08:22.720><c> everything</c>

00:08:23.430 --> 00:08:23.440 align:start position:0%
but we do need to pass in everything
 

00:08:23.440 --> 00:08:25.430 align:start position:0%
but we do need to pass in everything
every<00:08:23.680><c> time</c><00:08:24.000><c> the</c><00:08:24.319><c> node</c><00:08:24.639><c> that</c><00:08:24.800><c> we're</c><00:08:25.039><c> visiting</c>

00:08:25.430 --> 00:08:25.440 align:start position:0%
every time the node that we're visiting
 

00:08:25.440 --> 00:08:26.950 align:start position:0%
every time the node that we're visiting
so<00:08:25.759><c> in</c><00:08:25.919><c> depth</c><00:08:26.160><c> first</c><00:08:26.319><c> search</c><00:08:26.639><c> we're</c><00:08:26.800><c> going</c><00:08:26.879><c> to</c>

00:08:26.950 --> 00:08:26.960 align:start position:0%
so in depth first search we're going to
 

00:08:26.960 --> 00:08:28.070 align:start position:0%
so in depth first search we're going to
pass<00:08:27.280><c> in</c><00:08:27.360><c> the</c><00:08:27.520><c> node</c>

00:08:28.070 --> 00:08:28.080 align:start position:0%
pass in the node
 

00:08:28.080 --> 00:08:30.150 align:start position:0%
pass in the node
first<00:08:28.400><c> thing</c><00:08:28.560><c> we're</c><00:08:28.720><c> going</c><00:08:28.800><c> to</c><00:08:28.879><c> check</c><00:08:29.280><c> is</c><00:08:29.599><c> if</c>

00:08:30.150 --> 00:08:30.160 align:start position:0%
first thing we're going to check is if
 

00:08:30.160 --> 00:08:31.350 align:start position:0%
first thing we're going to check is if
the<00:08:30.400><c> node</c><00:08:30.960><c> is</c>

00:08:31.350 --> 00:08:31.360 align:start position:0%
the node is
 

00:08:31.360 --> 00:08:33.909 align:start position:0%
the node is
in<00:08:31.599><c> our</c><00:08:31.840><c> hashmap</c><00:08:32.399><c> if</c><00:08:32.560><c> it</c><00:08:32.800><c> is</c><00:08:33.120><c> in</c><00:08:33.279><c> our</c><00:08:33.440><c> hashmap</c>

00:08:33.909 --> 00:08:33.919 align:start position:0%
in our hashmap if it is in our hashmap
 

00:08:33.919 --> 00:08:35.829 align:start position:0%
in our hashmap if it is in our hashmap
then<00:08:34.080><c> that</c><00:08:34.240><c> means</c><00:08:34.479><c> we</c><00:08:34.719><c> already</c><00:08:35.120><c> made</c><00:08:35.360><c> a</c><00:08:35.440><c> clone</c>

00:08:35.829 --> 00:08:35.839 align:start position:0%
then that means we already made a clone
 

00:08:35.839 --> 00:08:36.310 align:start position:0%
then that means we already made a clone
of<00:08:36.000><c> it</c>

00:08:36.310 --> 00:08:36.320 align:start position:0%
of it
 

00:08:36.320 --> 00:08:38.389 align:start position:0%
of it
if<00:08:36.479><c> we</c><00:08:36.719><c> already</c><00:08:37.039><c> made</c><00:08:37.200><c> a</c><00:08:37.360><c> clone</c><00:08:37.680><c> of</c><00:08:37.839><c> it</c><00:08:38.159><c> then</c>

00:08:38.389 --> 00:08:38.399 align:start position:0%
if we already made a clone of it then
 

00:08:38.399 --> 00:08:40.070 align:start position:0%
if we already made a clone of it then
i'm<00:08:38.560><c> just</c><00:08:38.719><c> going</c><00:08:38.800><c> to</c><00:08:38.880><c> return</c><00:08:39.440><c> that</c><00:08:39.680><c> clone</c>

00:08:40.070 --> 00:08:40.080 align:start position:0%
i'm just going to return that clone
 

00:08:40.080 --> 00:08:43.190 align:start position:0%
i'm just going to return that clone
we<00:08:40.240><c> don't</c><00:08:40.399><c> need</c><00:08:40.640><c> to</c><00:08:41.279><c> create</c><00:08:41.680><c> another</c><00:08:42.159><c> clone</c><00:08:42.560><c> so</c>

00:08:43.190 --> 00:08:43.200 align:start position:0%
we don't need to create another clone so
 

00:08:43.200 --> 00:08:46.470 align:start position:0%
we don't need to create another clone so
if<00:08:43.360><c> it</c><00:08:43.519><c> exists</c><00:08:44.240><c> return</c><00:08:45.200><c> the</c><00:08:45.440><c> new</c><00:08:45.680><c> node</c>

00:08:46.470 --> 00:08:46.480 align:start position:0%
if it exists return the new node
 

00:08:46.480 --> 00:08:48.550 align:start position:0%
if it exists return the new node
so<00:08:46.720><c> if</c><00:08:46.880><c> this</c><00:08:47.279><c> statement</c><00:08:47.760><c> doesn't</c><00:08:48.160><c> execute</c>

00:08:48.550 --> 00:08:48.560 align:start position:0%
so if this statement doesn't execute
 

00:08:48.560 --> 00:08:50.470 align:start position:0%
so if this statement doesn't execute
that<00:08:48.720><c> means</c><00:08:48.959><c> a</c><00:08:49.040><c> clone</c><00:08:49.440><c> doesn't</c><00:08:49.839><c> already</c><00:08:50.240><c> exist</c>

00:08:50.470 --> 00:08:50.480 align:start position:0%
that means a clone doesn't already exist
 

00:08:50.480 --> 00:08:52.630 align:start position:0%
that means a clone doesn't already exist
so<00:08:50.640><c> let's</c><00:08:50.880><c> create</c><00:08:51.519><c> that</c><00:08:51.760><c> clone</c><00:08:52.160><c> i</c><00:08:52.240><c> guess</c><00:08:52.480><c> i'll</c>

00:08:52.630 --> 00:08:52.640 align:start position:0%
so let's create that clone i guess i'll
 

00:08:52.640 --> 00:08:54.870 align:start position:0%
so let's create that clone i guess i'll
call<00:08:52.800><c> it</c><00:08:52.959><c> a</c><00:08:53.120><c> copy</c><00:08:53.920><c> so</c><00:08:54.080><c> we're</c><00:08:54.240><c> going</c><00:08:54.320><c> to</c><00:08:54.480><c> create</c>

00:08:54.870 --> 00:08:54.880 align:start position:0%
call it a copy so we're going to create
 

00:08:54.880 --> 00:08:55.190 align:start position:0%
call it a copy so we're going to create
a

00:08:55.190 --> 00:08:55.200 align:start position:0%
a
 

00:08:55.200 --> 00:08:56.790 align:start position:0%
a
copy<00:08:55.600><c> of</c><00:08:55.760><c> this</c><00:08:56.080><c> node</c><00:08:56.320><c> so</c><00:08:56.399><c> we're</c><00:08:56.480><c> going</c><00:08:56.560><c> to</c><00:08:56.640><c> use</c>

00:08:56.790 --> 00:08:56.800 align:start position:0%
copy of this node so we're going to use
 

00:08:56.800 --> 00:08:58.630 align:start position:0%
copy of this node so we're going to use
the<00:08:56.959><c> node</c><00:08:57.279><c> constructor</c><00:08:57.920><c> and</c><00:08:58.000><c> the</c><00:08:58.160><c> value</c><00:08:58.480><c> we're</c>

00:08:58.630 --> 00:08:58.640 align:start position:0%
the node constructor and the value we're
 

00:08:58.640 --> 00:09:01.190 align:start position:0%
the node constructor and the value we're
going<00:08:58.800><c> to</c><00:08:58.880><c> give</c><00:08:59.040><c> it</c><00:08:59.279><c> is</c><00:08:59.519><c> the</c><00:08:59.760><c> value</c><00:09:00.240><c> of</c><00:09:00.560><c> this</c>

00:09:01.190 --> 00:09:01.200 align:start position:0%
going to give it is the value of this
 

00:09:01.200 --> 00:09:03.350 align:start position:0%
going to give it is the value of this
original<00:09:01.680><c> node</c><00:09:02.399><c> and</c><00:09:02.560><c> we're</c><00:09:02.800><c> also</c><00:09:03.040><c> going</c><00:09:03.200><c> to</c>

00:09:03.350 --> 00:09:03.360 align:start position:0%
original node and we're also going to
 

00:09:03.360 --> 00:09:05.590 align:start position:0%
original node and we're also going to
take<00:09:03.680><c> that</c><00:09:04.080><c> copy</c><00:09:04.560><c> and</c><00:09:04.640><c> then</c><00:09:04.880><c> add</c><00:09:05.120><c> it</c><00:09:05.200><c> to</c><00:09:05.440><c> our</c>

00:09:05.590 --> 00:09:05.600 align:start position:0%
take that copy and then add it to our
 

00:09:05.600 --> 00:09:07.990 align:start position:0%
take that copy and then add it to our
old<00:09:05.839><c> to</c><00:09:06.000><c> new</c><00:09:06.240><c> hash</c><00:09:06.560><c> map</c><00:09:06.959><c> so</c>

00:09:07.990 --> 00:09:08.000 align:start position:0%
old to new hash map so
 

00:09:08.000 --> 00:09:11.110 align:start position:0%
old to new hash map so
old<00:09:08.240><c> to</c><00:09:08.480><c> new</c><00:09:09.120><c> so</c><00:09:09.360><c> the</c><00:09:09.600><c> old</c><00:09:09.839><c> node</c><00:09:10.240><c> is</c><00:09:10.399><c> just</c><00:09:10.720><c> node</c>

00:09:11.110 --> 00:09:11.120 align:start position:0%
old to new so the old node is just node
 

00:09:11.120 --> 00:09:13.269 align:start position:0%
old to new so the old node is just node
and<00:09:11.279><c> the</c><00:09:11.519><c> new</c><00:09:11.760><c> node</c><00:09:12.080><c> is</c><00:09:12.320><c> the</c><00:09:12.560><c> copy</c>

00:09:13.269 --> 00:09:13.279 align:start position:0%
and the new node is the copy
 

00:09:13.279 --> 00:09:15.430 align:start position:0%
and the new node is the copy
so<00:09:13.440><c> we're</c><00:09:13.680><c> mapping</c><00:09:14.000><c> the</c><00:09:14.640><c> old</c><00:09:14.880><c> node</c><00:09:15.120><c> to</c><00:09:15.279><c> the</c>

00:09:15.430 --> 00:09:15.440 align:start position:0%
so we're mapping the old node to the
 

00:09:15.440 --> 00:09:16.389 align:start position:0%
so we're mapping the old node to the
copy

00:09:16.389 --> 00:09:16.399 align:start position:0%
copy
 

00:09:16.399 --> 00:09:18.870 align:start position:0%
copy
and<00:09:16.640><c> then</c><00:09:16.800><c> we</c><00:09:16.959><c> want</c><00:09:17.120><c> to</c><00:09:17.200><c> make</c><00:09:17.680><c> copies</c><00:09:18.320><c> of</c><00:09:18.640><c> every</c>

00:09:18.870 --> 00:09:18.880 align:start position:0%
and then we want to make copies of every
 

00:09:18.880 --> 00:09:19.590 align:start position:0%
and then we want to make copies of every
single

00:09:19.590 --> 00:09:19.600 align:start position:0%
single
 

00:09:19.600 --> 00:09:22.750 align:start position:0%
single
neighbor<00:09:20.640><c> of</c><00:09:20.880><c> the</c><00:09:21.040><c> original</c><00:09:21.519><c> node</c><00:09:21.760><c> so</c>

00:09:22.750 --> 00:09:22.760 align:start position:0%
neighbor of the original node so
 

00:09:22.760 --> 00:09:24.550 align:start position:0%
neighbor of the original node so
node.neighbors

00:09:24.550 --> 00:09:24.560 align:start position:0%
node.neighbors
 

00:09:24.560 --> 00:09:26.389 align:start position:0%
node.neighbors
let's<00:09:24.800><c> go</c><00:09:24.959><c> through</c><00:09:25.200><c> every</c><00:09:25.440><c> single</c><00:09:25.839><c> neighbor</c>

00:09:26.389 --> 00:09:26.399 align:start position:0%
let's go through every single neighbor
 

00:09:26.399 --> 00:09:28.790 align:start position:0%
let's go through every single neighbor
and<00:09:26.720><c> let's</c><00:09:27.040><c> run</c><00:09:27.360><c> depth</c><00:09:27.600><c> first</c><00:09:27.839><c> search</c><00:09:28.240><c> on</c><00:09:28.560><c> that</c>

00:09:28.790 --> 00:09:28.800 align:start position:0%
and let's run depth first search on that
 

00:09:28.800 --> 00:09:29.750 align:start position:0%
and let's run depth first search on that
neighbor

00:09:29.750 --> 00:09:29.760 align:start position:0%
neighbor
 

00:09:29.760 --> 00:09:31.829 align:start position:0%
neighbor
for<00:09:30.000><c> the</c><00:09:30.399><c> and</c><00:09:30.640><c> so</c><00:09:30.880><c> basically</c><00:09:31.279><c> if</c><00:09:31.360><c> we</c><00:09:31.519><c> run</c><00:09:31.680><c> debt</c>

00:09:31.829 --> 00:09:31.839 align:start position:0%
for the and so basically if we run debt
 

00:09:31.839 --> 00:09:33.269 align:start position:0%
for the and so basically if we run debt
for<00:09:32.000><c> search</c><00:09:32.320><c> on</c><00:09:32.480><c> that</c><00:09:32.640><c> neighbor</c><00:09:32.959><c> what</c><00:09:33.120><c> it's</c>

00:09:33.269 --> 00:09:33.279 align:start position:0%
for search on that neighbor what it's
 

00:09:33.279 --> 00:09:35.190 align:start position:0%
for search on that neighbor what it's
going<00:09:33.360><c> to</c><00:09:33.440><c> do</c><00:09:33.680><c> is</c><00:09:33.839><c> it's</c><00:09:34.000><c> going</c><00:09:34.080><c> to</c><00:09:34.160><c> return</c>

00:09:35.190 --> 00:09:35.200 align:start position:0%
going to do is it's going to return
 

00:09:35.200 --> 00:09:37.110 align:start position:0%
going to do is it's going to return
the<00:09:35.440><c> copy</c><00:09:35.760><c> that</c><00:09:35.920><c> we</c><00:09:36.080><c> end</c><00:09:36.240><c> up</c><00:09:36.399><c> creating</c><00:09:36.959><c> and</c>

00:09:37.110 --> 00:09:37.120 align:start position:0%
the copy that we end up creating and
 

00:09:37.120 --> 00:09:39.030 align:start position:0%
the copy that we end up creating and
with<00:09:37.360><c> that</c><00:09:37.760><c> copy</c><00:09:38.080><c> what</c><00:09:38.320><c> am</c><00:09:38.480><c> i</c><00:09:38.560><c> going</c><00:09:38.640><c> to</c><00:09:38.720><c> do</c>

00:09:39.030 --> 00:09:39.040 align:start position:0%
with that copy what am i going to do
 

00:09:39.040 --> 00:09:41.670 align:start position:0%
with that copy what am i going to do
i'm<00:09:39.120><c> going</c><00:09:39.279><c> to</c><00:09:39.360><c> take</c><00:09:39.600><c> this</c><00:09:39.839><c> old</c><00:09:40.160><c> node</c><00:09:40.800><c> or</c><00:09:41.440><c> this</c>

00:09:41.670 --> 00:09:41.680 align:start position:0%
i'm going to take this old node or this
 

00:09:41.680 --> 00:09:43.509 align:start position:0%
i'm going to take this old node or this
new<00:09:41.920><c> node</c><00:09:42.240><c> the</c><00:09:42.320><c> copy</c><00:09:42.720><c> that</c><00:09:42.800><c> we</c><00:09:43.040><c> made</c>

00:09:43.509 --> 00:09:43.519 align:start position:0%
new node the copy that we made
 

00:09:43.519 --> 00:09:45.269 align:start position:0%
new node the copy that we made
and<00:09:43.760><c> i'm</c><00:09:43.920><c> going</c><00:09:44.000><c> to</c><00:09:44.160><c> take</c><00:09:44.399><c> its</c><00:09:44.800><c> list</c><00:09:45.120><c> of</c>

00:09:45.269 --> 00:09:45.279 align:start position:0%
and i'm going to take its list of
 

00:09:45.279 --> 00:09:46.710 align:start position:0%
and i'm going to take its list of
neighbors

00:09:46.710 --> 00:09:46.720 align:start position:0%
neighbors
 

00:09:46.720 --> 00:09:49.350 align:start position:0%
neighbors
and<00:09:47.040><c> i'm</c><00:09:47.200><c> going</c><00:09:47.360><c> to</c><00:09:47.519><c> append</c><00:09:48.480><c> to</c><00:09:48.720><c> that</c><00:09:48.959><c> list</c><00:09:49.200><c> of</c>

00:09:49.350 --> 00:09:49.360 align:start position:0%
and i'm going to append to that list of
 

00:09:49.360 --> 00:09:50.230 align:start position:0%
and i'm going to append to that list of
neighbors

00:09:50.230 --> 00:09:50.240 align:start position:0%
neighbors
 

00:09:50.240 --> 00:09:52.710 align:start position:0%
neighbors
this<00:09:51.120><c> uh</c><00:09:51.279><c> the</c><00:09:51.440><c> return</c><00:09:51.839><c> statement</c><00:09:52.240><c> from</c><00:09:52.480><c> this</c>

00:09:52.710 --> 00:09:52.720 align:start position:0%
this uh the return statement from this
 

00:09:52.720 --> 00:09:53.910 align:start position:0%
this uh the return statement from this
debt<00:09:52.880><c> first</c><00:09:53.120><c> search</c><00:09:53.440><c> call</c>

00:09:53.910 --> 00:09:53.920 align:start position:0%
debt first search call
 

00:09:53.920 --> 00:09:57.430 align:start position:0%
debt first search call
so<00:09:54.320><c> let's</c><00:09:54.560><c> copy</c><00:09:54.880><c> and</c><00:09:54.959><c> paste</c><00:09:55.279><c> that</c><00:09:55.519><c> in</c><00:09:55.760><c> here</c><00:09:56.640><c> so</c>

00:09:57.430 --> 00:09:57.440 align:start position:0%
so let's copy and paste that in here so
 

00:09:57.440 --> 00:09:59.430 align:start position:0%
so let's copy and paste that in here so
that's<00:09:57.760><c> all</c><00:09:58.000><c> i</c><00:09:58.080><c> really</c><00:09:58.560><c> really</c><00:09:58.880><c> need</c><00:09:59.040><c> to</c><00:09:59.120><c> do</c>

00:09:59.430 --> 00:09:59.440 align:start position:0%
that's all i really really need to do
 

00:09:59.440 --> 00:10:00.630 align:start position:0%
that's all i really really need to do
depth<00:09:59.680><c> first</c><00:09:59.920><c> search</c>

00:10:00.630 --> 00:10:00.640 align:start position:0%
depth first search
 

00:10:00.640 --> 00:10:03.350 align:start position:0%
depth first search
and<00:10:00.959><c> add</c><00:10:01.200><c> it</c><00:10:01.440><c> to</c><00:10:01.839><c> the</c><00:10:02.160><c> neighbors</c><00:10:02.640><c> of</c><00:10:02.800><c> this</c><00:10:03.040><c> copy</c>

00:10:03.350 --> 00:10:03.360 align:start position:0%
and add it to the neighbors of this copy
 

00:10:03.360 --> 00:10:03.990 align:start position:0%
and add it to the neighbors of this copy
that<00:10:03.519><c> we</c><00:10:03.600><c> just</c>

00:10:03.990 --> 00:10:04.000 align:start position:0%
that we just
 

00:10:04.000 --> 00:10:07.030 align:start position:0%
that we just
made<00:10:04.720><c> and</c><00:10:04.959><c> once</c><00:10:05.279><c> we're</c><00:10:05.519><c> done</c><00:10:05.839><c> making</c><00:10:06.320><c> all</c>

00:10:07.030 --> 00:10:07.040 align:start position:0%
made and once we're done making all
 

00:10:07.040 --> 00:10:08.870 align:start position:0%
made and once we're done making all
the<00:10:07.200><c> copies</c><00:10:07.680><c> of</c><00:10:07.760><c> the</c><00:10:07.920><c> neighbors</c><00:10:08.320><c> then</c><00:10:08.560><c> we</c><00:10:08.640><c> can</c>

00:10:08.870 --> 00:10:08.880 align:start position:0%
the copies of the neighbors then we can
 

00:10:08.880 --> 00:10:11.910 align:start position:0%
the copies of the neighbors then we can
return<00:10:09.519><c> the</c><00:10:09.760><c> copy</c><00:10:10.160><c> that</c><00:10:10.320><c> we</c><00:10:10.560><c> just</c><00:10:10.959><c> made</c><00:10:11.360><c> in</c><00:10:11.519><c> the</c>

00:10:11.910 --> 00:10:11.920 align:start position:0%
return the copy that we just made in the
 

00:10:11.920 --> 00:10:14.710 align:start position:0%
return the copy that we just made in the
current<00:10:12.320><c> function</c><00:10:12.880><c> call</c><00:10:13.760><c> and</c><00:10:14.000><c> it's</c><00:10:14.320><c> actually</c>

00:10:14.710 --> 00:10:14.720 align:start position:0%
current function call and it's actually
 

00:10:14.720 --> 00:10:16.230 align:start position:0%
current function call and it's actually
that<00:10:15.040><c> simple</c><00:10:15.440><c> because</c>

00:10:16.230 --> 00:10:16.240 align:start position:0%
that simple because
 

00:10:16.240 --> 00:10:17.590 align:start position:0%
that simple because
even<00:10:16.399><c> though</c><00:10:16.560><c> this</c><00:10:16.800><c> is</c><00:10:16.959><c> called</c><00:10:17.200><c> that</c><00:10:17.360><c> first</c>

00:10:17.590 --> 00:10:17.600 align:start position:0%
even though this is called that first
 

00:10:17.600 --> 00:10:19.590 align:start position:0%
even though this is called that first
search<00:10:18.000><c> it</c><00:10:18.240><c> might</c><00:10:18.480><c> even</c><00:10:18.720><c> be</c><00:10:18.880><c> better</c><00:10:19.200><c> to</c><00:10:19.360><c> call</c>

00:10:19.590 --> 00:10:19.600 align:start position:0%
search it might even be better to call
 

00:10:19.600 --> 00:10:20.389 align:start position:0%
search it might even be better to call
this<00:10:19.839><c> function</c>

00:10:20.389 --> 00:10:20.399 align:start position:0%
this function
 

00:10:20.399 --> 00:10:23.110 align:start position:0%
this function
clone<00:10:21.200><c> because</c><00:10:21.839><c> cloning</c><00:10:22.399><c> is</c><00:10:22.560><c> basically</c><00:10:22.959><c> what</c>

00:10:23.110 --> 00:10:23.120 align:start position:0%
clone because cloning is basically what
 

00:10:23.120 --> 00:10:24.630 align:start position:0%
clone because cloning is basically what
we're<00:10:23.279><c> doing</c><00:10:23.440><c> we're</c><00:10:23.680><c> taking</c><00:10:23.920><c> the</c><00:10:24.079><c> original</c>

00:10:24.630 --> 00:10:24.640 align:start position:0%
we're doing we're taking the original
 

00:10:24.640 --> 00:10:26.389 align:start position:0%
we're doing we're taking the original
node<00:10:24.959><c> and</c><00:10:25.120><c> creating</c><00:10:25.600><c> a</c><00:10:25.839><c> clone</c>

00:10:26.389 --> 00:10:26.399 align:start position:0%
node and creating a clone
 

00:10:26.399 --> 00:10:28.949 align:start position:0%
node and creating a clone
of<00:10:26.640><c> that</c><00:10:26.959><c> node</c><00:10:27.600><c> and</c><00:10:27.920><c> we're</c><00:10:28.160><c> cloning</c><00:10:28.640><c> all</c><00:10:28.800><c> of</c>

00:10:28.949 --> 00:10:28.959 align:start position:0%
of that node and we're cloning all of
 

00:10:28.959 --> 00:10:31.110 align:start position:0%
of that node and we're cloning all of
its<00:10:29.279><c> neighbors</c><00:10:29.839><c> recursively</c><00:10:30.720><c> that's</c><00:10:30.959><c> what</c>

00:10:31.110 --> 00:10:31.120 align:start position:0%
its neighbors recursively that's what
 

00:10:31.120 --> 00:10:31.990 align:start position:0%
its neighbors recursively that's what
this<00:10:31.360><c> recursive</c>

00:10:31.990 --> 00:10:32.000 align:start position:0%
this recursive
 

00:10:32.000 --> 00:10:35.110 align:start position:0%
this recursive
call<00:10:32.480><c> is</c><00:10:32.800><c> right</c><00:10:33.600><c> and</c><00:10:33.760><c> then</c><00:10:34.000><c> to</c><00:10:34.560><c> the</c><00:10:34.720><c> neighbors</c>

00:10:35.110 --> 00:10:35.120 align:start position:0%
call is right and then to the neighbors
 

00:10:35.120 --> 00:10:36.550 align:start position:0%
call is right and then to the neighbors
that<00:10:35.279><c> we're</c><00:10:35.440><c> creating</c><00:10:36.079><c> we're</c>

00:10:36.550 --> 00:10:36.560 align:start position:0%
that we're creating we're
 

00:10:36.560 --> 00:10:39.509 align:start position:0%
that we're creating we're
adding<00:10:36.959><c> them</c><00:10:37.200><c> or</c><00:10:37.440><c> appending</c><00:10:38.000><c> them</c><00:10:38.399><c> to</c><00:10:38.720><c> the</c>

00:10:39.509 --> 00:10:39.519 align:start position:0%
adding them or appending them to the
 

00:10:39.519 --> 00:10:41.670 align:start position:0%
adding them or appending them to the
list<00:10:39.920><c> of</c><00:10:40.079><c> neighbors</c><00:10:40.560><c> of</c><00:10:40.720><c> this</c><00:10:41.040><c> node</c>

00:10:41.670 --> 00:10:41.680 align:start position:0%
list of neighbors of this node
 

00:10:41.680 --> 00:10:44.230 align:start position:0%
list of neighbors of this node
and<00:10:41.920><c> so</c><00:10:42.399><c> it's</c><00:10:42.720><c> actually</c><00:10:43.360><c> the</c><00:10:43.680><c> last</c><00:10:43.920><c> thing</c><00:10:44.160><c> to</c>

00:10:44.230 --> 00:10:44.240 align:start position:0%
and so it's actually the last thing to
 

00:10:44.240 --> 00:10:45.670 align:start position:0%
and so it's actually the last thing to
do<00:10:44.399><c> is</c><00:10:44.560><c> easier</c><00:10:44.800><c> than</c><00:10:44.959><c> you</c><00:10:45.040><c> would</c><00:10:45.279><c> think</c><00:10:45.519><c> we're</c>

00:10:45.670 --> 00:10:45.680 align:start position:0%
do is easier than you would think we're
 

00:10:45.680 --> 00:10:45.990 align:start position:0%
do is easier than you would think we're
going<00:10:45.760><c> to</c>

00:10:45.990 --> 00:10:46.000 align:start position:0%
going to
 

00:10:46.000 --> 00:10:48.069 align:start position:0%
going to
call<00:10:46.320><c> debt</c><00:10:46.560><c> for</c><00:10:46.800><c> search</c><00:10:47.360><c> passing</c><00:10:47.839><c> in</c><00:10:47.920><c> the</c>

00:10:48.069 --> 00:10:48.079 align:start position:0%
call debt for search passing in the
 

00:10:48.079 --> 00:10:49.990 align:start position:0%
call debt for search passing in the
original<00:10:48.640><c> node</c><00:10:48.959><c> that</c><00:10:49.040><c> we're</c><00:10:49.279><c> given</c><00:10:49.680><c> in</c><00:10:49.839><c> the</c>

00:10:49.990 --> 00:10:50.000 align:start position:0%
original node that we're given in the
 

00:10:50.000 --> 00:10:51.350 align:start position:0%
original node that we're given in the
original<00:10:50.399><c> function</c><00:10:50.800><c> call</c>

00:10:51.350 --> 00:10:51.360 align:start position:0%
original function call
 

00:10:51.360 --> 00:10:53.190 align:start position:0%
original function call
and<00:10:51.600><c> then</c><00:10:52.079><c> we're</c><00:10:52.320><c> just</c><00:10:52.480><c> going</c><00:10:52.560><c> to</c><00:10:52.640><c> return</c><00:10:53.040><c> the</c>

00:10:53.190 --> 00:10:53.200 align:start position:0%
and then we're just going to return the
 

00:10:53.200 --> 00:10:54.470 align:start position:0%
and then we're just going to return the
result<00:10:53.760><c> of</c><00:10:53.920><c> that</c>

00:10:54.470 --> 00:10:54.480 align:start position:0%
result of that
 

00:10:54.480 --> 00:10:56.230 align:start position:0%
result of that
because<00:10:54.880><c> that's</c><00:10:55.200><c> going</c><00:10:55.360><c> to</c><00:10:55.680><c> give</c><00:10:55.920><c> us</c><00:10:56.079><c> the</c>

00:10:56.230 --> 00:10:56.240 align:start position:0%
because that's going to give us the
 

00:10:56.240 --> 00:10:58.230 align:start position:0%
because that's going to give us the
connected<00:10:56.800><c> graph</c><00:10:57.120><c> it</c><00:10:57.200><c> doesn't</c><00:10:57.519><c> really</c><00:10:57.839><c> matter</c>

00:10:58.230 --> 00:10:58.240 align:start position:0%
connected graph it doesn't really matter
 

00:10:58.240 --> 00:10:58.630 align:start position:0%
connected graph it doesn't really matter
which

00:10:58.630 --> 00:10:58.640 align:start position:0%
which
 

00:10:58.640 --> 00:11:01.269 align:start position:0%
which
node<00:10:58.959><c> we</c><00:10:59.120><c> return</c><00:10:59.600><c> i</c><00:10:59.680><c> think</c><00:11:00.000><c> so</c><00:11:00.640><c> any</c><00:11:00.880><c> node</c><00:11:01.120><c> that</c>

00:11:01.269 --> 00:11:01.279 align:start position:0%
node we return i think so any node that
 

00:11:01.279 --> 00:11:02.230 align:start position:0%
node we return i think so any node that
we<00:11:01.360><c> end</c><00:11:01.519><c> up</c><00:11:01.680><c> returning</c>

00:11:02.230 --> 00:11:02.240 align:start position:0%
we end up returning
 

00:11:02.240 --> 00:11:05.030 align:start position:0%
we end up returning
is<00:11:02.480><c> good</c><00:11:02.880><c> after</c><00:11:03.200><c> the</c><00:11:03.360><c> entire</c><00:11:04.079><c> clone</c><00:11:04.560><c> has</c><00:11:04.720><c> been</c>

00:11:05.030 --> 00:11:05.040 align:start position:0%
is good after the entire clone has been
 

00:11:05.040 --> 00:11:05.670 align:start position:0%
is good after the entire clone has been
made

00:11:05.670 --> 00:11:05.680 align:start position:0%
made
 

00:11:05.680 --> 00:11:08.790 align:start position:0%
made
oh<00:11:06.000><c> and</c><00:11:06.320><c> one</c><00:11:06.560><c> last</c><00:11:06.800><c> thing</c><00:11:07.440><c> we</c><00:11:08.160><c> forgot</c><00:11:08.480><c> to</c><00:11:08.560><c> check</c>

00:11:08.790 --> 00:11:08.800 align:start position:0%
oh and one last thing we forgot to check
 

00:11:08.800 --> 00:11:10.550 align:start position:0%
oh and one last thing we forgot to check
one<00:11:09.040><c> edge</c><00:11:09.279><c> case</c><00:11:09.519><c> the</c><00:11:09.680><c> original</c><00:11:10.160><c> node</c><00:11:10.399><c> that</c>

00:11:10.550 --> 00:11:10.560 align:start position:0%
one edge case the original node that
 

00:11:10.560 --> 00:11:11.590 align:start position:0%
one edge case the original node that
we're<00:11:10.720><c> given</c><00:11:11.040><c> could</c><00:11:11.279><c> be</c>

00:11:11.590 --> 00:11:11.600 align:start position:0%
we're given could be
 

00:11:11.600 --> 00:11:14.870 align:start position:0%
we're given could be
null<00:11:12.000><c> so</c><00:11:12.880><c> if</c><00:11:14.160><c> the</c><00:11:14.399><c> node</c>

00:11:14.870 --> 00:11:14.880 align:start position:0%
null so if the node
 

00:11:14.880 --> 00:11:16.470 align:start position:0%
null so if the node
is<00:11:15.120><c> non-null</c><00:11:15.680><c> then</c><00:11:15.920><c> we're</c><00:11:16.079><c> going</c><00:11:16.160><c> to</c><00:11:16.240><c> call</c>

00:11:16.470 --> 00:11:16.480 align:start position:0%
is non-null then we're going to call
 

00:11:16.480 --> 00:11:18.150 align:start position:0%
is non-null then we're going to call
this<00:11:16.640><c> function</c><00:11:17.040><c> return</c><00:11:17.440><c> the</c><00:11:17.519><c> result</c>

00:11:18.150 --> 00:11:18.160 align:start position:0%
this function return the result
 

00:11:18.160 --> 00:11:20.550 align:start position:0%
this function return the result
else<00:11:18.640><c> if</c><00:11:18.959><c> the</c><00:11:19.120><c> node</c><00:11:19.440><c> is</c><00:11:19.680><c> null</c><00:11:20.000><c> we'll</c><00:11:20.320><c> just</c>

00:11:20.550 --> 00:11:20.560 align:start position:0%
else if the node is null we'll just
 

00:11:20.560 --> 00:11:21.350 align:start position:0%
else if the node is null we'll just
return

00:11:21.350 --> 00:11:21.360 align:start position:0%
return
 

00:11:21.360 --> 00:11:24.550 align:start position:0%
return
null<00:11:22.320><c> so</c><00:11:22.800><c> with</c><00:11:23.040><c> that</c><00:11:23.279><c> being</c><00:11:23.600><c> said</c><00:11:24.240><c> this</c>

00:11:24.550 --> 00:11:24.560 align:start position:0%
null so with that being said this
 

00:11:24.560 --> 00:11:25.110 align:start position:0%
null so with that being said this
function

00:11:25.110 --> 00:11:25.120 align:start position:0%
function
 

00:11:25.120 --> 00:11:27.670 align:start position:0%
function
should<00:11:25.440><c> work</c><00:11:26.000><c> and</c><00:11:26.240><c> there</c><00:11:26.399><c> you</c><00:11:26.560><c> go</c><00:11:26.959><c> it's</c><00:11:27.279><c> pretty</c>

00:11:27.670 --> 00:11:27.680 align:start position:0%
should work and there you go it's pretty
 

00:11:27.680 --> 00:11:28.949 align:start position:0%
should work and there you go it's pretty
efficient<00:11:28.240><c> even</c><00:11:28.480><c> though</c>

00:11:28.949 --> 00:11:28.959 align:start position:0%
efficient even though
 

00:11:28.959 --> 00:11:31.030 align:start position:0%
efficient even though
this<00:11:29.360><c> indication</c><00:11:30.079><c> makes</c><00:11:30.320><c> it</c><00:11:30.480><c> seem</c><00:11:30.720><c> like</c><00:11:30.880><c> it's</c>

00:11:31.030 --> 00:11:31.040 align:start position:0%
this indication makes it seem like it's
 

00:11:31.040 --> 00:11:32.790 align:start position:0%
this indication makes it seem like it's
not<00:11:31.279><c> i</c><00:11:31.360><c> think</c><00:11:31.519><c> if</c><00:11:31.680><c> i</c><00:11:31.760><c> ran</c><00:11:32.000><c> it</c><00:11:32.079><c> one</c><00:11:32.320><c> more</c><00:11:32.480><c> time</c><00:11:32.720><c> it</c>

00:11:32.790 --> 00:11:32.800 align:start position:0%
not i think if i ran it one more time it
 

00:11:32.800 --> 00:11:34.630 align:start position:0%
not i think if i ran it one more time it
would<00:11:32.959><c> probably</c><00:11:33.200><c> be</c><00:11:33.360><c> closer</c><00:11:33.760><c> to</c><00:11:33.920><c> like</c><00:11:34.160><c> 50</c><00:11:34.480><c> or</c>

00:11:34.630 --> 00:11:34.640 align:start position:0%
would probably be closer to like 50 or
 

00:11:34.640 --> 00:11:36.230 align:start position:0%
would probably be closer to like 50 or
60<00:11:34.959><c> percent</c>

00:11:36.230 --> 00:11:36.240 align:start position:0%
60 percent
 

00:11:36.240 --> 00:11:38.630 align:start position:0%
60 percent
but<00:11:36.560><c> i</c><00:11:36.800><c> hope</c><00:11:37.040><c> this</c><00:11:37.200><c> was</c><00:11:37.440><c> helpful</c><00:11:38.320><c> if</c><00:11:38.399><c> you</c>

00:11:38.630 --> 00:11:38.640 align:start position:0%
but i hope this was helpful if you
 

00:11:38.640 --> 00:11:39.269 align:start position:0%
but i hope this was helpful if you
enjoyed

00:11:39.269 --> 00:11:39.279 align:start position:0%
enjoyed
 

00:11:39.279 --> 00:11:41.030 align:start position:0%
enjoyed
please<00:11:39.519><c> like</c><00:11:39.839><c> and</c><00:11:39.920><c> subscribe</c><00:11:40.480><c> it</c><00:11:40.560><c> supports</c>

00:11:41.030 --> 00:11:41.040 align:start position:0%
please like and subscribe it supports
 

00:11:41.040 --> 00:11:43.509 align:start position:0%
please like and subscribe it supports
the<00:11:41.200><c> channel</c><00:11:41.680><c> a</c><00:11:41.920><c> lot</c><00:11:42.320><c> and</c><00:11:42.480><c> i'll</c><00:11:42.720><c> hopefully</c>

00:11:43.509 --> 00:11:43.519 align:start position:0%
the channel a lot and i'll hopefully
 

00:11:43.519 --> 00:11:49.360 align:start position:0%
the channel a lot and i'll hopefully
see<00:11:43.680><c> you</c><00:11:43.839><c> pretty</c><00:11:46.360><c> soon</c>

