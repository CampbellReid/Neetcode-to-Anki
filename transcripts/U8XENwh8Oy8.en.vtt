WEBVTT
Kind: captions
Language: en

00:00:00.030 --> 00:00:03.020 align:start position:0%
 
okay<00:00:00.570><c> let's</c><00:00:00.840><c> solve</c><00:00:01.140><c> leak</c><00:00:01.439><c> code</c><00:00:01.680><c> 33</c><00:00:02.159><c> search</c><00:00:02.790><c> and</c>

00:00:03.020 --> 00:00:03.030 align:start position:0%
okay let's solve leak code 33 search and
 

00:00:03.030 --> 00:00:04.519 align:start position:0%
okay let's solve leak code 33 search and
rotated<00:00:03.600><c> sorted</c><00:00:03.990><c> array</c>

00:00:04.519 --> 00:00:04.529 align:start position:0%
rotated sorted array
 

00:00:04.529 --> 00:00:06.289 align:start position:0%
rotated sorted array
so<00:00:04.680><c> we're</c><00:00:04.890><c> basically</c><00:00:05.040><c> given</c><00:00:05.730><c> an</c><00:00:05.819><c> array</c><00:00:05.940><c> that</c>

00:00:06.289 --> 00:00:06.299 align:start position:0%
so we're basically given an array that
 

00:00:06.299 --> 00:00:08.960 align:start position:0%
so we're basically given an array that
was<00:00:06.420><c> originally</c><00:00:07.080><c> sorted</c><00:00:07.560><c> like</c><00:00:07.710><c> this</c><00:00:08.010><c> one</c><00:00:08.250><c> but</c>

00:00:08.960 --> 00:00:08.970 align:start position:0%
was originally sorted like this one but
 

00:00:08.970 --> 00:00:11.450 align:start position:0%
was originally sorted like this one but
it<00:00:09.090><c> then</c><00:00:09.300><c> it</c><00:00:09.450><c> became</c><00:00:09.780><c> rotated</c><00:00:10.590><c> like</c><00:00:10.800><c> this</c><00:00:11.040><c> one</c>

00:00:11.450 --> 00:00:11.460 align:start position:0%
it then it became rotated like this one
 

00:00:11.460 --> 00:00:13.730 align:start position:0%
it then it became rotated like this one
and<00:00:11.550><c> by</c><00:00:12.059><c> rotated</c><00:00:12.719><c> they</c><00:00:12.900><c> mean</c><00:00:13.170><c> that</c><00:00:13.380><c> they</c><00:00:13.500><c> took</c>

00:00:13.730 --> 00:00:13.740 align:start position:0%
and by rotated they mean that they took
 

00:00:13.740 --> 00:00:16.730 align:start position:0%
and by rotated they mean that they took
a<00:00:13.980><c> certain</c><00:00:14.340><c> pivot</c><00:00:15.150><c> or</c><00:00:15.440><c> index</c><00:00:16.440><c> of</c><00:00:16.619><c> the</c><00:00:16.710><c> array</c>

00:00:16.730 --> 00:00:16.740 align:start position:0%
a certain pivot or index of the array
 

00:00:16.740 --> 00:00:19.130 align:start position:0%
a certain pivot or index of the array
like<00:00:17.550><c> right</c><00:00:17.760><c> over</c><00:00:17.789><c> here</c><00:00:18.300><c> and</c><00:00:18.449><c> then</c><00:00:18.720><c> they</c><00:00:18.869><c> cut</c>

00:00:19.130 --> 00:00:19.140 align:start position:0%
like right over here and then they cut
 

00:00:19.140 --> 00:00:20.450 align:start position:0%
like right over here and then they cut
it<00:00:19.170><c> in</c><00:00:19.350><c> half</c><00:00:19.529><c> and</c><00:00:19.770><c> then</c><00:00:19.800><c> swap</c><00:00:20.189><c> through</c><00:00:20.369><c> the</c>

00:00:20.450 --> 00:00:20.460 align:start position:0%
it in half and then swap through the
 

00:00:20.460 --> 00:00:21.859 align:start position:0%
it in half and then swap through the
portions<00:00:20.880><c> right</c><00:00:21.090><c> so</c><00:00:21.210><c> you</c><00:00:21.270><c> can</c><00:00:21.480><c> basically</c>

00:00:21.859 --> 00:00:21.869 align:start position:0%
portions right so you can basically
 

00:00:21.869 --> 00:00:24.920 align:start position:0%
portions right so you can basically
think<00:00:22.350><c> of</c><00:00:22.529><c> this</c><00:00:22.740><c> right-hand</c><00:00:23.670><c> portion</c><00:00:23.970><c> being</c>

00:00:24.920 --> 00:00:24.930 align:start position:0%
think of this right-hand portion being
 

00:00:24.930 --> 00:00:27.650 align:start position:0%
think of this right-hand portion being
swapped<00:00:25.560><c> over</c><00:00:25.890><c> to</c><00:00:26.640><c> the</c><00:00:26.730><c> left</c><00:00:27.000><c> side</c><00:00:27.210><c> over</c><00:00:27.240><c> here</c>

00:00:27.650 --> 00:00:27.660 align:start position:0%
swapped over to the left side over here
 

00:00:27.660 --> 00:00:29.810 align:start position:0%
swapped over to the left side over here
right<00:00:27.810><c> that's</c><00:00:28.050><c> what</c><00:00:28.740><c> happened</c><00:00:29.160><c> as</c><00:00:29.340><c> you</c><00:00:29.670><c> can</c>

00:00:29.810 --> 00:00:29.820 align:start position:0%
right that's what happened as you can
 

00:00:29.820 --> 00:00:34.790 align:start position:0%
right that's what happened as you can
see<00:00:30.090><c> here</c><00:00:31.700><c> right</c><00:00:32.700><c> these</c><00:00:32.910><c> two</c><00:00:33.180><c> halves</c><00:00:33.570><c> were</c><00:00:33.989><c> put</c>

00:00:34.790 --> 00:00:34.800 align:start position:0%
see here right these two halves were put
 

00:00:34.800 --> 00:00:36.770 align:start position:0%
see here right these two halves were put
in<00:00:34.920><c> the</c><00:00:35.190><c> opposites</c><00:00:35.640><c> position</c><00:00:36.120><c> and</c><00:00:36.329><c> we're</c><00:00:36.600><c> also</c>

00:00:36.770 --> 00:00:36.780 align:start position:0%
in the opposites position and we're also
 

00:00:36.780 --> 00:00:38.840 align:start position:0%
in the opposites position and we're also
given<00:00:37.140><c> a</c><00:00:37.350><c> target</c><00:00:37.800><c> value</c><00:00:37.950><c> in</c><00:00:38.309><c> this</c><00:00:38.460><c> example</c>

00:00:38.840 --> 00:00:38.850 align:start position:0%
given a target value in this example
 

00:00:38.850 --> 00:00:41.889 align:start position:0%
given a target value in this example
target<00:00:39.629><c> zero</c><00:00:39.899><c> and</c><00:00:40.320><c> we</c><00:00:40.440><c> want</c><00:00:40.649><c> to</c><00:00:40.739><c> check</c><00:00:41.040><c> if</c><00:00:41.370><c> our</c>

00:00:41.889 --> 00:00:41.899 align:start position:0%
target zero and we want to check if our
 

00:00:41.899 --> 00:00:45.619 align:start position:0%
target zero and we want to check if our
array<00:00:42.899><c> contains</c><00:00:43.680><c> this</c><00:00:44.070><c> value</c><00:00:44.670><c> if</c><00:00:44.910><c> it</c><00:00:45.180><c> does</c><00:00:45.390><c> we</c>

00:00:45.619 --> 00:00:45.629 align:start position:0%
array contains this value if it does we
 

00:00:45.629 --> 00:00:48.770 align:start position:0%
array contains this value if it does we
return<00:00:45.960><c> the</c><00:00:46.079><c> index</c><00:00:46.289><c> if</c><00:00:46.940><c> it</c><00:00:47.940><c> doesn't</c><00:00:48.329><c> we</c><00:00:48.450><c> return</c>

00:00:48.770 --> 00:00:48.780 align:start position:0%
return the index if it doesn't we return
 

00:00:48.780 --> 00:00:51.139 align:start position:0%
return the index if it doesn't we return
negative<00:00:49.170><c> one</c><00:00:49.430><c> the</c><00:00:50.430><c> most</c><00:00:50.670><c> straightforward</c>

00:00:51.139 --> 00:00:51.149 align:start position:0%
negative one the most straightforward
 

00:00:51.149 --> 00:00:52.910 align:start position:0%
negative one the most straightforward
way<00:00:51.629><c> to</c><00:00:51.780><c> approach</c><00:00:52.199><c> this</c><00:00:52.410><c> problem</c><00:00:52.530><c> is</c>

00:00:52.910 --> 00:00:52.920 align:start position:0%
way to approach this problem is
 

00:00:52.920 --> 00:00:54.889 align:start position:0%
way to approach this problem is
literally<00:00:53.340><c> just</c><00:00:53.579><c> check</c><00:00:53.850><c> every</c><00:00:54.239><c> single</c><00:00:54.390><c> value</c>

00:00:54.889 --> 00:00:54.899 align:start position:0%
literally just check every single value
 

00:00:54.899 --> 00:00:57.200 align:start position:0%
literally just check every single value
is<00:00:55.140><c> this</c><00:00:55.410><c> our</c><00:00:55.590><c> target</c><00:00:56.039><c> is</c><00:00:56.250><c> this</c><00:00:56.610><c> our</c><00:00:56.760><c> target</c>

00:00:57.200 --> 00:00:57.210 align:start position:0%
is this our target is this our target
 

00:00:57.210 --> 00:00:59.360 align:start position:0%
is this our target is this our target
and<00:00:57.390><c> eventually</c><00:00:58.260><c> we</c><00:00:58.410><c> get</c><00:00:58.620><c> here</c><00:00:58.890><c> this</c><00:00:59.070><c> is</c><00:00:59.250><c> our</c>

00:00:59.360 --> 00:00:59.370 align:start position:0%
and eventually we get here this is our
 

00:00:59.370 --> 00:01:01.369 align:start position:0%
and eventually we get here this is our
target<00:00:59.760><c> and</c><00:00:59.910><c> then</c><00:01:00.059><c> we</c><00:01:00.239><c> return</c><00:01:00.600><c> the</c><00:01:00.629><c> index</c><00:01:01.109><c> for</c>

00:01:01.369 --> 00:01:01.379 align:start position:0%
target and then we return the index for
 

00:01:01.379 --> 00:01:03.500 align:start position:0%
target and then we return the index for
now<00:01:01.859><c> this</c><00:01:02.070><c> is</c><00:01:02.219><c> just</c><00:01:02.460><c> too</c><00:01:02.730><c> trivial</c><00:01:03.300><c> of</c><00:01:03.420><c> a</c>

00:01:03.500 --> 00:01:03.510 align:start position:0%
now this is just too trivial of a
 

00:01:03.510 --> 00:01:06.109 align:start position:0%
now this is just too trivial of a
solution<00:01:03.840><c> right</c><00:01:04.260><c> the</c><00:01:04.890><c> time</c><00:01:05.129><c> complexity</c><00:01:05.610><c> isn't</c>

00:01:06.109 --> 00:01:06.119 align:start position:0%
solution right the time complexity isn't
 

00:01:06.119 --> 00:01:09.920 align:start position:0%
solution right the time complexity isn't
bad<00:01:06.390><c> it's</c><00:01:06.720><c> o</c><00:01:06.900><c> of</c><00:01:06.930><c> n</c><00:01:07.610><c> but</c><00:01:08.610><c> can</c><00:01:09.090><c> we</c><00:01:09.240><c> do</c><00:01:09.390><c> better</c><00:01:09.630><c> in</c>

00:01:09.920 --> 00:01:09.930 align:start position:0%
bad it's o of n but can we do better in
 

00:01:09.930 --> 00:01:11.840 align:start position:0%
bad it's o of n but can we do better in
this<00:01:10.350><c> problem</c><00:01:10.619><c> they</c><00:01:10.890><c> literally</c><00:01:11.220><c> tell</c><00:01:11.490><c> us</c><00:01:11.670><c> to</c>

00:01:11.840 --> 00:01:11.850 align:start position:0%
this problem they literally tell us to
 

00:01:11.850 --> 00:01:14.330 align:start position:0%
this problem they literally tell us to
find<00:01:12.060><c> a</c><00:01:12.150><c> solution</c><00:01:12.180><c> and</c><00:01:12.840><c> that's</c><00:01:13.290><c> of</c><00:01:13.500><c> log</c><00:01:13.860><c> n</c><00:01:14.100><c> so</c>

00:01:14.330 --> 00:01:14.340 align:start position:0%
find a solution and that's of log n so
 

00:01:14.340 --> 00:01:16.850 align:start position:0%
find a solution and that's of log n so
obviously<00:01:14.850><c> we</c><00:01:15.060><c> can</c><00:01:15.090><c> and</c><00:01:15.570><c> basically</c><00:01:16.110><c> anytime</c>

00:01:16.850 --> 00:01:16.860 align:start position:0%
obviously we can and basically anytime
 

00:01:16.860 --> 00:01:18.980 align:start position:0%
obviously we can and basically anytime
you're<00:01:17.250><c> looking</c><00:01:17.280><c> for</c><00:01:17.850><c> a</c><00:01:17.880><c> solution</c><00:01:18.119><c> that's</c><00:01:18.570><c> log</c>

00:01:18.980 --> 00:01:18.990 align:start position:0%
you're looking for a solution that's log
 

00:01:18.990 --> 00:01:21.620 align:start position:0%
you're looking for a solution that's log
N<00:01:19.259><c> or</c><00:01:19.530><c> better</c><00:01:20.250><c> than</c><00:01:20.490><c> linear</c><00:01:20.700><c> almost</c><00:01:21.330><c> every</c>

00:01:21.620 --> 00:01:21.630 align:start position:0%
N or better than linear almost every
 

00:01:21.630 --> 00:01:22.969 align:start position:0%
N or better than linear almost every
time<00:01:21.840><c> you're</c><00:01:22.020><c> going</c><00:01:22.140><c> to</c><00:01:22.200><c> be</c><00:01:22.320><c> looking</c><00:01:22.710><c> for</c><00:01:22.950><c> a</c>

00:01:22.969 --> 00:01:22.979 align:start position:0%
time you're going to be looking for a
 

00:01:22.979 --> 00:01:25.700 align:start position:0%
time you're going to be looking for a
binary<00:01:23.340><c> search</c><00:01:23.850><c> type</c><00:01:24.299><c> solution</c><00:01:24.990><c> so</c><00:01:25.350><c> since</c>

00:01:25.700 --> 00:01:25.710 align:start position:0%
binary search type solution so since
 

00:01:25.710 --> 00:01:28.160 align:start position:0%
binary search type solution so since
this<00:01:25.890><c> array</c><00:01:26.220><c> was</c><00:01:26.520><c> originally</c><00:01:27.270><c> rotated</c><00:01:27.840><c> can</c><00:01:28.049><c> we</c>

00:01:28.160 --> 00:01:28.170 align:start position:0%
this array was originally rotated can we
 

00:01:28.170 --> 00:01:30.499 align:start position:0%
this array was originally rotated can we
use<00:01:28.470><c> that</c><00:01:28.500><c> to</c><00:01:28.920><c> our</c><00:01:28.950><c> advantage</c><00:01:29.070><c> to</c><00:01:29.880><c> potentially</c>

00:01:30.499 --> 00:01:30.509 align:start position:0%
use that to our advantage to potentially
 

00:01:30.509 --> 00:01:33.080 align:start position:0%
use that to our advantage to potentially
find<00:01:30.540><c> a</c><00:01:31.110><c> binary</c><00:01:31.409><c> search</c><00:01:31.829><c> type</c><00:01:32.220><c> solution</c><00:01:32.850><c> for</c>

00:01:33.080 --> 00:01:33.090 align:start position:0%
find a binary search type solution for
 

00:01:33.090 --> 00:01:35.120 align:start position:0%
find a binary search type solution for
this<00:01:33.210><c> problem</c><00:01:33.390><c> let's</c><00:01:33.900><c> try</c><00:01:34.200><c> to</c><00:01:34.259><c> analyze</c><00:01:34.799><c> it</c><00:01:34.829><c> and</c>

00:01:35.120 --> 00:01:35.130 align:start position:0%
this problem let's try to analyze it and
 

00:01:35.130 --> 00:01:37.429 align:start position:0%
this problem let's try to analyze it and
see<00:01:35.250><c> what</c><00:01:35.670><c> we</c><00:01:35.820><c> can</c><00:01:35.970><c> find</c><00:01:36.210><c> so</c><00:01:36.689><c> given</c><00:01:37.170><c> that</c><00:01:37.200><c> the</c>

00:01:37.429 --> 00:01:37.439 align:start position:0%
see what we can find so given that the
 

00:01:37.439 --> 00:01:39.350 align:start position:0%
see what we can find so given that the
original<00:01:37.920><c> array</c><00:01:38.189><c> was</c><00:01:38.369><c> sorted</c><00:01:38.400><c> if</c><00:01:38.970><c> we</c><00:01:39.090><c> wanted</c>

00:01:39.350 --> 00:01:39.360 align:start position:0%
original array was sorted if we wanted
 

00:01:39.360 --> 00:01:41.390 align:start position:0%
original array was sorted if we wanted
to<00:01:39.420><c> represent</c><00:01:39.659><c> that</c><00:01:40.170><c> as</c><00:01:40.350><c> a</c><00:01:40.380><c> graph</c><00:01:40.799><c> we</c><00:01:41.250><c> would</c>

00:01:41.390 --> 00:01:41.400 align:start position:0%
to represent that as a graph we would
 

00:01:41.400 --> 00:01:44.480 align:start position:0%
to represent that as a graph we would
basically<00:01:41.670><c> have</c><00:01:42.060><c> a</c><00:01:42.540><c> continuously</c><00:01:43.490><c> increasing</c>

00:01:44.480 --> 00:01:44.490 align:start position:0%
basically have a continuously increasing
 

00:01:44.490 --> 00:01:46.550 align:start position:0%
basically have a continuously increasing
line<00:01:44.729><c> it</c><00:01:44.970><c> might</c><00:01:45.119><c> not</c><00:01:45.299><c> necessarily</c><00:01:45.479><c> be</c><00:01:45.990><c> linear</c>

00:01:46.550 --> 00:01:46.560 align:start position:0%
line it might not necessarily be linear
 

00:01:46.560 --> 00:01:48.350 align:start position:0%
line it might not necessarily be linear
but<00:01:46.710><c> it</c><00:01:46.829><c> would</c><00:01:46.920><c> always</c><00:01:47.130><c> be</c><00:01:47.310><c> increasing</c><00:01:48.149><c> right</c>

00:01:48.350 --> 00:01:48.360 align:start position:0%
but it would always be increasing right
 

00:01:48.360 --> 00:01:50.780 align:start position:0%
but it would always be increasing right
and<00:01:48.570><c> then</c><00:01:48.990><c> we</c><00:01:49.140><c> took</c><00:01:49.350><c> some</c><00:01:49.409><c> pivot</c><00:01:50.070><c> like</c><00:01:50.520><c> over</c>

00:01:50.780 --> 00:01:50.790 align:start position:0%
and then we took some pivot like over
 

00:01:50.790 --> 00:01:53.480 align:start position:0%
and then we took some pivot like over
here<00:01:51.180><c> and</c><00:01:51.360><c> then</c><00:01:52.200><c> swapped</c><00:01:52.740><c> these</c><00:01:53.100><c> halves</c>

00:01:53.480 --> 00:01:53.490 align:start position:0%
here and then swapped these halves
 

00:01:53.490 --> 00:01:55.789 align:start position:0%
here and then swapped these halves
around<00:01:54.149><c> right</c><00:01:54.509><c> so</c><00:01:55.020><c> let's</c><00:01:55.200><c> draw</c><00:01:55.560><c> what</c><00:01:55.770><c> that</c>

00:01:55.789 --> 00:01:55.799 align:start position:0%
around right so let's draw what that
 

00:01:55.799 --> 00:01:59.690 align:start position:0%
around right so let's draw what that
would<00:01:56.219><c> look</c><00:01:56.399><c> like</c><00:01:57.829><c> so</c><00:01:58.829><c> let's</c><00:01:59.070><c> say</c><00:01:59.250><c> the</c><00:01:59.430><c> left</c>

00:01:59.690 --> 00:01:59.700 align:start position:0%
would look like so let's say the left
 

00:01:59.700 --> 00:02:02.330 align:start position:0%
would look like so let's say the left
side<00:02:00.060><c> was</c><00:02:00.540><c> exclusively</c><00:02:01.409><c> greater</c><00:02:01.920><c> than</c><00:02:02.250><c> the</c>

00:02:02.330 --> 00:02:02.340 align:start position:0%
side was exclusively greater than the
 

00:02:02.340 --> 00:02:04.130 align:start position:0%
side was exclusively greater than the
right<00:02:02.549><c> side</c><00:02:02.850><c> because</c><00:02:03.390><c> that's</c><00:02:03.719><c> what</c><00:02:03.899><c> it</c><00:02:03.990><c> means</c>

00:02:04.130 --> 00:02:04.140 align:start position:0%
right side because that's what it means
 

00:02:04.140 --> 00:02:11.960 align:start position:0%
right side because that's what it means
by<00:02:04.610><c> rotating</c><00:02:05.610><c> the</c><00:02:05.850><c> array</c><00:02:06.119><c> right</c>

00:02:11.960 --> 00:02:11.970 align:start position:0%
 
 

00:02:11.970 --> 00:02:14.250 align:start position:0%
 
so<00:02:12.970><c> I</c><00:02:13.000><c> think</c><00:02:13.120><c> this</c><00:02:13.360><c> is</c><00:02:13.420><c> a</c><00:02:13.540><c> pretty</c><00:02:13.810><c> good</c><00:02:14.050><c> way</c><00:02:14.200><c> to</c>

00:02:14.250 --> 00:02:14.260 align:start position:0%
so I think this is a pretty good way to
 

00:02:14.260 --> 00:02:15.750 align:start position:0%
so I think this is a pretty good way to
visualize<00:02:14.800><c> the</c><00:02:14.980><c> problem</c><00:02:15.220><c> to</c><00:02:15.489><c> kind</c><00:02:15.700><c> of</c>

00:02:15.750 --> 00:02:15.760 align:start position:0%
visualize the problem to kind of
 

00:02:15.760 --> 00:02:18.449 align:start position:0%
visualize the problem to kind of
understand<00:02:16.330><c> what</c><00:02:16.870><c> it</c><00:02:17.349><c> would</c><00:02:17.530><c> look</c><00:02:17.860><c> like</c><00:02:18.099><c> and</c>

00:02:18.449 --> 00:02:18.459 align:start position:0%
understand what it would look like and
 

00:02:18.459 --> 00:02:20.100 align:start position:0%
understand what it would look like and
you<00:02:18.489><c> can</c><00:02:18.910><c> use</c><00:02:19.150><c> this</c><00:02:19.330><c> to</c><00:02:19.540><c> your</c><00:02:19.660><c> advantage</c><00:02:19.720><c> to</c>

00:02:20.100 --> 00:02:20.110 align:start position:0%
you can use this to your advantage to
 

00:02:20.110 --> 00:02:22.740 align:start position:0%
you can use this to your advantage to
find<00:02:20.500><c> potential</c><00:02:20.860><c> patterns</c><00:02:21.550><c> that</c><00:02:22.000><c> can</c><00:02:22.209><c> help</c><00:02:22.540><c> us</c>

00:02:22.740 --> 00:02:22.750 align:start position:0%
find potential patterns that can help us
 

00:02:22.750 --> 00:02:25.140 align:start position:0%
find potential patterns that can help us
find<00:02:23.200><c> a</c><00:02:23.349><c> binary</c><00:02:23.590><c> search</c><00:02:23.950><c> solution</c><00:02:24.519><c> so</c><00:02:24.910><c> with</c><00:02:25.090><c> a</c>

00:02:25.140 --> 00:02:25.150 align:start position:0%
find a binary search solution so with a
 

00:02:25.150 --> 00:02:26.670 align:start position:0%
find a binary search solution so with a
problem<00:02:25.420><c> like</c><00:02:25.690><c> this</c><00:02:25.750><c> you</c><00:02:26.170><c> really</c><00:02:26.349><c> have</c><00:02:26.470><c> to</c>

00:02:26.670 --> 00:02:26.680 align:start position:0%
problem like this you really have to
 

00:02:26.680 --> 00:02:29.130 align:start position:0%
problem like this you really have to
break<00:02:26.890><c> it</c><00:02:27.099><c> down</c><00:02:27.280><c> into</c><00:02:27.519><c> discrete</c><00:02:28.180><c> cases</c><00:02:28.870><c> and</c>

00:02:29.130 --> 00:02:29.140 align:start position:0%
break it down into discrete cases and
 

00:02:29.140 --> 00:02:31.470 align:start position:0%
break it down into discrete cases and
then<00:02:29.530><c> use</c><00:02:29.769><c> those</c><00:02:30.010><c> cases</c><00:02:30.610><c> to</c><00:02:30.790><c> form</c><00:02:31.090><c> a</c><00:02:31.209><c> solution</c>

00:02:31.470 --> 00:02:31.480 align:start position:0%
then use those cases to form a solution
 

00:02:31.480 --> 00:02:34.650 align:start position:0%
then use those cases to form a solution
so<00:02:32.140><c> the</c><00:02:32.650><c> most</c><00:02:32.950><c> obvious</c><00:02:33.160><c> thing</c><00:02:34.000><c> is</c><00:02:34.239><c> that</c><00:02:34.269><c> there</c>

00:02:34.650 --> 00:02:34.660 align:start position:0%
so the most obvious thing is that there
 

00:02:34.660 --> 00:02:36.390 align:start position:0%
so the most obvious thing is that there
are<00:02:34.780><c> two</c><00:02:35.049><c> portions</c><00:02:35.590><c> of</c><00:02:35.950><c> the</c><00:02:36.099><c> array</c><00:02:36.370><c> right</c>

00:02:36.390 --> 00:02:36.400 align:start position:0%
are two portions of the array right
 

00:02:36.400 --> 00:02:38.850 align:start position:0%
are two portions of the array right
there's<00:02:36.849><c> a</c><00:02:36.910><c> left</c><00:02:37.390><c> portion</c><00:02:37.810><c> and</c><00:02:38.230><c> a</c><00:02:38.410><c> right</c>

00:02:38.850 --> 00:02:38.860 align:start position:0%
there's a left portion and a right
 

00:02:38.860 --> 00:02:42.479 align:start position:0%
there's a left portion and a right
portion<00:02:39.430><c> both</c><00:02:40.470><c> independently</c><00:02:41.470><c> are</c><00:02:41.799><c> sorted</c>

00:02:42.479 --> 00:02:42.489 align:start position:0%
portion both independently are sorted
 

00:02:42.489 --> 00:02:44.009 align:start position:0%
portion both independently are sorted
right<00:02:42.670><c> so</c><00:02:42.880><c> it's</c><00:02:43.030><c> like</c><00:02:43.150><c> we</c><00:02:43.269><c> have</c><00:02:43.390><c> two</c><00:02:43.660><c> halves</c>

00:02:44.009 --> 00:02:44.019 align:start position:0%
right so it's like we have two halves
 

00:02:44.019 --> 00:02:46.259 align:start position:0%
right so it's like we have two halves
that<00:02:44.260><c> are</c><00:02:44.530><c> sorted</c><00:02:44.980><c> and</c><00:02:45.160><c> so</c><00:02:45.549><c> we</c><00:02:45.760><c> know</c><00:02:46.000><c> that</c><00:02:46.030><c> a</c>

00:02:46.259 --> 00:02:46.269 align:start position:0%
that are sorted and so we know that a
 

00:02:46.269 --> 00:02:49.110 align:start position:0%
that are sorted and so we know that a
binary<00:02:46.630><c> search</c><00:02:47.140><c> usually</c><00:02:48.069><c> has</c><00:02:48.280><c> three</c><00:02:48.310><c> pointers</c>

00:02:49.110 --> 00:02:49.120 align:start position:0%
binary search usually has three pointers
 

00:02:49.120 --> 00:02:53.819 align:start position:0%
binary search usually has three pointers
a<00:02:49.150><c> left</c><00:02:49.630><c> pointer</c><00:02:50.110><c> a</c><00:02:50.340><c> middle</c><00:02:51.340><c> pointer</c><00:02:51.790><c> and</c><00:02:52.829><c> a</c>

00:02:53.819 --> 00:02:53.829 align:start position:0%
a left pointer a middle pointer and a
 

00:02:53.829 --> 00:02:58.680 align:start position:0%
a left pointer a middle pointer and a
right<00:02:54.099><c> pointer</c><00:02:56.190><c> the</c><00:02:57.190><c> left</c><00:02:57.489><c> is</c><00:02:57.730><c> always</c><00:02:58.420><c> going</c>

00:02:58.680 --> 00:02:58.690 align:start position:0%
right pointer the left is always going
 

00:02:58.690 --> 00:03:01.670 align:start position:0%
right pointer the left is always going
to<00:02:58.780><c> be</c><00:02:59.019><c> less</c><00:02:59.379><c> than</c><00:02:59.410><c> or</c><00:02:59.860><c> equal</c><00:03:00.250><c> to</c><00:03:00.549><c> the</c><00:03:01.269><c> right</c>

00:03:01.670 --> 00:03:01.680 align:start position:0%
to be less than or equal to the right
 

00:03:01.680 --> 00:03:04.170 align:start position:0%
to be less than or equal to the right
this<00:03:02.680><c> is</c><00:03:02.739><c> just</c><00:03:03.040><c> something</c><00:03:03.340><c> you</c><00:03:03.489><c> kind</c><00:03:03.819><c> of</c><00:03:03.910><c> know</c>

00:03:04.170 --> 00:03:04.180 align:start position:0%
this is just something you kind of know
 

00:03:04.180 --> 00:03:06.449 align:start position:0%
this is just something you kind of know
from<00:03:04.540><c> binary</c><00:03:04.900><c> search</c><00:03:05.200><c> so</c><00:03:05.530><c> let's</c><00:03:05.860><c> say</c><00:03:06.310><c> our</c>

00:03:06.449 --> 00:03:06.459 align:start position:0%
from binary search so let's say our
 

00:03:06.459 --> 00:03:09.630 align:start position:0%
from binary search so let's say our
middle<00:03:06.970><c> value</c><00:03:07.480><c> was</c><00:03:07.930><c> six</c><00:03:08.349><c> at</c><00:03:08.590><c> some</c><00:03:09.040><c> point</c><00:03:09.370><c> right</c>

00:03:09.630 --> 00:03:09.640 align:start position:0%
middle value was six at some point right
 

00:03:09.640 --> 00:03:12.180 align:start position:0%
middle value was six at some point right
this<00:03:10.329><c> means</c><00:03:10.660><c> that</c><00:03:10.870><c> we're</c><00:03:11.049><c> in</c><00:03:11.140><c> the</c><00:03:11.290><c> left</c><00:03:11.620><c> sorted</c>

00:03:12.180 --> 00:03:12.190 align:start position:0%
this means that we're in the left sorted
 

00:03:12.190 --> 00:03:14.430 align:start position:0%
this means that we're in the left sorted
portion<00:03:12.400><c> of</c><00:03:12.700><c> the</c><00:03:12.819><c> array</c><00:03:13.090><c> so</c><00:03:13.540><c> can</c><00:03:13.840><c> we</c><00:03:13.989><c> use</c><00:03:14.230><c> that</c>

00:03:14.430 --> 00:03:14.440 align:start position:0%
portion of the array so can we use that
 

00:03:14.440 --> 00:03:17.340 align:start position:0%
portion of the array so can we use that
to<00:03:14.620><c> our</c><00:03:14.650><c> advantage</c><00:03:14.850><c> so</c><00:03:15.850><c> let's</c><00:03:16.150><c> say</c><00:03:16.450><c> our</c><00:03:16.480><c> target</c>

00:03:17.340 --> 00:03:17.350 align:start position:0%
to our advantage so let's say our target
 

00:03:17.350 --> 00:03:21.150 align:start position:0%
to our advantage so let's say our target
was<00:03:17.620><c> greater</c><00:03:18.190><c> than</c><00:03:18.790><c> six</c><00:03:19.239><c> in</c><00:03:19.510><c> that</c><00:03:19.620><c> case</c><00:03:20.620><c> we</c>

00:03:21.150 --> 00:03:21.160 align:start position:0%
was greater than six in that case we
 

00:03:21.160 --> 00:03:23.370 align:start position:0%
was greater than six in that case we
know<00:03:21.519><c> for</c><00:03:21.880><c> sure</c><00:03:21.910><c> since</c><00:03:22.660><c> we're</c><00:03:22.840><c> in</c><00:03:22.930><c> the</c><00:03:23.049><c> left</c>

00:03:23.370 --> 00:03:23.380 align:start position:0%
know for sure since we're in the left
 

00:03:23.380 --> 00:03:25.530 align:start position:0%
know for sure since we're in the left
sorted<00:03:23.920><c> portion</c><00:03:24.130><c> of</c><00:03:24.430><c> the</c><00:03:24.549><c> array</c><00:03:24.850><c> none</c><00:03:25.510><c> of</c>

00:03:25.530 --> 00:03:25.540 align:start position:0%
sorted portion of the array none of
 

00:03:25.540 --> 00:03:29.430 align:start position:0%
sorted portion of the array none of
these<00:03:25.959><c> values</c><00:03:26.650><c> are</c><00:03:26.889><c> greater</c><00:03:27.310><c> than</c><00:03:27.579><c> six</c><00:03:28.290><c> so</c><00:03:29.290><c> we</c>

00:03:29.430 --> 00:03:29.440 align:start position:0%
these values are greater than six so we
 

00:03:29.440 --> 00:03:31.830 align:start position:0%
these values are greater than six so we
can<00:03:29.650><c> basically</c><00:03:29.859><c> say</c><00:03:30.579><c> these</c><00:03:30.940><c> are</c><00:03:31.180><c> eliminated</c>

00:03:31.830 --> 00:03:31.840 align:start position:0%
can basically say these are eliminated
 

00:03:31.840 --> 00:03:34.740 align:start position:0%
can basically say these are eliminated
let's<00:03:32.170><c> run</c><00:03:32.410><c> binary</c><00:03:32.889><c> search</c><00:03:33.250><c> on</c><00:03:33.519><c> this</c><00:03:34.209><c> portion</c>

00:03:34.740 --> 00:03:34.750 align:start position:0%
let's run binary search on this portion
 

00:03:34.750 --> 00:03:36.960 align:start position:0%
let's run binary search on this portion
now<00:03:34.930><c> right</c><00:03:35.260><c> so</c><00:03:35.859><c> that's</c><00:03:36.069><c> pretty</c><00:03:36.340><c> easy</c><00:03:36.459><c> if</c><00:03:36.819><c> we</c>

00:03:36.960 --> 00:03:36.970 align:start position:0%
now right so that's pretty easy if we
 

00:03:36.970 --> 00:03:38.430 align:start position:0%
now right so that's pretty easy if we
know<00:03:37.239><c> that</c><00:03:37.480><c> we're</c><00:03:37.630><c> in</c><00:03:37.660><c> the</c><00:03:37.840><c> left</c><00:03:38.079><c> sorted</c>

00:03:38.430 --> 00:03:38.440 align:start position:0%
know that we're in the left sorted
 

00:03:38.440 --> 00:03:40.650 align:start position:0%
know that we're in the left sorted
portion<00:03:38.650><c> and</c><00:03:39.010><c> our</c><00:03:39.489><c> target</c><00:03:39.940><c> is</c><00:03:40.030><c> greater</c><00:03:40.419><c> than</c>

00:03:40.650 --> 00:03:40.660 align:start position:0%
portion and our target is greater than
 

00:03:40.660 --> 00:03:42.539 align:start position:0%
portion and our target is greater than
the<00:03:40.810><c> middle</c><00:03:41.109><c> this</c><00:03:41.500><c> is</c><00:03:41.650><c> what</c><00:03:41.829><c> we</c><00:03:41.919><c> can</c><00:03:42.069><c> do</c>

00:03:42.539 --> 00:03:42.549 align:start position:0%
the middle this is what we can do
 

00:03:42.549 --> 00:03:45.599 align:start position:0%
the middle this is what we can do
what<00:03:43.030><c> if</c><00:03:43.180><c> our</c><00:03:43.470><c> target</c><00:03:44.470><c> is</c><00:03:44.620><c> less</c><00:03:45.160><c> than</c><00:03:45.489><c> the</c>

00:03:45.599 --> 00:03:45.609 align:start position:0%
what if our target is less than the
 

00:03:45.609 --> 00:03:47.940 align:start position:0%
what if our target is less than the
middle<00:03:45.819><c> value</c><00:03:46.120><c> so</c><00:03:46.870><c> what</c><00:03:47.139><c> if</c><00:03:47.230><c> our</c><00:03:47.319><c> target</c><00:03:47.769><c> was</c>

00:03:47.940 --> 00:03:47.950 align:start position:0%
middle value so what if our target was
 

00:03:47.950 --> 00:03:50.490 align:start position:0%
middle value so what if our target was
less<00:03:48.310><c> than</c><00:03:48.549><c> six</c><00:03:48.940><c> well</c><00:03:49.239><c> these</c><00:03:49.569><c> two</c><00:03:49.930><c> numbers</c><00:03:50.319><c> are</c>

00:03:50.490 --> 00:03:50.500 align:start position:0%
less than six well these two numbers are
 

00:03:50.500 --> 00:03:53.190 align:start position:0%
less than six well these two numbers are
less<00:03:50.680><c> than</c><00:03:50.739><c> six</c><00:03:50.980><c> and</c><00:03:51.459><c> these</c><00:03:52.239><c> three</c><00:03:52.780><c> numbers</c>

00:03:53.190 --> 00:03:53.200 align:start position:0%
less than six and these three numbers
 

00:03:53.200 --> 00:03:55.050 align:start position:0%
less than six and these three numbers
are<00:03:53.349><c> less</c><00:03:53.500><c> than</c><00:03:53.560><c> six</c><00:03:53.769><c> so</c><00:03:54.370><c> how</c><00:03:54.639><c> do</c><00:03:54.700><c> we</c><00:03:54.880><c> know</c>

00:03:55.050 --> 00:03:55.060 align:start position:0%
are less than six so how do we know
 

00:03:55.060 --> 00:03:57.030 align:start position:0%
are less than six so how do we know
which<00:03:55.329><c> way</c><00:03:55.569><c> to</c><00:03:55.599><c> go</c><00:03:55.780><c> do</c><00:03:56.049><c> we</c><00:03:56.169><c> go</c><00:03:56.290><c> left</c><00:03:56.620><c> or</c><00:03:56.829><c> do</c><00:03:56.919><c> we</c>

00:03:57.030 --> 00:03:57.040 align:start position:0%
which way to go do we go left or do we
 

00:03:57.040 --> 00:03:58.770 align:start position:0%
which way to go do we go left or do we
go<00:03:57.190><c> right</c><00:03:57.519><c> because</c><00:03:57.880><c> we</c><00:03:58.030><c> can't</c><00:03:58.269><c> go</c><00:03:58.419><c> both</c>

00:03:58.770 --> 00:03:58.780 align:start position:0%
go right because we can't go both
 

00:03:58.780 --> 00:04:01.830 align:start position:0%
go right because we can't go both
directions<00:03:59.319><c> in</c><00:03:59.650><c> a</c><00:03:59.709><c> binary</c><00:03:59.950><c> search</c><00:04:00.400><c> the</c><00:04:01.090><c> key</c><00:04:01.480><c> is</c>

00:04:01.830 --> 00:04:01.840 align:start position:0%
directions in a binary search the key is
 

00:04:01.840 --> 00:04:04.170 align:start position:0%
directions in a binary search the key is
to<00:04:02.290><c> see</c><00:04:02.560><c> that</c><00:04:02.769><c> in</c><00:04:02.950><c> our</c><00:04:03.069><c> left</c><00:04:03.430><c> sorted</c><00:04:03.970><c> portion</c>

00:04:04.170 --> 00:04:04.180 align:start position:0%
to see that in our left sorted portion
 

00:04:04.180 --> 00:04:07.319 align:start position:0%
to see that in our left sorted portion
the<00:04:04.569><c> smallest</c><00:04:05.139><c> value</c><00:04:05.620><c> is</c><00:04:06.099><c> right</c><00:04:06.430><c> here</c><00:04:07.030><c> right</c>

00:04:07.319 --> 00:04:07.329 align:start position:0%
the smallest value is right here right
 

00:04:07.329 --> 00:04:09.780 align:start position:0%
the smallest value is right here right
or<00:04:07.540><c> on</c><00:04:07.720><c> our</c><00:04:07.750><c> graph</c><00:04:08.169><c> it's</c><00:04:08.560><c> right</c><00:04:08.919><c> here</c>

00:04:09.780 --> 00:04:09.790 align:start position:0%
or on our graph it's right here
 

00:04:09.790 --> 00:04:13.379 align:start position:0%
or on our graph it's right here
so<00:04:10.419><c> if</c><00:04:10.840><c> our</c><00:04:11.410><c> target</c><00:04:11.709><c> is</c><00:04:12.069><c> even</c><00:04:12.730><c> smaller</c><00:04:13.239><c> than</c>

00:04:13.379 --> 00:04:13.389 align:start position:0%
so if our target is even smaller than
 

00:04:13.389 --> 00:04:17.879 align:start position:0%
so if our target is even smaller than
this<00:04:13.690><c> left</c><00:04:14.109><c> value</c><00:04:14.739><c> for</c><00:04:15.579><c> in</c><00:04:16.000><c> that</c><00:04:16.570><c> case</c><00:04:16.930><c> we</c><00:04:17.470><c> know</c>

00:04:17.879 --> 00:04:17.889 align:start position:0%
this left value for in that case we know
 

00:04:17.889 --> 00:04:20.459 align:start position:0%
this left value for in that case we know
that<00:04:18.459><c> we</c><00:04:18.579><c> don't</c><00:04:19.000><c> have</c><00:04:19.180><c> to</c><00:04:19.329><c> search</c><00:04:19.599><c> for</c><00:04:20.019><c> we</c>

00:04:20.459 --> 00:04:20.469 align:start position:0%
that we don't have to search for we
 

00:04:20.469 --> 00:04:22.110 align:start position:0%
that we don't have to search for we
don't<00:04:20.680><c> have</c><00:04:20.829><c> to</c><00:04:20.950><c> search</c><00:04:21.130><c> five</c><00:04:21.489><c> we</c><00:04:21.789><c> don't</c><00:04:22.000><c> have</c>

00:04:22.110 --> 00:04:22.120 align:start position:0%
don't have to search five we don't have
 

00:04:22.120 --> 00:04:23.460 align:start position:0%
don't have to search five we don't have
to<00:04:22.240><c> search</c><00:04:22.419><c> six</c><00:04:22.840><c> week</c>

00:04:23.460 --> 00:04:23.470 align:start position:0%
to search six week
 

00:04:23.470 --> 00:04:31.470 align:start position:0%
to search six week
binarysearch<00:04:24.430><c> over</c><00:04:24.880><c> here</c><00:04:29.610><c> but</c><00:04:30.610><c> if</c><00:04:30.850><c> our</c><00:04:31.060><c> value</c>

00:04:31.470 --> 00:04:31.480 align:start position:0%
binarysearch over here but if our value
 

00:04:31.480 --> 00:04:34.740 align:start position:0%
binarysearch over here but if our value
is<00:04:31.690><c> greater</c><00:04:32.260><c> than</c><00:04:32.740><c> or</c><00:04:32.950><c> equal</c><00:04:33.250><c> to</c><00:04:33.760><c> four</c><00:04:34.060><c> then</c>

00:04:34.740 --> 00:04:34.750 align:start position:0%
is greater than or equal to four then
 

00:04:34.750 --> 00:04:36.630 align:start position:0%
is greater than or equal to four then
that<00:04:35.020><c> means</c><00:04:35.320><c> we're</c><00:04:35.560><c> gonna</c><00:04:35.620><c> run</c><00:04:35.890><c> binary</c><00:04:36.310><c> search</c>

00:04:36.630 --> 00:04:36.640 align:start position:0%
that means we're gonna run binary search
 

00:04:36.640 --> 00:04:39.480 align:start position:0%
that means we're gonna run binary search
on<00:04:36.880><c> this</c><00:04:37.480><c> on</c><00:04:38.110><c> these</c><00:04:38.380><c> two</c><00:04:38.650><c> values</c><00:04:39.100><c> right</c><00:04:39.310><c> it's</c>

00:04:39.480 --> 00:04:39.490 align:start position:0%
on this on these two values right it's
 

00:04:39.490 --> 00:04:41.820 align:start position:0%
on this on these two values right it's
less<00:04:39.850><c> than</c><00:04:40.120><c> six</c><00:04:40.540><c> but</c><00:04:41.080><c> it's</c><00:04:41.200><c> greater</c><00:04:41.560><c> than</c><00:04:41.650><c> or</c>

00:04:41.820 --> 00:04:41.830 align:start position:0%
less than six but it's greater than or
 

00:04:41.830 --> 00:04:44.280 align:start position:0%
less than six but it's greater than or
equal<00:04:42.010><c> to</c><00:04:42.310><c> four</c><00:04:42.580><c> so</c><00:04:42.940><c> we</c><00:04:43.150><c> can</c><00:04:43.690><c> run</c><00:04:43.930><c> binary</c>

00:04:44.280 --> 00:04:44.290 align:start position:0%
equal to four so we can run binary
 

00:04:44.290 --> 00:04:46.290 align:start position:0%
equal to four so we can run binary
search<00:04:44.530><c> on</c><00:04:44.680><c> these</c><00:04:44.950><c> two</c><00:04:45.310><c> values</c><00:04:45.790><c> we</c><00:04:46.120><c> can</c>

00:04:46.290 --> 00:04:46.300 align:start position:0%
search on these two values we can
 

00:04:46.300 --> 00:04:48.240 align:start position:0%
search on these two values we can
eliminate<00:04:46.600><c> all</c><00:04:47.080><c> of</c><00:04:47.710><c> these</c><00:04:47.920><c> from</c>

00:04:48.240 --> 00:04:48.250 align:start position:0%
eliminate all of these from
 

00:04:48.250 --> 00:04:53.700 align:start position:0%
eliminate all of these from
consideration<00:04:51.450><c> so</c><00:04:52.450><c> all</c><00:04:52.750><c> of</c><00:04:52.930><c> that</c><00:04:52.960><c> is</c><00:04:53.350><c> if</c><00:04:53.560><c> we</c>

00:04:53.700 --> 00:04:53.710 align:start position:0%
consideration so all of that is if we
 

00:04:53.710 --> 00:04:55.260 align:start position:0%
consideration so all of that is if we
were<00:04:53.830><c> in</c><00:04:53.950><c> the</c><00:04:54.070><c> left</c><00:04:54.370><c> sorted</c><00:04:54.790><c> portion</c><00:04:54.970><c> of</c><00:04:55.210><c> the</c>

00:04:55.260 --> 00:04:55.270 align:start position:0%
were in the left sorted portion of the
 

00:04:55.270 --> 00:04:57.390 align:start position:0%
were in the left sorted portion of the
array<00:04:55.630><c> right</c><00:04:55.870><c> now</c><00:04:56.230><c> what</c><00:04:56.590><c> happens</c><00:04:57.010><c> if</c><00:04:57.130><c> we're</c><00:04:57.280><c> in</c>

00:04:57.390 --> 00:04:57.400 align:start position:0%
array right now what happens if we're in
 

00:04:57.400 --> 00:04:59.220 align:start position:0%
array right now what happens if we're in
the<00:04:57.520><c> right</c><00:04:57.790><c> sorted</c><00:04:58.330><c> portion</c><00:04:58.540><c> of</c><00:04:58.810><c> the</c><00:04:58.870><c> array</c>

00:04:59.220 --> 00:04:59.230 align:start position:0%
the right sorted portion of the array
 

00:04:59.230 --> 00:05:04.770 align:start position:0%
the right sorted portion of the array
let's<00:04:59.920><c> say</c><00:05:00.100><c> our</c><00:05:00.220><c> middle</c><00:05:00.610><c> was</c><00:05:00.910><c> one</c><00:05:01.810><c> and</c><00:05:03.780><c> let's</c>

00:05:04.770 --> 00:05:04.780 align:start position:0%
let's say our middle was one and let's
 

00:05:04.780 --> 00:05:07.110 align:start position:0%
let's say our middle was one and let's
say<00:05:04.960><c> we</c><00:05:05.140><c> knew</c><00:05:05.560><c> somehow</c><00:05:06.070><c> that</c><00:05:06.250><c> we</c><00:05:06.610><c> were</c><00:05:06.760><c> in</c><00:05:06.940><c> the</c>

00:05:07.110 --> 00:05:07.120 align:start position:0%
say we knew somehow that we were in the
 

00:05:07.120 --> 00:05:09.480 align:start position:0%
say we knew somehow that we were in the
right<00:05:07.300><c> sorted</c><00:05:07.750><c> portion</c><00:05:07.960><c> of</c><00:05:08.230><c> the</c><00:05:08.350><c> array</c><00:05:08.650><c> what</c>

00:05:09.480 --> 00:05:09.490 align:start position:0%
right sorted portion of the array what
 

00:05:09.490 --> 00:05:12.000 align:start position:0%
right sorted portion of the array what
if<00:05:09.580><c> our</c><00:05:09.730><c> target</c><00:05:10.000><c> was</c><00:05:10.480><c> less</c><00:05:10.960><c> than</c><00:05:11.260><c> one</c><00:05:11.500><c> well</c>

00:05:12.000 --> 00:05:12.010 align:start position:0%
if our target was less than one well
 

00:05:12.010 --> 00:05:15.630 align:start position:0%
if our target was less than one well
then<00:05:12.400><c> we</c><00:05:12.850><c> know</c><00:05:13.320><c> we</c><00:05:14.320><c> have</c><00:05:14.440><c> to</c><00:05:14.590><c> search</c><00:05:14.830><c> the</c><00:05:15.100><c> left</c>

00:05:15.630 --> 00:05:15.640 align:start position:0%
then we know we have to search the left
 

00:05:15.640 --> 00:05:17.580 align:start position:0%
then we know we have to search the left
the<00:05:16.120><c> only</c><00:05:16.270><c> value</c><00:05:16.660><c> less</c><00:05:16.870><c> than</c><00:05:16.900><c> one</c><00:05:17.260><c> is</c><00:05:17.410><c> right</c>

00:05:17.580 --> 00:05:17.590 align:start position:0%
the only value less than one is right
 

00:05:17.590 --> 00:05:20.310 align:start position:0%
the only value less than one is right
here<00:05:17.980><c> so</c><00:05:18.310><c> we're</c><00:05:18.580><c> gonna</c><00:05:18.700><c> search</c><00:05:19.060><c> the</c><00:05:19.870><c> left</c>

00:05:20.310 --> 00:05:20.320 align:start position:0%
here so we're gonna search the left
 

00:05:20.320 --> 00:05:24.120 align:start position:0%
here so we're gonna search the left
portion<00:05:20.800><c> of</c><00:05:21.930><c> this</c><00:05:22.930><c> array</c><00:05:23.290><c> we're</c><00:05:23.740><c> not</c><00:05:23.950><c> gonna</c>

00:05:24.120 --> 00:05:24.130 align:start position:0%
portion of this array we're not gonna
 

00:05:24.130 --> 00:05:26.460 align:start position:0%
portion of this array we're not gonna
look<00:05:24.340><c> at</c><00:05:24.520><c> one</c><00:05:24.820><c> we're</c><00:05:25.419><c> not</c><00:05:25.690><c> gonna</c><00:05:25.840><c> look</c><00:05:26.050><c> at</c><00:05:26.200><c> two</c>

00:05:26.460 --> 00:05:26.470 align:start position:0%
look at one we're not gonna look at two
 

00:05:26.470 --> 00:05:28.530 align:start position:0%
look at one we're not gonna look at two
anymore<00:05:26.770><c> any</c><00:05:27.220><c> value</c><00:05:27.610><c> to</c><00:05:27.640><c> the</c><00:05:27.760><c> right</c><00:05:27.880><c> of</c><00:05:28.210><c> one</c><00:05:28.419><c> is</c>

00:05:28.530 --> 00:05:28.540 align:start position:0%
anymore any value to the right of one is
 

00:05:28.540 --> 00:05:29.970 align:start position:0%
anymore any value to the right of one is
greater<00:05:28.870><c> than</c><00:05:29.080><c> one</c><00:05:29.290><c> so</c><00:05:29.320><c> we</c><00:05:29.560><c> don't</c><00:05:29.770><c> have</c><00:05:29.860><c> to</c>

00:05:29.970 --> 00:05:29.980 align:start position:0%
greater than one so we don't have to
 

00:05:29.980 --> 00:05:31.980 align:start position:0%
greater than one so we don't have to
look<00:05:30.100><c> at</c><00:05:30.220><c> them</c><00:05:30.430><c> we're</c><00:05:30.820><c> just</c><00:05:30.880><c> gonna</c><00:05:31.150><c> run</c><00:05:31.540><c> binary</c>

00:05:31.980 --> 00:05:31.990 align:start position:0%
look at them we're just gonna run binary
 

00:05:31.990 --> 00:05:34.500 align:start position:0%
look at them we're just gonna run binary
search<00:05:32.200><c> on</c><00:05:32.380><c> these</c><00:05:32.740><c> elements</c><00:05:33.400><c> we</c><00:05:34.300><c> don't</c>

00:05:34.500 --> 00:05:34.510 align:start position:0%
search on these elements we don't
 

00:05:34.510 --> 00:05:36.210 align:start position:0%
search on these elements we don't
necessarily<00:05:34.690><c> have</c><00:05:35.230><c> to</c><00:05:35.290><c> know</c><00:05:35.560><c> where</c><00:05:35.860><c> the</c><00:05:36.010><c> pivot</c>

00:05:36.210 --> 00:05:36.220 align:start position:0%
necessarily have to know where the pivot
 

00:05:36.220 --> 00:05:38.540 align:start position:0%
necessarily have to know where the pivot
even<00:05:36.610><c> is</c><00:05:36.880><c> we</c><00:05:37.150><c> just</c><00:05:37.360><c> know</c><00:05:37.480><c> we</c><00:05:37.630><c> have</c><00:05:37.720><c> to</c><00:05:37.840><c> go</c><00:05:37.960><c> left</c>

00:05:38.540 --> 00:05:38.550 align:start position:0%
even is we just know we have to go left
 

00:05:38.550 --> 00:05:41.370 align:start position:0%
even is we just know we have to go left
but<00:05:39.550><c> what</c><00:05:39.760><c> if</c><00:05:39.880><c> our</c><00:05:40.060><c> target</c><00:05:40.300><c> was</c><00:05:40.660><c> greater</c><00:05:41.110><c> than</c>

00:05:41.370 --> 00:05:41.380 align:start position:0%
but what if our target was greater than
 

00:05:41.380 --> 00:05:42.840 align:start position:0%
but what if our target was greater than
one<00:05:41.650><c> well</c><00:05:41.979><c> then</c><00:05:42.190><c> our</c><00:05:42.220><c> solution</c><00:05:42.729><c> could</c>

00:05:42.840 --> 00:05:42.850 align:start position:0%
one well then our solution could
 

00:05:42.850 --> 00:05:45.840 align:start position:0%
one well then our solution could
possibly<00:05:43.360><c> be</c><00:05:43.600><c> two</c><00:05:43.900><c> it</c><00:05:44.320><c> could</c><00:05:44.560><c> also</c><00:05:44.800><c> be</c><00:05:45.070><c> any</c><00:05:45.610><c> of</c>

00:05:45.840 --> 00:05:45.850 align:start position:0%
possibly be two it could also be any of
 

00:05:45.850 --> 00:05:49.110 align:start position:0%
possibly be two it could also be any of
these<00:05:46.180><c> four</c><00:05:46.660><c> values</c><00:05:47.310><c> so</c><00:05:48.310><c> then</c><00:05:48.460><c> where</c><00:05:48.729><c> do</c><00:05:48.820><c> we</c><00:05:48.940><c> go</c>

00:05:49.110 --> 00:05:49.120 align:start position:0%
these four values so then where do we go
 

00:05:49.120 --> 00:05:53.190 align:start position:0%
these four values so then where do we go
again<00:05:49.810><c> we</c><00:05:50.680><c> can</c><00:05:50.890><c> use</c><00:05:50.919><c> this</c><00:05:51.640><c> rightmost</c><00:05:52.120><c> value</c><00:05:52.960><c> or</c>

00:05:53.190 --> 00:05:53.200 align:start position:0%
again we can use this rightmost value or
 

00:05:53.200 --> 00:05:56.070 align:start position:0%
again we can use this rightmost value or
the<00:05:53.680><c> edge</c><00:05:54.550><c> basically</c><00:05:55.300><c> of</c><00:05:55.390><c> our</c><00:05:55.510><c> right</c><00:05:55.750><c> to</c><00:05:56.050><c> our</c>

00:05:56.070 --> 00:05:56.080 align:start position:0%
the edge basically of our right to our
 

00:05:56.080 --> 00:05:56.820 align:start position:0%
the edge basically of our right to our
advantage

00:05:56.820 --> 00:05:56.830 align:start position:0%
advantage
 

00:05:56.830 --> 00:06:00.330 align:start position:0%
advantage
so<00:05:57.520><c> if</c><00:05:57.820><c> our</c><00:05:57.940><c> target</c><00:05:58.240><c> is</c><00:05:58.690><c> greater</c><00:05:59.440><c> than</c><00:05:59.710><c> one</c><00:06:00.040><c> and</c>

00:06:00.330 --> 00:06:00.340 align:start position:0%
so if our target is greater than one and
 

00:06:00.340 --> 00:06:03.659 align:start position:0%
so if our target is greater than one and
it's<00:06:00.669><c> also</c><00:06:00.940><c> greater</c><00:06:01.750><c> than</c><00:06:01.870><c> two</c><00:06:02.350><c> that</c><00:06:03.070><c> means</c><00:06:03.310><c> we</c>

00:06:03.659 --> 00:06:03.669 align:start position:0%
it's also greater than two that means we
 

00:06:03.669 --> 00:06:06.450 align:start position:0%
it's also greater than two that means we
can<00:06:03.850><c> again</c><00:06:04.270><c> search</c><00:06:04.810><c> this</c><00:06:05.110><c> left</c><00:06:05.590><c> portion</c><00:06:06.280><c> we</c>

00:06:06.450 --> 00:06:06.460 align:start position:0%
can again search this left portion we
 

00:06:06.460 --> 00:06:07.830 align:start position:0%
can again search this left portion we
can<00:06:06.490><c> eliminate</c><00:06:06.880><c> these</c><00:06:07.390><c> two</c><00:06:07.630><c> from</c>

00:06:07.830 --> 00:06:07.840 align:start position:0%
can eliminate these two from
 

00:06:07.840 --> 00:06:11.130 align:start position:0%
can eliminate these two from
consideration<00:06:09.210><c> but</c><00:06:10.210><c> what</c><00:06:10.419><c> if</c><00:06:10.540><c> the</c><00:06:10.660><c> opposite</c>

00:06:11.130 --> 00:06:11.140 align:start position:0%
consideration but what if the opposite
 

00:06:11.140 --> 00:06:11.580 align:start position:0%
consideration but what if the opposite
is<00:06:11.260><c> true</c>

00:06:11.580 --> 00:06:11.590 align:start position:0%
is true
 

00:06:11.590 --> 00:06:13.710 align:start position:0%
is true
what<00:06:11.890><c> if</c><00:06:12.010><c> our</c><00:06:12.100><c> target</c><00:06:12.370><c> is</c><00:06:12.669><c> greater</c><00:06:13.150><c> than</c><00:06:13.390><c> one</c>

00:06:13.710 --> 00:06:13.720 align:start position:0%
what if our target is greater than one
 

00:06:13.720 --> 00:06:16.380 align:start position:0%
what if our target is greater than one
but<00:06:14.290><c> it's</c><00:06:14.440><c> less</c><00:06:14.860><c> than</c><00:06:15.130><c> or</c><00:06:15.190><c> equal</c><00:06:15.760><c> to</c><00:06:15.910><c> two</c><00:06:16.150><c> in</c>

00:06:16.380 --> 00:06:16.390 align:start position:0%
but it's less than or equal to two in
 

00:06:16.390 --> 00:06:19.170 align:start position:0%
but it's less than or equal to two in
that<00:06:16.990><c> case</c><00:06:17.350><c> we</c><00:06:17.800><c> only</c><00:06:17.979><c> have</c><00:06:18.340><c> to</c><00:06:18.580><c> run</c><00:06:18.760><c> binary</c>

00:06:19.170 --> 00:06:19.180 align:start position:0%
that case we only have to run binary
 

00:06:19.180 --> 00:06:22.080 align:start position:0%
that case we only have to run binary
search<00:06:19.419><c> on</c><00:06:19.600><c> the</c><00:06:19.750><c> right</c><00:06:19.780><c> portion</c><00:06:20.710><c> of</c><00:06:20.860><c> one</c><00:06:21.460><c> every</c>

00:06:22.080 --> 00:06:22.090 align:start position:0%
search on the right portion of one every
 

00:06:22.090 --> 00:06:23.969 align:start position:0%
search on the right portion of one every
value<00:06:22.419><c> to</c><00:06:22.540><c> the</c><00:06:22.660><c> right</c><00:06:22.900><c> of</c><00:06:23.050><c> one</c><00:06:23.229><c> meaning</c><00:06:23.650><c> we</c><00:06:23.740><c> can</c>

00:06:23.969 --> 00:06:23.979 align:start position:0%
value to the right of one meaning we can
 

00:06:23.979 --> 00:06:25.830 align:start position:0%
value to the right of one meaning we can
eliminate<00:06:24.190><c> all</c><00:06:24.580><c> of</c><00:06:25.060><c> these</c><00:06:25.270><c> from</c>

00:06:25.830 --> 00:06:25.840 align:start position:0%
eliminate all of these from
 

00:06:25.840 --> 00:06:30.480 align:start position:0%
eliminate all of these from
consideration<00:06:28.680><c> so</c><00:06:29.680><c> that</c><00:06:29.890><c> was</c><00:06:30.040><c> a</c><00:06:30.070><c> lot</c><00:06:30.460><c> of</c>

00:06:30.480 --> 00:06:30.490 align:start position:0%
consideration so that was a lot of
 

00:06:30.490 --> 00:06:32.640 align:start position:0%
consideration so that was a lot of
discrete<00:06:31.060><c> cases</c><00:06:31.599><c> and</c><00:06:31.720><c> it</c><00:06:31.810><c> might</c><00:06:31.990><c> be</c><00:06:32.140><c> confusing</c>

00:06:32.640 --> 00:06:32.650 align:start position:0%
discrete cases and it might be confusing
 

00:06:32.650 --> 00:06:34.290 align:start position:0%
discrete cases and it might be confusing
I<00:06:32.919><c> think</c><00:06:32.979><c> it'll</c><00:06:33.280><c> be</c><00:06:33.460><c> a</c><00:06:33.490><c> little</c><00:06:33.760><c> easier</c><00:06:34.000><c> to</c>

00:06:34.290 --> 00:06:34.300 align:start position:0%
I think it'll be a little easier to
 

00:06:34.300 --> 00:06:35.820 align:start position:0%
I think it'll be a little easier to
understand<00:06:34.810><c> once</c><00:06:35.020><c> we</c><00:06:35.169><c> actually</c><00:06:35.530><c> write</c><00:06:35.680><c> the</c>

00:06:35.820 --> 00:06:35.830 align:start position:0%
understand once we actually write the
 

00:06:35.830 --> 00:06:37.180 align:start position:0%
understand once we actually write the
code<00:06:35.860><c> but</c><00:06:36.340><c> I</c><00:06:36.400><c> think</c><00:06:36.610><c> it's</c><00:06:36.760><c> also</c>

00:06:37.180 --> 00:06:37.190 align:start position:0%
code but I think it's also
 

00:06:37.190 --> 00:06:39.250 align:start position:0%
code but I think it's also
important<00:06:37.730><c> to</c><00:06:37.850><c> visualize</c><00:06:38.120><c> it</c><00:06:38.750><c> and</c><00:06:38.930><c> actually</c>

00:06:39.250 --> 00:06:39.260 align:start position:0%
important to visualize it and actually
 

00:06:39.260 --> 00:06:41.020 align:start position:0%
important to visualize it and actually
understand<00:06:39.710><c> what's</c><00:06:39.980><c> going</c><00:06:40.250><c> on</c><00:06:40.370><c> before</c><00:06:40.880><c> you</c>

00:06:41.020 --> 00:06:41.030 align:start position:0%
understand what's going on before you
 

00:06:41.030 --> 00:06:43.110 align:start position:0%
understand what's going on before you
even<00:06:41.240><c> write</c><00:06:41.480><c> a</c><00:06:41.540><c> single</c><00:06:41.870><c> line</c><00:06:42.020><c> of</c><00:06:42.200><c> code</c><00:06:42.380><c> and</c>

00:06:43.110 --> 00:06:43.120 align:start position:0%
even write a single line of code and
 

00:06:43.120 --> 00:06:45.280 align:start position:0%
even write a single line of code and
knowing<00:06:44.120><c> what</c><00:06:44.270><c> we</c><00:06:44.360><c> just</c><00:06:44.510><c> learned</c><00:06:44.780><c> let's</c><00:06:45.050><c> just</c>

00:06:45.280 --> 00:06:45.290 align:start position:0%
knowing what we just learned let's just
 

00:06:45.290 --> 00:06:48.220 align:start position:0%
knowing what we just learned let's just
go<00:06:45.440><c> through</c><00:06:45.740><c> this</c><00:06:45.920><c> example</c><00:06:46.190><c> of</c><00:06:46.850><c> the</c><00:06:47.780><c> target</c>

00:06:48.220 --> 00:06:48.230 align:start position:0%
go through this example of the target
 

00:06:48.230 --> 00:06:51.430 align:start position:0%
go through this example of the target
equal<00:06:48.650><c> to</c><00:06:48.830><c> zero</c><00:06:49.160><c> and</c><00:06:49.520><c> given</c><00:06:50.060><c> this</c><00:06:50.270><c> input</c><00:06:51.200><c> array</c>

00:06:51.430 --> 00:06:51.440 align:start position:0%
equal to zero and given this input array
 

00:06:51.440 --> 00:06:54.700 align:start position:0%
equal to zero and given this input array
so<00:06:52.040><c> initially</c><00:06:52.970><c> our</c><00:06:53.180><c> left</c><00:06:53.990><c> pointer</c><00:06:54.410><c> would</c><00:06:54.530><c> be</c>

00:06:54.700 --> 00:06:54.710 align:start position:0%
so initially our left pointer would be
 

00:06:54.710 --> 00:06:57.040 align:start position:0%
so initially our left pointer would be
here<00:06:55.070><c> our</c><00:06:55.220><c> right</c><00:06:56.000><c> pointer</c><00:06:56.330><c> would</c><00:06:56.450><c> be</c><00:06:56.600><c> here</c><00:06:56.870><c> our</c>

00:06:57.040 --> 00:06:57.050 align:start position:0%
here our right pointer would be here our
 

00:06:57.050 --> 00:07:00.400 align:start position:0%
here our right pointer would be here our
middle<00:06:57.530><c> would</c><00:06:57.770><c> be</c><00:06:57.830><c> here</c><00:06:58.310><c> so</c><00:06:58.970><c> how</c><00:06:59.780><c> do</c><00:06:59.840><c> we</c><00:07:00.140><c> even</c>

00:07:00.400 --> 00:07:00.410 align:start position:0%
middle would be here so how do we even
 

00:07:00.410 --> 00:07:02.380 align:start position:0%
middle would be here so how do we even
know<00:07:00.800><c> if</c><00:07:01.100><c> we're</c><00:07:01.340><c> in</c><00:07:01.430><c> the</c><00:07:01.520><c> left</c><00:07:01.790><c> sorted</c><00:07:02.210><c> portion</c>

00:07:02.380 --> 00:07:02.390 align:start position:0%
know if we're in the left sorted portion
 

00:07:02.390 --> 00:07:04.210 align:start position:0%
know if we're in the left sorted portion
or<00:07:02.720><c> the</c><00:07:03.020><c> right</c><00:07:03.230><c> sorted</c><00:07:03.650><c> portion</c>

00:07:04.210 --> 00:07:04.220 align:start position:0%
or the right sorted portion
 

00:07:04.220 --> 00:07:07.960 align:start position:0%
or the right sorted portion
well<00:07:04.580><c> the</c><00:07:05.060><c> way</c><00:07:05.210><c> I</c><00:07:05.240><c> check</c><00:07:05.840><c> is</c><00:07:06.020><c> just</c><00:07:06.410><c> if</c><00:07:07.250><c> our</c>

00:07:07.960 --> 00:07:07.970 align:start position:0%
well the way I check is just if our
 

00:07:07.970 --> 00:07:13.030 align:start position:0%
well the way I check is just if our
middle<00:07:08.540><c> value</c><00:07:09.050><c> is</c><00:07:10.600><c> greater</c><00:07:11.600><c> than</c><00:07:11.960><c> or</c><00:07:12.260><c> equal</c><00:07:12.890><c> to</c>

00:07:13.030 --> 00:07:13.040 align:start position:0%
middle value is greater than or equal to
 

00:07:13.040 --> 00:07:15.670 align:start position:0%
middle value is greater than or equal to
our<00:07:13.190><c> left</c><00:07:13.520><c> the</c><00:07:14.060><c> actual</c><00:07:14.390><c> value</c><00:07:14.900><c> at</c><00:07:15.080><c> that</c><00:07:15.260><c> index</c>

00:07:15.670 --> 00:07:15.680 align:start position:0%
our left the actual value at that index
 

00:07:15.680 --> 00:07:18.010 align:start position:0%
our left the actual value at that index
if<00:07:15.950><c> this</c><00:07:16.160><c> is</c><00:07:16.340><c> true</c><00:07:16.700><c> then</c><00:07:17.330><c> that</c><00:07:17.480><c> means</c><00:07:17.750><c> our</c>

00:07:18.010 --> 00:07:18.020 align:start position:0%
if this is true then that means our
 

00:07:18.020 --> 00:07:20.860 align:start position:0%
if this is true then that means our
middle<00:07:18.710><c> value</c><00:07:19.130><c> belongs</c><00:07:19.880><c> to</c><00:07:20.180><c> the</c><00:07:20.270><c> left</c><00:07:20.540><c> sorted</c>

00:07:20.860 --> 00:07:20.870 align:start position:0%
middle value belongs to the left sorted
 

00:07:20.870 --> 00:07:23.440 align:start position:0%
middle value belongs to the left sorted
portion<00:07:21.080><c> if</c><00:07:21.590><c> this</c><00:07:22.430><c> wasn't</c><00:07:22.700><c> true</c><00:07:23.030><c> that</c><00:07:23.240><c> means</c>

00:07:23.440 --> 00:07:23.450 align:start position:0%
portion if this wasn't true that means
 

00:07:23.450 --> 00:07:25.390 align:start position:0%
portion if this wasn't true that means
our<00:07:23.780><c> middle</c><00:07:24.290><c> values</c><00:07:24.620><c> in</c><00:07:24.770><c> the</c><00:07:24.830><c> right</c><00:07:25.010><c> sorted</c>

00:07:25.390 --> 00:07:25.400 align:start position:0%
our middle values in the right sorted
 

00:07:25.400 --> 00:07:26.890 align:start position:0%
our middle values in the right sorted
portion<00:07:25.610><c> and</c><00:07:26.000><c> we</c><00:07:26.180><c> would</c><00:07:26.360><c> write</c><00:07:26.570><c> our</c><00:07:26.600><c> if</c>

00:07:26.890 --> 00:07:26.900 align:start position:0%
portion and we would write our if
 

00:07:26.900 --> 00:07:29.380 align:start position:0%
portion and we would write our if
statements<00:07:27.440><c> accordingly</c><00:07:27.920><c> but</c><00:07:28.820><c> knowing</c><00:07:29.360><c> that</c>

00:07:29.380 --> 00:07:29.390 align:start position:0%
statements accordingly but knowing that
 

00:07:29.390 --> 00:07:31.740 align:start position:0%
statements accordingly but knowing that
we<00:07:29.660><c> are</c><00:07:29.690><c> in</c><00:07:30.170><c> this</c><00:07:30.410><c> left</c><00:07:30.680><c> sorted</c><00:07:31.040><c> portion</c><00:07:31.250><c> right</c>

00:07:31.740 --> 00:07:31.750 align:start position:0%
we are in this left sorted portion right
 

00:07:31.750 --> 00:07:34.120 align:start position:0%
we are in this left sorted portion right
let's<00:07:32.750><c> run</c><00:07:32.990><c> through</c><00:07:33.170><c> it</c><00:07:33.230><c> so</c><00:07:33.440><c> our</c><00:07:33.530><c> target</c><00:07:33.980><c> is</c>

00:07:34.120 --> 00:07:34.130 align:start position:0%
let's run through it so our target is
 

00:07:34.130 --> 00:07:37.930 align:start position:0%
let's run through it so our target is
zero<00:07:34.520><c> that</c><00:07:35.330><c> means</c><00:07:35.600><c> our</c><00:07:35.930><c> target</c><00:07:36.500><c> is</c><00:07:36.680><c> less</c><00:07:37.670><c> than</c>

00:07:37.930 --> 00:07:37.940 align:start position:0%
zero that means our target is less than
 

00:07:37.940 --> 00:07:40.450 align:start position:0%
zero that means our target is less than
seven<00:07:38.450><c> so</c><00:07:39.110><c> our</c><00:07:39.260><c> target</c><00:07:39.650><c> is</c><00:07:39.770><c> less</c><00:07:39.950><c> than</c><00:07:40.160><c> seven</c>

00:07:40.450 --> 00:07:40.460 align:start position:0%
seven so our target is less than seven
 

00:07:40.460 --> 00:07:41.980 align:start position:0%
seven so our target is less than seven
that<00:07:40.610><c> means</c><00:07:40.790><c> we</c><00:07:40.940><c> could</c><00:07:41.090><c> be</c><00:07:41.120><c> looking</c><00:07:41.480><c> here</c><00:07:41.840><c> or</c>

00:07:41.980 --> 00:07:41.990 align:start position:0%
that means we could be looking here or
 

00:07:41.990 --> 00:07:43.659 align:start position:0%
that means we could be looking here or
we<00:07:42.260><c> could</c><00:07:42.410><c> be</c><00:07:42.530><c> looking</c><00:07:42.650><c> here</c><00:07:43.130><c> so</c><00:07:43.460><c> let's</c>

00:07:43.659 --> 00:07:43.669 align:start position:0%
we could be looking here so let's
 

00:07:43.669 --> 00:07:45.460 align:start position:0%
we could be looking here so let's
compare<00:07:44.060><c> it</c><00:07:44.120><c> to</c><00:07:44.240><c> four</c><00:07:44.660><c> now</c><00:07:44.900><c> is</c><00:07:45.110><c> our</c><00:07:45.230><c> target</c>

00:07:45.460 --> 00:07:45.470 align:start position:0%
compare it to four now is our target
 

00:07:45.470 --> 00:07:48.100 align:start position:0%
compare it to four now is our target
less<00:07:45.919><c> than</c><00:07:46.160><c> the</c><00:07:46.280><c> leftmost</c><00:07:46.700><c> value</c><00:07:47.390><c> well</c><00:07:47.750><c> zero</c>

00:07:48.100 --> 00:07:48.110 align:start position:0%
less than the leftmost value well zero
 

00:07:48.110 --> 00:07:50.640 align:start position:0%
less than the leftmost value well zero
is<00:07:48.290><c> less</c><00:07:48.320><c> than</c><00:07:48.560><c> four</c><00:07:49.070><c> okay</c><00:07:49.700><c> so</c><00:07:50.090><c> that</c><00:07:50.300><c> means</c>

00:07:50.640 --> 00:07:50.650 align:start position:0%
is less than four okay so that means
 

00:07:50.650 --> 00:07:53.080 align:start position:0%
is less than four okay so that means
we're<00:07:51.650><c> all</c><00:07:51.680><c> good</c><00:07:52.100><c> we</c><00:07:52.310><c> just</c><00:07:52.520><c> have</c><00:07:52.790><c> to</c><00:07:52.880><c> search</c>

00:07:53.080 --> 00:07:53.090 align:start position:0%
we're all good we just have to search
 

00:07:53.090 --> 00:07:55.360 align:start position:0%
we're all good we just have to search
every<00:07:53.300><c> value</c><00:07:54.140><c> to</c><00:07:54.290><c> the</c><00:07:54.410><c> right</c><00:07:54.680><c> of</c><00:07:54.890><c> our</c><00:07:55.040><c> middle</c>

00:07:55.360 --> 00:07:55.370 align:start position:0%
every value to the right of our middle
 

00:07:55.370 --> 00:07:59.820 align:start position:0%
every value to the right of our middle
value<00:07:55.700><c> so</c><00:07:56.210><c> we</c><00:07:56.450><c> can</c><00:07:56.660><c> eliminate</c><00:07:57.110><c> all</c><00:07:57.560><c> of</c><00:07:58.010><c> these</c>

00:07:59.820 --> 00:07:59.830 align:start position:0%
value so we can eliminate all of these
 

00:07:59.830 --> 00:08:03.250 align:start position:0%
value so we can eliminate all of these
we<00:08:00.830><c> can</c><00:08:01.010><c> cross</c><00:08:01.310><c> out</c><00:08:01.550><c> our</c><00:08:01.610><c> middle</c><00:08:02.120><c> and</c><00:08:02.390><c> left</c><00:08:02.810><c> our</c>

00:08:03.250 --> 00:08:03.260 align:start position:0%
we can cross out our middle and left our
 

00:08:03.260 --> 00:08:05.620 align:start position:0%
we can cross out our middle and left our
new<00:08:03.770><c> left</c><00:08:04.040><c> is</c><00:08:04.250><c> going</c><00:08:04.370><c> to</c><00:08:04.430><c> be</c><00:08:04.580><c> here</c><00:08:04.970><c> and</c><00:08:05.120><c> our</c><00:08:05.419><c> new</c>

00:08:05.620 --> 00:08:05.630 align:start position:0%
new left is going to be here and our new
 

00:08:05.630 --> 00:08:08.710 align:start position:0%
new left is going to be here and our new
middle<00:08:05.990><c> is</c><00:08:06.110><c> going</c><00:08:06.260><c> to</c><00:08:06.320><c> be</c><00:08:06.440><c> here</c><00:08:07.240><c> now</c><00:08:08.240><c> in</c><00:08:08.450><c> this</c>

00:08:08.710 --> 00:08:08.720 align:start position:0%
middle is going to be here now in this
 

00:08:08.720 --> 00:08:11.260 align:start position:0%
middle is going to be here now in this
case<00:08:09.080><c> are</c><00:08:09.710><c> we</c><00:08:09.770><c> in</c><00:08:10.280><c> the</c><00:08:10.400><c> left</c><00:08:10.669><c> sorted</c><00:08:11.060><c> portion</c>

00:08:11.260 --> 00:08:11.270 align:start position:0%
case are we in the left sorted portion
 

00:08:11.270 --> 00:08:14.050 align:start position:0%
case are we in the left sorted portion
or<00:08:11.600><c> the</c><00:08:11.630><c> right</c><00:08:11.900><c> sorted</c><00:08:12.290><c> portion</c><00:08:12.500><c> well</c><00:08:13.060><c> among</c>

00:08:14.050 --> 00:08:14.060 align:start position:0%
or the right sorted portion well among
 

00:08:14.060 --> 00:08:16.030 align:start position:0%
or the right sorted portion well among
these<00:08:14.360><c> three</c><00:08:14.660><c> values</c><00:08:14.840><c> the</c><00:08:15.200><c> entire</c><00:08:15.590><c> array</c><00:08:15.980><c> is</c>

00:08:16.030 --> 00:08:16.040 align:start position:0%
these three values the entire array is
 

00:08:16.040 --> 00:08:18.430 align:start position:0%
these three values the entire array is
pretty<00:08:16.400><c> much</c><00:08:16.580><c> sorted</c><00:08:17.000><c> so</c><00:08:17.210><c> according</c><00:08:18.020><c> to</c><00:08:18.050><c> our</c>

00:08:18.430 --> 00:08:18.440 align:start position:0%
pretty much sorted so according to our
 

00:08:18.440 --> 00:08:21.010 align:start position:0%
pretty much sorted so according to our
thing<00:08:19.130><c> according</c><00:08:19.910><c> to</c><00:08:20.030><c> our</c><00:08:20.060><c> if</c><00:08:20.510><c> statements</c>

00:08:21.010 --> 00:08:21.020 align:start position:0%
thing according to our if statements
 

00:08:21.020 --> 00:08:22.600 align:start position:0%
thing according to our if statements
were<00:08:21.110><c> basically</c><00:08:21.500><c> going</c><00:08:21.710><c> to</c><00:08:21.770><c> say</c><00:08:21.830><c> that</c><00:08:22.190><c> middle</c>

00:08:22.600 --> 00:08:22.610 align:start position:0%
were basically going to say that middle
 

00:08:22.610 --> 00:08:24.220 align:start position:0%
were basically going to say that middle
belongs<00:08:23.030><c> to</c><00:08:23.390><c> the</c><00:08:23.510><c> left</c><00:08:23.690><c> sorted</c><00:08:24.050><c> portion</c>

00:08:24.220 --> 00:08:24.230 align:start position:0%
belongs to the left sorted portion
 

00:08:24.230 --> 00:08:26.409 align:start position:0%
belongs to the left sorted portion
because<00:08:24.650><c> the</c><00:08:24.770><c> entire</c><00:08:24.980><c> thing</c><00:08:25.400><c> is</c><00:08:25.520><c> sorted</c><00:08:25.940><c> so</c>

00:08:26.409 --> 00:08:26.419 align:start position:0%
because the entire thing is sorted so
 

00:08:26.419 --> 00:08:29.230 align:start position:0%
because the entire thing is sorted so
now<00:08:26.570><c> we</c><00:08:26.630><c> compare</c><00:08:27.110><c> middle</c><00:08:27.620><c> to</c><00:08:27.770><c> target</c><00:08:28.220><c> well</c><00:08:29.000><c> our</c>

00:08:29.230 --> 00:08:29.240 align:start position:0%
now we compare middle to target well our
 

00:08:29.240 --> 00:08:31.690 align:start position:0%
now we compare middle to target well our
target<00:08:29.660><c> is</c><00:08:29.750><c> less</c><00:08:30.110><c> than</c><00:08:30.380><c> one</c><00:08:30.740><c> so</c><00:08:31.010><c> now</c><00:08:31.430><c> we</c><00:08:31.490><c> have</c>

00:08:31.690 --> 00:08:31.700 align:start position:0%
target is less than one so now we have
 

00:08:31.700 --> 00:08:33.760 align:start position:0%
target is less than one so now we have
to<00:08:31.820><c> go</c><00:08:31.940><c> left</c><00:08:32.330><c> and</c><00:08:32.660><c> if</c><00:08:32.870><c> we</c><00:08:32.990><c> compared</c><00:08:33.469><c> it</c><00:08:33.620><c> to</c><00:08:33.650><c> the</c>

00:08:33.760 --> 00:08:33.770 align:start position:0%
to go left and if we compared it to the
 

00:08:33.770 --> 00:08:35.260 align:start position:0%
to go left and if we compared it to the
leftmost<00:08:34.219><c> value</c><00:08:34.789><c> zero</c>

00:08:35.260 --> 00:08:35.270 align:start position:0%
leftmost value zero
 

00:08:35.270 --> 00:08:37.300 align:start position:0%
leftmost value zero
our<00:08:35.539><c> target</c><00:08:36.020><c> is</c><00:08:36.110><c> greater</c><00:08:36.500><c> than</c><00:08:36.710><c> or</c><00:08:36.800><c> equal</c><00:08:36.979><c> to</c>

00:08:37.300 --> 00:08:37.310 align:start position:0%
our target is greater than or equal to
 

00:08:37.310 --> 00:08:39.070 align:start position:0%
our target is greater than or equal to
not<00:08:37.430><c> so</c><00:08:37.849><c> we</c><00:08:37.969><c> don't</c><00:08:38.000><c> have</c><00:08:38.270><c> to</c><00:08:38.390><c> check</c><00:08:38.659><c> anywhere</c>

00:08:39.070 --> 00:08:39.080 align:start position:0%
not so we don't have to check anywhere
 

00:08:39.080 --> 00:08:41.500 align:start position:0%
not so we don't have to check anywhere
else<00:08:39.260><c> we</c><00:08:39.500><c> only</c><00:08:39.740><c> have</c><00:08:40.010><c> to</c><00:08:40.099><c> go</c><00:08:40.219><c> left</c><00:08:40.580><c> so</c><00:08:41.270><c> we</c><00:08:41.360><c> can</c>

00:08:41.500 --> 00:08:41.510 align:start position:0%
else we only have to go left so we can
 

00:08:41.510 --> 00:08:43.750 align:start position:0%
else we only have to go left so we can
eliminate<00:08:41.810><c> these</c><00:08:42.349><c> two</c><00:08:42.680><c> from</c><00:08:42.950><c> consideration</c>

00:08:43.750 --> 00:08:43.760 align:start position:0%
eliminate these two from consideration
 

00:08:43.760 --> 00:08:47.230 align:start position:0%
eliminate these two from consideration
and<00:08:43.940><c> we're</c><00:08:44.510><c> left</c><00:08:44.720><c> with</c><00:08:44.930><c> one</c><00:08:45.230><c> value</c><00:08:45.880><c> over</c><00:08:46.880><c> here</c>

00:08:47.230 --> 00:08:47.240 align:start position:0%
and we're left with one value over here
 

00:08:47.240 --> 00:08:49.840 align:start position:0%
and we're left with one value over here
and<00:08:47.420><c> that's</c><00:08:48.230><c> our</c><00:08:48.560><c> solution</c><00:08:48.890><c> so</c>

00:08:49.840 --> 00:08:49.850 align:start position:0%
and that's our solution so
 

00:08:49.850 --> 00:08:52.329 align:start position:0%
and that's our solution so
this<00:08:49.970><c> is</c><00:08:50.120><c> kind</c><00:08:50.420><c> of</c><00:08:50.509><c> a</c><00:08:50.779><c> visualization</c><00:08:51.649><c> for</c><00:08:52.220><c> it</c>

00:08:52.329 --> 00:08:52.339 align:start position:0%
this is kind of a visualization for it
 

00:08:52.339 --> 00:08:54.189 align:start position:0%
this is kind of a visualization for it
now<00:08:52.519><c> let's</c><00:08:52.699><c> actually</c><00:08:52.850><c> look</c><00:08:53.240><c> at</c><00:08:53.329><c> the</c><00:08:53.449><c> code</c><00:08:53.750><c> to</c>

00:08:54.189 --> 00:08:54.199 align:start position:0%
now let's actually look at the code to
 

00:08:54.199 --> 00:08:56.110 align:start position:0%
now let's actually look at the code to
better<00:08:54.440><c> understand</c><00:08:54.980><c> what</c><00:08:55.190><c> these</c><00:08:55.339><c> cases</c><00:08:55.699><c> are</c>

00:08:56.110 --> 00:08:56.120 align:start position:0%
better understand what these cases are
 

00:08:56.120 --> 00:08:58.329 align:start position:0%
better understand what these cases are
going<00:08:56.149><c> to</c><00:08:56.269><c> look</c><00:08:56.449><c> like</c><00:08:56.709><c> okay</c><00:08:57.709><c> so</c><00:08:57.889><c> when</c><00:08:58.220><c> you're</c>

00:08:58.329 --> 00:08:58.339 align:start position:0%
going to look like okay so when you're
 

00:08:58.339 --> 00:09:00.069 align:start position:0%
going to look like okay so when you're
doing<00:08:58.550><c> binary</c><00:08:58.759><c> search</c><00:08:59.209><c> first</c><00:08:59.600><c> thing</c><00:08:59.810><c> you</c><00:08:59.930><c> do</c>

00:09:00.069 --> 00:09:00.079 align:start position:0%
doing binary search first thing you do
 

00:09:00.079 --> 00:09:01.600 align:start position:0%
doing binary search first thing you do
is<00:09:00.199><c> initialize</c><00:09:00.649><c> your</c><00:09:00.709><c> pointer</c><00:09:01.190><c> so</c><00:09:01.370><c> we</c><00:09:01.490><c> have</c><00:09:01.579><c> a</c>

00:09:01.600 --> 00:09:01.610 align:start position:0%
is initialize your pointer so we have a
 

00:09:01.610 --> 00:09:04.540 align:start position:0%
is initialize your pointer so we have a
left<00:09:01.940><c> and</c><00:09:02.300><c> we</c><00:09:02.750><c> have</c><00:09:02.870><c> a</c><00:09:02.899><c> right</c><00:09:03.220><c> left</c><00:09:04.220><c> is</c><00:09:04.399><c> going</c>

00:09:04.540 --> 00:09:04.550 align:start position:0%
left and we have a right left is going
 

00:09:04.550 --> 00:09:06.400 align:start position:0%
left and we have a right left is going
to<00:09:04.610><c> be</c><00:09:04.730><c> 0</c><00:09:05.029><c> right</c><00:09:05.329><c> is</c><00:09:05.660><c> going</c><00:09:05.810><c> to</c><00:09:05.870><c> be</c><00:09:05.930><c> the</c><00:09:06.139><c> length</c>

00:09:06.400 --> 00:09:06.410 align:start position:0%
to be 0 right is going to be the length
 

00:09:06.410 --> 00:09:10.600 align:start position:0%
to be 0 right is going to be the length
of<00:09:06.740><c> the</c><00:09:06.860><c> array</c><00:09:07.160><c> minus</c><00:09:07.670><c> 1</c><00:09:08.680><c> our</c><00:09:09.680><c> condition</c><00:09:10.430><c> is</c>

00:09:10.600 --> 00:09:10.610 align:start position:0%
of the array minus 1 our condition is
 

00:09:10.610 --> 00:09:12.879 align:start position:0%
of the array minus 1 our condition is
while<00:09:11.300><c> left</c><00:09:11.690><c> is</c><00:09:11.930><c> less</c><00:09:12.170><c> than</c><00:09:12.350><c> or</c><00:09:12.470><c> equal</c><00:09:12.529><c> to</c>

00:09:12.879 --> 00:09:12.889 align:start position:0%
while left is less than or equal to
 

00:09:12.889 --> 00:09:14.920 align:start position:0%
while left is less than or equal to
right<00:09:13.130><c> because</c><00:09:13.670><c> imagine</c><00:09:14.209><c> we're</c><00:09:14.540><c> given</c><00:09:14.810><c> an</c>

00:09:14.920 --> 00:09:14.930 align:start position:0%
right because imagine we're given an
 

00:09:14.930 --> 00:09:18.460 align:start position:0%
right because imagine we're given an
array<00:09:15.230><c> like</c><00:09:15.980><c> this</c><00:09:16.630><c> with</c><00:09:17.630><c> just</c><00:09:17.899><c> one</c><00:09:18.079><c> value</c>

00:09:18.460 --> 00:09:18.470 align:start position:0%
array like this with just one value
 

00:09:18.470 --> 00:09:20.259 align:start position:0%
array like this with just one value
let's<00:09:18.680><c> say</c><00:09:18.740><c> it</c><00:09:18.860><c> had</c><00:09:19.009><c> one</c><00:09:19.310><c> left</c><00:09:19.910><c> and</c><00:09:20.120><c> right</c>

00:09:20.259 --> 00:09:20.269 align:start position:0%
let's say it had one left and right
 

00:09:20.269 --> 00:09:22.389 align:start position:0%
let's say it had one left and right
would<00:09:20.420><c> be</c><00:09:20.540><c> equal</c><00:09:20.990><c> in</c><00:09:21.110><c> that</c><00:09:21.259><c> case</c><00:09:21.529><c> and</c><00:09:21.800><c> we</c><00:09:21.829><c> still</c>

00:09:22.389 --> 00:09:22.399 align:start position:0%
would be equal in that case and we still
 

00:09:22.399 --> 00:09:24.819 align:start position:0%
would be equal in that case and we still
have<00:09:22.519><c> to</c><00:09:22.639><c> check</c><00:09:22.970><c> that</c><00:09:23.180><c> one</c><00:09:23.389><c> value</c><00:09:23.600><c> so</c><00:09:24.560><c> now</c><00:09:24.769><c> we</c>

00:09:24.819 --> 00:09:24.829 align:start position:0%
have to check that one value so now we
 

00:09:24.829 --> 00:09:27.490 align:start position:0%
have to check that one value so now we
can<00:09:25.100><c> compute</c><00:09:25.490><c> the</c><00:09:25.610><c> middle</c><00:09:25.940><c> value</c><00:09:26.259><c> middle</c><00:09:27.259><c> is</c>

00:09:27.490 --> 00:09:27.500 align:start position:0%
can compute the middle value middle is
 

00:09:27.500 --> 00:09:30.220 align:start position:0%
can compute the middle value middle is
just<00:09:27.829><c> going</c><00:09:27.949><c> to</c><00:09:28.009><c> be</c><00:09:28.160><c> left</c><00:09:28.430><c> +</c><00:09:28.790><c> right</c><00:09:28.910><c> /</c><00:09:29.810><c> to</c><00:09:29.870><c> the</c>

00:09:30.220 --> 00:09:30.230 align:start position:0%
just going to be left + right / to the
 

00:09:30.230 --> 00:09:34.780 align:start position:0%
just going to be left + right / to the
average<00:09:30.649><c> of</c><00:09:30.829><c> them</c><00:09:31.720><c> and</c><00:09:32.980><c> it's</c><00:09:33.980><c> possible</c><00:09:34.550><c> to</c><00:09:34.670><c> the</c>

00:09:34.780 --> 00:09:34.790 align:start position:0%
average of them and it's possible to the
 

00:09:34.790 --> 00:09:36.759 align:start position:0%
average of them and it's possible to the
middle<00:09:35.029><c> value</c><00:09:35.180><c> could</c><00:09:35.690><c> be</c><00:09:35.870><c> the</c><00:09:36.019><c> target</c><00:09:36.259><c> if</c><00:09:36.589><c> it</c>

00:09:36.759 --> 00:09:36.769 align:start position:0%
middle value could be the target if it
 

00:09:36.769 --> 00:09:44.530 align:start position:0%
middle value could be the target if it
is<00:09:36.920><c> we</c><00:09:37.160><c> simply</c><00:09:37.399><c> return</c><00:09:37.850><c> the</c><00:09:37.880><c> index</c><00:09:42.759><c> if</c><00:09:43.759><c> that's</c>

00:09:44.530 --> 00:09:44.540 align:start position:0%
is we simply return the index if that's
 

00:09:44.540 --> 00:09:47.230 align:start position:0%
is we simply return the index if that's
not<00:09:44.810><c> the</c><00:09:45.019><c> case</c><00:09:45.259><c> then</c><00:09:45.949><c> we</c><00:09:46.130><c> need</c><00:09:46.160><c> to</c><00:09:46.399><c> check</c><00:09:46.639><c> which</c>

00:09:47.230 --> 00:09:47.240 align:start position:0%
not the case then we need to check which
 

00:09:47.240 --> 00:09:49.389 align:start position:0%
not the case then we need to check which
portion<00:09:47.779><c> of</c><00:09:47.899><c> the</c><00:09:48.019><c> array</c><00:09:48.290><c> are</c><00:09:48.350><c> we</c><00:09:48.560><c> in</c><00:09:48.769><c> are</c><00:09:49.069><c> we</c><00:09:49.220><c> in</c>

00:09:49.389 --> 00:09:49.399 align:start position:0%
portion of the array are we in are we in
 

00:09:49.399 --> 00:09:53.530 align:start position:0%
portion of the array are we in are we in
the<00:09:49.550><c> left</c><00:09:49.910><c> sorted</c><00:09:50.630><c> portion</c><00:09:50.899><c> and</c><00:09:52.389><c> like</c><00:09:53.389><c> I</c>

00:09:53.530 --> 00:09:53.540 align:start position:0%
the left sorted portion and like I
 

00:09:53.540 --> 00:09:55.980 align:start position:0%
the left sorted portion and like I
mentioned<00:09:53.899><c> before</c><00:09:54.019><c> we</c><00:09:54.380><c> can</c><00:09:54.529><c> check</c><00:09:54.769><c> that</c><00:09:55.040><c> if</c>

00:09:55.980 --> 00:09:55.990 align:start position:0%
mentioned before we can check that if
 

00:09:55.990 --> 00:10:02.290 align:start position:0%
mentioned before we can check that if
the<00:09:56.990><c> middle</c><00:09:57.350><c> value</c><00:09:58.990><c> is</c><00:10:00.880><c> greater</c><00:10:01.880><c> than</c><00:10:02.149><c> the</c>

00:10:02.290 --> 00:10:02.300 align:start position:0%
the middle value is greater than the
 

00:10:02.300 --> 00:10:05.530 align:start position:0%
the middle value is greater than the
left<00:10:02.540><c> value</c><00:10:03.790><c> well</c><00:10:04.790><c> greater</c><00:10:05.060><c> than</c><00:10:05.269><c> or</c><00:10:05.360><c> equal</c>

00:10:05.530 --> 00:10:05.540 align:start position:0%
left value well greater than or equal
 

00:10:05.540 --> 00:10:07.569 align:start position:0%
left value well greater than or equal
right<00:10:06.019><c> because</c><00:10:06.740><c> it's</c><00:10:06.860><c> possible</c><00:10:07.069><c> that</c><00:10:07.459><c> the</c>

00:10:07.569 --> 00:10:07.579 align:start position:0%
right because it's possible that the
 

00:10:07.579 --> 00:10:09.069 align:start position:0%
right because it's possible that the
middle<00:10:07.850><c> value</c><00:10:08.149><c> in</c><00:10:08.240><c> the</c><00:10:08.329><c> left</c><00:10:08.540><c> value</c><00:10:08.870><c> could</c><00:10:09.019><c> be</c>

00:10:09.069 --> 00:10:09.079 align:start position:0%
middle value in the left value could be
 

00:10:09.079 --> 00:10:11.860 align:start position:0%
middle value in the left value could be
the<00:10:09.319><c> same</c><00:10:09.620><c> value</c><00:10:10.100><c> the</c><00:10:10.880><c> else</c><00:10:11.089><c> condition</c><00:10:11.480><c> would</c>

00:10:11.860 --> 00:10:11.870 align:start position:0%
the same value the else condition would
 

00:10:11.870 --> 00:10:13.120 align:start position:0%
the same value the else condition would
be<00:10:12.019><c> that</c><00:10:12.199><c> we're</c><00:10:12.380><c> in</c><00:10:12.470><c> the</c><00:10:12.560><c> right</c><00:10:12.709><c> sorted</c>

00:10:13.120 --> 00:10:13.130 align:start position:0%
be that we're in the right sorted
 

00:10:13.130 --> 00:10:15.220 align:start position:0%
be that we're in the right sorted
portion<00:10:13.339><c> so</c><00:10:13.790><c> the</c><00:10:13.939><c> simplest</c><00:10:14.329><c> case</c><00:10:14.630><c> is</c><00:10:14.899><c> that</c><00:10:15.079><c> our</c>

00:10:15.220 --> 00:10:15.230 align:start position:0%
portion so the simplest case is that our
 

00:10:15.230 --> 00:10:18.569 align:start position:0%
portion so the simplest case is that our
target<00:10:15.560><c> is</c><00:10:15.920><c> greater</c><00:10:16.459><c> than</c><00:10:16.730><c> the</c><00:10:16.880><c> middle</c><00:10:17.149><c> value</c>

00:10:18.569 --> 00:10:18.579 align:start position:0%
target is greater than the middle value
 

00:10:18.579 --> 00:10:22.269 align:start position:0%
target is greater than the middle value
in<00:10:19.930><c> that</c><00:10:20.930><c> case</c><00:10:21.170><c> we're</c><00:10:21.439><c> going</c><00:10:21.560><c> to</c><00:10:21.620><c> search</c><00:10:21.889><c> right</c>

00:10:22.269 --> 00:10:22.279 align:start position:0%
in that case we're going to search right
 

00:10:22.279 --> 00:10:25.030 align:start position:0%
in that case we're going to search right
so<00:10:22.790><c> we</c><00:10:22.970><c> can</c><00:10:23.000><c> say</c><00:10:23.420><c> our</c><00:10:23.899><c> left</c><00:10:24.350><c> pointer</c><00:10:24.800><c> is</c><00:10:24.889><c> now</c>

00:10:25.030 --> 00:10:25.040 align:start position:0%
so we can say our left pointer is now
 

00:10:25.040 --> 00:10:29.139 align:start position:0%
so we can say our left pointer is now
going<00:10:25.279><c> to</c><00:10:25.339><c> be</c><00:10:25.519><c> mid</c><00:10:25.970><c> plus</c><00:10:26.269><c> 1</c><00:10:27.370><c> so</c><00:10:28.370><c> if</c><00:10:28.519><c> the</c><00:10:28.670><c> target</c>

00:10:29.139 --> 00:10:29.149 align:start position:0%
going to be mid plus 1 so if the target
 

00:10:29.149 --> 00:10:31.509 align:start position:0%
going to be mid plus 1 so if the target
is<00:10:29.269><c> actually</c><00:10:29.779><c> less</c><00:10:30.139><c> than</c><00:10:30.170><c> the</c><00:10:30.470><c> middle</c><00:10:30.889><c> then</c><00:10:31.310><c> we</c>

00:10:31.509 --> 00:10:31.519 align:start position:0%
is actually less than the middle then we
 

00:10:31.519 --> 00:10:33.699 align:start position:0%
is actually less than the middle then we
need<00:10:31.790><c> to</c><00:10:32.240><c> do</c><00:10:32.509><c> something</c><00:10:32.750><c> else</c><00:10:33.079><c> so</c><00:10:33.500><c> if</c><00:10:33.589><c> the</c>

00:10:33.699 --> 00:10:33.709 align:start position:0%
need to do something else so if the
 

00:10:33.709 --> 00:10:35.769 align:start position:0%
need to do something else so if the
target<00:10:34.160><c> is</c><00:10:34.250><c> less</c><00:10:34.670><c> than</c><00:10:34.939><c> the</c><00:10:35.060><c> middle</c><00:10:35.420><c> but</c><00:10:35.630><c> it's</c>

00:10:35.769 --> 00:10:35.779 align:start position:0%
target is less than the middle but it's
 

00:10:35.779 --> 00:10:38.559 align:start position:0%
target is less than the middle but it's
also<00:10:36.019><c> less</c><00:10:36.889><c> than</c><00:10:36.920><c> the</c><00:10:37.279><c> left</c><00:10:37.610><c> most</c><00:10:37.939><c> value</c><00:10:38.540><c> in</c>

00:10:38.559 --> 00:10:38.569 align:start position:0%
also less than the left most value in
 

00:10:38.569 --> 00:10:43.749 align:start position:0%
also less than the left most value in
nums<00:10:41.079><c> then</c><00:10:42.079><c> we</c><00:10:42.230><c> also</c><00:10:42.500><c> have</c><00:10:43.069><c> to</c><00:10:43.250><c> search</c><00:10:43.490><c> the</c>

00:10:43.749 --> 00:10:43.759 align:start position:0%
nums then we also have to search the
 

00:10:43.759 --> 00:10:45.819 align:start position:0%
nums then we also have to search the
right<00:10:43.970><c> portion</c><00:10:44.540><c> so</c><00:10:44.720><c> we're</c><00:10:44.839><c> gonna</c><00:10:44.959><c> do</c><00:10:45.199><c> left</c><00:10:45.589><c> is</c>

00:10:45.819 --> 00:10:45.829 align:start position:0%
right portion so we're gonna do left is
 

00:10:45.829 --> 00:10:48.550 align:start position:0%
right portion so we're gonna do left is
mid<00:10:46.100><c> plus</c><00:10:46.399><c> 1</c><00:10:46.699><c> now</c><00:10:47.420><c> notice</c><00:10:47.870><c> how</c><00:10:47.990><c> these</c><00:10:48.230><c> two</c>

00:10:48.550 --> 00:10:48.560 align:start position:0%
mid plus 1 now notice how these two
 

00:10:48.560 --> 00:10:50.860 align:start position:0%
mid plus 1 now notice how these two
cases<00:10:48.860><c> are</c><00:10:49.310><c> evaluating</c><00:10:50.089><c> to</c><00:10:50.209><c> the</c><00:10:50.329><c> same</c><00:10:50.540><c> thing</c>

00:10:50.860 --> 00:10:50.870 align:start position:0%
cases are evaluating to the same thing
 

00:10:50.870 --> 00:10:53.319 align:start position:0%
cases are evaluating to the same thing
that<00:10:51.139><c> means</c><00:10:51.319><c> we</c><00:10:51.500><c> can</c><00:10:51.649><c> condense</c><00:10:52.040><c> them</c><00:10:52.370><c> we</c><00:10:53.120><c> can</c>

00:10:53.319 --> 00:10:53.329 align:start position:0%
that means we can condense them we can
 

00:10:53.329 --> 00:10:56.980 align:start position:0%
that means we can condense them we can
get<00:10:53.540><c> rid</c><00:10:53.810><c> of</c><00:10:53.839><c> this</c><00:10:54.319><c> and</c><00:10:55.029><c> say</c><00:10:56.029><c> instead</c><00:10:56.360><c> if</c><00:10:56.779><c> the</c>

00:10:56.980 --> 00:10:56.990 align:start position:0%
get rid of this and say instead if the
 

00:10:56.990 --> 00:10:59.470 align:start position:0%
get rid of this and say instead if the
top<00:10:57.230><c> if</c><00:10:57.470><c> target</c><00:10:58.130><c> is</c><00:10:58.250><c> greater</c><00:10:58.699><c> than</c><00:10:58.939><c> the</c><00:10:59.089><c> middle</c>

00:10:59.470 --> 00:10:59.480 align:start position:0%
top if target is greater than the middle
 

00:10:59.480 --> 00:11:01.840 align:start position:0%
top if target is greater than the middle
or

00:11:01.840 --> 00:11:01.850 align:start position:0%
or
 

00:11:01.850 --> 00:11:04.990 align:start position:0%
or
if<00:11:02.390><c> the</c><00:11:02.840><c> target</c><00:11:03.260><c> is</c><00:11:03.380><c> less</c><00:11:04.070><c> than</c><00:11:04.370><c> the</c><00:11:04.520><c> left-most</c>

00:11:04.990 --> 00:11:05.000 align:start position:0%
if the target is less than the left-most
 

00:11:05.000 --> 00:11:08.080 align:start position:0%
if the target is less than the left-most
value<00:11:06.040><c> then</c><00:11:07.040><c> we</c><00:11:07.250><c> have</c><00:11:07.370><c> to</c><00:11:07.490><c> search</c><00:11:07.670><c> the</c><00:11:07.700><c> right</c>

00:11:08.080 --> 00:11:08.090 align:start position:0%
value then we have to search the right
 

00:11:08.090 --> 00:11:13.000 align:start position:0%
value then we have to search the right
portion<00:11:08.630><c> so</c><00:11:08.960><c> we</c><00:11:09.080><c> can</c><00:11:09.200><c> get</c><00:11:09.320><c> rid</c><00:11:09.530><c> of</c><00:11:09.560><c> this</c><00:11:10.180><c> and</c><00:11:12.010><c> if</c>

00:11:13.000 --> 00:11:13.010 align:start position:0%
portion so we can get rid of this and if
 

00:11:13.010 --> 00:11:17.050 align:start position:0%
portion so we can get rid of this and if
this<00:11:13.190><c> isn't</c><00:11:13.790><c> true</c><00:11:14.090><c> that</c><00:11:15.160><c> means</c><00:11:16.160><c> the</c><00:11:16.490><c> target</c><00:11:16.730><c> is</c>

00:11:17.050 --> 00:11:17.060 align:start position:0%
this isn't true that means the target is
 

00:11:17.060 --> 00:11:19.510 align:start position:0%
this isn't true that means the target is
less<00:11:17.930><c> than</c><00:11:18.170><c> the</c><00:11:18.350><c> middle</c><00:11:18.530><c> but</c><00:11:18.950><c> it's</c><00:11:19.070><c> greater</c>

00:11:19.510 --> 00:11:19.520 align:start position:0%
less than the middle but it's greater
 

00:11:19.520 --> 00:11:21.910 align:start position:0%
less than the middle but it's greater
than<00:11:19.670><c> the</c><00:11:20.000><c> left</c><00:11:20.300><c> that</c><00:11:21.050><c> means</c><00:11:21.350><c> we</c><00:11:21.500><c> search</c><00:11:21.680><c> the</c>

00:11:21.910 --> 00:11:21.920 align:start position:0%
than the left that means we search the
 

00:11:21.920 --> 00:11:23.980 align:start position:0%
than the left that means we search the
left<00:11:22.130><c> portions</c><00:11:22.670><c> so</c><00:11:22.940><c> we</c><00:11:23.090><c> can</c><00:11:23.240><c> update</c><00:11:23.450><c> our</c><00:11:23.630><c> right</c>

00:11:23.980 --> 00:11:23.990 align:start position:0%
left portions so we can update our right
 

00:11:23.990 --> 00:11:24.610 align:start position:0%
left portions so we can update our right
pointer

00:11:24.610 --> 00:11:24.620 align:start position:0%
pointer
 

00:11:24.620 --> 00:11:29.410 align:start position:0%
pointer
I<00:11:26.830><c> had</c><00:11:27.830><c> a</c><00:11:27.890><c> typo</c><00:11:28.310><c> over</c><00:11:28.550><c> here</c><00:11:28.820><c> we</c><00:11:29.090><c> don't</c><00:11:29.330><c> we're</c>

00:11:29.410 --> 00:11:29.420 align:start position:0%
I had a typo over here we don't we're
 

00:11:29.420 --> 00:11:30.850 align:start position:0%
I had a typo over here we don't we're
not<00:11:29.480><c> calling</c><00:11:29.750><c> it</c><00:11:29.900><c> left</c><00:11:30.200><c> we're</c><00:11:30.410><c> just</c><00:11:30.590><c> calling</c>

00:11:30.850 --> 00:11:30.860 align:start position:0%
not calling it left we're just calling
 

00:11:30.860 --> 00:11:34.270 align:start position:0%
not calling it left we're just calling
it<00:11:31.070><c> L</c><00:11:31.220><c> for</c><00:11:31.550><c> short</c><00:11:31.850><c> and</c><00:11:32.290><c> so</c><00:11:33.290><c> this</c><00:11:33.590><c> is</c><00:11:33.800><c> if</c><00:11:33.950><c> we</c><00:11:34.130><c> were</c>

00:11:34.270 --> 00:11:34.280 align:start position:0%
it L for short and so this is if we were
 

00:11:34.280 --> 00:11:36.010 align:start position:0%
it L for short and so this is if we were
in<00:11:34.370><c> the</c><00:11:34.490><c> right</c><00:11:34.700><c> sorted</c><00:11:35.150><c> portion</c><00:11:35.360><c> of</c><00:11:35.600><c> the</c><00:11:35.660><c> array</c>

00:11:36.010 --> 00:11:36.020 align:start position:0%
in the right sorted portion of the array
 

00:11:36.020 --> 00:11:41.590 align:start position:0%
in the right sorted portion of the array
the<00:11:37.090><c> easy</c><00:11:38.090><c> thing</c><00:11:38.450><c> is</c><00:11:38.630><c> if</c><00:11:38.870><c> target</c><00:11:39.530><c> is</c><00:11:40.300><c> less</c><00:11:41.300><c> than</c>

00:11:41.590 --> 00:11:41.600 align:start position:0%
the easy thing is if target is less than
 

00:11:41.600 --> 00:11:45.250 align:start position:0%
the easy thing is if target is less than
the<00:11:41.780><c> middle</c><00:11:42.760><c> that</c><00:11:43.760><c> means</c><00:11:43.820><c> we</c><00:11:44.270><c> go</c><00:11:44.480><c> left</c><00:11:44.810><c> so</c><00:11:45.140><c> we</c>

00:11:45.250 --> 00:11:45.260 align:start position:0%
the middle that means we go left so we
 

00:11:45.260 --> 00:11:47.080 align:start position:0%
the middle that means we go left so we
can<00:11:45.410><c> update</c><00:11:45.650><c> our</c><00:11:45.890><c> right</c><00:11:46.250><c> pointer</c><00:11:46.670><c> to</c><00:11:46.850><c> mid</c>

00:11:47.080 --> 00:11:47.090 align:start position:0%
can update our right pointer to mid
 

00:11:47.090 --> 00:11:51.550 align:start position:0%
can update our right pointer to mid
minus<00:11:47.480><c> one</c><00:11:49.030><c> so</c><00:11:50.030><c> if</c><00:11:50.180><c> this</c><00:11:50.300><c> isn't</c><00:11:50.600><c> true</c><00:11:50.840><c> meaning</c>

00:11:51.550 --> 00:11:51.560 align:start position:0%
minus one so if this isn't true meaning
 

00:11:51.560 --> 00:11:54.370 align:start position:0%
minus one so if this isn't true meaning
target<00:11:51.980><c> is</c><00:11:52.130><c> greater</c><00:11:52.640><c> than</c><00:11:52.880><c> middle</c><00:11:53.300><c> and</c><00:11:53.540><c> the</c>

00:11:54.370 --> 00:11:54.380 align:start position:0%
target is greater than middle and the
 

00:11:54.380 --> 00:11:57.460 align:start position:0%
target is greater than middle and the
target<00:11:54.890><c> is</c><00:11:55.270><c> greater</c><00:11:56.270><c> than</c><00:11:56.780><c> the</c><00:11:56.990><c> rightmost</c>

00:11:57.460 --> 00:11:57.470 align:start position:0%
target is greater than the rightmost
 

00:11:57.470 --> 00:12:06.280 align:start position:0%
target is greater than the rightmost
value<00:12:03.670><c> that</c><00:12:04.670><c> means</c><00:12:04.910><c> we</c><00:12:05.240><c> have</c><00:12:05.390><c> to</c><00:12:05.540><c> go</c><00:12:05.660><c> left</c><00:12:06.020><c> as</c>

00:12:06.280 --> 00:12:06.290 align:start position:0%
value that means we have to go left as
 

00:12:06.290 --> 00:12:09.400 align:start position:0%
value that means we have to go left as
well<00:12:06.560><c> so</c><00:12:07.130><c> write</c><00:12:07.850><c> equals</c><00:12:08.240><c> mid</c><00:12:08.540><c> minus</c><00:12:09.140><c> one</c>

00:12:09.400 --> 00:12:09.410 align:start position:0%
well so write equals mid minus one
 

00:12:09.410 --> 00:12:11.890 align:start position:0%
well so write equals mid minus one
notice<00:12:10.130><c> again</c><00:12:10.610><c> how</c><00:12:10.790><c> these</c><00:12:10.970><c> two</c><00:12:11.300><c> are</c><00:12:11.510><c> doing</c><00:12:11.720><c> the</c>

00:12:11.890 --> 00:12:11.900 align:start position:0%
notice again how these two are doing the
 

00:12:11.900 --> 00:12:14.110 align:start position:0%
notice again how these two are doing the
exact<00:12:12.200><c> same</c><00:12:12.230><c> thing</c><00:12:12.800><c> so</c><00:12:13.160><c> we</c><00:12:13.340><c> can</c><00:12:13.490><c> condense</c><00:12:13.820><c> them</c>

00:12:14.110 --> 00:12:14.120 align:start position:0%
exact same thing so we can condense them
 

00:12:14.120 --> 00:12:16.330 align:start position:0%
exact same thing so we can condense them
we<00:12:14.360><c> can</c><00:12:14.540><c> say</c><00:12:14.750><c> at</c><00:12:14.840><c> the</c><00:12:14.990><c> top</c><00:12:15.200><c> if</c><00:12:15.470><c> the</c><00:12:15.680><c> target</c><00:12:16.190><c> is</c>

00:12:16.330 --> 00:12:16.340 align:start position:0%
we can say at the top if the target is
 

00:12:16.340 --> 00:12:18.970 align:start position:0%
we can say at the top if the target is
less<00:12:16.610><c> than</c><00:12:16.850><c> the</c><00:12:16.940><c> middle</c><00:12:17.090><c> or</c><00:12:17.390><c> if</c><00:12:17.900><c> target</c><00:12:18.800><c> is</c>

00:12:18.970 --> 00:12:18.980 align:start position:0%
less than the middle or if target is
 

00:12:18.980 --> 00:12:22.270 align:start position:0%
less than the middle or if target is
greater<00:12:19.820><c> than</c><00:12:20.060><c> the</c><00:12:20.180><c> rightmost</c><00:12:20.600><c> value</c><00:12:21.280><c> then</c>

00:12:22.270 --> 00:12:22.280 align:start position:0%
greater than the rightmost value then
 

00:12:22.280 --> 00:12:23.980 align:start position:0%
greater than the rightmost value then
we're<00:12:22.550><c> going</c><00:12:22.700><c> to</c><00:12:22.760><c> search</c><00:12:23.000><c> the</c><00:12:23.210><c> left</c><00:12:23.450><c> portion</c>

00:12:23.980 --> 00:12:23.990 align:start position:0%
we're going to search the left portion
 

00:12:23.990 --> 00:12:25.840 align:start position:0%
we're going to search the left portion
so<00:12:24.170><c> we</c><00:12:24.290><c> update</c><00:12:24.650><c> our</c><00:12:24.680><c> right</c><00:12:24.980><c> pointer</c><00:12:25.340><c> so</c><00:12:25.550><c> we</c><00:12:25.670><c> get</c>

00:12:25.840 --> 00:12:25.850 align:start position:0%
so we update our right pointer so we get
 

00:12:25.850 --> 00:12:29.580 align:start position:0%
so we update our right pointer so we get
rid<00:12:26.000><c> of</c><00:12:26.090><c> this</c><00:12:26.390><c> and</c><00:12:26.980><c> the</c><00:12:27.980><c> else</c><00:12:28.220><c> condition</c><00:12:28.580><c> is</c>

00:12:29.580 --> 00:12:29.590 align:start position:0%
rid of this and the else condition is
 

00:12:29.590 --> 00:12:33.190 align:start position:0%
rid of this and the else condition is
that<00:12:30.590><c> the</c><00:12:31.190><c> target</c><00:12:31.790><c> is</c><00:12:31.970><c> greater</c><00:12:32.750><c> than</c><00:12:33.080><c> the</c>

00:12:33.190 --> 00:12:33.200 align:start position:0%
that the target is greater than the
 

00:12:33.200 --> 00:12:36.190 align:start position:0%
that the target is greater than the
middle<00:12:33.530><c> value</c><00:12:33.710><c> and</c><00:12:34.250><c> the</c><00:12:34.910><c> target</c><00:12:35.390><c> is</c><00:12:35.510><c> less</c><00:12:35.900><c> than</c>

00:12:36.190 --> 00:12:36.200 align:start position:0%
middle value and the target is less than
 

00:12:36.200 --> 00:12:38.350 align:start position:0%
middle value and the target is less than
the<00:12:36.320><c> right</c><00:12:36.530><c> value</c><00:12:37.070><c> in</c><00:12:37.250><c> that</c><00:12:37.580><c> case</c><00:12:37.880><c> we</c><00:12:38.120><c> only</c>

00:12:38.350 --> 00:12:38.360 align:start position:0%
the right value in that case we only
 

00:12:38.360 --> 00:12:40.270 align:start position:0%
the right value in that case we only
have<00:12:38.720><c> to</c><00:12:38.840><c> search</c><00:12:39.050><c> the</c><00:12:39.260><c> right</c><00:12:39.560><c> portion</c><00:12:40.070><c> of</c><00:12:40.190><c> the</c>

00:12:40.270 --> 00:12:40.280 align:start position:0%
have to search the right portion of the
 

00:12:40.280 --> 00:12:42.580 align:start position:0%
have to search the right portion of the
array<00:12:40.550><c> so</c><00:12:40.940><c> we</c><00:12:41.060><c> update</c><00:12:41.330><c> our</c><00:12:41.360><c> left</c><00:12:41.750><c> pointer</c><00:12:42.200><c> to</c>

00:12:42.580 --> 00:12:42.590 align:start position:0%
array so we update our left pointer to
 

00:12:42.590 --> 00:12:45.550 align:start position:0%
array so we update our left pointer to
mid<00:12:42.830><c> plus</c><00:12:43.130><c> one</c><00:12:43.630><c> these</c><00:12:44.630><c> are</c><00:12:44.660><c> all</c><00:12:45.020><c> of</c><00:12:45.170><c> the</c><00:12:45.290><c> cases</c>

00:12:45.550 --> 00:12:45.560 align:start position:0%
mid plus one these are all of the cases
 

00:12:45.560 --> 00:12:47.890 align:start position:0%
mid plus one these are all of the cases
right<00:12:46.010><c> so</c><00:12:46.370><c> if</c><00:12:46.550><c> we</c><00:12:46.700><c> find</c><00:12:47.120><c> our</c><00:12:47.360><c> result</c><00:12:47.750><c> we're</c>

00:12:47.890 --> 00:12:47.900 align:start position:0%
right so if we find our result we're
 

00:12:47.900 --> 00:12:49.990 align:start position:0%
right so if we find our result we're
going<00:12:47.960><c> to</c><00:12:48.080><c> return</c><00:12:48.410><c> it</c><00:12:48.590><c> up</c><00:12:48.710><c> here</c><00:12:49.160><c> but</c><00:12:49.790><c> if</c><00:12:49.910><c> we</c>

00:12:49.990 --> 00:12:50.000 align:start position:0%
going to return it up here but if we
 

00:12:50.000 --> 00:12:51.850 align:start position:0%
going to return it up here but if we
don't<00:12:50.180><c> find</c><00:12:50.510><c> it</c><00:12:50.690><c> we'll</c><00:12:50.840><c> exit</c><00:12:51.290><c> the</c><00:12:51.410><c> loop</c><00:12:51.620><c> and</c>

00:12:51.850 --> 00:12:51.860 align:start position:0%
don't find it we'll exit the loop and
 

00:12:51.860 --> 00:12:55.660 align:start position:0%
don't find it we'll exit the loop and
we'll<00:12:52.310><c> return</c><00:12:52.760><c> negative</c><00:12:53.240><c> one</c><00:12:53.570><c> and</c><00:12:54.400><c> just</c><00:12:55.400><c> as</c><00:12:55.580><c> I</c>

00:12:55.660 --> 00:12:55.670 align:start position:0%
we'll return negative one and just as I
 

00:12:55.670 --> 00:12:57.220 align:start position:0%
we'll return negative one and just as I
expected<00:12:55.790><c> because</c><00:12:56.360><c> I</c><00:12:56.510><c> just</c><00:12:56.780><c> finished</c><00:12:56.960><c> this</c>

00:12:57.220 --> 00:12:57.230 align:start position:0%
expected because I just finished this
 

00:12:57.230 --> 00:12:58.930 align:start position:0%
expected because I just finished this
problem<00:12:57.590><c> like</c><00:12:57.770><c> a</c><00:12:57.800><c> half</c><00:12:58.010><c> hour</c><00:12:58.220><c> ago</c><00:12:58.430><c> it</c><00:12:58.730><c> worked</c>

00:12:58.930 --> 00:12:58.940 align:start position:0%
problem like a half hour ago it worked
 

00:12:58.940 --> 00:13:01.450 align:start position:0%
problem like a half hour ago it worked
perfectly<00:12:59.450><c> so</c><00:12:59.810><c> this</c><00:12:59.960><c> is</c><00:13:00.110><c> not</c><00:13:00.260><c> an</c><00:13:00.530><c> easy</c><00:13:01.040><c> problem</c>

00:13:01.450 --> 00:13:01.460 align:start position:0%
perfectly so this is not an easy problem
 

00:13:01.460 --> 00:13:03.400 align:start position:0%
perfectly so this is not an easy problem
the<00:13:01.760><c> code</c><00:13:02.090><c> looks</c><00:13:02.420><c> pretty</c><00:13:02.720><c> easy</c><00:13:03.050><c> but</c><00:13:03.290><c> you</c>

00:13:03.400 --> 00:13:03.410 align:start position:0%
the code looks pretty easy but you
 

00:13:03.410 --> 00:13:05.560 align:start position:0%
the code looks pretty easy but you
really<00:13:03.740><c> have</c><00:13:03.860><c> to</c><00:13:03.980><c> understand</c><00:13:04.820><c> the</c><00:13:05.030><c> discrete</c>

00:13:05.560 --> 00:13:05.570 align:start position:0%
really have to understand the discrete
 

00:13:05.570 --> 00:13:07.630 align:start position:0%
really have to understand the discrete
cases<00:13:06.140><c> like</c><00:13:06.500><c> are</c><00:13:06.710><c> we</c><00:13:06.800><c> in</c><00:13:06.890><c> the</c><00:13:07.040><c> left</c><00:13:07.280><c> sorted</c>

00:13:07.630 --> 00:13:07.640 align:start position:0%
cases like are we in the left sorted
 

00:13:07.640 --> 00:13:09.490 align:start position:0%
cases like are we in the left sorted
portion<00:13:07.820><c> or</c><00:13:08.180><c> the</c><00:13:08.420><c> right</c><00:13:08.630><c> sorted</c><00:13:08.990><c> portion</c><00:13:09.170><c> and</c>

00:13:09.490 --> 00:13:09.500 align:start position:0%
portion or the right sorted portion and
 

00:13:09.500 --> 00:13:11.140 align:start position:0%
portion or the right sorted portion and
then<00:13:09.860><c> what's</c><00:13:10.160><c> going</c><00:13:10.310><c> to</c><00:13:10.370><c> happen</c><00:13:10.730><c> as</c><00:13:10.880><c> a</c><00:13:10.910><c> result</c>

00:13:11.140 --> 00:13:11.150 align:start position:0%
then what's going to happen as a result
 

00:13:11.150 --> 00:13:12.880 align:start position:0%
then what's going to happen as a result
which<00:13:11.630><c> part</c><00:13:11.990><c> of</c><00:13:12.050><c> the</c><00:13:12.170><c> array</c><00:13:12.440><c> do</c><00:13:12.590><c> we</c><00:13:12.680><c> have</c><00:13:12.770><c> to</c>

00:13:12.880 --> 00:13:12.890 align:start position:0%
which part of the array do we have to
 

00:13:12.890 --> 00:13:15.129 align:start position:0%
which part of the array do we have to
check<00:13:13.220><c> based</c><00:13:14.180><c> on</c><00:13:14.420><c> the</c>

00:13:15.129 --> 00:13:15.139 align:start position:0%
check based on the
 

00:13:15.139 --> 00:13:16.929 align:start position:0%
check based on the
Harrison<00:13:15.499><c> conditions</c><00:13:16.009><c> you</c><00:13:16.429><c> really</c><00:13:16.699><c> want</c><00:13:16.850><c> to</c>

00:13:16.929 --> 00:13:16.939 align:start position:0%
Harrison conditions you really want to
 

00:13:16.939 --> 00:13:19.150 align:start position:0%
Harrison conditions you really want to
dry<00:13:17.209><c> it</c><00:13:17.269><c> out</c><00:13:17.480><c> and</c><00:13:17.749><c> kind</c><00:13:18.439><c> of</c><00:13:18.559><c> look</c><00:13:18.949><c> at</c><00:13:19.009><c> the</c>

00:13:19.150 --> 00:13:19.160 align:start position:0%
dry it out and kind of look at the
 

00:13:19.160 --> 00:13:21.189 align:start position:0%
dry it out and kind of look at the
picture<00:13:19.519><c> before</c><00:13:19.910><c> you</c><00:13:19.999><c> write</c><00:13:20.179><c> the</c><00:13:20.209><c> code</c><00:13:20.359><c> I</c><00:13:20.869><c> hope</c>

00:13:21.189 --> 00:13:21.199 align:start position:0%
picture before you write the code I hope
 

00:13:21.199 --> 00:13:23.530 align:start position:0%
picture before you write the code I hope
this<00:13:21.350><c> was</c><00:13:21.559><c> helpful</c><00:13:22.009><c> if</c><00:13:22.220><c> it</c><00:13:22.670><c> was</c><00:13:22.879><c> leave</c><00:13:23.299><c> a</c><00:13:23.329><c> like</c>

00:13:23.530 --> 00:13:23.540 align:start position:0%
this was helpful if it was leave a like
 

00:13:23.540 --> 00:13:27.040 align:start position:0%
this was helpful if it was leave a like
and<00:13:23.689><c> subscribe</c><00:13:23.809><c> and</c><00:13:24.319><c> thank</c><00:13:24.649><c> you</c><00:13:24.739><c> for</c><00:13:24.889><c> watching</c>

