WEBVTT
Kind: captions
Language: en

00:00:00.000 --> 00:00:01.670 align:start position:0%
 
hey<00:00:00.240><c> everyone</c><00:00:00.640><c> welcome</c><00:00:01.040><c> back</c><00:00:01.280><c> and</c><00:00:01.439><c> let's</c>

00:00:01.670 --> 00:00:01.680 align:start position:0%
hey everyone welcome back and let's
 

00:00:01.680 --> 00:00:03.510 align:start position:0%
hey everyone welcome back and let's
write<00:00:01.839><c> some</c><00:00:02.000><c> more</c><00:00:02.240><c> neat</c><00:00:02.480><c> code</c><00:00:02.800><c> today</c><00:00:03.120><c> so</c><00:00:03.280><c> today</c>

00:00:03.510 --> 00:00:03.520 align:start position:0%
write some more neat code today so today
 

00:00:03.520 --> 00:00:04.630 align:start position:0%
write some more neat code today so today
let's<00:00:03.760><c> solve</c><00:00:04.080><c> coco</c>

00:00:04.630 --> 00:00:04.640 align:start position:0%
let's solve coco
 

00:00:04.640 --> 00:00:06.950 align:start position:0%
let's solve coco
eating<00:00:04.880><c> bananas</c><00:00:05.759><c> but</c><00:00:05.920><c> before</c><00:00:06.240><c> we</c><00:00:06.399><c> do</c><00:00:06.560><c> i</c><00:00:06.720><c> just</c>

00:00:06.950 --> 00:00:06.960 align:start position:0%
eating bananas but before we do i just
 

00:00:06.960 --> 00:00:08.230 align:start position:0%
eating bananas but before we do i just
want<00:00:07.120><c> to</c><00:00:07.200><c> say</c><00:00:07.359><c> that</c><00:00:07.520><c> if</c><00:00:07.680><c> you</c><00:00:07.759><c> do</c><00:00:07.919><c> have</c><00:00:08.080><c> any</c>

00:00:08.230 --> 00:00:08.240 align:start position:0%
want to say that if you do have any
 

00:00:08.240 --> 00:00:10.070 align:start position:0%
want to say that if you do have any
requested<00:00:08.880><c> problems</c><00:00:09.280><c> you</c><00:00:09.360><c> can</c><00:00:09.519><c> feel</c><00:00:09.760><c> free</c><00:00:09.920><c> to</c>

00:00:10.070 --> 00:00:10.080 align:start position:0%
requested problems you can feel free to
 

00:00:10.080 --> 00:00:11.830 align:start position:0%
requested problems you can feel free to
leave<00:00:10.240><c> those</c><00:00:10.480><c> in</c><00:00:10.559><c> the</c><00:00:10.639><c> comments</c><00:00:11.040><c> i</c><00:00:11.200><c> do</c><00:00:11.440><c> have</c><00:00:11.679><c> a</c>

00:00:11.830 --> 00:00:11.840 align:start position:0%
leave those in the comments i do have a
 

00:00:11.840 --> 00:00:12.950 align:start position:0%
leave those in the comments i do have a
large<00:00:12.240><c> backlog</c>

00:00:12.950 --> 00:00:12.960 align:start position:0%
large backlog
 

00:00:12.960 --> 00:00:14.709 align:start position:0%
large backlog
of<00:00:13.120><c> requested</c><00:00:13.679><c> problems</c><00:00:14.160><c> that</c><00:00:14.240><c> i'm</c><00:00:14.400><c> working</c>

00:00:14.709 --> 00:00:14.719 align:start position:0%
of requested problems that i'm working
 

00:00:14.719 --> 00:00:16.230 align:start position:0%
of requested problems that i'm working
through<00:00:14.960><c> so</c><00:00:15.120><c> it</c><00:00:15.200><c> may</c><00:00:15.440><c> take</c><00:00:15.599><c> some</c><00:00:15.759><c> time</c><00:00:15.920><c> for</c><00:00:16.080><c> me</c>

00:00:16.230 --> 00:00:16.240 align:start position:0%
through so it may take some time for me
 

00:00:16.240 --> 00:00:17.029 align:start position:0%
through so it may take some time for me
to<00:00:16.400><c> get</c><00:00:16.640><c> there</c>

00:00:17.029 --> 00:00:17.039 align:start position:0%
to get there
 

00:00:17.039 --> 00:00:18.950 align:start position:0%
to get there
but<00:00:17.279><c> you</c><00:00:17.359><c> can</c><00:00:17.520><c> feel</c><00:00:17.680><c> free</c><00:00:17.920><c> to</c><00:00:18.000><c> request</c><00:00:18.480><c> at</c><00:00:18.640><c> any</c>

00:00:18.950 --> 00:00:18.960 align:start position:0%
but you can feel free to request at any
 

00:00:18.960 --> 00:00:20.790 align:start position:0%
but you can feel free to request at any
time<00:00:19.359><c> and</c><00:00:19.520><c> if</c><00:00:19.600><c> you</c><00:00:19.760><c> find</c><00:00:19.920><c> this</c><00:00:20.160><c> video</c><00:00:20.400><c> helpful</c>

00:00:20.790 --> 00:00:20.800 align:start position:0%
time and if you find this video helpful
 

00:00:20.800 --> 00:00:22.150 align:start position:0%
time and if you find this video helpful
don't<00:00:20.960><c> forget</c><00:00:21.279><c> to</c><00:00:21.439><c> leave</c><00:00:21.600><c> a</c><00:00:21.760><c> like</c><00:00:22.080><c> and</c>

00:00:22.150 --> 00:00:22.160 align:start position:0%
don't forget to leave a like and
 

00:00:22.160 --> 00:00:24.070 align:start position:0%
don't forget to leave a like and
subscribe<00:00:22.720><c> for</c><00:00:22.880><c> more</c><00:00:23.039><c> videos</c>

00:00:24.070 --> 00:00:24.080 align:start position:0%
subscribe for more videos
 

00:00:24.080 --> 00:00:25.990 align:start position:0%
subscribe for more videos
so<00:00:24.240><c> this</c><00:00:24.480><c> is</c><00:00:24.640><c> a</c><00:00:24.800><c> pretty</c><00:00:25.119><c> interesting</c><00:00:25.599><c> problem</c>

00:00:25.990 --> 00:00:26.000 align:start position:0%
so this is a pretty interesting problem
 

00:00:26.000 --> 00:00:28.790 align:start position:0%
so this is a pretty interesting problem
because<00:00:26.800><c> there</c><00:00:27.039><c> is</c><00:00:27.359><c> a</c><00:00:27.519><c> brute</c><00:00:27.840><c> force</c><00:00:28.160><c> solution</c>

00:00:28.790 --> 00:00:28.800 align:start position:0%
because there is a brute force solution
 

00:00:28.800 --> 00:00:30.390 align:start position:0%
because there is a brute force solution
that<00:00:28.960><c> we</c><00:00:29.119><c> can</c><00:00:29.279><c> arrive</c><00:00:29.599><c> at</c><00:00:29.760><c> and</c><00:00:29.920><c> that</c><00:00:30.080><c> brute</c>

00:00:30.390 --> 00:00:30.400 align:start position:0%
that we can arrive at and that brute
 

00:00:30.400 --> 00:00:32.069 align:start position:0%
that we can arrive at and that brute
force<00:00:30.640><c> solution</c><00:00:31.199><c> can</c><00:00:31.439><c> easily</c><00:00:31.840><c> be</c>

00:00:32.069 --> 00:00:32.079 align:start position:0%
force solution can easily be
 

00:00:32.079 --> 00:00:32.870 align:start position:0%
force solution can easily be
transitioned

00:00:32.870 --> 00:00:32.880 align:start position:0%
transitioned
 

00:00:32.880 --> 00:00:35.190 align:start position:0%
transitioned
into<00:00:33.200><c> a</c><00:00:33.360><c> binary</c><00:00:33.920><c> search</c><00:00:34.320><c> solution</c><00:00:34.719><c> which</c><00:00:35.040><c> is</c>

00:00:35.190 --> 00:00:35.200 align:start position:0%
into a binary search solution which is
 

00:00:35.200 --> 00:00:37.350 align:start position:0%
into a binary search solution which is
the<00:00:35.440><c> optimal</c><00:00:35.920><c> solution</c><00:00:36.399><c> for</c><00:00:36.640><c> this</c><00:00:36.880><c> problem</c><00:00:37.200><c> so</c>

00:00:37.350 --> 00:00:37.360 align:start position:0%
the optimal solution for this problem so
 

00:00:37.360 --> 00:00:38.630 align:start position:0%
the optimal solution for this problem so
we're<00:00:37.520><c> going</c><00:00:37.600><c> to</c><00:00:37.680><c> be</c><00:00:37.840><c> working</c><00:00:38.079><c> our</c><00:00:38.239><c> way</c>

00:00:38.630 --> 00:00:38.640 align:start position:0%
we're going to be working our way
 

00:00:38.640 --> 00:00:40.389 align:start position:0%
we're going to be working our way
from<00:00:38.800><c> the</c><00:00:38.960><c> brute</c><00:00:39.200><c> force</c><00:00:39.520><c> to</c><00:00:39.760><c> that</c><00:00:39.920><c> binary</c>

00:00:40.389 --> 00:00:40.399 align:start position:0%
from the brute force to that binary
 

00:00:40.399 --> 00:00:42.630 align:start position:0%
from the brute force to that binary
search<00:00:40.640><c> solution</c><00:00:41.440><c> so</c><00:00:41.760><c> coco</c><00:00:42.160><c> loves</c><00:00:42.399><c> eating</c>

00:00:42.630 --> 00:00:42.640 align:start position:0%
search solution so coco loves eating
 

00:00:42.640 --> 00:00:43.670 align:start position:0%
search solution so coco loves eating
bananas<00:00:43.200><c> and</c><00:00:43.280><c> we</c><00:00:43.440><c> have</c>

00:00:43.670 --> 00:00:43.680 align:start position:0%
bananas and we have
 

00:00:43.680 --> 00:00:46.389 align:start position:0%
bananas and we have
n<00:00:44.000><c> piles</c><00:00:44.399><c> of</c><00:00:44.559><c> bananas</c><00:00:45.200><c> given</c><00:00:45.440><c> to</c><00:00:45.680><c> us</c><00:00:45.920><c> in</c><00:00:46.160><c> a</c>

00:00:46.389 --> 00:00:46.399 align:start position:0%
n piles of bananas given to us in a
 

00:00:46.399 --> 00:00:48.069 align:start position:0%
n piles of bananas given to us in a
piles<00:00:47.039><c> input</c><00:00:47.440><c> array</c>

00:00:48.069 --> 00:00:48.079 align:start position:0%
piles input array
 

00:00:48.079 --> 00:00:50.150 align:start position:0%
piles input array
we're<00:00:48.239><c> also</c><00:00:48.480><c> given</c><00:00:48.800><c> a</c><00:00:48.879><c> second</c><00:00:49.200><c> parameter</c><00:00:49.840><c> h</c>

00:00:50.150 --> 00:00:50.160 align:start position:0%
we're also given a second parameter h
 

00:00:50.160 --> 00:00:51.350 align:start position:0%
we're also given a second parameter h
which<00:00:50.399><c> is</c><00:00:50.480><c> the</c><00:00:50.640><c> number</c><00:00:50.960><c> of</c>

00:00:51.350 --> 00:00:51.360 align:start position:0%
which is the number of
 

00:00:51.360 --> 00:00:53.910 align:start position:0%
which is the number of
hours<00:00:51.760><c> that</c><00:00:51.920><c> we</c><00:00:52.160><c> have</c><00:00:52.719><c> in</c><00:00:52.879><c> order</c><00:00:53.199><c> to</c><00:00:53.360><c> eat</c><00:00:53.760><c> all</c>

00:00:53.910 --> 00:00:53.920 align:start position:0%
hours that we have in order to eat all
 

00:00:53.920 --> 00:00:55.990 align:start position:0%
hours that we have in order to eat all
of<00:00:54.079><c> the</c><00:00:54.160><c> bananas</c><00:00:54.719><c> so</c><00:00:54.879><c> we</c><00:00:54.960><c> have</c><00:00:55.039><c> to</c><00:00:55.199><c> eat</c><00:00:55.440><c> them</c>

00:00:55.990 --> 00:00:56.000 align:start position:0%
of the bananas so we have to eat them
 

00:00:56.000 --> 00:00:59.670 align:start position:0%
of the bananas so we have to eat them
within<00:00:56.559><c> h</c><00:00:57.039><c> hours</c><00:00:57.760><c> and</c><00:00:57.920><c> so</c><00:00:58.160><c> coco</c><00:00:58.640><c> has</c><00:00:58.879><c> a</c><00:00:59.120><c> certain</c>

00:00:59.670 --> 00:00:59.680 align:start position:0%
within h hours and so coco has a certain
 

00:00:59.680 --> 00:01:02.069 align:start position:0%
within h hours and so coco has a certain
eating<00:01:00.160><c> speed</c><00:01:00.559><c> where</c><00:01:00.719><c> she</c><00:01:00.960><c> can</c><00:01:01.199><c> eat</c><00:01:01.680><c> a</c><00:01:01.760><c> certain</c>

00:01:02.069 --> 00:01:02.079 align:start position:0%
eating speed where she can eat a certain
 

00:01:02.079 --> 00:01:04.149 align:start position:0%
eating speed where she can eat a certain
number<00:01:02.399><c> of</c><00:01:02.480><c> bananas</c><00:01:03.039><c> per</c><00:01:03.359><c> hour</c><00:01:03.680><c> and</c><00:01:03.840><c> that</c>

00:01:04.149 --> 00:01:04.159 align:start position:0%
number of bananas per hour and that
 

00:01:04.159 --> 00:01:05.350 align:start position:0%
number of bananas per hour and that
variable<00:01:04.640><c> happens</c><00:01:04.960><c> to</c><00:01:05.040><c> be</c>

00:01:05.350 --> 00:01:05.360 align:start position:0%
variable happens to be
 

00:01:05.360 --> 00:01:08.390 align:start position:0%
variable happens to be
k<00:01:05.920><c> and</c><00:01:06.240><c> k</c><00:01:06.720><c> is</c><00:01:06.880><c> not</c><00:01:07.119><c> an</c><00:01:07.360><c> input</c><00:01:07.760><c> variable</c><00:01:08.159><c> that's</c>

00:01:08.390 --> 00:01:08.400 align:start position:0%
k and k is not an input variable that's
 

00:01:08.400 --> 00:01:10.070 align:start position:0%
k and k is not an input variable that's
what<00:01:08.560><c> we're</c><00:01:08.720><c> trying</c><00:01:09.040><c> to</c><00:01:09.119><c> determine</c><00:01:09.760><c> as</c><00:01:09.920><c> the</c>

00:01:10.070 --> 00:01:10.080 align:start position:0%
what we're trying to determine as the
 

00:01:10.080 --> 00:01:12.070 align:start position:0%
what we're trying to determine as the
solution<00:01:10.799><c> for</c><00:01:11.040><c> this</c><00:01:11.280><c> problem</c>

00:01:12.070 --> 00:01:12.080 align:start position:0%
solution for this problem
 

00:01:12.080 --> 00:01:15.270 align:start position:0%
solution for this problem
each<00:01:12.479><c> hour</c><00:01:13.040><c> she</c><00:01:13.200><c> can</c><00:01:13.520><c> only</c><00:01:13.920><c> choose</c><00:01:14.560><c> one</c><00:01:14.960><c> pile</c>

00:01:15.270 --> 00:01:15.280 align:start position:0%
each hour she can only choose one pile
 

00:01:15.280 --> 00:01:16.469 align:start position:0%
each hour she can only choose one pile
of<00:01:15.439><c> bananas</c>

00:01:16.469 --> 00:01:16.479 align:start position:0%
of bananas
 

00:01:16.479 --> 00:01:19.190 align:start position:0%
of bananas
and<00:01:16.640><c> eat</c><00:01:17.119><c> k</c><00:01:17.439><c> bananas</c><00:01:18.080><c> from</c><00:01:18.320><c> that</c><00:01:18.560><c> pile</c><00:01:18.960><c> so</c>

00:01:19.190 --> 00:01:19.200 align:start position:0%
and eat k bananas from that pile so
 

00:01:19.200 --> 00:01:20.469 align:start position:0%
and eat k bananas from that pile so
that's<00:01:19.439><c> what</c><00:01:19.600><c> we're</c><00:01:19.680><c> trying</c><00:01:19.920><c> to</c><00:01:20.000><c> determine</c>

00:01:20.469 --> 00:01:20.479 align:start position:0%
that's what we're trying to determine
 

00:01:20.479 --> 00:01:20.950 align:start position:0%
that's what we're trying to determine
that<00:01:20.640><c> k</c>

00:01:20.950 --> 00:01:20.960 align:start position:0%
that k
 

00:01:20.960 --> 00:01:23.990 align:start position:0%
that k
value<00:01:21.759><c> if</c><00:01:21.920><c> the</c><00:01:22.159><c> pile</c><00:01:22.640><c> has</c><00:01:23.119><c> less</c><00:01:23.439><c> than</c><00:01:23.759><c> k</c>

00:01:23.990 --> 00:01:24.000 align:start position:0%
value if the pile has less than k
 

00:01:24.000 --> 00:01:24.710 align:start position:0%
value if the pile has less than k
bananas

00:01:24.710 --> 00:01:24.720 align:start position:0%
bananas
 

00:01:24.720 --> 00:01:26.710 align:start position:0%
bananas
she'll<00:01:25.040><c> eat</c><00:01:25.360><c> all</c><00:01:25.600><c> of</c><00:01:25.680><c> the</c><00:01:25.840><c> bananas</c><00:01:26.320><c> but</c><00:01:26.479><c> she's</c>

00:01:26.710 --> 00:01:26.720 align:start position:0%
she'll eat all of the bananas but she's
 

00:01:26.720 --> 00:01:29.190 align:start position:0%
she'll eat all of the bananas but she's
not<00:01:26.880><c> gonna</c><00:01:27.200><c> eat</c><00:01:27.520><c> any</c><00:01:27.920><c> extra</c><00:01:28.320><c> bananas</c><00:01:28.880><c> from</c><00:01:29.040><c> a</c>

00:01:29.190 --> 00:01:29.200 align:start position:0%
not gonna eat any extra bananas from a
 

00:01:29.200 --> 00:01:31.109 align:start position:0%
not gonna eat any extra bananas from a
different<00:01:29.600><c> pile</c><00:01:29.920><c> so</c><00:01:30.079><c> what</c><00:01:30.320><c> we're</c><00:01:30.560><c> saying</c><00:01:30.880><c> here</c>

00:01:31.109 --> 00:01:31.119 align:start position:0%
different pile so what we're saying here
 

00:01:31.119 --> 00:01:31.429 align:start position:0%
different pile so what we're saying here
is

00:01:31.429 --> 00:01:31.439 align:start position:0%
is
 

00:01:31.439 --> 00:01:34.950 align:start position:0%
is
coco<00:01:31.840><c> can</c><00:01:32.079><c> only</c><00:01:32.560><c> eat</c><00:01:33.040><c> at</c><00:01:33.439><c> most</c><00:01:34.000><c> one</c><00:01:34.320><c> pile</c>

00:01:34.950 --> 00:01:34.960 align:start position:0%
coco can only eat at most one pile
 

00:01:34.960 --> 00:01:38.069 align:start position:0%
coco can only eat at most one pile
one<00:01:35.280><c> entire</c><00:01:35.920><c> pile</c><00:01:36.320><c> of</c><00:01:36.479><c> bananas</c><00:01:37.200><c> in</c><00:01:37.439><c> a</c><00:01:37.600><c> given</c>

00:01:38.069 --> 00:01:38.079 align:start position:0%
one entire pile of bananas in a given
 

00:01:38.079 --> 00:01:38.550 align:start position:0%
one entire pile of bananas in a given
hour

00:01:38.550 --> 00:01:38.560 align:start position:0%
hour
 

00:01:38.560 --> 00:01:40.630 align:start position:0%
hour
so<00:01:38.720><c> what</c><00:01:38.880><c> does</c><00:01:39.119><c> that</c><00:01:39.439><c> tell</c><00:01:39.680><c> us</c><00:01:39.920><c> already</c><00:01:40.400><c> we're</c>

00:01:40.630 --> 00:01:40.640 align:start position:0%
so what does that tell us already we're
 

00:01:40.640 --> 00:01:42.550 align:start position:0%
so what does that tell us already we're
given<00:01:40.960><c> some</c><00:01:41.360><c> key</c><00:01:41.680><c> information</c>

00:01:42.550 --> 00:01:42.560 align:start position:0%
given some key information
 

00:01:42.560 --> 00:01:44.389 align:start position:0%
given some key information
let's<00:01:42.799><c> say</c><00:01:43.040><c> we're</c><00:01:43.200><c> given</c><00:01:43.520><c> a</c><00:01:43.680><c> certain</c><00:01:44.000><c> number</c>

00:01:44.389 --> 00:01:44.399 align:start position:0%
let's say we're given a certain number
 

00:01:44.399 --> 00:01:46.630 align:start position:0%
let's say we're given a certain number
of<00:01:44.640><c> piles</c><00:01:44.960><c> right</c><00:01:45.119><c> so</c><00:01:45.280><c> basically</c><00:01:45.840><c> the</c><00:01:46.159><c> length</c>

00:01:46.630 --> 00:01:46.640 align:start position:0%
of piles right so basically the length
 

00:01:46.640 --> 00:01:50.950 align:start position:0%
of piles right so basically the length
of<00:01:46.960><c> p</c><00:01:47.520><c> h</c><00:01:48.320><c> must</c><00:01:48.799><c> be</c><00:01:49.280><c> greater</c><00:01:49.759><c> than</c><00:01:50.000><c> or</c><00:01:50.320><c> equal</c><00:01:50.720><c> to</c>

00:01:50.950 --> 00:01:50.960 align:start position:0%
of p h must be greater than or equal to
 

00:01:50.960 --> 00:01:52.149 align:start position:0%
of p h must be greater than or equal to
the<00:01:51.200><c> length</c><00:01:51.520><c> of</c><00:01:51.759><c> p</c>

00:01:52.149 --> 00:01:52.159 align:start position:0%
the length of p
 

00:01:52.159 --> 00:01:54.550 align:start position:0%
the length of p
why<00:01:52.640><c> is</c><00:01:52.799><c> that</c><00:01:53.119><c> because</c><00:01:53.759><c> let's</c><00:01:53.920><c> say</c><00:01:54.079><c> we</c><00:01:54.320><c> have</c>

00:01:54.550 --> 00:01:54.560 align:start position:0%
why is that because let's say we have
 

00:01:54.560 --> 00:01:56.069 align:start position:0%
why is that because let's say we have
five<00:01:55.119><c> piles</c><00:01:55.680><c> right</c>

00:01:56.069 --> 00:01:56.079 align:start position:0%
five piles right
 

00:01:56.079 --> 00:01:57.830 align:start position:0%
five piles right
so<00:01:56.320><c> let's</c><00:01:56.479><c> say</c><00:01:56.640><c> we</c><00:01:56.799><c> had</c><00:01:56.960><c> five</c><00:01:57.280><c> piles</c><00:01:57.600><c> and</c><00:01:57.680><c> let's</c>

00:01:57.830 --> 00:01:57.840 align:start position:0%
so let's say we had five piles and let's
 

00:01:57.840 --> 00:01:59.270 align:start position:0%
so let's say we had five piles and let's
say<00:01:58.000><c> this</c><00:01:58.159><c> is</c><00:01:58.240><c> what</c><00:01:58.399><c> the</c><00:01:58.479><c> piles</c><00:01:58.880><c> look</c><00:01:59.040><c> like</c><00:01:59.200><c> the</c>

00:01:59.270 --> 00:01:59.280 align:start position:0%
say this is what the piles look like the
 

00:01:59.280 --> 00:02:01.109 align:start position:0%
say this is what the piles look like the
values<00:01:59.759><c> aren't</c><00:02:00.000><c> too</c><00:02:00.240><c> important</c><00:02:00.640><c> right</c><00:02:00.880><c> one</c>

00:02:01.109 --> 00:02:01.119 align:start position:0%
values aren't too important right one
 

00:02:01.119 --> 00:02:01.990 align:start position:0%
values aren't too important right one
one<00:02:01.439><c> two</c><00:02:01.680><c> two</c>

00:02:01.990 --> 00:02:02.000 align:start position:0%
one two two
 

00:02:02.000 --> 00:02:04.789 align:start position:0%
one two two
three<00:02:02.479><c> and</c><00:02:02.799><c> let's</c><00:02:02.960><c> say</c><00:02:03.119><c> we</c><00:02:03.280><c> had</c><00:02:03.600><c> h</c><00:02:03.840><c> equals</c><00:02:04.399><c> four</c>

00:02:04.789 --> 00:02:04.799 align:start position:0%
three and let's say we had h equals four
 

00:02:04.799 --> 00:02:05.429 align:start position:0%
three and let's say we had h equals four
hours

00:02:05.429 --> 00:02:05.439 align:start position:0%
hours
 

00:02:05.439 --> 00:02:07.590 align:start position:0%
hours
well<00:02:05.759><c> let's</c><00:02:06.000><c> say</c><00:02:06.240><c> k</c><00:02:06.560><c> equals</c><00:02:06.880><c> some</c><00:02:07.119><c> really</c><00:02:07.360><c> big</c>

00:02:07.590 --> 00:02:07.600 align:start position:0%
well let's say k equals some really big
 

00:02:07.600 --> 00:02:09.190 align:start position:0%
well let's say k equals some really big
number<00:02:08.000><c> like</c><00:02:08.160><c> three</c><00:02:08.479><c> right</c><00:02:08.720><c> basically</c><00:02:09.119><c> the</c>

00:02:09.190 --> 00:02:09.200 align:start position:0%
number like three right basically the
 

00:02:09.200 --> 00:02:11.190 align:start position:0%
number like three right basically the
max<00:02:09.520><c> of</c><00:02:09.599><c> this</c><00:02:09.840><c> input</c><00:02:10.080><c> array</c><00:02:10.319><c> okay</c><00:02:10.560><c> cocoa</c><00:02:10.959><c> eight</c>

00:02:11.190 --> 00:02:11.200 align:start position:0%
max of this input array okay cocoa eight
 

00:02:11.200 --> 00:02:12.949 align:start position:0%
max of this input array okay cocoa eight
this<00:02:11.360><c> entire</c><00:02:11.760><c> pile</c><00:02:12.000><c> cocaine</c><00:02:12.480><c> this</c><00:02:12.640><c> entire</c>

00:02:12.949 --> 00:02:12.959 align:start position:0%
this entire pile cocaine this entire
 

00:02:12.959 --> 00:02:14.710 align:start position:0%
this entire pile cocaine this entire
pile<00:02:13.200><c> this</c><00:02:13.360><c> entire</c><00:02:13.680><c> pile</c><00:02:14.000><c> and</c><00:02:14.160><c> this</c><00:02:14.400><c> entire</c>

00:02:14.710 --> 00:02:14.720 align:start position:0%
pile this entire pile and this entire
 

00:02:14.720 --> 00:02:15.110 align:start position:0%
pile this entire pile and this entire
pile

00:02:15.110 --> 00:02:15.120 align:start position:0%
pile
 

00:02:15.120 --> 00:02:16.869 align:start position:0%
pile
because<00:02:15.360><c> she</c><00:02:15.520><c> could</c><00:02:15.680><c> only</c><00:02:15.920><c> eat</c><00:02:16.239><c> four</c><00:02:16.480><c> piles</c>

00:02:16.869 --> 00:02:16.879 align:start position:0%
because she could only eat four piles
 

00:02:16.879 --> 00:02:18.790 align:start position:0%
because she could only eat four piles
because<00:02:17.120><c> we</c><00:02:17.280><c> only</c><00:02:17.440><c> have</c><00:02:17.680><c> four</c><00:02:18.080><c> hours</c><00:02:18.400><c> right</c>

00:02:18.790 --> 00:02:18.800 align:start position:0%
because we only have four hours right
 

00:02:18.800 --> 00:02:21.910 align:start position:0%
because we only have four hours right
coco<00:02:19.200><c> can</c><00:02:19.440><c> only</c><00:02:19.760><c> eat</c><00:02:20.160><c> one</c><00:02:20.560><c> pile</c><00:02:20.959><c> per</c><00:02:21.360><c> hour</c><00:02:21.760><c> so</c>

00:02:21.910 --> 00:02:21.920 align:start position:0%
coco can only eat one pile per hour so
 

00:02:21.920 --> 00:02:22.550 align:start position:0%
coco can only eat one pile per hour so
if<00:02:22.080><c> she</c><00:02:22.239><c> ate</c>

00:02:22.550 --> 00:02:22.560 align:start position:0%
if she ate
 

00:02:22.560 --> 00:02:24.869 align:start position:0%
if she ate
all<00:02:22.720><c> four</c><00:02:23.040><c> piles</c><00:02:23.360><c> over</c><00:02:23.599><c> here</c><00:02:23.920><c> we'd</c><00:02:24.239><c> still</c><00:02:24.560><c> have</c>

00:02:24.869 --> 00:02:24.879 align:start position:0%
all four piles over here we'd still have
 

00:02:24.879 --> 00:02:25.910 align:start position:0%
all four piles over here we'd still have
one<00:02:25.120><c> left</c><00:02:25.440><c> over</c>

00:02:25.910 --> 00:02:25.920 align:start position:0%
one left over
 

00:02:25.920 --> 00:02:29.190 align:start position:0%
one left over
that's<00:02:26.239><c> why</c><00:02:26.480><c> they</c><00:02:26.800><c> guarantee</c><00:02:27.599><c> us</c><00:02:28.000><c> that</c><00:02:28.319><c> h</c><00:02:28.879><c> is</c>

00:02:29.190 --> 00:02:29.200 align:start position:0%
that's why they guarantee us that h is
 

00:02:29.200 --> 00:02:31.190 align:start position:0%
that's why they guarantee us that h is
always<00:02:29.599><c> going</c><00:02:29.680><c> to</c><00:02:29.760><c> be</c><00:02:30.080><c> greater</c><00:02:30.480><c> than</c><00:02:30.640><c> or</c><00:02:30.879><c> equal</c>

00:02:31.190 --> 00:02:31.200 align:start position:0%
always going to be greater than or equal
 

00:02:31.200 --> 00:02:33.270 align:start position:0%
always going to be greater than or equal
to<00:02:31.360><c> the</c><00:02:31.440><c> number</c><00:02:31.680><c> of</c><00:02:31.920><c> piles</c><00:02:32.239><c> so</c><00:02:32.400><c> the</c><00:02:32.560><c> minimum</c>

00:02:33.270 --> 00:02:33.280 align:start position:0%
to the number of piles so the minimum
 

00:02:33.280 --> 00:02:36.390 align:start position:0%
to the number of piles so the minimum
in<00:02:33.440><c> this</c><00:02:33.760><c> problem</c><00:02:34.400><c> given</c><00:02:34.720><c> this</c><00:02:35.040><c> input</c><00:02:35.360><c> array</c><00:02:36.000><c> h</c>

00:02:36.390 --> 00:02:36.400 align:start position:0%
in this problem given this input array h
 

00:02:36.400 --> 00:02:38.229 align:start position:0%
in this problem given this input array h
the<00:02:36.640><c> minimum</c><00:02:37.040><c> it</c><00:02:37.120><c> could</c><00:02:37.280><c> possibly</c><00:02:37.760><c> be</c><00:02:38.080><c> is</c>

00:02:38.229 --> 00:02:38.239 align:start position:0%
the minimum it could possibly be is
 

00:02:38.239 --> 00:02:39.670 align:start position:0%
the minimum it could possibly be is
going<00:02:38.400><c> to</c><00:02:38.560><c> be</c><00:02:38.879><c> five</c>

00:02:39.670 --> 00:02:39.680 align:start position:0%
going to be five
 

00:02:39.680 --> 00:02:41.830 align:start position:0%
going to be five
and<00:02:39.920><c> i</c><00:02:40.000><c> sort</c><00:02:40.239><c> of</c><00:02:40.480><c> wrote</c><00:02:40.800><c> over</c><00:02:41.040><c> it</c><00:02:41.120><c> but</c><00:02:41.280><c> the</c><00:02:41.360><c> last</c>

00:02:41.830 --> 00:02:41.840 align:start position:0%
and i sort of wrote over it but the last
 

00:02:41.840 --> 00:02:43.270 align:start position:0%
and i sort of wrote over it but the last
important<00:02:42.239><c> thing</c><00:02:42.400><c> that</c><00:02:42.480><c> they</c><00:02:42.640><c> tell</c><00:02:42.879><c> us</c><00:02:43.040><c> in</c><00:02:43.120><c> the</c>

00:02:43.270 --> 00:02:43.280 align:start position:0%
important thing that they tell us in the
 

00:02:43.280 --> 00:02:44.229 align:start position:0%
important thing that they tell us in the
problem<00:02:43.680><c> is</c><00:02:43.920><c> we</c>

00:02:44.229 --> 00:02:44.239 align:start position:0%
problem is we
 

00:02:44.239 --> 00:02:46.790 align:start position:0%
problem is we
want<00:02:44.720><c> to</c><00:02:44.879><c> determine</c><00:02:45.360><c> that</c><00:02:45.599><c> eating</c><00:02:46.080><c> speed</c><00:02:46.480><c> k</c>

00:02:46.790 --> 00:02:46.800 align:start position:0%
want to determine that eating speed k
 

00:02:46.800 --> 00:02:48.390 align:start position:0%
want to determine that eating speed k
that<00:02:46.959><c> cocoa</c><00:02:47.360><c> is</c><00:02:47.440><c> going</c><00:02:47.519><c> to</c><00:02:47.680><c> eat</c><00:02:47.920><c> at</c><00:02:48.000><c> but</c><00:02:48.239><c> we</c>

00:02:48.390 --> 00:02:48.400 align:start position:0%
that cocoa is going to eat at but we
 

00:02:48.400 --> 00:02:49.190 align:start position:0%
that cocoa is going to eat at but we
want<00:02:48.560><c> to</c><00:02:48.640><c> know</c><00:02:48.800><c> the</c>

00:02:49.190 --> 00:02:49.200 align:start position:0%
want to know the
 

00:02:49.200 --> 00:02:51.670 align:start position:0%
want to know the
minimum<00:02:49.840><c> integer</c><00:02:50.400><c> k</c><00:02:50.640><c> the</c><00:02:50.800><c> minimum</c><00:02:51.280><c> eating</c>

00:02:51.670 --> 00:02:51.680 align:start position:0%
minimum integer k the minimum eating
 

00:02:51.680 --> 00:02:52.790 align:start position:0%
minimum integer k the minimum eating
speed<00:02:52.080><c> of</c><00:02:52.239><c> cocoa</c>

00:02:52.790 --> 00:02:52.800 align:start position:0%
speed of cocoa
 

00:02:52.800 --> 00:02:55.509 align:start position:0%
speed of cocoa
that<00:02:53.040><c> she</c><00:02:53.200><c> could</c><00:02:53.440><c> eat</c><00:02:54.000><c> all</c><00:02:54.239><c> of</c><00:02:54.400><c> the</c><00:02:54.560><c> piles</c><00:02:55.360><c> in</c>

00:02:55.509 --> 00:02:55.519 align:start position:0%
that she could eat all of the piles in
 

00:02:55.519 --> 00:02:56.630 align:start position:0%
that she could eat all of the piles in
exactly<00:02:56.239><c> five</c>

00:02:56.630 --> 00:02:56.640 align:start position:0%
exactly five
 

00:02:56.640 --> 00:02:59.430 align:start position:0%
exactly five
hours<00:02:57.680><c> or</c><00:02:58.000><c> exactly</c><00:02:58.400><c> whatever</c><00:02:58.800><c> that</c><00:02:59.120><c> time</c>

00:02:59.430 --> 00:02:59.440 align:start position:0%
hours or exactly whatever that time
 

00:02:59.440 --> 00:03:01.509 align:start position:0%
hours or exactly whatever that time
interval<00:02:59.920><c> that</c><00:03:00.159><c> number</c><00:03:00.400><c> of</c><00:03:00.560><c> hours</c><00:03:00.879><c> happens</c><00:03:01.360><c> to</c>

00:03:01.509 --> 00:03:01.519 align:start position:0%
interval that number of hours happens to
 

00:03:01.519 --> 00:03:02.070 align:start position:0%
interval that number of hours happens to
be

00:03:02.070 --> 00:03:02.080 align:start position:0%
be
 

00:03:02.080 --> 00:03:03.990 align:start position:0%
be
so<00:03:02.239><c> let's</c><00:03:02.480><c> take</c><00:03:02.640><c> a</c><00:03:02.720><c> look</c><00:03:02.959><c> at</c><00:03:03.120><c> this</c><00:03:03.360><c> example</c>

00:03:03.990 --> 00:03:04.000 align:start position:0%
so let's take a look at this example
 

00:03:04.000 --> 00:03:05.670 align:start position:0%
so let's take a look at this example
they<00:03:04.159><c> give</c><00:03:04.319><c> us</c><00:03:04.480><c> an</c><00:03:04.640><c> input</c><00:03:04.959><c> array</c><00:03:05.200><c> of</c><00:03:05.360><c> four</c>

00:03:05.670 --> 00:03:05.680 align:start position:0%
they give us an input array of four
 

00:03:05.680 --> 00:03:06.790 align:start position:0%
they give us an input array of four
piles<00:03:06.080><c> and</c><00:03:06.239><c> they</c><00:03:06.319><c> give</c><00:03:06.560><c> us</c>

00:03:06.790 --> 00:03:06.800 align:start position:0%
piles and they give us
 

00:03:06.800 --> 00:03:08.630 align:start position:0%
piles and they give us
eight<00:03:07.120><c> hours</c><00:03:07.519><c> to</c><00:03:07.680><c> eat</c><00:03:07.920><c> all</c><00:03:08.159><c> four</c><00:03:08.319><c> of</c><00:03:08.400><c> those</c>

00:03:08.630 --> 00:03:08.640 align:start position:0%
eight hours to eat all four of those
 

00:03:08.640 --> 00:03:10.229 align:start position:0%
eight hours to eat all four of those
piles<00:03:09.120><c> what's</c><00:03:09.360><c> the</c><00:03:09.599><c> minimum</c>

00:03:10.229 --> 00:03:10.239 align:start position:0%
piles what's the minimum
 

00:03:10.239 --> 00:03:13.509 align:start position:0%
piles what's the minimum
k<00:03:10.800><c> the</c><00:03:10.959><c> minimum</c><00:03:11.440><c> eating</c><00:03:11.840><c> speed</c><00:03:12.560><c> that</c><00:03:13.120><c> coco</c>

00:03:13.509 --> 00:03:13.519 align:start position:0%
k the minimum eating speed that coco
 

00:03:13.519 --> 00:03:14.229 align:start position:0%
k the minimum eating speed that coco
could<00:03:13.760><c> use</c>

00:03:14.229 --> 00:03:14.239 align:start position:0%
could use
 

00:03:14.239 --> 00:03:17.509 align:start position:0%
could use
to<00:03:14.480><c> eat</c><00:03:14.800><c> all</c><00:03:15.040><c> of</c><00:03:15.120><c> these</c><00:03:15.440><c> piles</c><00:03:16.159><c> in</c><00:03:16.560><c> at</c><00:03:16.959><c> most</c>

00:03:17.509 --> 00:03:17.519 align:start position:0%
to eat all of these piles in at most
 

00:03:17.519 --> 00:03:19.190 align:start position:0%
to eat all of these piles in at most
eight<00:03:17.840><c> hours</c><00:03:18.159><c> so</c><00:03:18.239><c> we</c><00:03:18.400><c> have</c><00:03:18.480><c> to</c><00:03:18.560><c> eat</c><00:03:18.879><c> all</c><00:03:19.040><c> the</c>

00:03:19.190 --> 00:03:19.200 align:start position:0%
eight hours so we have to eat all the
 

00:03:19.200 --> 00:03:20.630 align:start position:0%
eight hours so we have to eat all the
piles<00:03:19.599><c> in</c><00:03:19.760><c> eight</c><00:03:20.159><c> hours</c>

00:03:20.630 --> 00:03:20.640 align:start position:0%
piles in eight hours
 

00:03:20.640 --> 00:03:23.670 align:start position:0%
piles in eight hours
or<00:03:20.959><c> less</c><00:03:21.760><c> well</c><00:03:21.920><c> the</c><00:03:22.159><c> brute</c><00:03:22.640><c> force</c><00:03:23.040><c> would</c><00:03:23.200><c> be</c><00:03:23.519><c> to</c>

00:03:23.670 --> 00:03:23.680 align:start position:0%
or less well the brute force would be to
 

00:03:23.680 --> 00:03:25.830 align:start position:0%
or less well the brute force would be to
start<00:03:24.080><c> at</c><00:03:24.319><c> one</c><00:03:24.640><c> right</c><00:03:24.879><c> because</c><00:03:25.200><c> coco</c><00:03:25.599><c> could</c>

00:03:25.830 --> 00:03:25.840 align:start position:0%
start at one right because coco could
 

00:03:25.840 --> 00:03:26.309 align:start position:0%
start at one right because coco could
try

00:03:26.309 --> 00:03:26.319 align:start position:0%
try
 

00:03:26.319 --> 00:03:29.509 align:start position:0%
try
k<00:03:26.640><c> equals</c><00:03:27.360><c> one</c><00:03:27.680><c> right</c><00:03:28.159><c> can</c><00:03:28.319><c> we</c><00:03:28.480><c> eat</c><00:03:28.720><c> all</c><00:03:28.959><c> piles</c>

00:03:29.509 --> 00:03:29.519 align:start position:0%
k equals one right can we eat all piles
 

00:03:29.519 --> 00:03:31.509 align:start position:0%
k equals one right can we eat all piles
in<00:03:29.760><c> eight</c><00:03:30.080><c> hours</c><00:03:30.400><c> then</c><00:03:30.640><c> well</c><00:03:30.879><c> it</c><00:03:30.959><c> will</c><00:03:31.120><c> take</c><00:03:31.360><c> us</c>

00:03:31.509 --> 00:03:31.519 align:start position:0%
in eight hours then well it will take us
 

00:03:31.519 --> 00:03:32.789 align:start position:0%
in eight hours then well it will take us
three<00:03:31.920><c> hours</c><00:03:32.239><c> to</c><00:03:32.480><c> eat</c>

00:03:32.789 --> 00:03:32.799 align:start position:0%
three hours to eat
 

00:03:32.799 --> 00:03:35.190 align:start position:0%
three hours to eat
the<00:03:32.959><c> first</c><00:03:33.360><c> pile</c><00:03:33.680><c> right</c><00:03:34.000><c> three</c><00:03:34.319><c> divided</c><00:03:34.959><c> by</c>

00:03:35.190 --> 00:03:35.200 align:start position:0%
the first pile right three divided by
 

00:03:35.200 --> 00:03:36.390 align:start position:0%
the first pile right three divided by
one<00:03:35.519><c> which</c><00:03:35.760><c> is</c><00:03:35.920><c> our</c><00:03:36.080><c> k</c>

00:03:36.390 --> 00:03:36.400 align:start position:0%
one which is our k
 

00:03:36.400 --> 00:03:38.229 align:start position:0%
one which is our k
right<00:03:36.640><c> three</c><00:03:36.879><c> divided</c><00:03:37.200><c> by</c><00:03:37.440><c> one</c><00:03:37.920><c> is</c><00:03:38.000><c> going</c><00:03:38.159><c> to</c>

00:03:38.229 --> 00:03:38.239 align:start position:0%
right three divided by one is going to
 

00:03:38.239 --> 00:03:40.550 align:start position:0%
right three divided by one is going to
be<00:03:38.480><c> three</c><00:03:38.879><c> hours</c><00:03:39.200><c> to</c><00:03:39.280><c> eat</c><00:03:39.440><c> this</c><00:03:39.680><c> first</c><00:03:40.000><c> pile</c>

00:03:40.550 --> 00:03:40.560 align:start position:0%
be three hours to eat this first pile
 

00:03:40.560 --> 00:03:42.309 align:start position:0%
be three hours to eat this first pile
and<00:03:40.879><c> to</c><00:03:41.040><c> eat</c><00:03:41.200><c> the</c><00:03:41.360><c> second</c><00:03:41.599><c> pile</c><00:03:41.920><c> is</c><00:03:42.000><c> gonna</c><00:03:42.159><c> be</c>

00:03:42.309 --> 00:03:42.319 align:start position:0%
and to eat the second pile is gonna be
 

00:03:42.319 --> 00:03:43.910 align:start position:0%
and to eat the second pile is gonna be
even<00:03:42.560><c> more</c><00:03:42.799><c> that's</c><00:03:43.040><c> gonna</c><00:03:43.200><c> be</c><00:03:43.440><c> six</c><00:03:43.680><c> hours</c>

00:03:43.910 --> 00:03:43.920 align:start position:0%
even more that's gonna be six hours
 

00:03:43.920 --> 00:03:45.430 align:start position:0%
even more that's gonna be six hours
right<00:03:44.159><c> six</c><00:03:44.400><c> divided</c><00:03:44.799><c> by</c><00:03:44.959><c> one</c>

00:03:45.430 --> 00:03:45.440 align:start position:0%
right six divided by one
 

00:03:45.440 --> 00:03:47.589 align:start position:0%
right six divided by one
six<00:03:45.760><c> hours</c><00:03:46.000><c> so</c><00:03:46.159><c> so</c><00:03:46.319><c> far</c><00:03:46.480><c> we</c><00:03:46.640><c> already</c><00:03:46.959><c> have</c><00:03:47.200><c> nine</c>

00:03:47.589 --> 00:03:47.599 align:start position:0%
six hours so so far we already have nine
 

00:03:47.599 --> 00:03:49.270 align:start position:0%
six hours so so far we already have nine
hours<00:03:48.080><c> and</c><00:03:48.159><c> we</c><00:03:48.319><c> haven't</c><00:03:48.640><c> even</c><00:03:48.879><c> eaten</c><00:03:49.120><c> the</c>

00:03:49.270 --> 00:03:49.280 align:start position:0%
hours and we haven't even eaten the
 

00:03:49.280 --> 00:03:49.990 align:start position:0%
hours and we haven't even eaten the
entire

00:03:49.990 --> 00:03:50.000 align:start position:0%
entire
 

00:03:50.000 --> 00:03:52.470 align:start position:0%
entire
number<00:03:50.319><c> of</c><00:03:50.480><c> piles</c><00:03:51.040><c> so</c><00:03:51.200><c> therefore</c><00:03:51.920><c> k</c><00:03:52.159><c> equals</c>

00:03:52.470 --> 00:03:52.480 align:start position:0%
number of piles so therefore k equals
 

00:03:52.480 --> 00:03:54.149 align:start position:0%
number of piles so therefore k equals
one<00:03:52.879><c> is</c><00:03:53.040><c> not</c><00:03:53.360><c> going</c><00:03:53.599><c> to</c><00:03:53.760><c> work</c>

00:03:54.149 --> 00:03:54.159 align:start position:0%
one is not going to work
 

00:03:54.159 --> 00:03:55.990 align:start position:0%
one is not going to work
and<00:03:54.319><c> we</c><00:03:54.480><c> could</c><00:03:54.640><c> just</c><00:03:54.799><c> continue</c><00:03:55.360><c> this</c><00:03:55.680><c> brute</c>

00:03:55.990 --> 00:03:56.000 align:start position:0%
and we could just continue this brute
 

00:03:56.000 --> 00:03:57.670 align:start position:0%
and we could just continue this brute
force<00:03:56.319><c> approach</c><00:03:56.720><c> right</c><00:03:56.959><c> now</c><00:03:57.120><c> try</c><00:03:57.439><c> k</c>

00:03:57.670 --> 00:03:57.680 align:start position:0%
force approach right now try k
 

00:03:57.680 --> 00:03:59.830 align:start position:0%
force approach right now try k
equals<00:03:58.080><c> two</c><00:03:58.640><c> right</c><00:03:58.879><c> and</c><00:03:58.959><c> then</c><00:03:59.120><c> do</c><00:03:59.280><c> the</c><00:03:59.519><c> exact</c>

00:03:59.830 --> 00:03:59.840 align:start position:0%
equals two right and then do the exact
 

00:03:59.840 --> 00:04:00.949 align:start position:0%
equals two right and then do the exact
same<00:04:00.080><c> computation</c>

00:04:00.949 --> 00:04:00.959 align:start position:0%
same computation
 

00:04:00.959 --> 00:04:03.990 align:start position:0%
same computation
with<00:04:01.200><c> k</c><00:04:01.439><c> equals</c><00:04:01.840><c> 2.</c><00:04:02.480><c> now</c><00:04:02.720><c> my</c><00:04:02.959><c> question</c><00:04:03.360><c> to</c><00:04:03.599><c> you</c>

00:04:03.990 --> 00:04:04.000 align:start position:0%
with k equals 2. now my question to you
 

00:04:04.000 --> 00:04:06.390 align:start position:0%
with k equals 2. now my question to you
is<00:04:04.400><c> what's</c><00:04:04.959><c> we</c><00:04:05.120><c> know</c><00:04:05.280><c> that</c><00:04:05.439><c> the</c><00:04:05.599><c> minimum</c><00:04:06.239><c> like</c>

00:04:06.390 --> 00:04:06.400 align:start position:0%
is what's we know that the minimum like
 

00:04:06.400 --> 00:04:07.670 align:start position:0%
is what's we know that the minimum like
possible<00:04:06.799><c> solution</c><00:04:07.200><c> would</c><00:04:07.280><c> be</c><00:04:07.439><c> k</c>

00:04:07.670 --> 00:04:07.680 align:start position:0%
possible solution would be k
 

00:04:07.680 --> 00:04:09.670 align:start position:0%
possible solution would be k
equals<00:04:07.920><c> 1</c><00:04:08.159><c> right</c><00:04:08.400><c> k</c><00:04:08.640><c> can't</c><00:04:08.879><c> be</c><00:04:09.120><c> zero</c><00:04:09.519><c> because</c>

00:04:09.670 --> 00:04:09.680 align:start position:0%
equals 1 right k can't be zero because
 

00:04:09.680 --> 00:04:11.030 align:start position:0%
equals 1 right k can't be zero because
that<00:04:09.840><c> would</c><00:04:10.000><c> mean</c><00:04:10.159><c> we're</c><00:04:10.319><c> not</c><00:04:10.480><c> eating</c><00:04:10.799><c> any</c>

00:04:11.030 --> 00:04:11.040 align:start position:0%
that would mean we're not eating any
 

00:04:11.040 --> 00:04:13.030 align:start position:0%
that would mean we're not eating any
pile<00:04:11.360><c> so</c><00:04:11.599><c> the</c><00:04:11.760><c> minimum</c><00:04:12.319><c> is</c><00:04:12.560><c> one</c>

00:04:13.030 --> 00:04:13.040 align:start position:0%
pile so the minimum is one
 

00:04:13.040 --> 00:04:15.509 align:start position:0%
pile so the minimum is one
what's<00:04:13.280><c> the</c><00:04:13.519><c> maximum</c><00:04:14.080><c> that</c><00:04:14.319><c> k</c><00:04:14.560><c> could</c><00:04:14.879><c> possibly</c>

00:04:15.509 --> 00:04:15.519 align:start position:0%
what's the maximum that k could possibly
 

00:04:15.519 --> 00:04:16.150 align:start position:0%
what's the maximum that k could possibly
be

00:04:16.150 --> 00:04:16.160 align:start position:0%
be
 

00:04:16.160 --> 00:04:18.550 align:start position:0%
be
given<00:04:16.560><c> this</c><00:04:16.880><c> in</c><00:04:17.040><c> parade</c><00:04:17.840><c> and</c><00:04:18.000><c> given</c><00:04:18.320><c> this</c>

00:04:18.550 --> 00:04:18.560 align:start position:0%
given this in parade and given this
 

00:04:18.560 --> 00:04:19.430 align:start position:0%
given this in parade and given this
number<00:04:18.799><c> of</c><00:04:18.959><c> hours</c>

00:04:19.430 --> 00:04:19.440 align:start position:0%
number of hours
 

00:04:19.440 --> 00:04:21.270 align:start position:0%
number of hours
well<00:04:19.680><c> remember</c><00:04:20.079><c> the</c><00:04:20.239><c> number</c><00:04:20.479><c> of</c><00:04:20.639><c> hours</c><00:04:21.040><c> is</c>

00:04:21.270 --> 00:04:21.280 align:start position:0%
well remember the number of hours is
 

00:04:21.280 --> 00:04:22.469 align:start position:0%
well remember the number of hours is
always<00:04:21.680><c> going</c><00:04:21.919><c> to</c><00:04:22.079><c> be</c>

00:04:22.469 --> 00:04:22.479 align:start position:0%
always going to be
 

00:04:22.479 --> 00:04:23.990 align:start position:0%
always going to be
greater<00:04:22.800><c> than</c><00:04:22.960><c> or</c><00:04:23.120><c> equal</c><00:04:23.360><c> to</c><00:04:23.520><c> the</c><00:04:23.600><c> number</c><00:04:23.840><c> of</c>

00:04:23.990 --> 00:04:24.000 align:start position:0%
greater than or equal to the number of
 

00:04:24.000 --> 00:04:26.870 align:start position:0%
greater than or equal to the number of
piles<00:04:24.720><c> so</c><00:04:25.120><c> in</c><00:04:25.280><c> the</c><00:04:25.600><c> worst</c><00:04:26.160><c> case</c>

00:04:26.870 --> 00:04:26.880 align:start position:0%
piles so in the worst case
 

00:04:26.880 --> 00:04:29.909 align:start position:0%
piles so in the worst case
k<00:04:27.199><c> would</c><00:04:27.440><c> basically</c><00:04:28.000><c> be</c><00:04:28.240><c> the</c><00:04:28.560><c> max</c><00:04:29.040><c> number</c><00:04:29.680><c> that</c>

00:04:29.909 --> 00:04:29.919 align:start position:0%
k would basically be the max number that
 

00:04:29.919 --> 00:04:31.749 align:start position:0%
k would basically be the max number that
happens<00:04:30.240><c> to</c><00:04:30.320><c> be</c><00:04:30.560><c> in</c><00:04:30.639><c> our</c><00:04:30.800><c> piles</c><00:04:31.199><c> for</c><00:04:31.360><c> example</c>

00:04:31.749 --> 00:04:31.759 align:start position:0%
happens to be in our piles for example
 

00:04:31.759 --> 00:04:32.310 align:start position:0%
happens to be in our piles for example
if<00:04:32.000><c> k</c>

00:04:32.310 --> 00:04:32.320 align:start position:0%
if k
 

00:04:32.320 --> 00:04:35.749 align:start position:0%
if k
equals<00:04:33.040><c> 11</c><00:04:34.160><c> right</c><00:04:34.639><c> that</c><00:04:34.880><c> means</c><00:04:35.120><c> we're</c><00:04:35.360><c> able</c><00:04:35.600><c> to</c>

00:04:35.749 --> 00:04:35.759 align:start position:0%
equals 11 right that means we're able to
 

00:04:35.759 --> 00:04:38.150 align:start position:0%
equals 11 right that means we're able to
eat<00:04:36.000><c> the</c><00:04:36.320><c> max</c><00:04:36.720><c> pile</c><00:04:37.199><c> in</c><00:04:37.360><c> exactly</c>

00:04:38.150 --> 00:04:38.160 align:start position:0%
eat the max pile in exactly
 

00:04:38.160 --> 00:04:40.870 align:start position:0%
eat the max pile in exactly
one<00:04:38.560><c> hour</c><00:04:38.960><c> right</c><00:04:39.440><c> and</c><00:04:39.600><c> if</c><00:04:39.759><c> we</c><00:04:39.919><c> can</c><00:04:40.080><c> eat</c><00:04:40.240><c> the</c><00:04:40.479><c> max</c>

00:04:40.870 --> 00:04:40.880 align:start position:0%
one hour right and if we can eat the max
 

00:04:40.880 --> 00:04:42.469 align:start position:0%
one hour right and if we can eat the max
pile<00:04:41.280><c> in</c><00:04:41.440><c> one</c><00:04:41.680><c> hour</c><00:04:41.919><c> that</c><00:04:42.080><c> means</c>

00:04:42.469 --> 00:04:42.479 align:start position:0%
pile in one hour that means
 

00:04:42.479 --> 00:04:44.950 align:start position:0%
pile in one hour that means
every<00:04:43.040><c> other</c><00:04:43.360><c> pile</c><00:04:43.840><c> is</c><00:04:44.080><c> also</c><00:04:44.400><c> going</c><00:04:44.560><c> to</c><00:04:44.720><c> take</c>

00:04:44.950 --> 00:04:44.960 align:start position:0%
every other pile is also going to take
 

00:04:44.960 --> 00:04:45.830 align:start position:0%
every other pile is also going to take
us<00:04:45.360><c> only</c>

00:04:45.830 --> 00:04:45.840 align:start position:0%
us only
 

00:04:45.840 --> 00:04:48.390 align:start position:0%
us only
one<00:04:46.160><c> hour</c><00:04:46.720><c> so</c><00:04:46.960><c> therefore</c><00:04:47.680><c> we're</c><00:04:47.840><c> going</c><00:04:47.919><c> to</c><00:04:48.080><c> eat</c>

00:04:48.390 --> 00:04:48.400 align:start position:0%
one hour so therefore we're going to eat
 

00:04:48.400 --> 00:04:49.510 align:start position:0%
one hour so therefore we're going to eat
every<00:04:48.639><c> single</c><00:04:48.960><c> pile</c>

00:04:49.510 --> 00:04:49.520 align:start position:0%
every single pile
 

00:04:49.520 --> 00:04:52.629 align:start position:0%
every single pile
in<00:04:49.840><c> four</c><00:04:50.240><c> hours</c><00:04:50.720><c> and</c><00:04:50.880><c> we</c><00:04:51.199><c> know</c><00:04:51.440><c> for</c><00:04:51.680><c> sure</c><00:04:52.320><c> that</c>

00:04:52.629 --> 00:04:52.639 align:start position:0%
in four hours and we know for sure that
 

00:04:52.639 --> 00:04:52.950 align:start position:0%
in four hours and we know for sure that
this

00:04:52.950 --> 00:04:52.960 align:start position:0%
this
 

00:04:52.960 --> 00:04:54.870 align:start position:0%
this
is<00:04:53.120><c> going</c><00:04:53.360><c> to</c><00:04:53.520><c> be</c><00:04:53.759><c> less</c><00:04:54.000><c> than</c><00:04:54.160><c> whatever</c><00:04:54.720><c> is</c>

00:04:54.870 --> 00:04:54.880 align:start position:0%
is going to be less than whatever is
 

00:04:54.880 --> 00:04:56.150 align:start position:0%
is going to be less than whatever is
given<00:04:55.120><c> to</c><00:04:55.360><c> us</c><00:04:55.520><c> as</c><00:04:55.840><c> h</c>

00:04:56.150 --> 00:04:56.160 align:start position:0%
given to us as h
 

00:04:56.160 --> 00:04:57.909 align:start position:0%
given to us as h
right<00:04:56.320><c> we</c><00:04:56.479><c> could</c><00:04:56.720><c> we</c><00:04:56.880><c> guaranteed</c><00:04:57.440><c> that</c><00:04:57.680><c> at</c><00:04:57.840><c> the</c>

00:04:57.909 --> 00:04:57.919 align:start position:0%
right we could we guaranteed that at the
 

00:04:57.919 --> 00:04:59.909 align:start position:0%
right we could we guaranteed that at the
beginning<00:04:58.720><c> so</c><00:04:58.960><c> really</c><00:04:59.199><c> what</c><00:04:59.360><c> we're</c><00:04:59.600><c> doing</c>

00:04:59.909 --> 00:04:59.919 align:start position:0%
beginning so really what we're doing
 

00:04:59.919 --> 00:05:00.310 align:start position:0%
beginning so really what we're doing
here

00:05:00.310 --> 00:05:00.320 align:start position:0%
here
 

00:05:00.320 --> 00:05:02.710 align:start position:0%
here
is<00:05:00.479><c> we're</c><00:05:00.639><c> going</c><00:05:00.800><c> to</c><00:05:00.960><c> try</c><00:05:01.680><c> every</c><00:05:02.000><c> single</c><00:05:02.320><c> value</c>

00:05:02.710 --> 00:05:02.720 align:start position:0%
is we're going to try every single value
 

00:05:02.720 --> 00:05:03.749 align:start position:0%
is we're going to try every single value
from<00:05:03.120><c> 1</c>

00:05:03.749 --> 00:05:03.759 align:start position:0%
from 1
 

00:05:03.759 --> 00:05:06.790 align:start position:0%
from 1
all<00:05:04.000><c> the</c><00:05:04.160><c> way</c><00:05:04.479><c> up</c><00:05:04.960><c> to</c><00:05:05.360><c> 11</c><00:05:05.919><c> which</c><00:05:06.160><c> happens</c><00:05:06.479><c> to</c><00:05:06.639><c> be</c>

00:05:06.790 --> 00:05:06.800 align:start position:0%
all the way up to 11 which happens to be
 

00:05:06.800 --> 00:05:08.790 align:start position:0%
all the way up to 11 which happens to be
the<00:05:06.960><c> max</c><00:05:07.360><c> value</c><00:05:07.840><c> of</c><00:05:08.000><c> our</c><00:05:08.240><c> piles</c>

00:05:08.790 --> 00:05:08.800 align:start position:0%
the max value of our piles
 

00:05:08.800 --> 00:05:11.350 align:start position:0%
the max value of our piles
and<00:05:08.960><c> the</c><00:05:09.199><c> first</c><00:05:09.600><c> value</c><00:05:10.000><c> that</c><00:05:10.160><c> we</c><00:05:10.400><c> get</c><00:05:10.880><c> that</c>

00:05:11.350 --> 00:05:11.360 align:start position:0%
and the first value that we get that
 

00:05:11.360 --> 00:05:12.629 align:start position:0%
and the first value that we get that
that<00:05:11.600><c> allows</c><00:05:12.000><c> us</c><00:05:12.160><c> to</c><00:05:12.320><c> eat</c>

00:05:12.629 --> 00:05:12.639 align:start position:0%
that allows us to eat
 

00:05:12.639 --> 00:05:14.790 align:start position:0%
that allows us to eat
every<00:05:12.880><c> single</c><00:05:13.280><c> pile</c><00:05:13.680><c> in</c><00:05:13.919><c> less</c><00:05:14.240><c> than</c><00:05:14.400><c> or</c><00:05:14.560><c> equal</c>

00:05:14.790 --> 00:05:14.800 align:start position:0%
every single pile in less than or equal
 

00:05:14.800 --> 00:05:16.790 align:start position:0%
every single pile in less than or equal
to<00:05:14.960><c> eight</c><00:05:15.280><c> hours</c><00:05:15.680><c> is</c><00:05:15.840><c> going</c><00:05:16.080><c> to</c><00:05:16.160><c> be</c><00:05:16.400><c> our</c>

00:05:16.790 --> 00:05:16.800 align:start position:0%
to eight hours is going to be our
 

00:05:16.800 --> 00:05:18.950 align:start position:0%
to eight hours is going to be our
output<00:05:17.280><c> so</c><00:05:17.520><c> we're</c><00:05:17.759><c> gonna</c><00:05:17.919><c> end</c><00:05:18.080><c> up</c><00:05:18.240><c> trying</c><00:05:18.639><c> one</c>

00:05:18.950 --> 00:05:18.960 align:start position:0%
output so we're gonna end up trying one
 

00:05:18.960 --> 00:05:20.150 align:start position:0%
output so we're gonna end up trying one
we're<00:05:19.120><c> gonna</c><00:05:19.280><c> end</c><00:05:19.440><c> up</c><00:05:19.520><c> trying</c><00:05:19.759><c> two</c><00:05:20.000><c> we're</c>

00:05:20.150 --> 00:05:20.160 align:start position:0%
we're gonna end up trying two we're
 

00:05:20.160 --> 00:05:21.510 align:start position:0%
we're gonna end up trying two we're
gonna<00:05:20.320><c> end</c><00:05:20.479><c> up</c><00:05:20.560><c> trying</c><00:05:20.880><c> three</c><00:05:21.199><c> and</c><00:05:21.360><c> we're</c>

00:05:21.510 --> 00:05:21.520 align:start position:0%
gonna end up trying three and we're
 

00:05:21.520 --> 00:05:22.469 align:start position:0%
gonna end up trying three and we're
gonna<00:05:21.759><c> find</c><00:05:22.080><c> that</c>

00:05:22.469 --> 00:05:22.479 align:start position:0%
gonna find that
 

00:05:22.479 --> 00:05:25.110 align:start position:0%
gonna find that
four<00:05:23.120><c> allows</c><00:05:23.440><c> us</c><00:05:23.600><c> to</c><00:05:23.759><c> eat</c><00:05:24.000><c> all</c><00:05:24.160><c> the</c><00:05:24.320><c> piles</c><00:05:24.960><c> in</c>

00:05:25.110 --> 00:05:25.120 align:start position:0%
four allows us to eat all the piles in
 

00:05:25.120 --> 00:05:26.629 align:start position:0%
four allows us to eat all the piles in
less<00:05:25.360><c> than</c><00:05:25.520><c> or</c><00:05:25.600><c> equal</c><00:05:25.840><c> to</c><00:05:26.000><c> eight</c><00:05:26.320><c> hours</c>

00:05:26.629 --> 00:05:26.639 align:start position:0%
less than or equal to eight hours
 

00:05:26.639 --> 00:05:28.710 align:start position:0%
less than or equal to eight hours
so<00:05:26.800><c> this</c><00:05:27.039><c> is</c><00:05:27.199><c> not</c><00:05:27.440><c> a</c><00:05:27.600><c> terrible</c><00:05:28.080><c> solution</c><00:05:28.479><c> right</c>

00:05:28.710 --> 00:05:28.720 align:start position:0%
so this is not a terrible solution right
 

00:05:28.720 --> 00:05:30.230 align:start position:0%
so this is not a terrible solution right
even<00:05:28.960><c> though</c><00:05:29.120><c> we're</c><00:05:29.280><c> brute</c><00:05:29.680><c> forcing</c><00:05:30.080><c> the</c>

00:05:30.230 --> 00:05:30.240 align:start position:0%
even though we're brute forcing the
 

00:05:30.240 --> 00:05:31.590 align:start position:0%
even though we're brute forcing the
entire<00:05:30.639><c> solution</c><00:05:31.280><c> set</c>

00:05:31.590 --> 00:05:31.600 align:start position:0%
entire solution set
 

00:05:31.600 --> 00:05:33.590 align:start position:0%
entire solution set
one<00:05:31.919><c> through</c><00:05:32.160><c> the</c><00:05:32.320><c> max</c><00:05:32.639><c> of</c><00:05:32.800><c> piles</c><00:05:33.280><c> it's</c><00:05:33.440><c> not</c>

00:05:33.590 --> 00:05:33.600 align:start position:0%
one through the max of piles it's not
 

00:05:33.600 --> 00:05:34.870 align:start position:0%
one through the max of piles it's not
gonna<00:05:33.759><c> be</c><00:05:33.919><c> terrible</c><00:05:34.240><c> what's</c><00:05:34.479><c> gonna</c><00:05:34.639><c> be</c><00:05:34.800><c> the</c>

00:05:34.870 --> 00:05:34.880 align:start position:0%
gonna be terrible what's gonna be the
 

00:05:34.880 --> 00:05:36.230 align:start position:0%
gonna be terrible what's gonna be the
complexity<00:05:35.520><c> of</c><00:05:35.600><c> that</c><00:05:35.759><c> well</c><00:05:36.000><c> we're</c>

00:05:36.230 --> 00:05:36.240 align:start position:0%
complexity of that well we're
 

00:05:36.240 --> 00:05:37.430 align:start position:0%
complexity of that well we're
potentially<00:05:36.720><c> gonna</c><00:05:36.880><c> have</c><00:05:36.960><c> to</c><00:05:37.039><c> iterate</c>

00:05:37.430 --> 00:05:37.440 align:start position:0%
potentially gonna have to iterate
 

00:05:37.440 --> 00:05:37.990 align:start position:0%
potentially gonna have to iterate
through<00:05:37.680><c> every</c>

00:05:37.990 --> 00:05:38.000 align:start position:0%
through every
 

00:05:38.000 --> 00:05:40.870 align:start position:0%
through every
value<00:05:38.400><c> in</c><00:05:38.639><c> this</c><00:05:39.199><c> uh</c><00:05:39.440><c> potential</c><00:05:40.000><c> solution</c><00:05:40.560><c> set</c>

00:05:40.870 --> 00:05:40.880 align:start position:0%
value in this uh potential solution set
 

00:05:40.880 --> 00:05:42.550 align:start position:0%
value in this uh potential solution set
what's<00:05:41.120><c> that</c><00:05:41.280><c> gonna</c><00:05:41.520><c> be</c><00:05:41.759><c> well</c><00:05:42.080><c> one</c>

00:05:42.550 --> 00:05:42.560 align:start position:0%
what's that gonna be well one
 

00:05:42.560 --> 00:05:45.029 align:start position:0%
what's that gonna be well one
through<00:05:43.120><c> the</c><00:05:43.440><c> max</c><00:05:43.759><c> value</c><00:05:44.160><c> of</c><00:05:44.320><c> our</c><00:05:44.479><c> piles</c><00:05:44.880><c> right</c>

00:05:45.029 --> 00:05:45.039 align:start position:0%
through the max value of our piles right
 

00:05:45.039 --> 00:05:45.909 align:start position:0%
through the max value of our piles right
so<00:05:45.120><c> it's</c><00:05:45.280><c> gonna</c><00:05:45.440><c> be</c>

00:05:45.909 --> 00:05:45.919 align:start position:0%
so it's gonna be
 

00:05:45.919 --> 00:05:49.189 align:start position:0%
so it's gonna be
let's<00:05:46.160><c> say</c><00:05:46.400><c> big</c><00:05:46.800><c> o</c><00:05:47.440><c> of</c><00:05:47.919><c> the</c><00:05:48.240><c> max</c><00:05:48.639><c> value</c>

00:05:49.189 --> 00:05:49.199 align:start position:0%
let's say big o of the max value
 

00:05:49.199 --> 00:05:52.629 align:start position:0%
let's say big o of the max value
of<00:05:49.520><c> piles</c><00:05:50.000><c> so</c><00:05:50.240><c> max</c><00:05:50.560><c> of</c><00:05:50.800><c> p</c><00:05:51.600><c> multiplied</c>

00:05:52.629 --> 00:05:52.639 align:start position:0%
of piles so max of p multiplied
 

00:05:52.639 --> 00:05:55.270 align:start position:0%
of piles so max of p multiplied
by<00:05:53.039><c> the</c><00:05:53.360><c> length</c><00:05:53.759><c> of</c><00:05:53.919><c> p</c><00:05:54.240><c> because</c><00:05:54.479><c> for</c><00:05:54.720><c> every</c><00:05:55.039><c> k</c>

00:05:55.270 --> 00:05:55.280 align:start position:0%
by the length of p because for every k
 

00:05:55.280 --> 00:05:56.550 align:start position:0%
by the length of p because for every k
value<00:05:55.600><c> we're</c><00:05:55.759><c> potentially</c><00:05:56.240><c> gonna</c><00:05:56.400><c> have</c><00:05:56.479><c> to</c>

00:05:56.550 --> 00:05:56.560 align:start position:0%
value we're potentially gonna have to
 

00:05:56.560 --> 00:05:57.510 align:start position:0%
value we're potentially gonna have to
try<00:05:56.880><c> okay</c>

00:05:57.510 --> 00:05:57.520 align:start position:0%
try okay
 

00:05:57.520 --> 00:05:59.670 align:start position:0%
try okay
if<00:05:57.680><c> i</c><00:05:57.840><c> e</c><00:05:58.080><c> all</c><00:05:58.240><c> these</c><00:05:58.800><c> how</c><00:05:58.960><c> many</c><00:05:59.199><c> hours</c><00:05:59.440><c> is</c><00:05:59.520><c> that</c>

00:05:59.670 --> 00:05:59.680 align:start position:0%
if i e all these how many hours is that
 

00:05:59.680 --> 00:06:00.710 align:start position:0%
if i e all these how many hours is that
gonna<00:05:59.840><c> take</c><00:06:00.000><c> me</c><00:06:00.160><c> right</c><00:06:00.319><c> so</c><00:06:00.479><c> we're</c><00:06:00.560><c> gonna</c><00:06:00.639><c> have</c>

00:06:00.710 --> 00:06:00.720 align:start position:0%
gonna take me right so we're gonna have
 

00:06:00.720 --> 00:06:02.469 align:start position:0%
gonna take me right so we're gonna have
to<00:06:00.800><c> iterate</c><00:06:01.199><c> through</c><00:06:01.360><c> this</c><00:06:01.520><c> entire</c><00:06:02.000><c> array</c><00:06:02.240><c> for</c>

00:06:02.469 --> 00:06:02.479 align:start position:0%
to iterate through this entire array for
 

00:06:02.479 --> 00:06:03.110 align:start position:0%
to iterate through this entire array for
every

00:06:03.110 --> 00:06:03.120 align:start position:0%
every
 

00:06:03.120 --> 00:06:05.590 align:start position:0%
every
k<00:06:03.360><c> value</c><00:06:03.680><c> that</c><00:06:03.840><c> we</c><00:06:04.000><c> try</c><00:06:04.639><c> so</c><00:06:04.800><c> we're</c><00:06:04.960><c> gonna</c><00:06:05.199><c> get</c><00:06:05.360><c> a</c>

00:06:05.590 --> 00:06:05.600 align:start position:0%
k value that we try so we're gonna get a
 

00:06:05.600 --> 00:06:07.189 align:start position:0%
k value that we try so we're gonna get a
time<00:06:05.840><c> complexity</c><00:06:06.400><c> of</c><00:06:06.560><c> max</c><00:06:06.800><c> of</c><00:06:06.960><c> p</c>

00:06:07.189 --> 00:06:07.199 align:start position:0%
time complexity of max of p
 

00:06:07.199 --> 00:06:09.909 align:start position:0%
time complexity of max of p
multiplied<00:06:07.759><c> by</c><00:06:08.080><c> p</c><00:06:08.720><c> right</c><00:06:08.960><c> but</c><00:06:09.120><c> that's</c><00:06:09.600><c> only</c>

00:06:09.909 --> 00:06:09.919 align:start position:0%
multiplied by p right but that's only
 

00:06:09.919 --> 00:06:11.110 align:start position:0%
multiplied by p right but that's only
we're<00:06:10.080><c> getting</c><00:06:10.319><c> this</c><00:06:10.639><c> max</c>

00:06:11.110 --> 00:06:11.120 align:start position:0%
we're getting this max
 

00:06:11.120 --> 00:06:12.790 align:start position:0%
we're getting this max
p<00:06:11.520><c> from</c><00:06:11.759><c> the</c><00:06:11.919><c> fact</c><00:06:12.160><c> that</c><00:06:12.240><c> we're</c><00:06:12.400><c> having</c><00:06:12.639><c> to</c>

00:06:12.790 --> 00:06:12.800 align:start position:0%
p from the fact that we're having to
 

00:06:12.800 --> 00:06:14.550 align:start position:0%
p from the fact that we're having to
iterate<00:06:13.199><c> through</c><00:06:13.440><c> every</c><00:06:13.680><c> single</c><00:06:14.000><c> value</c>

00:06:14.550 --> 00:06:14.560 align:start position:0%
iterate through every single value
 

00:06:14.560 --> 00:06:17.430 align:start position:0%
iterate through every single value
in<00:06:15.039><c> this</c><00:06:15.440><c> k</c><00:06:16.000><c> range</c><00:06:16.560><c> but</c><00:06:16.800><c> why</c><00:06:17.039><c> should</c><00:06:17.199><c> we</c>

00:06:17.430 --> 00:06:17.440 align:start position:0%
in this k range but why should we
 

00:06:17.440 --> 00:06:18.230 align:start position:0%
in this k range but why should we
iterate<00:06:17.840><c> from</c>

00:06:18.230 --> 00:06:18.240 align:start position:0%
iterate from
 

00:06:18.240 --> 00:06:21.189 align:start position:0%
iterate from
one<00:06:18.560><c> to</c><00:06:18.720><c> the</c><00:06:18.960><c> end</c><00:06:19.199><c> of</c><00:06:19.280><c> that</c><00:06:19.520><c> k</c><00:06:19.840><c> range</c><00:06:20.479><c> why</c><00:06:20.880><c> would</c>

00:06:21.189 --> 00:06:21.199 align:start position:0%
one to the end of that k range why would
 

00:06:21.199 --> 00:06:22.710 align:start position:0%
one to the end of that k range why would
in<00:06:21.360><c> which</c><00:06:21.600><c> case</c><00:06:21.919><c> in</c><00:06:22.000><c> the</c><00:06:22.080><c> worst</c><00:06:22.400><c> case</c><00:06:22.560><c> we'll</c>

00:06:22.710 --> 00:06:22.720 align:start position:0%
in which case in the worst case we'll
 

00:06:22.720 --> 00:06:24.550 align:start position:0%
in which case in the worst case we'll
have<00:06:22.880><c> to</c><00:06:22.960><c> go</c><00:06:23.120><c> through</c><00:06:23.360><c> every</c><00:06:23.520><c> single</c><00:06:23.919><c> value</c>

00:06:24.550 --> 00:06:24.560 align:start position:0%
have to go through every single value
 

00:06:24.560 --> 00:06:27.510 align:start position:0%
have to go through every single value
why<00:06:24.720><c> don't</c><00:06:24.880><c> we</c><00:06:25.120><c> instead</c><00:06:25.680><c> apply</c><00:06:26.160><c> binary</c><00:06:26.880><c> search</c>

00:06:27.510 --> 00:06:27.520 align:start position:0%
why don't we instead apply binary search
 

00:06:27.520 --> 00:06:28.390 align:start position:0%
why don't we instead apply binary search
on<00:06:27.759><c> this</c><00:06:28.080><c> k</c>

00:06:28.390 --> 00:06:28.400 align:start position:0%
on this k
 

00:06:28.400 --> 00:06:30.390 align:start position:0%
on this k
range<00:06:28.880><c> what's</c><00:06:29.199><c> that</c><00:06:29.440><c> going</c><00:06:29.520><c> to</c><00:06:29.680><c> give</c><00:06:29.919><c> us</c><00:06:30.160><c> well</c>

00:06:30.390 --> 00:06:30.400 align:start position:0%
range what's that going to give us well
 

00:06:30.400 --> 00:06:32.390 align:start position:0%
range what's that going to give us well
we<00:06:30.479><c> can</c><00:06:30.639><c> reduce</c><00:06:31.360><c> max</c><00:06:31.680><c> of</c><00:06:31.919><c> p</c>

00:06:32.390 --> 00:06:32.400 align:start position:0%
we can reduce max of p
 

00:06:32.400 --> 00:06:35.270 align:start position:0%
we can reduce max of p
to<00:06:32.560><c> the</c><00:06:32.880><c> log</c><00:06:33.440><c> of</c><00:06:33.680><c> max</c><00:06:34.000><c> p</c><00:06:34.240><c> so</c><00:06:34.479><c> if</c><00:06:34.560><c> we</c><00:06:34.720><c> can</c><00:06:34.880><c> improve</c>

00:06:35.270 --> 00:06:35.280 align:start position:0%
to the log of max p so if we can improve
 

00:06:35.280 --> 00:06:36.870 align:start position:0%
to the log of max p so if we can improve
this<00:06:35.520><c> this</c><00:06:35.680><c> is</c><00:06:35.840><c> what</c><00:06:36.000><c> our</c><00:06:36.080><c> time</c><00:06:36.319><c> complexity</c><00:06:36.800><c> is</c>

00:06:36.870 --> 00:06:36.880 align:start position:0%
this this is what our time complexity is
 

00:06:36.880 --> 00:06:37.749 align:start position:0%
this this is what our time complexity is
going<00:06:37.039><c> to</c><00:06:37.199><c> be</c>

00:06:37.749 --> 00:06:37.759 align:start position:0%
going to be
 

00:06:37.759 --> 00:06:40.150 align:start position:0%
going to be
okay<00:06:38.000><c> so</c><00:06:38.160><c> i</c><00:06:38.319><c> ran</c><00:06:38.560><c> out</c><00:06:38.720><c> of</c><00:06:38.800><c> room</c><00:06:39.120><c> but</c><00:06:39.280><c> this</c><00:06:39.680><c> is</c>

00:06:40.150 --> 00:06:40.160 align:start position:0%
okay so i ran out of room but this is
 

00:06:40.160 --> 00:06:41.110 align:start position:0%
okay so i ran out of room but this is
the<00:06:40.400><c> improved</c>

00:06:41.110 --> 00:06:41.120 align:start position:0%
the improved
 

00:06:41.120 --> 00:06:42.790 align:start position:0%
the improved
time<00:06:41.280><c> complexity</c><00:06:41.840><c> basically</c><00:06:42.240><c> we're</c><00:06:42.479><c> taking</c>

00:06:42.790 --> 00:06:42.800 align:start position:0%
time complexity basically we're taking
 

00:06:42.800 --> 00:06:44.870 align:start position:0%
time complexity basically we're taking
this<00:06:43.199><c> variable</c><00:06:43.840><c> and</c><00:06:44.080><c> applying</c><00:06:44.639><c> a</c>

00:06:44.870 --> 00:06:44.880 align:start position:0%
this variable and applying a
 

00:06:44.880 --> 00:06:46.870 align:start position:0%
this variable and applying a
log<00:06:45.199><c> to</c><00:06:45.360><c> it</c><00:06:45.520><c> which</c><00:06:45.680><c> is</c><00:06:45.840><c> going</c><00:06:45.919><c> to</c><00:06:46.000><c> reduce</c><00:06:46.479><c> it</c><00:06:46.720><c> a</c>

00:06:46.870 --> 00:06:46.880 align:start position:0%
log to it which is going to reduce it a
 

00:06:46.880 --> 00:06:48.629 align:start position:0%
log to it which is going to reduce it a
little<00:06:47.039><c> bit</c><00:06:47.520><c> so</c><00:06:47.680><c> let</c><00:06:47.840><c> me</c><00:06:48.000><c> show</c><00:06:48.160><c> you</c><00:06:48.319><c> quickly</c>

00:06:48.629 --> 00:06:48.639 align:start position:0%
little bit so let me show you quickly
 

00:06:48.639 --> 00:06:50.790 align:start position:0%
little bit so let me show you quickly
how<00:06:48.800><c> that</c><00:06:49.039><c> binary</c><00:06:49.440><c> solution</c><00:06:49.919><c> is</c><00:06:50.080><c> gonna</c><00:06:50.319><c> work</c>

00:06:50.790 --> 00:06:50.800 align:start position:0%
how that binary solution is gonna work
 

00:06:50.800 --> 00:06:52.230 align:start position:0%
how that binary solution is gonna work
it's<00:06:51.039><c> pretty</c><00:06:51.360><c> straightforward</c><00:06:52.000><c> and</c><00:06:52.080><c> then</c>

00:06:52.230 --> 00:06:52.240 align:start position:0%
it's pretty straightforward and then
 

00:06:52.240 --> 00:06:53.830 align:start position:0%
it's pretty straightforward and then
we're<00:06:52.319><c> gonna</c><00:06:52.560><c> jump</c><00:06:52.800><c> into</c><00:06:52.960><c> the</c><00:06:53.120><c> code</c>

00:06:53.830 --> 00:06:53.840 align:start position:0%
we're gonna jump into the code
 

00:06:53.840 --> 00:06:55.990 align:start position:0%
we're gonna jump into the code
so<00:06:54.000><c> we're</c><00:06:54.160><c> gonna</c><00:06:54.319><c> be</c><00:06:54.479><c> using</c><00:06:54.800><c> binary</c><00:06:55.440><c> search</c>

00:06:55.990 --> 00:06:56.000 align:start position:0%
so we're gonna be using binary search
 

00:06:56.000 --> 00:06:57.589 align:start position:0%
so we're gonna be using binary search
we're<00:06:56.160><c> given</c><00:06:56.479><c> this</c><00:06:56.720><c> input</c><00:06:57.039><c> array</c><00:06:57.360><c> and</c><00:06:57.440><c> we</c>

00:06:57.589 --> 00:06:57.599 align:start position:0%
we're given this input array and we
 

00:06:57.599 --> 00:06:58.070 align:start position:0%
we're given this input array and we
wanna

00:06:58.070 --> 00:06:58.080 align:start position:0%
wanna
 

00:06:58.080 --> 00:07:00.309 align:start position:0%
wanna
eat<00:06:58.400><c> every</c><00:06:58.639><c> single</c><00:06:58.960><c> pile</c><00:06:59.599><c> in</c><00:06:59.759><c> less</c><00:07:00.000><c> than</c><00:07:00.160><c> or</c>

00:07:00.309 --> 00:07:00.319 align:start position:0%
eat every single pile in less than or
 

00:07:00.319 --> 00:07:01.110 align:start position:0%
eat every single pile in less than or
equal<00:07:00.560><c> to</c><00:07:00.720><c> eight</c>

00:07:01.110 --> 00:07:01.120 align:start position:0%
equal to eight
 

00:07:01.120 --> 00:07:04.390 align:start position:0%
equal to eight
hours<00:07:01.759><c> so</c><00:07:02.000><c> we</c><00:07:02.240><c> know</c><00:07:02.479><c> that</c><00:07:02.800><c> the</c><00:07:03.599><c> potential</c>

00:07:04.390 --> 00:07:04.400 align:start position:0%
hours so we know that the potential
 

00:07:04.400 --> 00:07:06.710 align:start position:0%
hours so we know that the potential
rate<00:07:04.800><c> that</c><00:07:04.880><c> we're</c><00:07:05.120><c> eating</c><00:07:05.360><c> bananas</c><00:07:05.919><c> at</c><00:07:06.160><c> k</c><00:07:06.560><c> is</c>

00:07:06.710 --> 00:07:06.720 align:start position:0%
rate that we're eating bananas at k is
 

00:07:06.720 --> 00:07:07.909 align:start position:0%
rate that we're eating bananas at k is
gonna<00:07:06.880><c> be</c><00:07:07.120><c> between</c>

00:07:07.909 --> 00:07:07.919 align:start position:0%
gonna be between
 

00:07:07.919 --> 00:07:09.990 align:start position:0%
gonna be between
one<00:07:08.319><c> that's</c><00:07:08.560><c> the</c><00:07:08.639><c> minimum</c><00:07:09.039><c> it</c><00:07:09.199><c> could</c><00:07:09.360><c> possibly</c>

00:07:09.990 --> 00:07:10.000 align:start position:0%
one that's the minimum it could possibly
 

00:07:10.000 --> 00:07:12.230 align:start position:0%
one that's the minimum it could possibly
be<00:07:10.400><c> the</c><00:07:10.639><c> max</c><00:07:11.039><c> it</c><00:07:11.120><c> could</c><00:07:11.280><c> possibly</c><00:07:11.759><c> be</c><00:07:12.000><c> is</c><00:07:12.080><c> going</c>

00:07:12.230 --> 00:07:12.240 align:start position:0%
be the max it could possibly be is going
 

00:07:12.240 --> 00:07:13.589 align:start position:0%
be the max it could possibly be is going
to<00:07:12.319><c> be</c><00:07:12.479><c> whatever</c><00:07:12.800><c> the</c><00:07:12.960><c> max</c><00:07:13.360><c> in</c>

00:07:13.589 --> 00:07:13.599 align:start position:0%
to be whatever the max in
 

00:07:13.599 --> 00:07:15.510 align:start position:0%
to be whatever the max in
our<00:07:13.759><c> input</c><00:07:14.080><c> array</c><00:07:14.400><c> is</c><00:07:14.639><c> we</c><00:07:14.720><c> know</c><00:07:14.880><c> the</c><00:07:14.960><c> max</c><00:07:15.199><c> value</c>

00:07:15.510 --> 00:07:15.520 align:start position:0%
our input array is we know the max value
 

00:07:15.520 --> 00:07:17.749 align:start position:0%
our input array is we know the max value
is<00:07:15.599><c> 11</c><00:07:16.080><c> we</c><00:07:16.160><c> can</c><00:07:16.319><c> find</c><00:07:16.560><c> that</c><00:07:16.720><c> in</c><00:07:16.880><c> linear</c><00:07:17.280><c> time</c>

00:07:17.749 --> 00:07:17.759 align:start position:0%
is 11 we can find that in linear time
 

00:07:17.759 --> 00:07:19.830 align:start position:0%
is 11 we can find that in linear time
so<00:07:18.080><c> then</c><00:07:18.319><c> we're</c><00:07:18.479><c> going</c><00:07:18.560><c> to</c><00:07:18.639><c> initialize</c><00:07:19.520><c> a</c>

00:07:19.830 --> 00:07:19.840 align:start position:0%
so then we're going to initialize a
 

00:07:19.840 --> 00:07:21.189 align:start position:0%
so then we're going to initialize a
range<00:07:20.400><c> like</c><00:07:20.720><c> this</c>

00:07:21.189 --> 00:07:21.199 align:start position:0%
range like this
 

00:07:21.199 --> 00:07:23.270 align:start position:0%
range like this
right<00:07:21.360><c> this</c><00:07:21.599><c> entire</c><00:07:22.000><c> range</c><00:07:22.240><c> that</c><00:07:22.319><c> we</c><00:07:22.479><c> have</c>

00:07:23.270 --> 00:07:23.280 align:start position:0%
right this entire range that we have
 

00:07:23.280 --> 00:07:24.550 align:start position:0%
right this entire range that we have
going<00:07:23.520><c> all</c><00:07:23.680><c> the</c><00:07:23.759><c> way</c><00:07:23.919><c> from</c><00:07:24.160><c> 1</c>

00:07:24.550 --> 00:07:24.560 align:start position:0%
going all the way from 1
 

00:07:24.560 --> 00:07:27.189 align:start position:0%
going all the way from 1
to<00:07:24.720><c> that</c><00:07:24.960><c> max</c><00:07:25.280><c> value</c><00:07:25.759><c> 11.</c><00:07:26.400><c> so</c><00:07:26.639><c> in</c><00:07:26.800><c> other</c><00:07:26.960><c> words</c>

00:07:27.189 --> 00:07:27.199 align:start position:0%
to that max value 11. so in other words
 

00:07:27.199 --> 00:07:28.870 align:start position:0%
to that max value 11. so in other words
we're<00:07:27.360><c> going</c><00:07:27.440><c> to</c><00:07:27.520><c> have</c><00:07:27.680><c> a</c><00:07:27.919><c> left</c><00:07:28.240><c> pointer</c><00:07:28.720><c> at</c>

00:07:28.870 --> 00:07:28.880 align:start position:0%
we're going to have a left pointer at
 

00:07:28.880 --> 00:07:29.589 align:start position:0%
we're going to have a left pointer at
the<00:07:29.039><c> minimum</c>

00:07:29.589 --> 00:07:29.599 align:start position:0%
the minimum
 

00:07:29.599 --> 00:07:32.150 align:start position:0%
the minimum
and<00:07:29.759><c> a</c><00:07:30.000><c> right</c><00:07:30.400><c> pointer</c><00:07:30.880><c> at</c><00:07:31.039><c> the</c><00:07:31.199><c> maximum</c><00:07:32.000><c> then</c>

00:07:32.150 --> 00:07:32.160 align:start position:0%
and a right pointer at the maximum then
 

00:07:32.160 --> 00:07:33.749 align:start position:0%
and a right pointer at the maximum then
we're<00:07:32.319><c> going</c><00:07:32.479><c> to</c><00:07:32.560><c> compute</c><00:07:32.960><c> the</c><00:07:33.199><c> middle</c><00:07:33.520><c> by</c>

00:07:33.749 --> 00:07:33.759 align:start position:0%
we're going to compute the middle by
 

00:07:33.759 --> 00:07:35.749 align:start position:0%
we're going to compute the middle by
taking<00:07:34.080><c> the</c><00:07:34.319><c> average</c><00:07:34.720><c> of</c><00:07:34.880><c> left</c><00:07:35.199><c> and</c><00:07:35.360><c> right</c>

00:07:35.749 --> 00:07:35.759 align:start position:0%
taking the average of left and right
 

00:07:35.759 --> 00:07:38.309 align:start position:0%
taking the average of left and right
1<00:07:36.000><c> plus</c><00:07:36.240><c> 11</c><00:07:36.639><c> divided</c><00:07:36.960><c> by</c><00:07:37.120><c> 2</c><00:07:37.280><c> is</c><00:07:37.360><c> going</c><00:07:37.440><c> to</c><00:07:37.599><c> be</c><00:07:37.919><c> 6</c>

00:07:38.309 --> 00:07:38.319 align:start position:0%
1 plus 11 divided by 2 is going to be 6
 

00:07:38.319 --> 00:07:39.110 align:start position:0%
1 plus 11 divided by 2 is going to be 6
so<00:07:38.560><c> our</c><00:07:38.720><c> middle</c>

00:07:39.110 --> 00:07:39.120 align:start position:0%
so our middle
 

00:07:39.120 --> 00:07:41.110 align:start position:0%
so our middle
is<00:07:39.280><c> going</c><00:07:39.360><c> to</c><00:07:39.440><c> be</c><00:07:39.599><c> here</c><00:07:40.000><c> in</c><00:07:40.160><c> other</c><00:07:40.400><c> words</c><00:07:40.639><c> our</c><00:07:40.880><c> k</c>

00:07:41.110 --> 00:07:41.120 align:start position:0%
is going to be here in other words our k
 

00:07:41.120 --> 00:07:42.230 align:start position:0%
is going to be here in other words our k
that<00:07:41.199><c> we're</c><00:07:41.520><c> trying</c>

00:07:42.230 --> 00:07:42.240 align:start position:0%
that we're trying
 

00:07:42.240 --> 00:07:43.510 align:start position:0%
that we're trying
is<00:07:42.400><c> going</c><00:07:42.560><c> to</c><00:07:42.639><c> be</c><00:07:42.720><c> here</c><00:07:42.960><c> this</c><00:07:43.120><c> is</c><00:07:43.199><c> the</c><00:07:43.360><c> rate</c>

00:07:43.510 --> 00:07:43.520 align:start position:0%
is going to be here this is the rate
 

00:07:43.520 --> 00:07:45.029 align:start position:0%
is going to be here this is the rate
that<00:07:43.680><c> we're</c><00:07:43.840><c> going</c><00:07:43.919><c> to</c><00:07:44.000><c> eat</c><00:07:44.160><c> bananas</c><00:07:44.560><c> at</c><00:07:44.720><c> so</c>

00:07:45.029 --> 00:07:45.039 align:start position:0%
that we're going to eat bananas at so
 

00:07:45.039 --> 00:07:47.029 align:start position:0%
that we're going to eat bananas at so
we're<00:07:45.280><c> trying</c><00:07:45.680><c> the</c><00:07:45.919><c> rate</c><00:07:46.240><c> of</c><00:07:46.479><c> six</c>

00:07:47.029 --> 00:07:47.039 align:start position:0%
we're trying the rate of six
 

00:07:47.039 --> 00:07:48.869 align:start position:0%
we're trying the rate of six
does<00:07:47.280><c> this</c><00:07:47.520><c> work</c><00:07:47.840><c> can</c><00:07:48.080><c> we</c><00:07:48.240><c> eat</c><00:07:48.479><c> all</c><00:07:48.639><c> these</c>

00:07:48.869 --> 00:07:48.879 align:start position:0%
does this work can we eat all these
 

00:07:48.879 --> 00:07:51.270 align:start position:0%
does this work can we eat all these
bananas<00:07:49.599><c> with</c><00:07:49.840><c> a</c><00:07:49.919><c> rate</c><00:07:50.160><c> of</c><00:07:50.319><c> six</c><00:07:50.560><c> bananas</c><00:07:51.039><c> per</c>

00:07:51.270 --> 00:07:51.280 align:start position:0%
bananas with a rate of six bananas per
 

00:07:51.280 --> 00:07:53.029 align:start position:0%
bananas with a rate of six bananas per
hour<00:07:51.599><c> in</c><00:07:51.759><c> less</c><00:07:52.000><c> than</c><00:07:52.160><c> or</c><00:07:52.319><c> equal</c><00:07:52.560><c> to</c><00:07:52.720><c> eight</c>

00:07:53.029 --> 00:07:53.039 align:start position:0%
hour in less than or equal to eight
 

00:07:53.039 --> 00:07:54.390 align:start position:0%
hour in less than or equal to eight
hours<00:07:53.440><c> can</c><00:07:53.599><c> we</c><00:07:53.680><c> do</c><00:07:53.840><c> that</c><00:07:54.080><c> well</c>

00:07:54.390 --> 00:07:54.400 align:start position:0%
hours can we do that well
 

00:07:54.400 --> 00:07:56.629 align:start position:0%
hours can we do that well
how<00:07:54.560><c> many</c><00:07:55.120><c> uh</c><00:07:55.520><c> hours</c><00:07:55.759><c> does</c><00:07:55.919><c> the</c><00:07:56.000><c> first</c><00:07:56.319><c> pile</c>

00:07:56.629 --> 00:07:56.639 align:start position:0%
how many uh hours does the first pile
 

00:07:56.639 --> 00:07:58.390 align:start position:0%
how many uh hours does the first pile
take<00:07:56.879><c> well</c><00:07:57.120><c> three</c><00:07:57.360><c> bananas</c><00:07:57.840><c> right</c>

00:07:58.390 --> 00:07:58.400 align:start position:0%
take well three bananas right
 

00:07:58.400 --> 00:08:00.390 align:start position:0%
take well three bananas right
divided<00:07:58.800><c> by</c><00:07:59.039><c> the</c><00:07:59.199><c> rate</c><00:07:59.440><c> which</c><00:07:59.680><c> is</c><00:07:59.919><c> six</c><00:08:00.240><c> is</c>

00:08:00.390 --> 00:08:00.400 align:start position:0%
divided by the rate which is six is
 

00:08:00.400 --> 00:08:02.469 align:start position:0%
divided by the rate which is six is
gonna<00:08:00.720><c> round</c><00:08:01.199><c> up</c><00:08:01.440><c> to</c><00:08:01.599><c> one</c><00:08:01.840><c> that</c><00:08:02.000><c> means</c><00:08:02.160><c> it</c><00:08:02.240><c> took</c>

00:08:02.469 --> 00:08:02.479 align:start position:0%
gonna round up to one that means it took
 

00:08:02.479 --> 00:08:02.710 align:start position:0%
gonna round up to one that means it took
us

00:08:02.710 --> 00:08:02.720 align:start position:0%
us
 

00:08:02.720 --> 00:08:05.830 align:start position:0%
us
one<00:08:03.120><c> hour</c><00:08:03.759><c> to</c><00:08:04.479><c> eat</c><00:08:04.720><c> the</c><00:08:04.879><c> first</c><00:08:05.280><c> pile</c><00:08:05.680><c> the</c>

00:08:05.830 --> 00:08:05.840 align:start position:0%
one hour to eat the first pile the
 

00:08:05.840 --> 00:08:08.150 align:start position:0%
one hour to eat the first pile the
second<00:08:06.160><c> pile</c><00:08:06.479><c> six</c><00:08:06.720><c> divided</c><00:08:07.120><c> by</c><00:08:07.440><c> six</c><00:08:07.759><c> is</c><00:08:07.919><c> also</c>

00:08:08.150 --> 00:08:08.160 align:start position:0%
second pile six divided by six is also
 

00:08:08.160 --> 00:08:08.950 align:start position:0%
second pile six divided by six is also
going<00:08:08.240><c> to</c><00:08:08.400><c> take</c>

00:08:08.950 --> 00:08:08.960 align:start position:0%
going to take
 

00:08:08.960 --> 00:08:11.510 align:start position:0%
going to take
one<00:08:09.440><c> hour</c><00:08:09.840><c> so</c><00:08:10.560><c> let's</c><00:08:10.720><c> just</c><00:08:10.960><c> count</c><00:08:11.199><c> the</c><00:08:11.280><c> number</c>

00:08:11.510 --> 00:08:11.520 align:start position:0%
one hour so let's just count the number
 

00:08:11.520 --> 00:08:11.990 align:start position:0%
one hour so let's just count the number
of<00:08:11.680><c> hours</c>

00:08:11.990 --> 00:08:12.000 align:start position:0%
of hours
 

00:08:12.000 --> 00:08:13.749 align:start position:0%
of hours
so<00:08:12.160><c> the</c><00:08:12.319><c> second</c><00:08:12.800><c> or</c><00:08:12.879><c> the</c><00:08:13.039><c> rather</c><00:08:13.280><c> the</c><00:08:13.440><c> third</c>

00:08:13.749 --> 00:08:13.759 align:start position:0%
so the second or the rather the third
 

00:08:13.759 --> 00:08:15.830 align:start position:0%
so the second or the rather the third
pile<00:08:14.080><c> seven</c><00:08:14.400><c> divided</c><00:08:14.879><c> by</c><00:08:15.120><c> six</c><00:08:15.440><c> is</c><00:08:15.599><c> going</c><00:08:15.680><c> to</c>

00:08:15.830 --> 00:08:15.840 align:start position:0%
pile seven divided by six is going to
 

00:08:15.840 --> 00:08:16.309 align:start position:0%
pile seven divided by six is going to
round

00:08:16.309 --> 00:08:16.319 align:start position:0%
round
 

00:08:16.319 --> 00:08:18.550 align:start position:0%
round
up<00:08:16.720><c> to</c><00:08:17.039><c> two</c><00:08:17.520><c> so</c><00:08:17.680><c> that's</c><00:08:17.919><c> going</c><00:08:18.000><c> to</c><00:08:18.080><c> take</c><00:08:18.319><c> two</c>

00:08:18.550 --> 00:08:18.560 align:start position:0%
up to two so that's going to take two
 

00:08:18.560 --> 00:08:19.430 align:start position:0%
up to two so that's going to take two
hours

00:08:19.430 --> 00:08:19.440 align:start position:0%
hours
 

00:08:19.440 --> 00:08:22.469 align:start position:0%
hours
the<00:08:19.599><c> third</c><00:08:19.919><c> pile</c><00:08:20.720><c> 11</c><00:08:21.120><c> divided</c><00:08:21.599><c> by</c><00:08:21.840><c> six</c><00:08:22.319><c> is</c>

00:08:22.469 --> 00:08:22.479 align:start position:0%
the third pile 11 divided by six is
 

00:08:22.479 --> 00:08:24.309 align:start position:0%
the third pile 11 divided by six is
gonna<00:08:22.639><c> also</c><00:08:22.960><c> round</c><00:08:23.280><c> up</c><00:08:23.440><c> to</c><00:08:23.680><c> two</c><00:08:23.919><c> that</c><00:08:24.080><c> means</c>

00:08:24.309 --> 00:08:24.319 align:start position:0%
gonna also round up to two that means
 

00:08:24.319 --> 00:08:25.350 align:start position:0%
gonna also round up to two that means
two<00:08:24.560><c> hours</c><00:08:24.879><c> so</c>

00:08:25.350 --> 00:08:25.360 align:start position:0%
two hours so
 

00:08:25.360 --> 00:08:28.309 align:start position:0%
two hours so
we<00:08:25.520><c> just</c><00:08:25.840><c> did</c><00:08:26.080><c> this</c><00:08:26.639><c> in</c><00:08:27.199><c> six</c><00:08:27.520><c> hours</c><00:08:27.840><c> right</c><00:08:28.240><c> is</c>

00:08:28.309 --> 00:08:28.319 align:start position:0%
we just did this in six hours right is
 

00:08:28.319 --> 00:08:30.070 align:start position:0%
we just did this in six hours right is
that<00:08:28.639><c> good</c><00:08:28.960><c> does</c><00:08:29.199><c> that</c><00:08:29.280><c> mean</c><00:08:29.520><c> we</c><00:08:29.680><c> found</c><00:08:29.919><c> our</c>

00:08:30.070 --> 00:08:30.080 align:start position:0%
that good does that mean we found our
 

00:08:30.080 --> 00:08:30.710 align:start position:0%
that good does that mean we found our
solution

00:08:30.710 --> 00:08:30.720 align:start position:0%
solution
 

00:08:30.720 --> 00:08:32.870 align:start position:0%
solution
well<00:08:31.039><c> six</c><00:08:31.360><c> is</c><00:08:31.599><c> less</c><00:08:31.840><c> than</c><00:08:32.080><c> or</c><00:08:32.240><c> equal</c><00:08:32.479><c> to</c><00:08:32.640><c> eight</c>

00:08:32.870 --> 00:08:32.880 align:start position:0%
well six is less than or equal to eight
 

00:08:32.880 --> 00:08:34.389 align:start position:0%
well six is less than or equal to eight
that<00:08:33.039><c> means</c><00:08:33.200><c> we</c><00:08:33.360><c> were</c><00:08:33.680><c> we</c><00:08:33.839><c> were</c><00:08:34.000><c> able</c><00:08:34.159><c> to</c><00:08:34.240><c> eat</c>

00:08:34.389 --> 00:08:34.399 align:start position:0%
that means we were we were able to eat
 

00:08:34.399 --> 00:08:35.430 align:start position:0%
that means we were we were able to eat
this<00:08:34.640><c> entire</c><00:08:35.039><c> thing</c>

00:08:35.430 --> 00:08:35.440 align:start position:0%
this entire thing
 

00:08:35.440 --> 00:08:37.589 align:start position:0%
this entire thing
in<00:08:35.599><c> the</c><00:08:35.760><c> time</c><00:08:36.080><c> threshold</c><00:08:36.640><c> with</c><00:08:36.880><c> a</c><00:08:36.959><c> rate</c><00:08:37.200><c> of</c><00:08:37.360><c> six</c>

00:08:37.589 --> 00:08:37.599 align:start position:0%
in the time threshold with a rate of six
 

00:08:37.599 --> 00:08:39.430 align:start position:0%
in the time threshold with a rate of six
bananas<00:08:38.000><c> per</c><00:08:38.240><c> hour</c><00:08:38.479><c> is</c><00:08:38.560><c> this</c><00:08:38.800><c> our</c><00:08:38.959><c> solution</c>

00:08:39.430 --> 00:08:39.440 align:start position:0%
bananas per hour is this our solution
 

00:08:39.440 --> 00:08:39.990 align:start position:0%
bananas per hour is this our solution
well<00:08:39.599><c> remember</c>

00:08:39.990 --> 00:08:40.000 align:start position:0%
well remember
 

00:08:40.000 --> 00:08:42.949 align:start position:0%
well remember
we<00:08:40.159><c> were</c><00:08:40.320><c> looking</c><00:08:40.560><c> for</c><00:08:40.800><c> the</c><00:08:41.039><c> minimum</c><00:08:42.080><c> k</c><00:08:42.320><c> value</c>

00:08:42.949 --> 00:08:42.959 align:start position:0%
we were looking for the minimum k value
 

00:08:42.959 --> 00:08:44.630 align:start position:0%
we were looking for the minimum k value
that<00:08:43.120><c> allowed</c><00:08:43.440><c> us</c><00:08:43.599><c> to</c><00:08:43.680><c> do</c><00:08:43.839><c> this</c><00:08:44.080><c> so</c><00:08:44.240><c> this</c>

00:08:44.630 --> 00:08:44.640 align:start position:0%
that allowed us to do this so this
 

00:08:44.640 --> 00:08:47.350 align:start position:0%
that allowed us to do this so this
might<00:08:44.880><c> be</c><00:08:45.040><c> the</c><00:08:45.200><c> solution</c><00:08:45.839><c> but</c><00:08:46.080><c> let's</c><00:08:46.480><c> try</c><00:08:47.200><c> all</c>

00:08:47.350 --> 00:08:47.360 align:start position:0%
might be the solution but let's try all
 

00:08:47.360 --> 00:08:49.190 align:start position:0%
might be the solution but let's try all
the<00:08:47.600><c> smaller</c><00:08:48.160><c> values</c><00:08:48.640><c> or</c><00:08:48.800><c> let's</c>

00:08:49.190 --> 00:08:49.200 align:start position:0%
the smaller values or let's
 

00:08:49.200 --> 00:08:51.350 align:start position:0%
the smaller values or let's
let's<00:08:49.600><c> start</c><00:08:49.920><c> our</c><00:08:50.080><c> binary</c><00:08:50.560><c> search</c><00:08:50.959><c> in</c><00:08:51.120><c> this</c>

00:08:51.350 --> 00:08:51.360 align:start position:0%
let's start our binary search in this
 

00:08:51.360 --> 00:08:52.710 align:start position:0%
let's start our binary search in this
direction<00:08:51.839><c> to</c><00:08:52.080><c> see</c>

00:08:52.710 --> 00:08:52.720 align:start position:0%
direction to see
 

00:08:52.720 --> 00:08:55.750 align:start position:0%
direction to see
is<00:08:52.880><c> there</c><00:08:53.120><c> a</c><00:08:53.279><c> smaller</c><00:08:53.839><c> value</c><00:08:54.240><c> than</c><00:08:54.640><c> six</c><00:08:55.600><c> that</c>

00:08:55.750 --> 00:08:55.760 align:start position:0%
is there a smaller value than six that
 

00:08:55.760 --> 00:08:57.670 align:start position:0%
is there a smaller value than six that
we<00:08:55.920><c> can</c><00:08:56.080><c> use</c><00:08:56.320><c> for</c><00:08:56.480><c> our</c><00:08:56.720><c> k</c><00:08:56.959><c> value</c>

00:08:57.670 --> 00:08:57.680 align:start position:0%
we can use for our k value
 

00:08:57.680 --> 00:08:59.990 align:start position:0%
we can use for our k value
so<00:08:57.920><c> basically</c><00:08:58.399><c> what</c><00:08:58.640><c> i'm</c><00:08:58.720><c> doing</c><00:08:59.040><c> here</c><00:08:59.360><c> is</c><00:08:59.760><c> if</c>

00:08:59.990 --> 00:09:00.000 align:start position:0%
so basically what i'm doing here is if
 

00:09:00.000 --> 00:09:02.070 align:start position:0%
so basically what i'm doing here is if
we're<00:09:00.240><c> able</c><00:09:00.480><c> to</c><00:09:00.640><c> eat</c><00:09:00.880><c> the</c><00:09:01.040><c> entire</c><00:09:01.440><c> pile</c><00:09:01.760><c> in</c><00:09:01.920><c> the</c>

00:09:02.070 --> 00:09:02.080 align:start position:0%
we're able to eat the entire pile in the
 

00:09:02.080 --> 00:09:03.350 align:start position:0%
we're able to eat the entire pile in the
threshold<00:09:02.560><c> what</c><00:09:02.720><c> i'm</c><00:09:02.880><c> gonna</c><00:09:03.040><c> do</c>

00:09:03.350 --> 00:09:03.360 align:start position:0%
threshold what i'm gonna do
 

00:09:03.360 --> 00:09:05.190 align:start position:0%
threshold what i'm gonna do
is<00:09:03.519><c> then</c><00:09:03.760><c> start</c><00:09:04.080><c> searching</c><00:09:04.560><c> in</c><00:09:04.640><c> the</c><00:09:04.880><c> left</c>

00:09:05.190 --> 00:09:05.200 align:start position:0%
is then start searching in the left
 

00:09:05.200 --> 00:09:06.550 align:start position:0%
is then start searching in the left
direction<00:09:05.600><c> so</c><00:09:05.760><c> what</c><00:09:05.920><c> i'm</c><00:09:06.000><c> gonna</c><00:09:06.160><c> do</c><00:09:06.240><c> is</c><00:09:06.399><c> take</c>

00:09:06.550 --> 00:09:06.560 align:start position:0%
direction so what i'm gonna do is take
 

00:09:06.560 --> 00:09:07.590 align:start position:0%
direction so what i'm gonna do is take
my<00:09:06.800><c> right</c><00:09:07.040><c> pointer</c>

00:09:07.590 --> 00:09:07.600 align:start position:0%
my right pointer
 

00:09:07.600 --> 00:09:10.790 align:start position:0%
my right pointer
and<00:09:07.839><c> shift</c><00:09:08.160><c> it</c><00:09:08.240><c> to</c><00:09:08.560><c> k</c><00:09:09.279><c> minus</c><00:09:10.000><c> 1</c><00:09:10.399><c> because</c><00:09:10.640><c> we're</c>

00:09:10.790 --> 00:09:10.800 align:start position:0%
and shift it to k minus 1 because we're
 

00:09:10.800 --> 00:09:12.949 align:start position:0%
and shift it to k minus 1 because we're
now<00:09:10.959><c> we're</c><00:09:11.120><c> searching</c><00:09:11.600><c> this</c><00:09:11.920><c> entire</c><00:09:12.480><c> range</c>

00:09:12.949 --> 00:09:12.959 align:start position:0%
now we're searching this entire range
 

00:09:12.959 --> 00:09:15.509 align:start position:0%
now we're searching this entire range
what<00:09:13.200><c> if</c><00:09:13.360><c> the</c><00:09:13.600><c> opposite</c><00:09:14.160><c> was</c><00:09:14.399><c> true</c><00:09:14.959><c> what</c><00:09:15.120><c> if</c><00:09:15.279><c> i</c>

00:09:15.509 --> 00:09:15.519 align:start position:0%
what if the opposite was true what if i
 

00:09:15.519 --> 00:09:17.670 align:start position:0%
what if the opposite was true what if i
tried<00:09:16.000><c> this</c><00:09:16.320><c> k</c><00:09:16.560><c> value</c><00:09:17.040><c> but</c><00:09:17.279><c> i</c><00:09:17.360><c> was</c>

00:09:17.670 --> 00:09:17.680 align:start position:0%
tried this k value but i was
 

00:09:17.680 --> 00:09:20.389 align:start position:0%
tried this k value but i was
only<00:09:18.160><c> able</c><00:09:18.399><c> to</c><00:09:18.560><c> eat</c><00:09:18.800><c> the</c><00:09:19.040><c> entire</c><00:09:19.440><c> banana</c><00:09:19.920><c> pile</c>

00:09:20.389 --> 00:09:20.399 align:start position:0%
only able to eat the entire banana pile
 

00:09:20.399 --> 00:09:21.190 align:start position:0%
only able to eat the entire banana pile
and<00:09:20.640><c> let's</c><00:09:20.800><c> say</c>

00:09:21.190 --> 00:09:21.200 align:start position:0%
and let's say
 

00:09:21.200 --> 00:09:24.389 align:start position:0%
and let's say
h<00:09:21.519><c> equals</c><00:09:22.160><c> 10</c><00:09:22.640><c> hours</c><00:09:23.200><c> that</c><00:09:23.360><c> means</c><00:09:23.600><c> i</c><00:09:23.920><c> went</c>

00:09:24.389 --> 00:09:24.399 align:start position:0%
h equals 10 hours that means i went
 

00:09:24.399 --> 00:09:26.870 align:start position:0%
h equals 10 hours that means i went
over<00:09:24.800><c> the</c><00:09:25.360><c> threshold</c><00:09:25.920><c> right</c><00:09:26.160><c> that</c><00:09:26.320><c> means</c><00:09:26.720><c> i</c>

00:09:26.870 --> 00:09:26.880 align:start position:0%
over the threshold right that means i
 

00:09:26.880 --> 00:09:27.670 align:start position:0%
over the threshold right that means i
went<00:09:27.200><c> over</c>

00:09:27.670 --> 00:09:27.680 align:start position:0%
went over
 

00:09:27.680 --> 00:09:29.829 align:start position:0%
went over
the<00:09:27.920><c> time</c><00:09:28.640><c> so</c><00:09:28.880><c> what</c><00:09:29.040><c> does</c><00:09:29.279><c> that</c><00:09:29.440><c> mean</c><00:09:29.680><c> does</c>

00:09:29.829 --> 00:09:29.839 align:start position:0%
the time so what does that mean does
 

00:09:29.839 --> 00:09:31.910 align:start position:0%
the time so what does that mean does
that<00:09:30.160><c> modify</c><00:09:30.720><c> our</c><00:09:30.880><c> binary</c><00:09:31.360><c> search</c><00:09:31.600><c> well</c><00:09:31.760><c> what</c>

00:09:31.910 --> 00:09:31.920 align:start position:0%
that modify our binary search well what
 

00:09:31.920 --> 00:09:33.829 align:start position:0%
that modify our binary search well what
that<00:09:32.160><c> tells</c><00:09:32.480><c> us</c><00:09:32.640><c> is</c><00:09:32.800><c> our</c><00:09:33.040><c> rate</c><00:09:33.360><c> of</c><00:09:33.519><c> eating</c>

00:09:33.829 --> 00:09:33.839 align:start position:0%
that tells us is our rate of eating
 

00:09:33.839 --> 00:09:35.990 align:start position:0%
that tells us is our rate of eating
bananas<00:09:34.320><c> 6</c><00:09:34.720><c> was</c><00:09:34.959><c> too</c><00:09:35.279><c> small</c><00:09:35.760><c> we</c>

00:09:35.990 --> 00:09:36.000 align:start position:0%
bananas 6 was too small we
 

00:09:36.000 --> 00:09:38.070 align:start position:0%
bananas 6 was too small we
didn't<00:09:36.240><c> have</c><00:09:36.480><c> enough</c><00:09:36.959><c> time</c><00:09:37.360><c> to</c><00:09:37.519><c> eat</c><00:09:37.760><c> all</c><00:09:37.920><c> the</c>

00:09:38.070 --> 00:09:38.080 align:start position:0%
didn't have enough time to eat all the
 

00:09:38.080 --> 00:09:40.630 align:start position:0%
didn't have enough time to eat all the
bananas<00:09:38.800><c> in</c><00:09:38.959><c> the</c><00:09:39.200><c> given</c><00:09:39.600><c> available</c><00:09:40.160><c> time</c>

00:09:40.630 --> 00:09:40.640 align:start position:0%
bananas in the given available time
 

00:09:40.640 --> 00:09:42.949 align:start position:0%
bananas in the given available time
so<00:09:40.800><c> what</c><00:09:40.959><c> we</c><00:09:41.120><c> have</c><00:09:41.200><c> to</c><00:09:41.279><c> do</c><00:09:41.519><c> is</c><00:09:41.839><c> increase</c><00:09:42.720><c> our</c>

00:09:42.949 --> 00:09:42.959 align:start position:0%
so what we have to do is increase our
 

00:09:42.959 --> 00:09:43.670 align:start position:0%
so what we have to do is increase our
rate<00:09:43.200><c> of</c><00:09:43.360><c> k</c>

00:09:43.670 --> 00:09:43.680 align:start position:0%
rate of k
 

00:09:43.680 --> 00:09:45.350 align:start position:0%
rate of k
right<00:09:43.839><c> so</c><00:09:44.080><c> in</c><00:09:44.160><c> that</c><00:09:44.320><c> case</c><00:09:44.560><c> what</c><00:09:44.720><c> i</c><00:09:44.880><c> would</c><00:09:44.959><c> do</c><00:09:45.200><c> is</c>

00:09:45.350 --> 00:09:45.360 align:start position:0%
right so in that case what i would do is
 

00:09:45.360 --> 00:09:47.269 align:start position:0%
right so in that case what i would do is
i<00:09:45.440><c> would</c><00:09:45.680><c> search</c><00:09:46.000><c> the</c><00:09:46.240><c> right</c><00:09:46.560><c> portion</c>

00:09:47.269 --> 00:09:47.279 align:start position:0%
i would search the right portion
 

00:09:47.279 --> 00:09:49.590 align:start position:0%
i would search the right portion
of<00:09:47.519><c> the</c><00:09:48.080><c> range</c><00:09:48.640><c> so</c><00:09:48.800><c> what</c><00:09:48.959><c> i</c><00:09:49.040><c> would</c><00:09:49.120><c> do</c><00:09:49.279><c> is</c><00:09:49.440><c> take</c>

00:09:49.590 --> 00:09:49.600 align:start position:0%
of the range so what i would do is take
 

00:09:49.600 --> 00:09:51.829 align:start position:0%
of the range so what i would do is take
the<00:09:49.920><c> left</c><00:09:50.160><c> pointer</c><00:09:50.560><c> and</c><00:09:50.720><c> set</c><00:09:50.880><c> it</c><00:09:50.959><c> to</c><00:09:51.200><c> k</c>

00:09:51.829 --> 00:09:51.839 align:start position:0%
the left pointer and set it to k
 

00:09:51.839 --> 00:09:54.949 align:start position:0%
the left pointer and set it to k
plus<00:09:52.560><c> one</c><00:09:53.040><c> over</c><00:09:53.279><c> here</c><00:09:53.680><c> at</c><00:09:53.839><c> the</c><00:09:54.160><c> seven</c><00:09:54.800><c> so</c>

00:09:54.949 --> 00:09:54.959 align:start position:0%
plus one over here at the seven so
 

00:09:54.959 --> 00:09:56.310 align:start position:0%
plus one over here at the seven so
that's<00:09:55.200><c> how</c><00:09:55.279><c> this</c><00:09:55.519><c> binary</c><00:09:55.920><c> search</c><00:09:56.160><c> is</c><00:09:56.240><c> going</c>

00:09:56.310 --> 00:09:56.320 align:start position:0%
that's how this binary search is going
 

00:09:56.320 --> 00:09:58.230 align:start position:0%
that's how this binary search is going
to<00:09:56.399><c> be</c><00:09:56.560><c> working</c><00:09:56.880><c> but</c><00:09:57.120><c> so</c><00:09:57.279><c> far</c><00:09:57.519><c> we</c><00:09:57.600><c> do</c><00:09:57.760><c> have</c><00:09:58.000><c> one</c>

00:09:58.230 --> 00:09:58.240 align:start position:0%
to be working but so far we do have one
 

00:09:58.240 --> 00:09:59.350 align:start position:0%
to be working but so far we do have one
possible<00:09:58.720><c> solution</c>

00:09:59.350 --> 00:09:59.360 align:start position:0%
possible solution
 

00:09:59.360 --> 00:10:01.670 align:start position:0%
possible solution
and<00:09:59.440><c> that's</c><00:09:59.839><c> six</c><00:10:00.560><c> so</c><00:10:00.800><c> now</c><00:10:01.040><c> our</c><00:10:01.200><c> new</c><00:10:01.440><c> right</c>

00:10:01.670 --> 00:10:01.680 align:start position:0%
and that's six so now our new right
 

00:10:01.680 --> 00:10:03.350 align:start position:0%
and that's six so now our new right
pointer<00:10:02.079><c> is</c><00:10:02.240><c> pointing</c><00:10:02.560><c> over</c><00:10:02.800><c> here</c><00:10:03.040><c> and</c><00:10:03.200><c> our</c>

00:10:03.350 --> 00:10:03.360 align:start position:0%
pointer is pointing over here and our
 

00:10:03.360 --> 00:10:03.990 align:start position:0%
pointer is pointing over here and our
result<00:10:03.760><c> is</c>

00:10:03.990 --> 00:10:04.000 align:start position:0%
result is
 

00:10:04.000 --> 00:10:06.230 align:start position:0%
result is
for<00:10:04.240><c> now</c><00:10:04.480><c> going</c><00:10:04.640><c> to</c><00:10:04.720><c> be</c><00:10:04.959><c> six</c><00:10:05.440><c> so</c><00:10:05.680><c> once</c><00:10:05.920><c> again</c>

00:10:06.230 --> 00:10:06.240 align:start position:0%
for now going to be six so once again
 

00:10:06.240 --> 00:10:07.990 align:start position:0%
for now going to be six so once again
we're<00:10:06.399><c> going</c><00:10:06.480><c> to</c><00:10:06.560><c> take</c><00:10:06.720><c> the</c><00:10:06.959><c> left</c><00:10:07.200><c> and</c><00:10:07.360><c> right</c>

00:10:07.990 --> 00:10:08.000 align:start position:0%
we're going to take the left and right
 

00:10:08.000 --> 00:10:09.590 align:start position:0%
we're going to take the left and right
add<00:10:08.240><c> them</c><00:10:08.320><c> together</c><00:10:08.720><c> divide</c><00:10:09.040><c> by</c><00:10:09.200><c> two</c><00:10:09.360><c> that's</c>

00:10:09.590 --> 00:10:09.600 align:start position:0%
add them together divide by two that's
 

00:10:09.600 --> 00:10:11.430 align:start position:0%
add them together divide by two that's
going<00:10:09.680><c> to</c><00:10:09.760><c> give</c><00:10:10.000><c> us</c><00:10:10.320><c> one</c><00:10:10.560><c> plus</c><00:10:10.800><c> five</c><00:10:11.120><c> divided</c>

00:10:11.430 --> 00:10:11.440 align:start position:0%
going to give us one plus five divided
 

00:10:11.440 --> 00:10:13.190 align:start position:0%
going to give us one plus five divided
by<00:10:11.600><c> two</c><00:10:11.839><c> is</c><00:10:12.000><c> three</c><00:10:12.320><c> so</c><00:10:12.560><c> our</c><00:10:12.880><c> k</c>

00:10:13.190 --> 00:10:13.200 align:start position:0%
by two is three so our k
 

00:10:13.200 --> 00:10:15.190 align:start position:0%
by two is three so our k
is<00:10:13.279><c> now</c><00:10:13.440><c> going</c><00:10:13.600><c> to</c><00:10:13.680><c> be</c><00:10:13.839><c> at</c><00:10:14.000><c> this</c><00:10:14.320><c> three</c><00:10:14.640><c> value</c>

00:10:15.190 --> 00:10:15.200 align:start position:0%
is now going to be at this three value
 

00:10:15.200 --> 00:10:16.310 align:start position:0%
is now going to be at this three value
so<00:10:15.440><c> now</c><00:10:15.600><c> let's</c><00:10:15.920><c> check</c>

00:10:16.310 --> 00:10:16.320 align:start position:0%
so now let's check
 

00:10:16.320 --> 00:10:18.790 align:start position:0%
so now let's check
can<00:10:16.480><c> we</c><00:10:16.640><c> eat</c><00:10:16.959><c> all</c><00:10:17.120><c> the</c><00:10:17.200><c> bananas</c><00:10:18.000><c> in</c><00:10:18.399><c> less</c><00:10:18.560><c> than</c>

00:10:18.790 --> 00:10:18.800 align:start position:0%
can we eat all the bananas in less than
 

00:10:18.800 --> 00:10:19.430 align:start position:0%
can we eat all the bananas in less than
or<00:10:18.959><c> equal</c>

00:10:19.430 --> 00:10:19.440 align:start position:0%
or equal
 

00:10:19.440 --> 00:10:21.269 align:start position:0%
or equal
to<00:10:19.600><c> eight</c><00:10:19.920><c> hours</c><00:10:20.399><c> how</c><00:10:20.560><c> many</c><00:10:20.720><c> hours</c><00:10:21.040><c> does</c><00:10:21.200><c> the</c>

00:10:21.269 --> 00:10:21.279 align:start position:0%
to eight hours how many hours does the
 

00:10:21.279 --> 00:10:22.870 align:start position:0%
to eight hours how many hours does the
first<00:10:21.600><c> take</c><00:10:21.839><c> us</c><00:10:22.000><c> well</c><00:10:22.160><c> we're</c><00:10:22.320><c> eating</c><00:10:22.640><c> at</c><00:10:22.720><c> a</c>

00:10:22.870 --> 00:10:22.880 align:start position:0%
first take us well we're eating at a
 

00:10:22.880 --> 00:10:24.550 align:start position:0%
first take us well we're eating at a
rate<00:10:23.040><c> of</c><00:10:23.120><c> three</c><00:10:23.360><c> bananas</c><00:10:23.760><c> per</c><00:10:24.000><c> hour</c><00:10:24.160><c> the</c><00:10:24.320><c> first</c>

00:10:24.550 --> 00:10:24.560 align:start position:0%
rate of three bananas per hour the first
 

00:10:24.560 --> 00:10:24.949 align:start position:0%
rate of three bananas per hour the first
pile

00:10:24.949 --> 00:10:24.959 align:start position:0%
pile
 

00:10:24.959 --> 00:10:26.710 align:start position:0%
pile
is<00:10:25.120><c> three</c><00:10:25.600><c> that's</c><00:10:25.839><c> going</c><00:10:25.920><c> to</c><00:10:26.000><c> take</c><00:10:26.240><c> us</c><00:10:26.399><c> one</c>

00:10:26.710 --> 00:10:26.720 align:start position:0%
is three that's going to take us one
 

00:10:26.720 --> 00:10:28.790 align:start position:0%
is three that's going to take us one
hour<00:10:27.040><c> to</c><00:10:27.200><c> eat</c><00:10:27.440><c> it</c><00:10:27.680><c> the</c><00:10:27.839><c> second</c><00:10:28.240><c> pile</c>

00:10:28.790 --> 00:10:28.800 align:start position:0%
hour to eat it the second pile
 

00:10:28.800 --> 00:10:30.470 align:start position:0%
hour to eat it the second pile
six<00:10:29.040><c> bananas</c><00:10:29.440><c> divided</c><00:10:29.839><c> by</c><00:10:30.079><c> three</c><00:10:30.320><c> that's</c>

00:10:30.470 --> 00:10:30.480 align:start position:0%
six bananas divided by three that's
 

00:10:30.480 --> 00:10:32.550 align:start position:0%
six bananas divided by three that's
going<00:10:30.640><c> to</c><00:10:30.720><c> take</c><00:10:30.880><c> two</c><00:10:31.120><c> hours</c><00:10:31.600><c> the</c><00:10:31.839><c> third</c><00:10:32.160><c> pile</c>

00:10:32.550 --> 00:10:32.560 align:start position:0%
going to take two hours the third pile
 

00:10:32.560 --> 00:10:35.030 align:start position:0%
going to take two hours the third pile
seven<00:10:32.880><c> divided</c><00:10:33.279><c> by</c><00:10:33.519><c> three</c><00:10:33.839><c> rounding</c><00:10:34.560><c> up</c>

00:10:35.030 --> 00:10:35.040 align:start position:0%
seven divided by three rounding up
 

00:10:35.040 --> 00:10:37.030 align:start position:0%
seven divided by three rounding up
is<00:10:35.200><c> going</c><00:10:35.279><c> to</c><00:10:35.360><c> be</c><00:10:35.680><c> three</c><00:10:36.000><c> hours</c><00:10:36.320><c> to</c><00:10:36.480><c> eat</c><00:10:36.720><c> that</c>

00:10:37.030 --> 00:10:37.040 align:start position:0%
is going to be three hours to eat that
 

00:10:37.040 --> 00:10:38.310 align:start position:0%
is going to be three hours to eat that
pile

00:10:38.310 --> 00:10:38.320 align:start position:0%
pile
 

00:10:38.320 --> 00:10:41.910 align:start position:0%
pile
last<00:10:38.720><c> pile</c><00:10:39.360><c> 11</c><00:10:40.160><c> divided</c><00:10:40.480><c> by</c><00:10:40.720><c> three</c><00:10:41.200><c> rounded</c><00:10:41.680><c> up</c>

00:10:41.910 --> 00:10:41.920 align:start position:0%
last pile 11 divided by three rounded up
 

00:10:41.920 --> 00:10:43.829 align:start position:0%
last pile 11 divided by three rounded up
is<00:10:42.079><c> going</c><00:10:42.160><c> to</c><00:10:42.240><c> be</c><00:10:42.560><c> four</c><00:10:42.880><c> hours</c><00:10:43.360><c> so</c><00:10:43.519><c> when</c><00:10:43.680><c> we</c>

00:10:43.829 --> 00:10:43.839 align:start position:0%
is going to be four hours so when we
 

00:10:43.839 --> 00:10:44.949 align:start position:0%
is going to be four hours so when we
total<00:10:44.320><c> all</c><00:10:44.480><c> of</c><00:10:44.640><c> this</c>

00:10:44.949 --> 00:10:44.959 align:start position:0%
total all of this
 

00:10:44.959 --> 00:10:46.790 align:start position:0%
total all of this
up<00:10:45.279><c> it's</c><00:10:45.440><c> going</c><00:10:45.519><c> to</c><00:10:45.600><c> give</c><00:10:45.839><c> us</c><00:10:46.000><c> i</c><00:10:46.160><c> think</c><00:10:46.480><c> 10</c>

00:10:46.790 --> 00:10:46.800 align:start position:0%
up it's going to give us i think 10
 

00:10:46.800 --> 00:10:48.949 align:start position:0%
up it's going to give us i think 10
hours<00:10:47.360><c> so</c><00:10:47.680><c> just</c><00:10:47.839><c> like</c><00:10:48.000><c> we</c><00:10:48.160><c> discussed</c><00:10:48.560><c> before</c>

00:10:48.949 --> 00:10:48.959 align:start position:0%
hours so just like we discussed before
 

00:10:48.959 --> 00:10:49.590 align:start position:0%
hours so just like we discussed before
we<00:10:49.200><c> went</c>

00:10:49.590 --> 00:10:49.600 align:start position:0%
we went
 

00:10:49.600 --> 00:10:52.630 align:start position:0%
we went
over<00:10:50.079><c> our</c><00:10:50.640><c> threshold</c><00:10:51.200><c> we</c><00:10:51.600><c> we</c><00:10:51.839><c> took</c><00:10:52.079><c> too</c><00:10:52.399><c> long</c>

00:10:52.630 --> 00:10:52.640 align:start position:0%
over our threshold we we took too long
 

00:10:52.640 --> 00:10:54.630 align:start position:0%
over our threshold we we took too long
to<00:10:52.800><c> eat</c><00:10:52.959><c> these</c><00:10:53.200><c> bananas</c><00:10:53.760><c> so</c><00:10:54.000><c> what</c><00:10:54.160><c> that</c><00:10:54.320><c> tells</c>

00:10:54.630 --> 00:10:54.640 align:start position:0%
to eat these bananas so what that tells
 

00:10:54.640 --> 00:10:56.069 align:start position:0%
to eat these bananas so what that tells
us<00:10:54.800><c> is</c><00:10:54.959><c> this</c><00:10:55.200><c> did</c><00:10:55.440><c> not</c><00:10:55.760><c> work</c>

00:10:56.069 --> 00:10:56.079 align:start position:0%
us is this did not work
 

00:10:56.079 --> 00:10:57.750 align:start position:0%
us is this did not work
three<00:10:56.240><c> bananas</c><00:10:56.720><c> per</c><00:10:56.880><c> hour</c><00:10:57.120><c> doesn't</c><00:10:57.360><c> work</c>

00:10:57.750 --> 00:10:57.760 align:start position:0%
three bananas per hour doesn't work
 

00:10:57.760 --> 00:10:59.509 align:start position:0%
three bananas per hour doesn't work
let's<00:10:58.000><c> start</c><00:10:58.240><c> searching</c><00:10:58.640><c> to</c><00:10:58.800><c> the</c><00:10:59.040><c> right</c><00:10:59.360><c> of</c>

00:10:59.509 --> 00:10:59.519 align:start position:0%
let's start searching to the right of
 

00:10:59.519 --> 00:11:00.230 align:start position:0%
let's start searching to the right of
our<00:10:59.680><c> range</c>

00:11:00.230 --> 00:11:00.240 align:start position:0%
our range
 

00:11:00.240 --> 00:11:02.470 align:start position:0%
our range
and<00:11:00.640><c> remember</c><00:11:01.279><c> when</c><00:11:01.440><c> we</c><00:11:01.760><c> took</c><00:11:02.000><c> this</c><00:11:02.240><c> right</c>

00:11:02.470 --> 00:11:02.480 align:start position:0%
and remember when we took this right
 

00:11:02.480 --> 00:11:03.509 align:start position:0%
and remember when we took this right
pointer<00:11:02.800><c> and</c><00:11:02.959><c> shifted</c><00:11:03.279><c> it</c>

00:11:03.509 --> 00:11:03.519 align:start position:0%
pointer and shifted it
 

00:11:03.519 --> 00:11:06.230 align:start position:0%
pointer and shifted it
what<00:11:03.680><c> we</c><00:11:03.839><c> basically</c><00:11:04.320><c> did</c><00:11:05.200><c> was</c><00:11:05.360><c> we</c><00:11:05.680><c> said</c><00:11:05.920><c> that</c>

00:11:06.230 --> 00:11:06.240 align:start position:0%
what we basically did was we said that
 

00:11:06.240 --> 00:11:07.910 align:start position:0%
what we basically did was we said that
none<00:11:06.480><c> of</c><00:11:06.560><c> these</c><00:11:06.880><c> values</c><00:11:07.360><c> are</c><00:11:07.519><c> ever</c><00:11:07.760><c> going</c><00:11:07.839><c> to</c>

00:11:07.910 --> 00:11:07.920 align:start position:0%
none of these values are ever going to
 

00:11:07.920 --> 00:11:09.829 align:start position:0%
none of these values are ever going to
be<00:11:08.079><c> considered</c><00:11:08.560><c> again</c><00:11:08.880><c> we're</c><00:11:09.040><c> now</c><00:11:09.279><c> searching</c>

00:11:09.829 --> 00:11:09.839 align:start position:0%
be considered again we're now searching
 

00:11:09.839 --> 00:11:11.350 align:start position:0%
be considered again we're now searching
in<00:11:09.920><c> the</c><00:11:10.079><c> other</c><00:11:10.320><c> range</c><00:11:10.560><c> that's</c><00:11:10.800><c> how</c><00:11:10.959><c> binary</c>

00:11:11.350 --> 00:11:11.360 align:start position:0%
in the other range that's how binary
 

00:11:11.360 --> 00:11:13.750 align:start position:0%
in the other range that's how binary
search<00:11:11.680><c> works</c><00:11:12.000><c> remember</c><00:11:12.720><c> so</c><00:11:12.959><c> since</c><00:11:13.279><c> this</c><00:11:13.519><c> did</c>

00:11:13.750 --> 00:11:13.760 align:start position:0%
search works remember so since this did
 

00:11:13.760 --> 00:11:14.069 align:start position:0%
search works remember so since this did
not

00:11:14.069 --> 00:11:14.079 align:start position:0%
not
 

00:11:14.079 --> 00:11:15.750 align:start position:0%
not
work<00:11:14.480><c> we're</c><00:11:14.720><c> not</c><00:11:14.880><c> searching</c><00:11:15.360><c> it</c><00:11:15.519><c> and</c><00:11:15.600><c> we're</c>

00:11:15.750 --> 00:11:15.760 align:start position:0%
work we're not searching it and we're
 

00:11:15.760 --> 00:11:17.350 align:start position:0%
work we're not searching it and we're
not<00:11:15.920><c> going</c><00:11:16.000><c> to</c><00:11:16.160><c> search</c><00:11:16.480><c> any</c><00:11:16.640><c> of</c><00:11:16.720><c> the</c><00:11:16.880><c> values</c><00:11:17.200><c> to</c>

00:11:17.350 --> 00:11:17.360 align:start position:0%
not going to search any of the values to
 

00:11:17.360 --> 00:11:18.710 align:start position:0%
not going to search any of the values to
the<00:11:17.519><c> left</c><00:11:17.760><c> of</c><00:11:17.920><c> it</c><00:11:18.000><c> so</c><00:11:18.160><c> what</c><00:11:18.320><c> we're</c><00:11:18.399><c> going</c><00:11:18.480><c> to</c><00:11:18.560><c> do</c>

00:11:18.710 --> 00:11:18.720 align:start position:0%
the left of it so what we're going to do
 

00:11:18.720 --> 00:11:20.069 align:start position:0%
the left of it so what we're going to do
is<00:11:18.880><c> take</c><00:11:19.040><c> this</c><00:11:19.200><c> left</c><00:11:19.519><c> pointer</c>

00:11:20.069 --> 00:11:20.079 align:start position:0%
is take this left pointer
 

00:11:20.079 --> 00:11:22.550 align:start position:0%
is take this left pointer
set<00:11:20.240><c> it</c><00:11:20.320><c> to</c><00:11:20.480><c> k</c><00:11:20.800><c> plus</c><00:11:21.120><c> 1.</c><00:11:21.600><c> so</c><00:11:21.839><c> once</c><00:11:22.079><c> again</c><00:11:22.399><c> we're</c>

00:11:22.550 --> 00:11:22.560 align:start position:0%
set it to k plus 1. so once again we're
 

00:11:22.560 --> 00:11:23.910 align:start position:0%
set it to k plus 1. so once again we're
going<00:11:22.640><c> to</c><00:11:22.720><c> take</c><00:11:22.959><c> our</c><00:11:23.200><c> pointers</c><00:11:23.680><c> add</c><00:11:23.839><c> them</c>

00:11:23.910 --> 00:11:23.920 align:start position:0%
going to take our pointers add them
 

00:11:23.920 --> 00:11:25.509 align:start position:0%
going to take our pointers add them
together<00:11:24.320><c> divide</c><00:11:24.640><c> by</c><00:11:24.959><c> 2</c>

00:11:25.509 --> 00:11:25.519 align:start position:0%
together divide by 2
 

00:11:25.519 --> 00:11:27.590 align:start position:0%
together divide by 2
and<00:11:25.839><c> we'll</c><00:11:26.320><c> in</c><00:11:26.480><c> this</c><00:11:26.560><c> case</c><00:11:26.800><c> we'll</c><00:11:27.040><c> just</c><00:11:27.279><c> round</c>

00:11:27.590 --> 00:11:27.600 align:start position:0%
and we'll in this case we'll just round
 

00:11:27.600 --> 00:11:29.509 align:start position:0%
and we'll in this case we'll just round
down<00:11:27.920><c> so</c><00:11:28.399><c> nine</c><00:11:28.640><c> divided</c><00:11:28.959><c> by</c><00:11:29.120><c> two</c><00:11:29.279><c> is</c><00:11:29.360><c> going</c><00:11:29.440><c> to</c>

00:11:29.509 --> 00:11:29.519 align:start position:0%
down so nine divided by two is going to
 

00:11:29.519 --> 00:11:31.430 align:start position:0%
down so nine divided by two is going to
be<00:11:29.680><c> four</c><00:11:29.920><c> so</c><00:11:30.079><c> i'm</c><00:11:30.160><c> going</c><00:11:30.240><c> to</c><00:11:30.320><c> put</c><00:11:30.480><c> my</c><00:11:30.720><c> k</c><00:11:30.959><c> value</c>

00:11:31.430 --> 00:11:31.440 align:start position:0%
be four so i'm going to put my k value
 

00:11:31.440 --> 00:11:33.269 align:start position:0%
be four so i'm going to put my k value
basically<00:11:31.839><c> where</c><00:11:32.079><c> left</c><00:11:32.399><c> happens</c><00:11:32.720><c> to</c><00:11:32.800><c> be</c><00:11:32.959><c> at</c>

00:11:33.269 --> 00:11:33.279 align:start position:0%
basically where left happens to be at
 

00:11:33.279 --> 00:11:33.910 align:start position:0%
basically where left happens to be at
four

00:11:33.910 --> 00:11:33.920 align:start position:0%
four
 

00:11:33.920 --> 00:11:35.670 align:start position:0%
four
so<00:11:34.160><c> let's</c><00:11:34.320><c> see</c><00:11:34.480><c> with</c><00:11:34.720><c> a</c><00:11:34.800><c> rate</c><00:11:35.040><c> of</c><00:11:35.200><c> k</c><00:11:35.360><c> equals</c>

00:11:35.670 --> 00:11:35.680 align:start position:0%
so let's see with a rate of k equals
 

00:11:35.680 --> 00:11:37.590 align:start position:0%
so let's see with a rate of k equals
four<00:11:35.920><c> can</c><00:11:36.079><c> we</c><00:11:36.240><c> eat</c><00:11:36.480><c> all</c><00:11:36.560><c> the</c><00:11:36.720><c> bananas</c><00:11:37.279><c> in</c><00:11:37.440><c> less</c>

00:11:37.590 --> 00:11:37.600 align:start position:0%
four can we eat all the bananas in less
 

00:11:37.600 --> 00:11:39.190 align:start position:0%
four can we eat all the bananas in less
than<00:11:37.760><c> or</c><00:11:37.839><c> equal</c><00:11:38.079><c> to</c><00:11:38.240><c> eight</c><00:11:38.480><c> hours</c><00:11:38.800><c> the</c><00:11:38.959><c> first</c>

00:11:39.190 --> 00:11:39.200 align:start position:0%
than or equal to eight hours the first
 

00:11:39.200 --> 00:11:41.110 align:start position:0%
than or equal to eight hours the first
pile<00:11:39.600><c> takes</c><00:11:39.920><c> one</c><00:11:40.079><c> hour</c><00:11:40.320><c> the</c><00:11:40.480><c> second</c><00:11:40.800><c> pile</c>

00:11:41.110 --> 00:11:41.120 align:start position:0%
pile takes one hour the second pile
 

00:11:41.120 --> 00:11:41.990 align:start position:0%
pile takes one hour the second pile
takes<00:11:41.440><c> two</c><00:11:41.680><c> hours</c>

00:11:41.990 --> 00:11:42.000 align:start position:0%
takes two hours
 

00:11:42.000 --> 00:11:44.150 align:start position:0%
takes two hours
the<00:11:42.160><c> third</c><00:11:42.399><c> pile</c><00:11:42.720><c> takes</c><00:11:43.040><c> two</c><00:11:43.279><c> hours</c><00:11:43.760><c> and</c><00:11:44.000><c> the</c>

00:11:44.150 --> 00:11:44.160 align:start position:0%
the third pile takes two hours and the
 

00:11:44.160 --> 00:11:45.990 align:start position:0%
the third pile takes two hours and the
last<00:11:44.480><c> pile</c><00:11:44.800><c> takes</c><00:11:45.200><c> three</c><00:11:45.519><c> hours</c>

00:11:45.990 --> 00:11:46.000 align:start position:0%
last pile takes three hours
 

00:11:46.000 --> 00:11:48.310 align:start position:0%
last pile takes three hours
so<00:11:46.240><c> totaling</c><00:11:46.720><c> all</c><00:11:46.880><c> of</c><00:11:47.040><c> this</c><00:11:47.279><c> up</c><00:11:47.440><c> we</c><00:11:47.600><c> get</c><00:11:47.839><c> eight</c>

00:11:48.310 --> 00:11:48.320 align:start position:0%
so totaling all of this up we get eight
 

00:11:48.320 --> 00:11:50.150 align:start position:0%
so totaling all of this up we get eight
right<00:11:48.640><c> so</c><00:11:48.800><c> we</c><00:11:48.959><c> were</c><00:11:49.120><c> able</c><00:11:49.360><c> to</c><00:11:49.519><c> eat</c><00:11:49.839><c> all</c><00:11:50.000><c> the</c>

00:11:50.150 --> 00:11:50.160 align:start position:0%
right so we were able to eat all the
 

00:11:50.160 --> 00:11:50.949 align:start position:0%
right so we were able to eat all the
bananas

00:11:50.949 --> 00:11:50.959 align:start position:0%
bananas
 

00:11:50.959 --> 00:11:53.350 align:start position:0%
bananas
in<00:11:51.200><c> less</c><00:11:51.440><c> than</c><00:11:51.600><c> or</c><00:11:51.760><c> equal</c><00:11:52.079><c> to</c><00:11:52.320><c> eight</c><00:11:52.560><c> hours</c><00:11:53.120><c> if</c>

00:11:53.350 --> 00:11:53.360 align:start position:0%
in less than or equal to eight hours if
 

00:11:53.360 --> 00:11:54.870 align:start position:0%
in less than or equal to eight hours if
we<00:11:53.519><c> had</c><00:11:53.839><c> a</c><00:11:54.079><c> rate</c><00:11:54.480><c> of</c>

00:11:54.870 --> 00:11:54.880 align:start position:0%
we had a rate of
 

00:11:54.880 --> 00:11:57.030 align:start position:0%
we had a rate of
four<00:11:55.200><c> so</c><00:11:55.360><c> basically</c><00:11:56.000><c> let's</c><00:11:56.240><c> compare</c><00:11:56.639><c> that</c><00:11:56.880><c> to</c>

00:11:57.030 --> 00:11:57.040 align:start position:0%
four so basically let's compare that to
 

00:11:57.040 --> 00:11:58.069 align:start position:0%
four so basically let's compare that to
our<00:11:57.200><c> current</c><00:11:57.600><c> result</c>

00:11:58.069 --> 00:11:58.079 align:start position:0%
our current result
 

00:11:58.079 --> 00:12:00.550 align:start position:0%
our current result
so<00:11:58.240><c> far</c><00:11:58.480><c> we</c><00:11:58.639><c> found</c><00:11:58.959><c> a</c><00:11:59.120><c> value</c><00:11:59.519><c> with</c><00:11:59.839><c> six</c><00:12:00.320><c> so</c>

00:12:00.550 --> 00:12:00.560 align:start position:0%
so far we found a value with six so
 

00:12:00.560 --> 00:12:02.470 align:start position:0%
so far we found a value with six so
really<00:12:00.800><c> we</c><00:12:00.959><c> can</c><00:12:01.200><c> update</c><00:12:01.600><c> this</c><00:12:01.760><c> six</c><00:12:02.079><c> and</c><00:12:02.240><c> say</c>

00:12:02.470 --> 00:12:02.480 align:start position:0%
really we can update this six and say
 

00:12:02.480 --> 00:12:04.389 align:start position:0%
really we can update this six and say
there's<00:12:02.720><c> a</c><00:12:02.880><c> smaller</c><00:12:03.440><c> rate</c><00:12:03.680><c> that</c><00:12:03.839><c> we</c><00:12:04.000><c> can</c><00:12:04.160><c> use</c>

00:12:04.389 --> 00:12:04.399 align:start position:0%
there's a smaller rate that we can use
 

00:12:04.399 --> 00:12:05.350 align:start position:0%
there's a smaller rate that we can use
that<00:12:04.560><c> happens</c><00:12:04.880><c> to</c><00:12:05.040><c> be</c>

00:12:05.350 --> 00:12:05.360 align:start position:0%
that happens to be
 

00:12:05.360 --> 00:12:07.750 align:start position:0%
that happens to be
four<00:12:05.920><c> so</c><00:12:06.160><c> now</c><00:12:06.320><c> that</c><00:12:06.480><c> we</c><00:12:06.639><c> did</c><00:12:06.880><c> find</c><00:12:07.200><c> a</c><00:12:07.279><c> potential</c>

00:12:07.750 --> 00:12:07.760 align:start position:0%
four so now that we did find a potential
 

00:12:07.760 --> 00:12:09.670 align:start position:0%
four so now that we did find a potential
result<00:12:08.240><c> four</c><00:12:08.560><c> let's</c><00:12:08.720><c> see</c><00:12:08.880><c> if</c><00:12:08.959><c> we</c><00:12:09.120><c> can</c><00:12:09.279><c> find</c><00:12:09.519><c> an</c>

00:12:09.670 --> 00:12:09.680 align:start position:0%
result four let's see if we can find an
 

00:12:09.680 --> 00:12:09.990 align:start position:0%
result four let's see if we can find an
even

00:12:09.990 --> 00:12:10.000 align:start position:0%
even
 

00:12:10.000 --> 00:12:11.590 align:start position:0%
even
smaller<00:12:10.480><c> one</c><00:12:10.720><c> remember</c><00:12:11.040><c> that's</c><00:12:11.200><c> what</c><00:12:11.360><c> we</c><00:12:11.440><c> did</c>

00:12:11.590 --> 00:12:11.600 align:start position:0%
smaller one remember that's what we did
 

00:12:11.600 --> 00:12:13.670 align:start position:0%
smaller one remember that's what we did
before<00:12:12.000><c> if</c><00:12:12.320><c> we</c><00:12:12.399><c> find</c><00:12:12.720><c> a</c><00:12:12.800><c> k</c><00:12:13.040><c> that</c><00:12:13.200><c> works</c><00:12:13.519><c> we're</c>

00:12:13.670 --> 00:12:13.680 align:start position:0%
before if we find a k that works we're
 

00:12:13.680 --> 00:12:15.509 align:start position:0%
before if we find a k that works we're
gonna<00:12:13.839><c> try</c><00:12:14.000><c> to</c><00:12:14.079><c> find</c><00:12:14.320><c> an</c><00:12:14.480><c> even</c><00:12:14.720><c> smaller</c><00:12:15.120><c> one</c>

00:12:15.509 --> 00:12:15.519 align:start position:0%
gonna try to find an even smaller one
 

00:12:15.519 --> 00:12:17.110 align:start position:0%
gonna try to find an even smaller one
so<00:12:15.680><c> what</c><00:12:15.760><c> we're</c><00:12:15.920><c> gonna</c><00:12:16.160><c> do</c><00:12:16.560><c> is</c><00:12:16.720><c> we're</c><00:12:16.880><c> gonna</c>

00:12:17.110 --> 00:12:17.120 align:start position:0%
so what we're gonna do is we're gonna
 

00:12:17.120 --> 00:12:19.030 align:start position:0%
so what we're gonna do is we're gonna
set<00:12:17.600><c> our</c><00:12:18.079><c> right</c><00:12:18.399><c> pointer</c>

00:12:19.030 --> 00:12:19.040 align:start position:0%
set our right pointer
 

00:12:19.040 --> 00:12:22.069 align:start position:0%
set our right pointer
shifted<00:12:19.680><c> over</c><00:12:20.000><c> here</c><00:12:20.399><c> but</c><00:12:20.800><c> notice</c><00:12:21.200><c> how</c><00:12:21.519><c> now</c>

00:12:22.069 --> 00:12:22.079 align:start position:0%
shifted over here but notice how now
 

00:12:22.079 --> 00:12:24.470 align:start position:0%
shifted over here but notice how now
the<00:12:22.399><c> left</c><00:12:22.720><c> and</c><00:12:22.880><c> right</c><00:12:23.120><c> pointers</c><00:12:23.519><c> are</c><00:12:24.000><c> not</c><00:12:24.399><c> in</c>

00:12:24.470 --> 00:12:24.480 align:start position:0%
the left and right pointers are not in
 

00:12:24.480 --> 00:12:25.670 align:start position:0%
the left and right pointers are not in
the<00:12:24.639><c> correct</c><00:12:25.040><c> order</c><00:12:25.360><c> right</c>

00:12:25.670 --> 00:12:25.680 align:start position:0%
the correct order right
 

00:12:25.680 --> 00:12:27.670 align:start position:0%
the correct order right
left<00:12:25.920><c> should</c><00:12:26.240><c> always</c><00:12:26.560><c> be</c><00:12:26.720><c> to</c><00:12:26.880><c> the</c><00:12:27.120><c> left</c><00:12:27.440><c> of</c><00:12:27.519><c> the</c>

00:12:27.670 --> 00:12:27.680 align:start position:0%
left should always be to the left of the
 

00:12:27.680 --> 00:12:29.269 align:start position:0%
left should always be to the left of the
right<00:12:27.920><c> pointer</c><00:12:28.240><c> that's</c><00:12:28.480><c> basically</c><00:12:28.880><c> how</c><00:12:29.040><c> you</c>

00:12:29.269 --> 00:12:29.279 align:start position:0%
right pointer that's basically how you
 

00:12:29.279 --> 00:12:29.750 align:start position:0%
right pointer that's basically how you
know

00:12:29.750 --> 00:12:29.760 align:start position:0%
know
 

00:12:29.760 --> 00:12:31.670 align:start position:0%
know
that<00:12:30.000><c> our</c><00:12:30.240><c> binary</c><00:12:30.639><c> search</c><00:12:30.959><c> has</c><00:12:31.120><c> stopped</c><00:12:31.519><c> we</c>

00:12:31.670 --> 00:12:31.680 align:start position:0%
that our binary search has stopped we
 

00:12:31.680 --> 00:12:33.430 align:start position:0%
that our binary search has stopped we
don't<00:12:31.920><c> have</c><00:12:32.000><c> to</c><00:12:32.079><c> continue</c><00:12:32.560><c> the</c><00:12:32.639><c> binary</c><00:12:33.120><c> search</c>

00:12:33.430 --> 00:12:33.440 align:start position:0%
don't have to continue the binary search
 

00:12:33.440 --> 00:12:35.030 align:start position:0%
don't have to continue the binary search
anymore<00:12:33.920><c> right</c><00:12:34.079><c> and</c><00:12:34.160><c> that</c><00:12:34.320><c> makes</c><00:12:34.560><c> sense</c>

00:12:35.030 --> 00:12:35.040 align:start position:0%
anymore right and that makes sense
 

00:12:35.040 --> 00:12:36.629 align:start position:0%
anymore right and that makes sense
because<00:12:35.360><c> now</c><00:12:35.519><c> we're</c><00:12:35.680><c> searching</c><00:12:36.079><c> values</c><00:12:36.480><c> that</c>

00:12:36.629 --> 00:12:36.639 align:start position:0%
because now we're searching values that
 

00:12:36.639 --> 00:12:38.629 align:start position:0%
because now we're searching values that
we<00:12:36.800><c> previously</c><00:12:37.360><c> crossed</c><00:12:37.920><c> out</c><00:12:38.079><c> we</c><00:12:38.240><c> crossed</c>

00:12:38.629 --> 00:12:38.639 align:start position:0%
we previously crossed out we crossed
 

00:12:38.639 --> 00:12:40.230 align:start position:0%
we previously crossed out we crossed
these<00:12:38.880><c> out</c><00:12:39.040><c> so</c><00:12:39.200><c> how</c><00:12:39.360><c> can</c><00:12:39.519><c> we</c><00:12:39.680><c> search</c><00:12:40.000><c> them</c>

00:12:40.230 --> 00:12:40.240 align:start position:0%
these out so how can we search them
 

00:12:40.240 --> 00:12:40.710 align:start position:0%
these out so how can we search them
again

00:12:40.710 --> 00:12:40.720 align:start position:0%
again
 

00:12:40.720 --> 00:12:43.110 align:start position:0%
again
it<00:12:40.880><c> makes</c><00:12:41.120><c> no</c><00:12:41.360><c> sense</c><00:12:41.760><c> so</c><00:12:42.000><c> now</c><00:12:42.160><c> we</c><00:12:42.240><c> can</c><00:12:42.560><c> stop</c><00:12:42.959><c> the</c>

00:12:43.110 --> 00:12:43.120 align:start position:0%
it makes no sense so now we can stop the
 

00:12:43.120 --> 00:12:44.069 align:start position:0%
it makes no sense so now we can stop the
binary<00:12:43.600><c> search</c>

00:12:44.069 --> 00:12:44.079 align:start position:0%
binary search
 

00:12:44.079 --> 00:12:45.990 align:start position:0%
binary search
and<00:12:44.240><c> we</c><00:12:44.399><c> can</c><00:12:44.560><c> return</c><00:12:44.959><c> the</c><00:12:45.120><c> current</c><00:12:45.519><c> result</c>

00:12:45.990 --> 00:12:46.000 align:start position:0%
and we can return the current result
 

00:12:46.000 --> 00:12:47.590 align:start position:0%
and we can return the current result
which<00:12:46.240><c> happens</c><00:12:46.560><c> to</c><00:12:46.720><c> be</c><00:12:46.959><c> four</c>

00:12:47.590 --> 00:12:47.600 align:start position:0%
which happens to be four
 

00:12:47.600 --> 00:12:50.069 align:start position:0%
which happens to be four
four<00:12:48.000><c> is</c><00:12:48.079><c> the</c><00:12:48.320><c> minimum</c><00:12:48.800><c> rate</c><00:12:49.040><c> of</c><00:12:49.200><c> bananas</c><00:12:49.839><c> that</c>

00:12:50.069 --> 00:12:50.079 align:start position:0%
four is the minimum rate of bananas that
 

00:12:50.079 --> 00:12:52.230 align:start position:0%
four is the minimum rate of bananas that
cocoa<00:12:50.480><c> could</c><00:12:50.720><c> eat</c><00:12:50.880><c> to</c><00:12:51.040><c> eat</c><00:12:51.279><c> all</c><00:12:51.519><c> bananas</c>

00:12:52.230 --> 00:12:52.240 align:start position:0%
cocoa could eat to eat all bananas
 

00:12:52.240 --> 00:12:54.230 align:start position:0%
cocoa could eat to eat all bananas
in<00:12:52.399><c> less</c><00:12:52.639><c> than</c><00:12:52.880><c> or</c><00:12:53.040><c> equal</c><00:12:53.200><c> to</c><00:12:53.360><c> eight</c><00:12:53.680><c> hours</c>

00:12:54.230 --> 00:12:54.240 align:start position:0%
in less than or equal to eight hours
 

00:12:54.240 --> 00:12:56.150 align:start position:0%
in less than or equal to eight hours
with<00:12:54.399><c> that</c><00:12:54.639><c> being</c><00:12:54.880><c> said</c><00:12:55.120><c> let's</c><00:12:55.440><c> jump</c><00:12:55.760><c> into</c><00:12:56.000><c> the</c>

00:12:56.150 --> 00:12:56.160 align:start position:0%
with that being said let's jump into the
 

00:12:56.160 --> 00:12:57.269 align:start position:0%
with that being said let's jump into the
code<00:12:56.480><c> now</c>

00:12:57.269 --> 00:12:57.279 align:start position:0%
code now
 

00:12:57.279 --> 00:12:59.110 align:start position:0%
code now
so<00:12:57.519><c> just</c><00:12:57.680><c> like</c><00:12:57.920><c> i</c><00:12:58.000><c> mentioned</c><00:12:58.560><c> we</c><00:12:58.800><c> are</c><00:12:58.880><c> gonna</c>

00:12:59.110 --> 00:12:59.120 align:start position:0%
so just like i mentioned we are gonna
 

00:12:59.120 --> 00:13:00.790 align:start position:0%
so just like i mentioned we are gonna
have<00:12:59.440><c> our</c><00:12:59.680><c> left</c><00:13:00.000><c> and</c><00:13:00.079><c> right</c><00:13:00.320><c> pointers</c>

00:13:00.790 --> 00:13:00.800 align:start position:0%
have our left and right pointers
 

00:13:00.800 --> 00:13:01.829 align:start position:0%
have our left and right pointers
initially

00:13:01.829 --> 00:13:01.839 align:start position:0%
initially
 

00:13:01.839 --> 00:13:04.150 align:start position:0%
initially
set<00:13:02.079><c> to</c><00:13:02.399><c> one</c><00:13:02.959><c> left</c><00:13:03.200><c> is</c><00:13:03.360><c> going</c><00:13:03.440><c> to</c><00:13:03.519><c> be</c><00:13:03.680><c> one</c><00:13:04.000><c> and</c>

00:13:04.150 --> 00:13:04.160 align:start position:0%
set to one left is going to be one and
 

00:13:04.160 --> 00:13:05.430 align:start position:0%
set to one left is going to be one and
right<00:13:04.399><c> is</c><00:13:04.560><c> going</c><00:13:04.639><c> to</c><00:13:04.720><c> be</c><00:13:04.880><c> the</c><00:13:05.040><c> max</c><00:13:05.279><c> that</c>

00:13:05.430 --> 00:13:05.440 align:start position:0%
right is going to be the max that
 

00:13:05.440 --> 00:13:05.990 align:start position:0%
right is going to be the max that
happens<00:13:05.760><c> to</c>

00:13:05.990 --> 00:13:06.000 align:start position:0%
happens to
 

00:13:06.000 --> 00:13:08.710 align:start position:0%
happens to
exist<00:13:06.480><c> in</c><00:13:06.720><c> our</c><00:13:06.959><c> piles</c><00:13:07.519><c> input</c><00:13:07.839><c> array</c><00:13:08.320><c> now</c><00:13:08.560><c> the</c>

00:13:08.710 --> 00:13:08.720 align:start position:0%
exist in our piles input array now the
 

00:13:08.720 --> 00:13:10.310 align:start position:0%
exist in our piles input array now the
result<00:13:09.200><c> we're</c><00:13:09.360><c> not</c><00:13:09.519><c> going</c><00:13:09.600><c> to</c><00:13:09.760><c> initialize</c><00:13:10.240><c> it</c>

00:13:10.310 --> 00:13:10.320 align:start position:0%
result we're not going to initialize it
 

00:13:10.320 --> 00:13:11.190 align:start position:0%
result we're not going to initialize it
to<00:13:10.560><c> 0</c>

00:13:11.190 --> 00:13:11.200 align:start position:0%
to 0
 

00:13:11.200 --> 00:13:12.550 align:start position:0%
to 0
initially<00:13:11.600><c> because</c><00:13:11.839><c> remember</c><00:13:12.160><c> we're</c><00:13:12.320><c> looking</c>

00:13:12.550 --> 00:13:12.560 align:start position:0%
initially because remember we're looking
 

00:13:12.560 --> 00:13:13.750 align:start position:0%
initially because remember we're looking
for<00:13:12.720><c> the</c><00:13:12.800><c> minimum</c><00:13:13.200><c> so</c><00:13:13.360><c> i'm</c><00:13:13.519><c> just</c><00:13:13.600><c> going</c><00:13:13.680><c> to</c>

00:13:13.750 --> 00:13:13.760 align:start position:0%
for the minimum so i'm just going to
 

00:13:13.760 --> 00:13:14.949 align:start position:0%
for the minimum so i'm just going to
initialize<00:13:14.240><c> it</c><00:13:14.399><c> to</c><00:13:14.639><c> r</c>

00:13:14.949 --> 00:13:14.959 align:start position:0%
initialize it to r
 

00:13:14.959 --> 00:13:16.790 align:start position:0%
initialize it to r
which<00:13:15.200><c> is</c><00:13:15.279><c> the</c><00:13:15.440><c> max</c><00:13:15.839><c> in</c><00:13:15.920><c> our</c><00:13:16.079><c> piles</c><00:13:16.399><c> because</c><00:13:16.639><c> we</c>

00:13:16.790 --> 00:13:16.800 align:start position:0%
which is the max in our piles because we
 

00:13:16.800 --> 00:13:19.030 align:start position:0%
which is the max in our piles because we
know<00:13:17.040><c> at</c><00:13:17.120><c> least</c><00:13:17.680><c> this</c><00:13:18.000><c> will</c><00:13:18.240><c> work</c><00:13:18.560><c> this</c><00:13:18.800><c> is</c><00:13:18.880><c> the</c>

00:13:19.030 --> 00:13:19.040 align:start position:0%
know at least this will work this is the
 

00:13:19.040 --> 00:13:19.590 align:start position:0%
know at least this will work this is the
max

00:13:19.590 --> 00:13:19.600 align:start position:0%
max
 

00:13:19.600 --> 00:13:21.750 align:start position:0%
max
that<00:13:19.760><c> our</c><00:13:19.920><c> solution</c><00:13:20.320><c> could</c><00:13:20.560><c> possibly</c><00:13:21.040><c> be</c><00:13:21.519><c> and</c>

00:13:21.750 --> 00:13:21.760 align:start position:0%
that our solution could possibly be and
 

00:13:21.760 --> 00:13:23.750 align:start position:0%
that our solution could possibly be and
now<00:13:22.000><c> we</c><00:13:22.240><c> just</c><00:13:22.480><c> start</c><00:13:22.800><c> binary</c><00:13:23.200><c> searching</c>

00:13:23.750 --> 00:13:23.760 align:start position:0%
now we just start binary searching
 

00:13:23.760 --> 00:13:25.750 align:start position:0%
now we just start binary searching
while<00:13:24.160><c> our</c><00:13:24.480><c> left</c><00:13:24.720><c> and</c><00:13:24.800><c> right</c><00:13:25.040><c> pointers</c><00:13:25.440><c> are</c><00:13:25.600><c> in</c>

00:13:25.750 --> 00:13:25.760 align:start position:0%
while our left and right pointers are in
 

00:13:25.760 --> 00:13:27.030 align:start position:0%
while our left and right pointers are in
the<00:13:25.920><c> correct</c><00:13:26.399><c> order</c>

00:13:27.030 --> 00:13:27.040 align:start position:0%
the correct order
 

00:13:27.040 --> 00:13:30.069 align:start position:0%
the correct order
we<00:13:27.200><c> can</c><00:13:27.360><c> compute</c><00:13:27.760><c> the</c><00:13:28.000><c> k</c><00:13:28.399><c> by</c><00:13:28.720><c> adding</c><00:13:29.360><c> the</c><00:13:29.680><c> left</c>

00:13:30.069 --> 00:13:30.079 align:start position:0%
we can compute the k by adding the left
 

00:13:30.079 --> 00:13:32.870 align:start position:0%
we can compute the k by adding the left
and<00:13:30.320><c> right</c><00:13:30.639><c> together</c><00:13:31.360><c> and</c><00:13:31.519><c> dividing</c><00:13:32.000><c> by</c><00:13:32.240><c> two</c>

00:13:32.870 --> 00:13:32.880 align:start position:0%
and right together and dividing by two
 

00:13:32.880 --> 00:13:33.829 align:start position:0%
and right together and dividing by two
and<00:13:33.120><c> we</c><00:13:33.360><c> want</c><00:13:33.519><c> to</c>

00:13:33.829 --> 00:13:33.839 align:start position:0%
and we want to
 

00:13:33.839 --> 00:13:36.870 align:start position:0%
and we want to
count<00:13:34.399><c> for</c><00:13:34.639><c> this</c><00:13:34.959><c> value</c><00:13:35.440><c> k</c><00:13:35.680><c> for</c><00:13:35.920><c> this</c><00:13:36.160><c> rate</c><00:13:36.560><c> k</c>

00:13:36.870 --> 00:13:36.880 align:start position:0%
count for this value k for this rate k
 

00:13:36.880 --> 00:13:38.629 align:start position:0%
count for this value k for this rate k
how<00:13:37.040><c> many</c><00:13:37.279><c> hours</c><00:13:37.519><c> does</c><00:13:37.760><c> it</c><00:13:37.839><c> take</c><00:13:38.079><c> to</c><00:13:38.240><c> eat</c><00:13:38.480><c> all</c>

00:13:38.629 --> 00:13:38.639 align:start position:0%
how many hours does it take to eat all
 

00:13:38.639 --> 00:13:40.470 align:start position:0%
how many hours does it take to eat all
bananas<00:13:39.040><c> so</c><00:13:39.199><c> let's</c><00:13:39.440><c> initialize</c><00:13:40.000><c> hours</c><00:13:40.320><c> to</c>

00:13:40.470 --> 00:13:40.480 align:start position:0%
bananas so let's initialize hours to
 

00:13:40.480 --> 00:13:42.629 align:start position:0%
bananas so let's initialize hours to
zero<00:13:40.880><c> and</c><00:13:41.040><c> go</c><00:13:41.279><c> through</c><00:13:41.600><c> every</c><00:13:42.000><c> pile</c>

00:13:42.629 --> 00:13:42.639 align:start position:0%
zero and go through every pile
 

00:13:42.639 --> 00:13:45.189 align:start position:0%
zero and go through every pile
in<00:13:42.800><c> the</c><00:13:42.959><c> input</c><00:13:43.360><c> array</c><00:13:43.680><c> piles</c><00:13:44.560><c> so</c><00:13:44.800><c> for</c><00:13:45.040><c> any</c>

00:13:45.189 --> 00:13:45.199 align:start position:0%
in the input array piles so for any
 

00:13:45.199 --> 00:13:46.470 align:start position:0%
in the input array piles so for any
given<00:13:45.600><c> pile</c><00:13:46.000><c> p</c>

00:13:46.470 --> 00:13:46.480 align:start position:0%
given pile p
 

00:13:46.480 --> 00:13:48.870 align:start position:0%
given pile p
we<00:13:46.639><c> can</c><00:13:46.720><c> divide</c><00:13:47.199><c> it</c><00:13:47.360><c> by</c><00:13:47.680><c> k</c><00:13:48.160><c> which</c><00:13:48.320><c> tells</c><00:13:48.639><c> us</c><00:13:48.720><c> how</c>

00:13:48.870 --> 00:13:48.880 align:start position:0%
we can divide it by k which tells us how
 

00:13:48.880 --> 00:13:50.389 align:start position:0%
we can divide it by k which tells us how
many<00:13:49.040><c> hours</c><00:13:49.360><c> it</c><00:13:49.440><c> took</c><00:13:49.600><c> but</c><00:13:49.760><c> remember</c><00:13:50.079><c> we</c><00:13:50.240><c> have</c>

00:13:50.389 --> 00:13:50.399 align:start position:0%
many hours it took but remember we have
 

00:13:50.399 --> 00:13:51.110 align:start position:0%
many hours it took but remember we have
to<00:13:50.639><c> round</c>

00:13:51.110 --> 00:13:51.120 align:start position:0%
to round
 

00:13:51.120 --> 00:13:53.310 align:start position:0%
to round
up<00:13:51.360><c> so</c><00:13:51.600><c> there's</c><00:13:51.920><c> a</c><00:13:52.160><c> function</c><00:13:52.480><c> in</c><00:13:52.639><c> python</c>

00:13:53.310 --> 00:13:53.320 align:start position:0%
up so there's a function in python
 

00:13:53.320 --> 00:13:55.590 align:start position:0%
up so there's a function in python
math.ceiling<00:13:54.399><c> which</c><00:13:54.639><c> will</c><00:13:54.880><c> round</c>

00:13:55.590 --> 00:13:55.600 align:start position:0%
math.ceiling which will round
 

00:13:55.600 --> 00:13:57.990 align:start position:0%
math.ceiling which will round
this<00:13:56.000><c> up</c><00:13:56.240><c> for</c><00:13:56.480><c> us</c><00:13:56.959><c> and</c><00:13:57.120><c> whatever</c><00:13:57.519><c> that</c><00:13:57.680><c> happens</c>

00:13:57.990 --> 00:13:58.000 align:start position:0%
this up for us and whatever that happens
 

00:13:58.000 --> 00:14:00.870 align:start position:0%
this up for us and whatever that happens
to<00:13:58.160><c> be</c><00:13:58.399><c> is</c><00:13:58.560><c> what</c><00:13:58.720><c> we</c><00:13:58.880><c> can</c><00:13:59.120><c> add</c><00:13:59.440><c> to</c><00:13:59.760><c> our</c><00:14:00.160><c> hours</c>

00:14:00.870 --> 00:14:00.880 align:start position:0%
to be is what we can add to our hours
 

00:14:00.880 --> 00:14:03.430 align:start position:0%
to be is what we can add to our hours
total<00:14:01.680><c> once</c><00:14:02.000><c> we've</c><00:14:02.240><c> done</c><00:14:02.480><c> that</c><00:14:02.800><c> then</c><00:14:03.120><c> at</c><00:14:03.199><c> the</c>

00:14:03.430 --> 00:14:03.440 align:start position:0%
total once we've done that then at the
 

00:14:03.440 --> 00:14:03.910 align:start position:0%
total once we've done that then at the
end

00:14:03.910 --> 00:14:03.920 align:start position:0%
end
 

00:14:03.920 --> 00:14:06.069 align:start position:0%
end
of<00:14:04.079><c> that</c><00:14:04.240><c> loop</c><00:14:04.560><c> we're</c><00:14:04.720><c> going</c><00:14:04.880><c> to</c><00:14:05.040><c> check</c><00:14:05.519><c> if</c>

00:14:06.069 --> 00:14:06.079 align:start position:0%
of that loop we're going to check if
 

00:14:06.079 --> 00:14:08.470 align:start position:0%
of that loop we're going to check if
hours<00:14:06.639><c> happens</c><00:14:07.040><c> to</c><00:14:07.199><c> be</c><00:14:07.440><c> less</c><00:14:07.680><c> than</c><00:14:07.839><c> or</c><00:14:08.079><c> equal</c>

00:14:08.470 --> 00:14:08.480 align:start position:0%
hours happens to be less than or equal
 

00:14:08.480 --> 00:14:08.790 align:start position:0%
hours happens to be less than or equal
to

00:14:08.790 --> 00:14:08.800 align:start position:0%
to
 

00:14:08.800 --> 00:14:11.910 align:start position:0%
to
h<00:14:09.279><c> the</c><00:14:09.440><c> given</c><00:14:09.839><c> input</c><00:14:10.399><c> if</c><00:14:10.560><c> it</c><00:14:10.800><c> is</c><00:14:11.360><c> that</c><00:14:11.519><c> means</c><00:14:11.760><c> we</c>

00:14:11.910 --> 00:14:11.920 align:start position:0%
h the given input if it is that means we
 

00:14:11.920 --> 00:14:13.269 align:start position:0%
h the given input if it is that means we
can<00:14:12.079><c> update</c><00:14:12.399><c> our</c><00:14:12.560><c> result</c>

00:14:13.269 --> 00:14:13.279 align:start position:0%
can update our result
 

00:14:13.279 --> 00:14:15.990 align:start position:0%
can update our result
to<00:14:13.519><c> a</c><00:14:13.760><c> new</c><00:14:14.000><c> minimum</c><00:14:14.480><c> right</c><00:14:14.800><c> take</c><00:14:14.959><c> the</c><00:14:15.519><c> minimum</c>

00:14:15.990 --> 00:14:16.000 align:start position:0%
to a new minimum right take the minimum
 

00:14:16.000 --> 00:14:17.509 align:start position:0%
to a new minimum right take the minimum
of<00:14:16.079><c> the</c><00:14:16.240><c> result</c><00:14:16.639><c> and</c><00:14:16.800><c> whatever</c>

00:14:17.509 --> 00:14:17.519 align:start position:0%
of the result and whatever
 

00:14:17.519 --> 00:14:19.670 align:start position:0%
of the result and whatever
k<00:14:17.839><c> happens</c><00:14:18.160><c> to</c><00:14:18.320><c> be</c><00:14:18.560><c> k</c><00:14:18.880><c> is</c><00:14:18.959><c> that</c><00:14:19.199><c> rate</c><00:14:19.519><c> that</c>

00:14:19.670 --> 00:14:19.680 align:start position:0%
k happens to be k is that rate that
 

00:14:19.680 --> 00:14:20.550 align:start position:0%
k happens to be k is that rate that
we're<00:14:19.839><c> looking</c><00:14:20.160><c> for</c>

00:14:20.550 --> 00:14:20.560 align:start position:0%
we're looking for
 

00:14:20.560 --> 00:14:22.550 align:start position:0%
we're looking for
and<00:14:20.720><c> if</c><00:14:20.880><c> this</c><00:14:21.199><c> is</c><00:14:21.360><c> the</c><00:14:21.519><c> case</c><00:14:21.920><c> then</c><00:14:22.079><c> how</c><00:14:22.320><c> are</c><00:14:22.399><c> we</c>

00:14:22.550 --> 00:14:22.560 align:start position:0%
and if this is the case then how are we
 

00:14:22.560 --> 00:14:24.150 align:start position:0%
and if this is the case then how are we
going<00:14:22.639><c> to</c><00:14:22.800><c> update</c><00:14:23.120><c> our</c><00:14:23.199><c> binary</c><00:14:23.600><c> search</c><00:14:23.920><c> well</c>

00:14:24.150 --> 00:14:24.160 align:start position:0%
going to update our binary search well
 

00:14:24.160 --> 00:14:25.350 align:start position:0%
going to update our binary search well
we're<00:14:24.320><c> going</c><00:14:24.399><c> to</c><00:14:24.480><c> look</c><00:14:24.639><c> for</c><00:14:24.800><c> an</c><00:14:24.959><c> even</c>

00:14:25.350 --> 00:14:25.360 align:start position:0%
we're going to look for an even
 

00:14:25.360 --> 00:14:27.110 align:start position:0%
we're going to look for an even
smaller<00:14:25.839><c> k</c><00:14:26.160><c> so</c><00:14:26.320><c> what</c><00:14:26.480><c> we're</c><00:14:26.639><c> going</c><00:14:26.720><c> to</c><00:14:26.800><c> do</c><00:14:26.959><c> is</c>

00:14:27.110 --> 00:14:27.120 align:start position:0%
smaller k so what we're going to do is
 

00:14:27.120 --> 00:14:28.550 align:start position:0%
smaller k so what we're going to do is
set<00:14:27.360><c> our</c><00:14:27.600><c> right</c><00:14:27.920><c> pointer</c>

00:14:28.550 --> 00:14:28.560 align:start position:0%
set our right pointer
 

00:14:28.560 --> 00:14:31.350 align:start position:0%
set our right pointer
equal<00:14:29.120><c> to</c><00:14:29.360><c> k</c><00:14:30.000><c> minus</c><00:14:30.720><c> 1.</c><00:14:31.040><c> we're</c><00:14:31.199><c> going</c><00:14:31.279><c> to</c>

00:14:31.350 --> 00:14:31.360 align:start position:0%
equal to k minus 1. we're going to
 

00:14:31.360 --> 00:14:33.269 align:start position:0%
equal to k minus 1. we're going to
search<00:14:31.680><c> the</c><00:14:31.920><c> left</c><00:14:32.240><c> portion</c><00:14:32.720><c> now</c>

00:14:33.269 --> 00:14:33.279 align:start position:0%
search the left portion now
 

00:14:33.279 --> 00:14:35.350 align:start position:0%
search the left portion now
if<00:14:33.440><c> this</c><00:14:33.760><c> wasn't</c><00:14:34.160><c> true</c><00:14:34.639><c> how</c><00:14:34.800><c> would</c><00:14:34.959><c> we</c><00:14:35.120><c> update</c>

00:14:35.350 --> 00:14:35.360 align:start position:0%
if this wasn't true how would we update
 

00:14:35.360 --> 00:14:37.110 align:start position:0%
if this wasn't true how would we update
our<00:14:35.440><c> binary</c><00:14:35.839><c> search</c><00:14:36.160><c> in</c><00:14:36.240><c> the</c><00:14:36.399><c> opposite</c><00:14:36.800><c> case</c>

00:14:37.110 --> 00:14:37.120 align:start position:0%
our binary search in the opposite case
 

00:14:37.120 --> 00:14:38.790 align:start position:0%
our binary search in the opposite case
then<00:14:37.279><c> we</c><00:14:37.360><c> would</c><00:14:37.519><c> take</c><00:14:37.760><c> our</c><00:14:37.920><c> left</c><00:14:38.240><c> pointer</c>

00:14:38.790 --> 00:14:38.800 align:start position:0%
then we would take our left pointer
 

00:14:38.800 --> 00:14:41.030 align:start position:0%
then we would take our left pointer
and<00:14:38.959><c> set</c><00:14:39.199><c> it</c><00:14:39.279><c> to</c><00:14:39.440><c> k</c><00:14:39.839><c> plus</c><00:14:40.160><c> 1</c><00:14:40.639><c> because</c><00:14:40.880><c> that</c>

00:14:41.030 --> 00:14:41.040 align:start position:0%
and set it to k plus 1 because that
 

00:14:41.040 --> 00:14:42.790 align:start position:0%
and set it to k plus 1 because that
means<00:14:41.279><c> the</c><00:14:41.519><c> rate</c><00:14:41.760><c> was</c><00:14:41.920><c> too</c><00:14:42.079><c> small</c><00:14:42.399><c> so</c><00:14:42.560><c> we</c><00:14:42.720><c> need</c>

00:14:42.790 --> 00:14:42.800 align:start position:0%
means the rate was too small so we need
 

00:14:42.800 --> 00:14:44.069 align:start position:0%
means the rate was too small so we need
to<00:14:42.959><c> find</c><00:14:43.199><c> an</c><00:14:43.360><c> even</c><00:14:43.600><c> bigger</c>

00:14:44.069 --> 00:14:44.079 align:start position:0%
to find an even bigger
 

00:14:44.079 --> 00:14:45.590 align:start position:0%
to find an even bigger
rate<00:14:44.480><c> that</c><00:14:44.639><c> will</c><00:14:44.800><c> allow</c><00:14:45.120><c> us</c><00:14:45.279><c> to</c><00:14:45.360><c> eat</c><00:14:45.519><c> the</c>

00:14:45.590 --> 00:14:45.600 align:start position:0%
rate that will allow us to eat the
 

00:14:45.600 --> 00:14:48.150 align:start position:0%
rate that will allow us to eat the
bananas<00:14:46.240><c> in</c><00:14:46.560><c> the</c><00:14:46.800><c> given</c><00:14:47.199><c> time</c><00:14:47.440><c> interval</c>

00:14:48.150 --> 00:14:48.160 align:start position:0%
bananas in the given time interval
 

00:14:48.160 --> 00:14:50.150 align:start position:0%
bananas in the given time interval
and<00:14:48.399><c> at</c><00:14:48.560><c> the</c><00:14:48.800><c> end</c><00:14:49.120><c> of</c><00:14:49.279><c> this</c><00:14:49.519><c> loop</c><00:14:49.760><c> once</c><00:14:50.000><c> the</c>

00:14:50.150 --> 00:14:50.160 align:start position:0%
and at the end of this loop once the
 

00:14:50.160 --> 00:14:51.750 align:start position:0%
and at the end of this loop once the
binary<00:14:50.560><c> search</c><00:14:50.880><c> has</c><00:14:50.959><c> stopped</c><00:14:51.279><c> we</c><00:14:51.519><c> know</c><00:14:51.680><c> that</c>

00:14:51.750 --> 00:14:51.760 align:start position:0%
binary search has stopped we know that
 

00:14:51.760 --> 00:14:53.350 align:start position:0%
binary search has stopped we know that
we're<00:14:51.920><c> going</c><00:14:52.000><c> to</c><00:14:52.079><c> be</c><00:14:52.240><c> returning</c><00:14:52.720><c> that</c><00:14:52.959><c> result</c>

00:14:53.350 --> 00:14:53.360 align:start position:0%
we're going to be returning that result
 

00:14:53.360 --> 00:14:55.189 align:start position:0%
we're going to be returning that result
variable<00:14:53.680><c> which</c><00:14:53.920><c> tells</c><00:14:54.240><c> us</c><00:14:54.399><c> what</c><00:14:54.560><c> the</c><00:14:54.720><c> minimum</c>

00:14:55.189 --> 00:14:55.199 align:start position:0%
variable which tells us what the minimum
 

00:14:55.199 --> 00:14:56.710 align:start position:0%
variable which tells us what the minimum
k<00:14:55.440><c> happens</c><00:14:55.839><c> to</c><00:14:56.000><c> be</c>

00:14:56.710 --> 00:14:56.720 align:start position:0%
k happens to be
 

00:14:56.720 --> 00:14:58.710 align:start position:0%
k happens to be
and<00:14:56.880><c> believe</c><00:14:57.199><c> it</c><00:14:57.279><c> or</c><00:14:57.440><c> not</c><00:14:57.680><c> that</c><00:14:58.000><c> is</c><00:14:58.079><c> the</c><00:14:58.320><c> entire</c>

00:14:58.710 --> 00:14:58.720 align:start position:0%
and believe it or not that is the entire
 

00:14:58.720 --> 00:15:00.470 align:start position:0%
and believe it or not that is the entire
result<00:14:59.120><c> so</c><00:14:59.360><c> i</c><00:14:59.440><c> hope</c><00:14:59.600><c> this</c><00:14:59.760><c> was</c><00:14:59.920><c> helpful</c>

00:15:00.470 --> 00:15:00.480 align:start position:0%
result so i hope this was helpful
 

00:15:00.480 --> 00:15:02.389 align:start position:0%
result so i hope this was helpful
if<00:15:00.639><c> it</c><00:15:00.800><c> was</c><00:15:01.120><c> please</c><00:15:01.440><c> like</c><00:15:01.600><c> and</c><00:15:01.760><c> subscribe</c><00:15:02.240><c> it</c>

00:15:02.389 --> 00:15:02.399 align:start position:0%
if it was please like and subscribe it
 

00:15:02.399 --> 00:15:04.069 align:start position:0%
if it was please like and subscribe it
supports<00:15:02.800><c> the</c><00:15:02.880><c> channel</c><00:15:03.279><c> a</c><00:15:03.440><c> lot</c><00:15:03.760><c> and</c><00:15:03.920><c> i'll</c>

00:15:04.069 --> 00:15:04.079 align:start position:0%
supports the channel a lot and i'll
 

00:15:04.079 --> 00:15:04.629 align:start position:0%
supports the channel a lot and i'll
hopefully

00:15:04.629 --> 00:15:04.639 align:start position:0%
hopefully
 

00:15:04.639 --> 00:15:13.760 align:start position:0%
hopefully
see<00:15:04.800><c> you</c><00:15:04.959><c> pretty</c><00:15:05.199><c> soon</c><00:15:05.760><c> thanks</c><00:15:06.000><c> for</c><00:15:10.760><c> watching</c>

