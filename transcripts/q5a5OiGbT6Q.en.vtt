WEBVTT
Kind: captions
Language: en

00:00:00.080 --> 00:00:02.070 align:start position:0%
 
hey<00:00:00.320><c> guys</c><00:00:00.560><c> it's</c><00:00:00.719><c> me</c><00:00:00.960><c> neat</c><00:00:01.120><c> code</c><00:00:01.439><c> again</c><00:00:01.680><c> solving</c>

00:00:02.070 --> 00:00:02.080 align:start position:0%
hey guys it's me neat code again solving
 

00:00:02.080 --> 00:00:03.990 align:start position:0%
hey guys it's me neat code again solving
another<00:00:02.480><c> leak</c><00:00:02.720><c> code</c><00:00:03.040><c> problem</c><00:00:03.520><c> this</c><00:00:03.760><c> time</c>

00:00:03.990 --> 00:00:04.000 align:start position:0%
another leak code problem this time
 

00:00:04.000 --> 00:00:05.030 align:start position:0%
another leak code problem this time
we're<00:00:04.160><c> doing</c><00:00:04.560><c> merge</c>

00:00:05.030 --> 00:00:05.040 align:start position:0%
we're doing merge
 

00:00:05.040 --> 00:00:07.829 align:start position:0%
we're doing merge
k<00:00:05.440><c> sorted</c><00:00:05.839><c> linked</c><00:00:06.160><c> list</c><00:00:06.480><c> before</c><00:00:06.960><c> we've</c><00:00:07.279><c> done</c>

00:00:07.829 --> 00:00:07.839 align:start position:0%
k sorted linked list before we've done
 

00:00:07.839 --> 00:00:09.990 align:start position:0%
k sorted linked list before we've done
merging<00:00:08.400><c> two</c><00:00:08.720><c> sorted</c><00:00:09.120><c> linked</c><00:00:09.360><c> list</c>

00:00:09.990 --> 00:00:10.000 align:start position:0%
merging two sorted linked list
 

00:00:10.000 --> 00:00:12.390 align:start position:0%
merging two sorted linked list
which<00:00:10.320><c> is</c><00:00:10.480><c> i</c><00:00:10.800><c> which</c><00:00:11.040><c> is</c><00:00:11.120><c> an</c><00:00:11.280><c> easy</c><00:00:11.679><c> problem</c><00:00:12.320><c> i</c>

00:00:12.390 --> 00:00:12.400 align:start position:0%
which is i which is an easy problem i
 

00:00:12.400 --> 00:00:13.030 align:start position:0%
which is i which is an easy problem i
think<00:00:12.639><c> it</c><00:00:12.719><c> was</c>

00:00:13.030 --> 00:00:13.040 align:start position:0%
think it was
 

00:00:13.040 --> 00:00:16.070 align:start position:0%
think it was
leak<00:00:13.280><c> code</c><00:00:13.679><c> 21</c><00:00:14.320><c> so</c><00:00:15.280><c> if</c><00:00:15.360><c> you</c><00:00:15.519><c> haven't</c><00:00:15.679><c> solved</c>

00:00:16.070 --> 00:00:16.080 align:start position:0%
leak code 21 so if you haven't solved
 

00:00:16.080 --> 00:00:18.070 align:start position:0%
leak code 21 so if you haven't solved
that<00:00:16.320><c> one</c><00:00:16.560><c> yet</c><00:00:16.800><c> i</c><00:00:16.960><c> would</c><00:00:17.119><c> recommend</c><00:00:17.520><c> doing</c><00:00:17.840><c> so</c>

00:00:18.070 --> 00:00:18.080 align:start position:0%
that one yet i would recommend doing so
 

00:00:18.080 --> 00:00:19.349 align:start position:0%
that one yet i would recommend doing so
because<00:00:18.400><c> it's</c><00:00:18.640><c> basically</c>

00:00:19.349 --> 00:00:19.359 align:start position:0%
because it's basically
 

00:00:19.359 --> 00:00:21.750 align:start position:0%
because it's basically
we're<00:00:19.600><c> basically</c><00:00:20.080><c> extending</c><00:00:20.640><c> that</c><00:00:20.880><c> problem</c>

00:00:21.750 --> 00:00:21.760 align:start position:0%
we're basically extending that problem
 

00:00:21.760 --> 00:00:22.390 align:start position:0%
we're basically extending that problem
so

00:00:22.390 --> 00:00:22.400 align:start position:0%
so
 

00:00:22.400 --> 00:00:24.310 align:start position:0%
so
this<00:00:22.720><c> problem</c><00:00:23.119><c> is</c><00:00:23.279><c> actually</c><00:00:23.680><c> easier</c><00:00:24.000><c> than</c><00:00:24.160><c> you</c>

00:00:24.310 --> 00:00:24.320 align:start position:0%
this problem is actually easier than you
 

00:00:24.320 --> 00:00:26.390 align:start position:0%
this problem is actually easier than you
might<00:00:24.640><c> think</c><00:00:24.880><c> for</c><00:00:25.119><c> a</c><00:00:25.199><c> leak</c><00:00:25.439><c> code</c><00:00:25.760><c> hard</c><00:00:26.080><c> problem</c>

00:00:26.390 --> 00:00:26.400 align:start position:0%
might think for a leak code hard problem
 

00:00:26.400 --> 00:00:28.150 align:start position:0%
might think for a leak code hard problem
there's<00:00:26.560><c> some</c><00:00:26.720><c> really</c><00:00:26.960><c> basic</c><00:00:27.359><c> ideas</c><00:00:27.920><c> that</c><00:00:28.000><c> we</c>

00:00:28.150 --> 00:00:28.160 align:start position:0%
there's some really basic ideas that we
 

00:00:28.160 --> 00:00:28.950 align:start position:0%
there's some really basic ideas that we
can<00:00:28.400><c> use</c>

00:00:28.950 --> 00:00:28.960 align:start position:0%
can use
 

00:00:28.960 --> 00:00:31.189 align:start position:0%
can use
to<00:00:29.119><c> solve</c><00:00:29.359><c> it</c><00:00:29.519><c> efficiently</c><00:00:30.160><c> so</c><00:00:30.480><c> to</c><00:00:30.640><c> illustrate</c>

00:00:31.189 --> 00:00:31.199 align:start position:0%
to solve it efficiently so to illustrate
 

00:00:31.199 --> 00:00:31.990 align:start position:0%
to solve it efficiently so to illustrate
that<00:00:31.519><c> i</c><00:00:31.679><c> have</c>

00:00:31.990 --> 00:00:32.000 align:start position:0%
that i have
 

00:00:32.000 --> 00:00:35.190 align:start position:0%
that i have
four<00:00:33.040><c> single</c><00:00:34.000><c> node</c><00:00:34.320><c> linked</c><00:00:34.559><c> lists</c><00:00:34.880><c> right</c><00:00:35.040><c> so</c>

00:00:35.190 --> 00:00:35.200 align:start position:0%
four single node linked lists right so
 

00:00:35.200 --> 00:00:36.790 align:start position:0%
four single node linked lists right so
each<00:00:35.360><c> of</c><00:00:35.440><c> these</c><00:00:35.680><c> link</c><00:00:35.840><c> lists</c><00:00:36.160><c> only</c><00:00:36.320><c> has</c><00:00:36.559><c> one</c>

00:00:36.790 --> 00:00:36.800 align:start position:0%
each of these link lists only has one
 

00:00:36.800 --> 00:00:38.630 align:start position:0%
each of these link lists only has one
node<00:00:37.120><c> right</c><00:00:37.280><c> so</c><00:00:37.520><c> five</c><00:00:37.840><c> for</c><00:00:38.000><c> example</c>

00:00:38.630 --> 00:00:38.640 align:start position:0%
node right so five for example
 

00:00:38.640 --> 00:00:40.709 align:start position:0%
node right so five for example
so<00:00:38.800><c> basically</c><00:00:39.280><c> how</c><00:00:39.440><c> can</c><00:00:39.680><c> we</c><00:00:39.840><c> merge</c><00:00:40.160><c> them</c><00:00:40.399><c> in</c><00:00:40.559><c> an</c>

00:00:40.709 --> 00:00:40.719 align:start position:0%
so basically how can we merge them in an
 

00:00:40.719 --> 00:00:42.869 align:start position:0%
so basically how can we merge them in an
efficient<00:00:41.280><c> way</c><00:00:41.520><c> let</c><00:00:41.680><c> me</c><00:00:41.920><c> show</c><00:00:42.079><c> you</c>

00:00:42.869 --> 00:00:42.879 align:start position:0%
efficient way let me show you
 

00:00:42.879 --> 00:00:46.150 align:start position:0%
efficient way let me show you
uh<00:00:43.200><c> like</c><00:00:43.360><c> the</c><00:00:43.520><c> general</c><00:00:44.000><c> idea</c><00:00:44.800><c> so</c><00:00:45.280><c> first</c><00:00:45.600><c> we</c><00:00:45.760><c> can</c>

00:00:46.150 --> 00:00:46.160 align:start position:0%
uh like the general idea so first we can
 

00:00:46.160 --> 00:00:48.790 align:start position:0%
uh like the general idea so first we can
merge<00:00:46.719><c> these</c><00:00:47.039><c> two</c><00:00:47.680><c> five</c><00:00:48.000><c> and</c><00:00:48.160><c> seven</c><00:00:48.480><c> right</c><00:00:48.640><c> so</c>

00:00:48.790 --> 00:00:48.800 align:start position:0%
merge these two five and seven right so
 

00:00:48.800 --> 00:00:50.150 align:start position:0%
merge these two five and seven right so
the<00:00:48.960><c> first</c><00:00:49.280><c> two</c><00:00:49.520><c> nodes</c>

00:00:50.150 --> 00:00:50.160 align:start position:0%
the first two nodes
 

00:00:50.160 --> 00:00:51.910 align:start position:0%
the first two nodes
when<00:00:50.320><c> we</c><00:00:50.480><c> merge</c><00:00:50.800><c> them</c><00:00:50.960><c> we</c><00:00:51.039><c> know</c><00:00:51.280><c> that</c><00:00:51.440><c> the</c><00:00:51.600><c> five</c>

00:00:51.910 --> 00:00:51.920 align:start position:0%
when we merge them we know that the five
 

00:00:51.920 --> 00:00:53.830 align:start position:0%
when we merge them we know that the five
is<00:00:52.000><c> smaller</c><00:00:52.399><c> than</c><00:00:52.559><c> the</c><00:00:52.719><c> seven</c><00:00:53.039><c> so</c><00:00:53.199><c> we</c><00:00:53.360><c> put</c><00:00:53.600><c> the</c>

00:00:53.830 --> 00:00:53.840 align:start position:0%
is smaller than the seven so we put the
 

00:00:53.840 --> 00:00:54.150 align:start position:0%
is smaller than the seven so we put the
five

00:00:54.150 --> 00:00:54.160 align:start position:0%
five
 

00:00:54.160 --> 00:00:57.189 align:start position:0%
five
first<00:00:54.800><c> so</c><00:00:55.039><c> now</c><00:00:55.199><c> we</c><00:00:55.360><c> have</c><00:00:55.600><c> a</c><00:00:55.840><c> partially</c><00:00:56.480><c> so</c><00:00:56.719><c> uh</c>

00:00:57.189 --> 00:00:57.199 align:start position:0%
first so now we have a partially so uh
 

00:00:57.199 --> 00:00:59.349 align:start position:0%
first so now we have a partially so uh
a<00:00:57.360><c> partial</c><00:00:57.760><c> linked</c><00:00:58.079><c> list</c><00:00:58.320><c> so</c><00:00:58.480><c> now</c><00:00:58.640><c> we</c><00:00:58.800><c> want</c><00:00:58.960><c> to</c>

00:00:59.349 --> 00:00:59.359 align:start position:0%
a partial linked list so now we want to
 

00:00:59.359 --> 00:01:01.430 align:start position:0%
a partial linked list so now we want to
get<00:00:59.520><c> the</c><00:00:59.600><c> next</c><00:00:59.920><c> value</c><00:01:00.320><c> which</c><00:01:00.559><c> is</c><00:01:00.719><c> 3</c><00:01:01.120><c> and</c><00:01:01.280><c> we</c>

00:01:01.430 --> 00:01:01.440 align:start position:0%
get the next value which is 3 and we
 

00:01:01.440 --> 00:01:02.549 align:start position:0%
get the next value which is 3 and we
want<00:01:01.600><c> to</c><00:01:01.760><c> merge</c><00:01:02.160><c> it</c>

00:01:02.549 --> 00:01:02.559 align:start position:0%
want to merge it
 

00:01:02.559 --> 00:01:05.590 align:start position:0%
want to merge it
into<00:01:03.039><c> this</c><00:01:03.600><c> linked</c><00:01:03.920><c> list</c><00:01:05.040><c> again</c>

00:01:05.590 --> 00:01:05.600 align:start position:0%
into this linked list again
 

00:01:05.600 --> 00:01:07.670 align:start position:0%
into this linked list again
the<00:01:05.840><c> 3</c><00:01:06.320><c> is</c><00:01:06.400><c> smaller</c><00:01:06.799><c> than</c><00:01:07.040><c> the</c><00:01:07.119><c> beginning</c><00:01:07.600><c> of</c>

00:01:07.670 --> 00:01:07.680 align:start position:0%
the 3 is smaller than the beginning of
 

00:01:07.680 --> 00:01:09.670 align:start position:0%
the 3 is smaller than the beginning of
the<00:01:07.840><c> linked</c><00:01:08.080><c> list</c><00:01:08.320><c> which</c><00:01:08.560><c> is</c><00:01:08.720><c> the</c><00:01:08.880><c> 5</c><00:01:09.200><c> over</c><00:01:09.439><c> here</c>

00:01:09.670 --> 00:01:09.680 align:start position:0%
the linked list which is the 5 over here
 

00:01:09.680 --> 00:01:10.310 align:start position:0%
the linked list which is the 5 over here
right

00:01:10.310 --> 00:01:10.320 align:start position:0%
right
 

00:01:10.320 --> 00:01:11.830 align:start position:0%
right
so<00:01:10.560><c> we</c><00:01:10.720><c> can</c><00:01:10.880><c> just</c><00:01:11.040><c> put</c><00:01:11.200><c> the</c><00:01:11.360><c> three</c><00:01:11.600><c> at</c><00:01:11.680><c> the</c>

00:01:11.830 --> 00:01:11.840 align:start position:0%
so we can just put the three at the
 

00:01:11.840 --> 00:01:13.590 align:start position:0%
so we can just put the three at the
beginning

00:01:13.590 --> 00:01:13.600 align:start position:0%
beginning
 

00:01:13.600 --> 00:01:16.230 align:start position:0%
beginning
and<00:01:13.840><c> next</c><00:01:14.320><c> we</c><00:01:14.479><c> only</c><00:01:14.640><c> have</c><00:01:14.880><c> one</c><00:01:15.119><c> value</c><00:01:15.600><c> left</c><00:01:16.080><c> so</c>

00:01:16.230 --> 00:01:16.240 align:start position:0%
and next we only have one value left so
 

00:01:16.240 --> 00:01:17.670 align:start position:0%
and next we only have one value left so
we<00:01:16.400><c> want</c><00:01:16.560><c> to</c><00:01:16.720><c> merge</c>

00:01:17.670 --> 00:01:17.680 align:start position:0%
we want to merge
 

00:01:17.680 --> 00:01:21.109 align:start position:0%
we want to merge
this<00:01:18.159><c> eight</c><00:01:18.720><c> into</c><00:01:19.280><c> our</c><00:01:19.600><c> linked</c><00:01:19.920><c> list</c><00:01:20.479><c> and</c><00:01:20.720><c> so</c>

00:01:21.109 --> 00:01:21.119 align:start position:0%
this eight into our linked list and so
 

00:01:21.119 --> 00:01:23.030 align:start position:0%
this eight into our linked list and so
what's<00:01:21.439><c> the</c><00:01:21.600><c> general</c><00:01:22.080><c> idea</c><00:01:22.479><c> of</c><00:01:22.640><c> how</c><00:01:22.799><c> to</c><00:01:22.880><c> do</c>

00:01:23.030 --> 00:01:23.040 align:start position:0%
what's the general idea of how to do
 

00:01:23.040 --> 00:01:24.149 align:start position:0%
what's the general idea of how to do
that<00:01:23.200><c> well</c><00:01:23.439><c> we're</c><00:01:23.600><c> gonna</c><00:01:23.759><c> have</c><00:01:23.840><c> to</c>

00:01:24.149 --> 00:01:24.159 align:start position:0%
that well we're gonna have to
 

00:01:24.159 --> 00:01:26.469 align:start position:0%
that well we're gonna have to
take<00:01:24.400><c> our</c><00:01:24.640><c> eight</c><00:01:25.040><c> right</c><00:01:25.360><c> look</c><00:01:25.680><c> at</c><00:01:26.240><c> look</c><00:01:26.400><c> at</c>

00:01:26.469 --> 00:01:26.479 align:start position:0%
take our eight right look at look at
 

00:01:26.479 --> 00:01:28.390 align:start position:0%
take our eight right look at look at
this<00:01:26.799><c> three</c><00:01:27.200><c> right</c><00:01:27.439><c> well</c><00:01:27.680><c> it's</c><00:01:27.920><c> bigger</c><00:01:28.240><c> than</c>

00:01:28.390 --> 00:01:28.400 align:start position:0%
this three right well it's bigger than
 

00:01:28.400 --> 00:01:29.910 align:start position:0%
this three right well it's bigger than
the<00:01:28.479><c> three</c><00:01:28.799><c> so</c><00:01:28.960><c> we're</c><00:01:29.119><c> not</c><00:01:29.280><c> putting</c><00:01:29.600><c> it</c>

00:01:29.910 --> 00:01:29.920 align:start position:0%
the three so we're not putting it
 

00:01:29.920 --> 00:01:32.469 align:start position:0%
the three so we're not putting it
there<00:01:30.240><c> is</c><00:01:30.400><c> it</c><00:01:30.560><c> bigger</c><00:01:30.799><c> than</c><00:01:30.960><c> the</c><00:01:31.119><c> five</c><00:01:31.439><c> yep</c><00:01:32.320><c> is</c>

00:01:32.469 --> 00:01:32.479 align:start position:0%
there is it bigger than the five yep is
 

00:01:32.479 --> 00:01:33.749 align:start position:0%
there is it bigger than the five yep is
it<00:01:32.560><c> bigger</c><00:01:32.799><c> than</c><00:01:32.960><c> the</c><00:01:33.119><c> seven</c>

00:01:33.749 --> 00:01:33.759 align:start position:0%
it bigger than the seven
 

00:01:33.759 --> 00:01:35.910 align:start position:0%
it bigger than the seven
yep<00:01:34.079><c> so</c><00:01:34.240><c> we're</c><00:01:34.400><c> going</c><00:01:34.479><c> to</c><00:01:34.560><c> put</c><00:01:34.720><c> it</c><00:01:34.880><c> at</c><00:01:34.960><c> the</c><00:01:35.280><c> end</c>

00:01:35.910 --> 00:01:35.920 align:start position:0%
yep so we're going to put it at the end
 

00:01:35.920 --> 00:01:37.910 align:start position:0%
yep so we're going to put it at the end
so<00:01:36.159><c> notice</c><00:01:36.479><c> how</c><00:01:36.640><c> we</c><00:01:36.799><c> had</c><00:01:36.880><c> to</c><00:01:37.119><c> iterate</c><00:01:37.520><c> through</c>

00:01:37.910 --> 00:01:37.920 align:start position:0%
so notice how we had to iterate through
 

00:01:37.920 --> 00:01:41.030 align:start position:0%
so notice how we had to iterate through
every<00:01:38.479><c> single</c><00:01:38.960><c> node</c><00:01:39.600><c> to</c><00:01:39.920><c> find</c><00:01:40.320><c> where</c><00:01:40.560><c> to</c><00:01:40.720><c> put</c>

00:01:41.030 --> 00:01:41.040 align:start position:0%
every single node to find where to put
 

00:01:41.040 --> 00:01:43.670 align:start position:0%
every single node to find where to put
8<00:01:41.680><c> that's</c><00:01:42.079><c> kind</c><00:01:42.240><c> of</c><00:01:42.399><c> a</c><00:01:42.479><c> problem</c><00:01:42.880><c> but</c><00:01:43.280><c> we</c><00:01:43.439><c> did</c>

00:01:43.670 --> 00:01:43.680 align:start position:0%
8 that's kind of a problem but we did
 

00:01:43.680 --> 00:01:44.950 align:start position:0%
8 that's kind of a problem but we did
find<00:01:43.920><c> the</c><00:01:44.159><c> output</c>

00:01:44.950 --> 00:01:44.960 align:start position:0%
find the output
 

00:01:44.960 --> 00:01:48.149 align:start position:0%
find the output
the<00:01:45.200><c> output</c><00:01:45.520><c> is</c><00:01:45.600><c> going</c><00:01:45.680><c> to</c><00:01:45.759><c> be</c><00:01:46.000><c> the</c><00:01:46.159><c> 3</c><00:01:46.960><c> 5</c><00:01:47.600><c> 7</c><00:01:48.000><c> and</c>

00:01:48.149 --> 00:01:48.159 align:start position:0%
the output is going to be the 3 5 7 and
 

00:01:48.159 --> 00:01:48.710 align:start position:0%
the output is going to be the 3 5 7 and
8.

00:01:48.710 --> 00:01:48.720 align:start position:0%
8.
 

00:01:48.720 --> 00:01:50.950 align:start position:0%
8.
so<00:01:48.960><c> doing</c><00:01:49.280><c> it</c><00:01:49.520><c> this</c><00:01:49.759><c> way</c><00:01:50.079><c> is</c><00:01:50.320><c> not</c><00:01:50.479><c> the</c><00:01:50.640><c> most</c>

00:01:50.950 --> 00:01:50.960 align:start position:0%
so doing it this way is not the most
 

00:01:50.960 --> 00:01:52.389 align:start position:0%
so doing it this way is not the most
efficient<00:01:51.360><c> way</c><00:01:51.520><c> to</c><00:01:51.680><c> do</c><00:01:51.840><c> it</c><00:01:52.000><c> because</c>

00:01:52.389 --> 00:01:52.399 align:start position:0%
efficient way to do it because
 

00:01:52.399 --> 00:01:55.350 align:start position:0%
efficient way to do it because
notice<00:01:52.799><c> for</c><00:01:53.040><c> each</c><00:01:53.680><c> node</c><00:01:54.159><c> or</c><00:01:54.479><c> linked</c><00:01:54.880><c> list</c>

00:01:55.350 --> 00:01:55.360 align:start position:0%
notice for each node or linked list
 

00:01:55.360 --> 00:01:57.350 align:start position:0%
notice for each node or linked list
we're<00:01:55.600><c> going</c><00:01:55.680><c> to</c><00:01:55.840><c> be</c><00:01:56.000><c> merging</c><00:01:56.479><c> it</c><00:01:56.640><c> into</c><00:01:57.040><c> our</c>

00:01:57.350 --> 00:01:57.360 align:start position:0%
we're going to be merging it into our
 

00:01:57.360 --> 00:01:59.510 align:start position:0%
we're going to be merging it into our
current<00:01:57.840><c> output</c><00:01:58.399><c> or</c><00:01:58.640><c> our</c><00:01:58.799><c> current</c>

00:01:59.510 --> 00:01:59.520 align:start position:0%
current output or our current
 

00:01:59.520 --> 00:02:01.510 align:start position:0%
current output or our current
you<00:01:59.680><c> know</c><00:02:00.479><c> result</c><00:02:01.119><c> we're</c><00:02:01.280><c> going</c><00:02:01.360><c> to</c><00:02:01.360><c> be</c>

00:02:01.510 --> 00:02:01.520 align:start position:0%
you know result we're going to be
 

00:02:01.520 --> 00:02:03.109 align:start position:0%
you know result we're going to be
merging<00:02:01.840><c> it</c><00:02:02.000><c> that's</c><00:02:02.240><c> not</c><00:02:02.399><c> going</c><00:02:02.479><c> to</c><00:02:02.560><c> be</c><00:02:02.719><c> super</c>

00:02:03.109 --> 00:02:03.119 align:start position:0%
merging it that's not going to be super
 

00:02:03.119 --> 00:02:04.310 align:start position:0%
merging it that's not going to be super
efficient<00:02:03.520><c> we</c><00:02:03.680><c> have</c><00:02:03.840><c> k</c>

00:02:04.310 --> 00:02:04.320 align:start position:0%
efficient we have k
 

00:02:04.320 --> 00:02:07.590 align:start position:0%
efficient we have k
lists<00:02:05.200><c> right</c><00:02:06.399><c> and</c><00:02:06.560><c> the</c><00:02:06.799><c> total</c><00:02:07.119><c> number</c><00:02:07.360><c> of</c>

00:02:07.590 --> 00:02:07.600 align:start position:0%
lists right and the total number of
 

00:02:07.600 --> 00:02:08.710 align:start position:0%
lists right and the total number of
nodes<00:02:08.000><c> we</c><00:02:08.160><c> have</c><00:02:08.399><c> is</c>

00:02:08.710 --> 00:02:08.720 align:start position:0%
nodes we have is
 

00:02:08.720 --> 00:02:12.470 align:start position:0%
nodes we have is
n<00:02:09.360><c> so</c><00:02:09.920><c> every</c><00:02:10.319><c> time</c><00:02:10.560><c> we're</c><00:02:10.800><c> merging</c><00:02:11.440><c> a</c><00:02:11.680><c> list</c>

00:02:12.470 --> 00:02:12.480 align:start position:0%
n so every time we're merging a list
 

00:02:12.480 --> 00:02:14.309 align:start position:0%
n so every time we're merging a list
we're<00:02:12.640><c> gonna</c><00:02:12.959><c> potentially</c><00:02:13.680><c> have</c><00:02:13.760><c> to</c><00:02:13.920><c> iterate</c>

00:02:14.309 --> 00:02:14.319 align:start position:0%
we're gonna potentially have to iterate
 

00:02:14.319 --> 00:02:16.550 align:start position:0%
we're gonna potentially have to iterate
through<00:02:14.640><c> every</c><00:02:14.879><c> single</c><00:02:15.280><c> node</c><00:02:15.599><c> we</c><00:02:15.760><c> have</c><00:02:16.080><c> so</c><00:02:16.319><c> far</c>

00:02:16.550 --> 00:02:16.560 align:start position:0%
through every single node we have so far
 

00:02:16.560 --> 00:02:18.070 align:start position:0%
through every single node we have so far
which<00:02:16.800><c> could</c><00:02:17.040><c> be</c><00:02:17.280><c> big</c><00:02:17.520><c> o</c><00:02:17.599><c> of</c><00:02:17.840><c> n</c>

00:02:18.070 --> 00:02:18.080 align:start position:0%
which could be big o of n
 

00:02:18.080 --> 00:02:20.229 align:start position:0%
which could be big o of n
so<00:02:18.480><c> the</c><00:02:18.720><c> overall</c><00:02:19.120><c> time</c><00:02:19.360><c> complexity</c><00:02:20.000><c> is</c><00:02:20.080><c> gonna</c>

00:02:20.229 --> 00:02:20.239 align:start position:0%
so the overall time complexity is gonna
 

00:02:20.239 --> 00:02:21.430 align:start position:0%
so the overall time complexity is gonna
be<00:02:20.480><c> k</c><00:02:20.879><c> times</c>

00:02:21.430 --> 00:02:21.440 align:start position:0%
be k times
 

00:02:21.440 --> 00:02:24.630 align:start position:0%
be k times
n<00:02:22.720><c> now</c><00:02:23.040><c> i</c><00:02:23.200><c> bet</c><00:02:23.440><c> you</c><00:02:23.680><c> already</c><00:02:24.080><c> know</c><00:02:24.319><c> where</c><00:02:24.480><c> i'm</c>

00:02:24.630 --> 00:02:24.640 align:start position:0%
n now i bet you already know where i'm
 

00:02:24.640 --> 00:02:26.150 align:start position:0%
n now i bet you already know where i'm
going<00:02:24.879><c> with</c><00:02:25.040><c> the</c><00:02:25.120><c> solution</c><00:02:25.520><c> now</c><00:02:25.760><c> because</c><00:02:26.000><c> the</c>

00:02:26.150 --> 00:02:26.160 align:start position:0%
going with the solution now because the
 

00:02:26.160 --> 00:02:26.790 align:start position:0%
going with the solution now because the
picture

00:02:26.790 --> 00:02:26.800 align:start position:0%
picture
 

00:02:26.800 --> 00:02:29.190 align:start position:0%
picture
really<00:02:27.200><c> makes</c><00:02:27.520><c> it</c><00:02:27.680><c> obvious</c><00:02:28.480><c> why</c><00:02:28.720><c> would</c><00:02:28.959><c> we</c>

00:02:29.190 --> 00:02:29.200 align:start position:0%
really makes it obvious why would we
 

00:02:29.200 --> 00:02:30.150 align:start position:0%
really makes it obvious why would we
merge<00:02:29.599><c> it</c><00:02:29.840><c> like</c>

00:02:30.150 --> 00:02:30.160 align:start position:0%
merge it like
 

00:02:30.160 --> 00:02:33.509 align:start position:0%
merge it like
this<00:02:32.560><c> when</c><00:02:32.879><c> we're</c>

00:02:33.509 --> 00:02:33.519 align:start position:0%
this when we're
 

00:02:33.519 --> 00:02:36.070 align:start position:0%
this when we're
by<00:02:33.680><c> doing</c><00:02:34.000><c> that</c><00:02:34.560><c> we're</c><00:02:34.879><c> really</c><00:02:35.200><c> repeating</c><00:02:35.840><c> a</c>

00:02:36.070 --> 00:02:36.080 align:start position:0%
by doing that we're really repeating a
 

00:02:36.080 --> 00:02:37.990 align:start position:0%
by doing that we're really repeating a
lot<00:02:36.239><c> of</c><00:02:36.400><c> work</c><00:02:36.720><c> that's</c><00:02:37.040><c> really</c><00:02:37.360><c> not</c><00:02:37.599><c> the</c><00:02:37.680><c> most</c>

00:02:37.990 --> 00:02:38.000 align:start position:0%
lot of work that's really not the most
 

00:02:38.000 --> 00:02:39.670 align:start position:0%
lot of work that's really not the most
efficient<00:02:38.319><c> way</c><00:02:38.480><c> to</c><00:02:38.560><c> do</c><00:02:38.720><c> it</c><00:02:38.879><c> if</c><00:02:39.040><c> you</c><00:02:39.200><c> know</c>

00:02:39.670 --> 00:02:39.680 align:start position:0%
efficient way to do it if you know
 

00:02:39.680 --> 00:02:41.750 align:start position:0%
efficient way to do it if you know
the<00:02:39.920><c> algorithm</c><00:02:40.400><c> merge</c><00:02:40.720><c> sort</c><00:02:41.280><c> you</c><00:02:41.440><c> know</c><00:02:41.599><c> that</c>

00:02:41.750 --> 00:02:41.760 align:start position:0%
the algorithm merge sort you know that
 

00:02:41.760 --> 00:02:43.350 align:start position:0%
the algorithm merge sort you know that
there's<00:02:42.000><c> a</c><00:02:42.080><c> better</c><00:02:42.319><c> way</c><00:02:42.480><c> to</c><00:02:42.640><c> do</c><00:02:42.800><c> this</c>

00:02:43.350 --> 00:02:43.360 align:start position:0%
there's a better way to do this
 

00:02:43.360 --> 00:02:46.470 align:start position:0%
there's a better way to do this
so<00:02:44.720><c> and</c><00:02:44.879><c> it's</c><00:02:45.040><c> a</c><00:02:45.120><c> really</c><00:02:45.360><c> basic</c><00:02:45.840><c> idea</c><00:02:46.239><c> right</c>

00:02:46.470 --> 00:02:46.480 align:start position:0%
so and it's a really basic idea right
 

00:02:46.480 --> 00:02:47.030 align:start position:0%
so and it's a really basic idea right
like

00:02:47.030 --> 00:02:47.040 align:start position:0%
like
 

00:02:47.040 --> 00:02:49.110 align:start position:0%
like
why<00:02:47.360><c> merge</c><00:02:47.680><c> it</c><00:02:47.920><c> that</c><00:02:48.080><c> way</c><00:02:48.239><c> when</c><00:02:48.400><c> we</c><00:02:48.560><c> can</c><00:02:48.720><c> merge</c>

00:02:49.110 --> 00:02:49.120 align:start position:0%
why merge it that way when we can merge
 

00:02:49.120 --> 00:02:50.390 align:start position:0%
why merge it that way when we can merge
these<00:02:49.519><c> two</c>

00:02:50.390 --> 00:02:50.400 align:start position:0%
these two
 

00:02:50.400 --> 00:02:53.110 align:start position:0%
these two
and<00:02:50.640><c> merge</c><00:02:51.120><c> these</c><00:02:51.519><c> two</c><00:02:52.080><c> eliminate</c><00:02:52.800><c> a</c><00:02:52.879><c> bit</c><00:02:53.040><c> of</c>

00:02:53.110 --> 00:02:53.120 align:start position:0%
and merge these two eliminate a bit of
 

00:02:53.120 --> 00:02:54.309 align:start position:0%
and merge these two eliminate a bit of
that<00:02:53.360><c> repeated</c><00:02:53.920><c> work</c>

00:02:54.309 --> 00:02:54.319 align:start position:0%
that repeated work
 

00:02:54.319 --> 00:02:57.509 align:start position:0%
that repeated work
right<00:02:55.040><c> and</c><00:02:55.360><c> then</c><00:02:56.160><c> when</c><00:02:56.400><c> we</c><00:02:56.560><c> have</c><00:02:56.800><c> that</c>

00:02:57.509 --> 00:02:57.519 align:start position:0%
right and then when we have that
 

00:02:57.519 --> 00:03:01.030 align:start position:0%
right and then when we have that
like<00:02:57.680><c> the</c><00:02:57.840><c> five</c><00:02:58.159><c> and</c><00:02:58.239><c> the</c><00:02:58.400><c> seven</c><00:03:00.239><c> now</c>

00:03:01.030 --> 00:03:01.040 align:start position:0%
like the five and the seven now
 

00:03:01.040 --> 00:03:03.350 align:start position:0%
like the five and the seven now
using<00:03:01.519><c> this</c><00:03:02.080><c> we're</c><00:03:02.239><c> going</c><00:03:02.319><c> to</c><00:03:02.480><c> merge</c><00:03:03.040><c> these</c>

00:03:03.350 --> 00:03:03.360 align:start position:0%
using this we're going to merge these
 

00:03:03.360 --> 00:03:04.309 align:start position:0%
using this we're going to merge these
two<00:03:03.599><c> together</c>

00:03:04.309 --> 00:03:04.319 align:start position:0%
two together
 

00:03:04.319 --> 00:03:07.270 align:start position:0%
two together
as<00:03:04.480><c> well</c><00:03:05.760><c> and</c><00:03:06.159><c> and</c><00:03:06.319><c> assuming</c><00:03:06.720><c> you</c><00:03:06.879><c> know</c><00:03:07.040><c> the</c>

00:03:07.270 --> 00:03:07.280 align:start position:0%
as well and and assuming you know the
 

00:03:07.280 --> 00:03:09.110 align:start position:0%
as well and and assuming you know the
algorithm<00:03:07.760><c> to</c><00:03:07.920><c> merge</c><00:03:08.239><c> two</c><00:03:08.480><c> sorted</c><00:03:08.879><c> linked</c>

00:03:09.110 --> 00:03:09.120 align:start position:0%
algorithm to merge two sorted linked
 

00:03:09.120 --> 00:03:09.990 align:start position:0%
algorithm to merge two sorted linked
lists

00:03:09.990 --> 00:03:10.000 align:start position:0%
lists
 

00:03:10.000 --> 00:03:12.309 align:start position:0%
lists
you<00:03:10.480><c> we</c><00:03:10.640><c> will</c><00:03:10.800><c> get</c><00:03:11.040><c> the</c><00:03:11.280><c> standard</c><00:03:11.920><c> we'll</c><00:03:12.159><c> get</c>

00:03:12.309 --> 00:03:12.319 align:start position:0%
you we will get the standard we'll get
 

00:03:12.319 --> 00:03:13.830 align:start position:0%
you we will get the standard we'll get
the<00:03:12.400><c> same</c><00:03:12.640><c> solution</c><00:03:13.200><c> right</c>

00:03:13.830 --> 00:03:13.840 align:start position:0%
the same solution right
 

00:03:13.840 --> 00:03:16.710 align:start position:0%
the same solution right
but<00:03:14.080><c> let's</c><00:03:14.480><c> analyze</c><00:03:15.200><c> what</c><00:03:15.519><c> exactly</c><00:03:16.159><c> is</c><00:03:16.400><c> going</c>

00:03:16.710 --> 00:03:16.720 align:start position:0%
but let's analyze what exactly is going
 

00:03:16.720 --> 00:03:18.949 align:start position:0%
but let's analyze what exactly is going
on<00:03:16.959><c> here</c><00:03:17.920><c> when</c><00:03:18.159><c> we</c><00:03:18.319><c> did</c><00:03:18.560><c> this</c>

00:03:18.949 --> 00:03:18.959 align:start position:0%
on here when we did this
 

00:03:18.959 --> 00:03:21.990 align:start position:0%
on here when we did this
first<00:03:19.519><c> step</c><00:03:20.400><c> right</c><00:03:20.640><c> over</c><00:03:20.959><c> here</c><00:03:21.280><c> when</c><00:03:21.519><c> we</c>

00:03:21.990 --> 00:03:22.000 align:start position:0%
first step right over here when we
 

00:03:22.000 --> 00:03:24.550 align:start position:0%
first step right over here when we
went<00:03:22.319><c> from</c><00:03:22.720><c> four</c><00:03:23.120><c> linked</c><00:03:23.440><c> lists</c><00:03:23.920><c> right</c><00:03:24.239><c> one</c>

00:03:24.550 --> 00:03:24.560 align:start position:0%
went from four linked lists right one
 

00:03:24.560 --> 00:03:25.430 align:start position:0%
went from four linked lists right one
two<00:03:24.959><c> three</c>

00:03:25.430 --> 00:03:25.440 align:start position:0%
two three
 

00:03:25.440 --> 00:03:27.670 align:start position:0%
two three
four<00:03:26.000><c> and</c><00:03:26.080><c> then</c><00:03:26.239><c> we</c><00:03:26.400><c> went</c><00:03:26.640><c> to</c><00:03:26.799><c> just</c><00:03:27.200><c> two</c><00:03:27.519><c> of</c>

00:03:27.670 --> 00:03:27.680 align:start position:0%
four and then we went to just two of
 

00:03:27.680 --> 00:03:29.750 align:start position:0%
four and then we went to just two of
them<00:03:27.920><c> remaining</c><00:03:28.480><c> right</c>

00:03:29.750 --> 00:03:29.760 align:start position:0%
them remaining right
 

00:03:29.760 --> 00:03:32.309 align:start position:0%
them remaining right
we<00:03:30.080><c> did</c><00:03:30.400><c> have</c><00:03:30.560><c> to</c><00:03:30.799><c> iterate</c><00:03:31.360><c> we</c><00:03:31.519><c> did</c><00:03:31.680><c> have</c><00:03:31.920><c> to</c><00:03:32.080><c> go</c>

00:03:32.309 --> 00:03:32.319 align:start position:0%
we did have to iterate we did have to go
 

00:03:32.319 --> 00:03:34.550 align:start position:0%
we did have to iterate we did have to go
through<00:03:32.720><c> every</c><00:03:33.040><c> single</c><00:03:33.519><c> node</c><00:03:33.840><c> so</c><00:03:34.000><c> this</c><00:03:34.239><c> was</c>

00:03:34.550 --> 00:03:34.560 align:start position:0%
through every single node so this was
 

00:03:34.560 --> 00:03:37.910 align:start position:0%
through every single node so this was
a<00:03:34.879><c> o</c><00:03:35.120><c> of</c><00:03:35.519><c> n</c><00:03:36.000><c> operation</c><00:03:36.879><c> right</c><00:03:37.120><c> so</c><00:03:37.280><c> it's</c><00:03:37.519><c> still</c>

00:03:37.910 --> 00:03:37.920 align:start position:0%
a o of n operation right so it's still
 

00:03:37.920 --> 00:03:40.630 align:start position:0%
a o of n operation right so it's still
not<00:03:38.239><c> cheap</c><00:03:38.560><c> it's</c><00:03:38.799><c> o</c><00:03:39.040><c> of</c><00:03:39.280><c> n</c><00:03:39.760><c> but</c><00:03:40.000><c> the</c><00:03:40.239><c> question</c>

00:03:40.630 --> 00:03:40.640 align:start position:0%
not cheap it's o of n but the question
 

00:03:40.640 --> 00:03:40.949 align:start position:0%
not cheap it's o of n but the question
is

00:03:40.949 --> 00:03:40.959 align:start position:0%
is
 

00:03:40.959 --> 00:03:43.509 align:start position:0%
is
how<00:03:41.200><c> many</c><00:03:41.680><c> times</c><00:03:42.080><c> do</c><00:03:42.239><c> we</c><00:03:42.400><c> have</c><00:03:42.480><c> to</c><00:03:42.640><c> do</c><00:03:42.879><c> this</c><00:03:43.360><c> in</c>

00:03:43.509 --> 00:03:43.519 align:start position:0%
how many times do we have to do this in
 

00:03:43.519 --> 00:03:45.350 align:start position:0%
how many times do we have to do this in
this<00:03:43.840><c> case</c><00:03:44.080><c> we</c><00:03:44.319><c> only</c><00:03:44.560><c> have</c><00:03:44.640><c> to</c><00:03:44.799><c> do</c><00:03:44.879><c> it</c><00:03:45.120><c> two</c>

00:03:45.350 --> 00:03:45.360 align:start position:0%
this case we only have to do it two
 

00:03:45.360 --> 00:03:46.229 align:start position:0%
this case we only have to do it two
times<00:03:45.760><c> right</c>

00:03:46.229 --> 00:03:46.239 align:start position:0%
times right
 

00:03:46.239 --> 00:03:48.550 align:start position:0%
times right
so<00:03:46.720><c> we</c><00:03:46.879><c> did</c><00:03:47.040><c> the</c><00:03:47.200><c> same</c><00:03:47.440><c> thing</c><00:03:47.680><c> we</c><00:03:47.840><c> took</c><00:03:48.080><c> our</c><00:03:48.319><c> two</c>

00:03:48.550 --> 00:03:48.560 align:start position:0%
so we did the same thing we took our two
 

00:03:48.560 --> 00:03:50.470 align:start position:0%
so we did the same thing we took our two
linked<00:03:48.879><c> lists</c><00:03:49.200><c> down</c><00:03:49.519><c> here</c>

00:03:50.470 --> 00:03:50.480 align:start position:0%
linked lists down here
 

00:03:50.480 --> 00:03:54.630 align:start position:0%
linked lists down here
and<00:03:51.040><c> merged</c><00:03:51.440><c> them</c><00:03:51.680><c> into</c><00:03:52.080><c> our</c><00:03:52.400><c> result</c>

00:03:54.630 --> 00:03:54.640 align:start position:0%
and merged them into our result
 

00:03:54.640 --> 00:03:57.350 align:start position:0%
and merged them into our result
and<00:03:55.200><c> again</c><00:03:55.680><c> we</c><00:03:55.840><c> had</c><00:03:56.000><c> to</c><00:03:56.239><c> potentially</c><00:03:56.879><c> iterate</c>

00:03:57.350 --> 00:03:57.360 align:start position:0%
and again we had to potentially iterate
 

00:03:57.360 --> 00:03:57.670 align:start position:0%
and again we had to potentially iterate
through

00:03:57.670 --> 00:03:57.680 align:start position:0%
through
 

00:03:57.680 --> 00:04:00.309 align:start position:0%
through
every<00:03:58.080><c> single</c><00:03:58.560><c> one</c><00:03:58.720><c> of</c><00:03:58.879><c> our</c><00:03:59.040><c> four</c><00:03:59.439><c> nodes</c><00:04:00.000><c> so</c><00:04:00.239><c> it</c>

00:04:00.309 --> 00:04:00.319 align:start position:0%
every single one of our four nodes so it
 

00:04:00.319 --> 00:04:01.270 align:start position:0%
every single one of our four nodes so it
was<00:04:00.480><c> an</c><00:04:00.720><c> o</c><00:04:00.959><c> of</c>

00:04:01.270 --> 00:04:01.280 align:start position:0%
was an o of
 

00:04:01.280 --> 00:04:04.309 align:start position:0%
was an o of
n<00:04:01.760><c> operation</c><00:04:03.120><c> but</c><00:04:03.360><c> basically</c><00:04:03.920><c> what</c><00:04:04.080><c> we're</c>

00:04:04.309 --> 00:04:04.319 align:start position:0%
n operation but basically what we're
 

00:04:04.319 --> 00:04:06.229 align:start position:0%
n operation but basically what we're
doing<00:04:04.560><c> is</c><00:04:04.720><c> we're</c><00:04:04.959><c> taking</c><00:04:05.360><c> our</c><00:04:05.599><c> lists</c>

00:04:06.229 --> 00:04:06.239 align:start position:0%
doing is we're taking our lists
 

00:04:06.239 --> 00:04:09.110 align:start position:0%
doing is we're taking our lists
and<00:04:06.400><c> dividing</c><00:04:07.120><c> them</c><00:04:07.280><c> by</c><00:04:07.680><c> two</c><00:04:08.159><c> every</c><00:04:08.640><c> time</c><00:04:08.959><c> so</c>

00:04:09.110 --> 00:04:09.120 align:start position:0%
and dividing them by two every time so
 

00:04:09.120 --> 00:04:10.949 align:start position:0%
and dividing them by two every time so
how<00:04:09.360><c> many</c><00:04:09.599><c> times</c><00:04:09.920><c> can</c><00:04:10.159><c> we</c><00:04:10.400><c> take</c>

00:04:10.949 --> 00:04:10.959 align:start position:0%
how many times can we take
 

00:04:10.959 --> 00:04:14.229 align:start position:0%
how many times can we take
the<00:04:11.280><c> k</c><00:04:11.760><c> lists</c><00:04:12.400><c> and</c><00:04:12.560><c> divide</c><00:04:12.959><c> them</c><00:04:13.120><c> by</c><00:04:13.360><c> two</c><00:04:13.920><c> well</c>

00:04:14.229 --> 00:04:14.239 align:start position:0%
the k lists and divide them by two well
 

00:04:14.239 --> 00:04:14.949 align:start position:0%
the k lists and divide them by two well
it's<00:04:14.400><c> going</c><00:04:14.480><c> to</c><00:04:14.560><c> be</c>

00:04:14.949 --> 00:04:14.959 align:start position:0%
it's going to be
 

00:04:14.959 --> 00:04:18.310 align:start position:0%
it's going to be
log<00:04:15.599><c> k</c><00:04:16.320><c> this</c><00:04:16.560><c> is</c><00:04:16.720><c> the</c><00:04:16.880><c> part</c><00:04:17.600><c> where</c><00:04:17.840><c> we</c>

00:04:18.310 --> 00:04:18.320 align:start position:0%
log k this is the part where we
 

00:04:18.320 --> 00:04:21.189 align:start position:0%
log k this is the part where we
speed<00:04:18.720><c> up</c><00:04:18.880><c> our</c><00:04:19.040><c> algorithm</c><00:04:19.600><c> it's</c><00:04:19.840><c> log</c><00:04:20.239><c> k</c><00:04:20.720><c> it's</c>

00:04:21.189 --> 00:04:21.199 align:start position:0%
speed up our algorithm it's log k it's
 

00:04:21.199 --> 00:04:22.069 align:start position:0%
speed up our algorithm it's log k it's
the<00:04:21.440><c> log</c><00:04:21.759><c> k</c>

00:04:22.069 --> 00:04:22.079 align:start position:0%
the log k
 

00:04:22.079 --> 00:04:24.390 align:start position:0%
the log k
is<00:04:22.240><c> the</c><00:04:22.479><c> number</c><00:04:22.800><c> of</c><00:04:23.040><c> times</c><00:04:23.520><c> we're</c><00:04:23.759><c> repeating</c>

00:04:24.390 --> 00:04:24.400 align:start position:0%
is the number of times we're repeating
 

00:04:24.400 --> 00:04:25.270 align:start position:0%
is the number of times we're repeating
this<00:04:24.720><c> o</c><00:04:25.040><c> of</c>

00:04:25.270 --> 00:04:25.280 align:start position:0%
this o of
 

00:04:25.280 --> 00:04:28.070 align:start position:0%
this o of
n<00:04:25.680><c> step</c><00:04:26.240><c> so</c><00:04:26.479><c> in</c><00:04:26.639><c> this</c><00:04:26.960><c> case</c><00:04:27.360><c> with</c><00:04:27.680><c> this</c>

00:04:28.070 --> 00:04:28.080 align:start position:0%
n step so in this case with this
 

00:04:28.080 --> 00:04:28.790 align:start position:0%
n step so in this case with this
algorithm

00:04:28.790 --> 00:04:28.800 align:start position:0%
algorithm
 

00:04:28.800 --> 00:04:31.189 align:start position:0%
algorithm
the<00:04:29.040><c> total</c><00:04:29.440><c> time</c><00:04:29.680><c> complexity</c><00:04:30.320><c> is</c><00:04:30.479><c> going</c><00:04:30.560><c> to</c><00:04:30.639><c> be</c>

00:04:31.189 --> 00:04:31.199 align:start position:0%
the total time complexity is going to be
 

00:04:31.199 --> 00:04:31.909 align:start position:0%
the total time complexity is going to be
n

00:04:31.909 --> 00:04:31.919 align:start position:0%
n
 

00:04:31.919 --> 00:04:34.950 align:start position:0%
n
log<00:04:32.880><c> k</c>

00:04:34.950 --> 00:04:34.960 align:start position:0%
log k
 

00:04:34.960 --> 00:04:37.030 align:start position:0%
log k
and<00:04:35.040><c> that's</c><00:04:35.280><c> a</c><00:04:35.360><c> lot</c><00:04:35.600><c> better</c><00:04:36.160><c> than</c><00:04:36.560><c> the</c><00:04:36.720><c> brute</c>

00:04:37.030 --> 00:04:37.040 align:start position:0%
and that's a lot better than the brute
 

00:04:37.040 --> 00:04:37.990 align:start position:0%
and that's a lot better than the brute
force<00:04:37.440><c> which</c><00:04:37.600><c> was</c>

00:04:37.990 --> 00:04:38.000 align:start position:0%
force which was
 

00:04:38.000 --> 00:04:41.990 align:start position:0%
force which was
n<00:04:38.400><c> times</c><00:04:38.880><c> k</c><00:04:39.520><c> right</c><00:04:40.320><c> so</c><00:04:40.479><c> this</c><00:04:40.720><c> is</c><00:04:40.960><c> a</c><00:04:41.040><c> lot</c><00:04:41.280><c> better</c>

00:04:41.990 --> 00:04:42.000 align:start position:0%
n times k right so this is a lot better
 

00:04:42.000 --> 00:04:43.830 align:start position:0%
n times k right so this is a lot better
okay<00:04:42.240><c> so</c><00:04:42.479><c> now</c><00:04:42.639><c> let's</c><00:04:42.960><c> actually</c><00:04:43.280><c> get</c><00:04:43.520><c> into</c><00:04:43.680><c> the</c>

00:04:43.830 --> 00:04:43.840 align:start position:0%
okay so now let's actually get into the
 

00:04:43.840 --> 00:04:45.030 align:start position:0%
okay so now let's actually get into the
code

00:04:45.030 --> 00:04:45.040 align:start position:0%
code
 

00:04:45.040 --> 00:04:48.150 align:start position:0%
code
uh<00:04:45.520><c> remember</c><00:04:46.000><c> that</c><00:04:46.240><c> we</c><00:04:46.560><c> have</c><00:04:46.880><c> to</c><00:04:47.520><c> understand</c>

00:04:48.150 --> 00:04:48.160 align:start position:0%
uh remember that we have to understand
 

00:04:48.160 --> 00:04:49.110 align:start position:0%
uh remember that we have to understand
how<00:04:48.400><c> to</c><00:04:48.639><c> merge</c>

00:04:49.110 --> 00:04:49.120 align:start position:0%
how to merge
 

00:04:49.120 --> 00:04:51.030 align:start position:0%
how to merge
two<00:04:49.440><c> sorted</c><00:04:49.840><c> linked</c><00:04:50.160><c> lists</c><00:04:50.479><c> so</c><00:04:50.720><c> i'm</c><00:04:50.880><c> just</c>

00:04:51.030 --> 00:04:51.040 align:start position:0%
two sorted linked lists so i'm just
 

00:04:51.040 --> 00:04:52.390 align:start position:0%
two sorted linked lists so i'm just
gonna<00:04:51.360><c> put</c>

00:04:52.390 --> 00:04:52.400 align:start position:0%
gonna put
 

00:04:52.400 --> 00:04:54.629 align:start position:0%
gonna put
that<00:04:52.720><c> function</c><00:04:53.120><c> here</c><00:04:53.360><c> right</c><00:04:53.600><c> now</c><00:04:54.160><c> so</c><00:04:54.400><c> we'll</c>

00:04:54.629 --> 00:04:54.639 align:start position:0%
that function here right now so we'll
 

00:04:54.639 --> 00:04:57.030 align:start position:0%
that function here right now so we'll
have<00:04:54.960><c> list</c><00:04:55.280><c> one</c><00:04:55.600><c> and</c><00:04:55.759><c> list</c><00:04:56.000><c> two</c><00:04:56.240><c> as</c><00:04:56.320><c> parameters</c>

00:04:57.030 --> 00:04:57.040 align:start position:0%
have list one and list two as parameters
 

00:04:57.040 --> 00:04:57.990 align:start position:0%
have list one and list two as parameters
and<00:04:57.280><c> we'll</c><00:04:57.440><c> return</c>

00:04:57.990 --> 00:04:58.000 align:start position:0%
and we'll return
 

00:04:58.000 --> 00:04:59.670 align:start position:0%
and we'll return
the<00:04:58.160><c> output</c><00:04:58.479><c> list</c><00:04:58.800><c> i'm</c><00:04:58.960><c> not</c><00:04:59.120><c> even</c><00:04:59.280><c> going</c><00:04:59.360><c> to</c><00:04:59.520><c> do</c>

00:04:59.670 --> 00:04:59.680 align:start position:0%
the output list i'm not even going to do
 

00:04:59.680 --> 00:05:01.110 align:start position:0%
the output list i'm not even going to do
this<00:04:59.919><c> yet</c><00:05:00.160><c> because</c><00:05:00.639><c> we</c><00:05:00.800><c> know</c>

00:05:01.110 --> 00:05:01.120 align:start position:0%
this yet because we know
 

00:05:01.120 --> 00:05:02.790 align:start position:0%
this yet because we know
this<00:05:01.360><c> is</c><00:05:01.440><c> not</c><00:05:01.680><c> the</c><00:05:01.840><c> most</c><00:05:02.160><c> important</c><00:05:02.560><c> part</c><00:05:02.720><c> of</c>

00:05:02.790 --> 00:05:02.800 align:start position:0%
this is not the most important part of
 

00:05:02.800 --> 00:05:04.950 align:start position:0%
this is not the most important part of
the<00:05:02.960><c> algorithm</c><00:05:03.440><c> that's</c><00:05:03.759><c> the</c><00:05:04.000><c> leak</c><00:05:04.240><c> code</c><00:05:04.560><c> easy</c>

00:05:04.950 --> 00:05:04.960 align:start position:0%
the algorithm that's the leak code easy
 

00:05:04.960 --> 00:05:05.670 align:start position:0%
the algorithm that's the leak code easy
portion

00:05:05.670 --> 00:05:05.680 align:start position:0%
portion
 

00:05:05.680 --> 00:05:07.510 align:start position:0%
portion
we<00:05:05.840><c> want</c><00:05:06.000><c> to</c><00:05:06.160><c> do</c><00:05:06.560><c> the</c><00:05:06.800><c> real</c><00:05:07.039><c> part</c><00:05:07.280><c> of</c><00:05:07.360><c> the</c>

00:05:07.510 --> 00:05:07.520 align:start position:0%
we want to do the real part of the
 

00:05:07.520 --> 00:05:08.870 align:start position:0%
we want to do the real part of the
problem<00:05:07.919><c> which</c><00:05:08.160><c> is</c><00:05:08.240><c> merging</c>

00:05:08.870 --> 00:05:08.880 align:start position:0%
problem which is merging
 

00:05:08.880 --> 00:05:11.110 align:start position:0%
problem which is merging
k<00:05:09.199><c> linked</c><00:05:09.520><c> list</c><00:05:10.240><c> so</c><00:05:10.479><c> the</c><00:05:10.560><c> first</c><00:05:10.800><c> thing</c><00:05:11.039><c> i'm</c>

00:05:11.110 --> 00:05:11.120 align:start position:0%
k linked list so the first thing i'm
 

00:05:11.120 --> 00:05:12.870 align:start position:0%
k linked list so the first thing i'm
going<00:05:11.199><c> to</c><00:05:11.280><c> handle</c><00:05:11.759><c> is</c><00:05:11.919><c> the</c><00:05:12.080><c> annoying</c><00:05:12.639><c> edge</c>

00:05:12.870 --> 00:05:12.880 align:start position:0%
going to handle is the annoying edge
 

00:05:12.880 --> 00:05:14.070 align:start position:0%
going to handle is the annoying edge
cases<00:05:13.520><c> where</c>

00:05:14.070 --> 00:05:14.080 align:start position:0%
cases where
 

00:05:14.080 --> 00:05:17.590 align:start position:0%
cases where
maybe<00:05:14.560><c> the</c><00:05:14.800><c> list</c><00:05:15.280><c> is</c><00:05:15.600><c> null</c><00:05:16.639><c> or</c>

00:05:17.590 --> 00:05:17.600 align:start position:0%
maybe the list is null or
 

00:05:17.600 --> 00:05:23.590 align:start position:0%
maybe the list is null or
or<00:05:17.919><c> the</c><00:05:18.639><c> list</c><00:05:19.199><c> is</c><00:05:19.440><c> of</c><00:05:19.680><c> length</c><00:05:20.320><c> zero</c>

00:05:23.590 --> 00:05:23.600 align:start position:0%
 
 

00:05:23.600 --> 00:05:26.150 align:start position:0%
 
in<00:05:23.680><c> that</c><00:05:24.000><c> case</c><00:05:24.400><c> we</c><00:05:24.479><c> can</c><00:05:24.639><c> just</c><00:05:24.880><c> return</c><00:05:25.520><c> an</c><00:05:25.759><c> empty</c>

00:05:26.150 --> 00:05:26.160 align:start position:0%
in that case we can just return an empty
 

00:05:26.160 --> 00:05:27.270 align:start position:0%
in that case we can just return an empty
linked<00:05:26.479><c> list</c>

00:05:27.270 --> 00:05:27.280 align:start position:0%
linked list
 

00:05:27.280 --> 00:05:29.909 align:start position:0%
linked list
and<00:05:27.520><c> now</c><00:05:27.680><c> to</c><00:05:27.759><c> get</c><00:05:27.919><c> to</c><00:05:28.000><c> the</c><00:05:28.080><c> actual</c><00:05:28.560><c> problem</c><00:05:29.039><c> so</c>

00:05:29.909 --> 00:05:29.919 align:start position:0%
and now to get to the actual problem so
 

00:05:29.919 --> 00:05:31.590 align:start position:0%
and now to get to the actual problem so
we're<00:05:30.080><c> basically</c><00:05:30.639><c> going</c><00:05:30.720><c> to</c><00:05:30.800><c> be</c><00:05:31.039><c> taking</c>

00:05:31.590 --> 00:05:31.600 align:start position:0%
we're basically going to be taking
 

00:05:31.600 --> 00:05:33.830 align:start position:0%
we're basically going to be taking
pairs<00:05:32.160><c> of</c><00:05:32.320><c> linked</c><00:05:32.639><c> lists</c><00:05:33.039><c> and</c><00:05:33.199><c> merging</c><00:05:33.600><c> them</c>

00:05:33.830 --> 00:05:33.840 align:start position:0%
pairs of linked lists and merging them
 

00:05:33.840 --> 00:05:34.870 align:start position:0%
pairs of linked lists and merging them
each<00:05:34.160><c> time</c>

00:05:34.870 --> 00:05:34.880 align:start position:0%
each time
 

00:05:34.880 --> 00:05:36.710 align:start position:0%
each time
and<00:05:35.039><c> we're</c><00:05:35.199><c> going</c><00:05:35.360><c> to</c><00:05:35.440><c> keep</c><00:05:35.759><c> doing</c><00:05:36.080><c> this</c><00:05:36.479><c> until</c>

00:05:36.710 --> 00:05:36.720 align:start position:0%
and we're going to keep doing this until
 

00:05:36.720 --> 00:05:38.150 align:start position:0%
and we're going to keep doing this until
there's<00:05:37.120><c> only</c><00:05:37.600><c> one</c>

00:05:38.150 --> 00:05:38.160 align:start position:0%
there's only one
 

00:05:38.160 --> 00:05:39.830 align:start position:0%
there's only one
linked<00:05:38.479><c> list</c><00:05:38.880><c> remaining</c><00:05:39.360><c> and</c><00:05:39.440><c> that's</c><00:05:39.759><c> going</c>

00:05:39.830 --> 00:05:39.840 align:start position:0%
linked list remaining and that's going
 

00:05:39.840 --> 00:05:41.670 align:start position:0%
linked list remaining and that's going
to<00:05:39.919><c> be</c><00:05:40.080><c> our</c><00:05:40.320><c> output</c><00:05:40.800><c> so</c>

00:05:41.670 --> 00:05:41.680 align:start position:0%
to be our output so
 

00:05:41.680 --> 00:05:44.310 align:start position:0%
to be our output so
while<00:05:42.080><c> the</c><00:05:42.320><c> length</c><00:05:42.800><c> of</c><00:05:42.960><c> lists</c><00:05:43.759><c> is</c><00:05:44.000><c> greater</c>

00:05:44.310 --> 00:05:44.320 align:start position:0%
while the length of lists is greater
 

00:05:44.320 --> 00:05:45.670 align:start position:0%
while the length of lists is greater
than<00:05:44.560><c> one</c><00:05:44.880><c> we're</c><00:05:45.039><c> going</c><00:05:45.120><c> to</c><00:05:45.280><c> keep</c>

00:05:45.670 --> 00:05:45.680 align:start position:0%
than one we're going to keep
 

00:05:45.680 --> 00:05:47.909 align:start position:0%
than one we're going to keep
reducing<00:05:46.400><c> it</c><00:05:46.560><c> right</c><00:05:46.800><c> we're</c><00:05:46.960><c> going</c><00:05:47.039><c> to</c><00:05:47.199><c> keep</c>

00:05:47.909 --> 00:05:47.919 align:start position:0%
reducing it right we're going to keep
 

00:05:47.919 --> 00:05:49.350 align:start position:0%
reducing it right we're going to keep
cutting<00:05:48.240><c> it</c><00:05:48.479><c> in</c><00:05:48.639><c> half</c>

00:05:49.350 --> 00:05:49.360 align:start position:0%
cutting it in half
 

00:05:49.360 --> 00:05:52.070 align:start position:0%
cutting it in half
so<00:05:49.680><c> as</c><00:05:49.919><c> we</c><00:05:50.240><c> merge</c><00:05:50.720><c> these</c><00:05:51.120><c> lists</c><00:05:51.680><c> i'm</c><00:05:51.840><c> going</c><00:05:52.000><c> to</c>

00:05:52.070 --> 00:05:52.080 align:start position:0%
so as we merge these lists i'm going to
 

00:05:52.080 --> 00:05:52.629 align:start position:0%
so as we merge these lists i'm going to
put<00:05:52.320><c> them</c>

00:05:52.629 --> 00:05:52.639 align:start position:0%
put them
 

00:05:52.639 --> 00:05:55.749 align:start position:0%
put them
in<00:05:53.039><c> a</c><00:05:53.600><c> new</c><00:05:53.919><c> list</c><00:05:54.320><c> called</c><00:05:54.720><c> merged</c><00:05:55.199><c> list</c>

00:05:55.749 --> 00:05:55.759 align:start position:0%
in a new list called merged list
 

00:05:55.759 --> 00:05:57.990 align:start position:0%
in a new list called merged list
so<00:05:56.080><c> now</c><00:05:56.240><c> we</c><00:05:56.400><c> want</c><00:05:56.560><c> to</c><00:05:56.800><c> iterate</c><00:05:57.280><c> through</c><00:05:57.759><c> each</c>

00:05:57.990 --> 00:05:58.000 align:start position:0%
so now we want to iterate through each
 

00:05:58.000 --> 00:06:03.670 align:start position:0%
so now we want to iterate through each
of<00:05:58.160><c> these</c><00:05:58.479><c> lists</c>

00:06:03.670 --> 00:06:03.680 align:start position:0%
 
 

00:06:03.680 --> 00:06:06.150 align:start position:0%
 
and<00:06:04.240><c> each</c><00:06:04.639><c> time</c><00:06:04.960><c> we're</c><00:06:05.120><c> going</c><00:06:05.280><c> to</c><00:06:05.440><c> we</c><00:06:05.759><c> know</c><00:06:06.000><c> we</c>

00:06:06.150 --> 00:06:06.160 align:start position:0%
and each time we're going to we know we
 

00:06:06.160 --> 00:06:06.710 align:start position:0%
and each time we're going to we know we
want<00:06:06.319><c> to</c><00:06:06.400><c> do</c>

00:06:06.710 --> 00:06:06.720 align:start position:0%
want to do
 

00:06:06.720 --> 00:06:08.790 align:start position:0%
want to do
pairs<00:06:07.039><c> of</c><00:06:07.199><c> linked</c><00:06:07.440><c> lists</c><00:06:07.680><c> so</c><00:06:07.840><c> my</c><00:06:08.080><c> incrementer</c>

00:06:08.790 --> 00:06:08.800 align:start position:0%
pairs of linked lists so my incrementer
 

00:06:08.800 --> 00:06:11.749 align:start position:0%
pairs of linked lists so my incrementer
is<00:06:08.880><c> going</c><00:06:09.039><c> to</c><00:06:09.120><c> be</c><00:06:09.440><c> 2.</c>

00:06:11.749 --> 00:06:11.759 align:start position:0%
is going to be 2.
 

00:06:11.759 --> 00:06:15.110 align:start position:0%
is going to be 2.
so<00:06:12.080><c> list</c><00:06:12.479><c> 1</c><00:06:12.960><c> is</c><00:06:13.120><c> just</c><00:06:13.440><c> going</c><00:06:13.520><c> to</c><00:06:13.680><c> be</c>

00:06:15.110 --> 00:06:15.120 align:start position:0%
so list 1 is just going to be
 

00:06:15.120 --> 00:06:19.110 align:start position:0%
so list 1 is just going to be
at<00:06:15.360><c> index</c><00:06:16.000><c> i</c><00:06:17.039><c> now</c><00:06:17.360><c> list</c><00:06:17.919><c> 2</c>

00:06:19.110 --> 00:06:19.120 align:start position:0%
at index i now list 2
 

00:06:19.120 --> 00:06:21.670 align:start position:0%
at index i now list 2
might<00:06:19.919><c> be</c><00:06:20.160><c> out</c><00:06:20.319><c> of</c><00:06:20.479><c> bounds</c><00:06:20.960><c> right</c><00:06:21.360><c> because</c><00:06:21.600><c> if</c>

00:06:21.670 --> 00:06:21.680 align:start position:0%
might be out of bounds right because if
 

00:06:21.680 --> 00:06:22.230 align:start position:0%
might be out of bounds right because if
we<00:06:21.840><c> have</c><00:06:22.000><c> an</c>

00:06:22.230 --> 00:06:22.240 align:start position:0%
we have an
 

00:06:22.240 --> 00:06:24.550 align:start position:0%
we have an
odd<00:06:22.560><c> number</c><00:06:22.880><c> of</c><00:06:23.120><c> lists</c><00:06:24.160><c> and</c><00:06:24.319><c> we're</c>

00:06:24.550 --> 00:06:24.560 align:start position:0%
odd number of lists and we're
 

00:06:24.560 --> 00:06:26.230 align:start position:0%
odd number of lists and we're
incrementing<00:06:25.039><c> by</c><00:06:25.280><c> 2</c><00:06:25.520><c> each</c><00:06:25.759><c> time</c>

00:06:26.230 --> 00:06:26.240 align:start position:0%
incrementing by 2 each time
 

00:06:26.240 --> 00:06:28.390 align:start position:0%
incrementing by 2 each time
list<00:06:26.560><c> 2</c><00:06:26.880><c> could</c><00:06:27.120><c> be</c><00:06:27.360><c> null</c><00:06:27.600><c> so</c><00:06:27.759><c> we</c><00:06:27.840><c> have</c><00:06:28.000><c> to</c><00:06:28.160><c> check</c>

00:06:28.390 --> 00:06:28.400 align:start position:0%
list 2 could be null so we have to check
 

00:06:28.400 --> 00:06:31.029 align:start position:0%
list 2 could be null so we have to check
for<00:06:28.560><c> that</c><00:06:29.039><c> we'll</c><00:06:29.280><c> say</c><00:06:29.600><c> it's</c><00:06:29.919><c> lists</c><00:06:30.400><c> of</c><00:06:30.639><c> i</c>

00:06:31.029 --> 00:06:31.039 align:start position:0%
for that we'll say it's lists of i
 

00:06:31.039 --> 00:06:34.150 align:start position:0%
for that we'll say it's lists of i
plus<00:06:31.440><c> 1</c><00:06:32.000><c> the</c><00:06:32.160><c> adjacent</c><00:06:32.800><c> list</c><00:06:33.520><c> but</c><00:06:33.759><c> we</c><00:06:33.919><c> want</c><00:06:34.080><c> to</c>

00:06:34.150 --> 00:06:34.160 align:start position:0%
plus 1 the adjacent list but we want to
 

00:06:34.160 --> 00:06:35.029 align:start position:0%
plus 1 the adjacent list but we want to
make<00:06:34.400><c> sure</c>

00:06:35.029 --> 00:06:35.039 align:start position:0%
make sure
 

00:06:35.039 --> 00:06:39.110 align:start position:0%
make sure
so<00:06:35.360><c> if</c><00:06:36.720><c> i</c><00:06:37.039><c> plus</c><00:06:37.360><c> 1</c><00:06:37.680><c> is</c><00:06:37.919><c> in</c><00:06:38.240><c> bounds</c><00:06:38.720><c> so</c><00:06:38.880><c> we'll</c>

00:06:39.110 --> 00:06:39.120 align:start position:0%
so if i plus 1 is in bounds so we'll
 

00:06:39.120 --> 00:06:39.510 align:start position:0%
so if i plus 1 is in bounds so we'll
check

00:06:39.510 --> 00:06:39.520 align:start position:0%
check
 

00:06:39.520 --> 00:06:44.550 align:start position:0%
check
i<00:06:39.759><c> plus</c><00:06:40.160><c> 1</c><00:06:41.199><c> is</c><00:06:41.759><c> less</c><00:06:42.080><c> than</c><00:06:42.479><c> the</c><00:06:42.720><c> length</c>

00:06:44.550 --> 00:06:44.560 align:start position:0%
i plus 1 is less than the length
 

00:06:44.560 --> 00:06:47.590 align:start position:0%
i plus 1 is less than the length
of<00:06:44.720><c> the</c><00:06:44.880><c> list</c><00:06:45.520><c> then</c><00:06:45.919><c> we'll</c><00:06:46.080><c> do</c><00:06:46.240><c> that</c><00:06:46.560><c> otherwise</c>

00:06:47.590 --> 00:06:47.600 align:start position:0%
of the list then we'll do that otherwise
 

00:06:47.600 --> 00:06:49.830 align:start position:0%
of the list then we'll do that otherwise
we're<00:06:47.840><c> going</c><00:06:47.919><c> to</c><00:06:48.080><c> say</c><00:06:48.400><c> it's</c><00:06:48.800><c> none</c><00:06:49.440><c> if</c><00:06:49.680><c> it's</c>

00:06:49.830 --> 00:06:49.840 align:start position:0%
we're going to say it's none if it's
 

00:06:49.840 --> 00:06:50.629 align:start position:0%
we're going to say it's none if it's
none<00:06:50.080><c> that's</c><00:06:50.319><c> still</c>

00:06:50.629 --> 00:06:50.639 align:start position:0%
none that's still
 

00:06:50.639 --> 00:06:53.670 align:start position:0%
none that's still
okay<00:06:51.039><c> right</c><00:06:51.280><c> because</c><00:06:51.680><c> merging</c><00:06:52.560><c> one</c><00:06:52.960><c> non-null</c>

00:06:53.670 --> 00:06:53.680 align:start position:0%
okay right because merging one non-null
 

00:06:53.680 --> 00:06:55.670 align:start position:0%
okay right because merging one non-null
linked<00:06:54.000><c> list</c><00:06:54.319><c> and</c><00:06:54.479><c> one</c><00:06:54.800><c> null</c><00:06:55.039><c> linked</c><00:06:55.280><c> list</c><00:06:55.599><c> is</c>

00:06:55.670 --> 00:06:55.680 align:start position:0%
linked list and one null linked list is
 

00:06:55.680 --> 00:06:57.749 align:start position:0%
linked list and one null linked list is
perfectly<00:06:56.160><c> fine</c><00:06:56.479><c> we</c><00:06:56.560><c> can</c><00:06:56.720><c> still</c><00:06:56.960><c> do</c><00:06:57.199><c> that</c>

00:06:57.749 --> 00:06:57.759 align:start position:0%
perfectly fine we can still do that
 

00:06:57.759 --> 00:07:00.070 align:start position:0%
perfectly fine we can still do that
i<00:06:57.919><c> want</c><00:06:58.080><c> to</c><00:06:58.240><c> take</c><00:06:58.479><c> these</c><00:06:58.720><c> two</c><00:06:58.960><c> lists</c><00:06:59.759><c> merge</c>

00:07:00.070 --> 00:07:00.080 align:start position:0%
i want to take these two lists merge
 

00:07:00.080 --> 00:07:01.670 align:start position:0%
i want to take these two lists merge
them<00:07:00.319><c> together</c>

00:07:01.670 --> 00:07:01.680 align:start position:0%
them together
 

00:07:01.680 --> 00:07:03.670 align:start position:0%
them together
with<00:07:02.000><c> my</c><00:07:02.400><c> helper</c><00:07:02.800><c> function</c><00:07:03.120><c> which</c><00:07:03.360><c> i</c><00:07:03.440><c> haven't</c>

00:07:03.670 --> 00:07:03.680 align:start position:0%
with my helper function which i haven't
 

00:07:03.680 --> 00:07:07.189 align:start position:0%
with my helper function which i haven't
even<00:07:03.919><c> written</c><00:07:04.240><c> yet</c>

00:07:07.189 --> 00:07:07.199 align:start position:0%
 
 

00:07:07.199 --> 00:07:11.749 align:start position:0%
 
and<00:07:09.440><c> i</c><00:07:09.759><c> want</c><00:07:10.000><c> to</c><00:07:10.240><c> take</c><00:07:10.479><c> this</c><00:07:10.720><c> and</c><00:07:10.880><c> append</c><00:07:11.440><c> it</c><00:07:11.599><c> to</c>

00:07:11.749 --> 00:07:11.759 align:start position:0%
and i want to take this and append it to
 

00:07:11.759 --> 00:07:13.029 align:start position:0%
and i want to take this and append it to
our<00:07:12.000><c> merged</c><00:07:12.560><c> lists</c>

00:07:13.029 --> 00:07:13.039 align:start position:0%
our merged lists
 

00:07:13.039 --> 00:07:15.909 align:start position:0%
our merged lists
variable<00:07:13.520><c> over</c><00:07:13.759><c> here</c><00:07:14.160><c> where</c><00:07:14.400><c> we</c><00:07:14.639><c> are</c><00:07:14.880><c> storing</c>

00:07:15.909 --> 00:07:15.919 align:start position:0%
variable over here where we are storing
 

00:07:15.919 --> 00:07:18.070 align:start position:0%
variable over here where we are storing
the<00:07:16.080><c> lists</c><00:07:16.479><c> after</c><00:07:16.720><c> we</c><00:07:16.880><c> merge</c><00:07:17.199><c> them</c>

00:07:18.070 --> 00:07:18.080 align:start position:0%
the lists after we merge them
 

00:07:18.080 --> 00:07:20.150 align:start position:0%
the lists after we merge them
this<00:07:18.319><c> is</c><00:07:18.479><c> the</c><00:07:18.639><c> way</c><00:07:18.880><c> i</c><00:07:19.039><c> like</c><00:07:19.199><c> to</c><00:07:19.360><c> do</c><00:07:19.520><c> it</c><00:07:19.680><c> but</c><00:07:19.919><c> i've</c>

00:07:20.150 --> 00:07:20.160 align:start position:0%
this is the way i like to do it but i've
 

00:07:20.160 --> 00:07:21.830 align:start position:0%
this is the way i like to do it but i've
seen<00:07:20.319><c> people</c><00:07:20.560><c> do</c><00:07:20.720><c> it</c><00:07:20.880><c> a</c><00:07:20.960><c> different</c><00:07:21.199><c> way</c>

00:07:21.830 --> 00:07:21.840 align:start position:0%
seen people do it a different way
 

00:07:21.840 --> 00:07:24.870 align:start position:0%
seen people do it a different way
but<00:07:22.160><c> now</c><00:07:22.479><c> so</c><00:07:22.720><c> we</c><00:07:22.880><c> want</c><00:07:23.199><c> to</c><00:07:23.599><c> update</c><00:07:24.240><c> our</c><00:07:24.479><c> lists</c>

00:07:24.870 --> 00:07:24.880 align:start position:0%
but now so we want to update our lists
 

00:07:24.880 --> 00:07:26.950 align:start position:0%
but now so we want to update our lists
variable<00:07:25.440><c> because</c><00:07:25.680><c> that's</c><00:07:26.000><c> where</c><00:07:26.160><c> we're</c>

00:07:26.950 --> 00:07:26.960 align:start position:0%
variable because that's where we're
 

00:07:26.960 --> 00:07:28.950 align:start position:0%
variable because that's where we're
uh<00:07:27.440><c> you</c><00:07:27.520><c> know</c><00:07:27.680><c> actually</c><00:07:28.080><c> getting</c><00:07:28.479><c> our</c><00:07:28.639><c> lists</c>

00:07:28.950 --> 00:07:28.960 align:start position:0%
uh you know actually getting our lists
 

00:07:28.960 --> 00:07:30.950 align:start position:0%
uh you know actually getting our lists
from<00:07:29.120><c> so</c><00:07:29.280><c> i'm</c><00:07:29.360><c> going</c><00:07:29.520><c> to</c><00:07:29.759><c> update</c><00:07:30.160><c> it</c><00:07:30.400><c> with</c>

00:07:30.950 --> 00:07:30.960 align:start position:0%
from so i'm going to update it with
 

00:07:30.960 --> 00:07:34.070 align:start position:0%
from so i'm going to update it with
merged<00:07:31.680><c> lists</c><00:07:32.560><c> so</c><00:07:32.800><c> merge</c><00:07:33.199><c> list</c><00:07:33.520><c> is</c><00:07:33.680><c> basically</c>

00:07:34.070 --> 00:07:34.080 align:start position:0%
merged lists so merge list is basically
 

00:07:34.080 --> 00:07:35.990 align:start position:0%
merged lists so merge list is basically
like<00:07:34.319><c> a</c><00:07:34.400><c> temporary</c><00:07:34.960><c> variable</c>

00:07:35.990 --> 00:07:36.000 align:start position:0%
like a temporary variable
 

00:07:36.000 --> 00:07:37.350 align:start position:0%
like a temporary variable
and<00:07:36.160><c> of</c><00:07:36.240><c> course</c><00:07:36.479><c> we're</c><00:07:36.639><c> going</c><00:07:36.720><c> to</c><00:07:36.880><c> keep</c><00:07:37.120><c> doing</c>

00:07:37.350 --> 00:07:37.360 align:start position:0%
and of course we're going to keep doing
 

00:07:37.360 --> 00:07:39.270 align:start position:0%
and of course we're going to keep doing
that<00:07:37.520><c> until</c><00:07:37.840><c> there's</c><00:07:38.080><c> only</c><00:07:38.319><c> one</c><00:07:38.560><c> list</c><00:07:38.880><c> left</c>

00:07:39.270 --> 00:07:39.280 align:start position:0%
that until there's only one list left
 

00:07:39.280 --> 00:07:41.909 align:start position:0%
that until there's only one list left
and<00:07:39.360><c> then</c><00:07:39.599><c> we're</c><00:07:39.759><c> going</c><00:07:39.840><c> to</c><00:07:40.000><c> return</c><00:07:40.479><c> that</c><00:07:40.720><c> list</c>

00:07:41.909 --> 00:07:41.919 align:start position:0%
and then we're going to return that list
 

00:07:41.919 --> 00:07:42.790 align:start position:0%
and then we're going to return that list
so<00:07:42.160><c> list</c>

00:07:42.790 --> 00:07:42.800 align:start position:0%
so list
 

00:07:42.800 --> 00:07:46.550 align:start position:0%
so list
of<00:07:43.440><c> zero</c><00:07:44.560><c> so</c><00:07:45.199><c> see</c><00:07:45.520><c> that</c><00:07:45.759><c> really</c><00:07:46.080><c> wasn't</c>

00:07:46.550 --> 00:07:46.560 align:start position:0%
of zero so see that really wasn't
 

00:07:46.560 --> 00:07:48.950 align:start position:0%
of zero so see that really wasn't
too<00:07:46.879><c> bad</c><00:07:47.120><c> i</c><00:07:47.199><c> mean</c><00:07:47.360><c> you</c><00:07:47.520><c> might</c><00:07:48.080><c> uh</c><00:07:48.319><c> kind</c><00:07:48.479><c> of</c>

00:07:48.950 --> 00:07:48.960 align:start position:0%
too bad i mean you might uh kind of
 

00:07:48.960 --> 00:07:50.469 align:start position:0%
too bad i mean you might uh kind of
struggle<00:07:49.280><c> with</c><00:07:49.520><c> a</c><00:07:49.680><c> little</c><00:07:49.840><c> bit</c><00:07:49.919><c> of</c><00:07:50.080><c> the</c><00:07:50.160><c> edge</c>

00:07:50.469 --> 00:07:50.479 align:start position:0%
struggle with a little bit of the edge
 

00:07:50.479 --> 00:07:52.390 align:start position:0%
struggle with a little bit of the edge
cases<00:07:50.800><c> that's</c><00:07:51.039><c> perfectly</c><00:07:51.599><c> fine</c><00:07:51.840><c> but</c><00:07:52.000><c> once</c><00:07:52.240><c> you</c>

00:07:52.390 --> 00:07:52.400 align:start position:0%
cases that's perfectly fine but once you
 

00:07:52.400 --> 00:07:54.150 align:start position:0%
cases that's perfectly fine but once you
get<00:07:52.560><c> the</c><00:07:52.800><c> idea</c><00:07:53.120><c> you</c><00:07:53.280><c> see</c><00:07:53.440><c> it's</c><00:07:53.680><c> really</c><00:07:53.919><c> not</c>

00:07:54.150 --> 00:07:54.160 align:start position:0%
get the idea you see it's really not
 

00:07:54.160 --> 00:07:56.150 align:start position:0%
get the idea you see it's really not
that<00:07:54.319><c> bad</c><00:07:54.639><c> now</c><00:07:54.800><c> we've</c><00:07:55.039><c> reduced</c><00:07:55.599><c> it</c><00:07:55.840><c> to</c>

00:07:56.150 --> 00:07:56.160 align:start position:0%
that bad now we've reduced it to
 

00:07:56.160 --> 00:07:58.070 align:start position:0%
that bad now we've reduced it to
an<00:07:56.319><c> easy</c><00:07:56.639><c> problem</c><00:07:56.960><c> we</c><00:07:57.120><c> know</c><00:07:57.280><c> how</c><00:07:57.440><c> to</c><00:07:57.520><c> merge</c><00:07:57.840><c> two</c>

00:07:58.070 --> 00:07:58.080 align:start position:0%
an easy problem we know how to merge two
 

00:07:58.080 --> 00:07:59.670 align:start position:0%
an easy problem we know how to merge two
linked<00:07:58.400><c> lists</c><00:07:58.720><c> i've</c><00:07:58.879><c> done</c><00:07:59.120><c> it</c><00:07:59.199><c> before</c><00:07:59.440><c> in</c><00:07:59.520><c> a</c>

00:07:59.670 --> 00:07:59.680 align:start position:0%
linked lists i've done it before in a
 

00:07:59.680 --> 00:08:00.790 align:start position:0%
linked lists i've done it before in a
video<00:07:59.919><c> but</c><00:08:00.080><c> i'll</c>

00:08:00.790 --> 00:08:00.800 align:start position:0%
video but i'll
 

00:08:00.800 --> 00:08:02.950 align:start position:0%
video but i'll
type<00:08:01.039><c> it</c><00:08:01.120><c> out</c><00:08:01.280><c> again</c><00:08:01.520><c> really</c><00:08:01.759><c> quickly</c><00:08:02.720><c> and</c>

00:08:02.950 --> 00:08:02.960 align:start position:0%
type it out again really quickly and
 

00:08:02.960 --> 00:08:04.710 align:start position:0%
type it out again really quickly and
maybe<00:08:03.280><c> if</c><00:08:03.360><c> you're</c><00:08:03.599><c> lucky</c><00:08:03.919><c> your</c><00:08:04.160><c> interviewer</c>

00:08:04.710 --> 00:08:04.720 align:start position:0%
maybe if you're lucky your interviewer
 

00:08:04.720 --> 00:08:06.070 align:start position:0%
maybe if you're lucky your interviewer
won't<00:08:04.960><c> even</c><00:08:05.199><c> want</c><00:08:05.520><c> you</c><00:08:05.759><c> to</c>

00:08:06.070 --> 00:08:06.080 align:start position:0%
won't even want you to
 

00:08:06.080 --> 00:08:09.270 align:start position:0%
won't even want you to
merge<00:08:06.400><c> the</c><00:08:06.639><c> list</c><00:08:07.039><c> anyway</c><00:08:08.160><c> but</c>

00:08:09.270 --> 00:08:09.280 align:start position:0%
merge the list anyway but
 

00:08:09.280 --> 00:08:11.670 align:start position:0%
merge the list anyway but
let<00:08:09.440><c> me</c><00:08:09.599><c> go</c><00:08:09.759><c> ahead</c><00:08:10.240><c> and</c><00:08:10.639><c> show</c><00:08:10.960><c> off</c><00:08:11.199><c> and</c><00:08:11.360><c> try</c><00:08:11.520><c> to</c>

00:08:11.670 --> 00:08:11.680 align:start position:0%
let me go ahead and show off and try to
 

00:08:11.680 --> 00:08:13.430 align:start position:0%
let me go ahead and show off and try to
speedrun<00:08:12.160><c> it</c><00:08:12.240><c> and</c><00:08:12.400><c> hopefully</c><00:08:12.720><c> not</c><00:08:12.960><c> have</c><00:08:13.120><c> a</c><00:08:13.199><c> bug</c>

00:08:13.430 --> 00:08:13.440 align:start position:0%
speedrun it and hopefully not have a bug
 

00:08:13.440 --> 00:08:23.990 align:start position:0%
speedrun it and hopefully not have a bug
and<00:08:13.599><c> embarrass</c><00:08:14.000><c> myself</c>

00:08:23.990 --> 00:08:24.000 align:start position:0%
 
 

00:08:24.000 --> 00:08:25.830 align:start position:0%
 
and<00:08:24.400><c> i'm</c><00:08:24.560><c> speedrunning</c><00:08:25.120><c> it</c><00:08:25.199><c> i'm</c><00:08:25.360><c> showing</c><00:08:25.680><c> off</c>

00:08:25.830 --> 00:08:25.840 align:start position:0%
and i'm speedrunning it i'm showing off
 

00:08:25.840 --> 00:08:27.510 align:start position:0%
and i'm speedrunning it i'm showing off
but<00:08:26.000><c> i</c><00:08:26.080><c> literally</c><00:08:26.479><c> solved</c><00:08:26.879><c> this</c><00:08:27.120><c> problem</c>

00:08:27.510 --> 00:08:27.520 align:start position:0%
but i literally solved this problem
 

00:08:27.520 --> 00:08:30.150 align:start position:0%
but i literally solved this problem
right<00:08:27.680><c> before</c><00:08:28.000><c> i</c><00:08:28.080><c> recorded</c><00:08:28.479><c> this</c><00:08:28.720><c> video</c><00:08:29.120><c> so</c>

00:08:30.150 --> 00:08:30.160 align:start position:0%
right before i recorded this video so
 

00:08:30.160 --> 00:08:59.110 align:start position:0%
right before i recorded this video so
uh<00:08:30.319><c> it's</c><00:08:30.560><c> not</c><00:08:30.720><c> really</c><00:08:31.520><c> a</c><00:08:31.840><c> show</c><00:08:38.839><c> off</c>

00:08:59.110 --> 00:08:59.120 align:start position:0%
 
 

00:08:59.120 --> 00:09:01.350 align:start position:0%
 
i'm<00:08:59.519><c> br</c><00:08:59.839><c> i'm</c><00:09:00.080><c> basically</c><00:09:00.480><c> typing</c><00:09:00.880><c> basically</c>

00:09:01.350 --> 00:09:01.360 align:start position:0%
i'm br i'm basically typing basically
 

00:09:01.360 --> 00:09:03.829 align:start position:0%
i'm br i'm basically typing basically
off<00:09:01.600><c> of</c><00:09:01.760><c> memory</c><00:09:02.320><c> so</c>

00:09:03.829 --> 00:09:03.839 align:start position:0%
off of memory so
 

00:09:03.839 --> 00:09:09.990 align:start position:0%
off of memory so
just<00:09:04.240><c> get</c><00:09:04.399><c> this</c><00:09:04.640><c> over</c><00:09:06.839><c> with</c>

00:09:09.990 --> 00:09:10.000 align:start position:0%
 
 

00:09:10.000 --> 00:09:13.350 align:start position:0%
 
and<00:09:10.240><c> i'm</c><00:09:10.480><c> a</c><00:09:10.560><c> super</c><00:09:10.880><c> slow</c><00:09:11.200><c> typer</c><00:09:12.480><c> once</c><00:09:12.720><c> you</c><00:09:12.880><c> guys</c>

00:09:13.350 --> 00:09:13.360 align:start position:0%
and i'm a super slow typer once you guys
 

00:09:13.360 --> 00:09:15.590 align:start position:0%
and i'm a super slow typer once you guys
honestly<00:09:13.760><c> once</c><00:09:14.080><c> you</c><00:09:14.240><c> guys</c><00:09:14.959><c> practice</c><00:09:15.360><c> enough</c>

00:09:15.590 --> 00:09:15.600 align:start position:0%
honestly once you guys practice enough
 

00:09:15.600 --> 00:09:17.030 align:start position:0%
honestly once you guys practice enough
lead<00:09:15.760><c> code</c><00:09:16.000><c> you'll</c><00:09:16.160><c> probably</c><00:09:16.399><c> be</c><00:09:16.480><c> 10</c><00:09:16.720><c> times</c>

00:09:17.030 --> 00:09:17.040 align:start position:0%
lead code you'll probably be 10 times
 

00:09:17.040 --> 00:09:20.550 align:start position:0%
lead code you'll probably be 10 times
better<00:09:17.279><c> than</c><00:09:17.440><c> me</c><00:09:17.600><c> and</c><00:09:17.760><c> wonder</c>

00:09:20.550 --> 00:09:20.560 align:start position:0%
 
 

00:09:20.560 --> 00:09:25.670 align:start position:0%
 
okay<00:09:20.959><c> so</c><00:09:21.440><c> let's</c><00:09:23.160><c> dummy.</c>

00:09:25.670 --> 00:09:25.680 align:start position:0%
okay so let's dummy.
 

00:09:25.680 --> 00:09:28.070 align:start position:0%
okay so let's dummy.
okay<00:09:26.320><c> and</c><00:09:26.560><c> once</c><00:09:26.880><c> again</c><00:09:27.200><c> let</c><00:09:27.360><c> me</c><00:09:27.519><c> prove</c><00:09:27.920><c> to</c>

00:09:28.070 --> 00:09:28.080 align:start position:0%
okay and once again let me prove to
 

00:09:28.080 --> 00:09:33.509 align:start position:0%
okay and once again let me prove to
myself<00:09:28.640><c> that</c><00:09:28.800><c> i</c><00:09:28.880><c> don't</c><00:09:29.120><c> have</c><00:09:29.279><c> any</c><00:09:29.600><c> bugs</c>

00:09:33.509 --> 00:09:33.519 align:start position:0%
 
 

00:09:33.519 --> 00:09:37.910 align:start position:0%
 
and<00:09:33.760><c> i</c><00:09:33.920><c> do</c><00:09:34.240><c> so</c><00:09:34.640><c> okay</c><00:09:34.880><c> so</c><00:09:35.440><c> it</c><00:09:35.600><c> was</c><00:09:35.839><c> pretty</c><00:09:36.080><c> small</c>

00:09:37.910 --> 00:09:37.920 align:start position:0%
and i do so okay so it was pretty small
 

00:09:37.920 --> 00:09:42.389 align:start position:0%
and i do so okay so it was pretty small
uh<00:09:38.240><c> merged</c><00:09:39.040><c> lists</c><00:09:40.480><c> dot</c><00:09:40.800><c> append</c>

00:09:42.389 --> 00:09:42.399 align:start position:0%
uh merged lists dot append
 

00:09:42.399 --> 00:09:44.470 align:start position:0%
uh merged lists dot append
we're<00:09:42.560><c> appending</c><00:09:43.120><c> to</c><00:09:43.360><c> the</c><00:09:43.519><c> output</c><00:09:44.240><c> or</c>

00:09:44.470 --> 00:09:44.480 align:start position:0%
we're appending to the output or
 

00:09:44.480 --> 00:09:45.990 align:start position:0%
we're appending to the output or
appending<00:09:44.800><c> to</c><00:09:44.959><c> this</c><00:09:45.200><c> list</c>

00:09:45.990 --> 00:09:46.000 align:start position:0%
appending to this list
 

00:09:46.000 --> 00:09:49.269 align:start position:0%
appending to this list
and<00:09:46.320><c> hopefully</c><00:09:46.800><c> that</c><00:09:47.120><c> is</c><00:09:47.360><c> good</c><00:09:47.600><c> enough</c><00:09:48.560><c> okay</c>

00:09:49.269 --> 00:09:49.279 align:start position:0%
and hopefully that is good enough okay
 

00:09:49.279 --> 00:09:52.630 align:start position:0%
and hopefully that is good enough okay
of<00:09:49.440><c> course</c><00:09:49.760><c> i</c><00:09:49.920><c> get</c><00:09:50.320><c> messed</c><00:09:50.720><c> up</c><00:09:51.040><c> with</c><00:09:51.279><c> the</c><00:09:51.519><c> typos</c>

00:09:52.630 --> 00:09:52.640 align:start position:0%
of course i get messed up with the typos
 

00:09:52.640 --> 00:09:55.750 align:start position:0%
of course i get messed up with the typos
merged<00:09:53.120><c> list</c><00:09:54.320><c> i</c><00:09:54.480><c> guess</c><00:09:54.720><c> the</c><00:09:54.959><c> confusing</c><00:09:55.519><c> part</c>

00:09:55.750 --> 00:09:55.760 align:start position:0%
merged list i guess the confusing part
 

00:09:55.760 --> 00:09:57.590 align:start position:0%
merged list i guess the confusing part
was<00:09:55.920><c> that</c><00:09:56.080><c> this</c><00:09:56.320><c> variable</c><00:09:56.720><c> name</c><00:09:57.040><c> is</c>

00:09:57.590 --> 00:09:57.600 align:start position:0%
was that this variable name is
 

00:09:57.600 --> 00:10:01.110 align:start position:0%
was that this variable name is
pretty<00:09:57.920><c> similar</c><00:09:58.320><c> to</c><00:09:58.480><c> this</c><00:09:59.440><c> function</c><00:09:59.920><c> name</c>

00:10:01.110 --> 00:10:01.120 align:start position:0%
pretty similar to this function name
 

00:10:01.120 --> 00:10:02.870 align:start position:0%
pretty similar to this function name
probably<00:10:02.000><c> should</c><00:10:02.240><c> have</c><00:10:02.320><c> done</c><00:10:02.480><c> it</c><00:10:02.560><c> a</c><00:10:02.640><c> little</c>

00:10:02.870 --> 00:10:02.880 align:start position:0%
probably should have done it a little
 

00:10:02.880 --> 00:10:04.870 align:start position:0%
probably should have done it a little
differently

00:10:04.870 --> 00:10:04.880 align:start position:0%
differently
 

00:10:04.880 --> 00:10:07.990 align:start position:0%
differently
okay<00:10:05.120><c> but</c><00:10:05.360><c> it</c><00:10:05.440><c> does</c><00:10:05.680><c> work</c><00:10:06.240><c> so</c><00:10:06.800><c> hopefully</c>

00:10:07.990 --> 00:10:08.000 align:start position:0%
okay but it does work so hopefully
 

00:10:08.000 --> 00:10:10.470 align:start position:0%
okay but it does work so hopefully
you<00:10:08.160><c> get</c><00:10:08.320><c> the</c><00:10:08.480><c> general</c><00:10:08.959><c> idea</c><00:10:09.920><c> it's</c><00:10:10.079><c> not</c><00:10:10.240><c> too</c>

00:10:10.470 --> 00:10:10.480 align:start position:0%
you get the general idea it's not too
 

00:10:10.480 --> 00:10:11.670 align:start position:0%
you get the general idea it's not too
bad<00:10:10.640><c> of</c><00:10:10.800><c> a</c><00:10:10.959><c> problem</c>

00:10:11.670 --> 00:10:11.680 align:start position:0%
bad of a problem
 

00:10:11.680 --> 00:10:13.190 align:start position:0%
bad of a problem
there<00:10:11.839><c> are</c><00:10:12.079><c> actually</c><00:10:12.399><c> a</c><00:10:12.480><c> lot</c><00:10:12.640><c> of</c><00:10:12.720><c> ways</c><00:10:12.959><c> to</c>

00:10:13.190 --> 00:10:13.200 align:start position:0%
there are actually a lot of ways to
 

00:10:13.200 --> 00:10:16.069 align:start position:0%
there are actually a lot of ways to
solve<00:10:13.519><c> it</c><00:10:13.760><c> even</c><00:10:14.000><c> a</c><00:10:14.160><c> heap</c><00:10:14.399><c> solution</c>

00:10:16.069 --> 00:10:16.079 align:start position:0%
solve it even a heap solution
 

00:10:16.079 --> 00:10:18.150 align:start position:0%
solve it even a heap solution
but<00:10:16.240><c> i</c><00:10:16.399><c> think</c><00:10:16.959><c> kind</c><00:10:17.120><c> of</c><00:10:17.200><c> sticking</c><00:10:17.600><c> with</c><00:10:17.760><c> this</c>

00:10:18.150 --> 00:10:18.160 align:start position:0%
but i think kind of sticking with this
 

00:10:18.160 --> 00:10:19.350 align:start position:0%
but i think kind of sticking with this
is<00:10:18.399><c> fine</c>

00:10:19.350 --> 00:10:19.360 align:start position:0%
is fine
 

00:10:19.360 --> 00:10:21.269 align:start position:0%
is fine
but<00:10:19.760><c> thank</c><00:10:19.920><c> you</c><00:10:20.079><c> so</c><00:10:20.240><c> much</c><00:10:20.399><c> for</c><00:10:20.640><c> watching</c>

00:10:21.269 --> 00:10:21.279 align:start position:0%
but thank you so much for watching
 

00:10:21.279 --> 00:10:23.350 align:start position:0%
but thank you so much for watching
hopefully<00:10:21.680><c> this</c><00:10:21.839><c> was</c><00:10:22.000><c> helpful</c><00:10:22.399><c> if</c><00:10:22.480><c> you</c><00:10:22.640><c> have</c>

00:10:23.350 --> 00:10:23.360 align:start position:0%
hopefully this was helpful if you have
 

00:10:23.360 --> 00:10:24.870 align:start position:0%
hopefully this was helpful if you have
any<00:10:23.600><c> tips</c><00:10:23.839><c> and</c><00:10:23.920><c> tricks</c><00:10:24.160><c> you</c><00:10:24.320><c> can</c><00:10:24.399><c> feel</c><00:10:24.560><c> free</c><00:10:24.800><c> to</c>

00:10:24.870 --> 00:10:24.880 align:start position:0%
any tips and tricks you can feel free to
 

00:10:24.880 --> 00:10:26.550 align:start position:0%
any tips and tricks you can feel free to
share<00:10:25.120><c> them</c><00:10:25.200><c> with</c><00:10:25.360><c> me</c><00:10:25.680><c> and</c><00:10:26.000><c> feel</c><00:10:26.240><c> free</c><00:10:26.480><c> to</c>

00:10:26.550 --> 00:10:26.560 align:start position:0%
share them with me and feel free to
 

00:10:26.560 --> 00:10:27.110 align:start position:0%
share them with me and feel free to
suggest

00:10:27.110 --> 00:10:27.120 align:start position:0%
suggest
 

00:10:27.120 --> 00:10:28.870 align:start position:0%
suggest
any<00:10:27.360><c> other</c><00:10:27.680><c> problems</c><00:10:28.240><c> that</c><00:10:28.399><c> you</c><00:10:28.560><c> would</c><00:10:28.720><c> like</c>

00:10:28.870 --> 00:10:28.880 align:start position:0%
any other problems that you would like
 

00:10:28.880 --> 00:10:30.870 align:start position:0%
any other problems that you would like
me<00:10:29.040><c> to</c><00:10:29.200><c> solve</c><00:10:29.760><c> and</c><00:10:29.920><c> i'll</c><00:10:30.160><c> see</c><00:10:30.320><c> you</c>

00:10:30.870 --> 00:10:30.880 align:start position:0%
me to solve and i'll see you
 

00:10:30.880 --> 00:10:33.839 align:start position:0%
me to solve and i'll see you
pretty<00:10:31.200><c> soon</c><00:10:31.519><c> maybe</c>

